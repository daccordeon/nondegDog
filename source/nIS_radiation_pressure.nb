(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2548936,      48118]
NotebookOptionsPosition[   2534874,      47922]
NotebookOutlinePosition[   2535239,      47938]
CellTagsIndexPosition[   2535196,      47935]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Radiation pressure + back-action evasion for nondegenerate internal squeezing\
\
\>", "Text",
 CellChangeTimes->{{3.836608145765127*^9, 3.8366081624844303`*^9}, 
   3.836954525659338*^9},ExpressionUUID->"45536b2d-a4a5-4af5-902b-\
e0c4b447a39d"],

Cell["Attempt 1: Using Hamiltonian from Li et al, 2020", "Text",
 CellChangeTimes->{{3.836608145765127*^9, 
  3.8366081869249163`*^9}},ExpressionUUID->"ff483bee-ee34-4fed-95df-\
f190376ecfd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "the", " ", "code", " ", "in", " ", "this", " ", "cell", " ", "is", " ", 
     "from", " ", "Xiang", " ", "Li", " ", "by", " ", "personal", " ", 
     "correspondence"}], ",", " ", 
    RowBox[{
     RowBox[{
     "it", " ", "is", " ", "NOT", " ", "my", " ", "original", " ", "work", 
      " ", "and", " ", "my", " ", "GitHub", " ", "licence", " ", "does", " ", 
      "not", " ", "apply", " ", "to", " ", 
      RowBox[{
       RowBox[{"it", "!"}], " ", "--"}], " ", "James", " ", "Gardner", 
      "\[IndentingNewLine]", "g", " ", "is", " ", "\[Omega]s"}], "=", 
     RowBox[{"\[Kappa]", " ", "and", " ", "G", " ", "is", " ", "\[Chi]"}]}]}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"solnsc", "=", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "A1"}], 
          "\[Equal]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Gamma]"}], " ", "A1"}], " ", "+", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", " ", "\[Gamma]"}], "]"}], "u1"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "A2"}], " ", 
          "\[Equal]", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[Alpha]"}], "/", "\[HBar]"}], " ", 
            RowBox[{"(", 
             RowBox[{"X", "-", " ", 
              RowBox[{"L", " ", "h"}]}], ")"}]}], "-", 
           RowBox[{"\[Gamma]", " ", "A2"}], " ", "+", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", " ", "\[Gamma]"}], "]"}], "u2"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "X"}], " ", "==", 
          
          RowBox[{"P", "/", 
           RowBox[{"(", 
            RowBox[{"M", "/", "4"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "P"}], " ", 
          "\[Equal]", 
          RowBox[{"\[Alpha]", " ", "A1"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"A1", ",", "A2", ",", "X", ",", "P"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v2outsc", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"u2", "-", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"2", "\[Gamma]"}], "]"}], "A2"}]}], "/.", 
       RowBox[{"solnsc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "//", "Simplify"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"noise21sc", "=", 
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{"v2outsc", ",", "u1"}], "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noise22sc", "=", 
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{"v2outsc", ",", "u2"}], "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigsc", "=", 
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{"v2outsc", ",", "h"}], "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"screp", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", "500."}]}], ",", 
       RowBox[{"\[Omega]0", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", "3", " ", 
         RowBox[{
          RowBox[{"10", "^", "8"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ")"}]}]}]}], ",", 
       RowBox[{"\[HBar]", "\[Rule]", 
        RowBox[{"10", "^", 
         RowBox[{"-", "34"}]}]}], ",", 
       RowBox[{"\[CapitalOmega]", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", "f"}]}], ",", 
       RowBox[{"Pc", "\[Rule]", 
        RowBox[{"3", " ", 
         RowBox[{"10", "^", "6"}]}]}], ",", 
       RowBox[{"L", "\[Rule]", "4000"}], ",", 
       RowBox[{"c", " ", "\[Rule]", 
        RowBox[{"3", " ", 
         RowBox[{"10", "^", "8"}]}]}], ",", 
       RowBox[{"M", "\[Rule]", "200"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qnoisesc", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "noise21sc", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"Abs", "[", "noise22sc", "]"}], "^", "2"}]}], "]"}], "/", 
        RowBox[{"Abs", "[", "sigsc", "]"}]}], "/.", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "Pc", " ", "\[HBar]", " ", 
          RowBox[{"\[Omega]0", "/", 
           RowBox[{"(", 
            RowBox[{"L", " ", "c"}], ")"}]}]}], "]"}]}]}], "/.", "screp"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hsql", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"8", 
        RowBox[{"\[HBar]", "/", 
         RowBox[{"(", 
          RowBox[{"M", " ", 
           RowBox[{"\[CapitalOmega]", "^", "2"}], " ", 
           RowBox[{"L", "^", "2"}]}], ")"}]}]}], "]"}], "/.", "screp"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", "=", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "B1"}], 
          "\[Equal]", " ", 
          RowBox[{
           RowBox[{"G", " ", "C1"}], " ", "+", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", " ", "\[Gamma]"}], "]"}], " ", "u1"}], "+", " ", 
           RowBox[{"g", " ", "A1"}], " ", "-", 
           RowBox[{
            RowBox[{"(", "\[Gamma]", ")"}], " ", "B1"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "B2"}], 
          "\[Equal]", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"-", " ", "G"}], " ", "C2"}], "  ", "+", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", " ", "\[Gamma]"}], "]"}], " ", "u2"}], "+", 
           RowBox[{"g", " ", "A2"}], " ", "-", 
           RowBox[{
            RowBox[{"(", "\[Gamma]", ")"}], " ", "B2"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "C1"}], " ", 
          "\[Equal]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Gamma]m"}], " ", "C1"}], "+", " ", 
           RowBox[{"G", " ", "B1"}], "+", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", " ", "\[Gamma]m"}], "]"}], " ", "fc1"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "C2"}], " ", 
          "\[Equal]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Gamma]m"}], " ", "C2"}], "-", 
           RowBox[{"G", " ", "B2"}], "+", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", " ", "\[Gamma]m"}], "]"}], " ", "fc2"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "A1"}], 
          "\[Equal]", 
          RowBox[{
           RowBox[{"-", " ", "g"}], " ", "B1"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "A2"}], " ", 
          "\[Equal]", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "g"}], " ", "B2"}], "-", 
           RowBox[{
            RowBox[{"\[Alpha]", "/", "\[HBar]"}], " ", 
            RowBox[{"(", 
             RowBox[{"X", "-", " ", 
              RowBox[{"L", " ", "h"}]}], ")"}]}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "X"}], " ", "==", 
          
          RowBox[{"P", "/", 
           RowBox[{"(", 
            RowBox[{"M", "/", "4"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "P"}], " ", 
          "\[Equal]", 
          RowBox[{"\[Alpha]", " ", "A1"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "A1", ",", "A2", ",", "B1", ",", "B2", ",", "C1", ",", "C2", ",", "X",
          ",", "P"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v2out", "=", 
     RowBox[{
      RowBox[{"u2", "-", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "\[Gamma]"}], "]"}], "B2"}]}], "/.", 
      RowBox[{"soln", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"The", " ", "WLC", " ", "parts", " ", 
      RowBox[{"include", ":", 
       RowBox[{"quantum", " ", "noise", " ", "only"}]}]}], ",", 
     RowBox[{"thermal", " ", "noise"}], ",", 
     RowBox[{"and", " ", 
      RowBox[{"combined", "."}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"noise21", "=", 
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{"v2out", ",", "u1"}], "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noise22", "=", 
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{"v2out", ",", "u2"}], "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noise2t1", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{"v2out", ",", "fc1"}], "]"}], 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "kB", " ", 
         RowBox[{"Tenv", "/", 
          RowBox[{"(", 
           RowBox[{"\[HBar]", " ", "\[Omega]m"}], ")"}]}]}], "]"}]}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noise2t2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{"v2out", ",", "fc2"}], "]"}], 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "kB", " ", 
         RowBox[{"Tenv", "/", 
          RowBox[{"(", 
           RowBox[{"\[HBar]", " ", "\[Omega]m"}], ")"}]}]}], "]"}]}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sig", "=", 
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{"v2out", ",", "h"}], "]"}], "//", "Simplify"}]}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"wlcrep", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"g", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", "5000"}]}], 
       RowBox[{"(*", "6000", "*)"}], ",", 
       RowBox[{"G", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", "4930"}]}], 
       RowBox[{"(*", "5950", "*)"}], ",", 
       RowBox[{"\[Gamma]", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", "500."}]}], ",", 
       RowBox[{"\[Gamma]m", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", 
         RowBox[{
          RowBox[{"10", "^", "8"}], "/", 
          RowBox[{"(", " ", 
           RowBox[{"2", " ", "8", " ", 
            RowBox[{"10", "^", "9"}]}], ")"}]}]}]}], ",", 
       RowBox[{"\[Omega]m", "\[Rule]", 
        RowBox[{"2", " ", "Pi", "  ", 
         RowBox[{"10", "^", "8"}]}]}], ",", 
       RowBox[{"\[Omega]0", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", "3", " ", 
         RowBox[{
          RowBox[{"10", "^", "8"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ")"}]}]}]}], ",", 
       RowBox[{"\[HBar]", "\[Rule]", 
        RowBox[{"10", "^", 
         RowBox[{"-", "34"}]}]}], ",", 
       RowBox[{"Tenv", "\[Rule]", "4"}], ",", 
       RowBox[{"kB", "\[Rule]", 
        RowBox[{"1.38", " ", 
         RowBox[{"10", "^", 
          RowBox[{"-", "23"}]}]}]}], ",", 
       RowBox[{"\[CapitalOmega]", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", "f"}]}], ",", 
       RowBox[{"Pc", "\[Rule]", 
        RowBox[{"3", " ", 
         RowBox[{"10", "^", "6"}]}]}], ",", 
       RowBox[{"L", "\[Rule]", "4000"}], ",", 
       RowBox[{"c", " ", "\[Rule]", 
        RowBox[{"3", " ", 
         RowBox[{"10", "^", "8"}]}]}], ",", 
       RowBox[{"M", "\[Rule]", "200"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"qnoisebase", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", "noise21", "]"}], "^", "2"}], "+", 
           RowBox[{
            RowBox[{"Abs", "[", "noise22", "]"}], "^", "2"}]}], "]"}], "/", 
         RowBox[{"Abs", "[", "sig", "]"}]}], "/.", 
        RowBox[{"\[Alpha]", "\[Rule]", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"2", "Pc", " ", "\[HBar]", " ", 
           RowBox[{"\[Omega]0", "/", 
            RowBox[{"(", 
             RowBox[{"L", " ", "c"}], ")"}]}]}], "]"}]}]}], "/.", 
       "baserep"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qnoisewlc", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "noise21", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"Abs", "[", "noise22", "]"}], "^", "2"}]}], "]"}], "/", 
        RowBox[{"Abs", "[", "sig", "]"}]}], "/.", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "Pc", " ", "\[HBar]", " ", 
          RowBox[{"\[Omega]0", "/", 
           RowBox[{"(", 
            RowBox[{"L", " ", "c"}], ")"}]}]}], "]"}]}]}], "/.", "wlcrep"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thnoisewlc", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "noise2t1", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"Abs", "[", "noise2t2", "]"}], "^", "2"}]}], "]"}], "/", 
        RowBox[{"Abs", "[", "sig", "]"}]}], "/.", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "Pc", " ", "\[HBar]", " ", 
          RowBox[{"\[Omega]0", "/", 
           RowBox[{"(", 
            RowBox[{"L", " ", "c"}], ")"}]}]}], "]"}]}]}], "/.", "wlcrep"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalnoisewlc", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "noise21", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"Abs", "[", "noise22", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"Abs", "[", "noise2t1", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"Abs", "[", "noise2t2", "]"}], "^", "2"}]}], "]"}], "/", 
        RowBox[{"Abs", "[", "sig", "]"}]}], "/.", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "Pc", " ", "\[HBar]", " ", 
          RowBox[{"\[Omega]0", "/", 
           RowBox[{"(", 
            RowBox[{"L", " ", "c"}], ")"}]}]}], "]"}]}]}], "/.", "wlcrep"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hsql", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"8", 
        RowBox[{"\[HBar]", "/", 
         RowBox[{"(", 
          RowBox[{"M", " ", 
           RowBox[{"\[CapitalOmega]", "^", "2"}], " ", 
           RowBox[{"L", "^", "2"}]}], ")"}]}]}], "]"}], "/.", "wlcrep"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "clear", " ", "all", " ", "variables", " ", "except", " ", "for", " ", 
     RowBox[{"Li", "'"}], "s", " ", "functions"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "@@", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Names", "@", "\"\<`*\>\""}], ",", 
       RowBox[{
       "\"\<hsql\>\"", "|", "\"\<qnoisesc\>\"", "|", "\"\<qnoisewlc\>\"", 
        "|", "\"\<totalnoisewlc\>\""}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8425750118237743`*^9, 3.8425750130160513`*^9}, {
  3.842575297564416*^9, 3.842575364535263*^9}, {3.842575526119029*^9, 
  3.842575527303299*^9}, {3.842575703421772*^9, 3.842575712777699*^9}, {
  3.842575744998043*^9, 3.842575815112268*^9}, {3.843600516894046*^9, 
  3.8436005333518143`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"51ce2a0c-08ec-488b-af85-ece07d7a9c69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"setting", " ", "global", " ", "assumptions"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"$Assumptions", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"\[Gamma]a", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"\[Gamma]btot", "\[GreaterEqual]", "\[Gamma]R", ">", "0"}], 
       ",", 
       RowBox[{"\[Gamma]c", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"1", ">", "Rpd", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"\[Chi]", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"\[Omega]s", ">", "0"}], ",", 
       RowBox[{"\[Beta]", "\[Element]", "Reals"}], ",", 
       RowBox[{"\[Rho]RP", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"\[Rho]BAE", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"\[Alpha]OG", "\[Element]", "Reals"}], ",", 
       RowBox[{"\[Phi]", "\[Element]", "Reals"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"where", " ", "\[Beta]"}], "=", 
      FractionBox[
       RowBox[{"\[Alpha]GW", " ", "Larm"}], 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"1", "/", "2"}]], "\[HBar]"}]]}], ",", " ", 
     RowBox[{
      RowBox[{"\[Rho]RP", "=", 
       RowBox[{"\[Rho]BAE", "=", 
        FractionBox[
         SuperscriptBox["\[Alpha]GW", "2"], 
         RowBox[{
          SuperscriptBox["2", 
           RowBox[{"1", "/", "2"}]], "\[HBar]", " ", "\[Mu]"}]]}]}], ";"}]}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Id", "=", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "simplifying", " ", "upstream", " ", "to", " ", "better", " ", "the", " ",
      "end", " ", "result"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ma", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Gamma]a", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], "Id"}], 
      "+", 
      RowBox[{
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Rho]RP"}], 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"1", "/", "2"}]], 
         SuperscriptBox["\[CapitalOmega]", "2"]}]], 
       RowBox[{"(", GridBox[{
          {"1", "1"},
          {
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}]}
         }], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"invMa", "=", 
     RowBox[{
      RowBox[{"Inverse", "[", "Ma", "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mc", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Gamma]c", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], "Id"}], 
      "-", 
      RowBox[{
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Rho]BAE"}], 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"1", "/", "2"}]], 
         SuperscriptBox["\[CapitalOmega]", "2"]}]], 
       RowBox[{"(", GridBox[{
          {"1", "1"},
          {
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}]}
         }], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"invMc", "=", 
     RowBox[{
      RowBox[{"Inverse", "[", "Mc", "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mb", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Gamma]btot", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], "Id"}], 
      "+", 
      RowBox[{
       SuperscriptBox["\[Omega]s", "2"], 
       RowBox[{"Inverse", "[", "Ma", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["\[Chi]", "2"], 
       RowBox[{
        RowBox[{"(", GridBox[{
           {"0", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}], "]"}]}]},
           {
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}], "]"}]}], "0"}
          }], ")"}], ".", 
        RowBox[{"Inverse", "[", "Mc", "]"}], ".", 
        RowBox[{"(", GridBox[{
           {"0", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}], "]"}]}]},
           {
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}], "]"}]}], "0"}
          }], ")"}]}]}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"\[Phi]", " ", "free", " ", "in", " ", "Hamiltonian"}], ",", " ", 
     RowBox[{
      RowBox[{"recover", " ", "when", " ", "\[Phi]"}], "=", 
      FractionBox["\[Pi]", "2"]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TimeConstraint0", "=", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"invMb", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Inverse", "[", "Mb", "]"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", "TimeConstraint0"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalGamma]", "=", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["2", 
        RowBox[{"1", "/", "2"}]]], 
      RowBox[{"(", GridBox[{
         {"1", "1"},
         {
          RowBox[{"-", "\[ImaginaryI]"}], "\[ImaginaryI]"}
        }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rin", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "Rpd"}], ")"}], 
          RowBox[{"1", "/", "2"}]], 
         RowBox[{"\[CapitalGamma]", ".", 
          RowBox[{"(", 
           RowBox[{"Id", "-", 
            RowBox[{"2", " ", "\[Gamma]R", " ", "invMb"}]}], ")"}], ".", 
          RowBox[{"Inverse", "[", "\[CapitalGamma]", "]"}]}]}], ")"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", "TimeConstraint0"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rb", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "Rpd"}], ")"}], 
           RowBox[{"1", "/", "2"}]]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", "\[Gamma]R"}], ")"}], 
          RowBox[{"1", "/", "2"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]btot", "-", "\[Gamma]R"}], ")"}]}], ")"}], 
          RowBox[{"1", "/", "2"}]], 
         RowBox[{"\[CapitalGamma]", ".", " ", "invMb", ".", 
          RowBox[{"Inverse", "[", "\[CapitalGamma]", "]"}]}]}], ")"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", "TimeConstraint0"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ra", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "Rpd"}], ")"}], 
           RowBox[{"1", "/", "2"}]]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", "\[Gamma]R"}], ")"}], 
          RowBox[{"1", "/", "2"}]], "\[Omega]s", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", "\[Gamma]a"}], ")"}], 
          RowBox[{"1", "/", "2"}]], 
         RowBox[{"\[CapitalGamma]", ".", " ", "invMb", ".", "invMa", ".", 
          RowBox[{"Inverse", "[", "\[CapitalGamma]", "]"}]}]}], ")"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", "TimeConstraint0"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rc", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "Rpd"}], ")"}], 
           RowBox[{"1", "/", "2"}]]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", "\[Gamma]R"}], ")"}], 
          RowBox[{"1", "/", "2"}]], 
         RowBox[{"(", 
          RowBox[{"-", "\[Chi]"}], ")"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", "\[Gamma]c"}], ")"}], 
          RowBox[{"1", "/", "2"}]], 
         RowBox[{"\[CapitalGamma]", ".", "invMb", ".", 
          RowBox[{"(", GridBox[{
             {"0", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"Exp", "[", 
                RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}], "]"}]}]},
             {
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}], "]"}]}], "0"}
            }], ")"}], ".", "invMc", ".", 
          RowBox[{"Inverse", "[", "\[CapitalGamma]", "]"}]}]}], ")"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", "TimeConstraint0"}]}], "]"}]}], 
    ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"\[Phi]", " ", "free", " ", "in", " ", "Hamiltonian"}], ",", " ", 
     RowBox[{
      RowBox[{"recover", " ", "when", " ", "\[Phi]"}], "=", 
      FractionBox["\[Pi]", "2"]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "Rpd"}], ")"}], 
           RowBox[{"1", "/", "2"}]]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", "\[Gamma]R"}], ")"}], 
          RowBox[{"1", "/", "2"}]], "\[Omega]s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}], ")"}], 
         RowBox[{"\[CapitalGamma]", ".", " ", "invMb", ".", "invMa", ".", 
          RowBox[{"(", GridBox[{
             {"1", "0"},
             {"0", 
              RowBox[{"-", "1"}]}
            }], ")"}]}]}], ")"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", "TimeConstraint0"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"theorem", ":", " ", 
      RowBox[{
       RowBox[{
       "conjugation", " ", "commutes", " ", "with", " ", "any", " ", 
        "holomorphic", " ", "function", " ", "that", " ", "is", " ", "real"}],
        "-", 
       RowBox[{"valued", " ", "on", " ", "the", " ", "reals"}]}]}], ",", " ", 
     
     RowBox[{
     "which", " ", "is", " ", "all", " ", "the", " ", "functions", " ", "we", 
      " ", "care", " ", "about", " ", 
      RowBox[{"(", 
       RowBox[{"check", " ", 
        RowBox[{"this", "!"}]}], ")"}]}], ",", " ", 
     RowBox[{
     "use", " ", "FlipI", " ", "only", " ", "if", " ", "all", " ", 
      "variables", " ", "are", " ", "real"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"look", " ", "at"}], " ", "//", "FullForm"}], ",", " ", 
     RowBox[{
     "\[ImaginaryI]", " ", "is", " ", "not", " ", "present", " ", "in", " ", 
      "all", " ", "forms"}], ",", " ", 
     RowBox[{"sometimes", " ", "is", " ", "just", " ", 
      RowBox[{"Complex", "[", 
       RowBox[{"0", ",", "1"}], "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"\[RuleDelayed]", " ", 
     RowBox[{"is", " ", 
      RowBox[{
      "RuleDelayed", ":", " ", 
       "\"\<represents a rule that transforms lhs to rhs, evaluating rhs only \
after the rule is used. \>\""}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FlipI", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", "\[Rule]", 
        RowBox[{"-", "\[ImaginaryI]"}]}], ",", 
       RowBox[{
        RowBox[{"Complex", "[", 
         RowBox[{"RePart_", ",", "ImPart_"}], "]"}], "\[Rule]", 
        RowBox[{"Complex", "[", 
         RowBox[{"RePart", ",", 
          RowBox[{"-", "ImPart"}]}], "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "FlipI", " ", "should", " ", "catch", " ", "all", " ", "cases", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"check", " ", "this", " ", "with", " ", 
        RowBox[{"FullForm", "?"}]}], ",", " ", 
       RowBox[{
        RowBox[{"how", "?", " ", "--"}], ">", " ", 
        RowBox[{
        "will", " ", "not", " ", "work", " ", "through", " ", "Hold"}]}], ",",
        " ", 
       RowBox[{"so", " ", 
        RowBox[{"don", "'"}], "t", " ", "use", " ", "that"}]}], ")"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ConjugateFlipI", "=", 
     RowBox[{
      RowBox[{"Conjugate", "[", "f_", "]"}], ":>", 
      RowBox[{"(", 
       RowBox[{"f", "/.", "FlipI"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Sx", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Rpd", " ", "Id"}], "\[IndentingNewLine]", "+", 
          RowBox[{"Rin", ".", 
           RowBox[{"ConjugateTranspose", "[", "Rin", "]"}]}], 
          "\[IndentingNewLine]", "+", 
          RowBox[{"Ra", ".", 
           RowBox[{"ConjugateTranspose", "[", "Ra", "]"}]}], 
          "\[IndentingNewLine]", "+", 
          RowBox[{"Rb", ".", 
           RowBox[{"ConjugateTranspose", "[", "Rb", "]"}]}], 
          "\[IndentingNewLine]", "+", 
          RowBox[{"Rc", ".", 
           RowBox[{"ConjugateTranspose", "[", "Rc", "]"}]}]}], ")"}], "/.", 
        "ConjugateFlipI"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"signal", " ", "transfer", " ", "function", " ", "is", " ", 
        SubscriptBox["X", 
         RowBox[{"PD", ",", "2"}]], " ", "wrt", " ", "h", " ", "not", " ", 
        SubscriptBox[
         OverscriptBox["X", "\[RightVector]"], "PD"], " ", "wrt", " ", 
        RowBox[{
         OverscriptBox["h", "\[RightVector]"], " ", "--"}]}], ">", " ", 
       RowBox[{"factor", " ", "of", " ", "two", " ", "from", " ", 
        SubscriptBox[
         RowBox[{"(", 
          RowBox[{"T", ".", 
           RowBox[{"(", GridBox[{
              {"1"},
              {"1"}
             }], ")"}]}], ")"}], "22"], " ", "versus", " ", 
        SubscriptBox["T", "22"], "\[IndentingNewLine]", 
        RowBox[{"NB", ":", " ", 
         RowBox[{"another", " ", "subtlety", " ", "in", " ", "that", " ", 
          SubscriptBox["T", "21"]}]}]}]}], "=", 
      SubscriptBox["T", "22"]}], ",", " ", 
     RowBox[{"but", " ", "I", " ", 
      RowBox[{"don", "'"}], "t", " ", "know", " ", "if", " ", "this", " ", 
      "can", " ", "be", " ", "known", " ", "a", " ", "priori"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigTransfer", " ", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"T", ".", 
           RowBox[{"(", GridBox[{
              {"1"},
              {"1"}
             }], ")"}]}], ")"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}]}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "to", " ", "remove", " ", "atomic",
      " ", "brackets", " ", 
     RowBox[{"{", "...", "}"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigTransferAbs", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"ComplexExpand", "[", 
        RowBox[{"Abs", "[", "sigTransfer", "]"}], "]"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sh", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sx", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "/", 
        SuperscriptBox["sigTransferAbs", "2"]}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8366130065522327`*^9, 3.836613673173481*^9}, {
   3.83661481958047*^9, 3.836614873549387*^9}, {3.836615239531361*^9, 
   3.8366152889123163`*^9}, {3.836615556860571*^9, 3.8366155592289248`*^9}, {
   3.8366158672709713`*^9, 3.83661587036897*^9}, {3.8366162303465233`*^9, 
   3.836616322824772*^9}, {3.836616424344256*^9, 3.8366164789951973`*^9}, {
   3.836616510923563*^9, 3.836616530265674*^9}, 3.836851636200042*^9, {
   3.836851779011145*^9, 3.836851791333149*^9}, {3.8368518559221077`*^9, 
   3.83685186062533*^9}, {3.8368524125034122`*^9, 3.836852415816183*^9}, {
   3.836855798256124*^9, 3.83685590928542*^9}, {3.836855999156945*^9, 
   3.836856014567819*^9}, {3.836856833492722*^9, 3.836856834556452*^9}, {
   3.836857018473957*^9, 3.8368570463544292`*^9}, {3.836857175552248*^9, 
   3.8368571796712313`*^9}, {3.8368573857432747`*^9, 3.83685738672364*^9}, 
   3.836872778795781*^9, {3.837557704840966*^9, 3.837557705652945*^9}, {
   3.837557753381673*^9, 3.837557771499218*^9}, {3.837824989952128*^9, 
   3.837824992992565*^9}, {3.837825206363296*^9, 3.8378252336269608`*^9}, {
   3.8378253490015783`*^9, 3.8378253973440742`*^9}, {3.837825718333025*^9, 
   3.837825803029107*^9}, {3.8378259075888567`*^9, 3.83782591373167*^9}, {
   3.837825948667377*^9, 3.8378259492902803`*^9}, {3.8378260538591423`*^9, 
   3.837826099673765*^9}, {3.8380644710411777`*^9, 3.838064514639727*^9}, {
   3.83806460584437*^9, 3.838064609596458*^9}, {3.8381541956712837`*^9, 
   3.838154208745275*^9}, {3.8393698894349823`*^9, 3.839369898600535*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"474bcc37-a9a4-474e-993f-fb10ea120e2b"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,30,1,25739332365121157477,"Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247648229766*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"600500a9-5a97-4de0-a6b8-0bf97763c484"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","gtime",
   "\"Returning the simplest form found in the allowed time of \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds. Increasing the value of the \
TimeConstraint option may improve the result of simplification.\"",2,30,2,
   25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.8522476484260063`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"5c7e1896-cc4b-4be3-a662-f1c2a1f2b5c8"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,32,3,25739332365121157477,"Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247648534586*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"91984429-c9c4-4186-9b41-95c1e2b04331"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,32,4,25739332365121157477,"Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.85224764864491*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"d4c5ecf5-a590-4a9d-b594-26aed10b2031"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,32,5,25739332365121157477,"Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247648763514*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"abb7d8a9-4a77-4524-9519-3c8be967dfb9"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Simplify\\\", \
\\\"::\\\", \\\"time\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,32,6,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247648773271*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"41741870-9c1d-4b88-b92f-f20bfd61a260"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","gtime",
   "\"Returning the simplest form found in the allowed time of \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds. Increasing the value of the \
TimeConstraint option may improve the result of simplification.\"",2,32,7,
   25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.8522476494363623`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"7dee70c6-fc45-484c-b273-5d876707d13f"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,33,8,25739332365121157477,"Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.8522476495452538`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"ed7be683-b838-4651-be79-1c28d9b8da3c"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,33,9,25739332365121157477,"Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247649653235*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"2333edf4-0990-4ede-ba05-6f33586048dd"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","gtime",
   "\"Returning the simplest form found in the allowed time of \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds. Increasing the value of the \
TimeConstraint option may improve the result of simplification.\"",2,33,10,
   25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.85224765044202*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"9217bbcd-5b43-4b62-83f6-bd3feeebd99b"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,34,11,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247650560053*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"e25633bc-92f5-4db7-9159-e95d887bf3a7"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,34,12,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247650674953*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"cf025bca-cceb-4622-a9b6-c0e941c330f9"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,34,13,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247650788307*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"76429e47-7f8f-4c2b-a3c2-0d74895cfcdc"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Simplify\\\", \
\\\"::\\\", \\\"time\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,34,14,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247650827132*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"50e12088-de5b-4471-9243-54ce36210c2b"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","gtime",
   "\"Returning the simplest form found in the allowed time of \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds. Increasing the value of the \
TimeConstraint option may improve the result of simplification.\"",2,34,15,
   25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247651490991*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"725020ea-bd08-4fa9-8c2d-2a2c70fd9cf1"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,35,16,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.85224765160148*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"4c7c1a26-043a-4fb7-a570-d71e8b699c9a"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,35,17,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247651725616*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"6ce7c501-b790-4e4d-9f2e-1c616d5db574"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,35,18,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247651823086*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"59af48cf-c707-4cdb-98bd-3accfb6ce2c0"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Simplify\\\", \
\\\"::\\\", \\\"time\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,35,19,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247651866349*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"16fbaecc-6259-48f1-b022-b3c403581f87"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","gtime",
   "\"Returning the simplest form found in the allowed time of \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds. Increasing the value of the \
TimeConstraint option may improve the result of simplification.\"",2,35,20,
   25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247652504081*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"a20986ff-4cc0-49a3-9fe5-8f4fa189847a"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,36,21,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247652613358*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"01586d7a-88df-4118-ad82-c40d846facbf"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,36,22,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.85224765272338*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"9872cb06-71b3-472b-b479-fb367fc41c1a"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","gtime",
   "\"Returning the simplest form found in the allowed time of \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds. Increasing the value of the \
TimeConstraint option may improve the result of simplification.\"",2,36,23,
   25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247653516638*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"803795ee-4ca9-4525-b376-61979f1e7cb8"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds, and the transformation was \
aborted. Increasing the value of TimeConstraint option may improve the result \
of simplification.\"",2,39,24,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247654902068*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"6caa3bfc-0a6f-4b67-b1f2-eec9ad9737a7"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","gtime",
   "\"Returning the simplest form found in the allowed time of \
\\!\\(\\*RowBox[{\\\"5.`\\\"}]\\) seconds. Increasing the value of the \
TimeConstraint option may improve the result of simplification.\"",2,39,25,
   25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247659095139*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"05785bf5-0dfe-42f2-8bf2-7afe365d1bb7"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","gtime",
   "\"Returning the simplest form found in the allowed time of \
\\!\\(\\*RowBox[{\\\"5.`\\\"}]\\) seconds. Increasing the value of the \
TimeConstraint option may improve the result of simplification.\"",2,41,26,
   25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.8522476648349123`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"6c18f29e-d18b-440c-bf90-83f6d87cf5c1"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds, and the transformation was \
aborted. Increasing the value of TimeConstraint option may improve the result \
of simplification.\"",2,42,27,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247665951935*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"bf4cc7f6-8eaa-4da5-878a-cb6ef8e6fdc2"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds, and the transformation was \
aborted. Increasing the value of TimeConstraint option may improve the result \
of simplification.\"",2,42,28,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247667057755*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"65b3cdea-8f97-48e1-b570-c7f0065f9dad"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds, and the transformation was \
aborted. Increasing the value of TimeConstraint option may improve the result \
of simplification.\"",2,42,29,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247668156579*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"02215f86-b813-4bc7-809f-b17308c7123e"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Simplify\\\", \
\\\"::\\\", \\\"time\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,42,30,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.852247668185274*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"5d7b3656-445a-43b0-92be-c1f39b91a786"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","gtime",
   "\"Returning the simplest form found in the allowed time of \
\\!\\(\\*RowBox[{\\\"5.`\\\"}]\\) seconds. Increasing the value of the \
TimeConstraint option may improve the result of simplification.\"",2,42,31,
   25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8381471196730413`*^9, 3.838148662439252*^9, 3.838154223454904*^9, 
   3.838160876495736*^9, 3.838434038691877*^9, 3.8388520787860193`*^9, 
   3.8388521130635157`*^9, 3.838853217288603*^9, 3.838926507160707*^9, 
   3.839032956130218*^9, 3.839272434024053*^9, 3.839275534791802*^9, 
   3.839276610819668*^9, 3.839277311761827*^9, {3.839286409616886*^9, 
   3.839286421780418*^9}, 3.8393577047046833`*^9, 3.8393584274920073`*^9, 
   3.8393702586415854`*^9, 3.839376723978442*^9, 3.8394417787728653`*^9, 
   3.839448789145081*^9, 3.839448923052318*^9, 3.8395299173150673`*^9, 
   3.83954148406262*^9, 3.8396155726893063`*^9, 3.841276667134754*^9, 
   3.8412768426568727`*^9, 3.841343592027006*^9, 3.841345819358651*^9, 
   3.8413617196005917`*^9, 3.842488376298975*^9, 3.8425484566434183`*^9, 
   3.8425736951829453`*^9, 3.842575821801065*^9, 3.842812727154228*^9, 
   3.842995774945456*^9, 3.843086593452167*^9, 3.843599892702591*^9, 
   3.843617585457427*^9, 3.843617629212673*^9, 3.843885250260476*^9, 
   3.8438866849380198`*^9, 3.843887650399817*^9, 3.843887711792871*^9, {
   3.84397469255617*^9, 3.843974709167102*^9}, 3.8444772690359573`*^9, {
   3.847930312096303*^9, 3.847930337698588*^9}, 3.847992603121612*^9, 
   3.8480065651217413`*^9, 3.848012179966387*^9, 3.848014266842388*^9, {
   3.8509484948649282`*^9, 3.850948520510661*^9}, 3.8522476699093323`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"2729147a-7f3a-493f-b53f-97e645363f96"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"signal", " ", "transfer", " ", 
    RowBox[{"function", " ", "--"}], " ", "demonstration", " ", "of", " ", 
    "factor", " ", "of", " ", "two"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"T", ".", 
          RowBox[{"(", GridBox[{
             {"1"},
             {"1"}
            }], ")"}]}], ")"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Rho]RP", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Rho]BAE", "\[Rule]", "0"}], ",", 
        RowBox[{"Rpd", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Gamma]a", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Gamma]btot", "\[Rule]", "\[Gamma]R"}], ",", 
        RowBox[{"\[Gamma]c", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", 
         RowBox[{"-", "\[Alpha]OG"}]}], ",", 
        RowBox[{"\[Phi]", "\[Rule]", 
         FractionBox["\[Pi]", "2"]}]}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"T", ".", 
         RowBox[{"ConjugateTranspose", "[", "T", "]"}]}], ")"}], "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Rho]RP", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Rho]BAE", "\[Rule]", "0"}], ",", 
        RowBox[{"Rpd", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Gamma]a", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Gamma]btot", "\[Rule]", "\[Gamma]R"}], ",", 
        RowBox[{"\[Gamma]c", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", 
         RowBox[{"-", "\[Alpha]OG"}]}], ",", 
        RowBox[{"\[Phi]", "\[Rule]", 
         FractionBox["\[Pi]", "2"]}]}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<sig. transfer fn.: \>\"", ",", 
     RowBox[{"Simplify", "[", 
      RowBox[{"ComplexExpand", "[", 
       SuperscriptBox[
        RowBox[{"Abs", "[", "%%", "]"}], "2"], "]"}], "]"}], ",", 
     "\"\< vs \>\"", ",", " ", "%"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.836852422583626*^9, 3.836852446092558*^9}, {
   3.836852608926764*^9, 3.836852612853466*^9}, {3.836852670946411*^9, 
   3.836852695906394*^9}, {3.836853583920683*^9, 3.836853700033813*^9}, 
   3.836853795651004*^9, 3.836854294221211*^9, {3.8368556314624023`*^9, 
   3.836855791827155*^9}, {3.8368560406605167`*^9, 3.836856107995846*^9}, {
   3.836856275043109*^9, 3.836856347877851*^9}, {3.836856397181004*^9, 
   3.836856481102168*^9}, {3.836857061152836*^9, 3.836857066045846*^9}, {
   3.836961728026432*^9, 3.836961741177249*^9}, {3.8378254684397*^9, 
   3.837825476391045*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"30f0d068-9672-4682-bcd1-c84a629aa724"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"sig. transfer fn.: \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"4", " ", 
     SuperscriptBox["\[Alpha]OG", "2"], " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Omega]s", "2"]}], 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Gamma]R", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Chi]", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"], "-", 
        SuperscriptBox["\[Omega]s", "2"]}], ")"}], "2"]}]], 
   "\[InvisibleSpace]", "\<\" vs \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["\[Alpha]OG", "2"], " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Omega]s", "2"]}], 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Gamma]R", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Chi]", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"], "-", 
        SuperscriptBox["\[Omega]s", "2"]}], ")"}], "2"]}]]}],
  SequenceForm[
  "sig. transfer fn.: ", 
   4 $CellContext`\[Alpha]OG^2 $CellContext`\[Gamma]R \
$CellContext`\[Omega]s^2/($CellContext`\[Gamma]R^2 $CellContext`\
\[CapitalOmega]^2 + ($CellContext`\[Chi]^2 + $CellContext`\[CapitalOmega]^2 - \
$CellContext`\[Omega]s^2)^2), " vs ", 
   2 $CellContext`\[Alpha]OG^2 $CellContext`\[Gamma]R \
$CellContext`\[Omega]s^2/($CellContext`\[Gamma]R^2 $CellContext`\
\[CapitalOmega]^2 + ($CellContext`\[Chi]^2 + $CellContext`\[CapitalOmega]^2 - \
$CellContext`\[Omega]s^2)^2)],
  Editable->False]], "Print",
 CellChangeTimes->{3.836872551167296*^9, 3.836950170040132*^9, 
  3.836956076829505*^9, 3.836956221660268*^9, 3.8369566835497313`*^9, 
  3.8369618277996883`*^9, 3.837391819305853*^9, 3.837391863460082*^9, 
  3.837825533758614*^9, 3.8378260175349283`*^9, 3.8378261855836487`*^9, 
  3.83782765515759*^9, 3.838060351634817*^9, 3.838063503100753*^9, 
  3.838063874902152*^9, 3.83806479754948*^9, 3.838083675838278*^9, 
  3.83808387278745*^9, 3.8381469301573877`*^9, 3.838852135224609*^9, 
  3.838853240139512*^9, 3.8389265291420317`*^9, 3.839032979142898*^9, 
  3.839272456510703*^9, 3.839277333575758*^9, 3.839358450336166*^9, 
  3.8395299395012407`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"c22dc943-e600-426a-98a8-6046cf440c5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"R", ".", "P", ".", " ", "turned"}], " ", "off"}], ",", " ", 
    RowBox[{"but", " ", 
     RowBox[{"lossy", ":", "\[IndentingNewLine]", 
      RowBox[{
      "does", " ", "it", " ", "reduce", " ", "to", " ", "lossy", " ", 
       RowBox[{
        RowBox[{"sWLC", "?", " ", "yes"}], "!"}]}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sh", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Rho]RP", "\[Rule]", "0"}], ",", 
          RowBox[{"\[Rho]BAE", "\[Rule]", "0"}], ",", 
          RowBox[{"\[Beta]", "\[Rule]", 
           RowBox[{"-", "\[Alpha]OG"}]}], ",", 
          RowBox[{"\[Phi]", "\[Rule]", 
           FractionBox["\[Pi]", "2"]}]}], "}"}]}], "/.", "ConjugateFlipI"}], 
      ",", 
      RowBox[{"TimeConstraint", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}]}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"comparing", " ", "to", " ", 
     SuperscriptBox[
      RowBox[{"(", "ASDShsWLC", ")"}], "2"], " ", "from", " ", 
     RowBox[{"sWLC", ".", "nb"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PSDShsWLC", "=", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Gamma]c", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "4", 
        SuperscriptBox["\[Alpha]OG", "2"], 
        SuperscriptBox["\[Omega]s", "2"], "\[Gamma]R"}]], 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Gamma]btot", "-", 
              RowBox[{"2", "\[Gamma]R"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "-", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}], 
            SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["\[Omega]s", "2"], "\[Gamma]c"}], "-", 
           RowBox[{
            SuperscriptBox["\[Chi]", "2"], "\[Gamma]a"}]}], ")"}], "2"], 
        "\[IndentingNewLine]", "+", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Chi]", "2"], "-", 
            SuperscriptBox["\[Omega]s", "2"], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Gamma]btot", "-", 
               RowBox[{"2", "\[Gamma]R"}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}]}], "-", 
            RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], 
        "\[IndentingNewLine]", "+", 
        RowBox[{"4", "\[Gamma]R", " ", "\[Gamma]a", " ", 
         SuperscriptBox["\[Omega]s", "2"], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
        "\[IndentingNewLine]", "+", 
        RowBox[{"4", "\[Gamma]R", " ", "\[Gamma]b", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]a", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
        "\[IndentingNewLine]", "+", 
        RowBox[{"4", "\[Gamma]R", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]a", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
        "\[IndentingNewLine]", "+", 
        RowBox[{
         FractionBox["Rpd", 
          RowBox[{"1", "-", "Rpd"}]], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Gamma]btot", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "-", 
                 SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}], 
               SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
              RowBox[{
               SuperscriptBox["\[Omega]s", "2"], "\[Gamma]c"}], "-", 
              RowBox[{
               SuperscriptBox["\[Chi]", "2"], "\[Gamma]a"}]}], ")"}], "2"], 
           "\[IndentingNewLine]", "+", 
           RowBox[{
            SuperscriptBox["\[CapitalOmega]", "2"], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Chi]", "2"], "-", 
               SuperscriptBox["\[Omega]s", "2"], "-", 
               RowBox[{"\[Gamma]btot", 
                RowBox[{"(", 
                 RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}]}], "-", 
               RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "+", 
               SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}]}], 
          ")"}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"PSDShsWLC", "/.", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]b", "\[Rule]", 
        RowBox[{"\[Gamma]btot", "-", "\[Gamma]R"}]}], "}"}]}], ")"}], "//", 
    "FullSimplify"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Rad. pressure off, Sh reduces to lossy sWLC: \>\"", ",", 
     RowBox[{
      RowBox[{"ComplexExpand", "[", 
       RowBox[{"%%%", "\[Equal]", "%"}], "]"}], "//", "Simplify"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.836856675279872*^9, 3.836856731611006*^9}, {
   3.836856799991077*^9, 3.83685680084929*^9}, 3.836857071679143*^9, {
   3.836857932631248*^9, 3.836857933003357*^9}, {3.836858447635504*^9, 
   3.836858482127761*^9}, {3.8368587838765163`*^9, 3.8368587860779257`*^9}, {
   3.83685884536979*^9, 3.836858870011915*^9}, {3.837825480639597*^9, 
   3.837825482855657*^9}, {3.837825588575382*^9, 3.837825613121128*^9}, 
   3.837826028486014*^9, {3.837826226963785*^9, 3.837826290449534*^9}, {
   3.838060267863718*^9, 3.83806026873077*^9}, {3.838083794458498*^9, 
   3.8380838297902393`*^9}, {3.838153691414104*^9, 3.838153701096429*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"6fe9231a-e423-450e-8ffd-ff95966f8692"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
     SuperscriptBox["\[Alpha]OG", "2"], " ", "\[Gamma]R", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]c", "2"], "+", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
     SuperscriptBox["\[Omega]s", "2"]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]c", " ", 
         "\[Gamma]R", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]btot", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], ")"}]}], 
     "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]a", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "-", 
        RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.8368725585494823`*^9, 3.836950177210203*^9, 3.836956084035144*^9, 
   3.836956230451645*^9, 3.836956690842753*^9, {3.836961835091556*^9, 
   3.836961836103236*^9}, 3.837391826972704*^9, 3.837391870387453*^9, 
   3.837825578041511*^9, {3.8378256108244333`*^9, 3.837825624140091*^9}, 
   3.837826031653138*^9, 3.837826192705523*^9, {3.8378262427124443`*^9, 
   3.837826265400366*^9}, 3.837827661948606*^9, 3.838060356590228*^9, 
   3.838063508063068*^9, 3.838063879905409*^9, 3.8380648026899233`*^9, 
   3.838083681550798*^9, 3.8380838167620373`*^9, 3.838083873945788*^9, 
   3.838146931340522*^9, 3.8388521360543756`*^9, 3.838853240833763*^9, 
   3.8389265298219757`*^9, 3.839032979836814*^9, 3.839272457340322*^9, 
   3.83927733468531*^9, 3.8393584510824623`*^9, 3.839529940763516*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"04aabf19-f5e2-491d-881c-ebdb471494ce"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rad. pressure off, Sh reduces to lossy sWLC: \"\>", 
   "\[InvisibleSpace]", "True"}],
  SequenceForm["Rad. pressure off, Sh reduces to lossy sWLC: ", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.838083816777768*^9, 3.838083873961049*^9, 
  3.8381469313542*^9, 3.838852136073566*^9, 3.838853240847941*^9, 
  3.838926529835252*^9, 3.839032979859241*^9, 3.839272457354229*^9, 
  3.8392773347103024`*^9, 3.839358451104679*^9, 3.8395299408187304`*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"b4f11ea0-044a-4440-bb46-d4583417526f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "want", " ", "to", " ", "show", " ", "that", " ", "Sx", " ", "reduces", 
     " ", "to", " ", "lossy", " ", "sWLC", " ", 
     RowBox[{"(", 
      RowBox[{
      "in", " ", "order", " ", "to", " ", "inspect", " ", "the", " ", 
       "denom"}], ")"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"simplfying", " ", "assuming", " ", "\[Phi]"}], "=", 
     FractionBox["\[Pi]", "2"]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "have", " ", "to", " ", "start", " ", "further", " ", "back", " ", 
       "because", " ", "simplifying", " ", "Sx", " ", "takes", " ", "too", 
       " ", 
       RowBox[{"long", "\[IndentingNewLine]", "--"}]}], ">", " ", 
      RowBox[{
       RowBox[{"i", ".", "e", ".", " ", "applying"}], " ", 
       RowBox[{"Sx", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "/.", 
     RowBox[{"ConjugateRepl", " ", "just", " ", "hangs"}]}], ",", " ", 
    RowBox[{"so", " ", "use", " ", "ConjugateFlipI"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"all", " ", "variables", " ", "are", " ", "real"}], ",", " ", 
    RowBox[{"so", " ", 
     RowBox[{"tell", " ", ".", "nb"}], " ", "to", " ", "expand", " ", 
     "conjugates", " ", "just", " ", "based", " ", "on", " ", 
     "\[ImaginaryI]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Sx022", "=", 
     RowBox[{"Together", "[", 
      RowBox[{
       RowBox[{"Sx", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "/.", 
       RowBox[{"\[Phi]", "\[Rule]", 
        FractionBox["\[Pi]", "2"]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"Sx022num", "=", 
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Numerator", "[", "Sx022", "]"}], "//", "Expand"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Rho]RP", ",", "\[Rho]BAE"}], "}"}], ",", "FullSimplify"}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Sx022denom", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Denominator", "[", "Sx022", "]"}], "//", "Expand"}], "//", 
     "FullSimplify"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"check", " ", "that", " ", "manipulation", " ", 
     RowBox[{"hasn", "'"}], "t", " ", "changed", " ", "anything"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sx022", "\[Equal]", 
     FractionBox["Sx022num", "Sx022denom"]}], "//", "Simplify"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "showing", " ", "that", " ", "poles", " ", "are", " ", "preserved"}], 
     ",", " ", 
     RowBox[{
      RowBox[{"denom", " ", "is", " ", "similar", " ", 
       RowBox[{"enough", "\[IndentingNewLine]", "--"}]}], ">", " ", 
      RowBox[{
       RowBox[{
       "therefore", " ", "stability", " ", "is", " ", "the", " ", "same", " ",
         "and", " ", "pole"}], "-", 
       RowBox[{
       "defined", " ", "threshold", " ", "values", " ", "are", " ", "the", 
        " ", "same"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"prevDenom", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Gamma]a", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[Gamma]btot"}], " ", "\[Gamma]c"}], "+", 
             SuperscriptBox["\[Chi]", "2"]}], ")"}], "2"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Gamma]btot", "2"], "+", 
             SuperscriptBox["\[Gamma]c", "2"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Chi]", "2"]}]}], ")"}], " ", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
          SuperscriptBox["\[CapitalOmega]", "4"]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]a", " ", "\[Gamma]c", " ", 
           SuperscriptBox["\[Chi]", "2"]}], "-", 
          RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Gamma]c", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[CapitalOmega]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Gamma]c", "2"], "+", 
             SuperscriptBox["\[Chi]", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
        
        SuperscriptBox["\[Omega]s", "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Gamma]c", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
        SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Sx022denom", "\[Equal]", 
      RowBox[{
       SuperscriptBox["\[CapitalOmega]", "4"], 
       SuperscriptBox["prevDenom", "2"]}]}], ")"}], "//", "Simplify"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "completeness"}], ",", " ", 
     RowBox[{
     "should", " ", "show", " ", "this", " ", "for", " ", "\[Phi]", " ", 
      "free", " ", "but", " ", "this", " ", "will", " ", "be", " ", "tedious",
       " ", "and", " ", "should", " ", "follow", " ", "anyway"}]}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8378265847201157`*^9, 3.837826590844656*^9}, {
   3.837826713369871*^9, 3.8378267825407877`*^9}, {3.837826863787055*^9, 
   3.8378268743148623`*^9}, {3.837826917907838*^9, 3.8378269180505247`*^9}, {
   3.8378283445097446`*^9, 3.837828386185169*^9}, 3.837828423918324*^9, {
   3.837828903778914*^9, 3.837828917361083*^9}, {3.8380602101502123`*^9, 
   3.838060217489935*^9}, {3.838060254252411*^9, 3.838060263696835*^9}, {
   3.838061731916934*^9, 3.838061742795073*^9}, {3.838061787947693*^9, 
   3.838061888382546*^9}, {3.8380625449467487`*^9, 3.838062545557001*^9}, {
   3.8380626816918173`*^9, 3.83806271853588*^9}, {3.838063566609524*^9, 
   3.838063616962339*^9}, {3.8380636995548153`*^9, 3.8380637987869463`*^9}, {
   3.838064452145399*^9, 3.838064456211447*^9}, {3.838064716022518*^9, 
   3.838064741124178*^9}, {3.838153728177526*^9, 3.8381537427437773`*^9}, {
   3.838155410017104*^9, 3.838155423752068*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"60642c49-28eb-4952-a9b6-24849b5cb4d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "8"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
   SuperscriptBox["\[Rho]RP", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]c", "2"], "+", 
     SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
   SuperscriptBox["\[Omega]s", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Gamma]a", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Gamma]btot"}], " ", "\[Gamma]c"}], "+", 
           SuperscriptBox["\[Chi]", "2"]}], ")"}], "2"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]btot", "2"], "+", 
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Chi]", "2"]}]}], ")"}], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "4"]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "+", 
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}]}], ")"}]}], "-", 
  RowBox[{"8", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
   SuperscriptBox["\[Rho]BAE", "2"], " ", 
   SuperscriptBox["\[Chi]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]a", "2"], "+", 
     SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]btot", " ", "\[Gamma]c"}], "+", 
           SuperscriptBox["\[Chi]", "2"]}], ")"}]}], "+", 
        RowBox[{"\[Gamma]c", " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Gamma]btot", " ", "\[Gamma]c"}], "+", 
           SuperscriptBox["\[Chi]", "2"]}], ")"}]}], "-", 
        RowBox[{"2", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "+", 
     RowBox[{"\[Gamma]c", " ", 
      SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[CapitalOmega]", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Gamma]btot"}], " ", "\[Gamma]c"}], "+", 
           SuperscriptBox["\[Chi]", "2"]}], ")"}], "2"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]btot", "2"], "+", 
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Chi]", "2"]}]}], ")"}], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "4"]}], ")"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]a", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "-", 
        RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "4"]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]c", " ", 
         "\[Gamma]R", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]btot", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], ")"}]}], 
     "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]a", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "-", 
        RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}], "+", 
  RowBox[{"16", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
   "\[Rho]BAE", " ", "\[Rho]RP", " ", 
   SuperscriptBox["\[Chi]", "2"], " ", 
   SuperscriptBox["\[Omega]s", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Gamma]a", " ", 
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "\[Gamma]btot", " ", "\[Gamma]c"}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[Gamma]c", "2"]}], "+", 
        SuperscriptBox["\[Chi]", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Gamma]a", "2"], " ", "\[Gamma]c", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]btot", " ", "\[Gamma]c"}], "+", 
        SuperscriptBox["\[Chi]", "2"], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}]}], "+", 
     RowBox[{"\[Gamma]a", " ", 
      SuperscriptBox["\[Gamma]c", "2"], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["\[Gamma]c", "2"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        RowBox[{"\[Gamma]c", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
           SuperscriptBox["\[Omega]s", "2"]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.838063549801878*^9, 3.838063724415156*^9, 
  3.8380638153125343`*^9, 3.8380638922824993`*^9, 3.83806481554347*^9, 
  3.83808388324214*^9, 3.838146940534683*^9, 3.8381471501623096`*^9, 
  3.8381494442098513`*^9, 3.8381537616737127`*^9, 3.838155442525454*^9, 
  3.83816090245391*^9, 3.838852145285738*^9, 3.838853248313704*^9, 
  3.838926537341941*^9, 3.8390329873185453`*^9, 3.839272465898382*^9, 
  3.839277345016357*^9, 3.839358458614006*^9, 3.839529950565194*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"3185aa4e-3374-407f-a748-3a8a36f29d33"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[CapitalOmega]", "4"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Gamma]btot"}], " ", "\[Gamma]c"}], "+", 
           SuperscriptBox["\[Chi]", "2"]}], ")"}], "2"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]btot", "2"], "+", 
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Chi]", "2"]}]}], ")"}], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "4"]}], ")"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]a", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "-", 
        RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "4"]}]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{3.838063549801878*^9, 3.838063724415156*^9, 
  3.8380638153125343`*^9, 3.8380638922824993`*^9, 3.83806481554347*^9, 
  3.83808388324214*^9, 3.838146940534683*^9, 3.8381471501623096`*^9, 
  3.8381494442098513`*^9, 3.8381537616737127`*^9, 3.838155442525454*^9, 
  3.83816090245391*^9, 3.838852145285738*^9, 3.838853248313704*^9, 
  3.838926537341941*^9, 3.8390329873185453`*^9, 3.839272465898382*^9, 
  3.839277345016357*^9, 3.839358458614006*^9, 3.839529950888888*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"4c005290-1d56-4c14-85f6-af0326c7d863"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.838063549801878*^9, 3.838063724415156*^9, 
  3.8380638153125343`*^9, 3.8380638922824993`*^9, 3.83806481554347*^9, 
  3.83808388324214*^9, 3.838146940534683*^9, 3.8381471501623096`*^9, 
  3.8381494442098513`*^9, 3.8381537616737127`*^9, 3.838155442525454*^9, 
  3.83816090245391*^9, 3.838852145285738*^9, 3.838853248313704*^9, 
  3.838926537341941*^9, 3.8390329873185453`*^9, 3.839272465898382*^9, 
  3.839277345016357*^9, 3.839358458614006*^9, 3.839529954061697*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"f6d7a623-4974-4b55-9792-d1252be697fb"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.838063549801878*^9, 3.838063724415156*^9, 
  3.8380638153125343`*^9, 3.8380638922824993`*^9, 3.83806481554347*^9, 
  3.83808388324214*^9, 3.838146940534683*^9, 3.8381471501623096`*^9, 
  3.8381494442098513`*^9, 3.8381537616737127`*^9, 3.838155442525454*^9, 
  3.83816090245391*^9, 3.838852145285738*^9, 3.838853248313704*^9, 
  3.838926537341941*^9, 3.8390329873185453`*^9, 3.839272465898382*^9, 
  3.839277345016357*^9, 3.839358458614006*^9, 3.83952995406313*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"1a1f24fe-0f8e-4dac-ae38-60521065869a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "signal", " ", "transfer", " ", "function", " ", "is", " ", "indep", " ", 
     "of", " ", "RP", " ", "and", " ", "BAE", " ", "and", " ", "its", " ", 
     "denominator", " ", "is", " ", "exactly", " ", "that", " ", "from", " ", 
     "before"}], ",", "\[IndentingNewLine]", 
    RowBox[{"NB", ":", " ", 
     RowBox[{"this", " ", "is", " ", "for", " ", "the", " ", "h", " ", 
      RowBox[{"(", 
       RowBox[{"not", " ", 
        OverscriptBox["h", "\[RightVector]"]}], ")"}], " ", "defintion"}]}], 
    ",", " ", 
    RowBox[{
     RowBox[{"exactly", " ", "what", " ", "the", " ", 
      OverscriptBox["h", "\[RightVector]"], " ", "definition", " ", "would", 
      " ", "be", " ", "is", " ", 
      RowBox[{"unclear", "\[IndentingNewLine]", "--"}]}], ">", " ", 
     RowBox[{
     "the", " ", "key", " ", "difference", " ", "between", " ", "noise", " ", 
      "and", " ", "signal", " ", "is", " ", "that", " ", "for", " ", "the", 
      " ", "noise", " ", "the", " ", "inputs", " ", "are", " ", 
      "uncorrelated", " ", "quadratures", " ", "but", " ", "for", " ", "the", 
      " ", "signal", " ", "the", " ", "input", " ", "is", " ", "correlated", 
      " ", 
      OverscriptBox["h", "\[RightVector]"]}]}], ",", " ", 
    RowBox[{"we", " ", "could", " ", "do", " ", "everything", " ", "wrt", " ", 
     SubscriptBox["X", 
      RowBox[{"1", ",", "h"}]], " ", "instead", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"where", " ", 
        SubscriptBox["X", 
         RowBox[{"2", ",", "h"}]]}], "=", "0"}], ")"}], " ", "which", " ", 
     "would", " ", "yield", " ", "the", " ", "same", " ", "result", " ", "up",
      " ", "to", " ", "factors", " ", "of", " ", "2"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Phi]", "=", 
       FractionBox["\[Pi]", "2"]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"T0", "=", 
      RowBox[{"Together", "[", 
       RowBox[{
        SuperscriptBox["sigTransferAbs", "2"], "//", "Simplify"}], "]"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Denominator", "[", "T0", "]"}], "//", "FullSimplify"}], 
   "\[IndentingNewLine]", 
   RowBox[{"%", "\[Equal]", "prevDenom"}]}]}]], "Input",
 CellChangeTimes->{{3.838062799770999*^9, 3.838062953814632*^9}, {
  3.8380630711102943`*^9, 3.838063181890987*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"ee811092-1183-4cbd-819b-c4d0c7953167"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
      SuperscriptBox["\[Beta]", "2"], " ", "\[Gamma]R", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Gamma]btot", "2"], " ", 
       SuperscriptBox["\[Gamma]c", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Gamma]a", "2"], " ", "\[Gamma]btot", " ", 
       "\[Gamma]c", " ", 
       SuperscriptBox["\[Chi]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Chi]", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Gamma]btot", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]btot", "2"], " ", 
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
      RowBox[{"2", " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Chi]", "4"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]btot", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      SuperscriptBox["\[CapitalOmega]", "6"], "+", 
      RowBox[{"2", " ", "\[Gamma]a", " ", "\[Gamma]btot", " ", 
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", "\[Gamma]a", " ", "\[Gamma]c", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "+", 
      RowBox[{"2", " ", "\[Gamma]a", " ", "\[Gamma]btot", " ", 
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[CapitalOmega]", "4"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[Omega]s", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.839529954162943*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"036fef26-5d1d-44c9-aaf0-0ff5f19dac87"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]a", "2"], "+", 
     SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Gamma]btot"}], " ", "\[Gamma]c"}], "+", 
        SuperscriptBox["\[Chi]", "2"]}], ")"}], "2"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]btot", "2"], "+", 
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Chi]", "2"]}]}], ")"}], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
     SuperscriptBox["\[CapitalOmega]", "4"]}], ")"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Gamma]a", " ", "\[Gamma]c", " ", 
      SuperscriptBox["\[Chi]", "2"]}], "-", 
     RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[Chi]", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
   SuperscriptBox["\[Omega]s", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]c", "2"], "+", 
     SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
   SuperscriptBox["\[Omega]s", "4"]}]}]], "Output",
 CellChangeTimes->{3.8395299544296913`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"4f758ef7-6c78-42eb-acfe-bded3faed1d9"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.839529954431525*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"7e55c2d4-eb5c-4a07-86b9-1d668fef61e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
      SuperscriptBox["\[Beta]", "2"], " ", "\[Gamma]R", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Gamma]btot", "2"], " ", 
       SuperscriptBox["\[Gamma]c", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Gamma]a", "2"], " ", "\[Gamma]btot", " ", 
       "\[Gamma]c", " ", 
       SuperscriptBox["\[Chi]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Chi]", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Gamma]btot", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]btot", "2"], " ", 
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
      RowBox[{"2", " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Chi]", "4"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]btot", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      SuperscriptBox["\[CapitalOmega]", "6"], "+", 
      RowBox[{"2", " ", "\[Gamma]a", " ", "\[Gamma]btot", " ", 
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", "\[Gamma]a", " ", "\[Gamma]c", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "+", 
      RowBox[{"2", " ", "\[Gamma]a", " ", "\[Gamma]btot", " ", 
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[CapitalOmega]", "4"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[Omega]s", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}], ")"}]}]], "Input",
 CellChangeTimes->{3.839448926777581*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"1a62276a-51d9-4e5e-a02e-94f74778753a"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
      SuperscriptBox["\[Beta]", "2"], " ", "\[Gamma]R", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Gamma]btot", "2"], " ", 
       SuperscriptBox["\[Gamma]c", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Gamma]a", "2"], " ", "\[Gamma]btot", " ", 
       "\[Gamma]c", " ", 
       SuperscriptBox["\[Chi]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Chi]", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Gamma]btot", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]btot", "2"], " ", 
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
      RowBox[{"2", " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Chi]", "4"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]btot", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      SuperscriptBox["\[CapitalOmega]", "6"], "+", 
      RowBox[{"2", " ", "\[Gamma]a", " ", "\[Gamma]btot", " ", 
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", "\[Gamma]a", " ", "\[Gamma]c", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "+", 
      RowBox[{"2", " ", "\[Gamma]a", " ", "\[Gamma]btot", " ", 
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[CapitalOmega]", "4"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[Omega]s", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.838062815456109*^9, 3.838062913277969*^9}, 
   3.838063553872902*^9, 3.8380638960590754`*^9, 3.838064819479939*^9, 
   3.8380838869605494`*^9, 3.838146944682119*^9, 3.838852148767901*^9, 
   3.8388532516915617`*^9, 3.8389265405931587`*^9, 3.839032990545848*^9, 
   3.8392724695156097`*^9, 3.839277349241907*^9, 3.839358461846346*^9, 
   3.839370281293482*^9, 3.839448945600273*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"ffd8a735-a873-4462-b49b-2b379fce0736"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "simplifying", " ", "equation", " ", "for", " ", "investigating", " ", 
      "BAE", " ", "for", " ", "\[Phi]"}], "\[NotEqual]", 
     RowBox[{"\[PlusMinus]", 
      FractionBox["\[Pi]", "2"]}]}], ",", " ", 
    RowBox[{"first", ":", " ", 
     RowBox[{"signal", " ", "transfer", " ", "function"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SimplifyConstrained", "=", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"TimeConstraint", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.1", ",", "1"}], "}"}]}]}], "]"}], "&"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigT", "=", 
       RowBox[{"Together", "[", "sigTransferAbs", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numerT", "=", 
       RowBox[{"Numerator", "[", "sigT", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"denomT", "=", 
       RowBox[{"Denominator", "[", "sigT", "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"sanity", " ", "check", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
         FractionBox["numerT", "denomT"], "==", 
         RowBox[{"Together", "[", "sigTransferAbs", "]"}]}], "]"}]}], ";", 
      RowBox[{"--", 
       RowBox[{">", "True"}]}]}], "*)"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "notice", " ", "that", " ", "signal", " ", "transfer", " ", "function", 
      " ", "only", " ", "changes", " ", "if", " ", "\[Phi]"}], "\[NotEqual]", 
     
     RowBox[{
      RowBox[{"\[PlusMinus]", 
       FractionBox["\[Pi]", "2"]}], " ", "and", " ", 
      SubscriptBox["\[Rho]", "BAE"]}], "\[NotEqual]", "0"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"numerTsqr", "=", 
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{"numerT", "^", "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]", ",", "\[Rho]RP", ",", "\[Rho]BAE"}], "}"}], ",", 
      "SimplifyConstrained"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"denomTsqr", "=", 
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{"denomT", "^", "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]", ",", "\[Rho]RP", ",", "\[Rho]BAE"}], "}"}], ",", 
      "SimplifyConstrained"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigTsqrSimpl", "=", 
     FractionBox["numerTsqr", "denomTsqr"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"sanity", " ", "check", "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", 
       RowBox[{"numerTsqr", "\[Equal]", 
        RowBox[{"Numerator", "[", 
         RowBox[{"Together", "[", 
          RowBox[{"sigTransferAbs", "^", "2"}], "]"}], "]"}]}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{"denomTsqr", "\[Equal]", 
         RowBox[{"Denominator", "[", 
          RowBox[{"Together", "[", 
           RowBox[{"sigTransferAbs", "^", "2"}], "]"}], "]"}]}], "]"}], 
       "\[IndentingNewLine]", "--"}]}], ">", " ", 
     RowBox[{"True", " ", "True"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Sx22", "===", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{
         RowBox[{"(", "...", ")"}], "+", 
         RowBox[{"[", "complicated", "]"}]}], 
        RowBox[{
         RowBox[{"(", "\[Ellipsis]", ")"}], "+", 
         RowBox[{
          RowBox[{"(", "\[Ellipsis]", ")"}], "\[Rho]RP", " ", "\[Rho]BAE", 
          " ", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], "^", "2"}]}], "+", 
         RowBox[{
          RowBox[{"(", "\[Ellipsis]", ")"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Rho]RP", " ", "\[Rho]BAE", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]", "]"}], "^", "2"}]}], ")"}], "^", 
           "2"}]}]}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sigTransferAbs", "^", "2"}], "===", 
      FractionBox[
       RowBox[{
        RowBox[{"(", "\[Ellipsis]", ")"}], "+", 
        RowBox[{
         RowBox[{"(", "\[Ellipsis]", ")"}], "\[Rho]RP", " ", "\[Rho]BAE", " ", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"2", "\[Phi]"}], "]"}], "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"(", "\[Ellipsis]", ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Rho]RP", " ", "\[Rho]BAE", " ", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"2", "\[Phi]"}], "]"}], "^", "2"}]}], ")"}], "^", 
          "2"}]}]}], 
       RowBox[{
        RowBox[{"(", "\[Ellipsis]", ")"}], "+", 
        RowBox[{
         RowBox[{"(", "\[Ellipsis]", ")"}], "\[Rho]RP", " ", "\[Rho]BAE", " ", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Phi]", "]"}], "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"(", "\[Ellipsis]", ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Rho]RP", " ", "\[Rho]BAE", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "^", "2"}]}], ")"}], "^", 
          "2"}]}]}]]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"investigating", " ", "BAE", " ", "for", " ", "\[Phi]"}], 
      "\[NotEqual]", 
      RowBox[{"\[PlusMinus]", 
       FractionBox["\[Pi]", "2"]}]}], ",", " ", 
     RowBox[{
      RowBox[{"second", ":", " ", 
       RowBox[{"noise", " ", "transfer", " ", "function"}], ":", 
       "\[IndentingNewLine]", 
       RowBox[{"let", " ", "\[CapitalDelta]Sx"}]}], "=", 
      RowBox[{
       RowBox[{"Sx22", "-", 
        RowBox[{"1", " ", 
         RowBox[{"s", ".", "t", ".", " ", "Sx11"}]}]}], " ", "=", " ", 
       RowBox[{
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"\[CapitalDelta]Sx", "\[IndentingNewLine]", "--"}]}], ">", 
        " ", 
        RowBox[{
        "first", " ", "problem", " ", "is", " ", "dealing", " ", "with", " ", 
         "Conjugates", " ", "in", " ", "Sx22"}]}]}]}], ",", " ", 
     RowBox[{
     "which", " ", "is", " ", "now", " ", "far", " ", "faster", " ", "due", 
      " ", "to", " ", "ConjugateFlipI", " ", "working", " ", "on", " ", "Sx", 
      " ", "for", " ", "less", " ", "than", " ", "5", "%", " ", "of", " ", 
      "a", " ", "second"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"noise\[CapitalDelta]Sx", "=", 
        RowBox[{"Together", "[", 
         RowBox[{
          RowBox[{"Sx", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", "1"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"SimplifyConstrained", "=", 
        RowBox[{
         RowBox[{"FullSimplify", "[", 
          RowBox[{"#", ",", 
           RowBox[{"TimeConstraint", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.1", ",", "1"}], "}"}]}]}], "]"}], "&"}]}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numer\[CapitalDelta]Sx", "=", 
       RowBox[{"Collect", "[", 
        RowBox[{
         RowBox[{"Numerator", "[", "noise\[CapitalDelta]Sx", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Phi]", ",", "\[Rho]RP", ",", "\[Rho]BAE"}], "}"}], ",", 
         "SimplifyConstrained"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"denom\[CapitalDelta]Sx", "=", 
       RowBox[{"Collect", "[", 
        RowBox[{
         RowBox[{"Denominator", "[", "noise\[CapitalDelta]Sx", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Phi]", ",", "\[Rho]RP", ",", "\[Rho]BAE"}], "}"}], ",", 
         "SimplifyConstrained"}], "]"}]}], ";"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "want", " ", "to", " ", "show", " ", "that", " ", "Sx", " ", "is", " ", 
     "demonstrably", " ", "real"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"common", " ", "factor", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"4", "\[ImaginaryI]", " ", "\[Phi]"}], "]"}], " ", "accrued", 
      " ", "in", " ", "numerator", " ", "and", " ", "denominator"}], ",", " ", 
     RowBox[{
      RowBox[{"cancel", " ", 
       RowBox[{"explictly", " ", "--"}]}], ">", " ", 
      RowBox[{"formula", " ", "is", " ", "demonstrably", " ", "real"}]}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"commonFactor0", "=", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "4"}], "\[ImaginaryI]", " ", "\[Phi]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"numer\[CapitalDelta]SxSimpl", "=", 
    RowBox[{
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"commonFactor0", " ", "numer\[CapitalDelta]Sx"}], ")"}], "//",
         "ExpToTrig"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "\[Rho]RP", ",", "\[Rho]BAE"}], "}"}], ",", 
       "SimplifyConstrained"}], "]"}], "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Phi]"}]]}], ")"}]}], 
       ")"}], "\[Rule]", 
      RowBox[{"2", "\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "\[Phi]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"denom\[CapitalDelta]SxSimpl", "=", 
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"commonFactor0", " ", "denom\[CapitalDelta]Sx"}], ")"}], "//",
        "ExpToTrig"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]", ",", "\[Rho]RP", ",", "\[Rho]BAE"}], "}"}], ",", 
      "SimplifyConstrained"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<same denom. as signal transfer fn?: \>\"", ",", 
     RowBox[{"denomTsqr", "==", "denom\[CapitalDelta]SxSimpl"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SxSimpl", "=", 
     RowBox[{"1", "+", 
      FractionBox["numer\[CapitalDelta]SxSimpl", 
       "denom\[CapitalDelta]SxSimpl"]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Sh", "=", 
     RowBox[{
      FractionBox["SxSimpl", "sigTsqrSimpl"], "=", 
      FractionBox[
       RowBox[{"1", "+", 
        FractionBox["numer\[CapitalDelta]SxSimpl", 
         "denom\[CapitalDelta]SxSimpl"]}], 
       FractionBox["numerTsqr", "denomTsqr"]]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ShSimpl", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
        "denom\[CapitalDelta]SxSimpl", "+", "numer\[CapitalDelta]SxSimpl"}], 
        "numerTsqr"], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "1"}], "}"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.83814760853153*^9, 3.838147621090249*^9}, {
  3.838147730426031*^9, 3.838147816893641*^9}, {3.83814786409142*^9, 
  3.8381478695584497`*^9}, {3.838148420509136*^9, 3.8381484849481287`*^9}, {
  3.838148533786626*^9, 3.8381485360763187`*^9}, {3.83814857780158*^9, 
  3.838148578435351*^9}, {3.8381486380389357`*^9, 3.83814865229876*^9}, {
  3.8381487435815077`*^9, 3.838148754096838*^9}, {3.838148812468626*^9, 
  3.838148832479604*^9}, {3.838149035585355*^9, 3.838149036106366*^9}, {
  3.838149460536273*^9, 3.838149481444541*^9}, {3.838154280242444*^9, 
  3.838154294050557*^9}, {3.838160885490718*^9, 3.838160886401671*^9}, {
  3.839358018638783*^9, 3.8393580194399147`*^9}, {3.839358131425123*^9, 
  3.8393581566061*^9}, {3.839358372296665*^9, 3.839358376227254*^9}, {
  3.839376736849476*^9, 3.839376746476653*^9}, {3.843086619263885*^9, 
  3.84308663542522*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"0b50e370-1d2e-4524-a566-c0cce9087db0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"16", " ", 
   SuperscriptBox["\[Beta]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"\[Gamma]R", "-", 
     RowBox[{"Rpd", " ", "\[Gamma]R"}]}], ")"}], " ", 
   SuperscriptBox["\[CapitalOmega]", "8"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]c", "2"], "+", 
     SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
   SuperscriptBox["\[Omega]s", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Gamma]btot"}], " ", "\[Gamma]c"}], "+", 
           SuperscriptBox["\[Chi]", "2"]}], ")"}], "2"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]btot", "2"], "+", 
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Chi]", "2"]}]}], ")"}], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "4"]}], ")"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]a", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "-", 
        RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}], "-", 
  RowBox[{"16", " ", 
   SqrtBox["2"], " ", 
   SuperscriptBox["\[Beta]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"\[Gamma]R", "-", 
     RowBox[{"Rpd", " ", "\[Gamma]R"}]}], ")"}], " ", "\[Rho]BAE", " ", 
   SuperscriptBox["\[Chi]", "2"], " ", 
   SuperscriptBox["\[CapitalOmega]", "6"], " ", 
   SuperscriptBox["\[Omega]s", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Gamma]c", "2"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        RowBox[{"\[Gamma]c", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Gamma]a"}], " ", 
         SuperscriptBox["\[Gamma]c", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Gamma]a", "-", 
           RowBox[{"2", " ", "\[Gamma]c"}]}], ")"}], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "-", 
  RowBox[{"8", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
   SuperscriptBox["\[Beta]", "2"], " ", "\[Gamma]R", " ", 
   SuperscriptBox["\[Rho]BAE", "2"], " ", 
   SuperscriptBox["\[Chi]", "4"], " ", 
   SuperscriptBox["\[CapitalOmega]", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]a", "2"], "+", 
     SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
   SuperscriptBox["\[Omega]s", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Phi]"}], "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{{3.8381478680117826`*^9, 3.8381478711818657`*^9}, {
   3.8381484514671392`*^9, 3.838148486544373*^9}, 3.838148538086628*^9, 
   3.838148579844133*^9, {3.8381486402741137`*^9, 3.838148654470532*^9}, 
   3.838148685925146*^9, 3.838148755587618*^9, 3.838148834313244*^9, 
   3.8381490389523563`*^9, 3.838154298960096*^9, 3.838160907134635*^9, 
   3.8388521506815157`*^9, 3.838853253328497*^9, 3.838926542160719*^9, 
   3.839032992116293*^9, 3.83927247124303*^9, 3.839277351351304*^9, 
   3.8393577411242733`*^9, 3.839358163316592*^9, 3.8393584635070677`*^9, 
   3.839370282793682*^9, 3.839376749140523*^9, 3.83944180176403*^9, 
   3.8394488126730556`*^9, 3.839448947224008*^9, 3.83952995590273*^9, 
   3.839541507387519*^9, 3.839615596063924*^9, 3.8412768657863398`*^9, 
   3.841343615837248*^9, 3.8413458431077337`*^9, 3.842488399371471*^9, 
   3.8425484798997107`*^9, 3.842573718639762*^9, 3.842575845019576*^9, 
   3.842812751180786*^9, 3.842995798781501*^9, 3.843086643553998*^9, 
   3.843599916650635*^9, 3.84361761799321*^9, 3.843617653414719*^9, 
   3.843885273846202*^9, 3.843886709415468*^9, 3.843887736295711*^9, 
   3.843974733725513*^9, 3.8479303618977757`*^9, 3.847992627938344*^9, 
   3.84800658943126*^9, 3.848012203185565*^9, 3.848014290035801*^9, 
   3.8509485450075197`*^9, 3.852247671670273*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"71062ed1-2ea1-4fa9-95ec-ed57ea445467"],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", 
   SuperscriptBox["\[CapitalOmega]", "8"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Gamma]a", "2"], "+", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[Gamma]btot"}], " ", "\[Gamma]c"}], "+", 
            SuperscriptBox["\[Chi]", "2"]}], ")"}], "2"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Gamma]btot", "2"], "+", 
            SuperscriptBox["\[Gamma]c", "2"], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Chi]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}], ")"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Gamma]a", " ", "\[Gamma]c", " ", 
          SuperscriptBox["\[Chi]", "2"]}], "-", 
         RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Gamma]c", "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[CapitalOmega]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Gamma]c", "2"], "+", 
            SuperscriptBox["\[Chi]", "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "2"], "+", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
       SuperscriptBox["\[Omega]s", "4"]}]}], ")"}], "2"]}], "+", 
  RowBox[{"16", " ", "\[Rho]BAE", " ", "\[Rho]RP", " ", 
   SuperscriptBox["\[Chi]", "2"], " ", 
   SuperscriptBox["\[CapitalOmega]", "4"], " ", 
   SuperscriptBox["\[Omega]s", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[CapitalOmega]", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Chi]", "2"], "-", 
        RowBox[{"\[Gamma]c", " ", "\[CapitalOmega]"}], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"], "-", 
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "+", "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], 
     "-", 
     RowBox[{"\[Gamma]a", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Chi]", "2"], "+", 
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Gamma]c"}], "+", "\[CapitalOmega]"}], ")"}]}], "+", 
        RowBox[{"\[CapitalOmega]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "+", "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Gamma]c", "-", "\[CapitalOmega]"}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Gamma]btot", " ", "\[CapitalOmega]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Gamma]c"}], "+", "\[CapitalOmega]"}], ")"}]}], "+", 
     RowBox[{"\[Gamma]a", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Chi]", "2"], "-", 
        RowBox[{"\[Gamma]c", " ", "\[CapitalOmega]"}], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"], "-", 
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "+", "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{"\[CapitalOmega]", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Chi]", "2"], "+", 
        RowBox[{"\[CapitalOmega]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "+", "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], 
     "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Gamma]c", "+", "\[CapitalOmega]"}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
  RowBox[{"16", " ", 
   SuperscriptBox["\[Rho]BAE", "2"], " ", 
   SuperscriptBox["\[Rho]RP", "2"], " ", 
   SuperscriptBox["\[Chi]", "4"], " ", 
   SuperscriptBox["\[Omega]s", "4"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Phi]", "]"}], "4"]}]}]], "Output",
 CellChangeTimes->{{3.8381478680117826`*^9, 3.8381478711818657`*^9}, {
   3.8381484514671392`*^9, 3.838148486544373*^9}, 3.838148538086628*^9, 
   3.838148579844133*^9, {3.8381486402741137`*^9, 3.838148654470532*^9}, 
   3.838148685925146*^9, 3.838148755587618*^9, 3.838148834313244*^9, 
   3.8381490389523563`*^9, 3.838154298960096*^9, 3.838160907134635*^9, 
   3.8388521506815157`*^9, 3.838853253328497*^9, 3.838926542160719*^9, 
   3.839032992116293*^9, 3.83927247124303*^9, 3.839277351351304*^9, 
   3.8393577411242733`*^9, 3.839358163316592*^9, 3.8393584635070677`*^9, 
   3.839370282793682*^9, 3.839376749140523*^9, 3.83944180176403*^9, 
   3.8394488126730556`*^9, 3.839448947224008*^9, 3.83952995590273*^9, 
   3.839541507387519*^9, 3.839615596063924*^9, 3.8412768657863398`*^9, 
   3.841343615837248*^9, 3.8413458431077337`*^9, 3.842488399371471*^9, 
   3.8425484798997107`*^9, 3.842573718639762*^9, 3.842575845019576*^9, 
   3.842812751180786*^9, 3.842995798781501*^9, 3.843086643553998*^9, 
   3.843599916650635*^9, 3.84361761799321*^9, 3.843617653414719*^9, 
   3.843885273846202*^9, 3.843886709415468*^9, 3.843887736295711*^9, 
   3.843974733725513*^9, 3.8479303618977757`*^9, 3.847992627938344*^9, 
   3.84800658943126*^9, 3.848012203185565*^9, 3.848014290035801*^9, 
   3.8509485450075197`*^9, 3.852247672712459*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"070a001a-5ce3-45e7-960d-0e0f4b15c4b2"],

Cell[BoxData[
 TemplateBox[{
  "FullSimplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,48,32,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8393767600636806`*^9, 3.839441817086506*^9, 
  3.8394488244453583`*^9, 3.8394489620619383`*^9, 3.8395299686614933`*^9, 
  3.83954152342666*^9, 3.8396156071655407`*^9, 3.841276879676265*^9, 
  3.841343627272834*^9, 3.841345854543543*^9, 3.842488414697707*^9, 
  3.842548491555275*^9, 3.842573733470881*^9, 3.842575859465551*^9, 
  3.842812764436274*^9, 3.8429959468558493`*^9, 3.843086658162861*^9, 
  3.843599928386611*^9, 3.843617618018758*^9, 3.843617669161944*^9, 
  3.8438852858218*^9, 3.843886720777586*^9, 3.843887751244685*^9, 
  3.843974748413992*^9, 3.847930375624838*^9, 3.8479926310955267`*^9, 
  3.848006603451563*^9, 3.848012214872891*^9, 3.8480143047552567`*^9, 
  3.850948558706835*^9, 3.85224768362844*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"62b912c4-b9a9-4c61-bff3-49e9ad5e2833"],

Cell[BoxData[
 TemplateBox[{
  "FullSimplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,48,33,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8393767600636806`*^9, 3.839441817086506*^9, 
  3.8394488244453583`*^9, 3.8394489620619383`*^9, 3.8395299686614933`*^9, 
  3.83954152342666*^9, 3.8396156071655407`*^9, 3.841276879676265*^9, 
  3.841343627272834*^9, 3.841345854543543*^9, 3.842488414697707*^9, 
  3.842548491555275*^9, 3.842573733470881*^9, 3.842575859465551*^9, 
  3.842812764436274*^9, 3.8429959468558493`*^9, 3.843086658162861*^9, 
  3.843599928386611*^9, 3.843617618018758*^9, 3.843617669161944*^9, 
  3.8438852858218*^9, 3.843886720777586*^9, 3.843887751244685*^9, 
  3.843974748413992*^9, 3.847930375624838*^9, 3.8479926310955267`*^9, 
  3.848006603451563*^9, 3.848012214872891*^9, 3.8480143047552567`*^9, 
  3.850948558706835*^9, 3.852247684336665*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"29ebb4d4-bd03-4652-8763-526cfa80448f"],

Cell[BoxData[
 TemplateBox[{
  "FullSimplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,48,34,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8393767600636806`*^9, 3.839441817086506*^9, 
  3.8394488244453583`*^9, 3.8394489620619383`*^9, 3.8395299686614933`*^9, 
  3.83954152342666*^9, 3.8396156071655407`*^9, 3.841276879676265*^9, 
  3.841343627272834*^9, 3.841345854543543*^9, 3.842488414697707*^9, 
  3.842548491555275*^9, 3.842573733470881*^9, 3.842575859465551*^9, 
  3.842812764436274*^9, 3.8429959468558493`*^9, 3.843086658162861*^9, 
  3.843599928386611*^9, 3.843617618018758*^9, 3.843617669161944*^9, 
  3.8438852858218*^9, 3.843886720777586*^9, 3.843887751244685*^9, 
  3.843974748413992*^9, 3.847930375624838*^9, 3.8479926310955267`*^9, 
  3.848006603451563*^9, 3.848012214872891*^9, 3.8480143047552567`*^9, 
  3.850948558706835*^9, 3.852247685216124*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"3fde0a9f-1b0e-40ee-975d-373101440ce5"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"FullSimplify\\\", \
\\\"::\\\", \\\"time\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,48,35,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8393767600636806`*^9, 3.839441817086506*^9, 
  3.8394488244453583`*^9, 3.8394489620619383`*^9, 3.8395299686614933`*^9, 
  3.83954152342666*^9, 3.8396156071655407`*^9, 3.841276879676265*^9, 
  3.841343627272834*^9, 3.841345854543543*^9, 3.842488414697707*^9, 
  3.842548491555275*^9, 3.842573733470881*^9, 3.842575859465551*^9, 
  3.842812764436274*^9, 3.8429959468558493`*^9, 3.843086658162861*^9, 
  3.843599928386611*^9, 3.843617618018758*^9, 3.843617669161944*^9, 
  3.8438852858218*^9, 3.843886720777586*^9, 3.843887751244685*^9, 
  3.843974748413992*^9, 3.847930375624838*^9, 3.8479926310955267`*^9, 
  3.848006603451563*^9, 3.848012214872891*^9, 3.8480143047552567`*^9, 
  3.850948558706835*^9, 3.852247685223133*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"a536a637-f167-426b-b09b-3ea32db727ee"],

Cell[BoxData[
 TemplateBox[{
  "FullSimplify","gtime",
   "\"Returning the simplest form found in the allowed time of \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds. Increasing the value of the \
TimeConstraint option may improve the result of simplification.\"",2,48,36,
   25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8393767600636806`*^9, 3.839441817086506*^9, 
  3.8394488244453583`*^9, 3.8394489620619383`*^9, 3.8395299686614933`*^9, 
  3.83954152342666*^9, 3.8396156071655407`*^9, 3.841276879676265*^9, 
  3.841343627272834*^9, 3.841345854543543*^9, 3.842488414697707*^9, 
  3.842548491555275*^9, 3.842573733470881*^9, 3.842575859465551*^9, 
  3.842812764436274*^9, 3.8429959468558493`*^9, 3.843086658162861*^9, 
  3.843599928386611*^9, 3.843617618018758*^9, 3.843617669161944*^9, 
  3.8438852858218*^9, 3.843886720777586*^9, 3.843887751244685*^9, 
  3.843974748413992*^9, 3.847930375624838*^9, 3.8479926310955267`*^9, 
  3.848006603451563*^9, 3.848012214872891*^9, 3.8480143047552567`*^9, 
  3.850948558706835*^9, 3.8522476855688057`*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"99b3f5f3-203c-4fbe-ad33-823058e8cf4b"],

Cell[BoxData[
 TemplateBox[{
  "FullSimplify","gtime",
   "\"Returning the simplest form found in the allowed time of \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds. Increasing the value of the \
TimeConstraint option may improve the result of simplification.\"",2,48,37,
   25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8393767600636806`*^9, 3.839441817086506*^9, 
  3.8394488244453583`*^9, 3.8394489620619383`*^9, 3.8395299686614933`*^9, 
  3.83954152342666*^9, 3.8396156071655407`*^9, 3.841276879676265*^9, 
  3.841343627272834*^9, 3.841345854543543*^9, 3.842488414697707*^9, 
  3.842548491555275*^9, 3.842573733470881*^9, 3.842575859465551*^9, 
  3.842812764436274*^9, 3.8429959468558493`*^9, 3.843086658162861*^9, 
  3.843599928386611*^9, 3.843617618018758*^9, 3.843617669161944*^9, 
  3.8438852858218*^9, 3.843886720777586*^9, 3.843887751244685*^9, 
  3.843974748413992*^9, 3.847930375624838*^9, 3.8479926310955267`*^9, 
  3.848006603451563*^9, 3.848012214872891*^9, 3.8480143047552567`*^9, 
  3.850948558706835*^9, 3.852247687047555*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"24886a47-79df-491f-b1f6-6b8a2aad6d6f"],

Cell[BoxData[
 TemplateBox[{
  "FullSimplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,50,38,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8393767600636806`*^9, 3.839441817086506*^9, 
  3.8394488244453583`*^9, 3.8394489620619383`*^9, 3.8395299686614933`*^9, 
  3.83954152342666*^9, 3.8396156071655407`*^9, 3.841276879676265*^9, 
  3.841343627272834*^9, 3.841345854543543*^9, 3.842488414697707*^9, 
  3.842548491555275*^9, 3.842573733470881*^9, 3.842575859465551*^9, 
  3.842812764436274*^9, 3.8429959468558493`*^9, 3.843086658162861*^9, 
  3.843599928386611*^9, 3.843617618018758*^9, 3.843617669161944*^9, 
  3.8438852858218*^9, 3.843886720777586*^9, 3.843887751244685*^9, 
  3.843974748413992*^9, 3.847930375624838*^9, 3.8479926310955267`*^9, 
  3.848006603451563*^9, 3.848012214872891*^9, 3.8480143047552567`*^9, 
  3.850948558706835*^9, 3.852247690254417*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"32d58bcf-0496-4f76-bcbb-eb4dbb9e55f3"],

Cell[BoxData[
 TemplateBox[{
  "FullSimplify","gtime",
   "\"Returning the simplest form found in the allowed time of \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds. Increasing the value of the \
TimeConstraint option may improve the result of simplification.\"",2,50,39,
   25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8393767600636806`*^9, 3.839441817086506*^9, 
  3.8394488244453583`*^9, 3.8394489620619383`*^9, 3.8395299686614933`*^9, 
  3.83954152342666*^9, 3.8396156071655407`*^9, 3.841276879676265*^9, 
  3.841343627272834*^9, 3.841345854543543*^9, 3.842488414697707*^9, 
  3.842548491555275*^9, 3.842573733470881*^9, 3.842575859465551*^9, 
  3.842812764436274*^9, 3.8429959468558493`*^9, 3.843086658162861*^9, 
  3.843599928386611*^9, 3.843617618018758*^9, 3.843617669161944*^9, 
  3.8438852858218*^9, 3.843886720777586*^9, 3.843887751244685*^9, 
  3.843974748413992*^9, 3.847930375624838*^9, 3.8479926310955267`*^9, 
  3.848006603451563*^9, 3.848012214872891*^9, 3.8480143047552567`*^9, 
  3.850948558706835*^9, 3.85224769135809*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"85fa9e65-2367-4003-ad36-c7b84c82909b"],

Cell[BoxData[
 TemplateBox[{
  "FullSimplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,50,40,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8393767600636806`*^9, 3.839441817086506*^9, 
  3.8394488244453583`*^9, 3.8394489620619383`*^9, 3.8395299686614933`*^9, 
  3.83954152342666*^9, 3.8396156071655407`*^9, 3.841276879676265*^9, 
  3.841343627272834*^9, 3.841345854543543*^9, 3.842488414697707*^9, 
  3.842548491555275*^9, 3.842573733470881*^9, 3.842575859465551*^9, 
  3.842812764436274*^9, 3.8429959468558493`*^9, 3.843086658162861*^9, 
  3.843599928386611*^9, 3.843617618018758*^9, 3.843617669161944*^9, 
  3.8438852858218*^9, 3.843886720777586*^9, 3.843887751244685*^9, 
  3.843974748413992*^9, 3.847930375624838*^9, 3.8479926310955267`*^9, 
  3.848006603451563*^9, 3.848012214872891*^9, 3.8480143047552567`*^9, 
  3.850948558706835*^9, 3.852247691854677*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"89a02e79-7929-4c22-872e-39cd2fdcc3f3"],

Cell[BoxData[
 TemplateBox[{
  "FullSimplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,50,41,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8393767600636806`*^9, 3.839441817086506*^9, 
  3.8394488244453583`*^9, 3.8394489620619383`*^9, 3.8395299686614933`*^9, 
  3.83954152342666*^9, 3.8396156071655407`*^9, 3.841276879676265*^9, 
  3.841343627272834*^9, 3.841345854543543*^9, 3.842488414697707*^9, 
  3.842548491555275*^9, 3.842573733470881*^9, 3.842575859465551*^9, 
  3.842812764436274*^9, 3.8429959468558493`*^9, 3.843086658162861*^9, 
  3.843599928386611*^9, 3.843617618018758*^9, 3.843617669161944*^9, 
  3.8438852858218*^9, 3.843886720777586*^9, 3.843887751244685*^9, 
  3.843974748413992*^9, 3.847930375624838*^9, 3.8479926310955267`*^9, 
  3.848006603451563*^9, 3.848012214872891*^9, 3.8480143047552567`*^9, 
  3.850948558706835*^9, 3.852247692030396*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"49d20ced-ed91-4dcc-90ae-1c5239681152"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"FullSimplify\\\", \
\\\"::\\\", \\\"time\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,50,42,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8393767600636806`*^9, 3.839441817086506*^9, 
  3.8394488244453583`*^9, 3.8394489620619383`*^9, 3.8395299686614933`*^9, 
  3.83954152342666*^9, 3.8396156071655407`*^9, 3.841276879676265*^9, 
  3.841343627272834*^9, 3.841345854543543*^9, 3.842488414697707*^9, 
  3.842548491555275*^9, 3.842573733470881*^9, 3.842575859465551*^9, 
  3.842812764436274*^9, 3.8429959468558493`*^9, 3.843086658162861*^9, 
  3.843599928386611*^9, 3.843617618018758*^9, 3.843617669161944*^9, 
  3.8438852858218*^9, 3.843886720777586*^9, 3.843887751244685*^9, 
  3.843974748413992*^9, 3.847930375624838*^9, 3.8479926310955267`*^9, 
  3.848006603451563*^9, 3.848012214872891*^9, 3.8480143047552567`*^9, 
  3.850948558706835*^9, 3.852247692037695*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"70e8a904-958c-46a6-978a-a15cac783a38"],

Cell[BoxData[
 TemplateBox[{
  "FullSimplify","gtime",
   "\"Returning the simplest form found in the allowed time of \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds. Increasing the value of the \
TimeConstraint option may improve the result of simplification.\"",2,50,43,
   25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8393767600636806`*^9, 3.839441817086506*^9, 
  3.8394488244453583`*^9, 3.8394489620619383`*^9, 3.8395299686614933`*^9, 
  3.83954152342666*^9, 3.8396156071655407`*^9, 3.841276879676265*^9, 
  3.841343627272834*^9, 3.841345854543543*^9, 3.842488414697707*^9, 
  3.842548491555275*^9, 3.842573733470881*^9, 3.842575859465551*^9, 
  3.842812764436274*^9, 3.8429959468558493`*^9, 3.843086658162861*^9, 
  3.843599928386611*^9, 3.843617618018758*^9, 3.843617669161944*^9, 
  3.8438852858218*^9, 3.843886720777586*^9, 3.843887751244685*^9, 
  3.843974748413992*^9, 3.847930375624838*^9, 3.8479926310955267`*^9, 
  3.848006603451563*^9, 3.848012214872891*^9, 3.8480143047552567`*^9, 
  3.850948558706835*^9, 3.8522476927108583`*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"4b8359b8-8f01-435f-9139-f10cd9fa570b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"32", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]c", " ", 
   "\[Gamma]R", " ", 
   SuperscriptBox["\[Chi]", "2"], " ", 
   SuperscriptBox["\[CapitalOmega]", "8"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]a", "2"], "+", 
     SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Gamma]a", "2"], "+", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Gamma]btot"}], " ", "\[Gamma]c"}], "+", 
           SuperscriptBox["\[Chi]", "2"]}], ")"}], "2"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]btot", "2"], "+", 
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Chi]", "2"]}]}], ")"}], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "4"]}], ")"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]a", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "-", 
        RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}], "-", 
  RowBox[{"32", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
   SuperscriptBox["\[Rho]BAE", "2"], " ", 
   SuperscriptBox["\[Chi]", "2"], " ", 
   SuperscriptBox["\[CapitalOmega]", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]a", "2"], "+", 
     SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]btot", " ", "\[Gamma]c"}], "+", 
           SuperscriptBox["\[Chi]", "2"]}], ")"}]}], "+", 
        RowBox[{"\[Gamma]c", " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Gamma]btot", " ", "\[Gamma]c"}], "+", 
           SuperscriptBox["\[Chi]", "2"]}], ")"}]}], "-", 
        RowBox[{"2", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "+", 
     RowBox[{"\[Gamma]c", " ", 
      SuperscriptBox["\[Omega]s", "4"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}], "+", 
  RowBox[{"8", " ", 
   SqrtBox["2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
   "\[Rho]BAE", " ", 
   SuperscriptBox["\[Chi]", "2"], " ", 
   SuperscriptBox["\[CapitalOmega]", "6"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]a", "2"], "+", 
     SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]btot", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SuperscriptBox["\[Gamma]c", "2"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], ")"}]}], 
     "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]a", " ", "\[Gamma]c", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", "\[Gamma]btot", " ", "\[Gamma]c"}], "-", 
           SuperscriptBox["\[Chi]", "2"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Gamma]a"}], " ", "\[Gamma]btot"}], "-", 
           RowBox[{"3", " ", 
            SuperscriptBox["\[Gamma]c", "2"]}], "+", 
           SuperscriptBox["\[Chi]", "2"]}], ")"}], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "4"]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         SuperscriptBox["\[Gamma]c", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "4"]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Rho]RP", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "32"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
      SuperscriptBox["\[CapitalOmega]", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]a", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Gamma]btot"}], " ", "\[Gamma]c"}], "+", 
              SuperscriptBox["\[Chi]", "2"]}], ")"}], "2"], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Gamma]btot", "2"], "+", 
              SuperscriptBox["\[Gamma]c", "2"], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Chi]", "2"]}]}], ")"}], " ", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "4"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]c", " ", 
            SuperscriptBox["\[Chi]", "2"]}], "+", 
           RowBox[{"\[Gamma]btot", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Gamma]c", "2"], "+", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox["\[Omega]s", "2"]}]}], ")"}]}], "+", 
     RowBox[{"32", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
      SuperscriptBox["\[Rho]BAE", "2"], " ", 
      SuperscriptBox["\[Chi]", "2"], " ", 
      SuperscriptBox["\[Omega]s", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Gamma]a"}], " ", 
         SuperscriptBox["\[Chi]", "2"]}], "-", 
        RowBox[{"2", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "+", 
        RowBox[{"\[Gamma]a", " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{"32", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
      "\[Rho]BAE", " ", 
      SuperscriptBox["\[Chi]", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      SuperscriptBox["\[Omega]s", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Gamma]c", "2"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        RowBox[{"\[Gamma]a", " ", "\[Gamma]c", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{"\[Rho]RP", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "16"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
      "\[Rho]BAE", " ", 
      SuperscriptBox["\[Chi]", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "4"], " ", 
      SuperscriptBox["\[Omega]s", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "16"}], " ", "\[Gamma]a", " ", "\[Gamma]btot", " ", 
         "\[Gamma]c", " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]btot", " ", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]c", "-", "\[CapitalOmega]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]c", "+", "\[CapitalOmega]"}], ")"}]}], "-", 
           RowBox[{"5", " ", "\[Gamma]c", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Chi]", "2"], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}]}]}], ")"}]}],
         "+", 
        RowBox[{"\[Gamma]a", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "-", "\[CapitalOmega]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "+", "\[CapitalOmega]"}], ")"}], " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]btot", " ", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]c", "-", "\[CapitalOmega]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]c", "+", "\[CapitalOmega]"}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Gamma]c", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Chi]", "2"], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[CapitalOmega]", "-", "\[Omega]s"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[CapitalOmega]", "+", "\[Omega]s"}], ")"}]}]}], 
             ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Gamma]a", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Gamma]c", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"5", " ", "\[Gamma]btot", " ", "\[Gamma]c"}], "-", 
                 SuperscriptBox["\[Chi]", "2"]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Gamma]btot", "-", 
                 RowBox[{"2", " ", "\[Gamma]c"}]}], ")"}], " ", 
               SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[CapitalOmega]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "7"}], " ", "\[Gamma]btot", " ", 
               SuperscriptBox["\[Gamma]c", "2"]}], "+", 
              RowBox[{"3", " ", "\[Gamma]c", " ", 
               SuperscriptBox["\[Chi]", "2"]}], "+", 
              RowBox[{"3", " ", "\[Gamma]btot", " ", 
               SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
              RowBox[{"2", " ", "\[Gamma]c", " ", 
               SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
              RowBox[{"2", " ", "\[Gamma]c", " ", 
               SuperscriptBox["\[Omega]s", "2"]}]}], ")"}]}], "+", 
           RowBox[{"\[Gamma]a", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox["\[CapitalOmega]", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "3"}], " ", 
                  SuperscriptBox["\[Gamma]c", "2"]}], "+", 
                 SuperscriptBox["\[Chi]", "2"], "+", 
                 SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"5", " ", 
                  SuperscriptBox["\[Gamma]c", "2"]}], "-", 
                 SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
               SuperscriptBox["\[Omega]s", "2"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{"8", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
      SuperscriptBox["\[Rho]BAE", "2"], " ", 
      SuperscriptBox["\[Chi]", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      SuperscriptBox["\[Omega]s", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Gamma]a", "2"]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "\[Gamma]btot", " ", "\[Gamma]c"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["\[Chi]", "2"]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "\[Gamma]btot", " ", "\[Gamma]c"}], "+", 
           SuperscriptBox["\[Chi]", "2"]}], ")"}], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{"\[Gamma]a", " ", "\[Gamma]c", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"8", " ", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Omega]s", "2"]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Chi]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]a", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.8381478680117826`*^9, 3.8381478711818657`*^9}, {
   3.8381484514671392`*^9, 3.838148486544373*^9}, 3.838148538086628*^9, 
   3.838148579844133*^9, {3.8381486402741137`*^9, 3.838148654470532*^9}, 
   3.838148685925146*^9, 3.838148755587618*^9, 3.838148834313244*^9, 
   3.8381490389523563`*^9, 3.838154298960096*^9, 3.838160907134635*^9, 
   3.8388521506815157`*^9, 3.838853253328497*^9, 3.838926542160719*^9, 
   3.839032992116293*^9, 3.83927247124303*^9, 3.839277351351304*^9, 
   3.8393577411242733`*^9, 3.839358163316592*^9, 3.8393584635070677`*^9, 
   3.839370282793682*^9, 3.839376749140523*^9, 3.83944180176403*^9, 
   3.8394488126730556`*^9, 3.839448947224008*^9, 3.83952995590273*^9, 
   3.839541507387519*^9, 3.839615596063924*^9, 3.8412768657863398`*^9, 
   3.841343615837248*^9, 3.8413458431077337`*^9, 3.842488399371471*^9, 
   3.8425484798997107`*^9, 3.842573718639762*^9, 3.842575845019576*^9, 
   3.842812751180786*^9, 3.842995798781501*^9, 3.843086643553998*^9, 
   3.843599916650635*^9, 3.84361761799321*^9, 3.843617653414719*^9, 
   3.843885273846202*^9, 3.843886709415468*^9, 3.843887736295711*^9, 
   3.843974733725513*^9, 3.8479303618977757`*^9, 3.847992627938344*^9, 
   3.84800658943126*^9, 3.848012203185565*^9, 3.848014290035801*^9, 
   3.8509485450075197`*^9, 3.852247693361575*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"ef9a9607-9c1c-48d5-ae8a-544827941032"],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", 
   SuperscriptBox["\[CapitalOmega]", "8"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Gamma]a", "2"], "+", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[Gamma]btot"}], " ", "\[Gamma]c"}], "+", 
            SuperscriptBox["\[Chi]", "2"]}], ")"}], "2"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Gamma]btot", "2"], "+", 
            SuperscriptBox["\[Gamma]c", "2"], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Chi]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}], ")"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Gamma]a", " ", "\[Gamma]c", " ", 
          SuperscriptBox["\[Chi]", "2"]}], "-", 
         RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Gamma]c", "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[CapitalOmega]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Gamma]c", "2"], "+", 
            SuperscriptBox["\[Chi]", "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "2"], "+", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
       SuperscriptBox["\[Omega]s", "4"]}]}], ")"}], "2"]}], "+", 
  RowBox[{"16", " ", "\[Rho]BAE", " ", "\[Rho]RP", " ", 
   SuperscriptBox["\[Chi]", "2"], " ", 
   SuperscriptBox["\[CapitalOmega]", "4"], " ", 
   SuperscriptBox["\[Omega]s", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[CapitalOmega]", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Chi]", "2"], "-", 
        RowBox[{"\[Gamma]c", " ", "\[CapitalOmega]"}], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"], "-", 
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "+", "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], 
     "-", 
     RowBox[{"\[Gamma]a", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Chi]", "2"], "+", 
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Gamma]c"}], "+", "\[CapitalOmega]"}], ")"}]}], "+", 
        RowBox[{"\[CapitalOmega]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "+", "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Gamma]c", "-", "\[CapitalOmega]"}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Gamma]btot", " ", "\[CapitalOmega]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Gamma]c"}], "+", "\[CapitalOmega]"}], ")"}]}], "+", 
     RowBox[{"\[Gamma]a", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Chi]", "2"], "-", 
        RowBox[{"\[Gamma]c", " ", "\[CapitalOmega]"}], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"], "-", 
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "+", "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{"\[CapitalOmega]", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Chi]", "2"], "+", 
        RowBox[{"\[CapitalOmega]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "+", "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], 
     "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Gamma]c", "+", "\[CapitalOmega]"}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
  RowBox[{"16", " ", 
   SuperscriptBox["\[Rho]BAE", "2"], " ", 
   SuperscriptBox["\[Rho]RP", "2"], " ", 
   SuperscriptBox["\[Chi]", "4"], " ", 
   SuperscriptBox["\[Omega]s", "4"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Phi]", "]"}], "4"]}]}]], "Output",
 CellChangeTimes->{{3.8381478680117826`*^9, 3.8381478711818657`*^9}, {
   3.8381484514671392`*^9, 3.838148486544373*^9}, 3.838148538086628*^9, 
   3.838148579844133*^9, {3.8381486402741137`*^9, 3.838148654470532*^9}, 
   3.838148685925146*^9, 3.838148755587618*^9, 3.838148834313244*^9, 
   3.8381490389523563`*^9, 3.838154298960096*^9, 3.838160907134635*^9, 
   3.8388521506815157`*^9, 3.838853253328497*^9, 3.838926542160719*^9, 
   3.839032992116293*^9, 3.83927247124303*^9, 3.839277351351304*^9, 
   3.8393577411242733`*^9, 3.839358163316592*^9, 3.8393584635070677`*^9, 
   3.839370282793682*^9, 3.839376749140523*^9, 3.83944180176403*^9, 
   3.8394488126730556`*^9, 3.839448947224008*^9, 3.83952995590273*^9, 
   3.839541507387519*^9, 3.839615596063924*^9, 3.8412768657863398`*^9, 
   3.841343615837248*^9, 3.8413458431077337`*^9, 3.842488399371471*^9, 
   3.8425484798997107`*^9, 3.842573718639762*^9, 3.842575845019576*^9, 
   3.842812751180786*^9, 3.842995798781501*^9, 3.843086643553998*^9, 
   3.843599916650635*^9, 3.84361761799321*^9, 3.843617653414719*^9, 
   3.843885273846202*^9, 3.843886709415468*^9, 3.843887736295711*^9, 
   3.843974733725513*^9, 3.8479303618977757`*^9, 3.847992627938344*^9, 
   3.84800658943126*^9, 3.848012203185565*^9, 3.848014290035801*^9, 
   3.8509485450075197`*^9, 3.8522476945485477`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"a7bd5f36-f874-435e-bc76-0668812e368b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"same denom. as signal transfer fn?: \"\>", "\[InvisibleSpace]",
    "True"}],
  SequenceForm["same denom. as signal transfer fn?: ", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.839376773809412*^9, 3.839441830751315*^9, 
  3.839448838416697*^9, 3.839448977333913*^9, 3.839529983802874*^9, 
  3.839541537874414*^9, 3.839615621225421*^9, 3.8412768941941547`*^9, 
  3.841343642352648*^9, 3.8413458694311867`*^9, 3.842488429400861*^9, 
  3.842548511839785*^9, 3.842573747766621*^9, 3.842575873691543*^9, 
  3.8428127797159986`*^9, 3.842995960511351*^9, 3.843086668915934*^9, 
  3.843599939038035*^9, 3.8436176180390263`*^9, 3.8436176790464163`*^9, 
  3.843885296778654*^9, 3.843886731847645*^9, 3.843887761956278*^9, 
  3.843974759076008*^9, 3.847930386368573*^9, 3.8479926457398767`*^9, 
  3.848006615749366*^9, 3.848012225606998*^9, 3.848014315639612*^9, 
  3.850948570850951*^9, 3.852247694552055*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"e3fda81f-173a-4222-a195-d97a063b72da"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,54,44,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8393767600636806`*^9, 3.839441817086506*^9, 
  3.8394488244453583`*^9, 3.8394489620619383`*^9, 3.8395299686614933`*^9, 
  3.83954152342666*^9, 3.8396156071655407`*^9, 3.841276879676265*^9, 
  3.841343627272834*^9, 3.841345854543543*^9, 3.842488414697707*^9, 
  3.842548491555275*^9, 3.842573733470881*^9, 3.842575859465551*^9, 
  3.842812764436274*^9, 3.8429959468558493`*^9, 3.843086658162861*^9, 
  3.843599928386611*^9, 3.843617618018758*^9, 3.843617669161944*^9, 
  3.8438852858218*^9, 3.843886720777586*^9, 3.843887751244685*^9, 
  3.843974748413992*^9, 3.847930375624838*^9, 3.8479926310955267`*^9, 
  3.848006603451563*^9, 3.848012214872891*^9, 3.8480143047552567`*^9, 
  3.850948558706835*^9, 3.852247694654275*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"36f3410f-bc89-4cb2-bbf1-95d0d3ea2c75"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"0.09999999999999999`\\\"}]\\) seconds, and the \
transformation was aborted. Increasing the value of TimeConstraint option may \
improve the result of simplification.\"",2,54,45,25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8393767600636806`*^9, 3.839441817086506*^9, 
  3.8394488244453583`*^9, 3.8394489620619383`*^9, 3.8395299686614933`*^9, 
  3.83954152342666*^9, 3.8396156071655407`*^9, 3.841276879676265*^9, 
  3.841343627272834*^9, 3.841345854543543*^9, 3.842488414697707*^9, 
  3.842548491555275*^9, 3.842573733470881*^9, 3.842575859465551*^9, 
  3.842812764436274*^9, 3.8429959468558493`*^9, 3.843086658162861*^9, 
  3.843599928386611*^9, 3.843617618018758*^9, 3.843617669161944*^9, 
  3.8438852858218*^9, 3.843886720777586*^9, 3.843887751244685*^9, 
  3.843974748413992*^9, 3.847930375624838*^9, 3.8479926310955267`*^9, 
  3.848006603451563*^9, 3.848012214872891*^9, 3.8480143047552567`*^9, 
  3.850948558706835*^9, 3.852247694817381*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"d682de6c-2f8e-43be-88bd-f002ed7d8c39"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","gtime",
   "\"Returning the simplest form found in the allowed time of \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds. Increasing the value of the \
TimeConstraint option may improve the result of simplification.\"",2,54,46,
   25739332365121157477,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8393767600636806`*^9, 3.839441817086506*^9, 
  3.8394488244453583`*^9, 3.8394489620619383`*^9, 3.8395299686614933`*^9, 
  3.83954152342666*^9, 3.8396156071655407`*^9, 3.841276879676265*^9, 
  3.841343627272834*^9, 3.841345854543543*^9, 3.842488414697707*^9, 
  3.842548491555275*^9, 3.842573733470881*^9, 3.842575859465551*^9, 
  3.842812764436274*^9, 3.8429959468558493`*^9, 3.843086658162861*^9, 
  3.843599928386611*^9, 3.843617618018758*^9, 3.843617669161944*^9, 
  3.8438852858218*^9, 3.843886720777586*^9, 3.843887751244685*^9, 
  3.843974748413992*^9, 3.847930375624838*^9, 3.8479926310955267`*^9, 
  3.848006603451563*^9, 3.848012214872891*^9, 3.8480143047552567`*^9, 
  3.850948558706835*^9, 3.852247695552588*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"52f9a26b-1fda-4a17-b891-141a645fb055"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"-", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"physical", " ", "constants"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"3.", " ", 
      SuperscriptBox["10", "8"]}]}], 
    RowBox[{"(*", 
     SuperscriptBox["ms", 
      RowBox[{"-", "1"}]], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[HBar]", "=", 
     RowBox[{"1.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "34"}]]}]}], 
    RowBox[{"(*", "Js", "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"setDerivedParams1", "[", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Tau]RoundTripArm", "=", 
       FractionBox[
        RowBox[{"2", " ", "Larm"}], "c"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Tau]RoundTripSRC", "=", 
       FractionBox[
        RowBox[{"2", "Lsrc"}], "c"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]R", "=", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "1"}], 
         RowBox[{"2", " ", "\[Tau]RoundTripSRC"}]], 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "Tsrm"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"an", " ", "approximation", " ", "when", " ", "\[Omega]s", 
         RowBox[{"<<", "\[Omega]FSR"}]}], "=", 
        RowBox[{"1", "/", "\[Tau]RoundTripArm"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"\[Omega]s", "=", 
       RowBox[{"c", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["Titm", 
           RowBox[{"4", " ", "Lsrc", " ", "Larm"}]], ")"}], 
         RowBox[{"1", "/", "2"}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "using", " ", "formula", " ", "for", " ", "G", " ", "from", " ", 
        "Korobko"}], "*)"}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"rescaling", " ", "of", " ", "\[Alpha]", " ", "by", " ", 
         FractionBox["1", 
          RowBox[{
           SuperscriptBox["2", 
            RowBox[{"1", "/", "2"}]], "\[HBar]"}]], " ", "seems", " ", "to", 
         " ", "be", " ", "in", " ", 
         RowBox[{"Li", "?"}]}], ",", " ", 
        RowBox[{
         RowBox[{"chosen", " ", "\[Beta]", " ", 
          RowBox[{"s", ".", "t", ".", " ", "turning"}], " ", 
          RowBox[{"R", ".", "P", ".", " ", "off"}], " ", "should", " ", 
          "match", " ", "\[Beta]"}], "=", 
         FractionBox[
          RowBox[{"\[Alpha]GW", " ", "Larm"}], 
          RowBox[{
           SuperscriptBox["2", 
            RowBox[{"1", "/", "2"}]], "\[HBar]"}]]}], ",", " ", 
        RowBox[{
         RowBox[{"which", " ", "is", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"Pcirc", " ", "Larm", " ", "\[Omega]0"}], 
             RowBox[{"\[HBar]", " ", "c"}]], ")"}], 
           RowBox[{"1", "/", "2"}]], " ", "if", " ", "\[Alpha]GW", " ", 
          "from", " ", "Li", " ", "is", " ", 
          RowBox[{"used", " ", "--"}]}], ">", " ", 
         RowBox[{"factor", " ", "of", " ", "two", " ", 
          RowBox[{"missing", "?", " ", "this"}], " ", "is", " ", 
          "unresolved"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"but", " ", "just", " ", "use", " ", "\[Beta]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"-", "G"}], " ", 
                RowBox[{"s", ".", "t", ".", " ", "ahatdot"}]}], "=."}], 
              ".."}], "+", 
             RowBox[{"iGh", " ", "or"}]}], " ", "..."}], "-", "i\[Beta]h"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"\[Rho]RP", "=", 
          RowBox[{"\[Rho]BAE", "=", 
           RowBox[{
            FractionBox[
             SuperscriptBox["\[Alpha]GW", "2"], 
             RowBox[{
              SuperscriptBox["2", 
               RowBox[{"1", "/", "2"}]], "\[HBar]", " ", "\[Mu]"}]], "=", 
            FractionBox[
             RowBox[{
              SuperscriptBox["2", 
               RowBox[{"1", "/", "2"}]], "\[HBar]", " ", 
              SuperscriptBox["\[Beta]", "2"]}], 
             RowBox[{
              SuperscriptBox["Larm", "2"], "\[Mu]"}]]}]}]}], ";", " ", 
         RowBox[{
          RowBox[{"but", " ", "|", "\[Alpha]", "|"}], "=", 
          RowBox[{"|", 
           RowBox[{"\[Alpha]GW", " ", "Larm"}], "|"}]}]}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{
         "changing", " ", "now", " ", "to", " ", "use", " ", "Li", " ", 
          "formula", " ", "for", " ", "comparison", " ", "to", " ", 
          "sWLC"}]}], ",", " ", 
        RowBox[{"why", " ", "do", " ", "these", " ", "two", " ", 
         RowBox[{"disagree", "?", " ", "I"}], " ", "do", " ", "not", " ", 
         RowBox[{"know", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Beta]", "=", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Pcirc", " ", "Larm", " ", "\[Omega]0"}], 
          RowBox[{"\[HBar]", " ", "c"}]], ")"}], 
        RowBox[{"1", "/", "2"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Mu]", "=", 
       FractionBox["M", "4"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       FractionBox[
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"1", "/", "2"}]], "\[HBar]", " ", 
         SuperscriptBox["\[Beta]", "2"]}], 
        RowBox[{
         SuperscriptBox["Larm", "2"], "\[Mu]"}]], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]", "=", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          SuperscriptBox["2", 
           RowBox[{"1", "/", "2"}]], "\[HBar]", " ", "\[Mu]"}]], 
        FractionBox[
         RowBox[{"2", 
          SuperscriptBox["\[HBar]", "2"]}], 
         SuperscriptBox["Larm", "2"]], 
        SuperscriptBox["\[Beta]", "2"]}]}], ";"}], ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"setConfigParamsCustom", "[", 
     RowBox[{
     "\[Lambda]00_", ",", "Larm0_", ",", "Lsrc0_", ",", "Pcirc0_", ",", 
      "Titm0_", ",", "Tsrm0_", ",", "M0_", ",", 
      RowBox[{"paramSetName0_:", "None"}], ",", 
      RowBox[{"\[Gamma]R0_:", "None"}], ",", 
      RowBox[{"\[Omega]s0_:", "None"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", 
       RowBox[{
       "paramSetName", ",", "\[Lambda]0", ",", "Larm", ",", "Lsrc", ",", 
        "Pcirc", ",", "Titm", ",", "Tsrm", ",", "M", ",", 
        "\[Tau]RoundTripArm", ",", "\[Tau]RoundTripSRC", ",", "\[Gamma]R", 
        ",", "\[Omega]s", ",", "\[Beta]", ",", "\[Mu]", ",", "\[Rho]"}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"manually", " ", "set", " ", "parameters"}], ",", " ", 
        RowBox[{"all", " ", "in", " ", "base", " ", "SI", " ", "units"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"paramSetName", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"paramSetName0", "===", "None"}], ",", 
         "\"\<Custom parameter set\>\"", ",", "paramSetName0"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]0", "=", "\[Lambda]00"}], 
      RowBox[{"(*", "m", "*)"}], ";", 
      RowBox[{"\[Omega]0", "=", 
       RowBox[{"2", "\[Pi]", " ", 
        RowBox[{"c", "/", "\[Lambda]0"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Larm", "=", "Larm0"}], 
      RowBox[{"(*", "m", "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "can", " ", "be", " ", "omitted", " ", "if", " ", "\[Gamma]R", " ", 
        "and", " ", "Tsrm", " ", "are", " ", "specified"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Lsrc", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Lsrc0", "===", "None"}], ",", "Lsrc", " ", ",", "Lsrc0"}], 
        RowBox[{"(*", "m", "*)"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Pcirc", "=", "Pcirc0"}], 
      RowBox[{"(*", "W", "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "can", " ", "be", " ", "omitted", " ", "if", " ", "\[Omega]s", " ", 
        "is", " ", "specified"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Titm", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Titm0", "===", "None"}], ",", "Titm", ",", "Titm0"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Tsrm", "=", "Tsrm0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"M", "=", "M0"}], 
      RowBox[{"(*", "kg", "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"setDerivedParams1", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"if", " ", "specified"}], ",", " ", 
        RowBox[{
        "then", " ", "override", " ", "\[Gamma]R", " ", "and", " ", 
         "\[Omega]s"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"\[Gamma]R0", "===", "None"}], "]"}], ",", 
        RowBox[{"\[Gamma]R", "=", "\[Gamma]R0"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"\[Omega]s0", "===", "None"}], "]"}], ",", 
        RowBox[{"\[Omega]s", "=", "\[Omega]s0"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"if", " ", "unspecified"}], ",", " ", 
        RowBox[{
        "then", " ", "use", " ", "\[Gamma]R", " ", "and", " ", "Tsrm", " ", 
         "to", " ", "find", " ", "\[Tau]RoundTripSRC"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Lsrc0", "===", "None"}], ",", 
        RowBox[{
         RowBox[{"\[Tau]RoundTripSRC", "=", 
          RowBox[{
           FractionBox[
            RowBox[{"-", "1"}], 
            RowBox[{"2", " ", "\[Gamma]R"}]], 
           RowBox[{"Log", "[", 
            RowBox[{"1", "-", "Tsrm"}], "]"}]}]}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<inferred Lsrc (in m) = \>\"", ",", 
             RowBox[{"c", " ", 
              RowBox[{"\[Tau]RoundTripSRC", "/", "2"}]}], ",", 
             "\"\<\\n\>\""}], "]"}], ";"}], "*)"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{
         "changing", " ", "now", " ", "to", " ", "use", " ", "Li", " ", 
          "formula", " ", "for", " ", "comparison", " ", "to", " ", 
          "sWLC"}]}], ",", " ", 
        RowBox[{"why", " ", "do", " ", "these", " ", "two", " ", 
         RowBox[{"disagree", "?", " ", "I"}], " ", "do", " ", "not", " ", 
         RowBox[{"know", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Beta]", "=", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Pcirc", " ", "Larm", " ", "\[Omega]0"}], 
          RowBox[{"\[HBar]", " ", "c"}]], ")"}], 
        RowBox[{"1", "/", "2"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Mu]", "=", 
       FractionBox["M", "4"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]", "=", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          SuperscriptBox["2", 
           RowBox[{"1", "/", "2"}]], "\[HBar]", " ", "\[Mu]"}]], 
        FractionBox[
         RowBox[{"2", 
          SuperscriptBox["\[HBar]", "2"]}], 
         SuperscriptBox["Larm", "2"]], 
        SuperscriptBox["\[Beta]", "2"]}]}], 
      RowBox[{"(*", 
       RowBox[{"=", 
        FractionBox[
         RowBox[{
          SuperscriptBox["2", 
           RowBox[{"1", "/", "2"}]], "\[HBar]", " ", 
          SuperscriptBox["\[Beta]", "2"]}], 
         RowBox[{
          SuperscriptBox["Larm", "2"], "\[Mu]"}]]}], "*)"}], ";"}], ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "different", " ", "interferometer", " ", "parameter", " ", "sets"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\[Lambda]0", ",", "Larm", ",", "Lsrc", ",", "Pcirc", ",", "Titm", ",", 
     "Tsrm", ",", "M", ",", " ", 
     RowBox[{"optional", ":", " ", "paramSetName"}], ",", "\[Gamma]R", ",", 
     "\[Omega]s"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"parameters", " ", "of", " ", "Advanced", " ", "LIGO"}], ",", 
     " ", 
     RowBox[{"from", " ", "Adya", " ", "et", " ", "al"}], ",", " ", 
     RowBox[{
      RowBox[{"2020", " ", "and", " ", 
       RowBox[{"https", ":"}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dcc", ".", "ligo", ".", "org"}], "/", "public"}], "/", 
           "0000"}], "/", "T0900043"}], "/", "011"}], "/", "LIGO"}], "-", 
       "T0900043", "-", 
       RowBox[{"11.", "pdf"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"setConfigParamsALIGO", "[", "]"}], ":=", 
    RowBox[{"setConfigParamsCustom", "[", 
     RowBox[{
      RowBox[{"1064.", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "9"}]]}], 
      RowBox[{"(*", "m", "*)"}], ",", 
      RowBox[{"4.", " ", 
       SuperscriptBox["10", "3"]}], 
      RowBox[{"(*", "m", "*)"}], ",", "56.", 
      RowBox[{"(*", "m", "*)"}], ",", 
      RowBox[{"750.", " ", 
       SuperscriptBox["10", "3"]}], " ", 
      RowBox[{"(*", "W", "*)"}], ",", "0.014", ",", "0.325", ",", "40.", 
      RowBox[{"(*", "kg", "*)"}], ",", "\"\<Advanced LIGO\>\""}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"parameters", " ", "of", " ", "LIGO", " ", "Voyager"}], ",", " ", 
     RowBox[{"from", " ", "Adhikari", " ", "et", " ", "al"}], ",", " ", 
     "2020"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"setConfigParamsVoyager", "[", "]"}], ":=", 
    RowBox[{"setConfigParamsCustom", "[", 
     RowBox[{
      RowBox[{"2.", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], 
      RowBox[{"(*", "m", "*)"}], ",", 
      RowBox[{"4.", " ", 
       SuperscriptBox["10", "3"]}], 
      RowBox[{"(*", "m", "*)"}], ",", "56.", 
      RowBox[{"(*", "m", "*)"}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "I", " ", "assume", " ", "that", " ", "the", " ", "upgrade", " ", 
         "is", " ", "not", " ", "changing", " ", "Lsrc"}], ",", " ", 
        RowBox[{
        "which", " ", "is", " ", "not", " ", "made", " ", "obvious", " ", 
         "anywhere"}]}], "*)"}], ",", 
      RowBox[{"3.", " ", 
       SuperscriptBox["10", "6"]}], " ", 
      RowBox[{"(*", "W", "*)"}], ",", "0.002", ",", "0.046", ",", "200.", 
      RowBox[{"(*", "kg", "*)"}], ",", "\"\<LIGO Voyager\>\""}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"parameters", " ", "of", " ", "NEMO"}], ",", " ", 
     RowBox[{"from", " ", "Ackley", " ", "et", " ", "al"}], ",", " ", 
     "2020"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"setConfigParamsNEMO", "[", "]"}], ":=", 
    RowBox[{"setConfigParamsCustom", "[", 
     RowBox[{
      RowBox[{"2.", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], 
      RowBox[{"(*", "m", "*)"}], ",", 
      RowBox[{"4.", " ", 
       SuperscriptBox["10", "3"]}], 
      RowBox[{"(*", "m", "*)"}], ",", "354.", 
      RowBox[{"(*", "m", "*)"}], ",", " ", 
      RowBox[{"4.5", " ", 
       SuperscriptBox["10", "6"]}], 
      RowBox[{"(*", "W", "*)"}], ",", "0.014", ",", "0.048", ",", "74.1", 
      RowBox[{"(*", "kg", "*)"}], ",", "\"\<NEMO\>\""}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "parameters", " ", "from", " ", "Korobko", " ", "et", " ", "al"}], ",", 
     " ", 
     RowBox[{
     "2019", ":", " ", "\"\<benchmark 3rd generation detector\>\""}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"setConfigParamsKorobko2019", "[", "]"}], ":=", 
    RowBox[{"setConfigParamsCustom", "[", 
     RowBox[{
      RowBox[{"1550.", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "9"}]]}], 
      RowBox[{"(*", "m", "*)"}], ",", 
      RowBox[{"20.", " ", 
       SuperscriptBox["10", "3"]}], 
      RowBox[{"(*", "m", "*)"}], ",", "56.", 
      RowBox[{"(*", "m", "*)"}], ",", 
      RowBox[{"4.", " ", 
       SuperscriptBox["10", "6"]}], 
      RowBox[{"(*", "W", "*)"}], ",", "0.07", ",", "0.35", ",", "200.", 
      RowBox[{"(*", "kg", "*)"}], ",", "\"\<Korobko et al, 2019\>\""}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"parameters", " ", "from", " ", "Li", " ", "et", " ", "al"}], 
     ",", " ", 
     RowBox[{"2020", " ", "-", " ", 
      RowBox[{"NB", ":", 
       RowBox[{
       "\[Omega]s", " ", "and", " ", "\[Gamma]R", " ", "are", " ", "not", " ",
         "from", " ", "LIGO", " ", 
        RowBox[{"Voyager", "!"}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"setConfigParamsLi2020", "[", 
     RowBox[{"\[Gamma]R0_:", "None"}], "]"}], ":=", 
    RowBox[{"setConfigParamsCustom", "[", 
     RowBox[{
      RowBox[{"2.", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], 
      RowBox[{"(*", "m", "*)"}], ",", 
      RowBox[{"4.", " ", 
       SuperscriptBox["10", "3"]}], 
      RowBox[{"(*", "m", "*)"}], ",", "None", ",", 
      RowBox[{"3.", " ", 
       SuperscriptBox["10", "6"]}], 
      RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", 
      RowBox[{"(*", 
       RowBox[{"assuming", " ", "LIGO", " ", 
        RowBox[{"Voyager", "'"}], "s", " ", 
        SubscriptBox["T", "SRM"], " ", "was", " ", "used", " ", "for", " ", 
        "\[Gamma]R"}], "*)"}], ",", "200.", 
      RowBox[{"(*", "kg", "*)"}], ",", "\"\<Li et al, 2020\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"\[Gamma]R0", "===", "None"}], ",", 
        RowBox[{"2", "\[Pi]", " ", "500."}], 
        RowBox[{"(*", "Hz", "*)"}], ",", "\[Gamma]R0"}], "]"}], ",", 
      RowBox[{"2", "\[Pi]", " ", "5000."}]}], 
     RowBox[{"(*", "Hz", "*)"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"printParams", "[", "]"}], ":=", 
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<configuration parameters:\\nparamSetName=``, \[Lambda]0=`` m, \
Larm=`` km, Lsrc=`` m, Pcirc=`` MW, Titm=``, Tsrm=``, M=`` kg\\nderived \
parameters:\\n\!\(\*FractionBox[\(\[Omega]FSR\), \(2  \
\[Pi]\)]\)=\!\(\*FractionBox[\(1\), \(\[Tau]RoundTripArm\)]\)=`` kHz, \
\!\(\*FractionBox[\(1\), \(\[Tau]RoundTripSRC\)]\)=`` kHz, \!\(\*FractionBox[\
\(\[Gamma]R\), \(2  \[Pi]\)]\)=`` kHz, \!\(\*FractionBox[\(\[Omega]s\), \(2  \
\[Pi]\)]\)=`` kHz; \!\(\*FractionBox[\(\[Omega]s\), \(\[Gamma]R\)]\)=``\>\"", 
       ",", "paramSetName", ",", 
       RowBox[{"NumberForm", "[", "\[Lambda]0", "]"}], ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"Larm", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]]}], "]"}], ",", 
       RowBox[{"NumberForm", "[", "Lsrc", "]"}], ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"Pcirc", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]]}], "]"}], ",", 
       RowBox[{"NumberForm", "[", "Titm", "]"}], ",", 
       RowBox[{"NumberForm", "[", "Tsrm", "]"}], ",", 
       RowBox[{"NumberForm", "[", "M", "]"}], ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", "\[Tau]RoundTripArm"], 
          SuperscriptBox["10", 
           RowBox[{"-", "3"}]]}], ",", "3"}], "]"}], ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", "\[Tau]RoundTripSRC"], 
          SuperscriptBox["10", 
           RowBox[{"-", "3"}]]}], ",", "3"}], "]"}], ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{
         RowBox[{
          FractionBox["\[Gamma]R", 
           RowBox[{"2", "\[Pi]"}]], 
          SuperscriptBox["10", 
           RowBox[{"-", "3"}]]}], ",", "3"}], "]"}], ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{
         RowBox[{
          FractionBox["\[Omega]s", 
           RowBox[{"2", "\[Pi]"}]], 
          SuperscriptBox["10", 
           RowBox[{"-", "3"}]]}], ",", "3"}], "]"}], ",", 
       RowBox[{"NumberForm", "[", 
        FractionBox["\[Omega]s", "\[Gamma]R"], "]"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"to", "-", 
      RowBox[{"do", ":", " ", 
       RowBox[{"find", " ", "experimental", " ", "constraints"}], ":"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"--", " ", "optical"}], " ", 
       RowBox[{"loss", " ", "--"}]}], ">", " ", 
      RowBox[{"see", " ", "Zhang"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"--", " ", "maximum"}], " ", "squeezing", " ", "ratio", " ", 
       "to", " ", "singularity", " ", 
       RowBox[{"threshold", " ", "--"}]}], ">", " ", 
      RowBox[{"see", " ", "Sheon"}]}], ",", " ", 
     RowBox[{
     "0.95", " ", "and", " ", "rule", " ", "of", " ", "thumb", " ", "0.7"}], 
     ","}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"\"\<realistic\>\"", " ", "losses"}], ",", " ", 
     RowBox[{
     "using", " ", "those", " ", "from", " ", "Zhang", " ", "et", " ", "al"}],
      ",", " ", 
     RowBox[{
     "2021", " ", "which", " ", "seem", " ", "to", " ", "be", " ", "pretty", 
      " ", "representative"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tla0", "=", 
     RowBox[{"100.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"=", 
       RowBox[{"100", "ppm"}]}], ",", " ", 
      RowBox[{"arm", " ", "cavity", " ", "loss", " ", "port"}]}], "*)"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tlb0", "=", 
     RowBox[{"1000.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"=", 
       RowBox[{"1000", "ppm"}]}], ",", " ", 
      RowBox[{"signal", " ", "SRC", " ", "loss", " ", "port"}]}], "*)"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tlc0", "=", 
     RowBox[{"1000.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"=", 
       RowBox[{"1000", "ppm"}]}], ",", " ", 
      RowBox[{"idler", " ", "SRC", " ", "loss", " ", "port"}]}], "*)"}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"along", " ", "with", " ", "symSRM"}], "=", 
     RowBox[{
     "True", " ", "as", " ", "the", " ", "default", " ", "from", " ", "now", 
      " ", "on"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rpd0", "=", "0.1"}], 
    RowBox[{"(*", 
     RowBox[{"=", 
      RowBox[{"10", "%"}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "singularityThr", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"singularityThr", "[", 
     RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"poleSol0", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[CapitalOmega]", "\[Rule]", "0"}], ",", 
           RowBox[{"\[Chi]", "\[Rule]", 
            SqrtBox[
             RowBox[{"\[Gamma]c", " ", 
              RowBox[{"(", 
               RowBox[{"\[Gamma]btot", "+", 
                FractionBox[
                 SuperscriptBox["\[Omega]s", "2"], "\[Gamma]a"]}], 
               ")"}]}]]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[CapitalOmega]", "\[Rule]", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["\[Gamma]a", "2"]}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[Gamma]btot", "+", "\[Gamma]c"}], ")"}]}], "-", 
               RowBox[{"\[Gamma]a", " ", 
                SuperscriptBox["\[Omega]s", "2"]}], "+", 
               RowBox[{"\[Gamma]c", " ", 
                SuperscriptBox["\[Omega]s", "2"]}]}], 
              RowBox[{"\[Gamma]btot", "+", "\[Gamma]c"}]]]}], ",", 
           RowBox[{"\[Chi]", "\[Rule]", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Gamma]a", "+", "\[Gamma]btot"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"\[Gamma]a", "+", "\[Gamma]c", "+", 
                FractionBox[
                 SuperscriptBox["\[Omega]s", "2"], 
                 RowBox[{"\[Gamma]btot", "+", "\[Gamma]c"}]]}], ")"}]}]]}]}], 
          "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Tla", "\[NotEqual]", "0"}], ",", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"\[Chi]", "/.", "poleSol0"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Gamma]a", "\[Rule]", 
             RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
            RowBox[{"\[Gamma]btot", "\[Rule]", 
             RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
            RowBox[{"\[Gamma]c", "\[Rule]", 
             RowBox[{"\[Gamma]cFn", "[", 
              RowBox[{"Tlc", ",", "symSRM"}], "]"}]}]}], "}"}]}], "]"}], ",", 
        
        RowBox[{
         RowBox[{"\[Chi]", "/.", 
          RowBox[{"poleSol0", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Gamma]a", "\[Rule]", 
            RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
           RowBox[{"\[Gamma]btot", "\[Rule]", 
            RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
           RowBox[{"\[Gamma]c", "\[Rule]", 
            RowBox[{"\[Gamma]cFn", "[", 
             RowBox[{"Tlc", ",", "symSRM"}], "]"}]}]}], "}"}]}]}], "]"}]}], 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"loss", " ", "functions"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]aFn", "[", "Tla_", "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"-", "1"}], 
      RowBox[{"2", " ", "\[Tau]RoundTripArm"}]], 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "Tla"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]btotFn", "[", "Tlb_", "]"}], ":=", 
    RowBox[{"\[Gamma]R", "+", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], 
       RowBox[{"2", " ", "\[Tau]RoundTripSRC"}]], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "Tlb"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]cFn", "[", 
     RowBox[{"Tlc_", ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{"symSRM", ",", 
      RowBox[{"\[Gamma]R", "+", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "1"}], 
         RowBox[{"2", " ", "\[Tau]RoundTripSRC"}]], 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "Tlc"}], "]"}]}]}], ",", 
      RowBox[{
       FractionBox[
        RowBox[{"-", "1"}], 
        RowBox[{"2", " ", "\[Tau]RoundTripSRC"}]], 
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", "Tlc"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"plotting", " ", 
      RowBox[{"sensitivity", " ", "--"}], " ", "un"}], "-", 
     RowBox[{"simplified", " ", "Sh"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "taking", " ", "real", " ", "part", " ", "to", " ", "discard", " ", 
     "numerical", " ", "error", " ", "creating", " ", "tiny", " ", 
     "imaginary", " ", "parts"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"QNwRP", "[", 
     RowBox[{
      RowBox[{"\[CapitalOmega]0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Chi]0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
      RowBox[{"Tla_", "?", "NumericQ"}], ",", 
      RowBox[{"Tlb_", "?", "NumericQ"}], ",", 
      RowBox[{"Tlc_", "?", "NumericQ"}], ",", 
      RowBox[{"Rpd0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", "SxSimpl", "]"}], "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Phi]", "\[Rule]", "\[Phi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "->", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigwRP", "[", 
     RowBox[{
      RowBox[{"\[CapitalOmega]0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Chi]0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
      RowBox[{"Tla_", "?", "NumericQ"}], ",", 
      RowBox[{"Tlb_", "?", "NumericQ"}], ",", 
      RowBox[{"Tlc_", "?", "NumericQ"}], ",", 
      RowBox[{"Rpd0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", "sigTsqrSimpl", "]"}], "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Phi]", "\[Rule]", "\[Phi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "->", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ASDShwRP", "[", 
     RowBox[{
      RowBox[{"\[CapitalOmega]0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Chi]0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
      RowBox[{"Tla_", "?", "NumericQ"}], ",", 
      RowBox[{"Tlb_", "?", "NumericQ"}], ",", 
      RowBox[{"Tlc_", "?", "NumericQ"}], ",", 
      RowBox[{"Rpd0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", "ShSimpl", "]"}], "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Phi]", "\[Rule]", "\[Phi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "->", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"to", "-", 
      RowBox[{"do", ":", " ", 
       RowBox[{"pad", " ", "out", " ", "Tla"}]}]}], ",", " ", "Tlb", ",", " ", 
     RowBox[{
     "Tlc", " ", "to", " ", "accommodate", " ", "ppm", " ", "and", " ", "non",
       " ", "ppm", " ", "inputs"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"legendStyler", "[", "vals0_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "pad", " ", "out", " ", "vals0", " ", "with", " ", "default", " ", 
       "arguments", " ", "of", " ", "wRP", " ", "functions"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "vals0", "]"}], "\[Equal]", "6"}], ",", 
        RowBox[{"vals", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"vals0", ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False", ",", "True"}], "}"}]}], "]"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "vals0", "]"}], "\[Equal]", "7"}], ",", 
          RowBox[{"vals", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"vals0", ",", 
             RowBox[{"{", 
              RowBox[{"False", ",", "True"}], "}"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "vals0", "]"}], "\[Equal]", "8"}], ",", 
            RowBox[{"vals", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"vals0", ",", 
               RowBox[{"{", "True", "}"}]}], "]"}]}], ",", 
            RowBox[{"vals", "=", "vals0"}]}], "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "in", " ", "order", " ", "to", " ", "evaluate", " ", "any", " ", 
        "held", " ", "singularity", " ", "thresholds"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"vals", "=", 
       RowBox[{"vals", "//", "ReleaseHold"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"paddedStrings", "=", "\[IndentingNewLine]", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"StringPadRight", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"vals", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "/", 
              RowBox[{"singularityThr", "[", 
               RowBox[{
                RowBox[{"vals", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{"vals", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], ",", 
                RowBox[{"vals", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], ",", 
                RowBox[{"vals", "[", 
                 RowBox[{"[", "9", "]"}], "]"}]}], "]"}]}], "]"}], "]"}], ",",
            "4"}], "]"}], ",", 
         RowBox[{"StringPadRight", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"vals", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", "\[Pi]"}], ")"}]}], "]"}], "]"}], ",", "5"}], 
          "]"}], ",", 
         RowBox[{"StringPadRight", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"vals", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "<", "0.01"}], ",", 
               RowBox[{
                RowBox[{"vals", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], 
                SuperscriptBox["10", "6"]}], ",", 
               RowBox[{"vals", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "]"}], ",", 
           "5"}], "]"}], ",", 
         RowBox[{"StringPadRight", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"vals", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "<", "0.01"}], ",", 
               RowBox[{
                RowBox[{"vals", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], 
                SuperscriptBox["10", "6"]}], ",", 
               RowBox[{"vals", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "]"}], "]"}], "]"}], ",", 
           "6"}], "]"}], ",", 
         RowBox[{"StringPadRight", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"vals", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], "<", "0.01"}], ",", 
               RowBox[{
                RowBox[{"vals", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], 
                SuperscriptBox["10", "6"]}], ",", 
               RowBox[{"vals", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "]"}], "]"}], "]"}], ",", 
           "6"}], "]"}], ",", 
         RowBox[{"StringPadRight", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"vals", "[", 
             RowBox[{"[", "6", "]"}], "]"}], "]"}], ",", "4"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"<>", " ", "is"}], " ", "StringJoin"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{
          RowBox[{"\"\<\[Chi]/\[Chi]Thr=``, \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vals", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "-", 
                  FractionBox["\[Pi]", "2"]}], ",", "\[Pi]"}], "]"}], 
               "\[Equal]", "0"}], ",", 
              RowBox[{"StringPadRight", "[", 
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<\[Phi]=``\[Pi]/2\>\"", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"vals", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                    FractionBox["\[Pi]", "2"]}], ",", 
                    RowBox[{"2", "\[Pi]"}]}], "]"}], "\[Equal]", "0"}], ",", 
                    "\"\<+\>\"", ",", "\"\<-\>\""}], "]"}]}], "]"}], "]"}], 
                ",", "12"}], "]"}], ",", 
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<\[Phi]/(2\[Pi])=``\>\"", ",", "\[IndentingNewLine]", 
                RowBox[{"paddedStrings", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}], "]"}], 
           "\[IndentingNewLine]", "<>", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"vals", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "<", "0.01"}], ",", 
             "\"\<; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm\>\"", ",", 
             "\"\<; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``\>\""}], "]"}], 
           "\[IndentingNewLine]", "<>", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"vals", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "<", "0.01"}], ",", 
             "\"\<, \!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``ppm\>\"", ",", 
             "\"\<, \!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``\>\""}], "]"}], 
           "\[IndentingNewLine]", "<>", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"vals", "[", 
              RowBox[{"[", "9", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
             "\"\<, \!\(\*SubscriptBox[\(\[Gamma]\), \(c, \
tot\)]\)=\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\)+\!\(\*SubscriptBox[\(\
\[Gamma]\), \(c\)]\)\>\"", "<>", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"vals", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "<", "0.01"}], ",", 
                "\"\<(\!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm)\>\"", ",", 
                "\"\<(\!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``)\>\""}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"vals", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], "<", "0.01"}], ",", 
               "\"\<, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm\>\"", ",", 
               "\"\<, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``\>\""}], 
              "]"}]}], "]"}], "\[IndentingNewLine]", "<>", 
           "\"\<, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``\>\"", 
           "\[IndentingNewLine]", "<>", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"Not", "[", 
              RowBox[{"vals", "[", 
               RowBox[{"[", "7", "]"}], "]"}], "]"}], ",", "\"\<; no RP\>\"", 
             ",", "\"\<\>\""}], "]"}], "\[IndentingNewLine]", "<>", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"vals", "[", 
              RowBox[{"[", "8", "]"}], "]"}], ",", "\"\<; with BAE\>\"", ",", 
             "\"\<\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"paddedStrings", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"paddedStrings", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"paddedStrings", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"paddedStrings", "[", 
           RowBox[{"[", "5", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"paddedStrings", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Monospace\>\""}]}], "]"}]}], 
     ")"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "assumes", " ", "that", " ", "BAE", " ", "and", " ", "symSRM", " ", "are",
      " ", "turned", " ", "off"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"legendStylerShort", "[", "vals0_", "]"}], ":=", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<\[Chi]/\!\(\*SubscriptBox[\(\[Chi]\), \(thr\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``, \[Rho]``\>\"", ",", 
        RowBox[{"StringPadRight", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"vals0", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "//", "ReleaseHold"}], ")"}],
               "/", 
              RowBox[{"singularityThr", "[", 
               RowBox[{
                RowBox[{"vals0", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{"vals0", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], ",", 
                RowBox[{"vals0", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], ",", "False"}], "]"}]}], ",",
              "2"}], "]"}], "]"}], ",", "4"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"vals0", "[", 
            RowBox[{"[", "3", "]"}], "]"}], " ", 
           SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"vals0", "[", 
            RowBox[{"[", "4", "]"}], "]"}], " ", 
           SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"vals0", "[", 
            RowBox[{"[", "5", "]"}], "]"}], " ", 
           SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"N", "[", 
          RowBox[{"vals0", "[", 
           RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"vals0", "[", 
           RowBox[{"[", "7", "]"}], "]"}], ",", "\"\<\[NotEqual]0\>\"", ",", 
          "\"\<=0\>\""}], "]"}]}], "]"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Monospace\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"legendStylerSplit", "[", "vals0_", "]"}], ":=", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<\[Chi]/\!\(\*SubscriptBox[\(\[Chi]\), \(thr\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm,\\n\!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \
\!\(\*SubscriptBox[\(R\), \(PD\)]\)=``, \[Rho]``\>\"", ",", 
        RowBox[{"StringPadRight", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"vals0", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "//", "ReleaseHold"}], ")"}],
               "/", 
              RowBox[{"singularityThr", "[", 
               RowBox[{
                RowBox[{"vals0", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{"vals0", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], ",", 
                RowBox[{"vals0", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], ",", "False"}], "]"}]}], ",",
              "2"}], "]"}], "]"}], ",", "4"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"vals0", "[", 
            RowBox[{"[", "3", "]"}], "]"}], " ", 
           SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"vals0", "[", 
            RowBox[{"[", "4", "]"}], "]"}], " ", 
           SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"vals0", "[", 
            RowBox[{"[", "5", "]"}], "]"}], " ", 
           SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"N", "[", 
          RowBox[{"vals0", "[", 
           RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"vals0", "[", 
           RowBox[{"[", "7", "]"}], "]"}], ",", "\"\<\[NotEqual]0\>\"", ",", 
          "\"\<=0\>\""}], "]"}]}], "]"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Monospace\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotwRP", "[", 
     RowBox[{"valsList_", ",", 
      RowBox[{"plotLabel_:", "None"}], ",", 
      RowBox[{"plotStyle_:", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         SuperscriptBox["10", "4"]}], "}"}]}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmin", ",", "fmax"}], "}"}], "=", "fRange"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"LogLinearPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"20", 
             RowBox[{"Log10", "[", 
              RowBox[{"QNwRP", "@@", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
                 RowBox[{
                  RowBox[{"valsList", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "//", "ReleaseHold"}]}], 
                "]"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"100", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"TicksStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
              RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"fmin", ",", "fmax"}], "}"}], ",", "All"}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "plotStyle"}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<quantum noise transfer function,\\n|R| / dB (20log10)\>\"", 
              ","}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"ToString", "[", "plotLabel", "]"}], "\[Equal]", 
                 RowBox[{"ToString", "[", "None", "]"}]}], ",", 
                RowBox[{
                "\"\<nondegenerate internal squeezing\\nparameters of \>\"", "<>",
                  "paramSetName"}], ",", "plotLabel"}], "]"}]}], "}"}]}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{"LogLogPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"sigwRP", "@@", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
               RowBox[{
                RowBox[{"valsList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "//", "ReleaseHold"}]}], 
              "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"100", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"TicksStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
              RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"fmin", ",", "fmax"}], "}"}], ",", "All"}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "plotStyle"}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<signal transfer function,\\n|T| / [?] (log scale)\>\"", 
              ","}], "}"}], ",", 
            RowBox[{"{", ",", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"LogLogPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Join", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"ASDShwRP", "@@", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
                 RowBox[{
                  RowBox[{"valsList", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "//", "ReleaseHold"}]}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["10", "3"], "<", "#", "<", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["10", "3"]}]}], ",", 
                 RowBox[{"5", " ", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "25"}]]}], ",", "Null"}], "]"}], "&"}], "[", 
              "f", "]"}], "}"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"100", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"All", ",", "1"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"legendStyler", "[", 
                 RowBox[{"valsList", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
              ",", 
              RowBox[{
              "{", "\"\<5\[Cross]\!\(\*SuperscriptBox[\(10\), \
\(-25\)]\)\!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) target for 1\[Dash]4 \
kHz\>\"", "}"}]}], "]"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"q0", ",", "r0"}], "}"}], "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"plotStyle", "\[NotEqual]", 
                RowBox[{"{", "}"}]}], ",", 
               RowBox[{"QuotientRemainder", "[", 
                RowBox[{
                 RowBox[{"Length", "[", "valsList", "]"}], ",", 
                 RowBox[{"Length", "[", "plotStyle", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{"plotStyle", ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "q0"}], "}"}]}], "]"}], ",", 
                "1"}], "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "r0"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"Directive", "[", 
                RowBox[{"Red", ",", "DotDashed"}], "]"}], "}"}]}], "]"}]}], 
           ")"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"fmin", ",", "fmax"}], "}"}], ",", "All"}], "}"}]}], ",", 
         RowBox[{"Filling", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "valsList", "]"}], "+", "1"}], "\[Rule]", 
            "Bottom"}], "}"}]}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<strain sensitivity (NSR)\\n/ \!\(\*SuperscriptBox[\(Hz\), \
\(\(-1\)/2\)]\) (log scale)\>\"", ","}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ","}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", 
        RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "plotASDShwRP", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotASDShwRP", "[", 
     RowBox[{"valsList_", ",", 
      RowBox[{"plotLabel_:", "None"}], ",", 
      RowBox[{"plotStyle_:", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         SuperscriptBox["10", "4"]}], "}"}]}], ",", 
      RowBox[{"gridLines_:", "None"}], ",", 
      RowBox[{"plotRange_:", "All"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmin", ",", "fmax"}], "}"}], "=", "fRange"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"LogLogPlot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"ASDShwRP", "@@", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
                RowBox[{"valsList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["10", "3"], "<", "#", "<", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["10", "3"]}]}], ",", 
                RowBox[{"5", " ", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "25"}]]}], ",", "Null"}], "]"}], "&"}], "[", 
             "f", "]"}], "}"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"legendStyler", "[", 
                RowBox[{"valsList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{
             "{", "\"\<5\[Cross]\!\(\*SuperscriptBox[\(10\), \
\(-25\)]\)\!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) target for 1\[Dash]4 \
kHz\>\"", "}"}]}], "]"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "10", "]"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"q0", ",", "r0"}], "}"}], "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"plotStyle", "\[NotEqual]", 
               RowBox[{"{", "}"}]}], ",", 
              RowBox[{"QuotientRemainder", "[", 
               RowBox[{
                RowBox[{"Length", "[", "valsList", "]"}], ",", 
                RowBox[{"Length", "[", "plotStyle", "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{"plotStyle", ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "q0"}], "}"}]}], "]"}], ",", 
               "1"}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "r0"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"Directive", "[", 
               RowBox[{"Red", ",", "DotDashed"}], "]"}], "}"}]}], "]"}]}], 
          ")"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"fmin", ",", "fmax"}], "}"}], ",", "plotRange"}], "}"}]}],
         ",", 
        RowBox[{"Filling", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "valsList", "]"}], "+", "1"}], "\[Rule]", 
           "Bottom"}], "}"}]}], ",", 
        RowBox[{"Frame", "->", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<strain sensitivity (NSR)\\n/ \!\(\*SuperscriptBox[\(Hz\), \(\
\(-1\)/2\)]\) (log scale)\>\"", ","}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"Not", "[", 
                RowBox[{"plotLabel", "===", "None"}], "]"}], ",", 
               "plotLabel"}], "]"}]}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
        RowBox[{"GridLines", "\[Rule]", "gridLines"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plot\[Gamma]RGrid", "[", 
     RowBox[{"configParams_", ",", "\[Gamma]RList_", ",", "valsList_", ",", 
      RowBox[{"plotStyle_:", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         SuperscriptBox["10", "5"]}], "}"}]}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmin", ",", "fmax"}], "}"}], "=", "fRange"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p1List", ",", "p2List", ",", "p3List"}], "}"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"setConfigParamsCustom", "@@", 
          RowBox[{"ReplacePart", "[", 
           RowBox[{"configParams", ",", 
            RowBox[{
             RowBox[{"-", "2"}], "\[Rule]", 
             RowBox[{"\[Gamma]RList", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p1", "=", 
          RowBox[{"LogLinearPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"20", 
                RowBox[{"Log10", "[", 
                 RowBox[{"QNwRP", "@@", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"valsList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "//", "ReleaseHold"}]}], 
                   "]"}]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"45", ",", "7"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"TicksStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], 
              "}"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"fmin", ",", "fmax"}], "}"}], ",", "All"}], "}"}]}], 
            ",", 
            RowBox[{"PlotStyle", "\[Rule]", "plotStyle"}], ",", 
            RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
            RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
            RowBox[{"Epilog", "\[Rule]", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{
                  "\"\<\!\(\*FractionBox[SubscriptBox[\(\[Gamma]\), \(R\)], \
\(2  \[Pi]\)]\)=`` kHz\>\"", ",", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[Gamma]RList", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], 
                    RowBox[{"2", "\[Pi]"}]], 
                    SuperscriptBox["10", 
                    RowBox[{"-", "3"}]]}], "]"}]}], "]"}], ",", "10", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Monospace\>\""}]}], 
                "]"}], ",", 
               RowBox[{"Scaled", "[", 
                RowBox[{"{", 
                 RowBox[{"0.8", ",", "0.83"}], "}"}], "]"}], ",", 
               RowBox[{"Background", "\[Rule]", 
                RowBox[{"Lighter", "[", "LightGray", "]"}]}]}], "]"}]}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p2", "=", 
          RowBox[{"LogLogPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"sigwRP", "@@", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"valsList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "//", "ReleaseHold"}]}], 
                 "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"45", ",", "7"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"TicksStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], 
              "}"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"fmin", ",", "fmax"}], "}"}], ",", "All"}], "}"}]}], 
            ",", 
            RowBox[{"PlotStyle", "\[Rule]", "plotStyle"}], ",", 
            RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
            RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p3", "=", 
          RowBox[{"LogLogPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"ASDShwRP", "@@", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"valsList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "//", "ReleaseHold"}]}], 
                   "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", 
                   RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}],
                ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["10", "3"], "<", "#", "<", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["10", "3"]}]}], ",", 
                    RowBox[{"5", " ", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "25"}]]}], ",", "Null"}], "]"}], "&"}], "[", 
                 "f", "]"}], "}"}]}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"45", ",", "7"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"All", ",", "1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"q0", ",", "r0"}], "}"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"plotStyle", "\[NotEqual]", 
                   RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"QuotientRemainder", "[", 
                   RowBox[{
                    RowBox[{"Length", "[", "valsList", "]"}], ",", 
                    RowBox[{"Length", "[", "plotStyle", "]"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{"plotStyle", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "q0"}], "}"}]}], "]"}], ",", 
                   "1"}], "]"}], ",", 
                 RowBox[{"Table", "[", 
                  RowBox[{",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "r0"}], "}"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                   RowBox[{"Red", ",", "DotDashed"}], "]"}], "}"}]}], "]"}]}],
               ")"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"fmin", ",", "fmax"}], "}"}], ",", "All"}], "}"}]}], 
            ",", 
            RowBox[{"Filling", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "valsList", "]"}], "+", "1"}], 
               "\[Rule]", "Bottom"}], "}"}]}], ",", 
            RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
            RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"p1List", ",", "p1"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"p2List", ",", "p2"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"p3List", ",", "p3"}], "]"}], ";"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "\[Gamma]RList", "]"}]}], "}"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Labeled", "[", 
       RowBox[{
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1List", ",", "p2List", ",", "p3List"}], "}"}], ",", 
          RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "\"\<nondegenerate internal squeezing\\nparameters of \>\"", "<>", 
           "paramSetName"}], ",", 
          RowBox[{"Grid", "[", 
           RowBox[{GridBox[{
              {"\"\<\>\"", "\"\<signal\>\"", "\"\<quantum noise\>\""},
              {"\"\<sensitivity (NSR)\>\"", "\"\<transfer function\>\"", 
               "\"\<transfer function\>\""},
              {
               "\"\</ \!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) (log \
scale)\>\"", "\"\</ [?] (log scale)\>\"", 
               "\"\</ dB (20 \!\(\*SubscriptBox[\(log\), \(10\)]\))\>\""}
             }], ",", 
            RowBox[{"Spacings", "\[Rule]", "3"}]}], "]"}], ",", 
          RowBox[{"Grid", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "{", "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \
\(2  \[Pi]\)]\) / Hz (log scale)\>\"", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Framed", "[", 
               RowBox[{
                RowBox[{"LineLegend", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"q0", ",", "r0"}], "}"}], "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"plotStyle", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"QuotientRemainder", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "valsList", "]"}], ",", 
                    RowBox[{"Length", "[", "plotStyle", "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"plotStyle", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "q0"}], "}"}]}], "]"}], ",", 
                    "1"}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "r0"}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Red", ",", "DotDashed"}], "]"}], "}"}]}], 
                    "]"}]}], ")"}], ",", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"legendStyler", "[", 
                    RowBox[{"valsList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{
                    "{", "\"\<5\[Cross]\!\(\*SuperscriptBox[\(10\), \
\(-25\)]\)\!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) target for 1\[Dash]4 \
kHz\>\"", "}"}]}], "]"}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"Directive", "[", "10", "]"}]}], ",", 
                  RowBox[{"LegendMarkerSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}], ",", 
                RowBox[{"FrameStyle", "\[Rule]", "Thin"}]}], "]"}], "}"}]}], 
            "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Top", ",", "Left", ",", "Bottom"}], "}"}], ",", 
        RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"12", ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Calibri Light\>\""}]}], 
          "]"}]}]}], "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.836874981430254*^9, 3.836875072223176*^9}, {
   3.8368751417843857`*^9, 3.836875200542362*^9}, {3.836875283633193*^9, 
   3.8368752924534883`*^9}, {3.836875350207292*^9, 3.836875811270529*^9}, {
   3.836875848406776*^9, 3.83687606141188*^9}, {3.836876101472526*^9, 
   3.836876134581773*^9}, {3.836876275825767*^9, 3.836876427229073*^9}, {
   3.836876464470739*^9, 3.836876512251644*^9}, 3.836876560060914*^9, {
   3.836876606676798*^9, 3.836876621829665*^9}, {3.83694898188379*^9, 
   3.836948982379059*^9}, {3.836954144649746*^9, 3.836954165298077*^9}, {
   3.8369571399674473`*^9, 3.836957145819147*^9}, {3.836957479546026*^9, 
   3.836957512780986*^9}, {3.837826614353271*^9, 3.837826632688078*^9}, {
   3.838063985324956*^9, 3.8380640083338737`*^9}, {3.838067366139449*^9, 
   3.838067399365823*^9}, {3.8383411052241907`*^9, 3.8383411084956636`*^9}, {
   3.838852900287304*^9, 3.838852903643374*^9}, {3.838927942701666*^9, 
   3.838927978278606*^9}, {3.8390153340727882`*^9, 3.8390153887507753`*^9}, {
   3.839015962460924*^9, 3.839016047370267*^9}, {3.839016167303187*^9, 
   3.839016168871687*^9}, {3.839016279502911*^9, 3.839016280893586*^9}, {
   3.839016623344702*^9, 3.839016697332974*^9}, {3.839018372776753*^9, 
   3.839018432867854*^9}, {3.839018463254253*^9, 3.839018623456065*^9}, {
   3.8390189400206738`*^9, 3.839018946504031*^9}, {3.839019134425318*^9, 
   3.8390192025033493`*^9}, {3.839019386959992*^9, 3.8390194107421618`*^9}, {
   3.839019552827983*^9, 3.839019583226982*^9}, {3.839019716331653*^9, 
   3.83901975744002*^9}, {3.8390264632847548`*^9, 3.8390264748298187`*^9}, {
   3.83902650735746*^9, 3.839026508299232*^9}, {3.839026917180788*^9, 
   3.839026926006667*^9}, {3.839030237655735*^9, 3.839030242356433*^9}, {
   3.839031597699772*^9, 3.839031764015018*^9}, {3.8390318829815903`*^9, 
   3.839032011942947*^9}, {3.8390322264831953`*^9, 3.839032624204075*^9}, 
   3.839032661822956*^9, {3.839033539038168*^9, 3.839033587856574*^9}, {
   3.83903421780672*^9, 3.839034221471208*^9}, {3.83903605358011*^9, 
   3.8390361064421883`*^9}, {3.8390361856211367`*^9, 
   3.8390361947411547`*^9}, {3.839036265235991*^9, 3.839036269562888*^9}, {
   3.839036379724955*^9, 3.8390363828629303`*^9}, {3.8392717195658092`*^9, 
   3.839271873999387*^9}, {3.839271914999124*^9, 3.8392719906512327`*^9}, {
   3.83927209764911*^9, 3.839272275914186*^9}, {3.8392723081292477`*^9, 
   3.839272342172456*^9}, {3.8392723826820383`*^9, 3.839272386329041*^9}, {
   3.839273723026107*^9, 3.83927372405163*^9}, {3.839275240740405*^9, 
   3.839275242176805*^9}, {3.839276820601714*^9, 3.839276860330742*^9}, {
   3.839277402543277*^9, 3.839277404407146*^9}, {3.839277493957775*^9, 
   3.839277544582217*^9}, {3.839277576619821*^9, 3.839277592657278*^9}, {
   3.8392776492889833`*^9, 3.839277662057995*^9}, {3.839360578370062*^9, 
   3.8393605898406563`*^9}, {3.839360638758204*^9, 3.8393606476679173`*^9}, {
   3.839360971402857*^9, 3.839360980369898*^9}, {3.8393610171793623`*^9, 
   3.8393610437131166`*^9}, {3.8393610859504557`*^9, 3.839361123975604*^9}, {
   3.839361272893147*^9, 3.839361358237817*^9}, {3.839363760272702*^9, 
   3.839363761675459*^9}, {3.83936379391626*^9, 3.839363829526593*^9}, {
   3.839363862898601*^9, 3.839363866626444*^9}, {3.839364302729932*^9, 
   3.839364339529046*^9}, {3.839365823920888*^9, 3.839365922612843*^9}, {
   3.839365958479391*^9, 3.8393659654114103`*^9}, 3.83936861882721*^9, {
   3.83936865902244*^9, 3.839368727332107*^9}, {3.839368768005268*^9, 
   3.839368809170816*^9}, {3.839368843845765*^9, 3.839368885279936*^9}, {
   3.839368928559189*^9, 3.839368938803194*^9}, {3.839369029850377*^9, 
   3.839369030410274*^9}, {3.839369080454941*^9, 3.839369289520636*^9}, {
   3.8393693923245068`*^9, 3.839369396860198*^9}, {3.839369437540285*^9, 
   3.8393698008927937`*^9}, {3.839369838938562*^9, 3.839369840505968*^9}, {
   3.839369994667522*^9, 3.8393701264234657`*^9}, {3.839370164596726*^9, 
   3.839370191791031*^9}, 3.839370240225699*^9, {3.839370597477991*^9, 
   3.8393706055040913`*^9}, {3.839442061187344*^9, 3.839442107984672*^9}, {
   3.8394450203391867`*^9, 3.839445029847774*^9}, {3.8394488266855593`*^9, 
   3.839448830037098*^9}, {3.839458225174541*^9, 3.839458232329911*^9}, {
   3.8412766875858097`*^9, 3.841276698287344*^9}, {3.842812740382012*^9, 
   3.8428127437531757`*^9}, {3.848006587012183*^9, 3.848006587843186*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"eabb38b1-4c8c-427b-a6f1-9b7e0c3e871a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "setting", " ", "configuration", " ", "and", " ", "derived", " ", 
    "parameters"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"setConfigParamsLi2020", "[", 
    RowBox[{"2", "\[Pi]", " ", "1.", " ", 
     SuperscriptBox["10", "3"]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"printParams", "[", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]Ratio0", "=", "0.95"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pumpPhase0", "=", 
     RowBox[{"\[Pi]", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsList1", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "0", ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
         "Rpd0", ",", "True", ",", "False", ",", "True"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"singularityThr", "[", 
           RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "True"}], "]"}]}], 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"calculated", " ", "for", " ", "symSRM"}], "=", "True"}], 
          "*)"}], ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "True"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"singularityThr", "[", 
           RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}]}], 
         
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"calculated", " ", "for", " ", "symSRM"}], "=", "True"}], 
          "*)"}], ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"plotwRP", "[", 
    RowBox[{"valsList1", ",", "None", ",", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red", ",", 
       RowBox[{"{", 
        RowBox[{"Magenta", ",", "Dashed"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       SuperscriptBox["10", "5"]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.839364378890617*^9, 3.839364411651267*^9}, {
   3.839364730047821*^9, 3.839364730332761*^9}, {3.839364786558906*^9, 
   3.839364798644353*^9}, {3.839364846976788*^9, 3.8393648515887423`*^9}, {
   3.8393648925872183`*^9, 3.839364906154232*^9}, {3.839370989844686*^9, 
   3.839371012315881*^9}, {3.839371044608007*^9, 3.839371044982348*^9}, 
   3.8393712927824793`*^9, {3.839371613384878*^9, 3.839371615264758*^9}, {
   3.839371821349532*^9, 3.8393718322362003`*^9}, {3.83937187334032*^9, 
   3.839371895540803*^9}, 3.8393727027267647`*^9, 3.839372849348679*^9, {
   3.839372895600267*^9, 3.839372920938796*^9}, {3.839373132061799*^9, 
   3.83937313445432*^9}, 3.839373188373386*^9, 3.8393735165911293`*^9, {
   3.839374414812758*^9, 3.839374415091259*^9}, {3.8393746975806713`*^9, 
   3.839374724029726*^9}, {3.839374781914838*^9, 3.839374825121656*^9}, {
   3.839375040742859*^9, 3.8393750559844637`*^9}, {3.8393754243107853`*^9, 
   3.8393754248011007`*^9}, {3.839375518649634*^9, 3.839375545859435*^9}, {
   3.8393755848475437`*^9, 3.839375585723503*^9}, 3.839375811669694*^9, {
   3.83937682724969*^9, 3.8393768364689007`*^9}, {3.8393773865901413`*^9, 
   3.839377398882511*^9}, {3.839377459767707*^9, 3.839377486952264*^9}, {
   3.839377595673045*^9, 3.839377603782661*^9}, {3.8394424977624407`*^9, 
   3.839442498666164*^9}, {3.8394425469516172`*^9, 3.8394425477225437`*^9}, {
   3.839445425511073*^9, 3.839445427393539*^9}, 3.8394456324052277`*^9, {
   3.839446960691375*^9, 3.839446961956442*^9}, {3.83944976047218*^9, 
   3.8394497734001703`*^9}, {3.839454300437283*^9, 3.839454301322831*^9}, {
   3.839455448924191*^9, 3.8394554639218397`*^9}, {3.83945550259822*^9, 
   3.83945550293045*^9}, {3.839455765604294*^9, 3.839455770029006*^9}, {
   3.839460044809224*^9, 3.8394600790952797`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"88ebc2e7-dd84-4907-b15a-fa0cd14e3ede"],

Cell[BoxData[
 InterpretationBox["\<\"configuration parameters:\\nparamSetName=Li et al, \
2020, \[Lambda]0=\\!\\(\\*RowBox[{\\\"\\\\\\\"2.\\\\\\\"\\\", \
\\\"\[Times]\\\", SuperscriptBox[\\\"10\\\", \\\"\\\\\\\"-6\\\\\\\"\\\"]}]\\) \
m, Larm=\\!\\(\\*RowBox[{\\\"\\\\\\\"4.\\\\\\\"\\\"}]\\) km, \
Lsrc=\\!\\(\\*RowBox[{\\\"Lsrc\\\"}]\\) m, \
Pcirc=\\!\\(\\*RowBox[{\\\"\\\\\\\"3.\\\\\\\"\\\"}]\\) MW, \
Titm=\\!\\(\\*RowBox[{\\\"Titm\\\"}]\\), \
Tsrm=\\!\\(\\*RowBox[{\\\"\\\\\\\"0.046\\\\\\\"\\\"}]\\), M=\\!\\(\\*RowBox[{\
\\\"\\\\\\\"200.\\\\\\\"\\\"}]\\) kg\\nderived \
parameters:\\n\\!\\(\\*FractionBox[\\(\[Omega]FSR\\), \\(2  \
\[Pi]\\)]\\)=\\!\\(\\*FractionBox[\\(1\\), \
\\(\[Tau]RoundTripArm\\)]\\)=\\!\\(\\*RowBox[{\\\"\\\\\\\"37.5\\\\\\\"\\\"}]\\\
) kHz, \\!\\(\\*FractionBox[\\(1\\), \
\\(\[Tau]RoundTripSRC\\)]\\)=\\!\\(\\*RowBox[{\\\"\\\\\\\"267.\\\\\\\"\\\"}]\\\
) kHz, \\!\\(\\*FractionBox[\\(\[Gamma]R\\), \\(2  \
\[Pi]\\)]\\)=\\!\\(\\*RowBox[{\\\"\\\\\\\"1.\\\\\\\"\\\"}]\\) kHz, \
\\!\\(\\*FractionBox[\\(\[Omega]s\\), \\(2  \
\[Pi]\\)]\\)=\\!\\(\\*RowBox[{\\\"\\\\\\\"5.\\\\\\\"\\\"}]\\) kHz; \
\\!\\(\\*FractionBox[\\(\[Omega]s\\), \\(\[Gamma]R\\)]\\)=\\!\\(\\*RowBox[{\\\
\"\\\\\\\"5.\\\\\\\"\\\"}]\\)\"\>",
  StringForm[
  "configuration parameters:\nparamSetName=``, \[Lambda]0=`` m, Larm=`` km, \
Lsrc=`` m, Pcirc=`` MW, Titm=``, Tsrm=``, M=`` kg\nderived parameters:\n\
\!\(\*FractionBox[\(\[Omega]FSR\), \(2  \[Pi]\)]\)=\!\(\*FractionBox[\(1\), \
\(\[Tau]RoundTripArm\)]\)=`` kHz, \!\(\*FractionBox[\(1\), \
\(\[Tau]RoundTripSRC\)]\)=`` kHz, \!\(\*FractionBox[\(\[Gamma]R\), \(2  \[Pi]\
\)]\)=`` kHz, \!\(\*FractionBox[\(\[Omega]s\), \(2  \[Pi]\)]\)=`` kHz; \
\!\(\*FractionBox[\(\[Omega]s\), \(\[Gamma]R\)]\)=``", "Li et al, 2020", 
   NumberForm[2.*^-6], 
   NumberForm[4.], 
   NumberForm[$CellContext`Lsrc], 
   NumberForm[3.], 
   NumberForm[$CellContext`Titm], 
   NumberForm[0.046], 
   NumberForm[200.], 
   NumberForm[37.5, 3], 
   NumberForm[266.84947217667536`, 3], 
   NumberForm[1., 3], 
   NumberForm[5., 3], 
   NumberForm[5.]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.839364851933549*^9, 3.839364894461401*^9, 3.8393706627683*^9, {
   3.839370990902748*^9, 3.8393710461517773`*^9}, 3.839371306762319*^9, 
   3.839371412428425*^9, {3.839371805664414*^9, 3.839371834370912*^9}, 
   3.839371906986408*^9, 3.839372696051866*^9, 3.839372726608905*^9, 
   3.839372850798628*^9, 3.839372936336124*^9, 3.839373135430092*^9, 
   3.839373188746913*^9, 3.839373240524415*^9, 3.839373517111631*^9, 
   3.839374416823474*^9, 3.8393747254953213`*^9, {3.839374784128049*^9, 
   3.839374825713213*^9}, {3.8393750412988043`*^9, 3.839375056356207*^9}, 
   3.8393754295893497`*^9, {3.839375522332182*^9, 3.839375546377151*^9}, 
   3.8393755862899227`*^9, 3.839375625192369*^9, 3.839375812203162*^9, {
   3.839376804232153*^9, 3.8393768368089037`*^9}, {3.839377379719174*^9, 
   3.8393773992978983`*^9}, {3.839377460767544*^9, 3.839377487310467*^9}, {
   3.8393775962262287`*^9, 3.8393776041876574`*^9}, 3.8394418319368143`*^9, 
   3.839442499170205*^9, 3.839442548172223*^9, 3.8394450352828407`*^9, 
   3.839445428285059*^9, {3.839445608172619*^9, 3.839445633063538*^9}, 
   3.83944696231513*^9, 3.8394489011697407`*^9, 3.839448978503728*^9, {
   3.839449765358692*^9, 3.8394497736387577`*^9}, 3.839454301740217*^9, 
   3.839455176882855*^9, {3.8394554516140633`*^9, 3.839455464411991*^9}, 
   3.839455503955803*^9, 3.8394556423481493`*^9, 3.839455776024439*^9, {
   3.839460051901054*^9, 3.839460079619483*^9}, 3.839461757355246*^9, 
   3.8394625102850313`*^9, 3.8395299849060497`*^9, 3.839541539095501*^9, 
   3.839615622466619*^9, 3.841276895432479*^9, 3.841343643525215*^9, 
   3.841345870601273*^9, 3.842488430601931*^9, 3.8425485133319483`*^9, 
   3.8425737489922953`*^9, 3.8429959618361483`*^9, 3.843086687895028*^9, 
   3.8435999402653313`*^9, 3.843885298134055*^9, 3.8438876921985903`*^9, 
   3.843887763134347*^9, 3.843974760266983*^9, 3.84447729103988*^9, 
   3.847930387561346*^9, 3.848006617033634*^9},
 CellLabel->
  "During evaluation of \
In[63]:=",ExpressionUUID->"f2ed7e13-5d40-434d-90a9-83514eb13fb2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
QMV0y83Hm84/2MygjG3amzOZmMeh8Mv/BlLZNn8=
           "]]},
         Annotation[#, "Charting`Private`Tag$20595#1"]& ], 
        TagBox[
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
CZRMQS0k6tx2l/XtYP0PODrQKg==
           "]]},
         Annotation[#, "Charting`Private`Tag$20595#2"]& ], 
        TagBox[
         {RGBColor[1, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVkHk81PkfgCd3zhnGNYPmJH5uVo58P+9WhGQxhWwlKtaKXEtUtlhmKZpK
SwzZaJIi1pFjrCuU4+eaJBQpyiCypdy//f3xvJ6/nn8eqv8Zj1MiOBzuj3/5
v7mrmf/cUcvHAi+MRJ0THADnC8Rlb3YJYhg4Jp44eADiRVtn3NgN6M8NXV03
gQtkOWS/dWH3IKedFSlWgv3A/JA04cx+hfARMXJ+Aifg3ScbWLR9RB+GqMJD
l+zh/oDrxbzRZbQz8vq9w7/uAZ71NxbZaBNtG5bY9cHBBi72eOt04EWh0fPq
7al9ZlBdUisZwRYFl/usfOeTpjCfRvqgsSkKhjuOtb9INAEf17GiiFkxsPR5
lyWVYwQcQ9sUTX9xYN8K3QpdNIB2+bygp8PiUB098jbCVR/Men31tNolIMhB
3LxdWxcWS01CahwkoZb1uG5fgg48TBct8+iQBHJ/ZveAkAkM13vfsZ9KgZ5h
rr5wigYTBrFnqU7boWjSI6orlgpcuf319c+2w1Mp9uJhTQoo93yExU5p0Awp
H+rSI0OUmS/J1EkGJM/08AbH1WDgVu8/kR0y4KpVqDRapQImOOipspeFDee2
FVIJETgBZbyvrbJwi38+J7tNET52Uy5afS8HexzarIy38HDA7Nrhc01ycLO8
JlG8Qh6kcRGyW3x5WEtjE23HpCC7LPOPJ6YK4Cb68963MRKg69dASS1SgD6U
2BW6TwzGfg9/rqOAh7ry7Ob/OIkAw++3bGlnPMS3vhi2O4eD01aZvvO/4aHk
Gbcq9fEGqiQUM/oa8ZC5A4JY/atofYY/89cqHiL4K9XV6Buya+ktvfkdAVhT
95p+2fyCXElkZtgvBOi1brPznPwHeUcE5DhXEYC0jgvRJS2hE53lBOYXAnDQ
Ye+w/EUUSttgb5krgotWUtfx8Y/obJzj5ssoRfBPuRI9KzaPEgduRFVWKsLT
rYwT93mzKF1vXJj+WRHSmzH1oVohykrQ8wsyVwJVjmdlq5kQ1f/a90g8TAk0
k2mJotJC9Pp89OafD5TAoxkXTN0pRNviNA5g75Xg7OORK91JQsSIackZoRFh
lOSQKCTNon1RPwmjjxGh2tKm/t74LPo5XN5KKZsIV/dijSndcygttJL96DkR
FMv7zieMzKOyYJ+h/QRlEGtiB4iKLiDGwx8W6/crw72kgWiBxiLKmtsrrZ+s
DGGfTPvjGxfRpRAjTHZNGRQ7Xp90V1xCHmfEeN3vVCA4r8Ff+OQzSjEyDTdn
qILQ9FGXavwX1LTgu5t7QhXobOXHMhbLyCisfiB4UhWGxsQPDhd+RQHGM7mD
VDV4lWB849vRbyhvUSXIxk8Nzj+ojQolrSDZ8Igt6Qk1sJV4qRHGW0VHhlbv
mJPV4fXsFWeJkDX0wCbR4ZinOtgW3tw6DutoNV9GyL6mDg1HTbIkGRvIWSIj
rbxbHdhLstl0jU2UHaxhMipJgu2Z0RoFBltI2FcoELMjgVz6bUlTIxxYWxic
NYwnwY214tuVIzhIyakie9eSQO1u6pEruduAezE6LHaFBLbu8uxljgiUntrV
lm1FhpuH1xv8SkShyfmbOj+WDEG7ekVG18Rg0Kg29FUtGao9SvSuJkvANDGu
dXOFDAZ/OH4q8ZKCbyvWahRrDZA9ze1jRUuD9Pja6T1xGvBTupkkjMuC5hN+
s3+dBlTkJsfzflGAi3Pdb7xWNGBpRd/EZQEP74ivth2w1IQtB3val3YCONrO
U7+P0YQjL50fbwkI8PDUxp5d1ZqwwGvszG3GAz5dzl//iyZct3gxbGYpB1HV
mglUcy1oqghuEbRLwvBrgzsqkVowouOjF+ojAjaSWIvMX1qQPX7O0OL4GqoW
FNW1zGkB6xLltkzMZ2R6R6kiVmcHTApM10eOfkSlZ+IfGPvvgKvbX+KEF6aR
nu1MwXvuDnheXDe3XDaBeNIHuXkvdsCROin9qdfDiHDat1NvOwUIJrE3GvMG
UO9AhkOyNgXuzxupfZXoRmlWnS1v7CigCm3WRPM2pD+Ro1p7ggLaPzYURSY0
ou7kkNOcRApIxjJG5FIfo9MGqDmwgAIiFZ5e7x+UIxkBXgW1/ts3OY4E8IpR
cdzkzypvKfBw706PPP1C5EytbJwXoUJScW56ES8PCTuSiG00KkS2XVs2+TET
pYR6BXG/p0JLAp2bP3wNVQZ6Fh88ToWck66siMHLaOL4oVnZeCoI6tIantcn
IVmfg/ptOVQY9MlSfYe7hCxZrJALtVRY1d1uLX03Dp108Sj97gUVgmuO6LDe
RyGOvfvC/GcqbDhNX9ULDkN8zM2Yp0gD5UWMn9QfhN7v+iH8mDENCpiXlVLd
T6LPYcLU6240OCU2HoI/7otEipMK28NoMJtYRyjGvJHCW8rfqxwaLN+yOPag
0QNpaPBfGJbT4PzMWRxJ7ADSPeT1yb+fBmc2Pe7axzggi/Ql6cxPNIhy6Ziy
CtyD7DrSGF0EOpQV4b05K9bIDaeLbZnQ4TetpITJGXMkMRpsm+tOBwb+mWra
fmPEryrdbRNOh+s1vn+nBeiiCM4nm5ccOijl5QQc6aEjnWBzm5gyOpSvoTPC
N1pozD7GWrmPDr4XemqIKmroOqXOqmKBDqsv5dU3nikix7V1S3cFBkQPCcRj
3OXQ5nNkuWDIABUpzsCVCQkEomX0UBcG1PkfJWjqiKAEY4rCfBADVAe/zmf0
rmNPjnJWg9kMKCilhSa8WsYkLuOmhYUMWOm0U55iLmGONWH9QS0MYN09qurZ
O4elTk3wP4wzQCSD5ZHwehrrVnQvCtxgANfNPvJ3nUlMHppvTJOYIFtR10kd
HMNMS3q83lgzoYzV4JgfPoQdIo2Qx3yYUOHpVD8X24+dZU+PD8UxYTd35kvR
ri6M+3mpoD+bCZmpTYffmLRhjX5bgd11TOgzIaecuNSETf5XRr9jhAm3w/eQ
TatqMYndaovNq0wQbfat8havxHTvMyr5JG24fjmZv9foEbZ48NOEpaU2uP21
mjHfWoTV4P6WqzqkDTVDafULxQXYxYep1iaR2vCnJinE0vY25ujtFVjC0Qa9
zXYl1JuF4cUYGbql2hBLERNTq7yBDT9abLrbpf3vzyLVbS5XsfwfG+apM9qQ
uN+ZuHP0dyxQMpWUJ6ED/gV1lIcNidj/AC8yLiw=
           "]]},
         Annotation[#, "Charting`Private`Tag$20595#3"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Exp[
           Part[#, 1]], 
          Part[#, 2]}& ), "CopiedValueFunction" -> ({
          Exp[
           Part[#, 1]], 
          Part[#, 2]}& )},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"quantum noise transfer function,\\n|R| / dB (20log10)\"", 
          TraditionalForm], ""}, {"", 
         FormBox[
         "\"nondegenerate internal squeezing\\nparameters of Li et al, \
2020\"", TraditionalForm]}},
      FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
         Automatic, Automatic}, {{{0., 
            FormBox["1", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {2.302585092994046, 
            FormBox["10", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {4.605170185988092, 
            FormBox["100", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {6.907755278982137, 
            FormBox["1000", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {9.210340371976184, 
            FormBox[
             
             TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {11.512925464970229`, 
            FormBox[
             
             TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0.6931471805599453, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.791759469228055, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.995732273553991, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.912023005428146, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.0943445622221, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.248495242049359, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.382026634673881, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.499809670330265, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.298317366548036, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.703782474656201, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.991464547107982, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.214608098422191, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.396929655216146, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.551080335043404, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.684611727667927, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.802394763324311, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {7.600902459542082, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.006367567650246, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.294049640102028, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.517193191416238, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.699514748210191, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.85366542803745, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.987196820661973, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {9.104979856318357, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {9.903487552536127, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.308952660644293`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.596634733096073`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.819778284410283`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.002099841204238`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.156250521031495`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.289781913656018`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.407564949312402`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.206072645530174`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.611537753638338`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.89921982609012, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.122363377404328`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.304684934198283`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.458835614025542`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.592367006650065`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.710150042306449`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.815510557964274`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}, {{0., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
            
             AbsoluteThickness[0.1]}}, {2.302585092994046, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
            
             AbsoluteThickness[0.1]}}, {4.605170185988092, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
            
             AbsoluteThickness[0.1]}}, {6.907755278982137, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
            
             AbsoluteThickness[0.1]}}, {9.210340371976184, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
            
             AbsoluteThickness[0.1]}}, {11.512925464970229`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
            
             AbsoluteThickness[0.1]}}, {0.6931471805599453, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.791759469228055, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.995732273553991, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.912023005428146, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.0943445622221, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.248495242049359, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.382026634673881, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.499809670330265, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.298317366548036, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.703782474656201, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.991464547107982, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.214608098422191, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.396929655216146, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.551080335043404, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.684611727667927, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.802394763324311, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {7.600902459542082, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.006367567650246, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.294049640102028, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.517193191416238, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.699514748210191, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.85366542803745, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.987196820661973, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {9.104979856318357, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {9.903487552536127, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.308952660644293`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.596634733096073`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.819778284410283`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.002099841204238`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.156250521031495`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.289781913656018`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.407564949312402`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.206072645530174`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.611537753638338`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.89921982609012, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.122363377404328`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.304684934198283`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.458835614025542`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.592367006650065`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.710150042306449`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.815510557964274`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{100, 10}, {1, All}},
      ImageSize->350,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None},
      PlotRange->NCache[{{0, 
          Log[100000]}, All}, {{0, 11.512925464970229`}, All}],
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{
        Charting`ScaledTicks[{Log, Exp}], Automatic},
      TicksStyle->{
        Directive[FontOpacity -> 0, FontSize -> 0], Null}]},
    {
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
           "]]},
         Annotation[#, "Charting`Private`Tag$20722#1"]& ], 
        TagBox[
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
           "]]},
         Annotation[#, "Charting`Private`Tag$20722#2"]& ], 
        TagBox[
         {RGBColor[1, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwV1Xk41mkXB3BZsyYe22PPFpOkLI+k39fO757RREoqhcnSYidblp54Ju+l
IdXYXkUxGUsiJj1tgxAaUSktUoMkW28qyfL++uNc5/pc93XOuc9fR9sv1H2/
oICAQDIT33Ph3O8fS5TPb/ar2fHINJIGfZT12YtXRW0eNjazYJwk1PzuZ95N
Ss03S82a8Zohm8p4vVbqYIdyERjnOuX/+yPvPpWt5tfpxPjYtoTM36J6KV63
Y+NPjK+lGZbH6vVRprJayZ6MJxuetPj29VN1naqWPoz1RtMGad5LStGXtxjI
+K7EAO9J8yBlV+/zIZLxEe24c+Itb6iIsuHYVMZGHNZf1i1DVPv1TR1ZjF+4
Xf7ncMsIZWu8T7uE8cn99Mi5llEqx0KwqZ6xbeLwQk/LGHVSM2m2k/HMqRQF
4bvjlJTdCHuYcVm5qrHF3UlKR8UkY1kUUz9zl8vfOk3Zx34L12Tswlqcfo4P
lGfv23kwFjKz8Jk3+R/FeTmYF8D4lkdIp5rmR0ruYnhLFuO4yDKOjcwM9ZeY
lOgdxmY5A6V7Fmaof4uDvswwnqxVlE8a/0TlLMzbroumUd7rllL0/DO1oJde
HMH40lIzW6b1C1XOebaL/91rrOqP1sxSN+kprlQM453VWybyv1JpYxOigd+d
rjO2O22OOrBrarTzu+tyj3eFfqPMm6KdNh2h8cegtOYm73lKvKPLs5FxmTS3
scJhgbqn5hDkEMt446yHqskiVaiz/v0A4ysBW+qCjZcoBX5Ta14cDR9XD/EX
CgK41SvHPxBP45dXixyhMwIY7OdLb0ugcSD6zyAj1jLErJ818kqkESa5PXdr
zjJcWVp1Ie4ojejiZe2xcoL4yunW5yfRiLes+nIuWxACBk6pmik0Uu57GbTJ
CsEyxym7PJVGQ1WjWARPCJcF34/ZcGlMZLJH1RaFUCCmLzR7nIZuSEJ7W5Qw
FqRWrX2WTsPb7cWliPfCcDSorBz5lUbWWpsT6n4iSDD0L9b8D41WmaLg9qci
eOLoI8LLpLGhe6+RRqsoVrd+G3t7isZ0tenha05iyK7NSNQ/S6PypFCNe5sY
yjyjF4rzmHluf5jz2pfjhySb21uLaQwax8Vqu4ojen7kfFopjUJpwuffE0dO
9u7qT+U0FO5PYrpDAnkbkn/n1tGI2rCXvd5VEhMZaWeOX6PRm9f9MbJNEifO
tj1ruMn8N6Cm7EuzFPIkO7xL2mlICERILd2QwT+tVnbGgzTsm7qrz5ivRL9V
T7j0CgI3tqpeWPRKDK02Vw5UIPCKCCig61fizp7JwlpVgpBVC7wlMzk4npZ5
KL2aIDbeZbE/Sg70Ssd51loCbm9O1NWrcuDW6QgubCDIPWbkG2wmj4qQHxT2
UQT85AeXRcLkoSAYkBnrQDCQGLNYXCEPjbbm08GuBLpHmgqerWLBO4Qb1uVO
4BwVNBbjw8KtX02rN+4gOBAuYyWfz8JOoxDf+F0ENQe9+8hKBQzP9aQc9Gfq
K7dM84kCDKJPFUkEMvPHHSTWpCvAIehQbeIBgtTDJpulvikgsd1n10AYwecq
Xa9Ec0VoTN7e3hPJ9J9UiRgPVUSn+5xUUQyBe6hwWdeQIsy8LrzpTiA4YbI+
3ExXCQnXk7+EJBHcmdq7qdBfCStOn6uYTiEwCeP3HnyjhPxh2d1X0ggC1r37
70NtZchdj9OY5xEUTSsGW/sqI+VBhJxtBoFUeMSSxKAyZsTt0XeSYHffXImZ
qgrOJhS8ksomqLDmOvlsV8G0x1LGzhyCufOSY7xsFQhGm+m0nCGgRU9nXulS
QamOu4tnLkH+QTXT52JsRLs7xSoWEIw9uPhI2J6NOJl4E7kigo0WxrFrk9jY
tyd5+bZiZp+CelWvRjZqWaGPRi8SFKbEhMV9ZYOVHl/MKSeo3m95N99KFYHc
oAbpamZfelblRpwqUGUmklhH8NCkMeRloyo8HHOUzjYSjLDimxe/quL8s4yo
oDsEs183KmttVMPFusGJqTYCiVffDtnGq2Hnqwv6og8I1Ftu/O13XQ2fPUK1
bZ4SpIx3vd7xVQ1P1+xeTHtFMMR6uewnjjrmzn72DB0icLGZ0LY7og7R11lV
txlX7l+wtWxQR/k7mcHoAQLZk9J+az6pI0W+VFWvhyCqQf2YtpkGZP9UvOp2
i+DpgHGJYqQGhjhayTaXCKzFNjdJ1mog1j3zxpMsgoZHl643jWugC9y9z+MJ
1pfI18UZaOISP13Acj+Bkc27C28LNeEYJNBUaU2QadXR9NpeCx1+O/0Lppj7
NVig1OivhQp7MY7LCxpd6YcPZXG1sE8p187/Hg3JR7KKVLMWpFc8bqy8SONE
yI7gQjttGP42VfOLD423llvCfdatgsYFi5iU1674WcBw85KpDraJ9DVSPq5Y
fExxptbqYrhy7s3bARfI4O+cEbYeio86phYGucCwXPfqDbY+qoe9zbNGnTG9
7cMgh6MP9+UzQg/6nXFN4JZ0vac+Plwxl5btdIaL147Aqix9xD/ub8iqcoas
sO5pw2p99JbF/dhT5Iynl6fvlHYy77NKYnJZzji/6+aE9jt92MtVv3FPdUag
WAa7SNQA7yNLn+dEOOP/cTR9uw==
           "]]},
         Annotation[#, "Charting`Private`Tag$20722#3"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 46.89513726786375},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Exp[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Exp[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& )},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"signal transfer function,\\n|T| / [?] (log scale)\"", 
          TraditionalForm], ""}, {"", ""}},
      FrameTicks->FrontEndValueCache[{{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, {{{{48.35428695287496, 
            FormBox[
             
             TemplateBox[{"10", "21"}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {50.65687204586901, 
            FormBox[
             
             TemplateBox[{"10", "22"}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {52.95945713886305, 
            FormBox[
             
             TemplateBox[{"10", "23"}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {55.262042231857095`, 
            FormBox[
             
             TemplateBox[{"10", "24"}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {46.051701859880914`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {46.74484904044086, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {47.15031414854902, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {47.4379962210008, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {47.66113977231501, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {47.84346132910897, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {47.99761200893623, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {48.13114340156075, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {48.248926437217136`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {49.047434133434905`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {49.45289924154307, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {49.74058131399485, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {49.96372486530906, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {50.14604642210301, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {50.30019710193027, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {50.43372849455479, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {50.55151153021118, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {51.35001922642895, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {51.755484334537115`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {52.043166406988895`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {52.266309958303104`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {52.44863151509706, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {52.602782194924316`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {52.73631358754884, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {52.85409662320522, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {53.652604319423, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {54.05806942753116, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {54.34575149998294, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {54.568895051297154`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {54.751216608091106`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {54.90536728791837, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {55.038898680542886`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {55.15668171619927, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {55.95518941241704, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {56.36065452052521, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {56.64833659297699, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {56.8714801442912, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {57.05380170108515, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {57.20795238091241, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {57.34148377353693, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {57.459266809193316`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {57.564627324851145`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {58.257774505411085`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {58.66323961351925, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {58.95092168597103, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}, {{48.35428695287496, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
            
             AbsoluteThickness[0.1]}}, {50.65687204586901, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
            
             AbsoluteThickness[0.1]}}, {52.95945713886305, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
            
             AbsoluteThickness[0.1]}}, {55.262042231857095`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
            
             AbsoluteThickness[0.1]}}, {46.051701859880914`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {46.74484904044086, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {47.15031414854902, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {47.4379962210008, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {47.66113977231501, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {47.84346132910897, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {47.99761200893623, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {48.13114340156075, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {48.248926437217136`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {49.047434133434905`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {49.45289924154307, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {49.74058131399485, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {49.96372486530906, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {50.14604642210301, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {50.30019710193027, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {50.43372849455479, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {50.55151153021118, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {51.35001922642895, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {51.755484334537115`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {52.043166406988895`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {52.266309958303104`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {52.44863151509706, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {52.602782194924316`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {52.73631358754884, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {52.85409662320522, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {53.652604319423, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {54.05806942753116, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {54.34575149998294, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {54.568895051297154`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {54.751216608091106`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {54.90536728791837, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {55.038898680542886`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {55.15668171619927, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {55.95518941241704, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {56.36065452052521, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {56.64833659297699, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {56.8714801442912, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {57.05380170108515, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {57.20795238091241, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {57.34148377353693, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {57.459266809193316`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {57.564627324851145`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {58.257774505411085`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {58.66323961351925, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {58.95092168597103, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}}, {{{0., 
            FormBox["1", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {2.302585092994046, 
            FormBox["10", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {4.605170185988092, 
            FormBox["100", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {6.907755278982137, 
            FormBox["1000", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {9.210340371976184, 
            FormBox[
             
             TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {11.512925464970229`, 
            FormBox[
             
             TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0.6931471805599453, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.791759469228055, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.995732273553991, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.912023005428146, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.0943445622221, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.248495242049359, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.382026634673881, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.499809670330265, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.298317366548036, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.703782474656201, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.991464547107982, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.214608098422191, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.396929655216146, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.551080335043404, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.684611727667927, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.802394763324311, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {7.600902459542082, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.006367567650246, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.294049640102028, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.517193191416238, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.699514748210191, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.85366542803745, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.987196820661973, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {9.104979856318357, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {9.903487552536127, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.308952660644293`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.596634733096073`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.819778284410283`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.002099841204238`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.156250521031495`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.289781913656018`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.407564949312402`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.206072645530174`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.611537753638338`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.89921982609012, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.122363377404328`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.304684934198283`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.458835614025542`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.592367006650065`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.710150042306449`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.815510557964274`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}, {{0., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
            
             AbsoluteThickness[0.1]}}, {2.302585092994046, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
            
             AbsoluteThickness[0.1]}}, {4.605170185988092, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
            
             AbsoluteThickness[0.1]}}, {6.907755278982137, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
            
             AbsoluteThickness[0.1]}}, {9.210340371976184, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
            
             AbsoluteThickness[0.1]}}, {11.512925464970229`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
            
             AbsoluteThickness[0.1]}}, {0.6931471805599453, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.791759469228055, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.995732273553991, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.912023005428146, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.0943445622221, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.248495242049359, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.382026634673881, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.499809670330265, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.298317366548036, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.703782474656201, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.991464547107982, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.214608098422191, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.396929655216146, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.551080335043404, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.684611727667927, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.802394763324311, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {7.600902459542082, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.006367567650246, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.294049640102028, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.517193191416238, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.699514748210191, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.85366542803745, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8.987196820661973, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {9.104979856318357, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {9.903487552536127, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.308952660644293`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.596634733096073`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.819778284410283`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.002099841204238`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.156250521031495`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.289781913656018`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.407564949312402`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.206072645530174`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.611537753638338`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.89921982609012, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.122363377404328`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.304684934198283`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.458835614025542`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.592367006650065`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.710150042306449`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.815510557964274`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{100, 10}, {1, 1}},
      ImageSize->350,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None},
      PlotRange->NCache[{{0, 
          Log[100000]}, All}, {{0, 11.512925464970229`}, All}],
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledTicks[{Log, Exp}]},
      TicksStyle->{
        Directive[FontOpacity -> 0, FontSize -> 0], Null}]},
    {
     TemplateBox[{GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
wOujWPAjmL3XDl1+oSQDhpojvjjA9cnyo+r38cuBpnXb42rhefwsGd2yMCMP
bHZccDsVgRFiacKe2lMKwFUyyeJEAuxDAcec3FerQGMU1/KEfIwoi/7oK/2v
IvB4w+i0X4MTXlb2FetfKYGC0GSptfbw/byqmZoV6mA2nDpqdIVO/L2jwnY0
a4amv6eHqgv3n9f7hQ085yhAtVTNUnYfvL8Bh9ofhvICyjPjmaNwPvkEdH//
Sl8KZCjXo7Tg99engM6arULA7vUCyw/mvY9viqtNiYO92N3FWJi5oqnW5l+W
g6iYv36k/elLHRPVHEIKfKrq/n0H5ukbqfy8BSvA1sery5Th9c/mCQ4nn5YF
z1w1qgG8fgKblm2IkgfaYlJB2nCeMzaOKm2KUADn5xKN8uLgvAqMK1/ruQr4
y47KjZ2H90OHdn9/gSLIrctpP/cNft5OR+3WbCWQba8ZlA77tlg4sbZ8y2+a
dTXXvy8dMSLa6PqvK6e5AfFaI+eiP0bMjy0wQ2z5AGVi4GIFvP8uo9QFJ0wA
aI5Mtu2A3/faJS6DRnMR0DKo08iCOU3r/XDapARYWfW79ijMqQHVyTe6JcG+
/b+mcv/MY13RU65l0uDG6P3d72HurtxiWJAnAx49GpE6C6/X5C+dSN04OcCn
WYrbw3ki8H7O3yKaCkYc6l44RcF50K+TLx2yEkxr19LuJGPE0+eZlsfUFUGg
6JxIahWcRw+TJFuVlcDSqQuYsgZO5O1qHFUaUgcdbynuhUfoBNtbpUpjP7hX
IW9N8crwypxjkN6a9lNz/iKJvHUkRHHNzAkm6S3e21kJ+b+YpLeO8Vaah1kh
bzlXC6RL+iJvvX59MTU8CHlLJzO+3o/DW9dvP5Oo5PBWiinNRYGFvLX9gPHW
FSHIW/u8Gqr3hiFvhcgtsTY7hLy1LQJPPH4MeUuYbmExk428VRAqudK7CXkL
kx619B1H3ooc3/E6MAV5S8EuZb/zdybprRUP5hSNvJC36m3mdWU/IG8lmAjX
RR9A3vo2aP76wyDyVuZsqn01h7cGDMqMRXcySF+5srhTeFuYpK96HKalmjWQ
r5Z0fTlqsBv5ivvyjF9FAPKVirVjiAqHrwx+bkzK4PRV+JhVH4evjMdPV8ax
kK9eD7cXLYYgX0W+uYfXRCBfFV9K7F48jHxVppqXMpKOfCX1MNNiogz5Ktvm
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
4A==
          "], {{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              
              LineBox[{1, 84, 46, 26, 2, 3, 85, 47, 27, 104, 66, 4, 86, 48, 
               122, 28, 105, 67, 137, 5, 87, 49, 123, 29, 106, 68, 138, 6, 88,
                50, 124, 30, 107, 69, 139, 7, 89, 51, 125, 31, 108, 70, 140, 
               8, 90, 52, 126, 32, 109, 71, 141, 9, 91, 53, 33, 110, 72, 10, 
               92, 54, 127, 34, 111, 73, 142, 11, 93, 55, 128, 35, 112, 74, 
               143, 12, 94, 56, 129, 36, 113, 75, 144, 13, 95, 57, 130, 37, 
               114, 76, 145, 14, 96, 58, 131, 38, 115, 77, 146, 15, 97, 59, 
               132, 39, 116, 78, 147, 16, 98, 60, 133, 40, 117, 79, 148, 17, 
               99, 61, 134, 41, 118, 80, 149, 18, 100, 62, 135, 42, 119, 81, 
               150, 19, 101, 63, 136, 43, 120, 82, 20, 102, 64, 44, 21, 22, 
               23, 24, 103, 65, 45, 121, 83, 151, 25}]}, 
             Annotation[#, "Charting`Private`Tag$20778#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              LineBox[CompressedData["
1:eJwVzOc6kHEcx+FHNpmZ4YVTcggOIGfhGGSvUEk2KWSmbIWMomRkJrIi7l7c
1+f6/v7X8+TmF+Q9CgmCoJAiNhmihccUU8IWw7RyzjylbDNCpJ+06QULpNhl
usMoUXa7XrJIql2uP3lHtN2hV3wmza7QXcaIsTv1L0uk25W6x3ti7S69Zpkq
9vnAfW/desMKGXa1HjBOnP1K/7FKpl2jh0wQb/foLV94aNfqEZMk2K810K+S
pU/0F1Mk2m/+P+ua1nHMNEluvXpP17We38yQ7NanofpNGzhhln7C3L9rtj7V
U+Z4YL/VcN3QZ/zhIwM8p5EXNPGSMz4xSITvfmiONusdmvRWtw==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$20778#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 1], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwVztk2QgEAQNHrR0qGTJmiRMmQBpkriYwXSVHh/9eye9hrnccTC4e1wUQQ
BE0iokWBLaJMEmOKaWaY5ZYjMrxxQZw7imzzziVztCmxQ4cr5rmnzDdZPqix
wAMVxoM5utRZ5JFjdlniiSpD8nzSIMEzJ+zR45oflnnhlBH79GnyywohZxyw
yhrrJNlgkxSvnHPIFzf8keYfxGEauw==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$20778#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Dashing[{0, Small, Small, Small}]], 
              
              LineBox[{383, 376, 381, 372, 377, 373, 378, 374, 382, 380, 
               384}]}, 
             Annotation[#, "Charting`Private`Tag$20778#4"]& ]}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, -55.95518941241704}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{100, 10}, {All, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -46.031344816760914`}}, {{
            4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -46.031344816760914`}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, -55.95518941241704}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"strain sensitivity (NSR)\\n/ \\!\\(\\*SuperscriptBox[\\(Hz\\), \
\\(\\(-1\\)/2\\)]\\) (log scale)\"", TraditionalForm], ""}, {
            FormBox[
            "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"", TraditionalForm], ""}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{100, 10}, {All, 1}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Chi]Thr=0.  , \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(c, tot\\)]\\)=\\!\\(\\*SubscriptBox[\
\\(\[Gamma]\\), \\(R\\)]\\)+\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \
\\(c\\)]\\)(\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm), \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
             StringForm[
             "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \!\(\*SubscriptBox[\
\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``ppm, \
\!\(\*SubscriptBox[\(\[Gamma]\), \(c, \
tot\)]\)=\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\)+\!\(\*SubscriptBox[\(\
\[Gamma]\), \(c\)]\)(\!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm), \
\!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.  ", "100. ", "1000. ", "1000. ", 
              "0.1 "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Chi]Thr=0.95, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(c, tot\\)]\\)=\\!\\(\\*SubscriptBox[\
\\(\[Gamma]\\), \\(R\\)]\\)+\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \
\\(c\\)]\\)(\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm), \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
             StringForm[
             "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \!\(\*SubscriptBox[\
\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``ppm, \
\!\(\*SubscriptBox[\(\[Gamma]\), \(c, \
tot\)]\)=\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\)+\!\(\*SubscriptBox[\(\
\[Gamma]\), \(c\)]\)(\!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm), \
\!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.95", "100. ", "1000. ", "1000. ", 
              "0.1 "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Chi]Thr=0.95, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
             StringForm[
             "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \!\(\*SubscriptBox[\
\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``ppm, \
\!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\(R\), \
\(PD\)]\)=``", "0.95", "100. ", "1000. ", "1000. ", "0.1 "], Editable -> 
             False], FontFamily -> "Monospace", StripOnInput -> False], 
           "\"5\[Cross]\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-25\\)]\\)\\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) target \
for 1\[Dash]4 kHz\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.842573750085848*^9, 3.842995963031764*^9, 
  3.843086689084721*^9, 3.8435999413857327`*^9, 3.843885299890576*^9, 
  3.8438876933561563`*^9, 3.843887764244706*^9, 3.8439747614451523`*^9, 
  3.844477291280452*^9, 3.847930388628004*^9, 3.848006618614506*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"5e09794d-2a96-43f3-bdf4-4557a94277bf"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"valsList1", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "pumpPhase0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "False", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.995", "\[Omega]s"}], ",", "pumpPhase0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "False", ",", "False", ",", "False"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\[Omega]s", ",", "pumpPhase0", ",", "0", ",", "0", ",", "0", ",", "0", 
       ",", "False", ",", "False", ",", "False"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotwRP", "[", 
  RowBox[{"valsList1", ",", "None", ",", 
   RowBox[{"{", 
    RowBox[{"Orange", ",", "Green", ",", "Red"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SuperscriptBox["10", "5"]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.841343664570631*^9, 3.841343724582378*^9}, {
  3.8413437767889957`*^9, 3.8413438128078117`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"209a6386-5244-45e9-8323-4028f6e8cff4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"valsList1", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
       "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Chi]Ratio0", " ", 
        RowBox[{"singularityThr", "[", 
         RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}]}], 
       ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", "Rpd0", 
       ",", "True", ",", "False", ",", "False"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotwRP", "[", 
  RowBox[{"valsList1", ",", "None", ",", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Red"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SuperscriptBox["10", "5"]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8413458662722397`*^9, 3.841345898866206*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"d6949277-6182-4c16-bf82-3529a30bce11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "showing", " ", "nIS", " ", "tolerance", " ", "to", " ", "detection", " ",
      "losses"}], ",", " ", 
    RowBox[{
    "vary", " ", "Rpd", " ", "from", " ", "0", " ", "to", " ", "0.95"}], ",", 
    " ", 
    RowBox[{
     RowBox[{
     "0.0005", " ", "is", " ", "the", " ", "quantum", " ", "efficiency", " ", 
      "of", " ", "the", " ", "PD", " ", "in", " ", 
      RowBox[{"aLIGO", "\[IndentingNewLine]", "--"}]}], ">", " ", 
     RowBox[{
     "point", " ", "is", " ", "that", " ", "with", " ", "10", "%", " ", 
      "loss", " ", "in", " ", "the", " ", "output", " ", "chain"}]}], ",", 
    " ", 
    RowBox[{
    "nIS", " ", "is", " ", "not", " ", "affected", " ", "very", " ", "much", 
     "\[IndentingNewLine]", 
     RowBox[{"NB", ":", " ", 
      RowBox[{
      "if", " ", "the", " ", "same", " ", "is", " ", "done", " ", "for", " ", 
       "squeezer", " ", "off"}]}]}], ",", " ", 
    RowBox[{"then", " ", "results", " ", "look", " ", "the", " ", "same"}], 
    ",", " ", 
    RowBox[{"so", " ", "it", " ", 
     RowBox[{"doesn", "'"}], "t", " ", "look", " ", "like", " ", "nIS", " ", 
     "is", " ", "even", " ", "more", " ", "resilient", " ", "than", " ", 
     RowBox[{"before", "?", " ", "at"}], " ", "the", " ", "very", " ", 
     "least"}], ",", " ", 
    RowBox[{"it", " ", 
     RowBox[{"isn", "'"}], "t", " ", "definitive", " ", "by", " ", "eye"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"valsListHeld", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "0", ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
         "0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
         "0.5", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}], 
           "]"}]}], ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
         ",", "0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}], 
           "]"}]}], ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
         ",", "0.5", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"plot\[Gamma]RGrid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2.", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], 
       RowBox[{"(*", "m", "*)"}], ",", 
       RowBox[{"4.", " ", 
        SuperscriptBox["10", "3"]}], 
       RowBox[{"(*", "m", "*)"}], ",", "None", ",", " ", 
       RowBox[{"3", " ", 
        SuperscriptBox["10", "6"]}], 
       RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", ",", "200", 
       RowBox[{"(*", "kg", "*)"}], ",", 
       "\"\<Li et al, 2020; changing \!\(\*SubscriptBox[\(\[Gamma]\), \
\(R\)]\)\>\"", ",", "None", 
       RowBox[{"(*", 
        RowBox[{"see", " ", "\[Gamma]RList"}], "*)"}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5000"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "0.5", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5.", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "50.", " ", 
        SuperscriptBox["10", "3"]}]}], "}"}], ",", "\[IndentingNewLine]", 
     "valsListHeld", ",", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"{", 
        RowBox[{"Cyan", ",", "Dashed"}], "}"}], ",", "Red", ",", 
       RowBox[{"{", 
        RowBox[{"Magenta", ",", "Dashed"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       SuperscriptBox["10", "5"]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{"\"\<nIS_sigRO_tolerance_Rpd.pdf\>\"", ",", "%"}], "]"}], ";"}],
     "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.839462998628564*^9, 3.8394630534178457`*^9}, {
   3.839463091641407*^9, 3.839463145640215*^9}, 3.839463227855548*^9, {
   3.839463271561919*^9, 3.8394633634915752`*^9}, {3.839463402112791*^9, 
   3.839463525960601*^9}, {3.839463559906013*^9, 3.839463560464554*^9}, {
   3.839530106822654*^9, 3.8395302085934353`*^9}, {3.839530292604508*^9, 
   3.839530299231844*^9}, {3.841276729755274*^9, 3.841276752594775*^9}, {
   3.842567258581829*^9, 
   3.8425672601213007`*^9}},ExpressionUUID->"46874195-3581-4ea5-b6d3-\
b716dfe3fd58"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$29922#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$29922#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$29922#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
mVp+hJW9jQyST9K6LGeANdc9fE6MbiH/BVd739o=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$29922#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {0.,
             66.43433298846125}}, {{4.797052277070928*^-7, 11.512924985265}, {
            0., 66.43433298846125}}}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, Epilog -> 
         InsetBox[
           FormBox[
            StyleBox[
             InterpretationBox[
             "\"\\!\\(\\*FractionBox[SubscriptBox[\\(\[Gamma]\\), \\(R\\)], \
\\(2  \[Pi]\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"0.5\\\\\\\"\\\", \
TraditionalForm]\\) kHz\"", 
              StringForm[
              "\!\(\*FractionBox[SubscriptBox[\(\[Gamma]\), \(R\)], \(2  \
\[Pi]\)]\)=`` kHz", 
               NumberForm[0.5]], Editable -> False], 10, FontFamily -> 
             "Monospace", StripOnInput -> False], TraditionalForm], 
           Scaled[{0.8, 0.83}], Background -> RGBColor[0.9, 0.9, 0.9]], 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
UMHCOpuQOKWHIgxxW0gxFXJTOrUnhLSQ5CBREXdQoWOfyYFNrRRUlvAyTPEV
FcRGbBeNJ0mIRatr4a+igTuh97pJpSia6kol36fTINDoN2406TMzI8o7lGtL
g7SbJwPyk2aYdSFeZR57aND569/x28QmmON7PN9KHaPB24/tuoFb+plSuzwM
7ufRQCQyTkuF0MG0dHePPNpIg7Cm0/OhdrXMvdvcqsyHacCKOC+ab1DM5Gze
MctfpEHz2nbl4SdnmDy03bhEjg6M6gjDRq9k5psNrjG+xnQY/6XrU0hXDHMx
eirzzHY6aO7MvHdEZw9zVVnqlc5oOpisdn2Ut92ZKfuKevcThw5SVqiXd8ma
qabGGza6QYeuCMPOkZe6TD1P7/mAx3R4G5D23ccGBaZF9oLEhXk66Lha8g38
hJh2XVmMXpIW6P7X8xu3E/TQisn/PbFR9Hk4M3+HFhD+d7z6qo02MQKzOfM2
v3ME1g03szlUI/CLzYesFR4JfIZ6x6p2VuDlIWw5a8T4ZhCu0YraJnCyMVWW
Hyqw6CnC66krAstA29nXFO1v1itl1PEoOt885zE/bmkp8G3CXel6T4EdfbxD
KjkCE0UY5/SqBH5aPdd6tVfgy98382mTAoeIZVIKRHW/+R8r7Owk
              "]]}, 
            Annotation[#, "Charting`Private`Tag$30094#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
S0frLj2Yde7620NM8axDZdJoOXP1//h/WJ7FaA==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$30094#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$30094#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
aBYKW6rDvIQSiFmCaiDQpnHlzrmX2P8ABU8tcA==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$30094#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {0.,
             66.10118660745087}}, {{4.797052277070928*^-7, 11.512924985265}, {
            0., 66.10118660745087}}}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, Epilog -> 
         InsetBox[
           FormBox[
            StyleBox[
             InterpretationBox[
             "\"\\!\\(\\*FractionBox[SubscriptBox[\\(\[Gamma]\\), \\(R\\)], \
\\(2  \[Pi]\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"5.\\\\\\\"\\\", \
TraditionalForm]\\) kHz\"", 
              StringForm[
              "\!\(\*FractionBox[SubscriptBox[\(\[Gamma]\), \(R\)], \(2  \
\[Pi]\)]\)=`` kHz", 
               NumberForm[5.]], Editable -> False], 10, FontFamily -> 
             "Monospace", StripOnInput -> False], TraditionalForm], 
           Scaled[{0.8, 0.83}], Background -> RGBColor[0.9, 0.9, 0.9]], 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
FxkZMlo//BfNVUKz
              "]]}, 
            Annotation[#, "Charting`Private`Tag$30266#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
9qw5f1/zNGNizX7C56jXhVR/+t99dmiK
              "]]}, 
            Annotation[#, "Charting`Private`Tag$30266#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
WaCyBB4qV359MehB/gfr4tdy
              "]]}, 
            Annotation[#, "Charting`Private`Tag$30266#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$30266#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {0.,
             73.38772316017234}}, {{4.797052277070928*^-7, 11.512924985265}, {
            0., 73.38772316017234}}}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, Epilog -> 
         InsetBox[
           FormBox[
            StyleBox[
             InterpretationBox[
             "\"\\!\\(\\*FractionBox[SubscriptBox[\\(\[Gamma]\\), \\(R\\)], \
\\(2  \[Pi]\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"50.\\\\\\\"\\\", \
TraditionalForm]\\) kHz\"", 
              StringForm[
              "\!\(\*FractionBox[SubscriptBox[\(\[Gamma]\), \(R\)], \(2  \
\[Pi]\)]\)=`` kHz", 
               NumberForm[50.]], Editable -> False], 10, FontFamily -> 
             "Monospace", StripOnInput -> False], TraditionalForm], 
           Scaled[{0.8, 0.83}], Background -> RGBColor[0.9, 0.9, 0.9]], 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}]}, {
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1:eJwd1Xk4VG8bB3DLZOzZRozBjCwv2WIwKOduxREtWrQRhZQ0qOzZTSpSlEIq
JKGhwpssRUMSP21aXirVL2UrlQplvM8zf5zrXJ9/znnu+3ru783y27/OX0JM
TKwAPaL3dO6PIo2LTlNxZhFWkSScXZn3YRWvm6g54yOywefUAZL3mtBVrBI5
ghV1QUbwnig0HBW536Pqn32CQWJDvkMk9pLYjzOPBcOE2tYLIpde1TKzbftC
JDYwo7AzJ9qSG9aOE+cNgkR2UROO98E3gs+7LbIk29b7r8V3QllIi8Zu9gx5
yND9QXh1xIocFV7KWaw4QVS6j4vMzn5zefvMBFHFCovB/nJDXfXw6E9CQpYS
i331iUdCYd8vIpxSJnLZ7D26YvtvIjt6W5zIpva1cdWTxLmnhodF3sxfPZY3
Rcj9VyZe5LT5w9tSp4mXOtIJIt88m9K1/w+x0dcgEfvKgILuoi1/iehF/kmi
ehWS6yuWzxCB7x8mi+ww6allISSSqd6p2NcDVt8MMpsl1uS68rC9XT1l+mli
UKR/KB1711shR/K0GPzHefQY9p6D5btN1MTBv742E5srt/Hs2mxxmB//+iT2
wUviHZEqEvBHiXsaO9ru2u8LJyWgKCPmHHZCt5fRfSVJqPs2txC77lo9NYwn
CdO8d0XYYxn0zwyhJMxUkWXY+iExHfcPUGCVjDcfe4tHf1nYCAWWxlnWYmeZ
L07X9psDf9NeNWK3KxYGdbycA+yU8Dbsv1+EruGrpeDvXEYPtnWPj4lOuxSU
7554hT3OX7jv1koqRFy2+4RdmSlZve4+FZrtl/zC3h3S+33UWRoWf3enWuPz
eFyx4XVIw6XmIjr2gFlUJMtVBjw6MiyxCxTcGhoeyACXH+iK7TXGEG4gZcF3
NMcfm9b9BcY7ZYHK5aViH7D2oVu5ykFrqfxV7Cfnen6E35cDyfmOj7EXikF3
7Qp5WB1XJcTOCqgu/X1PHrL76FZsfL+6mAn2SxXgYfGKYGx365ObY+4qgF+6
Ch+78py4dZOTIliKJ01iy4qFyc82KsJp47pVNsh51blnBFZzISXA8jK2sW8T
82jZXHhQES5ti+fpSGiv0VwlMMh5FIGt75uSJ0sqgVX73QnsYPtcn7EUJdj1
ayTBDrlGuVz/0R0luJhqpsPB/R9qHLoxrQSnevL+wV7W2sM/baMMHk5Hc+yR
PehaBtyDyrCx+0iaA+5XWEA+WasMQOGfdUTe2Xld2eCnMiTeInoWIYfozfBm
2SpAtaFZOCFHRrsIXx1Qgcaz5U0EcvKT7AM1NSqg89A2cQmeb5O3w5kTKjDp
I0hYhvMkycQ3iK0KDj3ughXIDfGPquZwVUGGesXQBflN7CHhpQpVeHF2zzMS
WTya4e70SRUogyPP3XH9Ea35/9NTg2+UUs5aZOcDu4cPeatBYNKOORvwfIQq
2qvmqYFukxe5GTkjpIZX1asG7qFcdW/k6r1bnrsp0yBN2y96J/5e5erxBjca
UNfU7A7C5xtdLmuaRoPGzyOKXGR5Mwf9grs04ChvSY5ATtxn4ST/hwY7F0i/
jUf+dU3fK9ZGHY4EKjil4/9/0Qwb3a8ORUpf72TjesznHt9Wrg5N3+WPXEBe
t59S2vWvOhzjajVXIqdbWIWy9eeBnyDzYyPy3a8+iwp2zoN5OkWWPciTVRlU
SvE8KObZff6AbMFteLL3/Tx4VSH0/oMcYDl0/ilLA5Z96P5OiyKhcFw9yNFX
A+48MlVkI/dWL2cXX9SAn8s1TDYiy4eGzcoOaMCbOOlHscjbnk8XsbU0wVNx
V+Jl5ArH5JXeGzWhSULZ6Sny9EW5Yd5JTfjhurRMKpoEUion43qXJkAYPQKQ
8/YyFvZR6eB+JTUqEXn4UckzyjI6pC5KPNeJ7GBrFml+mA4B/R/eMmJQvfm1
Wl71dOiIaIqMQi5IOMSNmqJDb+BT+RFkvr9dW569Fhg5VSwJjkX9ICc1G6O0
oC+8Zc0s8lOL+pDX9VrAlHbpLI0jYVAt+p5wSguKN8mX+B9G/Zpy0GA6MCBr
8X43Ih7N29s/wUuiGWCtY99gl0CCtqCxxe82A3rXe57xTER5ONr1btMUA27r
1307mUTCv2qvxd052tCyt79yJhnto8VjrKUR2mCd+qbvfCqaZ/+ZJXZ12nA8
t+FNNI8EpUwFP9Of2tDEYfEL01Ge1Gknsdg6IFTbTtCOk/DyjVmRergO9Ctw
pccySXCkOrXK3dABo/6M63anUP4+K7vdOqoDg8diOYLTJFgVqd6MMtIF5xMt
Ca/PoX7sP1xh6acL10s5o4WFJJgsHir+VKALOUc/sBeUoH0iu76g8IUuTF5o
sqkqJ0E52KfTRIYJ1VE9BgE3SOh5krMyzZAJetZNyy42oHmw72x9t4wJl3iO
j7vbSTAdyJ9Xv5MJZNtzwbteErrS9gVnJTOhVPL4b5chlC9mREtgMRMoV4KO
mEu6gdwzJXXiHhO2lLgIThi5QXn0+z3qH5jQZRtcdXS7G5CsmjtjEiy4ZCdn
G5PnBsP3U9Xa9FiQRNtb3RLkBukhm4IKlrJAJXRGSoXhBjWBG8vX72CBOetG
RMlHlOc7NozIH2bBiq7A6fLb6L5uWW/als8CxZIQsa4zJHA8PffF1bPApN+7
8UIE2o+r1vFtXrAge72tb/NWlM8r1n4dm2BB8eYbr1cuJeGT3epQb0s9iNFv
SQlRI2GCO3z01Bo9GOim0UtmXEGiPLWknasHgyGyJ4Y+uQKD0fjC/Loe6PVI
bRtodoU1YsZOswvnQz8/U9w03BWEvQTnq7k+nOp9kFI37AKK0JI9SDcAe4qs
8aZQFzC+ql/TSDeEoayseOlxZxhf/22AwzGE2a4YMfY7Z7gl1qxQu8EQDg4K
JnyfOIOL16bAa1mG4HbSe4GgxhmUKPo5xnxDoOS+n/p92RleVo3fvfzQEPak
H19nlusMF7c2jbGGDGFhu63sriPOEEg9Si+UMoJtkTHT+VHO8H88hiNk
              "]]}, 
            Annotation[#, "Charting`Private`Tag$29977#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$29977#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
0w==
              "]]}, Annotation[#, "Charting`Private`Tag$29977#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
gjc=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$29977#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, 46.60128389908947}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {
            46.60128389908947, 56.47877490206759}}, {{4.797052277070928*^-7, 
            11.512924985265}, {46.60128389908947, 56.47877490206759}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 46.60128389908947}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$30149#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJwl1Xk8VOsfB3Aiso9tjBnLjGX88oqsMcJ8s85MliJrXYoWZE+FRKtJxaXN
kiulRWXLkoSypp8UKeWWbqKbyCBS1nGfR3+c13m9/zjneb7f55zPlxYQ4bZr
hYCAwHl04XvuXObUNVK+9SC3stzwIweyHHIGnbjPmTvyO5at/fVkP4f7gWn1
9+Sy+1xKX4S1fGEmzZhWYN+8TdFb1zrGdCm8vmyWAn/iPXxnll0dW/Yj9/Bn
KupTTD+CUyV23L6b5lbSP5iF+ceXbXL+nxt/LP5gXpNrWvZYOVE+cXSaeRhW
VWHf7nY5kvf+JzNM3WvZhUvNZOknv5jT34p/ew2j6nDZDDOQKXN/2T4lrryc
WWbq9oTfTtYc2XZyjjla//O3K7JOdETMM0Mnk6qxb/VLqVv6LjA725UfLNcj
dbzmrt0is3rjk9+2mHGnrOUzIx5wa7Dv7XatCNZbYtJ1Yh5i+7HdxfoUBUC/
N6kWe+dHvrnQRQFI5pXUYYfsvxOkqyAIkooij7AjJTyzNp8XhKWc04+x918V
fBortwJGE20asePNin9dyVgBO8+YNGMfee6t00YQgu7IoFbs+8U1otFcIdBv
rWnD5qWSv6rwhUBHYEs7tlb4oadtMcJQT4Tn2L4ufYXR34ShROlUF3a6vlWK
asBKkHYxe439RDov+GnvSvhfkG8v9sIYn73PVQTUCpb6sI07/XXVnojA+Py6
AeyJEsOwBw6iwONnfsUuShMqc2sThfLkV+PYQeE9k6OOq6CmS2RmeT8ut0y5
T1cBUdhd0Ai5Xy8ulsYWg9jqDxLYuVIba2v/LwaUlJdK2N48Fb4HRxxWPvPT
xlZ8PgYT7eLg6VBngh1j7E82YksA98ZLe+zu7M6pfW0SUPhRywfbUACeV9lL
gi0IRmCn7y67+atZEuqmarnYYx3UIwwbKRBxryrAdjbO8DnUIAUvfX2bsYuy
BY3rraVhyJ0+hC0uEC25VCcNuhXXZYyRc8oyL7UYyYDhnIEF9uod9dTThTKQ
Uz0ajN13KqpHR4YAlcVxV7C1dpzIEecQ4LB76nvsUEamP+8EATotptRMkCtl
72h1PSbAhsY/Q7AXhuuGy+cIUKcQ+Bjbtqmz5KKpLAheOqtmiuxCpmhH7pcF
P83Bc9je0bsvc6pkQcO7iLgOObD9nqz2tCy4ak3fxQ7XWOQumcjBPIngYYYc
G8/i/x0jB0v5eQrmyMe7z8dUVsqBfdRlHnaa7seRtB9ykOCze5CB8+CY7o5g
E3nwKHg5a4Fcm9RVujJSHpwFl9Qskf9JOMC/elceevS8g6yQBeNVnK2H5KE+
3e2dNa7/YNPldxoKMLk4HgfIjjFBIwf8FODqcKeTDf4/oqQZ8jkKIFxh42OH
nBpeyS3tUYBj9v43HZDL9vq+2SirCIOeFEs2fl+R60TtRkWgEsbknfD+Ru3E
1yQrQpjZOVtXZEk9C63cBkU4RMrpcUM+GrbWWnJeESrpfT2eyD+LtbwTTIng
vTN781a8/phy9GgEEa4wCr2243r0Zc5uu0OEZLPrM7uQ3SKEb3Z8JoKks6Zj
KHLKWqMoEy0liFgMmN+H3DDub5kbqATNDHZ5AvJMaaqocIESdFSeTU1GXhtZ
2713QAm2vWJUZCDvNhj+6xWNBOxPli55yHkTxOD1O0iwR3MhrQi5p8zOpCCf
BMW6QkV1uJ6o6CXxfhLcamkYeIG87c3cNROKMtiBvdAA8t31xx38PJVBceln
9C/kuXyJEW6GMgQZTB+U6ecAR+RC6r0OZUg66rVdFzlnr4rhe1EyVBxcOMZC
Hum6/lrYlgwXa3ZCCLLFOr1Y/UQyxFtkC6Ujp1yuonjXkEGtj2T7EDn3yIHI
uFkyTDJmq3nIJbvMWnMYFGgNP9Gi8wn1gzOjXBdHgbnhNpNg5Fdra8I/1FAg
0yNuuBz5i0J8M3+WAuypzN6VA6hfsxYkqoUK2BiFSAUii3+cD90QrwKxzxJv
PUNWbalrDHioAjK+xr0wiPJwtOOT16wKeGwQ9GpE/qzwQdDZXBWmM0h/bPqM
5o8Vj2ZzUBXESx4Sx5GLdi1uMLuvCgMpk1l5/3KAkCYVsGZaFe6NhT/1/4Ly
5L7qMZqJGpAWvpoYD3Fgvah1k0S5Ghx5t1WMMIzy9nXhw6ZRNUhhbDokPMIB
o2vyFXE66nApP3Gj0DdUf0TiXYMAdahXpZwQHeWArtVwwVCuOpx2GswQ46H5
Ib4lN++tOqQyxrbykWVD/dt1xajQ0PWN/maMA53dFxyS6VRYdeu286Fx9P0z
2ps+2VLhM0ljogt5Tf9lpZpAKnAZWUmFyB3JYaHpx6lAsC9tqkXPh+oxG/cU
UIE6H9jcitaXeE0gMpupUPqC3Z+A9n8nfiCEOEiFuH93euaifnBolY95K2gQ
leidPPEBnX/bSYVWDRpIiwWsD+hB5x3uFZxrQ4Ns63POC+0on/Z43tmynQZn
XFmE5scov7d7fJNMpEHSXxVmjhUcMHd3DztcQwOpbOcrMZlo/jm5lZi+pcEF
lRBC2imUv/abx3k/aNB+ga1pFceBITPXKD8DDajbnxU84MOBTQKrrZcMNcHS
cnifxks28HuY5uP6WqDtyWKXu7BBGhrPfyFrQ8+B7zSDtyxYfVurso5Mh9yy
G3Z5niyY2PK939ycDtWSiSk9jix4IPBIqsqDjuboxA8pBgtY3l57itPpMC+x
ueUohQUEYa0Lq0vo0MwunKyTZEFv6UTDjWd0OMNqeD+z6Aj5W+t5tGE67CKH
7zUdd4Q9oqfJeSI6cPVc2Z/R/Y7wH/uwIKc=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$30149#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$30149#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$30149#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, 47.751239562758144`}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {
            47.751239562758144`, 56.436770173870656`}}, {{
            4.797052277070928*^-7, 11.512924985265}, {47.751239562758144`, 
            56.436770173870656`}}}}, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 47.751239562758144`}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
Idm22tXnOgv+B6PhrR4=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$30321#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
1w9pBLDhf2Rqhio=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$30321#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
oKf+ig38H4+aEdI=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$30321#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
zqcBqr8GmZ4H7eD/Y2z91Q==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$30321#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, 48.78412781561771}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {
            48.78412781561771, 57.00772939850125}}, {{4.797052277070928*^-7, 
            11.512924985265}, {48.78412781561771, 57.00772939850125}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 48.78412781561771}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}]}, {
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
Yrrv7joC9pqJmO57/G7heqMMTPd9w3N8Muw5pvtuwLMuOf0x9HuZ5JuUhTPu
zxOP3cye2e/1I4IFM/vtJP6OObPfKRF9xs9n9JtTrO2zxox+c5uOviib0e+/
H+LXqszo9/19zysc50K/n/Wp/JyMgX63jWUL+Q7C/bmfXfzO5UbQ70XXf4S8
t4J+h6q8SpPdDv02naUdr+MB/fa+uF17Yxj0u4kxUK5aBv2uWhy+zSMO+m1U
FftLrQn6XXk0YNl5I+h37j3tt4kV0G9Re/uH7QbQ71UDAiudSqHfOz9aLude
C/32XKGl87sK+i3P/7X9Dxv6LcIfazuz30S01ctZ96HfFouGW/1loN96R228
SlnQ76wk2d6bNtDvpSJ+PvnO0O817j6rz3tDvx/48wV7JkG/R7qa3US/Qr/F
hRg7tylCv9szUoutD0G/w/a4Rg7FQb9Tf9X4zuy3SZ3z7sGsGX8vaJKpIXig
3zG2w2mz1kK/T1suFuPeCv1OmHTn3b4D+j1H6er8uN3Q7wct6pcKoqHfQ1md
zztboN+H6sYnWi2h32bMryGG2dDvyMBYx8Cr0G+fEJdHd95AvyvyTXfnqEG/
i5Svf2vdAP0uOe+RM2EH/T7gsO288U7o94FM9+LKAOh39Iqfg0NZ0O/vIsf1
raieT98PnpV1k08chvu9W+eMnPfNuN8rVF90dGbPR6Y4mhNOQc9Xn9ZY/3QC
7r9K0trUukyg53zuIuqxm6HnW6TO3DN2hJ5XOyuzn+yCnmv+ZMVcj4Seb1DW
XF74GHp+I+tU0Bsv6Lm1bmv4l3LoucqWedd1iqHngyeMDZOfQs/frbTaPF8Z
em7zN9RqHxt6Hl3lv/e9LfT8if2qXX0u0HMTLr/BuX7QcwONtPvBZ6HnKjK+
CrltmL7fUVQKv+HPB31/66nyTicU+n4zP+dPqzD0vdY+rP2sGfQ9VeK2mcc2
6HtD/zutfXug7w71dTcSjkLfzXO0x2O6oO9ndi7MtNGBvndUvywd2wR9f5q1
uzXbDfp+vSewvSkI+p77QNhQ4Rb03ft1xkW9a9B3nYMdAiX2TLp3R77GX107
Br2bnqd7Nz1z/K9/032Yfny6D9PzdB/+//9vwf+bV9Hvt+nHp6//6Xn6epme
Pyxs2+51GX7flVcd14VT/+/j076cfnx6/h/4hs4g
          
          "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[1, 0, 0], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{507, 509, 510, 508, 504, 506, 498, 502, 497, 501, 
                496, 505, 
                500}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, \
{}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              
              LineBox[{1, 84, 46, 26, 2, 3, 85, 47, 27, 104, 66, 4, 86, 48, 
               122, 28, 105, 67, 137, 5, 87, 49, 123, 29, 106, 68, 138, 6, 88,
                50, 124, 30, 107, 69, 139, 7, 89, 51, 125, 31, 108, 70, 140, 
               8, 90, 52, 126, 32, 109, 71, 141, 9, 91, 53, 33, 110, 72, 10, 
               92, 54, 127, 34, 111, 73, 142, 11, 93, 55, 128, 35, 112, 74, 
               143, 12, 94, 56, 129, 36, 113, 75, 144, 13, 95, 57, 130, 37, 
               114, 76, 145, 14, 96, 58, 131, 38, 115, 77, 146, 15, 97, 59, 
               132, 39, 116, 78, 147, 16, 98, 60, 133, 40, 117, 79, 148, 17, 
               99, 61, 134, 41, 118, 80, 149, 18, 100, 62, 135, 42, 119, 81, 
               150, 19, 101, 63, 136, 43, 120, 82, 20, 102, 64, 44, 21, 22, 
               23, 24, 103, 65, 45, 121, 83, 151, 25}]}, 
             Annotation[#, "Charting`Private`Tag$30035#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 1, 1], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwlzulajVEAhuG9S5ShSKlE2aLI0CAn4hAcQE5HmqQ0qUwVodGckCYVIoRK
CpWo6Hb147nu9a71/fhCp8+cyg8GAoESndU3PdBVFWhWD3VN4T58xXOa0yNd
1wb3r3mQhfyux9plNzKCb5jOIv5QtxLsJm7kGDNYzJ96okS7mZv4loeC6/85
rx4l2TcYyXc8zFIu6Kl22zcZxXFm8jwX9Uwt2uzuPY+wjL/0XMn2LW7hBx7l
BS6pV3vs29zKjzzGcv7WC+2173AbJ3icFfyjPqXYrYzmJ2bxIpfVr1S7jTH8
zGxWckUD2me3czu/MIdVXNWgQnYHd3CSuazmXw1pv93JWE7xBGv4Ty+VZndx
J6eZx1oGOIwDvMs4fuWl/0/OI7ynOtWrQZcV5m2U9xXvPMOTvMI1UA5ayw==

               "]]}, Annotation[#, "Charting`Private`Tag$30035#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              LineBox[CompressedData["
1:eJwV0Nc6ggEAgOG/S+kmhIxQpMyMjGjYREZRRPaKcMfeDt7n+Y6/cKmSOQkF
QZCjR5yyziwReumjnygDDDLEGTnmaLLHMOds8MI8t+zTJsYFm7yS4Y4Dvhih
Sp43FmhxyCg1CixyzxHfjHFJkXeWeKBMhzhXlPhgmUeO+SFBnS0+yfJEd84v
4zTYZoUJrtlhlSSTpEgzxTQ37LLGMxX+mOEfZP0mLg==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$30035#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 1], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwNxmc6ggEAAODPUVzJAfxwAO6SEcnOzl4VQig7o8wQMpK4gvfH+zxvY0tb
U2tDEATNhOSUNaZpp4NOugjTTQ8RzkgQ545desmT5I0Z7tmjSpRzUlSY5YF9
vunjgnXemaNEln4u2WCeR3LUGOCKTT5Y4IkDfhikQJpPFnnmkDpDFNniiyXK
HPHLMNdss8wLx4xwww4rxBhljHEmmOSWDKu8csIfU/wD5AVJHw==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$30035#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Dashing[{0, Small, Small, Small}]], 
              
              LineBox[{507, 500, 505, 496, 501, 497, 502, 498, 506, 504, 
               508}]}, 
             Annotation[#, "Charting`Private`Tag$30035#5"]& ]}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, -55.96651648835224}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {All, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{4.797052277070928*^-7, 
            11.512924985265}, {-55.96651648835224, -45.320027431725165`}}, {{
            4.797052277070928*^-7, 
            11.512924985265}, {-55.96651648835224, -45.320027431725165`}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, -55.96651648835224}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {All, 1}}, 
         ImageSize -> 250, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
0A==
          "], {{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              
              LineBox[{1, 76, 43, 26, 2, 3, 4, 5, 77, 44, 27, 93, 60, 6, 78, 
               45, 109, 28, 94, 61, 121, 7, 79, 46, 110, 29, 95, 62, 122, 8, 
               80, 47, 111, 30, 96, 63, 123, 9, 81, 48, 112, 31, 97, 64, 124, 
               10, 82, 49, 113, 32, 98, 65, 125, 11, 83, 50, 33, 99, 66, 12, 
               84, 51, 114, 34, 100, 67, 126, 13, 85, 52, 115, 35, 101, 68, 
               127, 14, 86, 53, 116, 36, 102, 69, 128, 15, 87, 54, 117, 37, 
               103, 70, 129, 16, 88, 55, 118, 38, 104, 71, 17, 89, 56, 119, 
               39, 105, 72, 130, 18, 90, 57, 120, 40, 106, 73, 131, 19, 91, 
               58, 41, 107, 74, 20, 21, 22, 23, 24, 92, 59, 42, 108, 75, 132, 
               25}]}, Annotation[#, "Charting`Private`Tag$30207#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 1, 1], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwtzvc20GEAx+GflXEXbqlL6AK4CmQmI2SvjJJsUshM2QoZhWRkJrIiT+f4
4zmfc97ved/zxj6Ivx8XEgRBIglM0UjJ3VkSD0lmmleUskYfKczQxC/KWOcd
N6QySzPHlPOdfv6Rxida+E0FGwwQ+Fi6fKaVEyr5weD/2Z6hc7RxShWbDBFq
f6TztPOHarYYJsyeqQt0cMYzthkh3P5Yv9DJOTXs8J4Ie5Yu0sUFtfxklHv2
bF3iNZfUscsHIu05ukw3V9Szx0dyWeENf3nOPmNEuftEv/KWa15wwDjR9jz9
Rg8NHDJBPgU8pZAiVunlJUdMEuONYr0Fqftfsg==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$30207#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              LineBox[CompressedData["
1:eJwNxlc3ggEAANDPM2VmJCOFrIys7C3ZRfboI/vw/9/ch3vOTYZ/pd+6IAhC
6qXIDGkaiBClkSaaOSTHINds0MIRs4QMccMmH7RyzBwvDHPLFm2cME+GGO2c
ssAId2zTwRmLvDLKPTt80sk5eWqM8cAuX3RRYok3xnlkj2/ilFnmnQme2Keb
C1bI8kyBBJesMkkPFdaYopc++kkywBXrTFPlgB9S/AM6hxk/
               "]]}, 
             Annotation[#, "Charting`Private`Tag$30207#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 1], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwVyec2ggEAgOHPpbilLqH/yoxsyUpEZG8yQtl7ZWbkmjx+POe857y14Wgo
UhMEQZg6ccA0g/yPKPU00EgTh+QY4oYNmikywyvD3LLJFy2UmOWNEe7YIsYR
c6Ro5Zh5RmnjhAXS3JMnzimLvDPGA9t8084ZS3wwziM7/NDBOctUyPDELlU6
uWCFTyYos0cXl6wyyTMFurlijSw99NJHgn6SXLPOFC/s88sAfzUaPsM=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$30207#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Dashing[{0, Small, Small, Small}]], 
              
              LineBox[{474, 467, 472, 463, 468, 464, 469, 465, 473, 471, 
               475}]}, 
             Annotation[#, "Charting`Private`Tag$30207#5"]& ]}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, -55.95518941241704}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {All, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -46.48268503905787}}, {{
            4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -46.48268503905787}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, -55.95518941241704}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {All, 1}}, 
         ImageSize -> 250, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
uHki
          "], {{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              
              LineBox[{1, 54, 36, 26, 2, 3, 4, 5, 6, 7, 8, 55, 37, 27, 64, 46,
                9, 56, 38, 72, 28, 65, 47, 77, 10, 57, 39, 73, 29, 66, 48, 78,
                11, 58, 40, 74, 30, 67, 49, 79, 12, 59, 41, 75, 31, 68, 50, 
               80, 13, 60, 42, 76, 32, 69, 51, 14, 61, 43, 33, 70, 52, 15, 62,
                44, 34, 16, 17, 18, 19, 20, 21, 22, 23, 24, 63, 45, 35, 71, 
               53, 81, 25}]}, 
             Annotation[#, "Charting`Private`Tag$30379#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 1, 1], 
               Dashing[{Small, Small}]], 
              
              LineBox[{82, 138, 118, 107, 83, 84, 85, 86, 87, 88, 139, 119, 
               108, 149, 129, 89, 140, 120, 158, 109, 150, 130, 164, 90, 141, 
               121, 159, 110, 151, 131, 165, 91, 142, 122, 160, 111, 152, 132,
                166, 92, 143, 123, 161, 112, 153, 133, 167, 93, 144, 124, 162,
                113, 154, 134, 168, 94, 145, 125, 163, 114, 155, 135, 95, 146,
                126, 115, 156, 136, 96, 147, 127, 116, 97, 98, 99, 100, 101, 
               102, 103, 104, 105, 148, 128, 117, 157, 137, 169, 106}]}, 
             Annotation[#, "Charting`Private`Tag$30379#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              
              LineBox[{170, 225, 207, 195, 171, 172, 173, 174, 175, 176, 177, 
               226, 208, 196, 237, 219, 178, 227, 209, 243, 197, 238, 220, 
               246, 179, 228, 210, 244, 198, 239, 221, 247, 180, 229, 211, 
               245, 199, 240, 222, 181, 230, 212, 200, 182, 183, 231, 213, 
               201, 184, 232, 214, 202, 185, 186, 233, 215, 203, 241, 223, 
               187, 234, 216, 204, 188, 235, 217, 205, 189, 190, 191, 192, 
               193, 236, 218, 206, 242, 224, 248, 194}]}, 
             Annotation[#, "Charting`Private`Tag$30379#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 1], 
               Dashing[{Small, Small}]], 
              
              LineBox[{249, 296, 282, 274, 250, 251, 252, 253, 254, 255, 256, 
               297, 283, 275, 304, 290, 257, 298, 284, 310, 276, 305, 291, 
               313, 258, 299, 285, 311, 277, 306, 292, 314, 259, 300, 286, 
               312, 278, 307, 293, 315, 260, 301, 287, 279, 308, 294, 261, 
               302, 288, 280, 262, 263, 264, 265, 266, 267, 268, 269, 270, 
               271, 272, 303, 289, 281, 309, 295, 316, 273}]}, 
             Annotation[#, "Charting`Private`Tag$30379#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Dashing[{0, Small, Small, Small}]], 
              
              LineBox[{328, 321, 326, 317, 322, 318, 323, 319, 327, 325, 
               329}]}, 
             Annotation[#, "Charting`Private`Tag$30379#5"]& ]}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, -55.95518941241704}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {All, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -46.79274882219442}}, {{
            4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -46.79274882219442}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, -55.95518941241704}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {All, 1}}, 
         ImageSize -> 250, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}]}}, AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"],
   "\"nondegenerate internal squeezing\\nparameters of Li et al, 2020; \
changing \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\)\"",TagBox[
    GridBox[{{"\"\"", "\"signal\"", "\"quantum noise\""}, {
      "\"sensitivity (NSR)\"", "\"transfer function\"", 
       "\"transfer function\""}, {
      "\"/ \\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) (log scale)\
\"", "\"/ [?] (log scale)\"", 
       "\"/ dB (20 \\!\\(\\*SubscriptBox[\\(log\\), \\(10\\)]\\))\""}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{3}}}], "Grid"],TagBox[
    GridBox[{{
      "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \[Pi]\
\\)]\\) / Hz (log scale)\""}, {
       FrameBox[
        TemplateBox[{
          StyleBox[
           InterpretationBox[
           "\"\[Chi]/\[Chi]Thr=0.  , \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
            StringForm[
            "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.  ", "100. ", "1000. ", "1000. ", "0   "], Editable -> 
            False], FontFamily -> "Monospace", StripOnInput -> False], 
          StyleBox[
           InterpretationBox[
           "\"\[Chi]/\[Chi]Thr=0.  , \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.5 \"", 
            StringForm[
            "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.  ", "100. ", "1000. ", "1000. ", "0.5 "], Editable -> 
            False], FontFamily -> "Monospace", StripOnInput -> False], 
          StyleBox[
           InterpretationBox[
           "\"\[Chi]/\[Chi]Thr=0.95, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
            StringForm[
            "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.95", "100. ", "1000. ", "1000. ", "0   "], Editable -> 
            False], FontFamily -> "Monospace", StripOnInput -> False], 
          StyleBox[
           InterpretationBox[
           "\"\[Chi]/\[Chi]Thr=0.95, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.5 \"", 
            StringForm[
            "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.95", "100. ", "1000. ", "1000. ", "0.5 "], Editable -> 
            False], FontFamily -> "Monospace", StripOnInput -> False], 
          "\"5\[Cross]\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-25\\)]\\)\\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) target \
for 1\[Dash]4 kHz\""}, "LineLegend", DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 0, 1], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                  ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"Directive", "[", "10", "]"}]}], ",", 
              RowBox[{"LegendMarkerSize", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"{", 
                    RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
         Editable -> True], FrameStyle -> Thickness[Tiny], StripOnInput -> 
        False]}}, AutoDelete -> False, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]},
  "Labeled",
  DisplayFunction->(GridBox[{{"", 
      ItemBox[#2, BaseStyle -> Directive[12, FontFamily -> "Calibri Light"], 
       DefaultBaseStyle -> "LabeledLabel"]}, {
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
       Directive[12, FontFamily -> "Calibri Light"], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#4, BaseStyle -> Directive[12, FontFamily -> "Calibri Light"], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left", ",", "Bottom"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"12", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"Calibri Light\""}]}], 
           "]"}]}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.839463163615879*^9, {3.839463303487255*^9, 3.839463367832541*^9}, {
   3.839463423565139*^9, 3.839463505331325*^9}, 3.839463564806363*^9, 
   3.8395300049621773`*^9, {3.839530118635537*^9, 3.839530141138071*^9}, 
   3.8395302130869637`*^9, 3.839534996793852*^9, 3.8396158645561438`*^9, 
   3.841276901666856*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"57ba49d4-97de-4cff-b5e8-603d05eca57e"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "showing", " ", "nIS", " ", "tolerance", " ", "to", " ", "idler", " ", 
     "losses"}], ",", " ", 
    RowBox[{
     RowBox[{
     "vary", " ", "Tlc", " ", "from", " ", "0", " ", "to", " ", "1000", 
      "ppm"}], "=", 
     RowBox[{
      RowBox[{"0.001", " ", "to", " ", "100000", "ppm"}], "=", "0.1"}]}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
    "in", " ", "order", " ", "to", " ", "have", " ", "the", " ", 
     "singularity", " ", "threshold", " ", "not", " ", "swap", " ", "over", 
     " ", "to", " ", "the", " ", "DC", " ", "pole"}], ",", " ", 
    RowBox[{
     RowBox[{"need", " ", "\[Gamma]a"}], "\[LessEqual]", "\[Gamma]c"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"so", " ", 
      RowBox[{"don", "'"}], "t", " ", "use", " ", "\[Gamma]c"}], "=", 
     RowBox[{
      RowBox[{"0", " ", "unless", " ", "\[Gamma]a"}], "=", 
      RowBox[{
      "0", " ", "as", " ", "well", "\[IndentingNewLine]", "swapping", " ", 
       "over", " ", "is", " ", "not", " ", "unphysical"}]}]}], ",", " ", 
    RowBox[{
    "but", " ", "it", " ", "is", " ", "a", " ", "good", " ", "test", " ", 
     "of", " ", "the", " ", "regieme", " ", "of", " ", 
     "\"\<large arm loss\>\""}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Tla1", "=", 
     RowBox[{"0.5", "Tla0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"idlerLossList", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"100.", ",", "1000.", ",", "1000."}], "}"}], " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsListHeld", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "pumpPhase0", ",", "Tla1", ",", "Tlb0", ",", 
         RowBox[{"idlerLossList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "Rpd0", ",", "True", ",", 
         "False", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{"Tla1", ",", "Tlb0", ",", 
             RowBox[{"idlerLossList", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "False"}], "]"}], "]"}]}], 
         ",", "pumpPhase0", ",", "Tla1", ",", "Tlb0", ",", 
         RowBox[{"idlerLossList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "Rpd0", ",", "True", ",", 
         "False", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{"Tla1", ",", "Tlb0", ",", 
             RowBox[{"idlerLossList", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "False"}], "]"}], "]"}]}], 
         ",", "pumpPhase0", ",", "Tla1", ",", "Tlb0", ",", 
         RowBox[{"idlerLossList", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "Rpd0", ",", "True", ",", 
         "False", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{"Tla1", ",", "Tlb0", ",", 
             RowBox[{"idlerLossList", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", "True"}], "]"}], "]"}]}], 
         ",", "pumpPhase0", ",", "Tla1", ",", "Tlb0", ",", 
         RowBox[{"idlerLossList", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", "Rpd0", ",", "True", ",", 
         "False", ",", "True"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plot\[Gamma]RGrid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2.", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], 
       RowBox[{"(*", "m", "*)"}], ",", 
       RowBox[{"4.", " ", 
        SuperscriptBox["10", "3"]}], 
       RowBox[{"(*", "m", "*)"}], ",", "None", ",", " ", 
       RowBox[{"3", " ", 
        SuperscriptBox["10", "6"]}], 
       RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", ",", "200", 
       RowBox[{"(*", "kg", "*)"}], ",", 
       "\"\<Li et al, 2020 but changing \!\(\*SubscriptBox[\(\[Gamma]\), \
\(R\)]\)\>\"", ",", "None", 
       RowBox[{"(*", 
        RowBox[{"see", " ", "\[Gamma]RList"}], "*)"}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5000"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "0.5", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5.", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "50.", " ", 
        SuperscriptBox["10", "3"]}]}], "}"}], ",", "\[IndentingNewLine]", 
     "valsListHeld", ",", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red", ",", 
       RowBox[{"{", 
        RowBox[{"Cyan", ",", "Dashed"}], "}"}], ",", "Magenta"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"1", ",", 
       SuperscriptBox["10", "5"]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.839463763254097*^9, 3.83946386606107*^9}, {
  3.839464282387472*^9, 3.8394642917179337`*^9}, {3.839464338118177*^9, 
  3.8394643525701313`*^9}, {3.839464432930862*^9, 3.8394645218019953`*^9}, {
  3.839464562714445*^9, 3.839464623436798*^9}, {3.8394647824837503`*^9, 
  3.839464785845295*^9}, {3.839530577327402*^9, 3.8395305944701014`*^9}, {
  3.839530712054962*^9, 3.83953071338658*^9}, {3.83953115211553*^9, 
  3.839531280644898*^9}, {3.839531334354725*^9, 3.839531397063528*^9}, {
  3.8395314375235653`*^9, 3.8395315033374166`*^9}, {3.839531534729444*^9, 
  3.8395315361170053`*^9}, {3.839531584488102*^9, 3.839531598934246*^9}, {
  3.839531643382691*^9, 3.8395316475329943`*^9}, {3.8395316906798897`*^9, 
  3.839531694113668*^9}, {3.8395318360288677`*^9, 3.839531844057975*^9}, {
  3.841276621219239*^9, 
  3.841276622154776*^9}},ExpressionUUID->"1c819ce3-a6af-482b-a396-\
09b7a4b304ca"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235184#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
rzP/ZOlhF0USCLnCB+FdKKFoL04b+x/pHi0G
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235184#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
4AEvzFMwDv9EQBme9qWaldW7Yf8D1eri/g==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235184#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1: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
34rx
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235184#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {0.,
             81.00353556647083}}, {{4.797052277070928*^-7, 11.512924985265}, {
            0., 81.00353556647083}}}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, Epilog -> 
         InsetBox[
           FormBox[
            StyleBox[
             InterpretationBox[
             "\"\\!\\(\\*FractionBox[SubscriptBox[\\(\[Gamma]\\), \\(R\\)], \
\\(2  \[Pi]\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"0.5\\\\\\\"\\\", \
TraditionalForm]\\) kHz\"", 
              StringForm[
              "\!\(\*FractionBox[SubscriptBox[\(\[Gamma]\), \(R\)], \(2  \
\[Pi]\)]\)=`` kHz", 
               NumberForm[0.5]], Editable -> False], 10, FontFamily -> 
             "Monospace", StripOnInput -> False], TraditionalForm], 
           Scaled[{0.8, 0.83}], Background -> RGBColor[0.9, 0.9, 0.9]], 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235360#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235360#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
+w6x/wXv4h4s
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235360#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1:eJwVkWk0FIofhklZxzKWsU5mxqBc0mLffr8WLhKpLImESjLJmiXkUk26kXAv
15Y9kSWRMCQUiUtulohoIcvYkizFv/+H97znOe85z5eX6nrxyJlNHBwcd3/l
/522mvQ1WyrTaH+ANWdWqDmah4kv2TOLYQtbJdfthxmGczVNHGbWwTO1+KNK
oWaYbJLy0YLZAdmqHZ+LLpui4pdrI+bMIWg9N+r/JMQE8+/Lqmk9nwG/AIHH
6bR9eL/bMiJjcAlmXtev5W43wHy95aOy6utw9E3viL6RBkZ02Cu3iHCh++eJ
L7/XKuPj4moeXyYXhvkP3HEYUkR2jMwXuXUufDVx9aQVLx0dLN8V+E5txhLh
6T9jIygYt8Mwmuy6Bf0XdEl5uWR8IZTh0dq/BT1uOzs89JTBPZ3OKltfcKPZ
dWbz2WBxnCvZdeGJCQ+S5M1JHAlEfBDLVXakhQfvaFlKdw4I4jmvnoXp33mR
9tTwuJUUH9It72kyW3lxZGBob+7oZhxRCw6imvHhSRM+w7uanJgmeLC29iUf
1k6qS74k/wB7tty6jTk/ns7SapF8uQQSHTM418aP35k6uWq2C+C/x1lmt5kA
nuFqTaAEsKH7n86vfi0C2HOXHKBwaxx2cWBHpTEBE+kyNZ1PP0Dc2bL8700E
NLtNt1VpHoKZdkqE7j5BzCLss3dJ6INDe+4cv9wgiHObTnr75nXDg38499QZ
CeGxT3o/boV0AD+HL2GDJYQN2UGVxVYtkFKW9HfzbmFM/M4QT2xohO0udZSb
BcIobu+zomlUD+9u+PQoC4tgVCPDYevlJ0B3uZrCby6CmxwX45LYj4Chm+TM
viqCDUCoSj5eBhXEQnrXUxHkfNc8WEUugh8TrInyVRGUL1e1COvIh/2NnSV/
aRLRr7zR5evVHLCUkVX0DiDioL7msOh4Jtj7nk01r/y163rWL6tkgFvbQ6Li
NyL+KAzW5+lNBS/aT+aGhih2bpJLV0hKgaAQ0/W3/qLoKJgSnn8gBaK6E/wr
KkQx+ZJW/d8NKRCr8n4ydlEUrUOXDS8tpUJypIqLh4YY5nIKlcS/TYfaK12l
W7zFsKwinK9COhOGQy+tZxWJYcG0s43k7SzgDJE7ZDQuhidGNXyuW+YAPbAx
dYAmjvEhFbPmJ/Lgd/9zk5dOiuMFA0aBWc09OO8jpCuWIo54xWZ40acQYrwq
mKU94pg3bfLa7GYxlHk69B4kSmBo1h11xvUyoD+wmqs9KIFVps2BXYHlkDx9
gF/1ugTGBGbUPb5XAQQ1PXpagwT2lQcTieQq+OOCuhFhTQLfu7gbNLyvhqVi
un2oJgkzmoJq7y+z4PyMtO/0RRKGkJXzv+g0wPAO4VuOhSRM6NUi6f/WCEcu
bs5v/0TCcA4SOeV4M0Sr7/bRoEuir12ZYRJXCzTMOhukuUnifxOTWjXcbbBc
GsOzOUcSH6qzVb29OkDdu7bb84Mkzl8+bNee0wVnd06k/0eVQmnWeJ59Vzdk
zJE89F2kcCwqg5PLuAd6yg5o5GRK4b3suqCv/P1A8PHd4B+RwtaZAwM+qoPg
2LuarSErjd8OdzlyBwxDkX6UyUlbaYwOMnw3JjIKq5kCk8w70shw0+bWkP8I
5tyJMQ/bpfHizpjg956fIcVTbtcgjwyO1dFeiK2Pw2RX7pvN+2XwlPZrQvPQ
JOhpqQXtCJdBGyv6eIPYDESnVsraV8sgjef01PibOUiLuOQdvCKDyW+c6ni5
vkLJGe3nKbqymM2q0b8f+A0azJelWcGymKRWJ3tafxn+U6/2GqqWRRdbV4kR
uzUYEw9pWl+RxdO2gtuW+9ZheUVPiqInh6a9Hoe+u3Ei//s1xt4QOTxnHX+1
L4ULyc2sZ641cngvMncgXoobI6bbR+1W5HCt0W7Ft58XP4kPcR7SIeP58SXv
tFkBNDVkU/cFkjF8Xuga33lhfHDm517tx2S07bNeJxQRUSRW0FX1Gxl/xpA/
lX0QQ//H5EiqxlY8btVBnD5Lwv5htWyS31aUtFKZ6jSWRn0eo0aB8q14bkrx
8+c7cvj4TUFN4/RW9Cv5Mt8uRMHd2WKPgpXlUdwvO8eGTMOSi+FFO13lUd4s
hCAWTUcVw4mc8TR5vDIQeZbXRxnz+Y+lZfTJ40rV9ou8PL8hkeHcpsJHQcsa
FUnnLHXs7E40ua5EwWGLVduYud0Yo9vWOLqfgmaio/aMM9qoOpIqWe1GQaer
Pzutvulh+/ULjLgoChIdV0jHvmsiQw2euedQEHgZ7LjQXSjwRoQETRQMLGJs
q6xTxcKQD+dJHynYFBnwjx5pG5pTK56yN1GRETJi/IcHHSdbrok/p1FRUbkv
T9mditFedh5p+6jYGljtxttIxgp328Jjp6i4lxXuv7NaGkdO2UwRwqnYJxl4
q0mbhASHY6rPU6lo6XPZsENZDHWOHr0QVk1F7mgvRalgETxtcaREs4+Kk0qR
paeNCBhnbD3LXvzlK3Xaa0/hRZbR4Z35ojQ0Yb/1jWVuxnFtK5+TO2kYZZr4
x+AZTlz0nrwZf5iGA5rJxK0LP2BT4bXcF940HCG4RIx9+w7CHyn1q3E0dOar
+lTN+gpycqy+HQ9puPHv2g2nHXOw3cZu3vU1DWddxehEj0nQil3gT5qn4U2f
G2fLAz7D/pYY+iuiAh5XCr5c5DQKhzm2G23sUkDnwFL9yo1B4B70NEy3VsD+
llOnFxN7gVVZYqDvo4AexmuW3crd4Bs3r/82TgFv2ZUIrsp2gLKnhn5gmQIa
tRLbVE1a4J1xoJ5ElwLi0Yh+m7hGiKfU6D6aVcAVD/QIvVUHpms/dKyF6Sjy
hJebEVQF6z2gM7uDjk73AzwnUssBucoUvCzo2HRwX3Atuxgid1KE2b9+e1q/
xeQQXwE0O8WtejLpWPj3lhBV0xzg/pNjbDKXjnWBfWunxjPA9In3a49GOrZu
eUXdqEuGm59HWF/e0/FAWHVvf1sCtItaF7j/pCPTzH9qb+5tEMJnCWMyihim
0n3K1yQadhd32I3q/eKXVSLa7VFgIzMg+85BEW+w0h3ur4dDEHPsfW+IIq5I
fci5C0GQtriQ8zpFEXNnYvkElnzhqcuGe3uNItLZU5U9ORfgw78Cqi0Diphx
Lz7BYps7cBtIzT1bVUT+1YYLUiRX2H6fXsGSUcLitrRcWSNHmDs2P6Kjo4Qq
C0XVD4Nt4QlHvWCljRK6NXAKdo1aQ8SDm3q7/JTw4MZf3VQ/CzC1t3MvjlNC
3dDp0axMExDZTE/cXqKEO8Z08kPW90J/6VxD3islbA0z3OOfbgCZJ+rY1Akl
fHRiUmrpqRa489yUyeBWxoVoLbE6id3wP3XRbQA=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235360#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {0.,
             75.80719529725741}}, {{4.797052277070928*^-7, 11.512924985265}, {
            0., 75.80719529725741}}}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, Epilog -> 
         InsetBox[
           FormBox[
            StyleBox[
             InterpretationBox[
             "\"\\!\\(\\*FractionBox[SubscriptBox[\\(\[Gamma]\\), \\(R\\)], \
\\(2  \[Pi]\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"5.\\\\\\\"\\\", \
TraditionalForm]\\) kHz\"", 
              StringForm[
              "\!\(\*FractionBox[SubscriptBox[\(\[Gamma]\), \(R\)], \(2  \
\[Pi]\)]\)=`` kHz", 
               NumberForm[5.]], Editable -> False], 10, FontFamily -> 
             "Monospace", StripOnInput -> False], TraditionalForm], 
           Scaled[{0.8, 0.83}], Background -> RGBColor[0.9, 0.9, 0.9]], 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
zBnq1WX6P/xvVaBC0Q==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235532#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235532#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
W15Hu5J/AWN04ZI=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235532#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1: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
CNuUQctTNoSh76mkI4lviP8DD8vQJw==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235532#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {0.,
             77.13825336388219}}, {{4.797052277070928*^-7, 11.512924985265}, {
            0., 77.13825336388219}}}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, Epilog -> 
         InsetBox[
           FormBox[
            StyleBox[
             InterpretationBox[
             "\"\\!\\(\\*FractionBox[SubscriptBox[\\(\[Gamma]\\), \\(R\\)], \
\\(2  \[Pi]\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"50.\\\\\\\"\\\", \
TraditionalForm]\\) kHz\"", 
              StringForm[
              "\!\(\*FractionBox[SubscriptBox[\(\[Gamma]\), \(R\)], \(2  \
\[Pi]\)]\)=`` kHz", 
               NumberForm[50.]], Editable -> False], 10, FontFamily -> 
             "Monospace", StripOnInput -> False], TraditionalForm], 
           Scaled[{0.8, 0.83}], Background -> RGBColor[0.9, 0.9, 0.9]], 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}]}, {
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
SUbD
              "]]}, Annotation[#, "Charting`Private`Tag$235243#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1:eJwV1Xk41WkbB/AjSg7Hvh6EiJwsKWQ/39bD76FFirzFaFps2QmNROVkGxrG
PoSS7CYaohKKRFKUSoU2Qp15mymleH/vH8/1XJ//nu993ff9aO0PdD64iMFg
xNPn/3fBt+xPJcrn7Oxa8wfrKyhQMfKf3fjV3O/uEfeNaigcF+6Y3M6/xvUN
E0p5WU8hZ0veK0d+HzfJcWLiSTOFeJdjqWlhD7h74tYd0LpOoem0/qXIFY+4
2X1G7jntFFZMnB6l+M+5jLJbcRK9FG4xX/Afd4xy3cfJheABCke1oorEOse5
+6INfyx6TGFka+29I51vuWcSporzximUXVI1NL/1gcsrvy6rO0fh0oOtJwqf
feb+9XJyyodDUL7QwZa8/YWr9rr3q/hq2gaWjTF1s9xQ86vGuWa0E7Tf7z39
jWvQ0RJ+GLQv55zqDZzjZnCezBRvJrg4ytKwcf/ODS847neVIiizmt2pajzP
LR3WG4xyIag/tO2yj+ECV6H68VTMHgIPh51iIwoMvPqpN9DJg8A3vMKbIy8E
ZdYh582HCYLEd+fsyBDCYFItx9ePILxYqDtSdhGODTwM3hlIcKLPTa9LWhh3
pP/8NziC4Ep1s2gIXxhTfeP9IVEEM6nsCbV5YazsTOjALwQ6Ace6u8JE0Hls
8sfIcQL3rSPlIVMimG67MWsfR5BuZJuovn8xxGRqAhNOEtyWLPTpHl4MNwnW
ruzTBN8/zDuEblsCr8det2P4BGv7PTnLbi9B5dsvDJtEAkGNyZGmLaLwSbs+
9k8SQdWvwnXOXaLolhrZeCqFwDtg6L/TvKVIIO2cmVT6PVsvmvG7l+KZan3a
mjSCUcOoSC0HMeSUKrm5phMUsEhLyx0xVDEETh5nCdxm1OZ3UUxY8+dUqN8I
FPo+QNDDxK3sRq56BkHYWk/2GgdxDNl3Dj+i/SC3/1NolzjO8uyZMZkEJgz0
NW6WgG5LZbvM73TeQ3VlXzokkNRT1JNF+0Ov5gnLDSyUiu+4zcoicFp7ds+x
NhY4b6TWRdKuyhVae81OEtvnScxj2kxGiMRCqyTu7eh6apBNkFeXndW5Rgp8
VktaGG19r2uaSeVS6L3VeLyR9siZ4CE9KWlEJEcHCmjreJ3KY1LScD6foKKb
Q+Bvme05c0oaA6Z/rXCl3SBToXP/hjSU8l8Zn6K9sb2/5nczGcRWNoQP0t7K
Vl0RFC4Do+TxyjnabiGH8qlGGbjZHC3UzCUIWP6Dv2Aqi6pt/oKDtCOj7eef
hMnCNlnek0/75IOMsIYGWYwJF1WV086J53j5mMqhJXrT52naLbH3axcHyaHc
SD1NMo/gxS8R88WVcnjk3TZqQlsoWs3J7p0chsA87Epb52h7/tPl8khUZ5bF
0uaFeb+P8JCHR/+bVZW0fYMlLeXy5JF1Y+K3p7RTAxr4tUPymLPvPimZT1Dn
5/6IyCig9ZJeE4+2TtU2QQtRwE/RXjWnaedMb2IaJChA2/b6th7aEoZWOgVt
CogxDUtWLCCIO2JsJzGngPXTXf5+tD9X67j9YqYI89fWGj20fT+ohEwHKiIh
c++ntX/QeYykUvZWKGLafMuBCtrOgSJlva8V0Sy+dJlxIUGi8ZpgUx0lTEgd
jRmg3fbR06bgZyXE5lpXJhYRzNamioqUKsHB4u0D93MExkEtD/zGlRBWoV5g
X0xwaPXkHw+1lOH08jlcSwgKBYo+1l7KyNANL08uJRiq22Raek4ZbuaxZ6bO
03mCQxaYo8rQ3x2XGlNGsPfRtxJTVRWk22V2rywnqLQ+ucVjtwrk75z/m1VB
8O2c+Hv+WRVo402XWRUBtSQztb5XBcxiRm5FDd2Pfmomz0TZsDZh5kbWE7y/
f35QZCMb/qqfd9Q0EFiZG0YaHWdjRXuMyb4mOm9+o6pbMxueGLbNa6Xn70RE
UNRXNj4ecG0R3CSoObjuVp6lKs5Z1bqadtP1oGZVWqNU4few6GZWP8FD4+aA
582qELG5t3HXMMFb+eiO+a+q2Frzz67mcbpeX62UNa3UYOliHyT3kZ6fl3P+
66PVoH3fhFvyg0C9s/Xm/qtqaG7/Imkj6YgT071jrl/V0KLyLEVIwxGv5Z8L
OVmoo1+KWeK7yhH2tjNaG46qw8DPIqid44iqgz/Wr7uijuK2hOkIZUdI/8ra
b/CvOooGDmY+/0bvhyvq8VqmyzAttcfb9CmBtahdu/ify6DtOCu4R/fHlcHy
q+3Ty6AwtveqGL3/1pTIXY7S04BtkGDotS8Bx3ay9F2BBlrNDN+csaP3O9Ol
oPCxBjpXuSdP6BPI+Hv2cMQ0cbH/wkoVRbq/LXvaxzZqorqj/nuggILBaL5S
88+aiL1bkfVqhEJvwhH/9JOacF1slDh0h4L4oLQit0MToXms0KnzFBIDXH0K
NmihZ+CGQaQHhXfrtgV7rF6O+JSI4/FjDtjO0LdbMNGm/9GUJq6HA+aHuBYf
jXRgkqbQ8+6FPSRxM+MtewUKOV9CC7ztoX9Jp6GVrYt7agLj9AkeBC5/j1pY
6IJTrLzQ/4SHJsZ1VuMuXYgWPlsqfZcHezfXw9XpurAT2Xc5vZoHaRGdTP0a
XXR9d3cYKORhuFbQduGuLlwGnURk03k4959rM1qTusi9bjzqHMfDYdEkduES
PVjI+z3JCOHhf0IJkQo=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235243#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
0gSO+A8LFIFy
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235243#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1: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
zhbThcCFgfHH/kz4H2FMUOQ=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235243#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, 46.89513700226274}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {
            46.89513700226274, 56.55122186488216}}, {{4.797052277070928*^-7, 
            11.512924985265}, {46.89513700226274, 56.55122186488216}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 46.89513700226274}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235415#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235415#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235415#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235415#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, 48.04393247072834}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {
            48.04393247072834, 56.52442663889713}}, {{4.797052277070928*^-7, 
            11.512924985265}, {48.04393247072834, 56.52442663889713}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 48.04393247072834}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1:eJwd1Xs41FkYB/BxLwzDmDAUMlieRFGo+L1dVmN+5RJKKi0rksXQlFzXUk3N
RlqKJKWWUDRyqcmlYoYW5bKhRE13LBoRImbPrz/Oc57PH+c53/O85z3HKCBi
xwFZEomUhAYx585mTVzTueqUf39/okk2DqwErSkfbilm8sk5nnCiXOOQO7cO
q4gciSG84r3jrViTJkzbixlNONs559027hNs+owHh3CyV1zqWU4XZiizwCZ8
74R58TGTHkxz96YwwmPVvUL/nheYV59GCGGTwRNiFncAU9ngF0hYpPyK29so
xsiZeX6Eo41iriwWvsVCPtB9CFvYa91dL3yP9VAF7oT7XW8/DRN+xOpO7WES
TjvA+nhFOIhdrRU7Ed4Y/2G+UziMNfCX2xKe/CuJJi8awV7tnDIjXFisZ7lW
NIblv7eg/1g/KUqp8ZBgmfLXVAgztRYkL2EcI3tum2Mgy9mu9ftu9QWLrpcM
Eq73DG/VN5jAdBhuzwjHHC60d1SbxGhsgzrCthmvCvbNT2L1+ZTrhMfuLKEm
jnzFivjNJwgXd7km5b2cwvpcXwUSLpI20tWapjFTWiH88AqHqgT+DIaHLtb5
4d1lbqM537Cwmd+HjQmfNB7ee2IWU+tn3/3hiuzjbRFzmFOpdSLhG2KywQbf
71jteqkj4UJyiuDmlnksQUVhajnhdTOeelYL2Jpk9wLC5UFuFSGWUoxaVLKJ
sJ+L5+J+GgmUb852GSEHvl6wlztPghvBXC/Ch46UHLTQkoFVR/eJDJHZKjuz
PTJkoDh2qzHhI/kyj49pykJ9pCjUADnWrnT6yjlZaH8um7sMOemJj1kzRQ5K
eK38pcjVpQKlKK4cTHW6C/SRR1Ppg/oLcrBta9R1PWRGeNzjZo48XLY6EkpH
9nXtL4r6Tx7mn5qTdZHTVzqeXhqgACf1B1K0kZvU8kIeP1eAbgGzhYb8fWzB
5bCbIjTMJPVRkW3a91ssa1KE+QpxqQaypGxV2D1nJVC9/7OCOvKtNDn+jmYl
+JIjkFFFPhje/WVk6yKgVtGzFhF5XG+s4T5eBJzskrvyyGLLmGNGLovBN6PX
k4ScS8Zrav5ZDK9XSnfPZeHgM6q/4M1ShoeCn6q/ItOejIGkRRkmP1R7fEbm
2Oynr3ZRgf96SXaDyF0X2ycON6uAPO/CSjHyKhI8qfpZFSbSebq9yOlB/MLp
RlXA/SaetSGPtRkmOWwiQ8H5Qw6PkLfbnNsd95AMxSPx9ErkWxdlbOqc1KB3
fJFzAbIyKUpVWqsGlG+8lEzkHH7WBeFqdXjgpTaSjGzuX2fIK1IHVlDwmgjk
/lOR3WbqFBgff7FsNzLD/3iOMosCZhtNfgHk3xyy9o8ep0D68fIiBnKlRgmj
4wEFgtjFeQrI34dqh+7MUmBKUzrw9gIOmxvay86v0YC92numa5Bd6Xom7CMa
8CHb+9QZZJ+ooEusKg1Uv0dTO5F/bSnXMPmqAa+vFibQkcOXz3OltpqQfU9h
Y895HI7FMhdecDTB2TsPP42c0pXBqazUBPWii2dWI6dZvB5Om9QEqzKz7o5M
9H4lW/iH2FIBM9TtCUCu+b3jtgKbCnaBkpbPGTi8ij+6kH+TCmWZ5KQIZJlY
/e1On6jwm45MmvgvdP7ohkt9y7WgLbY8fCPyVs7B4aN+WmB4OT4+/Rzqj0g1
B2qOFky5Ccdb03FIDa/k3u7WgrhUuaHxszjwQ317cA0aDCqd2UdCZtxyk9Tg
NDCSni2fTUX5RrYorzhJg3YOvqXvDA6qlusYuQ9pYCopeZf7Jw5/hFk5qc7R
YNS5GQceDlOlDJ/4NUvAY53BioZTaP8x3aiRiCUgej9sacjFYUeEfGHb+yXg
daKVGZyCw2mr1ZG2DG2o6Oye1vsDh4ef92/I/VUbSJcaSy4l4jBzO1VJ/ro2
HG7yHnwXh4MVu6Yr9K02jAvbE74cwyHIeujyv0Y6QH/OSxUdwSFPsiRkvb8O
TPUo5u6JQnkjo6TKYh14lLxM0nYIh709s9ds9XShI/BBtCQIh5vrU5z9duoC
x/GnnIEA9P8oZqaWt+lCZvUIT9sX3cdQ/VUvlegQMMa/GOSNw3DH38/kN9Oh
vzStKsUd5b9UpecjoIP2s86TVs6o35KOsmO+0cEObAdwwKHsgJ0ox0EP2PmN
iXbrcPjXShA+INCDgLPSp6cscVgqrH0UcF8fRPzH9w5q4rBeyalB5c4yUN8X
oPjncxakOrQ0vNlsCDL6E19yr7DgdPiukNxNRnDXULZ66y8s+GTnFulnvRyi
bPrspo1Z4E4yd5KuMoYe6xKdMLELLHRj9p9XMsA1Vnat20UXUINHGR/pJqAw
19EZ7+oC5sWMylq6KWynZLtzPjNB4jUutrc3hZlt1m8T3zHhHqmeXOVtChnn
4ox39TKB6bMruDTdFN5gb6qj65lAkWdkmpeZQoUfqArLmfD8tuRhQasp+Jqd
lv34NxOu7qkbNRoyBfv73aOvs5gQrMSj5ymawVPPcutKHhP+BwQOht4=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235587#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235587#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
dohqj729Gk+H/wPw6/nS
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235587#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1: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
OL5yqWVthB38H9lhJKQ=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$235587#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, 48.96990358690785}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {
            48.96990358690785, 57.41566082499744}}, {{4.797052277070928*^-7, 
            11.512924985265}, {48.96990358690785, 57.41566082499744}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 48.96990358690785}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}]}, {
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
          
          "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[1, 0, 0], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{477, 479, 480, 478, 474, 476, 468, 472, 467, 471, 
                466, 475, 
                470}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, \
{}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              
              LineBox[{1, 84, 46, 26, 2, 3, 85, 47, 27, 104, 66, 4, 86, 48, 
               122, 28, 105, 67, 137, 5, 87, 49, 123, 29, 106, 68, 138, 6, 88,
                50, 124, 30, 107, 69, 139, 7, 89, 51, 125, 31, 108, 70, 140, 
               8, 90, 52, 126, 32, 109, 71, 141, 9, 91, 53, 33, 110, 72, 10, 
               92, 54, 127, 34, 111, 73, 142, 11, 93, 55, 128, 35, 112, 74, 
               143, 12, 94, 56, 129, 36, 113, 75, 144, 13, 95, 57, 130, 37, 
               114, 76, 145, 14, 96, 58, 131, 38, 115, 77, 146, 15, 97, 59, 
               132, 39, 116, 78, 147, 16, 98, 60, 133, 40, 117, 79, 148, 17, 
               99, 61, 134, 41, 118, 80, 149, 18, 100, 62, 135, 42, 119, 81, 
               150, 19, 101, 63, 136, 43, 120, 82, 20, 102, 64, 44, 21, 22, 
               23, 24, 103, 65, 45, 121, 83, 151, 25}]}, 
             Annotation[#, "Charting`Private`Tag$235301#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              
              LineBox[{152, 211, 189, 177, 153, 154, 155, 156, 157, 158, 159, 
               160, 212, 190, 178, 223, 201, 239, 161, 213, 191, 233, 179, 
               224, 202, 240, 162, 214, 192, 234, 180, 225, 203, 241, 163, 
               215, 193, 181, 226, 204, 242, 164, 216, 194, 235, 182, 227, 
               205, 243, 165, 217, 195, 236, 183, 228, 206, 244, 166, 218, 
               196, 237, 184, 229, 207, 245, 167, 219, 197, 238, 185, 230, 
               208, 168, 220, 198, 186, 231, 209, 169, 221, 199, 187, 170, 
               171, 172, 173, 174, 175, 222, 200, 188, 232, 210, 246, 176}]}, 
             Annotation[#, "Charting`Private`Tag$235301#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 1, 1], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwVzFc7ggEAhuEvQiiSWeaXPbIjyl7ZpOMO/AD9fKOM28F98FzXe73ha73y
FgmCoMY7m2KMJB/6ky8aNPnmh1+2bMbp45CF/yO2maBMiiMWeSBCnkmu6eeY
JR5pYYcpbhjghGVa2SVkkFNWeCJKgSy3DHFGjmfa2GOaO4Y5Z5UK7ewzwz0j
XLDGCx0UmSXNJevEKDFHhk666CZOgh4OmGeUKzao0ssf4FgZLA==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$235301#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 1]], 
              LineBox[CompressedData["
1:eJwVyFVOHQAAAMHHUbgSCe5uxZ3i3uLuLm1xd5fidiOGj0k2G5yUF5IbFAgE
qgkVM9TxPcMIJ4JIZqknj236iGKOBi7JZ4d+nohmnkauKGCXAZ6JYYEmrilk
j0FeiGWRZorYZ4g4lmjhhmIOGOaVeP7Qyi0lHDLCGwn8pY07SjlilET+8Yv/
lHHMGEks85tyklmhnQpOGCeFVTq4p5JTJngnlTU6eeAnZ0zyQRrrdPFIFedM
kc4G3VSTwSY91JBJFtn8YItearlgmk9y+AJXskp1
               "]]}, 
             Annotation[#, "Charting`Private`Tag$235301#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Dashing[{0, Small, Small, Small}]], 
              
              LineBox[{477, 470, 475, 466, 471, 467, 472, 468, 476, 474, 
               478}]}, 
             Annotation[#, "Charting`Private`Tag$235301#5"]& ]}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, -56.27471464468164}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {All, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{4.797052277070928*^-7, 
            11.512924985265}, {-56.27471464468164, -44.00767528245898}}, {{
            4.797052277070928*^-7, 
            11.512924985265}, {-56.27471464468164, -44.00767528245898}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, -56.27471464468164}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {All, 1}}, 
         ImageSize -> 250, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
AGZN11k=
          "], {{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              
              LineBox[{1, 76, 43, 26, 2, 3, 4, 5, 77, 44, 27, 93, 60, 6, 78, 
               45, 109, 28, 94, 61, 121, 7, 79, 46, 110, 29, 95, 62, 122, 8, 
               80, 47, 111, 30, 96, 63, 123, 9, 81, 48, 112, 31, 97, 64, 124, 
               10, 82, 49, 113, 32, 98, 65, 125, 11, 83, 50, 33, 99, 66, 12, 
               84, 51, 114, 34, 100, 67, 126, 13, 85, 52, 115, 35, 101, 68, 
               127, 14, 86, 53, 116, 36, 102, 69, 128, 15, 87, 54, 117, 37, 
               103, 70, 129, 16, 88, 55, 118, 38, 104, 71, 17, 89, 56, 119, 
               39, 105, 72, 130, 18, 90, 57, 120, 40, 106, 73, 131, 19, 91, 
               58, 41, 107, 74, 20, 21, 22, 23, 24, 92, 59, 42, 108, 75, 132, 
               25}]}, Annotation[#, "Charting`Private`Tag$235473#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              
              LineBox[{133, 187, 169, 158, 134, 135, 136, 137, 138, 139, 140, 
               141, 142, 188, 170, 159, 198, 180, 143, 189, 171, 205, 160, 
               199, 181, 209, 144, 190, 172, 206, 161, 200, 182, 210, 145, 
               191, 173, 207, 162, 201, 183, 211, 146, 192, 174, 208, 163, 
               202, 184, 147, 193, 175, 164, 203, 185, 148, 194, 176, 165, 
               149, 195, 177, 166, 150, 196, 178, 167, 151, 152, 153, 154, 
               155, 156, 197, 179, 168, 204, 186, 212, 157}]}, 
             Annotation[#, "Charting`Private`Tag$235473#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 1, 1], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwVzuk6QmEYhtGdCCFlzlwiIjMH4hA6AI6WDBlC5iHzHMuPdd3Pe337x04V
NtbWQ0EQFNiky/Gtd2xRZJsddtmj2zc/ek/ajlKye7SmM1rVMW1hkX13r/5q
Xh80o60c2H3/P8GjHHJE0h3iyR7XNsp2v9Yxy7N7QmMscewe0DBzvLiz2s4y
J+5BrWeeV/ekxlnh1D2kDSzw5p7SBBV7WCO82znt4Mwe0UY+7HNG7SY+7Qsu
ueKaG1Lemvmyp7WTVW7dfyrGL2g=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$235473#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 1]], 
              LineBox[CompressedData["
1:eJwV0VVWFAAAQNFhKayCTkG6hhLpoUNGUsqhO5RUukFAJRfI5eOe8/5fdCgc
7IkKBAIRYsQUjRQTSxzxJJDINCFK2KSPJGZo4owgW/RzTzKzNHNOKdsM8JcU
5mjhgjJ2GOQfqczTyiXl7DLEf9JYoI0rKvjFNx5IZ5F2rqnkN8M88oElOrjh
E3uM8EQGy3Tyhyr2GeWZTFbo4pbPHDDGCx9ZpZs7qjlknCzW+EINR3wnm3Xe
59RyTIQcfhCmjhMmyOUnX6knj3wKKGSDXho4ZZJXingDFqI8hQ==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$235473#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Dashing[{0, Small, Small, Small}]], 
              
              LineBox[{448, 441, 446, 437, 442, 438, 443, 439, 447, 445, 
               449}]}, 
             Annotation[#, "Charting`Private`Tag$235473#5"]& ]}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, -55.95518941241704}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {All, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -45.32715682199495}}, {{
            4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -45.32715682199495}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, -55.95518941241704}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {All, 1}}, 
         ImageSize -> 250, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
g3/6FMPvlbwZvi50Hsb/C+FDLeA=
          "], {{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              
              LineBox[{1, 54, 36, 26, 2, 3, 4, 5, 6, 7, 8, 55, 37, 27, 64, 46,
                9, 56, 38, 72, 28, 65, 47, 77, 10, 57, 39, 73, 29, 66, 48, 78,
                11, 58, 40, 74, 30, 67, 49, 79, 12, 59, 41, 75, 31, 68, 50, 
               80, 13, 60, 42, 76, 32, 69, 51, 14, 61, 43, 33, 70, 52, 15, 62,
                44, 34, 16, 17, 18, 19, 20, 21, 22, 23, 24, 63, 45, 35, 71, 
               53, 81, 25}]}, 
             Annotation[#, "Charting`Private`Tag$235645#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              
              LineBox[{82, 135, 117, 107, 83, 84, 85, 86, 87, 88, 89, 136, 
               118, 108, 145, 127, 90, 137, 119, 109, 146, 128, 157, 91, 138, 
               120, 153, 110, 147, 129, 158, 92, 139, 121, 154, 111, 148, 130,
                159, 93, 140, 122, 155, 112, 149, 131, 160, 94, 141, 123, 156,
                113, 150, 132, 95, 142, 124, 114, 151, 133, 96, 143, 125, 115,
                97, 98, 99, 100, 101, 102, 103, 104, 105, 144, 126, 116, 152, 
               134, 161, 106}]}, 
             Annotation[#, "Charting`Private`Tag$235645#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 1, 1], 
               Dashing[{Small, Small}]], 
              
              LineBox[{162, 213, 197, 187, 163, 164, 165, 166, 167, 168, 169, 
               214, 198, 188, 223, 207, 170, 215, 199, 229, 189, 224, 208, 
               232, 171, 216, 200, 230, 190, 225, 209, 233, 172, 217, 201, 
               231, 191, 226, 210, 173, 218, 202, 192, 174, 175, 176, 177, 
               178, 219, 203, 193, 227, 211, 179, 220, 204, 194, 180, 221, 
               205, 195, 181, 182, 183, 184, 185, 222, 206, 196, 228, 212, 
               234, 186}]}, Annotation[#, "Charting`Private`Tag$235645#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 1]], 
              
              LineBox[{235, 285, 269, 260, 236, 237, 238, 239, 240, 241, 242, 
               286, 270, 261, 294, 278, 243, 287, 271, 301, 262, 295, 279, 
               304, 244, 288, 272, 302, 263, 296, 280, 305, 245, 289, 273, 
               303, 264, 297, 281, 246, 290, 274, 265, 298, 282, 247, 291, 
               275, 266, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 
               292, 276, 267, 299, 283, 258, 293, 277, 268, 300, 284, 306, 
               259}]}, Annotation[#, "Charting`Private`Tag$235645#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Dashing[{0, Small, Small, Small}]], 
              
              LineBox[{318, 311, 316, 307, 312, 308, 313, 309, 317, 315, 
               319}]}, 
             Annotation[#, "Charting`Private`Tag$235645#5"]& ]}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, -55.95518941241704}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {All, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -46.30938141114724}}, {{
            4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -46.30938141114724}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, -55.95518941241704}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {All, 1}}, 
         ImageSize -> 250, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}]}}, AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"],
   "\"nondegenerate internal squeezing\\nparameters of Li et al, 2020 but \
changing \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\)\"",TagBox[
    GridBox[{{"\"\"", "\"signal\"", "\"quantum noise\""}, {
      "\"sensitivity (NSR)\"", "\"transfer function\"", 
       "\"transfer function\""}, {
      "\"/ \\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) (log scale)\
\"", "\"/ [?] (log scale)\"", 
       "\"/ dB (20 \\!\\(\\*SubscriptBox[\\(log\\), \\(10\\)]\\))\""}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{3}}}], "Grid"],TagBox[
    GridBox[{{
      "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \[Pi]\
\\)]\\) / Hz (log scale)\""}, {
       FrameBox[
        TemplateBox[{
          StyleBox[
           InterpretationBox[
           "\"\[Chi]/\[Chi]Thr=0.  , \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=50.  ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=100.  ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
            StringForm[
            "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.  ", "50.  ", "1000. ", "100.  ", "0.1 "], Editable -> 
            False], FontFamily -> "Monospace", StripOnInput -> False], 
          StyleBox[
           InterpretationBox[
           "\"\[Chi]/\[Chi]Thr=0.95, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=50.  ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=100.  ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
            StringForm[
            "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.95", "50.  ", "1000. ", "100.  ", "0.1 "], Editable -> 
            False], FontFamily -> "Monospace", StripOnInput -> False], 
          StyleBox[
           InterpretationBox[
           "\"\[Chi]/\[Chi]Thr=0.95, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=50.  ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
            StringForm[
            "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.95", "50.  ", "1000. ", "1000. ", "0.1 "], Editable -> 
            False], FontFamily -> "Monospace", StripOnInput -> False], 
          StyleBox[
           InterpretationBox[
           "\"\[Chi]/\[Chi]Thr=0.95, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=50.  ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(c, tot\\)]\\)=\\!\\(\\*SubscriptBox[\
\\(\[Gamma]\\), \\(R\\)]\\)+\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \
\\(c\\)]\\)(\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm), \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
            StringForm[
            "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(\[Gamma]\), \(c, \
tot\)]\)=\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\)+\!\(\*SubscriptBox[\(\
\[Gamma]\), \(c\)]\)(\!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm), \
\!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.95", "50.  ", "1000. ", "1000. ", 
             "0.1 "], Editable -> False], FontFamily -> "Monospace", 
           StripOnInput -> False], 
          "\"5\[Cross]\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-25\\)]\\)\\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) target \
for 1\[Dash]4 kHz\""}, "LineLegend", DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 0, 1], Editable -> False, Selectable -> False],
                   ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                  ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 1], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"Directive", "[", "10", "]"}]}], ",", 
              RowBox[{"LegendMarkerSize", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"{", 
                    RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
         Editable -> True], FrameStyle -> Thickness[Tiny], StripOnInput -> 
        False]}}, AutoDelete -> False, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]},
  "Labeled",
  DisplayFunction->(GridBox[{{"", 
      ItemBox[#2, BaseStyle -> Directive[12, FontFamily -> "Calibri Light"], 
       DefaultBaseStyle -> "LabeledLabel"]}, {
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
       Directive[12, FontFamily -> "Calibri Light"], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#4, BaseStyle -> Directive[12, FontFamily -> "Calibri Light"], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left", ",", "Bottom"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"12", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"Calibri Light\""}]}], 
           "]"}]}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8394638772617197`*^9, 3.839464303364769*^9, 3.8394643605269833`*^9, {
   3.8394644593373213`*^9, 3.839464489210561*^9}, 3.839464535670227*^9, 
   3.839464597907*^9, 3.839464628317894*^9, 3.839530008443635*^9, 
   3.839530389751829*^9, 3.839530598916363*^9, 3.8395307182666473`*^9, 
   3.839531219673562*^9, 3.839531293402103*^9, {3.839531357009622*^9, 
   3.839531392468699*^9}, 3.839531657491654*^9, 3.8395316987525578`*^9, 
   3.839531849256411*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"86f360dd-5704-4ceb-97fe-4a2d7e0129e6"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"for", " ", "completeness"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "tolerance", " ", "to", " ", "arm", " ", "loss", " ", "and", " ", 
       "signal", " ", 
       RowBox[{"loss", "\[IndentingNewLine]", "--"}]}], ">", " ", 
      RowBox[{
      "arm", " ", "loss", " ", "has", " ", "the", " ", "added", " ", "point", 
       " ", "that", " ", "singularity", " ", "threshold", " ", "changes", " ",
        "around", " ", "\[Gamma]a"}]}], "=", "\[Gamma]c"}], ",", " ", 
    RowBox[{
     RowBox[{
     "also", " ", "appears", " ", "to", " ", "matter", " ", "less", " ", "as",
       " ", "\[Gamma]R", " ", 
      RowBox[{"increases", "\[IndentingNewLine]", "--"}]}], ">", " ", 
     RowBox[{
     "signal", " ", "loss", " ", "appears", " ", "to", " ", "have", " ", 
      "little", " ", "effect"}]}], ",", " ", 
    RowBox[{"compare", " ", "Tlb", " ", "to", " ", "Tsrm"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"valsListHeld", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "0", ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
         "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}], 
           "]"}]}], ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{
             RowBox[{"10", "Tla0"}], ",", "Tlb0", ",", "Tlc0", ",", "False"}],
             "]"}], "]"}]}], ",", "pumpPhase0", ",", 
         RowBox[{"10", "Tla0"}], ",", "Tlb0", ",", "Tlc0", ",", "Rpd0", ",", 
         "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{
             RowBox[{"100", "Tla0"}], ",", "Tlb0", ",", "Tlc0", ",", 
             "False"}], "]"}], "]"}]}], ",", "pumpPhase0", ",", 
         RowBox[{"100", "Tla0"}], ",", "Tlb0", ",", "Tlc0", ",", "Rpd0", ",", 
         "True", ",", "False", ",", "False"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plot\[Gamma]RGrid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2.", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], 
       RowBox[{"(*", "m", "*)"}], ",", 
       RowBox[{"4.", " ", 
        SuperscriptBox["10", "3"]}], 
       RowBox[{"(*", "m", "*)"}], ",", "None", ",", " ", 
       RowBox[{"3", " ", 
        SuperscriptBox["10", "6"]}], 
       RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", ",", "200", 
       RowBox[{"(*", "kg", "*)"}], ",", 
       "\"\<Li et al, 2020; changing \!\(\*SubscriptBox[\(\[Gamma]\), \
\(R\)]\)\>\"", ",", "None", 
       RowBox[{"(*", 
        RowBox[{"see", " ", "\[Gamma]RList"}], "*)"}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5000"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "0.5", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5.", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "50.", " ", 
        SuperscriptBox["10", "3"]}]}], "}"}], ",", "\[IndentingNewLine]", 
     "valsListHeld", ",", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red", ",", 
       RowBox[{"{", 
        RowBox[{"Cyan", ",", "Dashed"}], "}"}], ",", "Magenta"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"1", ",", 
       SuperscriptBox["10", "5"]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<nIS_sigRO_tolerance_Tla.pdf\>\"", ",", "%"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.839532203763537*^9, 3.839532290415421*^9}, {
  3.839532375973413*^9, 3.8395323951988897`*^9}, {3.839532521087426*^9, 
  3.839532576353386*^9}, {3.839535008103632*^9, 3.839535030615561*^9}, {
  3.8412766419465714`*^9, 3.841276659248938*^9}, {3.841276882520912*^9, 
  3.841276882992531*^9}, {3.8412769476839447`*^9, 3.841276954459249*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"ce6cef14-ee09-451f-ba38-f6b7580e5bca"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55486#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55486#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
dmDox7on5iGYIJUroABfT6oITvW7Yf8DEfXlKg==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55486#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55486#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {0.,
             101.11924672991704`}}, {{4.797052277070928*^-7, 
            11.512924985265}, {0., 101.11924672991704`}}}}, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, Epilog -> 
         InsetBox[
           FormBox[
            StyleBox[
             InterpretationBox[
             "\"\\!\\(\\*FractionBox[SubscriptBox[\\(\[Gamma]\\), \\(R\\)], \
\\(2  \[Pi]\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"0.5\\\\\\\"\\\", \
TraditionalForm]\\) kHz\"", 
              StringForm[
              "\!\(\*FractionBox[SubscriptBox[\(\[Gamma]\), \(R\)], \(2  \
\[Pi]\)]\)=`` kHz", 
               NumberForm[0.5]], Editable -> False], 10, FontFamily -> 
             "Monospace", StripOnInput -> False], TraditionalForm], 
           Scaled[{0.8, 0.83}], Background -> RGBColor[0.9, 0.9, 0.9]], 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55663#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
4mCoY21gN/t/NOseXQ==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55663#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJwVk2k81HsfQG2RMZixmyGz/GcmRZaQrfl9L4VQREWjbAllCclSbklqSvJo
Q7YKKbtkb0S2KclWVCqkVEiIhMLteXE+5+15c6ieRxwOCgkICFz/y/+dvpg8
k6V0i72CaP4x5+3B+l+5OWduEeJGakZ5WdnDSeGmUXtuHeoMLM21WG0PKRap
H225zxHPy/y+AsEOGF/PDllz36NOsoCDpvR2yM0jaxq0fEcFfaeHdKqsIK9n
R3Tm2zl0vfv8Xcu8LZBrPO9I1lpGAVuaDR6VAkQ/d2bxCcLQFXVS6e4zQ9jY
6bZuTasoVLVaeB7+pA1TxToB1RZiUJRsctu3RAsKE4RLHfhi8GPE9Qk3VROw
HXf1uU9Ww0Tez1dVMeowpBkZQd0mDs52ltJnYliQLmnz8OFTcSjEQoP3xzNA
/vl3mGrDwW5T2dbWViqEbnQj6W6TAC/Nyp7TIhToudE5c5QvATHWZmod+Sqg
IwDPK7biISPCqT86QhkSvUtzfzXh4UD7yp/McAX43k6JNjKThCcbLH+bFcnC
9o2X955okIS9taH5PFUiFN4Q3FjHloIdtrsGDqZIAk4gBL/Ck4LXhpcrykLF
IbU0OalZVxrK79x1N5MQBXWPOkrcPWmYScoVj5YShnfng3tZ0gTQHVeP+hop
AJhHbCrOmgA3HxtHhyX8Qf5GyW4TsQQgdZOyhQfmUTkxH+uqJ0BVnBrPqOcn
+jPKGy1bJMDjtIWj8ZwZZN7YWXxdnwjOJHXavPc02kEiM4KOESGwiOV3I3US
OYd4p1lXECHV5UPktr0T6EDbfSLjJxHiy/EzOhPjKJC2xF3Rk4F5zqm4NPY4
ijhutfwmVAbkDM2IDcbj6EzP1dDychloypmfO/piHCWsGxxLmJWBKuyNcvXy
N5QSs87jkJ4s2Mca9W+p/I4enuoqWRUkC9kD++6Ze0+hgaiw5dsFsmClX1Ov
UjSNBI+rbGd/kYVb/Jy5eO0ZhIU3pvXT5MBk+vIX2x+zyDLUdyzMVQ5+mbZe
7J2dQ4eDpYxkU+VgqKP5rrXJAroUWM4t6ZUDUVcZTd+nv1GpH6fPhigPF0ep
6iHZywgrtJt6aCMPg5J2nLIBAUj5tgWncU4e0nNkFQeuCQFe0xhLb5CHjbFJ
Ev1hInA6QIuN/y0PTm1cpUCuKMwVYc5R+gpgNVUceP7pajj8XTnk2xEFUKlO
SjECCXA4IpLb/kkBHDtG1RX9CXBBSzdYD1MEeuY6o166DDRMupmmH1CE/zGH
ap2F5GC+5JKYSLYibDY9i7ssrgBaQQ97/IYVIb/+xFN5EyXw1h7NeEFVgkBH
6+vtySTInFI4ZOKhBB4vQqZs1VQBHxyyghtSgqwPmEafHRX29S1m6ZGV4eyM
e9X2PBoUmJyxcN2jDF+Fr/WIC2GweEtijHtZGUSru8s32DDAWvTapfvtyqDQ
lu1+8AgTUv1UdN6KkeDCbX3xB44sGOvKeSliToL7LiO5+HcsMDbQjNhwkgQt
nOLFvhkWXEirIDvX/O2ycRNzT/r7X3RYUOQCCWRu9vWe4TGh+OCmllQjMiSH
v5b2v8CABut5ZV4kGaouWku2UDB4oVUT+L6GDFO+V/YQb9Hgs9zxpuUFMujF
SSVPkKkwv2CsRDFWgc30NWPuZmqg2sx77FmrAvyDD1eWGpUh+lv7B6cFFdCq
HQiZ26EIn+TeC243VAVWIXrzc5U8WG2eoJqFqwKlIUWQ80UGCg8u/bOpUhV8
tPsqu6cJQEiQ9NT4qQqFnJzfvpZSEFqpGkPVWwObkjttvOdw8HpAM0vh6BoQ
/qLcMvxNDEzE2I0SZWvg/W/5eIy1Cipf3qtt/LYGKo/uT5B8JgS6WbIPIllq
IBvvyHyULQDFR04WaHuqgYaYXljSviW0bvNo9pd0NbDubU7M6VxAubhd6Zmv
1KDTO+nYdOocIvq7ta0Tp8B1zvoHr6pnUGfPNYtzTAr4zLJfNNKn0SWjtsYP
5hSgzOE2exVOII2hNMWaAxTQzjE/fstsFLWfC/BPPEOBvgKa7GfvEeSviR77
ZFOAdW9ASwk/jCReEhRQEwX09q/dTrUZQPnHhw8rfKQAuQy/wXfHG2RNLa+f
EKKCxnp9R5xELxrjn5VroVHB8vyRAj+/bnQh0OlQuhkVMga4w32V7ajcZ0/+
LncqRNww1yz8wEdD7rvH8SepUD/cLF3d1oTwnF0aLWlU8Gqu1OhwbkCGjo4B
/9ZQoUnwSUrgWC3ysnUo1n9FBfcDLGNzxUqUuHXn5MQsFV7/abGVlitDPLa9
dq4MDTh3BH3ZMUXoyya7YFdtGmTFLoVeXXUPzQaNxV2xp4EsL+Fp6vpsJJR/
Nqc1iAb1RMu5tthMJP2R8mgxkQb48Ih2A9MUpKLCe7XhPg1wYnGHtPWuIvXd
TtOe3TRYtJ/c1+6WgAwSfuCSp2lQktPRd2CRi8z5l7BnRDq4nHO5MzUSg+wF
1NkrOnS4tPoU7c2jf5HoW7/NGTvpcN/fNcTuRDjiVRSbmgTTId6CvLwqNgSF
JE6bvEmkQ8H6rozT6wMQy0/PJLyUDsUr+XrPZr3Ru63hxvJddOjXjs9QlfRE
Vyi1Rg8m6eBPKjtBdt2HrH7/MdwpjUGNUlrSMYs9aLkXGU5uwGD4u7M0/cRO
BMKl9EBbDJJjc3EVgzYoRpsiPXEIA/XZG7QyAwvUvD9x0Y+LQYBuy4h52T9I
9KLA57EcDCoaxddmaZkiq+qg7kONGJzrTwp4EGSA4kaGeF8HMQj5obt0+J0O
apfZec9nCYMHHiWHl/01kBQ8vvqZxICr+8+eCspgIt2i504fjBlwUUo4Sv0O
Fe0m9ZPfcRhQ5yLfeYVLRhHcz4N9xxmwv/mGGD9CHqXP/sjuTmXAiagu5SuP
CKjeY8WnvZYBJevP8StVcGi4Q0KD388AjfG1crddRJCoqdLU40UGfCoQcQir
W2Gr52HlPBITvH4NW2XWzbOndk0PGRoy4c5Vzohf3gy7WuCRZMVuJvCfut1s
RpPs6MI4Y52jTIg4NRjLf/mVbeXs5FOUyISgRarvQu1HNkEEu6ZezITOAnxc
KGeQ/bpkquHOMya0QXoHZfQ1+5ZL3QR1lAmiT64rXmh7wfYRiyNlirLgDwu7
7RDSyf4PzjwbUA==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55663#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1:eJwVlHs0FPgDxccjaYgZbzNk3rNeiSSv5ntLCalIorSFiiRCRSnWrzClzCqJ
sLN2VUvJu1bSetUqkRS95dmDTUj8Yj1+fn/cc88955773+ey/Q9s2iNLoVDO
zun/nj2ZPvq7To6IVmkrbf7oDpcYjXFv8Q2i7zZQWPSHO2Ll6vvdxHdJ0rDi
63OB7shwzOx1FTeTGJ+vZ7d8dAP/U0KXi7iD9EzUV9Q3b8TVfKap1f0vRHUX
tajh8DrkP90QJ30zTjrGfNkvA9fiqu13D6bZDEkdpasaHXBAXLO3sIEmB86v
cdFOjiIsbdlptOhvBbxbMZZ40N0Kms1fMNxIhXRB8zLlAWMcWrqTYeGsBB8J
fY3aN0M8vdQyerBBCQ77JCUDCj8gJaD46n/rlfEwp7xvaj0PX5pYcTarFmJd
liTQOZGD9UvPbT1WsxB//zYkL25hgUqJUJ6tUsE8u9qkFSImMovTL96zUMUD
XZpLe4IODP3uspLyVGFMq8sImdLE21Ph7UJVGloyjfRirqiD5xefSXWhQfFi
9fu6k3Tst0nfORhPgz3fdfPiuZ1y+jXek2oarC8Zq2Y2KWGqv6q/dJKGsei9
bp7PFeFQ11KYtoyO8L274766KmADg8kPO0wHNX7gmJycPLwjArJcbtJho5F/
3sNUFrsaS+j8MTraxM6Pe+opCOVMi2ct1bDqYOi188dnyZFop5lXh9QQ7nsu
9eIPM+Tk09RD5eVqcPQSR5w/Pk0kRp0Dkm9qiOu7J9QMniYZJ4z8gizVEfzT
9ahHn6bJnZ+eFM0LU8eVh8PbPV7MkHfHI2d+uz6XpcGysQwKZKL11os+qsOP
u/Bw4wwFvKi6rNccDfzqOXxMoC2LtYf2DkTu0MCu1+0H6/3lsC9cxUY9UwOu
v1n7bumWR3JoubioXQP5SpxI2VQFFAdve76OrgnaMi53zRFF8Ao2Dt9Zpwnp
+bUnmhOpyPi8mmqSqIn4wk77tAfKUDa15WXXaCItx+qfQpEq/hNiJlL+VxOS
9MF37DEaxm/wvI8v04Jd3FDjygA17PuiG/H5gBYuNteedRpVx6YD8leb+rRg
NS0sa/fXxmkzi3BLnjZaIh0PMcN0UTO00z57lza6FyxvLJAyYRZ252lwjzb4
s9I1ZcYsBCzp/+UZWwf7/tywR3E/G9JhrSA7Px2MKjISNpRy0F682jI3Rwfu
84S+P45zoRweMUvt0kFeYUuQjAkf259P/m7J1IWBgTlDxVyA63YnHXds0YVx
X8nh0gVCTOYoDYjP6eKs04aw8FwhXBQuJJc06WJjpo/Q/IsQmcF65m/mM+Ar
1i5o6hJi4MnlNnkHBmTCu+XMjwtha2V6ZHEsA7kNW2znPRLgdNZNpvdtBkJT
bOp03/GRHRcZdnSCgRiPfz4Iingo3LP8fqYNEz8rXjY+s5uLZ2a3QztuM6Gb
KzHeVsHCB43o+pkJJj4+ym4wfLYI3ydsdVi2elAs9ZKNX68H/XtVtf6Vemin
uA4UZWsj7nNTt9eEHpYmbFXc/ZMm+jQ6ZNZb62PN+NTjxBPqcFoxyF4VpY82
i7z7XVfoKNgzvXL5LX1s5Q9ltraqgiZZ6G8ypo+NL28yH6Yp49At/RNsy0VI
7czJG0tbALv5ojql0kVY2bZWss1BHrfa8irrPi8C3y86wVRdFha/q5cdFRog
wLPBew+NgsIDsdeX+BvgQZx+8uqIKWK0oj/3Y7YB8p0nrbq0JshV6uZs6QsD
GDfejpRQxwl9/85GowUsZHxXeavnPEpanl5wTBSwsPLSse+2j4dJsk1jXbcD
C/uSplfKGg8Sk64s7du7WKjemnAkoe8TaUoM2Z9ykoW+n7sjKrnvyX5TUhuY
y0K80D/HtqObKLXRtEg9C++1DrPTlN6Ra9E9+7R6WbhLkdEZ5r0iLuzy6kFZ
NuLpFUYhI21koCFB4z6HjYippT5ft7eS06FeQdmr2BAvfuHJzm8i5YFbrm32
ZaM3ZCMlpqOBdPl6/qMcy4bk8a+8u031RHnbZpP7WWzUZO+dn7Ojhlh7eITE
3GbDbo/PmMNkJdntuqlw2Qs2rpf0G478cIukrHEfGvzGRiM3oWaeoJRUidyW
XFXjwCmGubX28g3ycfnG8B1LONCa4j88wc8j38IGks67ceA2FRCg7ZRLZK8l
XP47jIPCwqUPD9ySEtVe1l+TKRzUTNKVSgMyiJ5e1YvFJRwczgosneedSgw9
vUb8WznIrI1/dCZLQqwkX6npIxy8fUt/V2F8ijg0JPMe0bmgOj6T91Y5Sdwo
hqJZcy4emw05X6DEEoU3wSt+cefiyIPrTQXFUaTqZqG9XTgX6nYl2dyiCBKR
MmL3KmWOQ6X393vCQogw2NIuqpiLMmp6TpBJIHm7JspW8wkXBZ9uzk+x8Sfn
WZU2ZUNcWEj4GL28nTj9O2XtrsrDS8qmgYbYLWSmnVgPLebhRqV5S+sf7gRy
xdxQVx6WmW0wzxC6khNLWKqDQTycUkoaCwtzJPd+TJkMFs9x1hsqTe9aSRTO
UD4MXOZhZ8ZqvZ6j9sSpIqw1qI6H3QG9ObwCK5L0vqvqUycPbSqRheNKFqRJ
zT0vcJqHgl92/zxTYUJUUJv6gcHHma30au5rAbG40ezVbcuH6dEi47I2NvFk
vGa+3cbHWcVOw6lWJjki/tD5PJoPcVtu2b+lmiT729fc1kw+klsmnqh/ppFq
v9nApko+MpOrO57vopKex0omDa/5aMxy7lySKk8U7HWGayf5eHGp5M9FVAox
zOeVVzEEMD01ZvijzIRoePNIl7W1ADWhJX0enaOiCspfC296CuBubDN+Om1I
FFeQZGt+UIDUxc3FFN1+kZO3V+CNFAEMGBH2diO9Ipo874JhoQBR9DfL/yru
FL0sGq65Mvdbj9jv794xfSXK8bk7yO6f60t7fNRl2kSB85MYUgUh9kfLTs1/
2CL6H25CzOo=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55663#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {0.,
             71.62192493186035}}, {{4.797052277070928*^-7, 11.512924985265}, {
            0., 71.62192493186035}}}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, Epilog -> 
         InsetBox[
           FormBox[
            StyleBox[
             InterpretationBox[
             "\"\\!\\(\\*FractionBox[SubscriptBox[\\(\[Gamma]\\), \\(R\\)], \
\\(2  \[Pi]\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"5.\\\\\\\"\\\", \
TraditionalForm]\\) kHz\"", 
              StringForm[
              "\!\(\*FractionBox[SubscriptBox[\(\[Gamma]\), \(R\)], \(2  \
\[Pi]\)]\)=`` kHz", 
               NumberForm[5.]], Editable -> False], 10, FontFamily -> 
             "Monospace", StripOnInput -> False], TraditionalForm], 
           Scaled[{0.8, 0.83}], Background -> RGBColor[0.9, 0.9, 0.9]], 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
hZanYPjD/wEUz0Jw
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55835#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
Lgh3JP8DdFLhhg==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55835#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
2+IZfno7+R+gTds/
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55835#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1:eJwVk3k8FHgDxiVhh5gxrmYcM2OGJbnFuH5PpJVj3VErlpSVcndRrU01m3Il
KSRLeR05KnnDVEi0jqSVtnRQIXJVkqN4e/94Ps/n+3n+/T7soAiP7aIiIiLJ
3/P/zp3P+lSgnG8TX9V7LmiTBxwPyc/4CspJydfVQ3aKHji8/O6Im+AWcZql
rOX1uuPchuw3zoJOohRf83LY2x28d8f6HQUvCP/zuYDd3m4oKmGuWXtvgnSZ
/n6x2MMZJY9+TsjrmyH3zXv/MFnvgCKLWU+m/iL5xz+w3spxPRI6fbVaqcuR
uSXl56/TBMZdATpqLeLIKv9a4TVuBoXOCUy1UbA6puOkcYUeYo0DGEYbpfCy
86hm5UVdPDrf9SmmVQqu3uGJ3Wd1kLajqujLXWlMbzajquRqYqKDlcC3XQkv
2WEx7QouXIzTN8c3rISNft6l+k4OKCLR0ktCGeiHPsoPS1RDdlXW2WYjWQRv
sjawjWJCO/AWK6lYFqLnLk0Fpyjj+Z9Rj7VkqbDsn/qP+oACuIFHsymOVJTn
CTb6RNCxi58VMH6Uiskxp1CGDQ3VtFLuwztUBMRJDe4skMHXEeHItXkqcsvz
/YXeUrBr6qrINKVh8pR+BDVLEj8zmLzIPTQUBB2RTLYQh2/0jhzHGzS8fV7b
WhMnhm1tV2m8zzQY/GJsb+GyHOGcb4IlEzlI9tv3zF4Wxf44h8WnsXKovxLq
ar9fFImPMmKrq+XwiZHx9+B/RZGi82o0ZVoOW3WV+u5tXo5zR3QCQ03oiG+a
m9ziJYb63x9Wroikg37yL79tghV4eXDv4l9ldJwq/Fu/ZUEcy+JUXGyG6diZ
6ns8s1wS3H1NOc848tg1sHp27DwFP8X+NrrXXx4a6ZLtXbelsTNKhk/Plofn
1Nu5H5iyqArb0utEUwAz/a6fhJUcuFdcp+qdFNDm/M70SzUd58bWU3SPKyA4
KcbUcKMCpNdYcHMbFHCE2jmbOqeIP3br20gvKEBMT6HWslUZM+Vc34OmitAq
qbKquc7AzolV0WMRirDrerz0vkEFHhFiRR1vFSHW4Zj5sZCFE/pGUSZcJZge
c7ZKE+GgYTLAKnebEkxkWnQYBzQwW5ksIVaoBCO+ZVEBjQf9yPpHYa+VoMIc
Ho/r0sQOg5EL/7CVUcwWP11c+yPyphRDLQOV0W0Sw0x/qoPHVetNCvOVkfqT
w/sZyzWQjopeovQro+MbffWOj/rw650vMGGuQtJL9dIruw1RZpm4wX/TKoRn
9xgx1Iwxny81KkhfhU8a1qbblE3hKH4m+WrHKsxUzx4t8jNDdpiKYZ8EAyxh
WM63LD5GH17qEbNjQIG+5WBDugUs1q7Zr3eYgZX9Pb9Gu/JxIucG07eWAUX/
vdPNK8yQm7A38sAcA0NnY+4wL5igYrvZvWw+E//S/270TDFCg+PsKuEBJphb
y+USuw3wj35t+ItaJgI/1uVklOhhSD7u7uIcE2UnpihNcrqYnbNQZlmoYGTd
pqH++9qgvFrYtS5OBYNnvfTshVpQbRY2BtWp4O7JTKfEAR4SxjoGfOZUsLlM
X6bBjIu38i+WuZirgqInVfOikgMH63G27T5VbJxpnlhnz8aV7d/WmdWowp05
8mPdO3VQU1YG6X5Wha36mxudsaqIrVE9wjZRQ6vbdudfdJiwlLBpkrqmhiir
qYJcMSXU9BTXNY2p4VSeRNt5OwUYFdCvH9BSRyW/VbHoAh0VEYfLDILUcTjn
t5gImhx0rEcKh3O/7+9vGj64QEURxSs374k6BgVb30QlyoC2K6BN5wcWVvAP
Pt8zK4VkflvTgB0Lux9f/uFpkAR0+3OUarexoPikfe+i9gp0HN+9Ky2RBQe1
nZL/qi7HrjWkMeS7h5V3tnrqWC2DVA9VkdxlocQ6h75jxRIpjXu9U/ENC/22
y5w8Xy4QR3b1nXFRNlrUbr9KXJwlo63H5O9x2HjemnA+IHCGnAj3Cc21ZSO+
c+aAj+g0qQ7ZVOr1KxuqbWPfH/CB9P/q/V76MBtJMW31X1ZPEektXrr3ctj4
4rc2PF18nJh7eu4+VMuGQ5F5zYjYKAl29qgwfcJGQR/1ULbzMEmzd58cn2ZD
PTXw+tknb4nQxs2gSI6D4fs+rzXzX5NhM9cofwMO2l9kao3l95PpyNGk024c
uC6MOJoEviCipccutURy8ExdwJgce0pk37Buz6dxENIvl6rxrJeoqAif6F3l
wK3ri/CJWg/R9vb5ENTNwa3M8uGPV7vJ2pSPlKwPHHR2ljttU+widq3J3Haa
Bow+3L9quKGduIlo2ywZaqCHKTrTNdhKxPvCrC+4a2CjGqtWf6aZCG9UWFlG
aWDBemHzT35NJDrtg+XTNA2o8WNiH8g0EK0wE8t9VRrYc+/mqSGKkDy332eh
8FAD0y4Czp9RN8lpVh3/+qQGDk6cTjZef4M4LHw1d5fl4siaeG3JfdfI4mNi
PqnHhfcFym99i5UEy6s0wp254NleSxWbKCNHDFiy46FcZEiWDk54FpPmrWnz
YQIung0PhW7gXibiJ0WGRi995z73mhnPAuJwM7I7tIkL2lnGDO3aRZI02C98
94qL/cH6wRTvHNIh514c8o2Lxgctj68kZBEZNGYMMXgIjyxjBGueIUblnT4D
Fjx8Lb1o9/tiGvFmPGM+38JDUeirBanUU2S/YOhVbxwPo4F6E/eHBSR3+mNh
dzYPe/bdz3g4kUjuBC6FdNTxECgR6cBPSSCvH0jptj7jYcG+OrgqOJ6IWylP
Nc7zkHLbL0clYy/RLuFWCxmaaNE51s3/M5pMeX3oNzfXhOR8YUZdezi5KXJ7
5Q1vTZge0rn0+Y9QknAlycIwRhM3N2S6uFC3Ewdfn5DyNE009tktDfgEEqoY
94x2hSaaU/46/jXOj/xbOdVwuV0T3m/YRWc8fEj+L7fG2SOaiPb3rVm20pOE
SCQx8sS10OlZlHNG2pX8D0if4fc=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55835#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {0.,
             73.34976788488159}}, {{4.797052277070928*^-7, 11.512924985265}, {
            0., 73.34976788488159}}}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, Epilog -> 
         InsetBox[
           FormBox[
            StyleBox[
             InterpretationBox[
             "\"\\!\\(\\*FractionBox[SubscriptBox[\\(\[Gamma]\\), \\(R\\)], \
\\(2  \[Pi]\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"50.\\\\\\\"\\\", \
TraditionalForm]\\) kHz\"", 
              StringForm[
              "\!\(\*FractionBox[SubscriptBox[\(\[Gamma]\), \(R\)], \(2  \
\[Pi]\)]\)=`` kHz", 
               NumberForm[50.]], Editable -> False], 10, FontFamily -> 
             "Monospace", StripOnInput -> False], TraditionalForm], 
           Scaled[{0.8, 0.83}], Background -> RGBColor[0.9, 0.9, 0.9]], 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}]}, {
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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

              "]]}, Annotation[#, "Charting`Private`Tag$55546#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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

              "]]}, Annotation[#, "Charting`Private`Tag$55546#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
DcZ3mj68FGiDfwFHOKyv
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55546#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1:eJwV1Xk8VekfB3Brypbl2u694t7hism+ZCnnQ8bl3FJZItOPdpQtKVEklasm
hlZJomgRF6FJGLJElqkxSXsmpWxFqRHF7/HHeZ3X+5/znO/zPN/Pl7MxwnOL
hJiY2BnyzL6zJ898vqiZ6/gp7WPz2CEB6HjGVz9hMVWeXm15I0mABMnGgVXC
WirXrO+JS6IAi94sLYrTv0u97L5ndDVegEzXrL7lwk7KRanx5dM4AZK896b+
Ht1F1THWTD+LEeDWYcNre/QfUTkT9kOF0QLovz/cSwtfUIn7Cs+VhQnQLPtS
2NPYS4VtM4s9HSJADCf2wrym19QY65iJ8xYBnnuU/BXW1E/FuTAmv/wqwOVr
LGOb5g+UxeObLzh8AdLGmw9Wrx6l9kTWZQw5CeDGmB59hjFqbVlLX9YSAf70
Cm9n63ymvOJ9TG6bC3CtyyMx59lXqov/wj2CJcDVmUam4t3/KI+W3NJxNeJF
dpXxpRPU+bED1YlKxMk/Da47PEnJKvOKa6SJyzMPdURMUY60SXC0mABXehV0
lvh/p/J9Ujc7T9G4bD/hxTKdptzUUq6bjtEo27qyPMR4hnI7L272YYhGgLvX
vOdqYmjvc3Pr6aexbVdhsBFDHKf/iA5c/IJGpNyazNUnxDHTujqk4jGNXXni
rXtUJGCcXCUd/JBGYqefQYuSJD5Zfz0e20HjZnGVTJRQEmlT6Rlq92iMpDLf
s6cloWl9JfZNMw298L2tLdFSaItcKN3fQMPf4/nVqCEpaNfYHNOqp5FusvSI
9kZp+Ondk0+opXFXMSek9bE0vkzPWKpU07C8H2i04O4cpCpr9DTcpDEqMg+7
5SqDIl6VsKKCRlGaZKlniwwCvJ8qdN+gERze/WmYPxcV+dm/ccrI+h5XrIWt
c2EVt1PlTAmNXuPYPRz3ebhn/7bUQkQjW0FQXX1vHsSGNieMFdHwG2FP+9Cy
2G5gVPDgOg21zg8YbZOF1Xq5bZ2FNKItA5kW7nKoORJvNXCNRtfZ+593tshB
f9Swgk1sLobOyl/k0fgmpWrLVVLf1tLL/zXK48NqPYeGKzQ+dOgm2jkr4NLR
CR8z4hWWGWv31iuAcV9xhegyqeesuGWtoyIk7sSn2BPLikXJz9Qo4pXEfyf+
KaCRVXrmdJPFfIguPh2OJzbcUKt79Op80J1OAnPi5yk7ug3mK2Gnm2nHcD6p
f8OhLFlaCctEf+WVEIfanQkcOaSEj75flGOJK5QL9R7UKcE6/3q0G/H3gZqB
G5NK8H3daKFNvKzhvuiUtTJaK5Kavl6i4cFk6UfuUkZy0oOZv4n9oraeoyuV
YdR18n4Z8aa2MmX9L8oI7g66fYo4nPtDOGOlgv+p3fGJJ94T5zb9JFoFcvw8
l2Dig10noisqVOCet95mDXGa0avBtHEVZJzLfetKnJlktCHEShWGnYEa9sTV
+x+USEeqos5LycGM+OW+3dN511Xx2dbbeSGxeBx7heM7VUS+9VThEuvFNJx7
ymVgrcjxtDYxPzp4cHcAA6by6nVM4m07FO1UsxjwWRdzUIs4NbxCWNLNwPiP
5FezLt3u/0igrIYl7e8esma/V7RytFqghh/Sed46s/837CK7KFkN44V5kXrE
8sb2etn1ashM97X/mfhAmKmj/JQaHHZ3t1oSfy3W89tnrY6k0/p2jrPrf9CK
Go5Qx6npUhE9W4/J/GPrCtWxyr/Way2xZ4TU5Y436jBwkvTfRnzE1GKHlZ4G
6qjNLfuJ6z8GLsnepIHsDp3sTOKJklQZqUsa8KwfcqgkNo2s7tr+WgMKZd+1
HhFvNRs4/w9HE+ctv96eIs4ZVQ9x2KCJI+KL/uCR8+4udbG6lKsJ/xTU+hLL
74iake3VxMyQ6anfidc9mrxoxdKCakxAbhvxdYeDrgFrtOBw0tlGgdy/yVy5
QWGGFmKHJlz9iOk5J1PLOrSgfOD966LZ+7udbf5Mhokhmqbkyf0efJD/UGoZ
E6zpsOoYYnsb4z0mCUwYru3tHyU+cq6S5VfFxJK6CymxpF+yE3dHxn5j4t7i
5bs5pL9EWxY3Z9mxkGmaMdBLXE9PaNXEssDsoT2rST/+Y1oV/qKKheED/qIK
0r/9jLjG6W8s/DgYlP836e+Jb/aauvZsfCt6m69RTPrt1VSoUxwblrccVFNJ
Pmg31dzZeJsNvlNGrF0pyb/hjn99v7EhkfyXAZvkzRvGC/EVttpof2YgdCV5
5LZ0hOMco41dZ+eXN5G8Ktryw2nxTW1wAjesLKiioZSmsHHRF21sak90mKwh
eXJTO4ljtQDBVpTwCcnDxy+NL6rvXIDUG8WtASQ/HWQcG+RuLICBfqxUcRvJ
24dXbzcML8CGTq3EfQ9oWFxULY810MGhgqi+1T1kPyISrptt1MFA1vaU0Fc0
jJYOXHqXrYOLJ6RCuQNkPsh6Z+f06OBxSfGzoXEayqGBbUbzdJFgdZyKkRTg
ftdJ12SeLviqiW3tZB6l2rU1/LtMF5KbkqYOG5P523tOo2qTLpqerOv0WCVA
R3JYaPpBXdxuXLg0eb8AocbUnaBLuqi/8G94f74Acg+V1KlGXXjJGa0aJfO5
MO71NvU+XSj88kZ2yo7Me05F3YgEB5PvEvbKk/k22HKY0czloLw8tMzkKTn/
cN+QbGcOemrN109WkrwKWlPovZ6DP9fpf6IzSZ6v9xmST+DgdKT6seh4GrZe
XmHxVRy45Q+dvbGCxublniLrHg5qQ0SPRheTPP5l9ceRcQ50Cjo49j/ReLd4
5Y4AMy5+LuAxrL67Yzxy8OjxVVzgt19PaL13h0Th4fy7kVxwuVyPjIfuYLNr
ekzKuAj2dCp7LnLHKjFDxxnzn1Ck2WFoE+SO6W7K9qOJHjR51Fzeazco4s6J
fqY+CnfO2dcX4gbDa3oVNUweFnqtZcwd4GPUe6zX1pYHrlLA3/ZP+bgl9qdC
pQ8PzM9xNhHtfLj5+QYVp/NQfNnL5XkxH0pSeicNRTxE2H7OYVzgk3McrS9o
52H3ykApj3Q+cn+tHeEM8LBPEOWbcoCPIJmjzJw5Bsistk1ojOLj/wByJV8=

              "]]}, 
            Annotation[#, "Charting`Private`Tag$55546#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, 46.8951654687133}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {
            46.8951654687133, 56.42609464423868}}, {{4.797052277070928*^-7, 
            11.512924985265}, {46.8951654687133, 56.42609464423868}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 46.8951654687133}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55718#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55718#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55718#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1: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
C/YQT1ErFUwhoHybolCeBf8BQrkxqQ==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55718#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, 48.045105974936284`}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {
            48.045105974936284`, 56.384089916041745`}}, {{
            4.797052277070928*^-7, 11.512924985265}, {48.045105974936284`, 
            56.384089916041745`}}}}, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 48.045105974936284`}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
IEHhrStPZcL/AeU/g10=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55890#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
8ZuU5Tg6/B+4HQUf
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55890#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
vx26j3tarCXR4f9LbfjO
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55890#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1: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
37QUUR2o06JOz0XbwL9M8RZG
              "]]}, 
            Annotation[#, "Charting`Private`Tag$55890#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, 49.077909838942574`}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {
            49.077909838942574`, 56.95504914067233}}, {{4.797052277070928*^-7,
             11.512924985265}, {49.077909838942574`, 56.95504914067233}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 49.077909838942574`}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}]}, {
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJxdmHk0VG/Ax20RIYQkxVizRbKLeRSGe0VFSIW0yL4vKXv2JYmURIxdpKII
dRHKkn6iomJoRaSyJfFe57xzH+/bP873zJG5z73z+X7nQ3L0PHSaiYGB4T0j
A8Pqz+zFzN/5Qrf0RCI1Eh43GWNS36JpSOwHMmWvp76/hglWVLpVUb11iuyS
f0U5qdoEK+01C895N0featIhzyiCYEXaCxZblZbJDSf2vGk4gmDh3TYy7TzM
wMdkwDTfHcF299jLbW9jBU/csy698UIwge4pMN3BAdp8WaQdvBGMg8GHc6WB
G7D93UPyw/O+5p7KDDVecMGhazQYz9ci5U44q24CAS8XzsXiucrV9jXKKwAC
m3p0C/F8yJOlqOuTINBIKY2awjOnt88KB00IWKA/Mx77IFj8jZqtNnXCoKL6
nl69H4Jte9rQ5PhIBNwoQ45lBCOYDpte84Z72wFLRHTguUQES9bqaB7ZJwZa
lXdnbsTw3/ewds7eSwLFrLNdFgIo9lXD3NtOWRxMjNQiVVwIdoBBVm9llwRA
3WLa3d1MsOV+suaPnZKA6UoTsvDRGOMGTVe+CEuB0ibGH9dcjDHZUsnqBmFp
YGMWZ4iMUTAntgThHFYZ0KXmi33woWDXjLI+msZ2kyV90PE7S8bYYwuPThHR
3+Tom6/tjk2YYCUxEuPHohfJtsOHn1rpI5iLf9lZOX5GQAmJDMtxQjBbs/cl
PhMsYP/Hfx7jnggmaVasFvtsPYheYd+lg59P6pmqovkWTmDzncLvgWfJExez
OBAesCjgnBKIZw/xf7Erqnwg7vHos7DV1wObbwyK84MHLkoLaXiOcFfS4/wr
ALxIi9QmPCt51fe6jm4GWi9fSOri542wpiff7doCurZx6kb6ItgrpTqPD3Vb
wZvneqnfAhDs9ul/+hoPtgFG6fsFDeEIJqc7Rv2aLQp61N8tut1EsA19PILk
FjHg305O+E8MxTQtLNxD6kgg8rpV5Aj+/IiINLzZeVccXE5aJonXmmDGNtZO
FanSoN7M6ue6SgoWytwydiC2kRwU+ThWe9gYM+Zfnn4HfpIlN6ScDH6Jn5+C
Vk1I1QK5/JWRu5oygtmZWLC/F2AALFbZy4yOCDaZLPxNZJkZuEqQHFnx87ud
wlx1qJ0NHCjIixLAr7f3es9v3/YN4MsPh9tn8Sx7olEsoWQjmPF68ssfzzY+
Z24gNbyA22BaIATPQxcClvPKNwHtWKnUpNXn+bsBh0KMABhXoby6i2fsh/2e
7JObgbHWkTke/PzKdaKM7Ky2gCndFWYB/PwqT2u0ZmltBV2ueWyV/gj2if8D
437NbcD00ysfcgiCqeRvun9ORhT806wzEr2CYF0x7m6pUWLgdXZUY8IogtEc
Dk9whpJAVJw99v0+gjGVRRe0eYkDKwWmw/IjJlgtw2OumsPS4BO14RG1k4Kp
XhkqPP5vhtxu8srkEQuCFdO4RPfYLpGvKrf7yJgjmH8e47MgPibgL1Gajbgi
WBt3jvOzt+vAxK1Dqefx+5PNhdbXP2cHv705SIfw69u/+/KR8xgXeDDhku+N
52reMsmXT3hAm0ai9Dk8R/Ve8auu5gO/D9gqROHZxZtba1MWP6DxGHHeWM1T
W3y+ewqC3jQQ3Y/nnGlBZ50TQkBrL2efP35e4y8L+lj2CYNYQX97TvzzvfBH
W0hMWwRU2p7hjQhCML8H2yJJqtuB/l3LddbRCMbrZt8hxy4Gdki3TxSX488r
qfrJJBMJaJXM/m24gmKphgd/TM6QAM/mMmqcDoK9vTONFXZKgwGji0KeqRQM
CeGfs4mtIP87/2RnyEtjLGWmNar+4DT5VPXjlJxm/PlaaRHmbpsnl/vdZAiU
RrC7Z8zvOyuukOPzGI4BOwR7UFHH5hPLDDgjwr47eSDYdOUu91ojNvDb1Nxu
ET8/v932wiomG0B3+e+vp/DrzarKvPpUZSNonwnjX32+zIS3Snn584JWdbUf
5/FcH/byzjqvTSBj+P5w/Orn9bb5dD0qAPbvLVIox3O8koq3quRmcO3T7vJl
PB97vZivunULqB0xp3zFzy87PMDr3B9hUC3/vFcBf77Cv3eNWP8RAR+TKx6+
Oo+/376SR83ft4PI3X7L6y4hmALtxua6k2LAwflFgkQPfj+drMosHUhg4G2p
7pchBJvxGk9IOyAOzBO5aJ/nTLBpy580TU1p4Jng2+Y/SMHO+RZp6nLPkM+q
rr9osICf1/1rF7s8/5JFM9mGSo0RzGuD1bWDVxjB87C++WJnnFc7deO3Oa4D
JZLvVHXw86EpngsimbADO0lfPmP8eqa6xMK19nIBx+l6Ni88u2ll2k9e5AG/
DQxtgvAcFGy8PODHByot1E9E4Jnid3Y8wI4fCJiS267iea5C0uaCmiD4kqzK
3InnM8pjN1+RhADtZlGtNX4+Wa4iu96xCYPi+CByC/55/MIf3LL8ZyuIMmV2
KQ5EMJ4ULkeF2W3g8wshP1ok3occltk5b0QB1bTm7zQVwcqCR10EP4qB9S4n
/LusUOyU6aFKtTck8Jd3pwzDYfz3WSTTZSulgZ/l4BOtXApWcqTSfDLrD5lW
KyCxUwvBTg0vazJnMIBAWza3Lafx++tx/lm7HwvYI/tZLhrn01mP/l/fKeuB
fN+DSjn8/e9iAN01hpyg3lz3tiueT3bc5ZWa5QUi7UnHQvHMGCyyX+/rJrB8
oS390mpfKmpLZmMCIHwPu3EdnhfuJLOxUDcDhaqlCin8+hdvbRiPvbwFGHqq
eBjj148hC1sazm0FfjMPBfVxnhvrTpL2Bm4Ds+yv84ZDcV55hpYrO4qCqYPK
92iZ+P1QJDc5UcXArOQJM68l/O/ZWiq03iABpRNn2rhS8fPiiqorN/hHTr4Z
v9hniWDBGhXzuZeZgIW/dMc1NwRbmlo28TVnBfn8Pl2V+P23mRRZPoxwgMNP
q/8dwd/v7euMuxv1uMEt95OLPnhOkRseT5nhA5FPe3dF4znZozr2Tj8/2C2v
OpC7yuOdG5OOlQkCp13h+0fw3F9loEq9JQSa55Z+ZOLXq62uGLQzVBj0n39b
aIfzhGP4r5t+sAhYsVWOOHcO58GQYr6g73bws9Lpxc44BOvpTTeKkRYDaUPV
7KPVOI/ao/lbxUmg+ZJDAPNJFLt1tHGSNCYNbkXtfFkYQcHoe2s8MLp0rsSI
2FssQ0drBEUpxN6Smae6y+PPA31vLTMcEe0RNCb2Vt+4YoRqkjGxt0T+M/77
3wYTYm91dSseCYsyIfbW9Tx+i6uscG9tYXlI1ouHe0vG/2xF+zLcW6EZuUXG
1iixt0RfUi6Z+aPE3lJbT3GeDUOJvaXmn8l+Ox4l9pa6S71Y3Q2U2FtnPx0K
+NOHEnsruAIt+1KMEnvLsNU8NHQW7q1ZJYlJFQeE2FtabJpCCqMmxN56/Wxm
/IId3FtfGy0Dl4fg3hrDEvwLz8K9lW7FHX7lG9xb89UDchlr9laqfOFR1k9G
xB76oqJeXdYK99BYe3iU6G6U2EM+kWW2d11QYg8913a/EH4eJfbQ0i7W1pMX
UWIPecUXtFSnosQewmp/2stXocQeKjv0b536H5TYQ8F+8feGjFBiD9lfFp8c
LEaIvSM9b9aRVgH3jim6zSe0zYjYIynBgh+LiuEeOflLRa9EGCX2SLSPQIWn
I0rsEZZc/9iGIJTYI9M7c0elIlFij7COPvHrT0KJPfKI6c26wAKU2CNb6v8p
b5xEiT3iEbouTA1/Xuh75MV50qbKboTYGypcbmV8+N6g7wHH8O7kz6NwD2gB
xlBnCkrsAYcJN9DqhRJ74JDiNr2BEJTYAw4L0nvfxKDEHvixeN4tOQMl9sB8
Ms+LhScosQcOpyM8nh9QYg80WRa/yxZBib5X+CRbsWlN36MiOxIePTQi+niR
084n+Brs46cTO8oFuFCij/P3PRQzOI4SfeyVgaSJBqJEHwvGVwdyR6BEH/vz
e1xWTESJPi7xZQl+losSfXyBN/Ey4whK9LGifVa+YApK9PGQ25iw6QhC9G1W
09iv3gEK0Yd/ee8rOPfBPtwcmtT3ny5K9KEdW/2GOXeU6EM9ajf3wwso0Yev
QnQ00qNRog+9J35OL6WhRB9+DNIJCn6IEn2YHzFmVzeNEn3IT808gOxCib4L
3bBZ+lUOheinU8ezC+1lUNhPFGrmyBmU6KcPn8WOKwWjRB8dlD6VUYZfP72P
wtNMx0dKUaKPFip+RWXNoUQf1L2L6v1ojhJ9wNTs6qziixL8V1DlD1eJQwn+
B9TUyvtcQwn+D3V03u94jhL8D2bPH2xogXwX2vafreUavku4VdkfDoZ8n4yk
kAKnjQi+N89KdqZ6Qb5XiNLGAc4nOt/V5rNi245DvneXN6q3fjAm+K79ZXvV
GSvI9+TZlgr59yYE3w/so+5xPw353sTIOS8xBvnOeTf8c4kN5HuiTE9d1QXI
d8s9VFHtGMj36zRrie2XIN/zXz2f3ZUH+e5d+XJv2CDk++sLzTta8yDfBycc
crt+Q75XzFn2lNtDvmffWrj/ZwTyvXLH0ITLGr4X/LPonV/D90fVb3vz1/C9
NXglNm0N35cVFZ+lr+H7EtP9R6drIN+HjlB9rxZDvu8ouiAdLQv5rjsRCoS9
Id83SwV5ukZCvjeE6SmQEiDfu263VvNdhXxveXB4droG8p2f72ui/hzk+0N0
NKNmH+T70vsd8lNFkO8M0R8U1/I9S3LB50Mm5Huz9eMfzjGQ70rcR990ckC+
679IZWVygny3CjTLmQmDfFeI2X9SNA7yncb8NE8jDfI9vMD0K28Z5HsiUmRu
PQ35vk9iZLTdC/K9bsVzxLML8n2DuMdn3jV8t9vrq1r6DPI9zuPj/f59kO+t
Sc6/lwIh3+f6nt/wuAj5LnvkY7NTEuS7G0P8wK8syHejcd+cgVbI9yLJ7Gyt
15Dnrp4Tymt5HkSJOLklHvL8syZHxqg/5HlMZryH3iL8fjW0PeC1qwPk+R0v
xkDfUMjzgWS2ZvlYyHM2ruc6V1Mhz3O9OpsOFEKeH91zr/LFZ8jzDqH3vANx
kOca2hHmA8OQ5+fevRNYy/MwdvMQ2VrI8+lNrooHNCDP06WOfqD5QZ7zbWdX
DYyCPE8/Y2OmlQh5Hun8VOr4NchzCclbg4caIc/rJ6Zcmschv8/Y387qXcNv
Ng7pEznCkN+Hn6J+MW6Q33ovA9T24X1H/37BV2avIhwPee55/I0Sezrk+Xn9
+s7LdyDPj919xag2D3muq9HfM28GeZ5otYimBEOed9jKctxLhjyv4onoHr4J
ef53M4mS1QN5rh3m4NrUAHmOsQh9t1jDczFyRU/nPUOC59kfsC5Gfchza1Vb
pj9jRgTPM6tu0wrTIM+Har76d+pCnmstGMidXoQ8l85z+lVWBnkO2mIMKq3h
Xtd+fE6KIQfyXDMu3sKBCnmuYPN3A4kK/ahr7+Ncdir0o2NoXqUNFfrRnDZQ
G1IA/ajy+qO0M8XQj6opnRCWrIJ+9Lig3qOkDuhHp0olyD8UUILnjqIHGD/W
QJ6/M8vvVFmCPHcefMqu7gR5Pv5Fl0V6FPK8+73z+Y/OkOc7XAz416/xo3Je
aqEta3jusFvurOGCIeE3fQvrojaxQb/5C5DnXBKg3xz31qzOzIe8Vz+QM2ZK
hX4z8ejur6vnRef9p97PDOJU6DfvydFOP6VCv7koG1yfVQj9ZmPbWd68Mug3
RVQpKUl10G8iDJ4Xpr5Bv5kuE+y0FAT95hVpc5bK/dBvvkiWMH9fCf2m4FHU
4P2aPmDdE7Zfqt+Q8JNHHs5TUgZMCD9ZLzRVHOAP/eQvxoA4iTzYF7d2Nfqs
Pj/0vmjfo/+Ejwr95AQTU+RqpveFmZnbdAwV+snEKQetvwXQT64IvXjbXQL9
ZMhetEWpGvrJb08kU+TeQD9Z4tHY4Y7vd7qfVE8+OOISAv3kp2Hjm6l90E+K
PXNX98T7hO4XX0ykFA7ugn5R5dDjVoVM6BfnfmVEKVNh39TfYExVo0K/KBWU
2MFKhX4xtubroiYV+sWHabRf/AXQLzqSxI6dLoJ+0VlmJ8JcAf3iTendfY0Y
9IuMt6J/7mBGCb/Y+bZNq4EF+sUni0dbNSSgX0QFbFnM1vTTlu74LFqLIeEH
pXXKK7WaTQg/uKAofjrXCfrBW1zfdwzmwv66IdvvfooK+2up95DeFir0g46D
0xQuKvSD63SmRDyo0A8etyiqri2AfjBdI+0mdwn0g8pMPlKs96AfrPxMkTry
EvpBmT9nBE3xvU33g96WD/T2XIN+cA49TRX6Bv2gR9D+/7QHKYTf0792VnVS
BPo9jZ5YwfuXod/LSZssnsuH/TfvdlhWnwr9Xm2maw4bFfq9P8f4QhSo0O/F
lWMrY1To9wTTO//9KYR+79IK7U5jOfR7Ad3kHbQG6Pfe97V4VcxAv5frZyJs
oAX93gjF4MqkBvR7WP73HP5cCuHnAtm3CW+MQLD3cd79Mht5QLPnd2fmfOjr
XBhn31hToa9TmV7OWb1f9D51a2N0XL2f9D79dHMxiUqFvm7mKKJuVAh9HWmI
ylBSCn1dqozE+ooH0Nd51Q98Jg9DX+cmOJKvjO93um8T9TOPSzaEvm28gTYs
dwPBlsYaxu4t8uD7wmT+ABX6N9of6Xo5KvRvmjcTfVbvB92/JSNHCylU6N+y
9rZOGhZA/5agEHV6qAj6t1bnfhBUCf3btPzBjfqt0L+ZZDZdPymAEv7NTEDn
8rpBhOhzcSkP6zi8z+n9FvctsXDfIvy+Qs/0fqNnhv/3j857+ut03tMznff/
9//j+d+sQ/CP/jqdJ/RM//zQ8zDf++OuVPj3CvppxZsy4Ov/A0Kj1vg=
          
          "], {{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              
              LineBox[{1, 84, 46, 26, 2, 3, 85, 47, 27, 104, 66, 4, 86, 48, 
               122, 28, 105, 67, 137, 5, 87, 49, 123, 29, 106, 68, 138, 6, 88,
                50, 124, 30, 107, 69, 139, 7, 89, 51, 125, 31, 108, 70, 140, 
               8, 90, 52, 126, 32, 109, 71, 141, 9, 91, 53, 33, 110, 72, 10, 
               92, 54, 127, 34, 111, 73, 142, 11, 93, 55, 128, 35, 112, 74, 
               143, 12, 94, 56, 129, 36, 113, 75, 144, 13, 95, 57, 130, 37, 
               114, 76, 145, 14, 96, 58, 131, 38, 115, 77, 146, 15, 97, 59, 
               132, 39, 116, 78, 147, 16, 98, 60, 133, 40, 117, 79, 148, 17, 
               99, 61, 134, 41, 118, 80, 149, 18, 100, 62, 135, 42, 119, 81, 
               150, 19, 101, 63, 136, 43, 120, 82, 20, 102, 64, 44, 21, 22, 
               23, 24, 103, 65, 45, 121, 83, 151, 25}]}, 
             Annotation[#, "Charting`Private`Tag$55604#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              
              LineBox[{152, 211, 189, 177, 153, 154, 155, 156, 157, 158, 159, 
               160, 212, 190, 178, 223, 201, 161, 213, 191, 233, 179, 224, 
               202, 239, 162, 214, 192, 234, 180, 225, 203, 240, 163, 215, 
               193, 235, 181, 226, 204, 164, 216, 194, 182, 227, 205, 241, 
               165, 217, 195, 236, 183, 228, 206, 242, 166, 218, 196, 237, 
               184, 229, 207, 243, 167, 219, 197, 238, 185, 230, 208, 244, 
               168, 220, 198, 186, 231, 209, 169, 221, 199, 187, 170, 171, 
               172, 173, 174, 175, 222, 200, 188, 232, 210, 245, 176}]}, 
             Annotation[#, "Charting`Private`Tag$55604#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 1, 1], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwVzVkzggEYBeAvWZJd9pAWS7YsIZI1yZ7u3fgB/PuyJB4Xz5w577wzJ/n6
Xn8LBUHwQoMtJc4QTf2DT774psUPbbb9zDLMMcv8uu/IOa4YocQK9/9D7DJP
hVFOyPJAiDwJrolxyiod7LFAlTHOWOORMPskuWGcc9Z5opMDUtwywQUb1Oii
QJo7Jrlkk2e6OSTDFD0cscg0EXqJ0kc/AxRZYoYyOeoM8gdSwRl4
               "]]}, 
             Annotation[#, "Charting`Private`Tag$55604#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 1]], 
              LineBox[CompressedData["
1:eJwVzEVWFQAAQNHvUtgSIdIl3R3S3Y10g7R0dzdsicvgnvNGLygxNzjnRyAQ
qCJEjFFJFqGE8ZNwfhHBOFVks0ont0QyQTVHfI/X6OKOKCap4Zhc1unmnmim
qOWEPDbo4YEYpqnjlHz+08sjscxQzxkFbNLHE3HM0sA5hWzRzzPxzNHIBUVs
M8ALCczTxCXF7DDIK4ks0MwVJewyxBtJLNLCNaXs8Zd3fvOPVm4oY59hPkhm
iTbKOWCEFJZpp4JU0kgngxU6+MMho3ySyRfjSEl7
               "]]}, 
             Annotation[#, "Charting`Private`Tag$55604#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Dashing[{0, Small, Small, Small}]], 
              
              LineBox[{475, 468, 473, 464, 469, 465, 470, 466, 474, 472, 
               476}]}, 
             Annotation[#, "Charting`Private`Tag$55604#5"]& ]}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, -55.95518941241704}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {All, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -43.39684482535654}}, {{
            4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -43.39684482535654}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, -55.95518941241704}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {All, 1}}, 
         ImageSize -> 250, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJxd2Hk0VV3cB3AkJJnnIeSWeMwhs93Eda5IUqbMDUKGkMyl8pQhJRQqUWTW
oMjQkZLKFEVlSFE9pqIQ0vWe1nrv/Z339Y/1XXdx7z5r79/ne7e8h//OfWws
LCxVrCwsf39nL2T8zBXPMdltETofrEbF1/53ahCL7zeNjrQROX+DiucXSqnq
Pv1mupdN8GUaxQIv7LSKvdo7axql2nBtOssCzzeYs5VSp5tSbp+P+8OH4bGt
9orP+JehPraqhyOnMXxDu6vy6iYOFDPAxnnzHYaLtH5Dky+40Ujbnh7uPxjO
zRLEs1TLiyx5eWpKl9HwLY/by9J0BNDInZePbrDT8EsnlN29tYUQrdtttJPI
FT6O3TQBEeSfPnP2C5F3+rPntwyLokVN5UPcy2k4T2DQEvegOHqsy6LkR+Qz
WZVS9tWSaL5APtmeg4bLPKlt8HgojdyjOSgfuGi4IafJ45V3ViPfBppdGS8N
T9J/8fjjFjl0MF/UyF+E+PvDe7yzN8ujt0PxlzMnMfzrRutAF4016LxicmVs
DIbvYFEyWdJUQLLfBh7hsxY4/Y2p3nc1CuLiMknbEWyB86KG1C+Sa1HV+q9+
bYtUXKmQcq9Wch2K8chKMYqk4gc4z0pe5VBEJ7fm9/JzUPFLZplDlvGtpn6F
WijOm4ofCik6qCzMijJL6o8abcdwR6u+W0Fj7GjX7Z11vZUYTrEq0Ilv5kKi
iVeDIqYwPGV/Rf6vRh7UdDHGvI2VhlPcT2ZyY/xoT3679V7ieR1e8yd+SVsQ
aU11739CZMrRx1nv1wij/a0btvYR+bifugnPbxEkNyNcO01k9YCaTp9PYsjt
2eh3deJ5YhwXk263SKDyk2xFzUTuUq8+3F8thbTcRHRsOGl4yb4/mzbel0Hu
O98PG62k4crGI3lfs2VRgmt3f4EgDV/5ml/UtFEODSqaqkjx0XA9W1u/qGp5
NGWxZUywDsOp9nsOlKasQx/qzPjlNlHx6GWNIzvi60w9RGzXLtKouIuF7Yo+
ERbU+GSOY0gNwyeSJP+Tpi9DcUHyoieuYXhJ8rKKnc84UWjCA1W/rxjeebn9
55FnK9FZ8USFmSUMV3Kvkzt7iw8tRsuySRDrsw/an4VVCqAZs72cVUQeiAyl
Xy8WQqHbfO/3/N1/41u5VU6LoMEDQt/HiYx/dzXK9hRDrC/RZ0li/cWGcWYu
uyVQHp91TRqRy/ZtfJqpL4X6Cv7jayL227BwP+t2PRmU6jt369sKGq6VK3T3
mKIs0jgckHGdn4a3nPbzTYmTQ2K0G7yOwjR80M1ujCdaHl2mFcZ9fovhVSz1
qyrt1iGXkc+oxIWKh1xnbQ4TZEOaN+s9Hh7C8Cbeq97Nb5ejhkt23e7PMTx7
Fa2m5vkKxBFafsp/DsO3bzjvEIGvQkck92yYZaPh9wSKKB2P+FH23bj3/xLr
ietMDb53TxDlvot73ELkQ4G8+kKZwkgt1lDw49/8TSJo3F8UPRUV96QT+eqk
qLehuzhS35D9CiPWO9px4zX7Fkkk/fvzWS5ivXPzBuJyBtLIw3O9AytxvoLv
y5yQ116NZurexL7ioeECvq4vlFfIIZ7HH4KCifVi8vceTbDJozpuq85k4vyn
bLP5PjEtj/zNTP17r2L42/JJ/ObLdch/oVIxQ4GKY1HCs/bxpaa65bzn9Yyp
+O391ne9VZdM9emPFqJkMfx+aTVnUPwyZBM4IRSciuGTZZp+VWac6Fdi327O
jxgevMFVUstiJRq61naukI7hmRUZ6U+0+JDRKf59I8T7W0lKrQ0IEUBia35F
lRPrrYnpKF8eIIRs7D3c3/w9LyXWkzU0EUT3ckkfIfIZda1AbYoYkpLaqyhI
PA/n7oVcbSkJFFpZjsUSOTs2NODYvCTSdtJZlkg8n9jxlo975qXRq9jeXFdi
P9x/fevh4/HVqEJl07Nc4jyoDGaJVXvKoXNcSS/NiPlz78Duol1u8shtwdjZ
/TOxnl1Tg3p661Bm/ZE3R/yoeMDK3ZdsUlnR6Z4LCjLOxPlXMz4j47EcpTab
nmPFMXxQ9ViYvMUKxNpt+MxyBsO/tcjF6m9ehYbLDe4fIfaDr36G68RJftRQ
ERQXQqwnLJxKfxcsiK7dNfnZTGTz4IOjoS7CKMxrU/YAkWdLKfaROqLI3v2s
5TyR92uMXOmSF0deRZuTjYj1ZvpIa/ZySiKvztWtX4j8RTi8kT4vhZbWmlNu
EPOBP3mVh8qMDNKIchCmE/Mhn3tX9tUeWTT49GNBthANLwr/dEh0SA7NOznm
GnDTcC/LnWU6PfJortXVWaUMw/nZKReVytah/N9XTJy0qDjlcETzs2B21H7/
eBBLMYYfPPzmx7g5F7pQICUwNI7hmiyotXIbD3oh+YrzDwsN7/s38I0iHz+q
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
          
          "], {{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              
              LineBox[{1, 76, 43, 26, 2, 3, 4, 5, 77, 44, 27, 93, 60, 6, 78, 
               45, 109, 28, 94, 61, 121, 7, 79, 46, 110, 29, 95, 62, 122, 8, 
               80, 47, 111, 30, 96, 63, 123, 9, 81, 48, 112, 31, 97, 64, 124, 
               10, 82, 49, 113, 32, 98, 65, 125, 11, 83, 50, 33, 99, 66, 12, 
               84, 51, 114, 34, 100, 67, 126, 13, 85, 52, 115, 35, 101, 68, 
               127, 14, 86, 53, 116, 36, 102, 69, 128, 15, 87, 54, 117, 37, 
               103, 70, 129, 16, 88, 55, 118, 38, 104, 71, 17, 89, 56, 119, 
               39, 105, 72, 130, 18, 90, 57, 120, 40, 106, 73, 131, 19, 91, 
               58, 41, 107, 74, 20, 21, 22, 23, 24, 92, 59, 42, 108, 75, 132, 
               25}]}, Annotation[#, "Charting`Private`Tag$55776#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              
              LineBox[{133, 196, 172, 158, 134, 135, 136, 137, 138, 139, 197, 
               173, 159, 210, 186, 140, 198, 174, 220, 160, 211, 187, 226, 
               141, 199, 175, 221, 161, 212, 188, 142, 200, 176, 162, 143, 
               144, 201, 177, 163, 213, 189, 145, 202, 178, 222, 164, 214, 
               190, 227, 146, 203, 179, 223, 165, 215, 191, 228, 147, 204, 
               180, 224, 166, 216, 192, 229, 148, 205, 181, 225, 167, 217, 
               193, 149, 206, 182, 168, 218, 194, 150, 207, 183, 169, 151, 
               208, 184, 170, 152, 153, 154, 155, 156, 209, 185, 171, 219, 
               195, 230, 157}]}, 
             Annotation[#, "Charting`Private`Tag$55776#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 1, 1], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwVyec+wmEcxuF/9srIDElDJXvPEOG9M+AAOGxb9oji8uL6fJ/ndyfOLk7O
Q0EQnHJJxqfz/8CVXHPDLXfck7V1EWKZUR7cc9rNDnWsEKNsm9QedqlnlTEe
bXmN0MCT/zNT3r00skacF/dp7WOPJtYZp8SrfUb7KdLMBgkOebPP6gD7tLBJ
kiPe7XM6yAGtbJHiwzavQ7SxTZpP9wWN0s6X/6IO00HF/5sfqtRYch8hTIEJ
jvm1/QEw2CQU
               "]]}, 
             Annotation[#, "Charting`Private`Tag$55776#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 1]], 
              LineBox[CompressedData["
1:eJwV0dc6ggEAgOHfpbgbZJbs2ZCdFUW2yJ5ZmdncZK+D93m+8682lg5P1wRB
kKBOFEkzTD0NhGikiWZa2GeGGNes0soBs7wS54Y12jhkjgoJblknzBHzJLlj
gwjHLPDGCPds0s4JGd5JUWaLb6KcssgHozywzQ8dnLHEJ2M8ssMvnZyT5Ytx
nijQxQU5Jnhml24uWWaSHq5YYYpe+uhngEFK5Pmf8MIefwxRBQWhMfI=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$55776#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Dashing[{0, Small, Small, Small}]], 
              
              LineBox[{439, 432, 437, 428, 433, 429, 434, 430, 438, 436, 
               440}]}, 
             Annotation[#, "Charting`Private`Tag$55776#5"]& ]}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, -55.95518941241704}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {All, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -46.08238750495404}}, {{
            4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -46.08238750495404}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, -55.95518941241704}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {All, 1}}, 
         ImageSize -> 250, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
Ojg=
          "], {{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              
              LineBox[{1, 54, 36, 26, 2, 3, 4, 5, 6, 7, 8, 55, 37, 27, 64, 46,
                9, 56, 38, 72, 28, 65, 47, 77, 10, 57, 39, 73, 29, 66, 48, 78,
                11, 58, 40, 74, 30, 67, 49, 79, 12, 59, 41, 75, 31, 68, 50, 
               80, 13, 60, 42, 76, 32, 69, 51, 14, 61, 43, 33, 70, 52, 15, 62,
                44, 34, 16, 17, 18, 19, 20, 21, 22, 23, 24, 63, 45, 35, 71, 
               53, 81, 25}]}, 
             Annotation[#, "Charting`Private`Tag$55948#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              
              LineBox[{82, 133, 117, 107, 83, 84, 85, 86, 87, 88, 89, 134, 
               118, 108, 143, 127, 90, 135, 119, 149, 109, 144, 128, 152, 91, 
               136, 120, 150, 110, 145, 129, 153, 92, 137, 121, 151, 111, 146,
                130, 93, 138, 122, 112, 94, 95, 96, 97, 98, 139, 123, 113, 
               147, 131, 99, 140, 124, 114, 100, 141, 125, 115, 101, 102, 103,
                104, 105, 142, 126, 116, 148, 132, 154, 106}]}, 
             Annotation[#, "Charting`Private`Tag$55948#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 1, 1], 
               Dashing[{Small, Small}]], 
              
              LineBox[{155, 206, 190, 180, 156, 157, 158, 159, 160, 161, 162, 
               207, 191, 181, 216, 200, 163, 208, 192, 222, 182, 217, 201, 
               225, 164, 209, 193, 223, 183, 218, 202, 226, 165, 210, 194, 
               224, 184, 219, 203, 166, 211, 195, 185, 167, 168, 169, 170, 
               171, 212, 196, 186, 220, 204, 172, 213, 197, 187, 173, 214, 
               198, 188, 174, 175, 176, 177, 178, 215, 199, 189, 221, 205, 
               227, 179}]}, Annotation[#, "Charting`Private`Tag$55948#3"]& ], 
            
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 1]], 
              LineBox[CompressedData["
1:eJwVzek2QmEYBeBzTEkoMkSzopIy3Ii1XIIL4KYVDWYa0PD48ay99/udtU7x
9v7mLgyC4JoH0kaUid6izSNPdOjSI+ObNaZ6Re7S17MyRoOZXZV7XPBs5+Q6
zf+fUmOfS16c8nKDc0JOSfHqrSA3WeDNfqeox1nkwz6SCZb4tL8o6VssU+eA
b/ey3GaFgX0sk0QY2iPG/PDLifsOq5xxyBV/3uaQ2yGb
               "]]}, 
             Annotation[#, "Charting`Private`Tag$55948#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Dashing[{0, Small, Small, Small}]], 
              
              LineBox[{318, 311, 316, 307, 312, 308, 313, 309, 317, 315, 
               319}]}, 
             Annotation[#, "Charting`Private`Tag$55948#5"]& ]}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, -55.95518941241704}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {All, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -46.765061696732786`}}, {{
            4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -46.765061696732786`}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, -55.95518941241704}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {All, 1}}, 
         ImageSize -> 250, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}]}}, AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"],
   "\"nondegenerate internal squeezing\\nparameters of Li et al, 2020; \
changing \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\)\"",TagBox[
    GridBox[{{"\"\"", "\"signal\"", "\"quantum noise\""}, {
      "\"sensitivity (NSR)\"", "\"transfer function\"", 
       "\"transfer function\""}, {
      "\"/ \\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) (log scale)\
\"", "\"/ [?] (log scale)\"", 
       "\"/ dB (20 \\!\\(\\*SubscriptBox[\\(log\\), \\(10\\)]\\))\""}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{3}}}], "Grid"],TagBox[
    GridBox[{{
      "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \[Pi]\
\\)]\\) / Hz (log scale)\""}, {
       FrameBox[
        TemplateBox[{
          StyleBox[
           InterpretationBox[
           "\"\[Chi]/\[Chi]Thr=0.  , \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
            StringForm[
            "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.  ", "100. ", "1000. ", "1000. ", "0.1 "], Editable -> 
            False], FontFamily -> "Monospace", StripOnInput -> False], 
          StyleBox[
           InterpretationBox[
           "\"\[Chi]/\[Chi]Thr=0.95, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
            StringForm[
            "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.95", "100. ", "1000. ", "1000. ", "0.1 "], Editable -> 
            False], FontFamily -> "Monospace", StripOnInput -> False], 
          StyleBox[
           InterpretationBox[
           "\"\[Chi]/\[Chi]Thr=0.95, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=1000.ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
            StringForm[
            "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.95", "1000.", "1000. ", "1000. ", "0.1 "], Editable -> 
            False], FontFamily -> "Monospace", StripOnInput -> False], 
          StyleBox[
           InterpretationBox[
           "\"\[Chi]/\[Chi]Thr=0.95, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=0.01 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
            StringForm[
            "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, b\)]\
\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\(R\
\), \(PD\)]\)=``", "0.95", "0.01 ", "1000. ", "1000. ", "0.1 "], Editable -> 
            False], FontFamily -> "Monospace", StripOnInput -> False], 
          "\"5\[Cross]\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-25\\)]\\)\\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) target \
for 1\[Dash]4 kHz\""}, "LineLegend", DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 0, 1], Editable -> False, Selectable -> False],
                   ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                  ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 1], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"Directive", "[", "10", "]"}]}], ",", 
              RowBox[{"LegendMarkerSize", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"{", 
                    RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
         Editable -> True], FrameStyle -> Thickness[Tiny], StripOnInput -> 
        False]}}, AutoDelete -> False, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]},
  "Labeled",
  DisplayFunction->(GridBox[{{"", 
      ItemBox[#2, BaseStyle -> Directive[12, FontFamily -> "Calibri Light"], 
       DefaultBaseStyle -> "LabeledLabel"]}, {
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
       Directive[12, FontFamily -> "Calibri Light"], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#4, BaseStyle -> Directive[12, FontFamily -> "Calibri Light"], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left", ",", "Bottom"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"12", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"Calibri Light\""}]}], 
           "]"}]}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.84127695902914*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"c3e17922-b298-4dc5-aa29-d062f9e68728"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"valsListHeld", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
       "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Chi]Ratio0", " ", 
        RowBox[{"Hold", "[", 
         RowBox[{"singularityThr", "[", 
          RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}], 
         "]"}]}], ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
       ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Chi]Ratio0", " ", 
        RowBox[{"Hold", "[", 
         RowBox[{"singularityThr", "[", 
          RowBox[{"Tla0", ",", 
           RowBox[{"10", "Tlb0"}], ",", "Tlc0", ",", "False"}], "]"}], 
         "]"}]}], ",", "pumpPhase0", ",", "Tla0", ",", 
       RowBox[{"10", "Tlb0"}], ",", "Tlc0", ",", "Rpd0", ",", "True", ",", 
       "False", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Chi]Ratio0", " ", 
        RowBox[{"Hold", "[", 
         RowBox[{"singularityThr", "[", 
          RowBox[{"Tla0", ",", 
           RowBox[{"100", "Tlb0"}], ",", "Tlc0", ",", "False"}], "]"}], 
         "]"}]}], ",", "pumpPhase0", ",", "Tla0", ",", 
       RowBox[{"100", "Tlb0"}], ",", "Tlc0", ",", "Rpd0", ",", "True", ",", 
       "False", ",", "False"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot\[Gamma]RGrid", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}], 
     RowBox[{"(*", "m", "*)"}], ",", 
     RowBox[{"4.", " ", 
      SuperscriptBox["10", "3"]}], 
     RowBox[{"(*", "m", "*)"}], ",", "None", ",", " ", 
     RowBox[{"3", " ", 
      SuperscriptBox["10", "6"]}], 
     RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", ",", "200", 
     RowBox[{"(*", "kg", "*)"}], ",", 
     "\"\<Li et al, 2020; changing \!\(\*SubscriptBox[\(\[Gamma]\), \
\(R\)]\)\>\"", ",", "None", 
     RowBox[{"(*", 
      RowBox[{"see", " ", "\[Gamma]RList"}], "*)"}], ",", 
     RowBox[{"2", "\[Pi]", " ", "5000"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "\[Pi]", " ", "0.5", " ", 
      SuperscriptBox["10", "3"]}], ",", 
     RowBox[{"2", "\[Pi]", " ", "5.", " ", 
      SuperscriptBox["10", "3"]}], ",", 
     RowBox[{"2", "\[Pi]", " ", "50.", " ", 
      SuperscriptBox["10", "3"]}]}], "}"}], ",", "\[IndentingNewLine]", 
   "valsListHeld", ",", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Red", ",", 
     RowBox[{"{", 
      RowBox[{"Cyan", ",", "Dashed"}], "}"}], ",", "Magenta"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SuperscriptBox["10", "5"]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<nIS_sigRO_tolerance_Tlb.pdf\>\"", ",", "%"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.841276889327838*^9, {3.842567906191904*^9, 
   3.842567909310014*^9}},ExpressionUUID->"a2211593-81bb-4d73-a788-\
3d0dcb3b2efc"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$42123#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$42123#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJwVkmk41HsfhyVGlrJPzJCZMTMeDpGGDPX/fdGRLFkiTpvUU4gYTEihosaS
pXJStkRHRZEi0ShEOpqEsiRj7CFji7KEp+fFfX2u+7o+L2/y0QDn46IiIiLx
v/n/Zi6mfc9VycFYznH9l6IcwSZC6Yc75xHagWfHliBHiFz7etSRU4Uu/dhw
mLfqADet0gfsOO9RWl15B1/EAWgjl3ptOHz01Y4+tlvMHvIfEPWM6yfQwGn2
XyLV1vCgdc/57C8/UGrzhCgIdkK+6fxeov4KCoj9XB+7yxzOv3fXapBbC8lJ
FlzGFTPY+sFDZ9MbHCxfUFho7TQC5fcTMNUoBWdlr8jdMjcAKZEgmVXuBuDb
rbZpJNIg/XHajTpDWfg488IQt50K2p5VpPj7stAyctdPd5QCVM+YdCkbOeg7
XOe03ZwEfsw0D2GMHJhZlDd871aHUvkCavMrORDlRsd67yCCZe2Hor+N5MGj
XrJmGwUPewhEGuu0PGRORDZ9i1AE96ATGTZl8pAW86g3elEOjjWWyNPm5CGw
mdZnC+vBn7LMWWUoQF6qd3nH+DoIC7de+cxWAKnK4QdMCXGIbr3OLi1VAJFj
N79/S1sDSTqCsaRZBTAIGPd6snMZ3byo4+nDUARJ1oqVzu559CKquVicpQh1
tzwcm/1nUc+5kJU7hYpQpbXVPNV6Gq0JV7PHvioCI20gJTdaiKihtRldFCUY
nrQuiYsdRbvY3mMhh5WAGzQ6lR08jE4GbmAqpivBch2BGEkcRIn+pZziNiXQ
rd4ranygHz323d9uK68MRs3XbMQV+xD1ocPUC1tliG3fNWSv24tuju+U0r2s
DKveRn2n8QIko2dKzaxWhoOK4Wpk1IMunNLHZJaUYVGQe12zgo9+PKK6nzPC
A+kNKLez+OjkhGrQeAAekOtQoKMbH/Vslr1ysAAPL7yDhWGefOQcIJbPG8SD
QtP2eNPfXcXpGwYyqBvhbXUS8+NbPqqe9NieeWwjRAn8G3w0etB8caKEWN5G
mAwLszSM7UH6rBetvv0b4f2dxfGFNQJ0wmA06yNZBcwl2UH8KwKUPYX3MfNU
gY7TER/XK/eitsc7GXk5KtBpahQi4t+LZAKDVqV6VeBIeXLZbGsvOti+mMsg
qsLD57bo544+VGgWbXV4nyqw028frynvQ4s50mOcq6rQIp0X62jZj2xwqYkl
PFX49PV2hO9gP0r3VdvyRYIAt9XhJ//2ABprvvtJzJIAr8V9l3lnB5GpsV7Y
5kgCTAhLruufH0JxGWVE9woCeJEtXp4rH0aZ50NYZxYI4Gn4Za7aeQQVHd9W
n84kQuOtCdUm5zFUbTOvyj1DBF6PVtvBrnH0Ub/Cn19BhMKQ5BOt66fQsFL4
65UFIix85JwwM5hB8wumKiRTNZizvTEhIT2HpARLfubhatB9qiokVjiP1Ou4
NUcr1WD5ydKvKFhB58d5fW4LanAmvoCRlykKg0r8NfYm6iC8YvO5pQYH1juE
ZItQdbi2obzWVl4KHh5fNt/2TB3ijev+TYyUBLmk9Ud1537/b7vlDVmLAfuZ
+kUyYxOw7QLuoXdLqLNHLxcfvAk6yH/J2A1OIzMJrFb6ySbQF+rj9nwZRs8+
3a+sHd8Ej61Pb9x9oQcZ5io+PaOlAf4x91NjX31CRQGRhQZHNQBaV574NPCQ
zo7RvK+ZGjDQ9WCm2akO5Uu5ZGZ3aEDkTWjcS69C8n4ejTqSJHBwmuATDMvQ
h9ZUq8t0EhS4p2Yv6xejRGZjbZ8lCbZ+4xpo6N1Dur0ZGyuOkWC6Z0U7Yy4H
8S6f8kuJJkG0ZTVuYt0t5KeHarzySGDLZgs2ZV1D0p/k8Og1CQyirWlHuhJQ
QXj/SfwACSJK8Ljk7zHIhlz6SihKBiML5i+/gig01nBJqZ5Chg1bzdwDcGEo
zt/NJ9OCDPsCK2sv2AShUq99BS5HyBBJwu8xZfmh3iOu32QiydB2wPh16H9O
IJn9Lrr1GWSovIdF5th5IpO9e09FVJCBNRutaSF7AP3XzrnIqOO3z/3cxjR0
RSl/Ok0KZ8lwp23PkkWOI+Jijgb5ChQQN5FUNFC3QV+3OQQeNqBAN7dXq4Kz
E82yxuKvOVLgJ4M3OV2IkGjBpbtvWBQQhKxQVNgmSHaA9HIxhQIHM5koasgQ
qalxOzaXUIBYFvzpO1MPabu6TR9toYCTsymxKYuOjJNmpNKmKZAuwViaukhG
lg2J1HfymuAVYXQ2l0xEjiLa2OoWTSjsqhSs4JQR7ovvjiyn3x4abDR+RA5x
y4q2mwVqgkMZQUbxsiQKSpk2+5yiCWpiV/tKB9ciLV+GWehjTWCL2/9xV2wV
6/4z1FS5WRMYomKxogbz2DVSJfPppCZwXdppfvwZzHrpl4mTLBV47zjw1F+I
rbQhk8nNVPiewPsj68cwBmsfa/rbUSE5wzuYbNKPXTQgyQp9qJDIvrwwNNqN
1R1KWfTlUKHa+on+yHQ7hksQGR67S4WS9TznKqNWzPo5q8Wnlgq7hFerREZ4
WPxQL3dEQIVTcVc7X06/wXgKTve9lqnwofxiQrJxLbYBaq4PE2hgpnSInj/G
xQwfvXfrM6VBdmvn1qLoZ5groYvYvZ8G/+7CJzRxSrAwzrCgPZwGrjhysaR9
IZY5O5PXkk4Dx5jE+IMW/2CvPFe9eJU0uLFu7SoxKQfrb5LWbeiiwQLloljX
21sYbrvKVM0iDQzD/x5NUErFtB9QS7kEOnhlzjS9s0rGplyme01M6OD3zW5b
THss9lzk5foyVzqcYwrC7lREY+cfxptuCaZD1iHNlyEuUZi1u5vXoxQ6xGzp
t83rC8PkxKip2kV0+DEiMZJfG4x1Fk9V//OODvMzGT6yxwKwnANVQvIoHUSt
VNx8hd6Yl0Q8IRunBfTQsWgq7xj2P1k76nw=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$42123#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1: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
A5FLwfMpEgfxfwHhg9j2
              "]]}, 
            Annotation[#, "Charting`Private`Tag$42123#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {0.,
             66.04810664931689}}, {{4.797052277070928*^-7, 11.512924985265}, {
            0., 66.04810664931689}}}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, Epilog -> 
         InsetBox[
           FormBox[
            StyleBox[
             InterpretationBox[
             "\"\\!\\(\\*FractionBox[SubscriptBox[\\(\[Gamma]\\), \\(R\\)], \
\\(2  \[Pi]\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"0.5\\\\\\\"\\\", \
TraditionalForm]\\) kHz\"", 
              StringForm[
              "\!\(\*FractionBox[SubscriptBox[\(\[Gamma]\), \(R\)], \(2  \
\[Pi]\)]\)=`` kHz", 
               NumberForm[0.5]], Editable -> False], 10, FontFamily -> 
             "Monospace", StripOnInput -> False], TraditionalForm], 
           Scaled[{0.8, 0.83}], Background -> RGBColor[0.9, 0.9, 0.9]], 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$43309#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
4mCoY21gN/t/NOseXQ==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$43309#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
5iOUqJAtqA7z+yItcZmdtP8BiyEkSQ==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$43309#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1: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
2MX5H9DZNpU=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$43309#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {0.,
             66.09801252287818}}, {{4.797052277070928*^-7, 11.512924985265}, {
            0., 66.09801252287818}}}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, Epilog -> 
         InsetBox[
           FormBox[
            StyleBox[
             InterpretationBox[
             
             "\"\\!\\(\\*FractionBox[SubscriptBox[\\(\[Gamma]\\), \\(R\\)], \
\\(2  \[Pi]\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"5.\\\\\\\"\\\", \
TraditionalForm]\\) kHz\"", 
              StringForm[
              "\!\(\*FractionBox[SubscriptBox[\(\[Gamma]\), \(R\)], \(2  \
\[Pi]\)]\)=`` kHz", 
               NumberForm[5.]], Editable -> False], 10, FontFamily -> 
             "Monospace", StripOnInput -> False], TraditionalForm], 
           Scaled[{0.8, 0.83}], Background -> RGBColor[0.9, 0.9, 0.9]], 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1:eJxFy3k01HsfB/BpI0zMGAYzlplpyiE7IeP3+37QlbRgiNEtc1FRRkyJ0iVR
KT08ui1kO6J07csdXUJZspxSZGnTZCLViBrVLUbxPPee58n7nPd5n9cfb2ZQ
BHf3YgKBEP/f/r058oxPBdr5OKXonrEa1wvc4zS+8JLLkeWE3EtG9oL4JW1S
z+QmJEvQjHn40BMyXbNGNyffR+VB1JvnvTxh1duTEvdkMWry3WRrUbAViorp
prbt79G3i9XPPm10h+K+rQl5Q19QxSWjLaEcVyhymPamm8+hTAbdCpycIeE+
z7CTtAQkNBH3xAgHrHv4xvodCjBZnJ3PFluD5v33ILurDPPpy53muldDlDWf
ZrVRBZYpFWsn9rOh73LPp4OdKnBiLPqc5hgL0vdUFX1tIwJJ0FBIDNGH992M
hHXOK6Cd5ysXTtBgi/U5/6PNKyC3Rat8Ok8LlAkHiPONquC6i6wxeJUMWVUZ
l+5YqUHS5grT7ztUwSiwiZHyuxoMveLzhKNK8Py0cNBQjQTbuQdfYZJlwA48
kaXsToK5RTtrjnkvBsG6DP7kCRIIra6eFUTNIRG5hN17mwT+bMoRtt4M+iZt
lNbISSAae3td6dxn5NLaU3FxLRnWNLzkShtlaCuNviryEBkqjxOYBdnjiHdg
T7Z7LRmIZPYhvuIYCr5bTV71FxliYj13nTwjQftZ35PnbdSh4opZeMvYU3Q4
1m3uaZQ6oIOemcHWAyip73yUSKQOSWpJJrahPSjNeHg87bM68Md8vCS+XSgz
0Thwrw0FQpdmHKp70IoajvVWLoukQIr4M/tAfBN68Wv03JVSCiTyPdIs1P9E
i2J1t+BvKBCcVit8R6hB7JjW7GcsDSDSA17EK5ahDVGh49EBGlCQV9fBb7uG
9glV11GyNOCxDj3V9lk+St0vSq4c1ADO6kuHeApZqCps+6NNZE2YXR/46Ozy
C4hd5iFr2KQJ5Up1L+BNGsqcWK9sckoT3ianffVtSUZEUwd2TrMmzDQFOt2z
TETHw81x4qwmGN537fRpO4q+lLN5v66lwoNPFvY07UNo33udAxMRVIjp8w5s
kEagF2Zq/9pRQoU/G9NkcoVQxI1YWtT9igoObi0ZuoQgdMbcSmjD1oIn/Oca
HKPtqPkD3zEnWAuSBDaaG0a5aLoyVXFpoRYIa8qutVM3IfPIhr6wES2Yrhma
X+LugvZYSHP7mdpgedR+OPwnDsqTUfdyArVhZL5LfJ5ljQar1tsU5mtDWcx3
D/8iY0QUHphXlmgDL6l4zeV9LLTjkbzAhq4DrRNyN1OpDirlJLkG+OqAr6Ay
dyddHcnzVcaTz+lAQ8Bgykq2EnJXuJBa3a0DA0v8jU77LUJZYbqWQ4o0+P7N
zdqu4ys+3nt1YKkLDT70ntI9YiXDHWxND5vF00D5suX5LtkYfia7ls6rp8FT
yWl5faoYz0mIjjwyQwOz0rt1gSv78Yrddu1Z6+gwvINY2VvYhTe7T+s0HqED
0ce268vZ23i/ef1+cT0dxKODx4laIvy1Rmzb3AwdLnZl5sxFF+PTMw7aDAdd
CH/mtnE1OR9XHp4VOMXqgrhw6BrL8gKud6exJeimLrwmzZZKNpzBEya6X/rN
6MLIdULMvofH8Fca4kVb7PWAZ7PcMPLLQdwNm2Q6x+iBwsDGEJXZULxs93cn
uxt6ICp9J/7DjI+T0lYEmfylB5mas2VqYd541A29RKaNPtwxwDglLDf8yQvT
AupBfaBzx3pPTWE4RxFvVanRhxvXM5DtWSv8xsDvN1sn9MFa9V1KZpUhblVA
+eOIoQFcb2toC3bQxysi4kstggzgY1zilVsuFNwYkxa+yTGAS+MtbuPJy/Ei
ZZ+cvMcGEPc6N06wdh4jC/h3jZUYEDeV8+3b4Cesp++C66nVDKCO6u2kWkmx
1HV3W1+6MOAJrUvqMjuMmUiyteqDGeDvx9258UQ/1n0qXJCexIBZVUFn9f1O
TGCKWkIKGYDWfDx8ckkTpjJAoqI2BqRQOrxMS6uxktiRfdRRBpg//VBx5/g1
zJ0puj25mAlBbweJc8ZZ2HjnSY12FhOK+3ckLev5N3Zmv9/eHGcm7OQ/t8/l
JmGiEN8Sn1+YEM5wxfY6H8Ykv2x7R4xngnGLWvdkzH6MuN3HpD2bCY4PgjwP
k4Mxe2/v8Lh6JvgITDvEI37Yrs3cirWPmVDUWWd3cWgLlv6T14fJz0wwr22O
yLnpjDXinhZF6ixAJW0Br/zssDd2HsIACxYcXebRm+1pin2OHE/5zZMFBh72
kyZ8Jra45OTVjkgWLPcfTlE/S8HURhm35OksqIseCG5TVcZ0dRsfm1Wz4OY/
ljsabfObCnrIAsN//lOOtmkflTOm/u+Xji6dqex75JVA+F88CUb4vOWCFYbC
sFyvBTfWVjhyhAs2DLPhxFQteG4Q2X8wY/+wKrScf01b9cNGxWxRI231D8t8
piT29guuI9xaUbttwW48v5Dy9AWTlrIvGFUs+EmlrPnavQXn/9w0yZQuOEQx
hZanYPjD/wEUz0Jw
              "]]}, 
            Annotation[#, "Charting`Private`Tag$43481#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1:eJwVynk8FHgDx/EhUYgZxjVD5nQ9RJIzft9oYykh4qlNoUise4lVK8XIprWl
FJJybFKO6HBUjgZJ7q1NWVdbkStdbs8+f3xe738+bO9gl4OiFAol5d/+b9Zc
+qdryjlWpYa5pwUWLrA/Sv/qIbhFmH2XXh6ad8axFQ0jToIHRJInq21f7YyL
WzOGtwmeEV1KXYe0hTP47xMG7AV9ROg07njW3AkFhUw9Y+EEIRO+ftOq21DY
5RiX/eorYTTbcY/J2KHAfGYnU3+J6AQo+ibStyDumYdmE3UFvj1Y4l84RbCh
fZ/O2kZxrO5LG+XFm0Dh2QSmWiTRERN73OWVHiI27GMYfi+FwYiH33949h90
XWr/FN4khdRIk80/NWoj1be04FuDNE4ftM8vb+djopUVZ2a9BkmdHrkRb7jY
vuH3//5cuwbDDlPJOyU4kKSESS/XyEDugMOnaQk1ZJSmX3hsKAuRhu1zY8sq
0PZ6wEq+LgtGT4XXUS0lvE4K/VNTloq0LPeL7QI6eF4nMyTtqWgzsRKe5soh
0Cx93/hJKioTm/oDKVRU0G7wOh5R4afUXZ1jI42FkZqR23NU2Gr+lvRBbjVs
6tuLz2+kQcv9cs+dIHE4Mpj8kJ9oiL30MpjoisEjzDfT/g4NbG7C0y/xovBp
KaPxv9CQ/JFRL3tIBEGcRcGykRzMBeLRdu0UHImxW3oZIQffIPtLMjcpONF1
LqKiQg5pI9WZYdMUnNHpHz3zWQ75cWORwnQRXIzX8fI3kkfVYlr62FlRVP/S
UbIyRB6JvcGBWx+vwN+xkUtXi+SRWyPO1Nu4EiIxqtut3snDwCHbZ3FQHLyo
+sxeDh2+CwqW8s2rYBtxaDTSk46r6nPv/vhHEodDZczkM+iI9vthT7nZGpQG
7H7uQFPATzJf16tZ08C7uWOq2kEBxeXe2xTuyuHi2BZJ3UQF1O3tclL4jg5p
PXNeVq0CZpmxh2cmFXD8R30r6XkF5JfQQ4bvKeHrLZ5H7EZFOPu8P+WUrYLD
EyphY8GKcJQY71fPZ8IlWKyg9Y0iqrxPvpiVYeGUvmGoEU8JP/vfbYMfG7WT
+zZl+Sih7HOGcKaXg5mSFAmxXCXE268qlw3iQT+kuitgSAm+RfW2BXwN+BqM
XO5mK6PzrElf3CotZE8p+lt4KUMm55rbLXUd/Fm6xSg3RxmVJ8pnoqN0IR0a
tiw5oIyXF5MfDLH08cPzuWtGTBWk/MbYEr9ogCKLE1s9d6ngplrn4R35hpjL
kRoV/K6CG32ZOXbpRrAXT0spa1WBZYJr445XxsgIUF3/SoKBx/2brDUtzDDa
kdcjZsPAxP3zhwqumsPcWO/IumMM3DcttNAsM8OpzDtMj0oGnlhp+YQeNEFW
XGRI9CwDRVN9k5uGjVB80ESYYcbEr0mle/MeGqLWfkalJpqJxivKanLTBujW
rwzqq2Si98prAa9nHd7SYxqWZpmYDn6UMqSri5lZc2WWuSoslkyvCZ9rQ7J/
PnBzjCqGVVY+eVerCbXHNXXeVargDbMdZfv5iBtrHXSfVUVz3dZvY/o8vKH3
iWw3VcPuLflnhnI5sLMcZ1tHqcFxMqmbbszGzYOLm03uqqGlr3YhSagO6pk1
3rpf1PDhfFuPpKMaIu6qxbON1qJtObaQLsKEhYRVvdTttSix7r3a+Zci7vZc
r6ofW4uVzUz5FCUFGF6TL4/WVEeWi7V3e6g8ioOPFRl4qyO/SzTB6C0NOpYj
ue+y1LGskNx6MpyKAknXrOwX6lC1au50Wi8DWuC+Fp3VLCwkUt+ZF0ohxayl
ftCGhZaYJ/n+DAnoDmQqVfqw8LBozuPyP2JoTfwxMPUEC0quCcuFfaII1CN1
frksdP5STwVFBFI9VEXSwMK9HfxzSheWyI2YocOKwyyErGBkBETNE3t2xaNx
UTZG970wfHplhow2JdCFHDa0XPT8kyW/klNB7v5Z1mwIraclpco/kQq/XTdc
97Nh6nN8euO9j2Rgv9sH6WNs2PDfWDt0TxLp3a66wkw2RFkJgw0pY8R0584f
j1ayMbEQN6aTPkIObHMp3viCDc+y/Yrckbck9TvnyfHPbNCcGqquHX1Daqyc
DArkOIg6OaIy4zhE3pnsCPU04KBE5/6Tp+4D5HPIaPJZJw4kFvkdA3+/JqI3
EvIaQzi47nakdlX0SyI7zHo4l8pBdCedtiX8OVFVrXmxroyDzfRO4/KGbqLt
5v7Ru5MDsQ1it929OonxmWnJ9I8cKFPKDsgmtRGbphTeUxoXWxv799c1txAn
irbV8nouulVFvoRFNRHxVwGWl525KGo9Fil+/jGpuVO8ySKUC5vf6rSGxetJ
WOpHi5epXAjGVjc1Cx4RzQAji6hSLvLutQluC6rJ6++izBU6uLA1U7d5vXSP
nGVVmZVPcqHnuvn2uoEKYje/YOosy4Pvntj5OfXbZOlPYjq5jofG+Z7+Ir8S
ghWl3KBtPISNf0gT+heReAOW7Lg/DyYJi3/FD/xBHu9NnQsQ8HA63KFf+CiP
iP9KeTuax4NxYsqeooWrxO5+SKd/PQ9re6+MdDKukOR/Bmre9/PQ5KbVtbcr
g7TKOV/3W/z3Dz0Xr0JNJzKoO/eWwQdtw533ZcJzxPDWM/dBcz5sPe/zmm+m
EjdGL/P1bj4cJgatwleeJkcEb/ufx/AhkmeY6hUhIFmfp3M7M/gIKDIt8j1z
gjzyWvZrreJj9NUBqSXLODLUJqXb1MuH5aCnsKQ/hohvUp6qm+OjbbZQzJEf
SbQLeRU1DA10qBdrjemFkSnXjwOmphowkAtXCtoYRO5THq6546aBG562z2xX
+pO4m8nm68M1UDSs+GZ94QFi5+HudytVA8ry587+LepFqGK8NO1iDexaEr1g
OLmH/FUyVZv/VAMvsjXNv/XvIjl7HoyzRzSw6MQ9tbXEhfhJJDOyxTVRJjQO
Lgh3JP8DdFLhhg==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$43481#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
xkyu2tY6k/8ABufQFA==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$43481#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1: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
LQ==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$43481#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {0.,
             77.3835898002584}}, {{4.797052277070928*^-7, 11.512924985265}, {
            0., 77.3835898002584}}}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, Epilog -> 
         InsetBox[
           FormBox[
            StyleBox[
             InterpretationBox[
             "\"\\!\\(\\*FractionBox[SubscriptBox[\\(\[Gamma]\\), \\(R\\)], \
\\(2  \[Pi]\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"50.\\\\\\\"\\\", \
TraditionalForm]\\) kHz\"", 
              StringForm[
              "\!\(\*FractionBox[SubscriptBox[\(\[Gamma]\), \(R\)], \(2  \
\[Pi]\)]\)=`` kHz", 
               NumberForm[50.]], Editable -> False], 10, FontFamily -> 
             "Monospace", StripOnInput -> False], TraditionalForm], 
           Scaled[{0.8, 0.83}], Background -> RGBColor[0.9, 0.9, 0.9]], 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}]}, {
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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

              "]]}, Annotation[#, "Charting`Private`Tag$43192#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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

              "]]}, Annotation[#, "Charting`Private`Tag$43192#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
/gOo34UZ
              "]]}, Annotation[#, "Charting`Private`Tag$43192#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1:eJwV0nk41dkfB/ArW91K9uxLWYZHXepmafF9a3H1PUWRQkNRlEpcu5sMN7pT
DcmtmNsdYiIqUpYWtFiqX3uJMkUylSWMqYjkmu/vj/Oc5/XH55z3+zzHNCjc
M3gKi8WKY9b/d+n37C8FOqeds7z6TvNiaND7NUd8RKWU/bSVbF/GSfINvetE
ddRK/ouMPYxt3i+7IDC/Q21lzwoXMs5xlfy9RvSISknp+SxhLNywL/1o9HPK
PLhkVzXjq2lWJfHmrZRC/gtOC+PB6peNga1t1O0bc4q+MTbvSeukRe3U7Yqs
pUaxNJrYHaKXDZ2UROUavZZxnGlC3rTGLurIg0+RQsbWjppXljS+p346I0y4
wfiN+8XHYY0fKf/vT5ymxNHICKY/5jX2UBHszcXujF0SP0w8a+yjdr6xbTnD
+GtWspZCUz/V3b98UDGeRlGJ/jz7pkGqWPuuSxTjjK9NB2rWD1EddU8KPzB2
05QNvca/1OuZ4cuCE2jIc+0DfnA+UwNXVMO/ML7htfeBgfEXKlX/+M1jAhoJ
UUWOy1S+Ui0hus0u+2hwxR2F/hNfqZ6ogDDFRKb/ZW2NpP5hqt8hnd/BuOS5
e3Lu6xFqu+rmd4/30yiebNBTufONeh/rHNicxNjGqWp/+SiV1zCa+vkXxr5l
HgOSMarbyCRhfgrjg3P7fk77TsWtrRMcEjKuyEl9GD5OzWfdfaaYSuNs50zj
pX4/qBX8hPuFaUzfxaNe+hwZ9U0h9orvIRqXQjwqQudNUv6CyoP5R2gErPaa
9kaLha2+yhcNM2hsfytzlD/BQrZ52MGnmTR2xZzbaa0ph21Gg1q1YhoR0zfm
rBfLIYjnye46SSMmX+5evPoUbDTZXLRCQiP5kY/lXVV52NsPHqnNp1Fdek05
UiQPRcrD+rdCGgPpej0GMnn8YlA0fLSEhp/7m+LITwowDPFp5VymsfDJFmuj
O0rw5obH5jXRGCqzC7vqqoz6XJvKDQ9oXMiQL/e8qwylV0lBC5/RMHM/u0h0
byrSDmWo+LfT0Ho0iKH7bDSftJd+GqHBZkXOmKxVwdRY13tLrQkk5dknGxfM
wilLnzXKtgRWgXUmh4tnIVPZqrlmEYFZYKqETati1eP+kRYQ7HHK3jKQqoqF
17NcF7kSVKqdM3t6UxU2/8ubHkkIVtQ/KTuxSA1vg/yr470J3PX0zSNi1CDz
HA4r8CPwiQw5RVepIdO71TN7C8HeOROiSa46RIJeQdtOgniBm6wtWh1c/k/e
c8MIDjwXR1dWqkO4J+YPOz5BjtA6MJSrgdG2tmhJPEHNL08vKkZoYDJqm/jG
PoKOxFhZ/nkNdIlemZcnEcgJDNY6d2ugReoqjEhh+sTVn/prjib8Ej94yaUS
8KJ39sUGaEK+OPrY9oMEu/gqThoSTQjT6iKlvxKU7/ZrJWpaIGnX5Y//xsxf
8BiqIVqw3WbOX5fB5OlfybY5qAU7KxePgaMEM+YtNpPe0sJUTtiGsGMEKWEc
5xnjWhBblDs3ZxGMlJr5JC7Sxu/GXo9NjzP3DepG9odr40NVwe3NJwg8wxWK
Hr7XRlWypFyaTXCIs4DPNZuNdtttPjdzCG79s2WpdNtsiEUdOa2/E3Aiap7v
7pqNNYJMpaFTBCG2vX80m+qgwSEuf1RKkDukHbokUAeTNeqlU3KZfPzISXan
DjID7WZbnib4ufV7AVdfFyfWL49ZmE9wfskB14CNunCrLMynCwhopePplx7q
oj5vbWXeGea/7Dawe62shzIV0+C3hQR9T8+8UFihB4c7VV9tzjJ5T1Xp+1zT
Q5bfptCeEgJpcmxEwpgeJHb1otDzBGXBDk0SJ33cdPUd7bjA9KFHdWsT9OF0
id+1sIygmXNtb/s1fVhMH69afZHgo6agQTamjxhMSIYZj44t1jFZbIDeDat2
yBiz347vcREYYMLWxN+AsWFj7e2g6wZI51Wk/GDOT+5/+G7TmAGkPT5FAUye
95rtcmsdDTFknrhv+E8Ct2UDpsvjDJFt1P1YzLzXheAJF4dqQ3B/PdxtKyZQ
zZgZZDNsiKMhc9r7RATR1YZCU64RHBPP/C0TELzqmFegHWWErd6jW2v2ECxR
dq6fftkIWVGFVXx/guoXxdfr+41g7JE3nOpOsKBAoyLB0hirOJ+VLCkC62W9
f3ZLjXHn0l+hpcYE6U7369+tMAGEFZZanTQO7d0UKl1uivvq/dP3+dLodvDg
B9jOgcPT8G/n3q7GOpaV86TdXIyPh83O8V8NWQvl+M98M1hNfGed63CDCm6L
P+qZ4+WCGSMHdrrBqsSsslbPAmnzNnFEPTwMbfi309HRAtxjoWN323i4yrox
s8rbAj2Gt7qmPuDBzWfTjtJMxmospSOlPKgqmB23KrNA9tn5ix/m8vDq4tCt
wgcWSNqiI5yZycPpzXUDpr0WiJDLee2ewsMO5cN6uUqWECs2rsyM5OE/y2NJ
1w==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$43192#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, 46.89502772876144}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {
            46.89502772876144, 56.42609464423868}}, {{4.797052277070928*^-7, 
            11.512924985265}, {46.89502772876144, 56.42609464423868}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 46.89502772876144}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$43364#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$43364#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$43364#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1: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
ajg=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$43364#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, 48.033363531284984`}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {
            48.033363531284984`, 56.384089916041745`}}, {{
            4.797052277070928*^-7, 11.512924985265}, {48.033363531284984`, 
            56.384089916041745`}}}}, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 48.033363531284984`}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
IEHhrStPZcL/AeU/g10=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$43536#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
8ZuU5Tg6/B+4HQUf
              "]]}, 
            Annotation[#, "Charting`Private`Tag$43536#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
Qg==
              "]]}, Annotation[#, "Charting`Private`Tag$43536#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1: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
Wz3amQ==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$43536#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, 48.550087904979854`}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{4.797052277070928*^-7, 11.512924985265}, {
            48.550087904979854`, 56.95504914067233}}, {{4.797052277070928*^-7,
             11.512924985265}, {48.550087904979854`, 56.95504914067233}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 48.550087904979854`}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {1, 1}}, ImageSize -> 
         250, Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}]}, {
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
8/DG92ddCuDvK+wfKeFPh5//D4F/qoQ=
          "], {{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              
              LineBox[{1, 84, 46, 26, 2, 3, 85, 47, 27, 104, 66, 4, 86, 48, 
               122, 28, 105, 67, 137, 5, 87, 49, 123, 29, 106, 68, 138, 6, 88,
                50, 124, 30, 107, 69, 139, 7, 89, 51, 125, 31, 108, 70, 140, 
               8, 90, 52, 126, 32, 109, 71, 141, 9, 91, 53, 33, 110, 72, 10, 
               92, 54, 127, 34, 111, 73, 142, 11, 93, 55, 128, 35, 112, 74, 
               143, 12, 94, 56, 129, 36, 113, 75, 144, 13, 95, 57, 130, 37, 
               114, 76, 145, 14, 96, 58, 131, 38, 115, 77, 146, 15, 97, 59, 
               132, 39, 116, 78, 147, 16, 98, 60, 133, 40, 117, 79, 148, 17, 
               99, 61, 134, 41, 118, 80, 149, 18, 100, 62, 135, 42, 119, 81, 
               150, 19, 101, 63, 136, 43, 120, 82, 20, 102, 64, 44, 21, 22, 
               23, 24, 103, 65, 45, 121, 83, 151, 25}]}, 
             Annotation[#, "Charting`Private`Tag$43250#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              
              LineBox[{152, 211, 189, 177, 153, 154, 155, 156, 157, 158, 159, 
               160, 212, 190, 178, 223, 201, 161, 213, 191, 233, 179, 224, 
               202, 239, 162, 214, 192, 234, 180, 225, 203, 240, 163, 215, 
               193, 235, 181, 226, 204, 164, 216, 194, 182, 227, 205, 241, 
               165, 217, 195, 236, 183, 228, 206, 242, 166, 218, 196, 237, 
               184, 229, 207, 243, 167, 219, 197, 238, 185, 230, 208, 244, 
               168, 220, 198, 186, 231, 209, 169, 221, 199, 187, 170, 171, 
               172, 173, 174, 175, 222, 200, 188, 232, 210, 245, 176}]}, 
             Annotation[#, "Charting`Private`Tag$43250#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 1, 1], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwVzVkzggEYBeCvrNmzSyRkS7IkW6KQPabb7vwA/r0lKk8Xz5w577wzJ/n2
UXsPBUFQ55NdZZ5RvvRvfmjwyx9NWuz5iTNGgXXa7vtygRuinLPBY2eIAxap
ME6RTZ4IkSPBLRNcsEWYQ5aY5JI0XeRJcscUJbZ5ppsjlrlnmjIZqvRwzAoP
zHDFDi/0csIqs/RxSoo5+okwwCBDDHPGGjGuyfLKCP9L3BjR
               "]]}, 
             Annotation[#, "Charting`Private`Tag$43250#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 1]], 
              LineBox[CompressedData["
1:eJwVztk2QgEAQNHrU/okl1SGJJQphcxzSEhIKWNU9Jt2D3ut83gi6Xy4PhIE
QYxRccM2K4SMMU6UCWLESXDLDqs0OGOSO3b5ZI0m53SZosoeX+R4oUSPae7Z
p8NwrsUFfWaocUCeNpckeeCQAq9cMcsjR3yzwRtlfknxxDE/bPLONX/MUeeE
LdLMs8AiGbIs8cwpRT6oMGCZf0i3LIY=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$43250#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Dashing[{0, Small, Small, Small}]], 
              
              LineBox[{435, 428, 433, 424, 429, 425, 430, 426, 434, 432, 
               436}]}, 
             Annotation[#, "Charting`Private`Tag$43250#5"]& ]}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, -55.95518941241704}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {All, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -45.312179141090056`}}, {{
            4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -45.312179141090056`}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, -55.95518941241704}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {All, 1}}, 
         ImageSize -> 250, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
e34n3ecZfAk+73LPYLFMBlz/HytUzvk=
          "], {{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              
              LineBox[{1, 76, 43, 26, 2, 3, 4, 5, 77, 44, 27, 93, 60, 6, 78, 
               45, 109, 28, 94, 61, 121, 7, 79, 46, 110, 29, 95, 62, 122, 8, 
               80, 47, 111, 30, 96, 63, 123, 9, 81, 48, 112, 31, 97, 64, 124, 
               10, 82, 49, 113, 32, 98, 65, 125, 11, 83, 50, 33, 99, 66, 12, 
               84, 51, 114, 34, 100, 67, 126, 13, 85, 52, 115, 35, 101, 68, 
               127, 14, 86, 53, 116, 36, 102, 69, 128, 15, 87, 54, 117, 37, 
               103, 70, 129, 16, 88, 55, 118, 38, 104, 71, 17, 89, 56, 119, 
               39, 105, 72, 130, 18, 90, 57, 120, 40, 106, 73, 131, 19, 91, 
               58, 41, 107, 74, 20, 21, 22, 23, 24, 92, 59, 42, 108, 75, 132, 
               25}]}, Annotation[#, "Charting`Private`Tag$43422#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              
              LineBox[{133, 196, 172, 158, 134, 135, 136, 137, 138, 139, 197, 
               173, 159, 210, 186, 140, 198, 174, 220, 160, 211, 187, 226, 
               141, 199, 175, 221, 161, 212, 188, 142, 200, 176, 162, 143, 
               144, 201, 177, 163, 213, 189, 145, 202, 178, 222, 164, 214, 
               190, 227, 146, 203, 179, 223, 165, 215, 191, 228, 147, 204, 
               180, 224, 166, 216, 192, 229, 148, 205, 181, 225, 167, 217, 
               193, 149, 206, 182, 168, 218, 194, 150, 207, 183, 169, 151, 
               208, 184, 170, 152, 153, 154, 155, 156, 209, 185, 171, 219, 
               195, 230, 157}]}, 
             Annotation[#, "Charting`Private`Tag$43422#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 1, 1], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwVyec+wmEcxuF/IjslK7tERPYmkpHXDqED4LBt2VtcXlyf7/P87lTl7OQ0
FARBhXMmfKL/By7kkiuuueGWrK2DEMsMcuc+qTF2qGOFIQ6o2qc0zi5hVhnm
3pbTTup58H9k2jtBA2uM8OQ+o10UibDOKIc82/PazR6NbJDiiBf7rPZQoolN
0pR5tc9pL/s0s8UYb7Z57aOFbTK8uy9oklY+/Be1nzY+/b/45ocaS+4DtFNg
nGN+bX+yQyRe
               "]]}, 
             Annotation[#, "Charting`Private`Tag$43422#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 1]], 
              LineBox[CompressedData["
1:eJwVzNk2QgEAQNHrU/qcpJChUjQoaeBGmTUQotGQ/233sNc6TydSCpOXG0EQ
xImKLk1KbBJjizgJtulxwSkjbtmhz3o2p8wnd+wyIGRBhS/uSfJCizP22OeV
K76pMuaBPw4Ycs0P50x4ZMkhb7T5pcaUJ1K806FOmgxHZMlxzAl5CnxwQ4MZ
z/xTZAWR1iOx
               "]]}, 
             Annotation[#, "Charting`Private`Tag$43422#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Dashing[{0, Small, Small, Small}]], 
              
              LineBox[{417, 410, 415, 406, 411, 407, 412, 408, 416, 414, 
               418}]}, 
             Annotation[#, "Charting`Private`Tag$43422#5"]& ]}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, -55.95518941241704}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {All, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -46.430397133463735`}}, {{
            4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -46.430397133463735`}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, -55.95518941241704}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {All, 1}}, 
         ImageSize -> 250, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
+nA9s57O1l0Sb3f6FMDvcVu7z0uehPF/A2GDl9g=
          "], {{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              
              LineBox[{1, 54, 36, 26, 2, 3, 4, 5, 6, 7, 8, 55, 37, 27, 64, 46,
                9, 56, 38, 72, 28, 65, 47, 77, 10, 57, 39, 73, 29, 66, 48, 78,
                11, 58, 40, 74, 30, 67, 49, 79, 12, 59, 41, 75, 31, 68, 50, 
               80, 13, 60, 42, 76, 32, 69, 51, 14, 61, 43, 33, 70, 52, 15, 62,
                44, 34, 16, 17, 18, 19, 20, 21, 22, 23, 24, 63, 45, 35, 71, 
               53, 81, 25}]}, 
             Annotation[#, "Charting`Private`Tag$43594#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              
              LineBox[{82, 133, 117, 107, 83, 84, 85, 86, 87, 88, 89, 134, 
               118, 108, 143, 127, 90, 135, 119, 149, 109, 144, 128, 152, 91, 
               136, 120, 150, 110, 145, 129, 153, 92, 137, 121, 151, 111, 146,
                130, 93, 138, 122, 112, 94, 95, 96, 97, 98, 139, 123, 113, 
               147, 131, 99, 140, 124, 114, 100, 141, 125, 115, 101, 102, 103,
                104, 105, 142, 126, 116, 148, 132, 154, 106}]}, 
             Annotation[#, "Charting`Private`Tag$43594#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 1, 1], 
               Dashing[{Small, Small}]], 
              
              LineBox[{155, 203, 189, 180, 156, 157, 158, 159, 160, 161, 162, 
               204, 190, 181, 212, 198, 163, 205, 191, 217, 182, 213, 199, 
               220, 164, 206, 192, 218, 183, 214, 200, 221, 165, 207, 193, 
               219, 184, 215, 201, 166, 208, 194, 185, 167, 168, 169, 170, 
               171, 209, 195, 186, 172, 210, 196, 187, 173, 174, 175, 176, 
               177, 178, 211, 197, 188, 216, 202, 222, 179}]}, 
             Annotation[#, "Charting`Private`Tag$43594#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 1]], 
              
              LineBox[{223, 267, 255, 248, 224, 225, 226, 227, 228, 229, 230, 
               268, 256, 249, 274, 262, 231, 269, 257, 279, 250, 275, 263, 
               282, 232, 270, 258, 280, 251, 276, 264, 283, 233, 271, 259, 
               281, 252, 277, 265, 234, 272, 260, 253, 235, 236, 237, 238, 
               239, 240, 241, 242, 243, 244, 245, 246, 273, 261, 254, 278, 
               266, 284, 247}]}, 
             Annotation[#, "Charting`Private`Tag$43594#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Dashing[{0, Small, Small, Small}]], 
              
              LineBox[{296, 289, 294, 285, 290, 286, 291, 287, 295, 293, 
               297}]}, 
             Annotation[#, "Charting`Private`Tag$43594#5"]& ]}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, -55.95518941241704}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{45, 7}, {All, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -46.279906262255544`}}, {{
            4.797052277070928*^-7, 
            11.512924985265}, {-55.95518941241704, -46.279906262255544`}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, -55.95518941241704}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{45, 7}, {All, 1}}, 
         ImageSize -> 250, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}]}}, AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"],
   "\"nondegenerate internal squeezing\\nparameters of Li et al, 2020; \
changing \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\)\"",TagBox[
    GridBox[{{"\"\"", "\"signal\"", "\"quantum noise\""}, {
      "\"sensitivity (NSR)\"", "\"transfer function\"", 
       "\"transfer function\""}, {
      "\"/ \\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) (log scale)\
\"", "\"/ [?] (log scale)\"", 
       "\"/ dB (20 \\!\\(\\*SubscriptBox[\\(log\\), \\(10\\)]\\))\""}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{3}}}], "Grid"],TagBox[
    GridBox[{{
      "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \[Pi]\
\\)]\\) / Hz (log scale)\""}, {
       FrameBox[
        TemplateBox[{
          StyleBox[
           InterpretationBox[
           "\"\[Chi]/\[Chi]Thr=0.  , \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
            StringForm[
            "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.  ", "100. ", "1000. ", "1000. ", "0.1 "], Editable -> 
            False], FontFamily -> "Monospace", StripOnInput -> False], 
          StyleBox[
           InterpretationBox[
           "\"\[Chi]/\[Chi]Thr=0.95, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
            StringForm[
            "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.95", "100. ", "1000. ", "1000. ", "0.1 "], Editable -> 
            False], FontFamily -> "Monospace", StripOnInput -> False], 
          StyleBox[
           InterpretationBox[
           "\"\[Chi]/\[Chi]Thr=0.95, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.01  , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
            StringForm[
            "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\(R\
\), \(PD\)]\)=``", "0.95", "100. ", "0.01  ", "1000. ", "0.1 "], Editable -> 
            False], FontFamily -> "Monospace", StripOnInput -> False], 
          StyleBox[
           InterpretationBox[
           "\"\[Chi]/\[Chi]Thr=0.95, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
            StringForm[
            "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\(R\
\), \(PD\)]\)=``", "0.95", "100. ", "0.1   ", "1000. ", "0.1 "], Editable -> 
            False], FontFamily -> "Monospace", StripOnInput -> False], 
          "\"5\[Cross]\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-25\\)]\\)\\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) target \
for 1\[Dash]4 kHz\""}, "LineLegend", DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 0, 1], Editable -> False, Selectable -> False],
                   ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                  ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 1], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"Directive", "[", "10", "]"}]}], ",", 
              RowBox[{"LegendMarkerSize", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"{", 
                    RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
         Editable -> True], FrameStyle -> Thickness[Tiny], StripOnInput -> 
        False]}}, AutoDelete -> False, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]},
  "Labeled",
  DisplayFunction->(GridBox[{{"", 
      ItemBox[#2, BaseStyle -> Directive[12, FontFamily -> "Calibri Light"], 
       DefaultBaseStyle -> "LabeledLabel"]}, {
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
       Directive[12, FontFamily -> "Calibri Light"], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#4, BaseStyle -> Directive[12, FontFamily -> "Calibri Light"], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left", ",", "Bottom"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"12", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"Calibri Light\""}]}], 
           "]"}]}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.841276919865004*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"45118f6f-97ee-45ab-a27b-8f8fb7b82b3e"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"lossless", " ", "nIS"}], ",", " ", 
    RowBox[{"to", " ", "compare", " ", "to", " ", 
     RowBox[{"Fig", ".", " ", "5"}], " ", "in", " ", "Li", " ", "et", " ", 
     "al"}], ",", " ", "2020"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"valsListHeld", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "0", ",", "pumpPhase0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{"0", ",", "0", ",", "0", ",", "False"}], "]"}], "]"}]}], 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"calculated", " ", "for", " ", "symSRM"}], "=", "True"}], 
          "*)"}], ",", "pumpPhase0", ",", "0", ",", "0", ",", "0", ",", "0", 
         ",", "True", ",", "False", ",", "False"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plot\[Gamma]RGrid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2.", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], 
       RowBox[{"(*", "m", "*)"}], ",", 
       RowBox[{"4.", " ", 
        SuperscriptBox["10", "3"]}], 
       RowBox[{"(*", "m", "*)"}], ",", "None", ",", " ", 
       RowBox[{"3", " ", 
        SuperscriptBox["10", "6"]}], 
       RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", ",", "200", 
       RowBox[{"(*", "kg", "*)"}], ",", 
       "\"\<Li et al, 2020; changing \!\(\*SubscriptBox[\(\[Gamma]\), \
\(R\)]\)\>\"", ",", "None", 
       RowBox[{"(*", 
        RowBox[{"see", " ", "\[Gamma]RList"}], "*)"}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5000"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "0.5", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5.", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "50.", " ", 
        SuperscriptBox["10", "3"]}]}], "}"}], ",", "\[IndentingNewLine]", 
     "valsListHeld", ",", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"{", 
        RowBox[{"Magenta", ",", "Dashed"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       SuperscriptBox["10", "5"]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.839371790045991*^9, 3.839371799230234*^9}, {
   3.839372055220079*^9, 3.839372069625834*^9}, {3.839373004673386*^9, 
   3.8393730347533283`*^9}, {3.8393730762524853`*^9, 
   3.8393731071364403`*^9}, {3.839373375099308*^9, 3.8393733815647383`*^9}, {
   3.839373415525756*^9, 3.839373445267456*^9}, {3.839373484964157*^9, 
   3.839373497773633*^9}, {3.8393735428366623`*^9, 3.8393735480609617`*^9}, {
   3.839373951630006*^9, 3.83937395278825*^9}, {3.839374762367127*^9, 
   3.839374765197566*^9}, {3.839444835049799*^9, 3.839444835252242*^9}, {
   3.839445726865794*^9, 3.839445738954919*^9}, {3.8394490156207314`*^9, 
   3.8394490236258373`*^9}, {3.839449178256583*^9, 3.839449229345934*^9}, {
   3.8394492898266363`*^9, 3.839449304674513*^9}, 3.8394493441479073`*^9, {
   3.839449379187839*^9, 3.8394493984607363`*^9}, {3.8394614461596746`*^9, 
   3.839461470862554*^9}, {3.8394637231945963`*^9, 3.8394637511406527`*^9}},
 CellLabel->
  "In[611]:=",ExpressionUUID->"99ab4c44-622c-4095-a02f-1c9cf2c691bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"comparing", " ", "nIS", " ", "to", " ", "sWLC"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"single", "-", 
     RowBox[{"mode", " ", "detector"}]}], ",", " ", 
    RowBox[{
     RowBox[{"i", ".", "e", ".", " ", "no"}], " ", "SRC"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ASDShConwRP", "[", 
     RowBox[{
      RowBox[{"\[CapitalOmega]0_", "?", "NumericQ"}], ",", 
      RowBox[{"Tla_", "?", "NumericQ"}], ",", 
      RowBox[{"Rpd0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"\[Gamma]a", "+", "\[Gamma]R"}], ")"}], " ", 
          SuperscriptBox["\[Rho]RP", "2"]}], 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Gamma]a", "+", "\[Gamma]R"}], ")"}], "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Gamma]a", "+", "\[Gamma]R"}], ")"}], "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", "\[Gamma]R"}], "-", 
          RowBox[{"4", " ", "Rpd", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", "\[Gamma]R"}]}]]}], "]"}], 
      "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotSMConwRP", "[", 
     RowBox[{"valsList_", ",", 
      RowBox[{"plotLabel_:", "None"}], ",", 
      RowBox[{"plotStyle_:", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"10", ",", "5000"}], "}"}]}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmin", ",", "fmax"}], "}"}], "=", "fRange"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"LogLogPlot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["2", 
              RowBox[{"1", "/", "2"}]], 
             RowBox[{"ASDShConwRP", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", "0", ",", "0"}], 
              "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              SuperscriptBox["2", 
               RowBox[{"1", "/", "2"}]], 
              RowBox[{"ASDShwRP", "@@", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
                 RowBox[{"valsList", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}]}], 
          "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "\"\<single-mode conventional detector\>\"", "}"}], 
             ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"legendStylerShort", "[", 
                RowBox[{"valsList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}]}],
             "]"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "10", "]"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"q0", ",", "r0"}], "}"}], "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"plotStyle", "\[NotEqual]", 
               RowBox[{"{", "}"}]}], ",", 
              RowBox[{"QuotientRemainder", "[", 
               RowBox[{
                RowBox[{"Length", "[", "valsList", "]"}], ",", 
                RowBox[{"Length", "[", "plotStyle", "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Directive", "[", 
               RowBox[{"Green", ",", "Dashed"}], "]"}], "}"}], ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{"plotStyle", ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "q0"}], "}"}]}], "]"}], ",", 
               "1"}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "r0"}], "}"}]}], "]"}]}], "]"}]}],
           ")"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"fmin", ",", "fmax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "25"}]], ",", 
             RowBox[{"5", " ", 
              SuperscriptBox["10", 
               RowBox[{"-", "23"}]]}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "->", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SuperscriptBox[\(2\), \(\(1/2\)\(\\\ \)\)]\)strain \
sensitivity (NSR)\\n/ \!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) (log \
scale)\>\"", ","}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ",", 
             RowBox[{
             "\"\<nondegenerate internal squeezing\\nparameters of \>\"", "<>",
               "paramSetName", "<>", 
              "\"\< and a factor of two in \!\(\*SubscriptBox[\(S\), \(h\)]\) \
(from T norm.?)\\ncompare to Fig.5 from Li et al, 2020\>\""}]}], "}"}]}], 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "plotting", " ", "with", " ", "the", " ", "extra", " ", "factor", " ", 
       "of", " ", "2", " ", "just", " ", "to", " ", 
       RowBox[{"compare", " ", "--"}]}], ">", " ", 
      RowBox[{
      "result", " ", "good", " ", "at", " ", "HF", " ", "and", " ", 
       "peak"}]}], ",", " ", 
     RowBox[{"but", " ", "disagrees", " ", "at", " ", 
      RowBox[{"LF", "?"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"setConfigParamsCustom", "[", 
    RowBox[{
     FractionBox["2.`", 
      SuperscriptBox["10", "6"]], ",", 
     RowBox[{"4.`", " ", 
      SuperscriptBox["10", "3"]}], ",", "None", ",", 
     RowBox[{"3.`", " ", 
      SuperscriptBox["10", "6"]}], ",", "None", ",", "0.046`", ",", "400.", 
     ",", "\"\<Li et al, 2020 + 400. kg\>\"", ",", 
     RowBox[{"2", " ", "\[Pi]", " ", "500.`"}], ",", 
     RowBox[{"2", " ", "\[Pi]", " ", "5000.`"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"printParams", "[", "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"LogLogPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"1", "/", "2"}]], 
        RowBox[{"ASDShConwRP", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]", " ", "f"}], ",", "0", ",", "0"}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", "10", ",", "5000"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "25"}]], ",", 
         RowBox[{"5", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "23"}]]}]}], "}"}]}], ",", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Directive", "[", 
         RowBox[{"Green", ",", "Dashed"}], "]"}], "}"}]}], ",", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<strain sensitivity (NSR)\\n/ \!\(\*SuperscriptBox[\(Hz\), \
\(\(-1\)/2\)]\) (log scale)\>\"", ","}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2 \
\[Pi]\)]\) / Hz (log scale)\>\"", ",", 
           RowBox[{
           "\"\<single-mode conventional detector\\nparameters of \>\"", "<>",
             "paramSetName", "<>", 
            "\"\<\\nwith factor of two, normalisation issue?\>\""}]}], 
          "}"}]}], "}"}]}]}], "]"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "using", " ", "98", "%", " ", "\[Chi]Thr", " ", "like", " ", "Li"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tla1", "=", 
     RowBox[{"75.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";", 
    RowBox[{"Tlb1", "=", "Tlb0"}], ";", 
    RowBox[{"Tlc1", "=", 
     RowBox[{"100.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsList1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "4.93", " ", 
          SuperscriptBox["10", "3"]}], 
         RowBox[{"(*", "Hz", "*)"}], ",", 
         FractionBox["\[Pi]", "2"], ",", "0", ",", "0", ",", "0", ",", "0", 
         ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0.98", 
          RowBox[{"singularityThr", "[", 
           RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}]}], 
         ",", 
         FractionBox["\[Pi]", "2"], ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0.98", 
          RowBox[{"singularityThr", "[", 
           RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "False"}], "]"}]}], 
         ",", 
         FractionBox["\[Pi]", "2"], ",", "Tla1", ",", "Tlb1", ",", "Tlc1", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0.95", 
          RowBox[{"singularityThr", "[", 
           RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "False"}], "]"}]}], 
         ",", 
         FractionBox["\[Pi]", "2"], ",", "Tla1", ",", "Tlb1", ",", "Tlc1", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"plotSMConwRP", "[", 
    RowBox[{"valsList1", ",", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dotted"}], "}"}], ",", "Red", ",", "Magenta", 
       ",", 
       RowBox[{"Darker", "[", "Orange", "]"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "needs", " ", "to", " ", "use", " ", "SQL", " ", "formula", " ", "with", 
      " ", "added", " ", "factor", " ", "of", " ", 
      SuperscriptBox["2", 
       RowBox[{"1", "/", "2"}]]}], ",", " ", 
     RowBox[{
      RowBox[{"i", ".", "e", ".", " ", 
       SuperscriptBox["2", 
        RowBox[{"1", "/", "2"}]]}], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"4", "\[HBar]"}], 
         RowBox[{"M", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2", "\[Pi]", " ", "f"}], ")"}], "2"], 
          SuperscriptBox["Larm", "2"]}]], ")"}], 
       RowBox[{"1", "/", "2"}]]}], ",", " ", 
     RowBox[{"have", " ", "cut", " ", "SQL"}], ",", " ", 
     RowBox[{
     "but", " ", "it", " ", "is", " ", "a", " ", "bad", " ", "sign", " ", 
      "for", " ", "derivation"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Fig", ".", " ", "5"}], " ", "from", " ", "Li", " ", "et", " ", 
      "al", " ", "2020"}], ":", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzs3QdgFNXaBuCE0KVbEBsqSBFFBa8VFexeUVDsvYOiiO0KFlBQBJQiIoJ0
RQUFkVBE6U1QpApIFQSpoScQQ3bnvfPNMLsJ2b5nZ7a8z/zz603OzJ6NmWTm
zTnfOeuJF+98plhaWtorpfX/d+fjrzd5+eXH27eopP+Pu9u88mzLNk8/dUub
V59u+fTLlz2RoX+wk972huJpafr/pYGIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI4kpeXh4mTZqEbt26oX37
9ujVqxeWLVvmt21mZibeeecdvPTSS+jatSuWL19uc4+JiIiIiIiIiKKTnZ2N
Dh06GFlIz5498eqrr+KZZ54x9unTpxdqe+TIEXTv3h1fffUVZs2aZfzzueee
Q8uWLbFq1SqH3gERERERERERUfiGDx+On3/+GZqmGf/b7XZj1KhRRibSunVr
5OTkeNpOmDABGzZsKHT8woULjbb9+/e3td9ERERERERERJHKzc3F4MGDi3xc
cpG3337byDoKzqHxNUdG2rZq1QqffvppTPtKRERERERElKp27NjhdBeSTlZW
FrZt2+bzc0OGDDEykcWLFwc8x8GDB412S5cujUUXiYiIiIiIiJLe5MmTMXTo
UJ+71P5ctGiR012MyK5du4z38Oeff4bUfvPmzRg2bBi6dOmCzp07GzVMx48f
X2gOix1kTo1kHZKbBCI1RWTuDRERERERERGFb/fu3cb8C6u257H766+/bszR
SCTyniRXsN6Xv3VcCpo4caLRVjIRmdcitm/fjnfffdeofbply5ZYd9tD1pX5
+OOP/X5expfI56XmyNixY+FyuWzrGxEREREREVGyGDlypLGuqzyHH7tLHjBn
zhynuxiyvXv3GhlBnz590LZtW0+uEywTmTJlitFOxsRY9U4tkq9I9iBfo/37
98ey+4a1a9eiTZs22Llzp8/Py5gXqUMi/22s9yfv99h+ExEREREREZF/hw4d
wgsvvIAVK1Y43RUlZK5Mfn6+8e9WzhEsE5HM4/nnnzfa/fHHHz7bjBgxwvi8
r1qmW7duxZIlS0La16xZE7D/0neZsxNqfRB5X5LXSN981WAlIiIiIiIiIt9k
vsj7779v2+tZeUW4x0QyBmLBggUhZSJSk0PayNgMf3OEZGyGda5j59D88MMP
ePHFF0PaP/roo4B9/vLLLzF9+vSw3uekSZOMfo0ZMyas44iIiIiIiIhSlWQN
UidDxj7IGANZwyRWJNP4+uuv0bt3bxw5ciSsPkrdDBmnEW4uEkomInU4JAuR
NtI3f/Ly8tCyZUujnbyPWJg6dSrGjRsX9nFSW0T6JXOGiIiIiIiIiCi42bNn
F6mn2rFjR2MNmsOHDyt9Lcke+vbta7yGZByh5CKSh0idDKteRrhjTELJRKR2
h9Xm22+/DXi+9u3bG+3atWsXVj9CIWvujho1yufngr1vqTsSah1ZIiIiIiIi
IgI6dOjgd60ZqU8qz+kqybP9J5984slFAj3rR5uHiFAykYI1R2ScRiDdu3f3
tFVZa3X16tXG/B1f42Aks1m1alXA46UGrtQgSbS1gYiIiIiIiIicsnnzZqOW
57Rp04wxHFatzoL7zJkzlb5mKFlHwewk0jxEhJKJWLVTZZf2gVjjXGSXHEOF
jRs3GvmTnFvmMBXcpfbI22+/7clK5H/LejM7duzwHC/r7Hz44YdGnVgiIiIi
IiIiisy///5r1Pd8+eWXPc/+rVq1Mp7bVbJqhMj5JfsomHmoykNEKJlI//79
PW2CrfUycOBAT9vff/894n5ZZM6LrO/rb6yO7OPHj/e0/+yzzzz/TXr27GmM
LZkwYYKxdhARERERERERRS87O9sYe2A9l/fq1Uv5a0g9ETmvnF/GSEj2Ibs1
FiPaPESEkolY+UugdXgtQ4YM8bT95ZdfoupbpHJycoz1huWfSW/vXllsWAr0
Ot0ToshNngwMGAAsWuR0T4iIiIiIKES5ubnGvA15/pf1Vg4cOKD8NQrmIjJX
pGAN1mjzEBFKJmKNvQglE5F5K6GOKYkngcahcOfOnTt37ty5c+fOnTt3/zul
rkWLFnm+D1asWBGT15BcROaBWK+jKg8RoWQiw4YN87QJlnMUnGezfv16JX20
g/RXasLKXvDfw9kjPS6a/fC8ecA77wDvvosc/fvP7td3anfia52q78mOfv3b
pg2Qlmbsh49mwBs2bEio96TinNGeI5Lj5Rip/RTr/8bc4/caT9b3ZXe/tm7d
arym1DBLlPek6nzRnCeSY6VmnBwnY4Lt/G+cqnu8XuPJ+J6c6Je8pvzNW8V5
KHVJXvHss88a3we//fZbTF5D8g8ZI2JlDZI7qFo/JZRMJDMz09Nm/vz5Ac9n
1UCRPZFqmha8jiO9ph37WTBxIjBmjHwzOvP6DkjGn7vx+p5s6de+fUCVKmYu
Uq2a8ZpSSyhWYvGeVJwz2nNEcrwc888//0T1uhSaeL3GoxWv78vufh08eNB4
zViub6f6Pak6XzTnieTYw4cPG8dJjT+KvXi9xqMRr+/JiX7Ja/71119KzkOp
7fXXXze+D1auXKn83AXzEKkfYq1HI/NZXC5X1OcPJROR9YatNj/99FPA873/
/vtGO/maJJKEzkRSsJZIMv7cjdf3ZFu/PvjAM1aEmYh9xzMTsU+8XuPRitf3
xUzEvvMxE0lu8XqNRyNe3xMzEUpkr7zyilFPRMYNqXRsHmLVWFWZi4SSicjv
eVnHRdrIuryBWOvxSK3VRFLwOpZxMdGewzGyvs6sWUmfk0T63yiexet7sq1f
+j0uTjvNk4lkKVrL25dYvCcV54z2HJEcz0zEPvF6jUcrXt+X3f2yIxNR/Z5U
nS+a80RyLDMRe8XrNR6NeH1PTvSLmQipYP0O7N69u9LzFsxDjq0fUnCd3n79
+kWVi4SSiQirzmvnzp39tpEas9a5FiXY+hHx8DfeqMl92CefmPVFZs92ti9E
kZC1Z45mIoeee87p3qQEZiJEatiRiZCJmQiROsxESAWZSyLfA2vXrvXbRn4/
hlMTtWAe0rt3b6NmybHkY1YuIm0jrbkaaiby559/etplZWX5bLNw4ULj8+3a
tVMyr8dOSZGJiMWLPTVXkUA1bokM8nOjbl3jWtJKlQL+/tvpHiU9ZiJEajAT
sQ8zESJ1mIlQMBMmTDByhxkzZvj8HSd1r9u0aYNJkyb5PcemTZuM+SStW7fG
kiVLgr5mwTxExmb4ykMs8jnJTKStrNEbSS4yZ86ckDIRMWDAAKPdyJEjfX7e
mtPz+++/h90PpyVNJiKk5uqwYeY8GqJE89135rUktUWeeMLp3iQ9ZiJEajAT
sQ8zESJ1mIlQMJJjWHlBhw4dPGvtappmrFnUvn17TJ06NeA5vvjiC885evTo
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
I3MN5E2/9174b5wiktSZSHY2ULWqmYlUrgzs2WN7F1zX3gjt+7HGvzMTIVKD
mYh9mImQCtvxD25GAyzH70U+9ytm4xwc5xn7kYPg69Q+gxZG+3qorJ87tje8
ufrWSd+2w3tfulbfjsDHHyp3HwZKr/Guu9tiVqFPMxMhIkuyXcf37O+E9PEt
kFYu21gCdNSo0I5bvx4oU9bMQ86ppeHzz4Fbm2p4+hkNv/wSXZ8uuVQzdqtE
ZMKQv6d//bW35uqhQ073KOkldSYiPv7YO1akfXvbX15qsLrqNzC+t5mJEKnB
TMQ+zERIhcdxO5bgV7+f/waDPGM/3kHboOf7GxtQG+WN9m3xqMKeFvaTvp0D
c678A7g/+AHVZ3jzkDOKrrnLTISILMl2Hbuh4bq5GtKOLnNxXDlg+fLAx8ij
f+MmZh6SXkwz/n348OgjAJlv0/YlzTP25PEnEnA9GrnvkkKz33zDOiM2SPpM
RCac1ahhXpxlygCbN9vzunl5cPftZ9Rrlbqt2shRzESIFGEmYh9mIhStndiO
u9DYGCOSDf/F9+7D9UfX2i2LtVgZ9Lzd8ZYnR/kF5vwUWaN3EsZE3edt+na/
3iNrPZnqOANjMTbwQc2nevOQEqv1N160JhkzESKyJON1LFHGWf30H4NV9iD9
w1dRvda/RolHf+Q27vobNLz1thb1mjUWmRYg822sPETGoJSvoKFHDzXnt5XU
ttQSMM9JQEmfiQhZ79kaK/L007F9Lf3i1r76Gq4atb3r2MjavjXrYPXy5cxE
iBRgJmIfZiIUrbmY5skursN5OIK8Qp+XtVqG4VPcjSaeuqsP4qZCbaZigrFO
TUGHkI3/4DSj/UU4GQ/gBuP49/G/iPsqr/GJvlVCRSMLKYHieA2v6q+UHfjA
gX/o9xh5RzORg8A433XxmIkQJY68vDxMmjQJ3bp1Q/v27dGrVy8sW7bMb9vM
zEy88847eOmll9C1a1csDzJIIlmvY5f+M73qX5eamfLgJ3DddbBt7op8yc86
25uHNGioGWvR7NgBXHiRhp9+sqcfMSFr9SbkYjqJISUyEcnXGjY0M5GMDGBl
8L8/RfQyEyfBdUHDwllIrXPh7tMXrmuuxfZ2bzATIVKAmYh9mIlQtPZiN2qg
tCcXWYc/PZ/bg13GGjQ90NFYU6YD2nja/YRxnnav4WkMR78i5367QPsn0Czq
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
YW1Yx+zEdjyO2z15xwj099luG7Z42ryIR0I+/zcY5DcTmYjRqIMK+AzdlWQW
mfp2Cqp5xoY8hAf1d2fjWN839RvcNM3MQzL0m95VsatHwEyEIhFJJiK/H8Op
iVowD+ndu7dRY/VY8jErF5G2kdZcDfX9yH2z1S4rK8tnG6nPI59v166dknk9
duJ1HNhufav+pPeR7IYbwitrICVGJRPp1Cm6fshjcrEM75o1N9wYfcZiO5n4
8913Rs1V9OgBZGc73aO4w0zEBynWc8YZ5gVYvjywY0fwY+R3T8UTkH/8yUbt
EF9CzUS01WuM9XuJyDdmIvZhJhJ74/Et7kCjkOtwyBiNi3AyaqC0J+9ogGpG
jQ9fLsapRhtpvwYrfLY51jr8aRxzK/5T5HM5OOh3nd5IjNc3yULqog6m65ut
pmwE0g8cHSOiPwN+5nttYVWYiVAkZD2EcDIRqYkt80lat25trB0WTME8RMZm
+MpDLPI5yUykrazRG0kuEs77GTBggNFu5MiRPj9vzemR31OJhtdxcGP0R7K0
y/T99M1Ia/aDUeIgVAMHmpnIggXR9UHKlFp5yMuvJPAcGrmuP/sMePddYHls
f9clImYifgwe7A0m27QJ2lxbucoYI+Lu/L7fNiFnIvPmw/3cC2F1lyiVMBOx
DzOR2JM6qFLv43sEnjNvmYWfMQi9jWxiCsbjbJQy8ouOeNFn+3Zo5clO7sf1
IWUvkp1I++54K6z3EopD+vaVvhUkdUPy9M1We/Sb7VJ/eufM3BH7PIaZCEVi
+PDhngxh8uTJQdt/8cUXnvY95G/CAcjYilDzEMuxuUi44zPCeT/yu6dLly5o
2bJlkdxj7ty5xjlGjx4d1uvHC17HoXl+1yakZ1VF+r+lkHb5L0bWEYqxY80s
Y+vWyF9bHpGrnqyhTFkNX34Z+XnihkxA4ho0PjET8UN+vp93npmJlCgR9PtH
mzXHyEQkG/En5Exk+JfG/Bki8o2ZiH2YidjjffwPl6E6DqHoeNZsHMBh/TP+
vIXnjfxC1n1Zi6KF6GTMh3zOykVkXkwwMhenFsopqZtakMyTOQtnGuNCJiP4
s11MnfedNw+pNsOWl2QmQqHasWOH/kw31pirInmAlSHI2I9hw4bhxx9/1B9v
fBdYkLVrrfaypm0gmqYZNUx79uwZUh5ikbaSoXypPyhqISzIEc37kdeS3KNN
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
jz8unhVXG48HR9t60PH369CrdyXQ67FzqcGVYo722DxqVn8n7d1wWjnOTHK+
/nqQWAMpKrAm4jtHj/oWZ8qaCBMtRPJ9fOHcBUpPSFd0k92Td9O6vusoM031
rcby4c8MV3xOul/TvcAzcPrX0x37QSyO0fMy77yaywQxOkbt1tvWE70sGuYT
dSjRwW2brld1VXxXNOC7MvjRwUosEQwajGaID4K2AvD/s76f5TD41ECf0Wzv
jL2OfSIHC/xpVvdYreg2smGdRvr+dNo9aXcBS1yYqNjZo2qAw8ULFx3LNEte
m0ypm1IVw340TiaedCzX24l9J5R9gdysXKWtJ4OWpAFtyVM7rJOvB0WD8mBa
vaP8i/mG7bQ4LQA9zKhtvj0HG/LdGLW7kO2Mc4FG5qmd7K+Ec6Rfv2X1Fkra
l0TxXeMpNiZW0URibDFUylaK3q/xfsF9+qjHZUj/Rk8eE1aCJog56Xt0K1VS
5qWuc9XX6W57e7zzx7IY8d81dKMYN1amGmL9p9nfUK1/W9Gfi07TqJH5NKJb
Gn3b8SC9V/covfJ6Lj0mDnLLLaT4jfirkwTT4CZRtizRVVfl0U035Snay733
qvoLDHlnq1dX7ZVXiGrWdNo336i6jGY//6zGDmkGHxhoNbLBJ2bIkIKGFH/Q
ctzZvHmqvmNk0H2MbO3mHFqy9STN2JlI03YmOHSivbtP0pCfr6HeP9moXfvi
9P2hr+ijM99Rjcya9Oy56rQkKUHRkmDVs97wmJP0u/N1FK0JNunsHPc+HflX
0z1591H6yXxH2y5Z8dQjawCNOjuV5pxZSRtO76WkjDOO9aG2aIjrijZYE7GO
SNVE8nLz6eg/2Yod2p1J25edpC2L0mnxmFRaNDqVZvx2TPELxO/brw33Uu+P
N1Ln11ZR66cXU/OH51KTu6dTo/ITqeHVo+nRR5HnlKhqyQ2GY7JHbVuV33TE
u7SxuY7J2gvra+tL423jaWXZ/ooPY8rsrfR2nlP7eFHqP0aW8K884O7DMYUW
1kR8Z/ny5d4bSbAmwkQLheU+zs/Lp8x/M+n4nuOUtDqJTuw94Vi3afAmmt94
Ps3830yaVHMSjXl5jKKToDZO/4r9He3go2L0/N1i26I8SPP75Bu2w741oM0Y
tf13p5q0En02aifX8Bl4/0CP7bpc2cXRDnFERvvcNUGNjD1/6rxhO5wvjUnv
TzJsezpJfeeC/C9G7Za2WerYZ+/yvT22i7s5ztEO2xjtE8cE0FGM2uEzaIx+
abRhW5wbgDrTRu3gV6SB78BTO3x3GvN+nGe4T1wTTzzxBF1vu96wnaz/DfvP
MMO2msazeehmj20al29M388cTmVpNNny5ziWf/PsN1QiO9bjHLnTDxMdbcvt
vN6xvOSZS6nsoTJUKfshqpb3AsWt/d3R7rsnv6OXfn6J3vj+DXrv4/foo7c/
ove+6UrPN1tHT36zmxqXVK/1tsXa0i+lfnHpJ2K/NZ3jaZvxtf6gbZfqg2Iz
vtY/t4127LOmzfhaL207pbS7y2Z8rb9gW+rY5082NY69TWwbanRLI2p4R0Oq
82Ad+r7y9/TJkw3IVn0h2V6bQ9VKLHRs/+6n71L1ZtXp+Q7VqGq3Z+nxIZWp
9Ih3qdikmnTZW+Md7d76+i0qe7AMXXayFMXmFnf9fvbcR5/ZxijtWl7R0uN3
CKvw3EjHPh8Z9bDqO3SuBF2VciWV23U9lV5ZiYpNf4tstQaL76Cr0q5JuSb0
wfsf0FfVvqI6D9RR/q4T28/xuV+xzTc8R7faDivtrrcdM2z3lm26Y5/f2oy1
7hhbvtLuMfG7bdSusm2TY59G7f5nG+Zo96ZtpmHbcrY0pd3NtmTDdq/a5jr2
Wcfm+Xe9pa2zo92TtrWG+3zItlNpd6mXa/0Ll2t9smHbMrYMpd2dtgOG7V60
LZE+z6/UvFg3t9aw+ABFl4RVL7XaYzvYw1ccUNrdVPqsYbsPL/nTsc/PLpnk
sd3PMb3o1uuzFS302RsSqEmJvh7t1Ws3Ke1gDS4Z7LFdrVKjHO2qXbmFfizW
lxrFqOt+umSAksNTs1fvTlS01/88kuOyXG9fXjfbodN+Vm6By7oGJQe5/P10
pUylXfV7kgz3+e6tmxz7rHvVGLdtGpYaQv+7bKzj87x+zRrH50S+UflctrJ1
ojtsicr3fbXtpOG18Z5tquPa+No2wrDtJbZcpR2uZaN2L122mipVInrjDfHb
+sQS6vbWWhr9y1468MwcyrOp4kduye1Ev7RTRWgBolEvI1UP6e52NMkUJVgT
CT2siTDRAt/HTuBngHfvmNfDNwK+D/BRgd/EniF76FSZU8oz9mLJi7Sq0Sol
/6vmxzGrlurfgfyy8nwf/hy/PfWbw09kwL0DqO8dfRXrdWMvhw8G8p8YPfuh
6WjAN8ZTO9QAchy7u3FuFvjeAHxmo3ZjXnFqIlr9IE/m0ETmeNFEpPy7UaGJ
TAiPJgLmjzGeT874ZoZjn8HQRGBYD7LyC+p/Ta9tSj9U+oE+qfEJfdzxK+ok
/mtMP1Fj0Q+tDTSR4nkxbufcDRJ6Otq90PoFj3PzSlSF4u36X+MbGzuWY7+Y
91+WUYpuzL2Fbj5/B3VvM8Gxzyf7/Ydu2lSebl9xG9258A7F7tj2FN22rzo9
N9I57/z26W/pwUkPuNjd06pQmfk16aopX9FXlzs1kXtmVXTsC3bbqlspdtMj
VGxTZbrpeWds3vNtn6erE8tSmcOl1T5Cnzhj972Z+YZDE6n1aC1DXeLp66c5
9nnTxvIe25X8pbWj3Rv/8+DTcfYKKrblUYcmAn3pvun30sNjxRke+ISis0Bz
KVGrP9k++oPuuWGZY58tL29JrUq2cvn+n7atdsxtNE3EndWzDWBNJASayFNR
ook0srnPY6ncz7ZejnbP25YZ7rOibb/S7irbGcN2H9omOvb5mW2sYdtStnNK
u/ttuw3bPWNb5dhnc8Nrvb+kz6423OcDDn3W+LmL+1Xb5wc24+duadtpNUWQ
F332eUmfbWzz/NzF75TWDpqu0T5xTLSDRhzI9wM/j2bFulPjEn3p6Uey6KWX
iL589V9qXmkOtX1+GbX/YAN1/HkPjRh4mLYtPUln0i/QRPGMqkSqxnG99hCc
LsYBqLeL91fFTtELK5Jo+fr1at14wRlhXBGU0WBNJPSEWxM5dOgQZWZmem/I
FHn4PvYBTKXhcHkdodhBSNHHfyBuRAO6gxZbAj8TOX4lbVuaox1yruhjYmAH
5h9QYmiQzwUgLkQfX7Nj7A5HPA70DQ1sq4/XkU2LS0HfoAd5MmhNGhsGbPDY
Dr47GokLEl3iifSG2B2AeBKjdvhsGlt+22LYVouJwXk1aifn9IV246kdfHc0
9s3cV2D9+G/G04z6M5R/o5YTQLwY/v6p0k9U3VbdxTpW66jUapLPpVE/NU3k
yPojhu2wXrkORXujdjiexoTJu6mTWNZcWFesbziLpr3RmkZ/0JCaN25Cl5+c
Jm6fP2jKkW2O7V8d05bKb3qZyu2sSrckPEYPHL6fHjh1P91Cd4j5fE16Spyv
6qJdXPcxhhrColWLaML3s6i1sLv2POKxXc0LP9FYe3xa3fi6HtshjyeuZy2W
7bLsUh7bDtg3nKZ8OUuxN+a95VnnOP0KjflyIY14dxZ1qT+IYvNi6fKzV9AV
Z66k647eQNf/eyPdfeZRqni6Mg3uuZr6Vp+l2KtjPqJn/nqVqs74P3ppwvv0
2shP6cMVrei7DUOoxfjV1KPqLMXavjGWGnzXh5p+PIR+eXcktf+/P6jPp5sc
sTpxH6xT2nV/dhZ1rDKLuj06kaYXf49m2d6gabE1qW/zVCXWp2v9VGW9J+vy
baIjLqjTM3Op7WPivD9S0Fo9s9QRU9Tyrd1u22jW/Pt0pV3zumcM2/1SY5tj
n79UW2XYtlnTfKVdi0+TDNu1/PSwY5+Ovj88i5re52qNq6x0xEz9+ML2Autl
++HTM0q7Oh9nGLZr+N9djn02rrzMY7ufH5zjaFe/RqLhPuu9k6K0q/XtBcN2
jZ5a6/w8VTcZtq39xTn189Q85nZ9k3tmUIMKk6nBy3879tnkkYUubZrdMYma
VphEjW6eRA3vmOWIR/vuqd3KMk/2efVUpd3Hb50zbPfDw2sc+/zhwRWGbT98
J1dp9+WLSdTomtH049Xu7aOHdjni6Bpc94fHdj+Un+5o99qtu+nbEqOp9mVu
2l45nF4x6Sfy1fVzQuonUqf0WPftRD/rlpvi+DyfPLDd0X/9eWxScQbVfT9N
+b7r/e88tXpyoWLtnl+mxMV0fWMN9flsE/X9YjON6phE06YRTVlINH7ySfp9
/FGau+wkJf2dRWczLij1XH4RVlvYexiXSOOhW8gZ79JaWj5eWn6JsLPp2UQl
Ex0L/224iqtMMYawJhJ6rNBEtmzZQq1ataIuXbrQ1KlTad++fZSXp/6K4P9n
zZrlcx4UpujB97GP9BWW5rUVw/jFzp076d9///W4Pj09ncqVK0dyDtYyZcpQ
amqqhb30AeQw7dyZ8pcvV24bjHvlKHhkQhZTUaWyaj9p+UZh15I6zsXwdh8h
F0oGnRT/PUdHxLJEYfvoZaWqySaxz/O0irSh8GZhsyieJjn+qyTMpth2+sR+
jPkH5lPtM73EsiEO6ygM/40U/70m2pS122s0zbGvLsLuEHYXzaS7aSHtkH4Q
vqNkqiL6U11YW/pb9FL9byX9S1/TGeVzfk+ueV0G2s8BbKq0HHHt3SSTs4uO
lJYvlJYfEjZEMvlco2zWUFKl3a3awj59HIlWDn79tbJOfoc6394etk1aniQt
h8nzlzX2PsH2S8uPSsthcuaJ1dLyBGl5qm6bfGndKmm5nAMgRbeNzEppuTwK
PiIt18vdK0xss1i3zXJp3UFpebK0fIlum2XSukPS8iRp+VLdNkuldYel5Yel
5ct02yyR1iVJyw9Jy/XR4ouldXLuyYP2ZTOysmjo3r0u+UTkbeRMxvhON9lt
B7mySbLj0vIUk9uc8LDNTml5vm6bdGndEWm5XHP1og/bZOnayqmdE6TlidLy
TINtkCFMO4/47Fo+kX/Pn3e5zuXfh83Scvmz45zK96385hQ5RrXfDfmaOUjq
70wHUn+jTknrsPwzYTXt22ngPntI2B3CUMNF/l4eJaeOUVd3fJtkx6R1Twor
KexO+zE18MuLSlU4l8rbixeGO3dw81y1mBnDGMCaSOixQhOJi4uj+vXr048/
/qgcC9agQQMaOHAgLVu2TMmn361bN855xRjC93EAYLA8O9ydYAoT3jQRjX79
+lFMTIyLNlIDxVkikTNnAtoc83r5KYY5gjZXXy0tx3wDY3a8Z/yWXMfUDYRV
FvaIvQ1A3Zmpx487dBeYPK98Rlr+rbR8AbmO3eX53lPScvmXda5uG/ltRRVp
eW1p+SzyPEeoLC2vLy2frttGHoE8LC1vqC3My6OTeGksrp/8YsXoxcWL6bS0
zYPSNo2l5RN1x5HnY/dKy5tKy8frtpH1mrul5S2l5aN128jaSwVpeRtp+Qjd
NjK3SsvlKtfDpOXFdduUl9Z1kpYPlpZfqtumnLROnsMNlJZfptvmGmldT2l5
X2n5Vbptykjr+kjLe0vLy+q2uVJaJ+uQPaTl1+m2KSWtGygt7yItvyY312W8
Kd9X8ny5o7T8Zt1xYqR1v0nL20rLb5OW50vLYSOlda2l5XdKy3N124yR1rWU
lleUlmfrtvlDWtdUWn4fqXqE3Ha71PZ1afl70vINum1kPeY1afmH5NRElovz
LW+zV9qmurT8E2n5St1xZC3xBWn5F9LypbptDkrrnpOWfyUtX6zb5pC0rhqp
1+Tt5PwtBtBP8bsE7QXXmJwK2VS1qalTSdV33xUX31bxg9WOqHt38YVzpAzj
GdZEQo8VmsikSZNo4ULVFxqxMvPmzaP4+HiqV6+eQyOBFclag4xp+D72k86k
Dp5RZjLJS1uGMYlZTUSjatWqLrpIbGys8iyIWPDZ/v473L1Q8FaLF2vw/hFa
izymxztP+f2sPLeHj8FwUueAK6XlRj4fmJdqfiLTpeWYS30vmTxHEKN95d1s
TfvxNDZIy2vqjoN9VLfbr9LyLagXUry4Mp9IuvdeypLqWXwnbSPPa6ELVZZM
rn70nrRcnnPP1W0jz1TelpbLfZut20bWxt6Qlg+Sls/UbSNTQ1o+TFoOjecO
u92t2+ZJaZ2sB4yXlt+r26aKtG6wtHy0tPwB3TaPSevkvo2UllfSbfOItO53
aflwafmjum0ektaNkpYPlZY/rtvmfmmdrCEMsi+7/eJFejAz00UTuUfaRtYQ
BkjLn9Yd5y5p3SRpeby0vKq0PF9aDpP9rOKk5c9Lyy/otpHvuZ7S8v9Ky8/r
tpklresmLX+JVD1Dbiv/2n0nLa8jLd+h20b2r/paWg79U9NENuXkuFzn8qyu
rrRc1hjhM1JdMtnnB3Er2u+GfN/i90/7DfqJXH0+8L1CS8Nvg+wrBT84/DbC
3w+/YyFXJbakirHYraomggLxdespdWaUYlsMYwBrIqHHCk0kKytL8QnJyXGN
lrtw4YISRzNz5kyaMmWK8jfDeILvYz/BIE17CYJBWp5xc4Yxg6+aCFi3bh2V
KlXKRRupUKFC5P32Hz9O1LUrUadORIcPe28fYrxpIkWKhg3JmTi1Rbh7w0QZ
XIvXOiK1Fm/YyBXXXJnt4rdrv7DKcKInmjOHaPRoJMQKd++YCIc1kdATTE0E
fiDt2rWjMWPG0MaNG+nsWefbouNijInl0EcYxh/4PvYTPGrx0tGd8zZT6EAt
GyvwRxPRqF27tosuUqxYMWrfvr33Da0C49NJk9T3d/BpDnNdNtZEJBDfdNtt
qiYSG0u0YYPXTRhGgzUR62BNRMfzS5zjsHJrnDoIX4uMCVgTCT3B9hNBHlUt
FqZWrVrUsWNHxQdk165dlJGRoeRYTU5O9r4jhtHB93EAIMBfCzZHILQftWhQ
GwY1S46sO0Kpm1MVw79Rl+XQcqfHfn5ePh1adkipz5qyMYWObjlKKRtSKHlN
stJOqyGjgTm8y343pVLSqiRl+cULF+ng0oPKMbT1yv7EfpPXJqvHXnZI31XT
oO7LtpHbaFLNSTT0iaHU7+5+NPKFkbS45WIXbQF9nttgrs/7/2exeIYt8m74
vFnHA9eLTx44Se1j2it1b8yAmkGoU+OPrZqyivat3ud3Xz3lYE1JSfF7n0EF
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
duQiXG6S55/fc+7JepKcJCcnJ8nn/ZpMJTnLk+Q+53K+PM/vuaF6u4dSbNes
ertPV8/vSbZt8PHp4DX9P4JtfXiDUmuOZvUxOJaJvPqq0d8dWicRKERkInBK
u3btdD2Rsw6vQx+bh5g1Vp3MRexkIvJ7XtbWkW1kXd5kzPV4pNZqIaEfo9QF
JkfcP29JsmHw7+RVV1Xf4/8h+TH9w5OMoVDOZCL+v1S35SvKWGvTBp01fNq9
TCQwL2LbafZP4e9kjJ+purn6Pf4mvSYm+nwjxdZY9T0c3HZJeucpdHfddVfU
mJEGdeuq3a1bK3XsWHgjajkiBVcyETuOBx9yDZ8TfAy6qFTz4BMdtyo1bpxS
3bsrdcsHSn3qUpL84tPVWccfUuQcT0bkLCeq58AEL8K1gv2mzh6lrjyk1O3B
844M3msddnbdYUdrrB4+nP0xgAJGJgInyO9A+RnoK2vOOygyD4mtHxK5Tu/w
4cOzykXsZCLCrPParVu3hNtIjVnzWFJnpZDQj1HyzgavLbVSj7cIbA1vV1U3
+ESSZa59Pw/+vwtJjpVlJhLYpEI1SxLd8yds2w9dzEQ+iJjD8lQabfxS8P+d
Cu7Tqnr/q5Se/2NXJpmI/+XgY7T9cxQLmRcaWYNVHrfddptxfyvrlw0ZIgur
KfXee8EvJvsxmig+nslE7KpQxppW8le/t4KPVy8qNeKMMT4q+D7UpC1K/XWP
9aP1DqWmbldK6uhJprAluO8RZYxjcQHrzgDOIROBE2QuifwM7E4yxlZ+P6ZT
EzUyDxk8eLCuWRJLnjNzEdk205qrdjMR+Xuzud2JEycst9mwYYN+vWPHjo7M
63ET/RgI3uo1rh6P8OXE2/i7BB/dIu61FyTYMHiZ8P02+fmyzURkXo7e/4rg
Hz5OuXkUfx8XM5FZEdtOsHd4Xd/jZ9X/vTpi/6n2m5gyEzmr1NGnPorKRKTG
i/9Z++coNk2bNo3KRaQe66AuwR96+fcAGWMvjyS/K1G6Ci4TKWBZZSLy/Uyb
ptS+fc43DChAZCJIZd68eTp3WL58ueXvuGPHjqnWrVurBQsS3RQodeDAAT2f
pEWLFmrLlmQD0g2ReYiMzbDKQ0zymmQmsq2s0ZtJLrJy5UpbmYgYNWqU3m7a
NOvB3+acHvk9VWjoxyg6wctBYGbwr3/dg4/2wcdzwT//07i/DrxlvYt/bMQ9
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
Cipmwc9RxvwUMv/4iXqckZs1V8lEAJjox4B3kIm4h0wEXteoUaOoXKRGjRpq
0aJF+W5WHDIR5wSmzwiP2/jn/rjXQ5lIp7+Ht4udNxPBP2KUCix+I/H5ss1E
Tp5SVXVuNMasvDzW9m7+vz+XdSYi84YKemyEgwKvziz4TESPaar/72n9HGWL
TASAiX4MeAeZiHvIRFAI1q1bp2rXrh2VjTRo0EBVWa3jkSdkIg46f15VXXmt
kTH0Hxj3cigT+UljPUZCb5ckF/D96rfG+sMJZJuJSI1Xvf9VdXTdVLskx8km
EzH3D3ywLaP9i43vZ00KPxMJ8v3xEV1zxi1kIgBM9GPAO8hE3EMmgkLSrFmz
uBqsXbt2zXezNDIRGz46bty/m/MCzp5NuA6tr8mvjPkzFveGkom8/+pMdVnW
mvnL34ztbv2y9TlPnNTbJJNVJhL8vqtu+qzRhp8/mP6+Mu8lw0xE1siR8SlZ
r+Ura9UkO0aq4yd7XfqDfKYHD6XXpthjpmiDv2yo8R2kk4lk875iX0vV79P4
jvyjxxg/i+VHbO+TDTIRACb6MeAdZCLuIRNBofFqDVYykQQqK5W/Ry9dz0Pm
sPjHTTDWxn3yKVVV79/0OjJWpM6kzik+VStuG8lEDrdopSpXvK0CCxaG589s
fTfuOFJ7VNb5TSabTCTwzvrQvv7Oz6e1r95/wqS0xpZEklquttYpCf5M+l8c
oXw/aaxru0q9Fn/TR0Pr1Mh3E1i1Jrz9sY+MY3/xdmMt4f/8UvThhg1Xvm82
VFWf/4Kuh+sfMMiicT7l795T+f7U1Pj+u3ZTvq/faYznsXq/5jlv+y9VdV09
5bvvfv10YMarOtPyN2uh36vvgV8a6wZVk/WB5H2Z34FkTL7/+Wno4R842Jn3
lap9wc9Q1l6WXCzwz/3GPqdPG2tAt2xjjP34/j36s0i1XnJgx07j53n6jKTb
OYVMBICJfgx4B5mIe8hEUKjKysriarA2adIkb+0hE7Hmf6K98j/fLe75wIq3
9borCTOIs2dVVa3PGFlD2dColyQTOdXoXnVJ7q2l/kLdf02YSfh+/ZBSly4l
bWNWmcjUV8KZyNAX09o3K4GA/nxS1hI5dFj5Gv1AZwWBNeuin3/w//QYlarP
XBediQTv2aUGrH/IMGPsxX/cFn3M4ydUYOmboTWOrTIRf5sndQ4S5dw5nUP4
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
23ZxayHr54P362a9VP9f/qbHrYRe69rNeD52nMOpU3qulK/xA6rq818w2jDy
pehzf1geWqfIanyH/6mOxrE7PBP/eQQ/U8lFQm09eSphvZZM3lda7XvyqfiT
yvpI19UzMpHgz3QiZkYnNXjcQCYCwEQ/BryDTMQ9ZCIoVU7XYCUTsSC1QP61
vp4f4rv/F8rfp5+uhSr/hi73r3K/bpev0Q9CtTcSZiKy3c+aKN///iz1AU+c
NOYxBO+ho9bEqXmlMf7iv76qMxuZw2Cu3xLKTXbvSXxcWW9W3q+MB/i3zyt/
u6dVYOJkfZ8r71+3T+ZzBD+bbMl59P11bM2O2O127lK+e+5Vvv/5qR6Todvx
uz+owDvr9f8my0T0ukH33a/X85HxOoFJU3TW4R87XteKCX0un75K+btUj7mS
rOPvz6mq62/SuU1g2nQ95sL/aDOdVenxNrI28zfuUv5WbfVnprOGW/5TP69z
g+qHOUdF5ghV3fw5XZe36oabjf/9/Bei1l6WfEOOKWvY6p+xJr9SgT17nXlf
mbQv+GfJh/RHIj8Psk/df9Wfi4zf0XmWRS4m55OfHeXStYRMBICJfgx4B5mI
e8hEUOoaNmwYlYvUrFlTLVmyJO3jkIlYkM/C/PdwyQrefU/PlQjsP5D2/V7g
zWWhMSXJMpHA2ndU4K2V2bbcEYGNm/RcChk7IONG/MNH2lrr1zaZ+xK8z46t
x5FQRYXOPuR7MOdupMxETB+Wq8CKt/VDnT1rPHfkqHG8HTv1PJ24+SCVlfoz
kHWDA/ti7rnluzt6zF670yRr8ui1dix+PuJk8r5yzPetbyt/x2ddOx+ZCAAT
/RjwDjIR95CJAEqtXbtW1apVKyobufXWW9PKN8hE3JMsEyk1MgfEd+d3Mt7f
diYCV+g1jGpemXwsksPIRACY6MeAd5CJuIdMBAhr2rRpXA3W7t27p95RkYm4
iUwkgtRRva6evbosFshEvMX3m98b84lcRCYCwEQ/BryDTMQ9ZCJAtExrsJKJ
uIdMJJp/6IvK9/MHM9rX98AvjUxk6ZsOtwrpkpqqVfX/PWV9GKeRiQAw0Y8B
7yATcQ+ZCGAt3RqsZCLuIROJEQjobENqrtql66z+6rfGOj2yNtCX71C+Pz6i
Aus35LChSEjWLPqvr6rAG+nXMsoWmQgAE/0Y8A4yEfeQiQDJNWrUKCoXqVGj
hlq0aFHcdmQi7iETsXD+vPL96H9tZxqy5oyuLbpmnfHfK1fr+rexa9PCHb7f
/8l+rVyHkYkAMNGPAe8gE3EPmQiQ2rp161Tt2rWjspEGDRqoqqqq0DZkIu4h
E0mgslL5BwzKdyuQJqkFk4/xISYyEQAm+jHgHWQi7iETAex7/PHH42qwdu3a
Vb9GJuIeMhHAOWQiAEz0Y8A7yETcQyYCpCdRDdZdu3aRibiETARwDpkIABP9
GPAOMhH3kIkAmbGqwXr33XeTibiATARwDpkIABP9GPAOMhH3kIkg1+TetVWr
Vuq///u/1be//W113333qZdfflldvnxZvz5mzBj19ttv2zrWvn37VM+ePdWP
f/xjfbx77rlH/fSnP1UDBgxQhw8fTrqv1P5Yvny5Wrlypa4PsmnTJrV582a1
YcMGtXbtWv38ihUr0n5/dmuwwjlkIoBzyEQAmOjHgHeQibiHTAS5JLU2pBbp
nDlz1MWLF/Vz0rf79++vsxG5r/3MZz6jZs+enfQ4Ml9FannItt26dVN79+7V
zwcCAbV9+3bVsWNHdfXVV6sOHTqoCxcuWB5D7qMfffRRnafUq1cvlGFcddVV
eo3dP//5z6ply5YZvU/JWGrVqpW0BiucQyYCOIdMBICJfgx4B5mIe8hEkCuT
Jk3Sa7WY+UUs6ed16tTR+UGyTOTAgQPqS1/6krrxxhv12I5EZIyHZCZ33nln
yuvHO++8E8ouRowYYe8NpSA1Vh944IG4GqwyrgXOIhMBnEMmAsBEPwa8g0zE
PWQiyAUZE1K3bl3117/+Nel2w4cPT5qJnD59Wt1yyy06W1iyJPValdOnT9fH
u+OOO/R9cyI7d+4M5RbTpk1LeVw7zHVn5Np1ww03RGUj1113nTp69Kgj5wGZ
COAkMhEAJvox4B1kIu4hE0EurF+/XmcBgwcPTrpdRUVF0rkzTZo00cd56KGH
bJ9b5sbIPo899ljCbXKZiZg1VsvKyuJqsMr7QfbIRADnkIkAMNGPAe8gE3EP
mQhyYdy4cToDaN++fcptf//731tmIlLz1MwSZK6LXQsWLND7SB4hP99W3MhE
TNRgdR6ZCOAcMhEAJvox4B1kIu4hE0EuyD2/3P9LDZCzZ88m3XbgwIFq7ty5
cc/ff//9+hg33XRTWueWuqZXXnml3ldqqlpxMxMRUoNVaqtQg9UZZCKAc8hE
AJjox4B3kIm4h0wEuXDq1Cm9novc+991111q9+7dCbetrKxUPp8v6jmpR2Jm
CL/85S/TPv8PfvADve/NN99s+brbmYipWbNmcTVYZW0epIdMBHAOmQgAE/0Y
8A4yEfeQiSBXnn322ah7/+9///v6ucWLF6vz588n3Tdy3szTTz+d9rmltqu5
v1Uek69MRMi6wvXr14/KRq699lr6YRrIRADnkIkAMNGPAe8gE3EPmQhyRcZ+
/OY3v4m694+sqfHrX/9abd682XJfc/0YefTu3Tvtc0uOYu6/fPnyuNfzmYmY
hgwZEleDtXHjxo60pdiRiQDOIRMBYKIfA95BJuIeMhHkUiAQ0JnDnXfeGXf/
L49atWpZ1hIZNWpUaJthw4alfd7u3buH9req3+qFTMREDdb0kYkAziETAWCi
HwPeQSbiHjIRuEXmjMyZM0e1a9dOffGLXwxlAFdccYU6dOhQ1LYzZ87MapxI
p06dQvtv2bIl7nUvZSKCGqzpIRMBnEMmAsBEPwa8g0zEPWQiyJcpU6bocSJy
/x/7O3j9+vWhbOCpp55K+9iR9UQkq4iVbiZy/PjxuNwmVjaZiOmRRx6Jq8Ha
o0ePjI9XrMhEAOeQiQAw0Y8B7yATcQ+ZCHJh//79tvrwyy+/HBoTEUlqkdSp
U0e/dt9996V9fpmrY3VcU7qZyEsvvaRmzJiRdBsnMhEha/bUq1cvKhuRz6K8
vDyr4xYTMhHAOWQiAEz0Y8A7yETcQyaCXJAaIBMnTky5nWQfN9xwgx4PIevv
RvrTn/6k84Drr78+bq3eZOR+WebjyL59+vSx3CbdTKR9+/Zq9erVSbdxKhMx
lZWVxdVgefDBBx05dqEjEwGcQyYCwEQ/BryDTMQ9ZCLIBclEOnfubGtbWaNX
1qKNJT+bZiawcOHCuNdPnz6tH7FGjBih97nqqqssXxfpZiJf+9rX1MGDB5Nu
43QmYrrrrruicpGaNWuqpUuXOnqOQkMmAjiHTASAiX4MeAeZiHvIRJALkonc
fvvttrb9whe+oNdesfLkk0/qHOCee+6Jer5Lly6qTZs2utZI69atQ7VIJY+4
7bbb9D6DBw9OeM50MpGtW7fqcSyXL19Oul2uMhEhY1TM2ivmQ95nLs5VCMhE
AOeQiQAw0Y8B7yATcQ+ZCHJBMhG5bx84cGDS7aSvS94wefJky9cl67j33nuj
5sFs27ZNtW3bNrSN3BsPHTpU//fzzz9vWbM1lvzc28lEKisrdR5z0003JT2e
yGUmYmratGlcDdauXbvm7HxeRSYCOIdMBICJfgx4B5mIe8hEkAtmJnLLLbeo
vn37WuYEZ8+eVd/73vd05pGM1BmROhpyvEGDBqm33npLDR8+PGobef3vf/+7
nmvTokWLpGM65LWpU6eGcoVevXrFbSP32rJu8Ne//nW9zbe+9a2U79mNTETI
msb169ePykauueaakurHZCKAc8hEAJjox4B3kIm4h0wEuSCZyHe+8x1979qu
XTs9j6ZTp05qwoQJav78+ap37956zoysPVtRUWHrmJJjSMbyzW9+U91xxx1q
06ZNat++fbqWq8wj+exnP6tWrlwZtY/kE4cPH9b/LZnF5z73OVWjRo2oPMGs
4yrHlseNN96ox19Evn7//fenbJ9bmYhpyJAhcTVYGzdu7Mq5841MBHAOmQgA
E/0Y8A4yEfeQiSAX1q5dq/bs2RP6s6wvK9mF5CLNmzfXmYlkGukKBAK6toZk
Ki1bttTrwYwZM0aPRalbt25cTVW5b+7WrVvW78cOtzMRk9RiicxFJPNZtGiR
q21wG5kI4BwyEaD0JPr9ST8GvINMxD1kIigGsiaM5AGSkUT63e9+p0aPHu1K
G/KViQjJoGrXrh2VjTRo0CBUe7bYkIkAziETAQqH1DlbsGCBrrEm/84kc4rf
fffdhNsfOHBA/9tR5GPkyJF6HrIV+jHgHWQi7iETQbGQeTGSBUgOImND7r77
bv3n3bt3u3L+fGYipocffjiuBmuPHj3y1p5cIRMBnEMmAhSG8+fP63X3JAuR
Gvby70DS7+SxbNkyy31efPHF0Dbmo1WrVvr3qBX6MeAdZCLuIRNBsXjiiSfi
6oQ0bNjQtfN7IRMRMk+pXr16UZ9DnTp1VHl5eV7b5SQyEcA5ZCJAYZCabG+8
8YaeRyzk7xvTp0/XfU/qy8fWZzt27Jiea3zu3Lmoh9SuT4R+DHgHmYh7yERQ
LGQ9lltvvTVqLZZdu3a5dn6vZCKmYq7BSiYCOIdMBPA+yTFk3kss+TtH586d
df+LnUMzadKkpPNqrNCPAe8gE3EPmQiKiYyRkL8zjBo1yvVxEV7LREzFWIOV
TARwDpkI4H0nTpxQR44csXxt7Nixuv9t3rw59Jz8nUTGjsgYWqk5Ir/35blU
6MeAd5CJuIdMBHCGVzMRITVYa9WqFZWNyPrFXmyrHWQigHPIRJCp48ePq3Hj
xum/SxaDdN/PoUOH1Pjx41XPnj11HTOZpzJ37ty4OSy5JnNqpP9JbmKS+iLN
mjWLqiMiGcny5cuTHot+DHgHmYh7yEQAZ3g5EzE1bdo0rgar/F2u0JCJAM4h
E0G6Tp48qe/DzXvudOdneE0m72f+/Pl6W8lEzPocR48eVV27dtW1Tw8fPpzr
Zoc8//zzqqysLO55+fuItEnGiHTs2DGUjSRac0bQjwHvIBNxD5kI4IxCyESE
1F2pX79+VDYitVcK6TpAJgI4h0wEdp0+fVrNmjVL16tq27Zt6B67UDORTN/P
kiVL9HayHq5Z79Qk+Yo5Z+Xs2bO5bL4ma+u1bt065X3T5cuX1dSpU3W7ZfsL
Fy5Ybkc/BryDTMQ9ZCKAMwolEzEVcg1WMhHAOWQisEvmllRVVen/NnOBQs5E
Mnk/knm0bNlSbyf3K1YmT56sX5d1cGNJrbMtW7bYeqSqEy9tlzk7W7dutf2e
5Xe/tG39+vWWrzvRj+fMmZP1MQAo9fLLL5OJuETqMpGJANmTTERquxZKJmIq
xBqskonIZ00mAmRv4sSJZCJI27p163KeiZh5Rbr7xI7dsMPu+5kyZUporEWi
3/fy743msWLn0MyePVu1adPG1qN///5J2yzrykjdkHRs27ZNt2vhwoWWrzvR
j7kWAM6QvkQm4g75rMlEgOxJJiL9qdAyESF/F6xdu3ZUNtKgQYOM/j7qBslE
5LMmEwGyJ32JTATpymUmIpmGzPMYPHiwnvNhl/zOkroaMk4j3VzEzvvx+Xw6
C5FtpG2JVFZWqscee0xvJ+8jF5YuXapef/31tPeTOqzSrkS1VslEAO8gE3EP
mQjgjELOREyFUoOVTARwDpkIMpHLTESyh2HDhuljS8ZhJxeRPMScFyL/m26m
b+f9SO0Oc5sZM2YkPV6nTp30dlLb1Gmy5u706dMtX0v1vvfs2aPbJXN4rJCJ
AN5BJuIeMhHAGcWQiYhTp06pevXqRWUjdevWTfj3p3wgEwGcQyaCTOR67ozc
2w8dOjSUiyS71882DxF23k9kzREZp5FM3759Q9s6WWt1586dev6O1TgYyWy2
b9+edH/JUiRvSiSyH2daF4RrgXuKsXaLV99TPtqV60wkF+/JiWNme4xM9icT
cY9X+3i2vPq+3G6XG5mI0+8p2fGsarA++OCDjrcrk33JRNzl1T6eDa++p3z9
nYtMBOlyq55IqqwjMjvJNA8Rdt6PWTtVHrJ9MuY4F3lIjuGE/fv36/Vx5NhS
vzXyIbVHOnfurLOSY8eOqaefflp/LkeOHAntL+3o0aOHqqioSHiOyH6caZ/m
WuCeYvysvfqe8tGuXGciuXhPXhhrlsn+ZCLu8Wofz5ZX35fb7XIjE3H6Pdk5
np0arNm0K5N9yUTc5dU+ng2vvqd8/Z2LTATpciMTEWaNEDmP3ONHZh5O5SHC
zvsZOXJkaJtUa72MHj06tK2sk5YtuS+S9X3NY1o95s6dq7c9c+aMnrMjzzVv
3ly3e/z48bq+q9Q6SYZMpLAU42ft1fdEJuLeMclEiptX+3i2vPq+yEScO16q
GqxkIsXNq308G159T2QiKBRuZSJC6okMGjRIn0vGSMjvHnmYYzGyzUOEnfdj
5i/ySLQOr0nWdTS3XbNmTVZty4T8XUTGiEjflnEjdmvOkokUlmL8rL36nshE
3DsmmUhx82ofz5ZX3xeZiPPHk39viq3B2rVrVzKRIufVPp4Nr74nMhEUCjcz
ERGZi8hckcgarE6skWbn/YwYMcJ2JjJmzBjbY0q8RNor6wfLI/K/03lkuh8P
Pmsvv6d8tEvO+d577xXUe3LimNkeI5P9ZR+pX+32d1yKD6/28WJ9X263a9eu
XfqcBw8eLJj3lMnx5O+B1113XVQ2kk27Mtl37969ofs4N7/jUn14tY8X43vK
19+53nnnHUeOg9LhdiYiJBcZOHBg6LxO5SHCzvuR+Sd2c47IeTbyO6tQJJub
w4MHDx48ePDgwYMHDx48Ej9QOvKRiUj+IWNEzPNK7uDU2Ew770dqIJvbrF27
NunxzBoo8jh58qQjbQQAAAAAAPnndiYSmYdI/RBzPRqZz+Lz+bI+vp33I+Oq
zW0WL16c9Hiyvots16FDh6zbBgAAAAAAvMPNTCQ2DzFrrDqZi9h5P1I3rFmz
ZnobWZc3mSeffFJvJ7VWAQAAAABA8XBzLV4zD4mtHxK5Tu/w4cOzykXsvh+z
zmu3bt0SbnPu3LnQsTZt2pRxmwAAAAAAgPdkkolI7Y90aqJG5iGDBw/WNVZj
yXNmLiLbZlpz1e772bFjR2i7EydOWG6zYcMG/XrHjh0dmdcDoLTI+tkA4DVc
mwB4Edcm5MvKlSvTykQOHDig55O0aNFCbdmyJeX2kXmIjM2wykNM8ppkJrKt
rNGbSS6SzvsZNWqU3m7atGmWr5tzejZu3Jh2OwrB8ePH1bhx43Q+ZMehQ4f0
mj09e/bU42t69+6t5s6dqyoqKnLcUsCbFi1apPuQ1aNPnz5Jx5fRnxJz+9rE
d4Fik69rUzH3pXSvSyKfn2UxfxcoXJlem/LdH+hPxW/ChAmhDEF+TlOZOHFi
aPsBAwYk3VbGVtjNQ0yxuUi64zPSeT+XLl3SP9uPPfZYXO6xatUqfYyZM2em
df5CIOvnyOdk1lSxk4XNnz9fbyvXg4sXL+rnjh49qrp27arat2+v1/EGSon0
I7MPWT2kLnOi9bToT9bycW3iu0Cxyde1qVj7UibXJZHPz7JYvwsUtkyvTfnu
D/Sn4iXjkmbNmqXnqkgeYP4sytgP+b4XLlyozpw5Y7mvrF1rbi9r2iYTCAR0
DdOBAwfaykNMsq1kKJMmTdLHyOX7kXNJ7tG6dWvVr18/fU7JKWW+zOrVq223
uRCcPn1af04y/qVt27a2x9MsWbJEbyefS+z3Idc3+ZyfeOIJdfbs2Vw2H/AU
GV8mP/fPP/983EN+T8qYNSv0p3j5ujbxXaAY5ePaVIx9KdPrksjnZ1mM3wWK
QybXpnz3B/oTktm/f7/tsYPy85PJHBjZx04e4pTKykr9vrZt26bKy8tdPbdb
ZNyn+V2YfTzV73fp7y1bttTbvf/++5bbSO5l1oEBSsGFCxdUq1at1AcffJDW
fvQna/m4NvFdoBjl49pUrH0pk+uSyOdnWazfBQpfJtemfPcH+hNQ/OzWop0y
ZYreRsbRJBprG1mvlvFjKAUyjrJHjx5p70d/Ss2taxPfBYpRPq5NpdCX0lmP
IJ+fZSl8FyhMmVyb8t0f6E9A8bPz+11quch1QLaRGi+JyBgbc87S1KlTc9Vk
wBPk3w1l/qj8m8B7772nPv74Y1v70Z/scePaxHeBYpSPa1Op9CW7mUg+P8tS
+S5QeDK5NuW7P9CfgNJg5/f77t27Q9vMmDEj6fE6deqkt5M6LEAxe/vtt0P9
wnw899xzuqbzJ598knA/+pM9blyb+C5QjPJxbSqVvmQ3E8nnZ1kq3wUKTybX
pnz3B/oTUBrs/H6PnD+7dOnSpMfr27dvaFvqDKGYdenSJe53u/mQOnybN2+2
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
HIs=
         "], {{0, 642}, {1093, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{357.3333333333332, Automatic},
       ImageSizeRaw->{1093, 642},
       PlotRange->{{0, 1093}, {0, 642}}], 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzsnQWcFPX7x+luMDAABeUnJaEIgoEKKiCCdEooHQooYCAgJSEoiH8VEDBA
uru7BemQDoEjjjw4js//+/kOs8ztXu/uzADP+3l95byb3Zndqc883yeeaNzu
vaZJEiVK1CGV+s97jTqVad++UZeqmdT/VG/boUWzth9+8Hbbjh82+7B9icZJ
1S//Spwo0US1fDL1MwRBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBCDjh4eG4ceOG05shCIIgCIIgCFGybNkyjB49
GlevXsXNmzed3hxBEARBEARBiMTChQsxePBg7Nu3D5cvX3Z6cwRBEARBEAQh
EvPmzUP//v2xY8cOXLp0yenNEQRBEARBEIRILFiwAN999x0OHTqkYwIEQRAE
QRAEwU2sWLECf/zxh8SvCoIgCIIgCK7kyJEj2L59u9aqt27dcnpzBEEQBEEQ
BCESrGV17do1pzfDf6i1OU6fBv75B1i0CDhxgh8wKOsJCz2NC4e34dS2Rbh6
7gQiwq/fWYZxwAcOAIsXA3v3Asxjk2cBQRAEQRAE26AfNiIiwn3j5k1EzJ2L
iJYtEZEnDyImTULE2bNBWc/JLfOwaXgrzGz9JI6smaj0a8idv+/ciYjBgxGR
Ny8ievRAxL59xrY5/f3IkCFDhgwZMu67cb/On8+ePRuDBg1y5/jiCwxq1gyD
qlbFoC5dMKh//6Cs55uvv0SPjs3webOq6NutC74dYFlPz54Y9PHHGFStGga1
aYNBvXs7/73IkCFDhgwZMu7LsZjzvfchv/zyC75QunDcuHHuG336YFzDhhhX
sqQxKlTAuNatMW748ICuZ+SQvviuSyN83aCkHp82qoi2bdtiONczbBjGffIJ
xpUpY2wD/1X6eVy/fhg3dqwj38uoUaPwsdLQ33zzjW3r/Pnnn9GqVSt8++23
AX3ffup7bNeuHUaOHOn3e3311Vf47LPPEvx6vrZbt27xek0X9RwV19cMGTIE
TZs2xQ8//BDjcv/3f/+Hli1b6uuSXfvX7ePPP/9E586d0b17d8e3JboxYMAA
tFHPtMMDfH2KafRWz88dOnTAmDFjAv7erI3ouQ4m8D143WitrtkJvW7wXGnW
rJk+d+LzGp5ncX0Nz1+ex3FZ9qeffgrKdfBuHmPVfTA+10EnxsCBA/VxSL1j
1zr7KP3Svn17fb8O1Hua10H+ez/C/cdz0JXwGULdt5E+PZAiBVCsGPD118Cx
YwFdzentS7F5RGtMrp8OE2omxXd186D7Jy1weO923Ny1HUpAAHnyAKlSARky
GNuhzlGEhAR0O+LK2bNnMXToUN3PzC6Yy0d9vGHDhoC+L2sG83np5MmTfr/X
lClTdH2MhMLXTp06Nc7Lc17m999/j/NrWBe5a9eu2L17d4zL7dmzR2v4VatW
xXlb7nUYm8/efTNmzHB6U6Jl7dq1+r54grH2NrFo0SL9fBMaGhrw92b/GT7D
HT16NMHvwdfymTSh1w2eK3wO5bkTn9fwPIvra3j+8jzm+Rwb+/fv174C1uIR
DJjfze9v2rRpTm9KtKxfv14/fx0LsHaIiSVLlmDYsGE4d+5cwN7z+vXr2o8h
etWFMLdp9mygYkXgqaeA+vWBlSuBixcDuprwa5dxYtMsLOtZDlMbZcWf1ZPj
rw+fwO6ZgxF6YCsvgFAXbqBAASBJEkO3VqsGjB8f0O2IK7w+8By4cuWKbeuk
XghR+jzQdX0DqVcvquPiwoULCX49X3sxHscWY4ji85qwsDCcPn1a/xsTold9
Mb9rN/dB4bnBZ8nw8HDb1sk+hrwWBKN+YSD0qr/XjbieM/68xrxuxCUmUPSq
L/G9DjoBjz8ehzcCnbMdA8E4N0Wvuliv8vrB56Hp0wFuI7XrmTNBqRNwJeQI
jqwah8VdX9Z+1kl1U2PxF6Wwf96PuHb8X9xavw5o3RrIlQtInBh47DGgcWNg
zRrg/PnAbs99RCD16r2C6FXBDQRCr95riF4VnET0qov1KuGzCWt00W9Gf6sJ
527ox+DfAuDPuHUzHNcvncOOCT2woPNzOi5gQq3kWNX/PRxbNwU3Lp/HLc53
NGhgxAQkSwbkzQt07Ahs3AjY6Ou8l1ij9D7nTM7wOUTQHD58WM9dbdmyxelN
Ee5j1q1bp+OO/vvvP6c3xTVQuzPm4++//3Z6U4T7ENGrLter3pi1WeljZcwW
/a+chzB/789bKw18+dRBbB/3JSbWTY3xNZJgasPMWNGnAi4e34OboefpEASe
fdbQrPSzZswIfPcdH7wDsg33G/Srbtu27d6oGxwgOK/G+6FoeMFJqFP/+ecf
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
pQqoVqWyXl/1p59G9fTpUV1p1upKs1bPlQvVS5dGdW4/tyuK7eV1y/yc5vZR
x+RSr02TJk2kbUuaNCkef/xxFChQQC/3uvpsb731VoLP76pVq+r18ngw9+cD
DzwQaZ0PPvig3ldcxvu4iuvgZ4nquHj00Uf1erkNb7/9drSvr6L2J5fhcf6/
//0PqVOn9rwHjyvuK34XXC669yir9k9ptS/43Vpfz+OXx3T58uV9XvPOO+/o
a0Z+9Txi7ovEat/ye3r11Vf1eWFdvnLlyno7qcszZcrkWZ7bzO2zHsfcVm4T
9/9j6lknPY8bF1zzAzm4T63nMb9/6/lOrc5z7YknntDXriRJkvgcI/z+Hnro
Ib1c0dvPozwOzPesFs155e/wvt5x3dyGhx9+2Gc706ln09x8Nr19veDreCwk
dN0VK1bU7/H888/rY5vfD6+h1usAj1tuEzUVj6OErovHOI89vi/P8/juXx7X
3A4ew+b28ft5Wl0L+d3FtG38G5fh+cTPZO7vp556Sl9vorommNcsfs+8Fprr
5PnG76tcuXKRljevHfxsadOm1cumSJFCH3v8fVTbxdeY1wjzvnmvDPP7sw5+
b9bzkvuDx3r27Nk935n34PdDHxj9EObrzPfjMRXo7eZ5br4/9731+uF9zzLv
CzwGuRyvO3wdP3tC18/7LI91vl/BggX1sZdM3ePN9VFLcFv4d94b/DknuZ28
nvB9eX7H57XcRrdCvcpr2eXLl/V5ejWaXCNrPEDPnj2xZMmSgG/L0aNH0bhx
Y3Tt2hXTp0/Hnj17cO7cOdy0qx6p2VeAda1WrYLaEGDmzBjr+LMWALezVq1a
+OabbxDKWlTRLBcedgWHlv+GhV1ewOT66XT+1byOhXB0zQRcCTmKW5cu4ZZ6
L11ni/lfjA1Q2hfNmgHbtxu1WRMQG3DixAldi431g6Pbv4Hm1KlT+tifOnVq
QN5v2rRpPs8ve/fuTfD7ce6S9YS5zxJyfHG+r1WrVhgxYkScX8Njg9fhuJ47
YWFhatc3w++sZREF1ngAXoupaQXjeJ83b55+xuZ1xI0xJOHh4Vi7di2KFy+O
TYyjtwH2vVm2bJn2h549ezZg78t4AB57PC95PvkDz2lqg8Osjx1PeM3hPZ6x
CfFhlbrW85kyLtfGCxcuaC2xg/m6McDrg6m/2RfyfofXsp07d+o69tRD//77
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
OI6xl7wLoV5lrvXYsWNj7Bnrj16lHg27bdSupj7lvzeUmfrVDv78809kzpwZ
77//vm3r1PWsWJtg6lSjjj9znthzasUKQ0f64V81e7FePnVA519pH2utZJja
5AEs6/UWzu3fgJthV+7UuTp4EGC93QcfNHQzY1rZT4AxtS7taUGsepXz+/SX
xgfeP8xnFY5u3boFaUvtQ/Sq4AZEr/oielVwkvjo1dDQUGzcuBGLFi3CtGnT
UKZMGVfr1bjkTfujV6PiojL6XPsrm6SMvbHs6tl643Zu/s8//4zevXsj3A6/
IrUifezsH8A6BczPD2DNiJs3ruHM7pXYPKI1ZjR/TGvWGc0exZYxHRGyZ41H
1+p5/y1bgK5djXqs9LNSszIPjH2xXFrnyluvpmX/sHjCOYR7qYeAVa8yp1D0
quAEold9Eb0qOIm/8QBHjx4N0pb5B/Vq8+bNY12OerVfv374559//KrBb87/
b1HWV1k+ZVWV/aKMOVj0t9oFNQ/3J/sK2Abn/5n/5K2ROVfPv/nha+XcP3sJ
rPimEqY2zqrzr+Z89D/td71y5rBRl5XQ18s+XM2aGXWuGBfAOIUmTQD2r+X+
dVmdq0Do1Qilw5999lmPZv3ggw+CsKX2IXpVcAOiV30RvSo4weHDh7F161Y9
t0/dmVC9ypwPN0K9+inrc8YC9SpjPqnZd+zYkeD1UavSjzpUWW5lyZWxztUr
ytYqO6fMrnjWsmXL6v3JXHNb+2CZUBOa8/T09fEY8TM+gH7Wfxf+gqU9Xtc1
rjjYC+vg4pG6nsAt63uzZgA1G3OvOHLmBBo2BPbvd52P1apX69evr/2jCYHn
rrWHAJ+/7lZErwpuQPSqL6JXBSfgHGKzZs30qFixYoL1KnWvG6Fe7ckeSLFA
vdq/f3/s3LnTrz5Rpn91s7Ieyh5Sxp6t/LeSsvnKmJNlB7zOtm3bFt27d3em
xhHXyRgB5qs3agTQz828LPbHSiCsu0pfKvuzzm77FCbWTompjbNhRe8KOLNz
ue4z4IHxqpMnAxUqGP5V1oh6+mmgRw/ArvoJccRbr6ZnDEMCeeeddzya9U3W
FrtLEb0quAHRq76IXhWcgPP49Cdu2bLFL//qoUOHgrSF/kG9Onjw4FiXC3T8
6gVlq5TVV5ZTGTVrZmUfKVumzJqXZQfULU8++aTW47Zx5QoL2hv9ptS1Dblz
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
XIRdOOVb54o/MzeJx1HevFBiz8jBYlzn+PEx1rlyo14lHTt29Bx3zP+LK1at
Ss3LmgJR0bx5cyO2pUEDn79Z9Sp99qJXBScQveqL6NV7F2o5xjcyBos+Czdi
1auffvqp/h1rJZr+FQ7mCUVVj7FkyZKu06sDBgzA7t27MWLECFv1KuFcvrWG
AmvxeOdN8XtkXIC5DP2su3btivL9/vnnH089Ab4vYwut/PTzT9pHtWzDMoQq
s2pT/hym7Dpino8ONPT9sq+n9/xv0DD9q4xlKVzY0ImZMhn6lX0NOF8fD7QW
Vfvo4rFd2DdnKGa1ya1rBjCWdXmvt3B8w3TcvH7VV6+yNgTzv4YNY6FSQ7Nm
zMhCCgD9iyEhd5VePX/+PLJly+Y5TmeyD24sWONVU6dOjdmMz/CCzzPsC/fA
Aw/o5fhMzOdLK1a9ynquolcFJxC96ovo1XsTHt+m1uCgtnMsti8GrHr1o48+
0vdO5lSZ2805/+hqi7700kuu0qusu0/tyevMqFGjbNerZNCgQZF8p8wt8d7v
1KzMU+G9Orr66ayNxTl2833oZ/WGddv5N+ZiWWMBWddqs7IxyuYpu6DMrjpX
zBU3t9lbhwQF02+5apWRq898J9aWevVVYOxYCsIEvW142BWEHtmuewnMbvs0
JtRMhikNM2HzyDY4s2uFWmUUvlv6lalZ+dxXsKCRf8XarLVrA6w5yvwwr+c+
t+pVMnToUM++5DN3TNcv63HPmBfWvyOcY+BzHONXWAvLem0xR21+PxasepW1
CESvCk4getUX0av3How5LF26dKQehxzdunVzetMio+6f10+cQKtmzfT2vf32
256eixz0gRw6dCjal5cpU8ZVepXxn/QD2ZlvFRXmXKc5GNcZFexvEN3f6Ce2
aoXrXnk71A7W3rD8mctQl/6t7Atlzyqrp2y1MmpWO/oJrF+/Xs/hsu9BbPVo
Awp7pTIuoHJlgPU9+b0yHtjLvx0fwsMu4/SOZVg3pAEm10+H8dUTY87H+bD1
9064fjEk6vwrxqr+8w/A2mbZshmxrOo8Avs9MQ9MaTGrznWzXuUxxmPPPMbY
0ywqvGsRs38Gn2WZW8j/Z5wMf+etU60xrtaaGVa9yrhw0auCE4he9YV69dFH
HxW9eg/CazBjv6zXZdfoO/p5jh/H9dmz0apePZ97COd0veefvWENRtd8HkDP
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
c6JRwb4H3nOrnPfv2LGjzqeLC7/++quuf5khUwb8se0PLFF2VJlTsEett684
6NC/Fxpq1GU1/a6EWpZxrIx1jadOvH75HA6v/BOLPiuByQ0yYFLdNJjf8Vnd
X+AyewlY12PlqPru1bUCr78OqHNQPbRAXQTQ5LnnkJ29sFzYt9kKffdm/mCG
DBl0rlig4DloagRziF4VnED0qi+iV+9eOJfP/Va4cOFIv6c+MK+17LUbVc49
50NNHysHa8SfO3dO58zGBepT+lSZL8PYg7fevqMBcvTOgWfCn0bV/0rjt2Gl
EFL6GZxNlQJ5btfT4sio9NLnn7RDt3b18eYbZe5rvWpXPIAV9g4wa1qaOSas
PWaFPX94/FAbPPvss+jcubP2xUbE0S/I+APuI+u9v0CBAh6f5q1oLNhQ3xQr
VkxraPakdQxqSWrYbdsAnqMJ0InUpQeXjsLcj/PpmgHsJ7C022s4umaC7o8V
bW+Qy5eBQYNwq1QpXeeKo8lDDyG70n+654GLfazEWuuE/YcDAZ/3rXWqRa8K
TiJ61RfRq3cv1r5V62/3rOH9yTp/y1GtWjXPa0aOHKl1BOHvva/NpUuXjnZ9
pp7gHO45ZQcuHkCHjh0i1ff8X7H/4YfLP6D35c9xcMYQhFeuqGs+VrOsg8sv
W7oUp7YvweKeb6NG+VdErzoAe7Ra9z1793rn39HveoVz1/GE+VjUuN7HF0eX
Ll30MubxtEbZBGWsGcCYEjug5uZzHI+fmOIZgsrOnQCPkTJlAH4n8Tz+yc3r
V3Hpv3+xZUxHzG2fX8cFTG2URce2nt6xFDdvRBMjy/184ABu9OqFq08+qeMC
mqiRXQ3te43jc6tTMM6E/St4PPG5w5/rAOsAsH5bVMeq6FXBKUSv+iJ69e6F
8XfmNZU10QnjAvj/Vt8ZB+tOEtYu4zKEv7Muw1yc06dPR7u+a8r2K/tRWRNl
1Zbf0busE0T9eOLyCRy9sAP/rv8LV6tVwK3sD2OI1/V/hDrOzh/aiu3ju2FS
44dQrdwLolcdomXLlpH2DfsV+MvEiRP1PK35ntQTjD9h/Wv2dGWNT+ri88rW
K+usrJIy5mDNUxaCaHqMBoGiRYvqbWR8RCDiuOOEOU8/ZQpQs6ZRXyp/fuDT
T4FduwzfZzyICL+OU9sWK43aDFMbZ9WadW77AtiqNOzFE3sRHhbF8wbXrzR7
6KJFONGkCW7kyoUm6pqRnXlYjG2dNMmIdXUxfO4xjzH2A44v7EPLnl7WXq0c
zAXgczvjdDi3IHpVcALRq76IXnUvzGlljx7mYZt96a2wBgv7QZk9i5izQ93I
33G/1qtXz3MNZn4383nokzXjBziPZubcsLZRVOug/4vz/syNYT53s13N8GCN
B5G8RHI8G/EsPvjtA7T5so2+9ut7IHOQ16wBOnXS/co3qO1JabkXtH/1FYSH
nsW+uUN1D/Sx1ZOi+hvPiV51COrGN998M9L9mnUmEgL9sOzVZX0vxkazZpAV
85nokDI++zynjHWuUilrr2y5Mh5zduRiDRw40LOtX331VdDXpzH16qhRQLly
Rvwo60sp7Qx+96wdEI9cLM6pRITf0DEAS7u/rmNZtWb9OJ+u1Ur/a3SxAaeO
HMEOpU2v1aiBJunSIbv6HtTDLvDhh1APGMb5nMC8sGDDeg/WOqvR5ZeyVxyf
oQhjQVg3gD3bEnv1gmYsAK+De/bs0b0F2LMjh7qGiV4VnED0qi+iV90J5yet
86nMcWF/wOjgsc3eQ8y9MvN2WLff3LcczKtlj2zm1zCGkMuyJhTrBXhj6lT6
urYp6xfaDzna5ECiZLev7+kT4Zlrz6Ctsk3KTH8NuG7m7Kr1nk+eHE9a7gfl
H3sM1yaOw7l9G7CyfxVMrJtK6dVkqFmuuOhVB2HcqjXHhL75+NbUZ59Lsya/
OerWreuJPYmKy8r2KKupLIMy1rl6RBk160FlYUhYvaf4wute1apV7alxRUy9
evIklHgCcuc26ver85F5T5g/36gfEOe3u6UH+wUcXT1B6dT8mFg7BSbXT4f5
nxTRvQTCwy5HqVf/U9uwTT0TX1uxAk2efhrZqZs5WCegYUNOvMdrW+yG5455
vBUsWDDKulXsdcW/m/n+3oPHLWP+w27XF6MONvVq8eLFRa8KjiB61RfRq+6D
fYaoT3l9rV27tmdulfNWk1mLJgrMOICGvMdY4Pyr9/WZujU26Ns6oGy4spf3
vIxkuSxzZkqrPj3raXylbIeyi8o8vlX6h0qXRoTa1gqWdeZX9+JQdU8I3bkO
G39ujllt8ui6keNqJEftt+7veAA761lFB31K7Flp7i/WTN+yZUu0y7OPM5+p
uM+o9ay+KurduNT1Ze1VatY/lFVVxj4CyZUVVcZji7EnfGayC9YKYJ0uxrNG
m6cUSDifwfl/njOszaq0kY5jZVxrFHMdscFY1Usn9+s4m/mfFsH4mkkwqX5a
rBvaQPcSoI/VO4+K9c22bd2Ka6dOockbbyA7+xlQNzNGgTqtY0dg0ybj3HYh
1KcFb9fD42Dv4aiW8e53xcE6KqNGjfLRuFa9yv4ColcFJxC96ovoVXfA/A/2
rKYPlTnZ1KabeJ8AWzdu9dQfYo5BVDrC7DPMXgFWzJrXHNzPjMmKql6ACX1a
nPv/XVlrZaWUpah4J58q43sZ8f6R9zFaGfsTXVGmexTRVzRrFlChgu7j84Ul
fjZLihTYP3AgrqxfioOLR2JOu/9haJMi6NGgFLq//xKqVHj9vtardtezig7W
+bfG8vGZKToN7d0ryxzUvNHNy0bHcWW/KqNOTa8sjbICykYoo2a1q27Aq6++
6vkc3C+2QP8z60tR33MwrsaP2nLMvzp/YDM2j2yD6R9mV8+ESTCr1RPY9EsL
pWX3Ifxa5NhYrVfVOjnf0kQ9G7PGHJ83kSUL1MUG6mJkbBc1dBR61w1Ye/Yx
NvpiFH1ue/bs6VmGfgD2Y4sq/olY9SpzV0WvCk4getUX0avOM3PmTJ9+1oUK
FYq0DOdnTR8Wj2FrvdTLly97Xkety3sQ4TKMVaXG5fX5ehx8JP8pGx06GvmH
50fawWmRODQxkvdPjrQV0qLUylLoqYzz/8yV8cD7A2MV6tfXvR4nJU/u6bea
LEkSLOjaFRH/ncDxtZOx9vu6uofkwEbPo9enzTF40CBUv12n4H7Vq07HA1jx
rhnAnlVR1QegjqU2sC7LZ6aY+qrFhOnLz6dMvZuOZS2ujDqWtdPs0Ks8lkw/
XEJjeBMM8/WttRnMmAHvEUeOb5iO1d/WwKS6qXWdK8ay7p7eHxeVZrX6jiPp
1SZNkF19fvz6K1CqlK7roUeRIoZmpb5zaSyrNb//s88+8/k7Y144T8Vr6C76
tGPAqlcrV64selVwBNGrvohedRbWf/SO++d46aWXfJZlrKn59wYNGnh+z7gr
a02p3Llz631ZRN1nqIOjq+vuXfOS97F2/dohZaY7dVmTtk+KXMo+V7ZWGX2p
Hu1g3kPpE2IvevU5tqvXpLd8nu+UHo24GY7rF8/i71EfYcr7GfX9k76fzSPb
4uqlC2jVsoXoVRfBHqvWY5Hz/VHVXGVMgFnDlzl+rN+bUK4qY8zqZ8oKK2P+
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
ojvuuCPVPc7B/Oc637311lspv/eWM0XXavYsn332WZ/fj+mzSF+quSq+VVFf
BfNPxNOWRi6qfJTc+MeN8qYKcq7kUMLZUzxgcD4ZO6mvat9eZiiumst2zvs0
b56uBsDkMfavna09AIY2zqNrI/BQ3Br7l5w85Ht/GTjEI488korjpNcPnnoG
+pWSg6xfv35AfJV8fVbhq+wbTJs2LeXf8FVf/Jiygh7AE/AsRhNgv4fx24Db
hBPwKHtfd7NPE2ruzBgwT8UTKtAEoGkdrAIvgXACfwT2oX3pPREIPPJVA5Pn
hKfij0q9Abn2AM594u54SZj4vYx5vbxEN4jUezj0Flj11/tyZPuatL2u4KOM
YfSQLVnS8rrCN0Bdm7r+Cm/WIF8Ldr6KJx36NfYBzfXncAcH4YDDV90RCr5K
DQe9wF05q2vPQWqR7Z6L+Kt6A94A/uQdjFb1912/y/Wdr5ec9+WUHE3V653P
IRG/R0iJn0pI41ONdb1Vluih6isYo8k/sIfcvbtsU1y1lO1c1374YbngZT9P
zxEXLsj6mE91bpX+3yOaF5WF37+sa3gvXPA9l2Jqpjjwf0Hz4Qsyogd4+eWX
tf9uVgDzvZ1T+MtXua7hCmnVpWUW0PCVK1cu5bulNos6skC8jAMFey+u4wka
ilCCOkz0qvQBYY07VAXeIfRkDifs3vWmJ1wwkS5fZfwgv0nfi+efF6lbVwRf
wAD0IfS4ogYrfvw3Mv2Dh/S6GM7KuLNkYFs5tGmJnDnhYY8NLStrcupIqbei
n4G6BrXf1ZNPWv5XR4Pbo8XOV+vVq6fPCTW35ntA74SvtAMHoYTDV90RSv3q
t99+m6oH5zce6k3RBdjnIeqygrnfB18dGTNSipS4qKmMuCVCrj13rbyqgpwJ
fv/sAV4SOVUDxnF8VhXHP3XPPVLFVk9dvmRJOUgdrRff8XOnjsvB+AUy/+sm
WgdAH8XZ/WrLlpmD1dOf9zmHxd6lvY72r7/+8vlj2Pmqv/3tsxJfdYW/fBUv
f84BfcDC1kveR6Dp4L60+0zhhfXrr7+GTSMAr6pcuXKqsQINRaiBlxU8lfHB
eC0zpvD/jBf8N5Q9BegdDV/i8+L7Fmyky1fJXZLDZP+9aFErv/nWWyIzZ1p5
Tz+/+/NnT+s8a9zYL2V6z0dkWJP8Ws+KD8mSn/4tu5eN132gPYK9f163WTOR
a66xOCt61tdes7RQcNog1cba+Sr7fmicqMOw+xa/xus6cBBCOHzVHRnlq2jM
qItKCz169Ei5x+kT4qneHk2afR7Cv4Y9P39hanyp+advDf9mvDeerhGREXL1
q1fLs0ee1X3C8VHdpcJ4MF5SwHd/+HCRBx+U12xawzxRUbLwjz+86szgGScP
7NA+3vT6jm6YU0Y0LyJrh/XWHom+gj1wu2cu37c/cPiqxVfHqznXnEP0NGiB
sxqoVae3gP1eZa96WTr90oKJA2p9Znr3mtrLcPfnQluErj1BxVoVcNlQc1a4
pPEJQPcdzL6t6fJVrsG5c0Xq1BEpXFjUCRe5+moGdSbTgLWjx/dulk3Tf1Hj
zp16Pydae7TmkkX/aa376J05ftizfx6clfxu/fqWR6y6BqRUKZE2bSyNPt7B
QVg/ufJV5kdAr0SzZmOfIdzaGAeXFxy+6o5A+CrzRvfu3eXWW29NuX+pq/q/
//s/GTBggFu/TXiqmWP69u3r9nxoGV21A2+88YZP78XoU/FH3K1igYq3Y9+W
35f+rn+GPpIc7xO1n5AxK8bILyqmqOB3Wc7r3xcwHnN+2Qdr1Ej+LFQo1Xn7
jv6FzG1ecqvnT5+QA3HzdN3u8GaFZESzwjLl3Xtl17JxOrfqC8gD2j3HGNv9
zbc5fPVHvQ/Buspe40Rv4g4dOmh9ABwlLi5Oc1h6JnBQ8wHHMP9O62DfcuPG
jWke9HDzdOA1OXnyZI8Hdft2f1R4I98hr5dR2D+Tee8JCQmKNs3V3nd4L9uv
d7QnnJ9wAa6KTyt7M/VUvKeCPiNpebOieUrv++Eecv1O4EqzZ8/Waxjq0VnP
4Aln9OF4e/Xq1UtrSPCwNn9nrg9/+Gy6fJUxhLEG/RU5Vvghec3atRGKWPwx
AFDDefLgDtm5aJTezyHPyt4O6+VZ7O/M/k1OHfGQZ+X98Nmo0W/QwHo/cOgb
brB6YMEf/awH8wRXvsq1bjxsmjdvnnLt0cvGgYNQweGr7vCFrzIOUtfC3Mk+
SKFkjoQGnVpi13oIxjx4K+tR+IvdO551KTosOC+5WfoAuPrWPPDAA/pv6UvF
+Ovqp2PmNOqp4xPiZcbCGdJvaD+p8VENKXi3VR8fERUhj9R7RPfl5vX+/udv
GT95vExdMFWWrlsq8RvjJWFjgs4N2+ePLO+3yvsjn6XO+wa1RihkO28VixSR
eV9+KRvWrJHt27alfKajHvRdR7auknUjP5FRrcto3So6sg3jv5Zju+N94pxc
N66aQnomUWPlT4+k7MxX6c1Ef9G0DrvnRXY4GA/S+7xpHa497fw94PmBvG4g
R5FiRSR/sfwSVSxKIotFSlTBqKCcu1AdaC3T/Tzq91yHRYsW1bkH1vZuj+M5
uJbV2F1MfVfF1BqhmPqbYupvMnIuixYtIkUKqTEsf24pmDtCCuTOIQXzREqh
fLmkSMH8UrRIYc9/y/tRY59+P4pL6oP3zfWn5qaMfsecC3NO7GtI7mfX8xuu
6845Lr+De9PoKVmXZ/b7yQoH96Q5J/b5NSvOpXYtbGYezK+Z9p0xRzAuR0VJ
vgx+jgJ5c+p5goM5Qs8PPs5BBW2+WekdRX14PpOj5zn9ORf8XVbmq6y72rRp
k+7BWs/1cfD3rl27Zonj3Xff1TnN9A5XPQ8HfUUDfU3qNc25aNWqlfaP4MDb
ivN1yy236PxzWtcc10WpUqXkuuuu0we+ahz4i+B5QM23ec70DmqdXL+vBm0a
yP1t7pcSbUpIzjY5JVebXFKqTSmp3qa6tHqrVaZ/X/4e6KZZ97GuZ/3JPejx
sa+8Il35TtW569qyZdBev1PHN+TfLV6Qpg/fJC/cVVSeqxSljkhpdP+/pNXz
D8mbr7WUzm93lK5qfZ7qb197Tbo+/rh0LVdOuqrvu6uaG7qWLCldq1eXrq1b
S1f1eTJy/dFLmj0++rfT48b8Do+M9MY7+C3XHnuK5rpD98p1x4G3jb/XnKeD
msfMvnacI7QH96YZ5xi7Mvv9ZIWDe9OsIcl9MpbzM/tj8J1irjB9G+H9/Nvc
Y/RPpfe1pzwJPYg6derkcU4zB2uH++67T9/L1BSk9/21atNK6jWpJ7Xq15Lb
n7pdCt+geHWkh3GjcG4pXra4Hm/wGWesqFu3bqqxgbnQPgZ0cR0Ts9rRtq10
VeeolRoP7Z/1IcZpdZ67qvHV23N06dJZOrZrIy2f/j95/pY88uzNEdLovjLS
qu5D0qXTxTGe75xzwrjNuapTp47mCXZfF8PdMzJ2cm1w7fBcjRo18utvmV+z
Ml/NiJ9Vls/zuwAdqd3rA41AW3W9BkMj4AnsAbDfY1/Dci3OmzcvJK9ngIYI
T6uOKm5WkSM5HlHxHxWh1rIasI+BR0JGe5DZ9QCMh6n0AHYYbyvXvRf7zwPU
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
vgrs/YEZpxw48BcOX3WHna+ikfMHJn/AeExPwi4busgt62+R/OvyS44C1r2a
p3ge6fxjZ6dPnStMXQK1yp98Ik1t/asKqnl5rZqf9Xjv99MmydEd62TpL2/I
uPY3aC0XHlZbZ/3use8qvPThhx9OtUeK3jJcyM589SPyNl4QCF+Fq3K+8C+9
VPu0BoIZM2ak6l9lNAKHDx/2/sc2rF27VucR7ZwVT2m4bCjAGEnfPj1GqrhO
RU4VV6h4UgX1pfDZUIPeH6xF0Qgb2PkqdY8l6AcVDDC2MY6QZ2Wu/flnkXXr
rD4CIcivpnrpC+fl7Imjcmznetm1ZIysie4p0z98WPdyha8OrR8po56NlImP
5pDZ1XLIqqqFZNdTd8mpbz+TC2tXB4WvrlOfNXdyzSy6oOzinewgfHD4qjvg
q9SAB8JXd6uYrKLFohZS4lErnxp1h+VLlW9tPik/rLz0PNZTj9MOXGB6Xn/7
rXxn85rm+EvNyWpy9stn1eDcqUTZvXSc9iOEp45qU0bm9H9O9y1EJ+AKOJ95
XXwimMvDiezMV/Hr8oZA+Cp6CPOd+eJBkJ1w7tw5fV7tnibkBH/55Re/1sSr
V6/Wf2e/79Bu8vNQwGilpqvooOJqFXlUlFZRR8UwFYynoQT7ZXxOe82sna/y
8yuuuCJ4LwgvZf+Ic4oOwN4/2uhcQ5jH4Ho4e/KYHNm6Unv4LR/UUftdoRNg
bPznhRwy7PkcMuGxHDK3ZgFZ3aaabPmxu2yeHi0Lp42Wfbu2BcxXAXuT5tq6
5557gupf7SD7w+Gr7vCXr+IniOZqgooP9n4gN7S6QXJEJo/5ETkk//D8UkVF
MxWfqaDH6h7xrW/zZQV8y2fNknkPPSS5bXNmB8ZGvgdyEwGM5YzNa4f20vWx
5FYnv1NFNk37SU4c2O722E8++SRVrmr8+PR7CIQC2Zmv0vPNGwLhq/hbmZoO
/HMuR30cPKtZs2ZuGgHyYr5i5cqVqXpicPDvUHpO0C9gkYoGKsqpIM+Kd0A3
FehcQwnub85X3bp1U35m56tPPPGE3msLOeCwjH9oMFiTh6GGHn3ryYM7ZOfC
kbLkx9dlSrd7ZVTrMmqcLGTpBRR35ZjY4iqZ3bWmTP+xm2xePFGer1Nbbqpw
o84D6PW+nXN7AXOrvRfk5aLfcRAcOHzVHf7yVfatRqiovb+2RBa9WEseUTJC
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
GqDXXyBIxVfr15ebb7pJhHp+dBLmveFrAJ9OSLD0C35yrkGDBqVcQ/RXO7B3
j9anHtq8THYtHSubpg6UtcP6yLKf39A9Cqd/+LBMeOsWxUWvtLQF7KcpfqqP
+q6HBy7r1xGhXiO3roUY/WpZ7ZE4qfMdMvW9+7Xeds4nz+o9Pc19f1Lc97cu
ivt+oLjvx7JhrMnp/ibbFwyX3UvHy77V0xXPna99vo7uWCfH92zUetwziYf0
PKZ1DPBWdb+leSR5O5KCcmQlZEe+aq/VZy+JvXvqqHpt6yU3DbxJ7pl2j3y4
+0Ot06L/C/XDM2Jn6D5UG1VsTdya0kM7HJ4t2R5c89RPjRsnX9j6ROK3Og7+
wP5WEO6LE/vUbDVzsIxrf4MeY9A8xY35QvbEL9N91M3rllfjasj9aTIAf/gq
eS/6ZA4ZMkR69OihfYeyMl9Fi0G/z/QQbL7KOaI3k77mIiNlzZo1QXvu7Azy
pHho2DUC1M3bNQLs/9u9GMzBPgae8MEG4zn7XORZe6pAG5BHBbVYz6qYoyKj
NbB2vnrrrbfqz4NvMFyd/gvNmzeX2bNne3+iYIA1NT3+6HlFLlPxZqlQwfIP
yKCHij9w46uKMwhrEsUx5dFHRehZizbg+utF2rYVmTHD4tN+jOtwI/s4/fpr
r8mFs6d1DvL00X1y4sB2SVS8Dn5HHpOcJvlN+mrBAdnfR2ewYeyXsmZYb12v
teTHtrLgm2bat2Bmr8dkWvfqup5h3BsVZJTinfBPenb5xFkVD2bPjsfj1zX8
pUK6b6Klsy0po1pfqbks8w454LHtrldz0Y0yvsPNMqFjJZn49q0ysfPtMqnL
XTL5nXu0jhefr6ndq+kc8vQPHtIcHP7Le53dt7bE9n9Oc/MFXzfVXBjtxNKf
28vyX9/SeuBVf70va4b20rwYfUX8+G9k4+T/6vMAP9429++U3PCeFZO07wLn
7GD8Ajm8aZkc3bZaa4zJAev879G9Ou+rvXJ1rjdr1ZNnV77KmEU+daSKZiub
yZX1r5SInJZeMvfzuXWf6nWn1kni+UT9N2YcRJt6SK1xHL4aRFDzGhcnsbVq
SS7bnPZB5coiY8ak0jxlBGhU5331oq5DpQZ1Srf7ZM+6WHnqiccv5nOLF5e1
a9cG4UOFDv7mV8lzMY9u3LhR77dnZb6aGXoAQJ2XuQbQADnwHVxPdr0qnJ8e
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
scJpLVhQTl50kdS1aviSY+ftLQMbY3X3yd3y2eTP5M6X7pRzG5wreQrkkUo1
Kul8U/hP7uciplaMxAyK8XG14W0TS7hctbtVw+/KuF6mmp27n57aGsY8vJrS
wKvEhSKFV8mrQoP1yL6dsm3ROFnwWScZ8UApnQ8Pv3VU+zPk955N5a/p32vM
mlnczZ1r18qZFmeV/r+qVSlO6ey7U5mnmQuo04KWdKB5n7k3FKyK7V4zRxZ9
8ZiMeric9jdP7HqR1qs9ceRQuE43as3Dq9GPV9EkN+Pa4wacOgaPnj1GnFX7
JK0dLHmV2sOT6zxq1CjZuTN1HWhioXD8ZqtGztUO1cAH5m/oRqJ/VVW1K1S7
XbU2s9rIZfdcJv0X95eVqpGnlR5/VJoMnyUaUF9+KdKkiUjevI4+qzrX/T16
yOIZM2S3wqv4crIcrxozmBXtgM6dRS64wMnBKlRIllWrJnlik2p1kieRk42x
tku1SdsnSc+xPeXB/g/KXQPukh7Hesjjhx6XMleU8Tvep86bKoePHNbaPZ8N
+kx6Tu0pzXY1k1qqwT2lltSTqvVSjbqnw1Qjvg9OJVcKjYD04lO3eXg1pUUa
r9qGBv7OldNk1YheMvXVa2VkuzLa14pW/rQ3bpBVw3vJvq2r5Pjh8Or0ndy9
W66/9NJk47RJ/vyy/7XXnHrOAezff/+V9957T8477zy/Yx2+X//+/UPWwtM1
w06ekC2zh8jE5+poLsDoTuU1F+DQrr+ydZ6VMQ+vRj9eHTlypG+Ml1R7PPxO
np06hmYrNUnSi1ndvUqVKnLnnXfKO++8I7/99pvWRQ7FWMup44NmT1HVYsTx
VxVXrbZqTZY0keq3VZfbu98uow+MlkWqbVLN6KGH3cB/aPCjc6XWA61zesUV
sl9h88XTp2u8WqJEiejBqxh+U9aFKVNEbSIczIp+QJ488rLFXS6ljnvn339n
qL5NNBqxdeLt+OzhlJCntPLkSpn35zwZNXaUrxbF4o2Lpc61dVKM3XLzy0mh
9eo6FVc/F1O9Ti6J6Rwj+b/LL503ddY6UkaHjfFK7amPVXtdtYGqTVSNPdVe
1QLptYXLPLya0rISr2Injx2RhPhtsn7iJzLr3VYy9pGztY8R3VbqvK4a1lN2
/TlT+1ozbInP+qvt2iUbwy8qnHnivvtE1J7arR9NLiscvrvvvjvVXIY6deoo
qBsY6/o/nP90rQX0E4beU1jr1E5+ub6sGd8/POd7CpiHV6Mfr2JXX321b6w/
+eSTWX04nqXRiOu/pvbjbs2SUHowvSx4r+zhqeFBLY9ffvlFtm5NmTtLfskC
1V5S7SLV8qpmMKtuzyR9ZrG7imlfFliBGlvHJCne5U9bKENGLVT8kWizquPf
v3Kljw+Abzqq8Kpt8BmIB9aurX3DR9V1u8C6L3e3apWkb3OK4FZ/elG0g4cP
yhGFFeCbsocZ888YubT5pXL6+adLnoJ5fOfcunVr/Tm3tL0l+TgtqfoNqh90
xlpMYiOuX1i16qq9oRq5gfZYy0rz8GpKy2q8imk/438nNS5d/NWTMoJapGg6
tYrRHIGFnz8iO1f9nvi6DDx36r2Txo+X3FbcpA3xlMsuE5k3z9E1STRwEHmr
5Vy1Wd1+BnRZ+vTpExLPK8XhqLlk95+zZMGnHX0aVtQH2712rpw4GrhOTHYy
D686eJUai+x58ufPrzmEF110kbz++uuRqQEUgm1QayP1xLhPYBPPTk0jd87W
KvPXuc9gVPobb7yh61Klxw+LbxIuQceOHeWDDz6Qyb9NlrX/rNX5V8RQyZXu
ptotqlVWreCBgpLraue9cffESUXVblUNDGHzA4jzwivA97VPtQxzBw4dEtmy
haRZkfXrZf/OnTrfitw1jiVq8erhw06ehZprdG2BIkVkvlrb4qx7MLFvX0cH
IcrxKtpqcEfBqfg15x6dKzd2vVHKnF9GcudNzDGJySUlG5aU+ifqy3kTU8Y4
y55Z1qdB+/E3H0uXb7rIaetOk/zH88vpqpmYPnxTOCloSn2jGjUu0LlgTLGn
yhRffjrMw6spLXrw6n9y9OBe2btxsawZ01drs2q91laxMrpjeZnV5w4dNz+8
5+90f8/fa9ZImcR6vKbfXqCAHLn/fjmm5qvfp0yRp59+OqAeld3bt2+vprmM
8Uupsbr2l4/0uYLNqQH2x08v6+sATyAnmIdXHbxKjou/cXbzzTfr173//vs6
Fl+2bFmNZVu0aKH3U+TtR8pWrVql7xXYevPmzenao3mW9UbMiD02dVvd4429
0saNG/W9NXul9QrDUfMzozwC0+FN1bqwljS7rZnc9+x90uGTDtJ+Untps7SN
3LD+Bqk2uppUPlxZzlMNfisxX9uHCrbopxpaWT1VI28LLdhxqs1Ubblq6LYT
M7a1hVI1k9OkcJPRs1quusarZ5+dzJcRVcZxE/cfPlzk4YdFbSbl+TxJ/sbK
RYvKIVNPPJO1WY1fFP4xHOYtqrGnWHJyiQz+c7B0/7G7dHqvkww7Nkzfr0eG
PCI1G9aUAgUL+Pz4zHfE2l/+/WX/vv6LYyTX8UR//PpcEjs4VgoOLihd/ugi
y04u8x0L953cP3ApfNPXVEO/gj0S42Suauyb0AYgrh+NtU09vJrSmJNMHmlW
4VXb0Bs9sG2NrJvwoUzvdbPCcMU0p3XUw2VlRu/msnHq13Jg+9o0xziOq/nm
6jop+Sw6nqWek1jL5xooJnbdddfpPCpybzNq4NFjCft1PavRHc9S2DyvTHrh
Mtkw5cuM+5FPIfPwqoNXWSPJZSI/5qabbpLGjRvr+Oqvv/6qX8c+yt+4BEcw
Vl566SWtT125cmVfJ4Y/ntwMcfwXYEywBx3fUXrGGFgHDje6Oegm5ZRxmh1t
3bp1cqmLx0+nHu8333yT7N6Su4W29OOPP65rPmUkhyuUHpM7RvKVyCfFKxSX
hjc21HEs4g0DBw6UzmM7S+1ltSXXdjV3H4qV0qrBf22mGvqXYFi4hhNUW6Ia
fAL8ZrYR8z2Y2OBDgm/ALfjW9u/bp/kAswYPdvBq6dIi6mc5eDDStyh049hW
rtT1sBJq1ZJq1nr2NHh75EjtO9Y+2QBmdB64HlwvcCf+a/AjuA6/NvlzcDy5
ptuPbZeFyxfK5CmT9X1hjmrStIm8/fPbMlK1Vm+1kmJnFJPY3MnX1npb6sl5
C1L6R5lTmNP5zt4ne0vut3NLXM84yTcpnxReUViKby8uZVQrp1p51dDfJ45f
T7WPVINXapvRCDY1UqMRk6ZmHl5NadGGV40d+XeH/D1/pPY9jmx3usKscTpe
/nvPJrJ+0mea96nrlAZZL3eoez5n1izp0Lp1uudOrk+4a92huXrgn3UytUdj
GdwqVobdU1hj150rpob1e6LdPLwaGn+VXD/WbOYvw0EEM5Dfhy+Meir+xm6z
Zs20FnvRokX94pJNmzZpLHLHHXfIFVdcoTEo34OeEViZv6FzAX7p0qWL1qO0
P4Na8BjYhxoD27Zti1xNeM8ybOxbmlk1kuyOH58aJ//68S0Su50yZYr06NFD
mjRpIsWKFUvxfrAwvP/MxLW651H4tlSMxFSOkdx1ckuea/NIvub5pOC9BaXM
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
rmKqP164oOzs2EZmta8lQ+8uqDX5xz1+rqwY9KocTzigMWskjbFNHYAVg1/T
/l40Vyd1qyurx/T1YdmcaGg/enpWSXpW+IPSk28YbQZuRP+H+4mOEvfXHc/3
FwvHTI4B7zM1WcFQ6ErxucbHig8NfMUaQkyTOiL+zM7JJ18hmNm8Nn81YTNq
7hot+Jo5P/bo9u9N7Rd/ZrQ0jF+X+LeJjxF/D2S2/xqfGr5eo5VDbJTrafC6
7fsNp6EPhb/SPld+Duc+DS5DmzZtQlrTA5mNV4nTpilXBWzw558i8I/VcQh1
cYidR+mzzX23+Zj42JP5vsGgu3c7uJtrythkL6CeUY1d8buqcSOdO4t88YXI
ypVZwomA3+Dmm8PzNlqK/vaz+JcDxV+Yc+xxasdv0Jmy94y22XgVnkAwg29i
Xm9qcRkDr5pnlP028W/+D8YNZuR+8Vrmi9QM3wGxHOYROuspWhsYmJdnk/wx
e0xwLdGV4vfueZI5mfgJ+iDUjsIHyuem1/BnGe49XDF7f8X6ChZHIwa9bzu3
l2NHO4Tn2PZ9olME9xTOR1p6oDmKWhUci7+8C2NH1Z7missvTzaeaqt+sGBB
+e/qq+T4uNGyYfA78nvPJhqvkos/rUdjzR9N+Ddlrl9m2omjCbJv6yqZ99ED
MqRNXn088z68X/5ZOjGixxFtxj7J07PKfvxVzNQDNz4u9iZ23JG1wJ8RWzOv
QVOK+ZD/cy0xu94jfEXmEf4fSH/JjukF8q8yrxnfChxY8/pg+fnpMZu/6vah
guXs+uhufw/G+mXig1WqVNHrIfnChkdAD/Q82LphhuvKXA+vgNwb5nTjbwKz
ZOY+Gpxg8wPB2+xdqScUTkMHlvqV8HPTcj4Zwqv42/BHEgsuXdrxQYIZfvvN
wX1RaOAvW9cBHnUK4/qBOzgPdISowUruo3qf5ghwrmoc6Vwt/PPwBOCnRMC3
R8zBzC/ok2BgKlO7NBC2ZPybPTA+VINriP25NYvtXD7i8ezB/cWJbLxqeDeB
DAxox4d3u8YHz7vZy+Kr5ZyIM4Wi24afgPcFyqEfOHCgL4+Va4Bun32+zH/2
fMte1pjN0QVLGuMZMzif3xv+Ov4F1nljxBLt559O/ihxM/7FB8H58nlunrHd
2ZMabRj3nsPmP/EMY9QAcftO+Jn3uXW2iX/hRzPjwF9+hDln3kt+XCDrZPkK
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
Los0XsU3UsXiwJyj5oPd7IHy5ZPNCj+TZ/XRmWc6NYXXrs3UYyHuTz3W1aPf
lV+fv1RzTwe3jpPpvW7WOBbMGogbgH+W10x74wYZ8VBpGdI2v4zvUk22Lxqv
uQCepW7p9a+ic0Hd4mjCq3bND/AqOjDBzMOraTM4rUafxcR3N1E3xLN0WU7C
qxjzDWu/XXuS9Q8uvdlb2niVmhZGsynTtUgMn5K6m6x5zB+sf3yv4bBGoeFH
sOuycz2zRM/D4H3qUMFVRSOAuCz1nT7/3OECXHWV47M2eBXeAFxXuBfUIVJ7
YKlWTeTmm52ct2+/pRirU0s2wubh1ZQGXqWmSSTxKvOCreVWVI2ZFfDL1d5n
Z9WqcliNk3j4KOwxGW+ZzHXX/FPV929bI6tG9JKhbZ3cq1EPl1WYtZmu4Xri
mP9abAd3bFA4t48MvbuQfs/4Ludr3uqB7Ws93moIlhH+6m233RZVeNU28Cr6
OMHMw6tpN3DDaaed5ps/qM3iWfosp+FVY/AvqRdvcwSIbU+bNi0ZXqXOD38j
poPde++9mosSqI58WMzkxRM7WLPGiXkbrMp+GCy2b19U8QMOKjzdsGFD37VE
nxKNviw1g/+JzeIbx289cqQI8+2rr4q0aydyww2OTha8V+rBGt4AeVzgVvjD
LVuKdO7s7B++/NLhHsDPgOMFdyCTzMOrKQ28avaakcKrT3XpkkwLYCzjRI2R
nmefLXnU/88qU0YOTp4sMmuW89xGiP95/Mgh2blyWmIt1bM0D3VUhzNl8cAn
ZMcfU7Qv1XBRwaJg2NVj3tVcVXKs8K3OfOc29Rm/67qvngW3jOBVOGXRhFfJ
4bD9q9TuCmbg1bfffluWLVsWuRzbbGCrVq2Siy66SIoXLy5z5szROs9owLv1
pT1L3XIqXjUGvwjNKlv7Hq4r+iXg1RtvvFHr5+Bj2bx5s+911HSNuDG3kHcF
5iLPSI177UvMgli1PyO/rVWrVsmuJfU/os64Zmjczpwp8s03jk7W3Xc73IFL
LnE4GAqDaO6A8cOS943v9eqr2bSIvPKKyBdfiIwe7fhv4b6CiQ2GDYMv3MOr
KQ28avQ7IoFXv/7qq2R72nfxxSusurpKFV+924bXXJNlOUpor25fPEGmv9VM
ht9fQgbfGSfjHj1H52OBWQ/t2SJHD+7V+VXbl/4iU19r6OhXqT7hyeqycuib
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
ocOYDLWliJMwn0b/4//UedHvySU//fTTfX1P+kB4H2neLdq7TP01GsNjPXJU
mCOI5gBRMytb/9dGvrSuR00tfP3xAWJ/qa8VbhfNJnMXEyZMiN0WMaswB4a4
ktZO5bvo8kOGDEkuSyyKOA+xG/K3o/O15N3kekylbMwLZ4vXUUOXeddOnTr5
60gMizoKYRyWxhxQuvv7tnHj5C+0W25JtPHjE88Z99ndt94qU3v1kqlu+1P7
95eprr9OdZ9PxXt2ypSSn6Nyb/TVFi1a+GuFLwQx2gcffNDHdfAV4PzTr6m7
Rn7Y4Ycf7n2ddtppJ++nVcg8sGI27n90q8SCOTa8EYj/4y1MDT3mgPR5mO7c
sTz98Jqrr5aTfvc7aRFzL2zl7mWeJTzT8DPjHmAugmewzkfw+9F3jc5NZGo3
3XRTnd/P8IBS9z1r8Y13K3l69B/mRfJZt3v37mXNV02/aqgv6Of6fIW/RcGz
Vb+Hb0TxwAMP+O+oPYQnh4L5//DZjfcPXDWTfvXdd99N+qkzJ0eebRTkoWgN
I7hyroAb6r7w/xDkXsDh9Xt89DOB+yk8Ns2LSYer3TtNl6UGSahfxQuUz9Vz
D85fKaAGK/lXcZwAPlCQGqOqDaQ+GE1zf/C4euQRcQRKHDEWR/TFDTxERo0S
efzxhD+8ISNCP6u4ez8buG+oQYOOFT0rPJftUCuB5wYaWvqzzq8Xs6FBhVej
D2fsSZ4/z6TVWWpLocelDjvbgLNnBd4Wr7win/fr52tf7O6eTbPd///1wgtr
/NkMhhxRX/2q8VVDNYP6POoTT/5xFGGdTWoFRWtREvfkO8bsIaJ8lXdjhw4d
MvLVYcOGJZen/lI6EBtlmW7duuV8nCFfJb4ZBe9a/X7AgAEZt0W8MDw2YlOZ
QIxKlyWeG/JVzb+n9ibcFd5facDfM1orlQaXJYZELAnOrnW4CgJ8Anie9+8v
svXWibys9dcXOeQQBhQU9S3cb1Up6stX8wF9HQ9YYrjca9zDxBaJtxMXYuwJ
T2RMm2uOGPF75iN4bvXu3dvzZOZ28EzguVYX5M1X4aTUzXriCXnd/f63PFvg
qvitGgx5wviq8VWDZKx7E3JScvlDUCsofEdEPTiZo0dTEN1+lK/yHmDePB1f
5fsNaupxUoMyU10l4nbE78hXzhUhX4U/RhHGTJn7TAdyMlgGfYF6uXP8mTx/
zjrrrOS2qTWnfFW3ReOYyFGhtn0lgutFHGuDSE3VsJErVDCQl/722yJwCupj
7b23yLbbMiEgcv/9CQ9XoDXmicfiO4AXFnFaQ1H5al2wcuVK76Gu+STvv/++
z9GsKxfNBfnyVfxPGP+iD5APPsCowfqYoc4wvmp8tbFi/vz5PnYR6gyJpUZr
2TBXpt+jFVVQS3KTTTapVacy/B7eBWdDZxNFyFeZD4TPwG3T8dX7grrd1AbN
BnzZ4X65IuSr0fjpMsdlQg0rGqJ0gHuiR+A9in5c13n++efTrqPPHxp1QJWv
sv98xvUBXC/0g5UM/DrRjcTxVWLI6AMZtxAXo85pQfDJJwltAPUFeNZRqzWs
lQV3xWsIHuuumxDnNR/3suerpUBOfLWm3/zoxuihfv9z81kz1BPGV42vNkYQ
g2D+ntqMs2fPlo8//tjHAOCOzMuHYJ6W3CXuETwbf66JDcDB+Iz1dI6O/BmF
csy4utohX4XvwleJh6bjq+QY6PLM6eUCOF+uCPkqeSLMH1JniLl9fJn0O+r+
/JwmNkIMmVwMYqsATW4YN02HUOdAI+cijFuTu1JtoM+hHwyPm34X/t2fuXwR
Hzu744476u7FQiweHsrcwEcfJTSFykPRDVCj6OijRfbYQ9zJF7nwwgS/JeZa
pbUHcoHx1VTkxFeJ77ox0hI3BuLZwfMEb2mDob4wvmp8tTECDkmfxxcRL3EF
mkLinFHgMa48Ys6cOf4zOB6cl3tIcxZpxNAAtUQ7duwY+/to1XR5OCp8lTx5
4mpxIC9Wl4frFBphjFO1b2hHw9gxjRyRdHwV3wSWCfO1GA/wGTw2neaCPOTw
NxgbaB1MHSNUI+g36FbDY6WhGeD9Ts1S5lObNWvmPyfXTq99wWoqOS4s1Bpl
nIXG1Y3XZLfdREaPFpk3b41uoBHC+GoqcuKr1HdjTD1ypHx3zTWyYubMNTF7
g6EeqA9fJS5Sznw1l/obxlcbJ9BD4j+lPIA52ieffNLPOf/1r39NWZ7ai8on
mOcmPwJexf8B3k76PeMk6kYSq8VXJQ7EPuPiq3CVEORfEAsO9aMNMSeuHszK
ScPcH2LB5BHr92effXbsNvbff3//Pe8zvL7INQvzjNLtd+jDxfwh55bYtcYb
Q74Kh9PxQLWAmhChz4RqRPDEwlOCPBnVAuuzijh+y5YtfS5XvQBfdddJuncX
IbbvuLHnrIcemoi7al4MYxTGG3hcrFzZKDSIxldTkZGvwkfdc+yXSZPk2ObN
5UhqBVODDY0Ufcb4qqGeqA9fJR5UznyVWh7ZYHy18QIOGvWSgQfAEaMgpoj3
DMsQ71K/VOW28FPVBDCXPm7cOM8xvkiTB7tw4cJY/SpzZxq/JB5J7A1PrJDf
Zsu3Vyg/hG9efPHFPmYHL+J+5/0LL1SEvkvUXY87fs37Zx+juUGqjcjU4uLW
QHmujgVUv8r4gc/wwFRQf4dzW43g+dumTZta54w+N3PmTN+POCcaVz3U8Un9
HpBnQ61Mnsn0l5wB70RX6PqjMB9FPhb1bx1H9nndGhNn/IKWgD6F18XSpVXv
iWV8NRUZ+Sp95e9/l1cGDUo8J1z7dr/9RBizk/9nfNVQT9SHr6JvK2e+msnz
R2F8tXECTkR76aWXvE5Q51xp5AvFxfCoEx/lEuHcuHI+OCYe2HiJpgOcONwW
74GuXbsm/w+U0+JvA/AiV74ccs04oKmFX4LFixd7bxzit+TXc98Suwvr21OP
UvflsjR1vakJocvgtxOCPCk+Zzs8R9i/Dz/80Hvd65gALRufRRHWKmc/la+S
s8W7UTUS1NtkmXrHFMsYjFHgRuqhpg1NMDpWBeeI55vm96nPr+oJ8FVjDoFz
Rj+K+qylgD7H9nkHTJok8txziVws5Rhw2qlTEcaIHHCAiOMkcskliTwtuGsD
5qSXCsZXU5GRr9IHbrlFFnXo4LnqduhLGFu7PtiYddCGwqE+fJX3cTnz1bi8
7CjgqzyLOI6vGrFWq7GBut3Mp6IPBPCE0Lc+TiNKTlaYewQXC0HN95Bj4BGe
DvDJcFn1Xw31r/BK/laPLGrU4/PNZ+gX0ulI4SfEduF+uULfy7S4+wYf8bDW
F7FpBXnsfIY/apxGFU2ErsfcdgjihSE3w/sg9F8l9so5Z7vKqbNx9WrAJ598
4n0awj6CTwLeQHFeZpwf+iPxab02oaZavXg53+RtpfWFV3+rqJe76/uCdyY5
WfAQt01Bp/H73yd0rngO6PrRVqEwvpqKkK+mzHMQbydGdOih8opb5n20+4y1
6a8V3A8MpQdxDp5bxF7Im6oLX2VOqpz5Kjky2QBfxbMbzo7fo6FxgNqJ+h7/
IRj7kx/EfDceTnHQuqXEYPEfCkE8S5/l5H5nyokZVDNnpo35dc1tIm6hnqT8
TuinGPoEoB+PchfyuKinSA5XdP/SAY1kyMNVk6vg94lBh/P6emzMU7du3dp/
znMkDjxnQs6FXjPc3/A8oFcI+arGbblO/EseWGMCY57ddtut1jlCE5yL1xX1
b8mZ4/pQoxIoB6Z/hrHurJ6dLHv++Qm+us46azjrQQeJkH+ouhf6BVyXcQtN
a25VIH81vpoK+KrWqP3zn/9c67t/umfmKPfsmE0/OeWURM6VvVMNBQD5ISee
eKJv+g7Ol6+SW13OfJX3/5133um1dene3fDV6667zmv8dB7WUP0I64tS/+XW
W2/18Slyr+CB6QB/YB10gnFQPplJY0IeYMgPafjAxmk+43ygWF9rrsJd2G/6
ObWh4HPwE3hgrqD/h7+JpyzvZ7ZJjFbrhTPPDCfVurK8z0PfKWK6EydOTNl+
NE7YvHlzz4mp66pcN5zLpl4BcURirVp/Vhvx1sYGYqc33HBDLc2Kxtjj9BWZ
gPZZ69rrtdK+h48YYCxCLB9tdnI8RDyW+gO8I9C5uveGULvBjau8VkDHfOhc
X3lF3A6L4GHEv08+KfL++wkea3y1osE7kvEw5+Tmm2+u9Z3O067nnk3f0weI
yds71VAAMLdJPJF823ziq8wjoYki/5d1ovV+ygXwVWI5+Bby3EkH0682TsA7
mS8lv4UYFP8efPDBvl9nqh0F4FFhjDAEz3P4bia9IPFG9KtTp071XqrEwZhb
Iy8frkh/pN+iA0gXo3333Xf93DoaWuW+cD/2P19dyzfffCPz5s2TGTNm+H3C
lwquyv9p6EUZl0ZjcMRW0U2wzLRp0/zzI278itcAzxqeG5x3jp1cMN0+jXq1
HDeN9yD6Ws4LGgOODd+ASZMmNWrPcWL+aESUb6pWGh3LD3noA/Fy41ppH6U+
Adsilg3C2rvEdtUrghoUb+EBS/0BtC7uGSvkJmoMFTCWgQf37i1uoCOy774I
x0SI75KjV0F1OI2vpoLnG+NNzgljKA/6kWuMhficvD+DoSGQj36VHFTmLXnf
oO9njq6c+ar6bWeC8VVDKYF+lnsIjkz+frp6AZnAPVxNcwOhHkB9nqrVE6Au
YBwT1hujwavynR8LoTFzsGTJkqQPGboBnvvUNONvuHKYj8e4rZYHBv9H100c
3HFpwdMI3YAbDwrxOPU6Vt0Amkf0yPRfrWNQJjFY46up4DlDPWiv37/iikSO
lRs7k6v3xsKF/rOfo9png6FAqG+9gHLmq8yPZoPxVUMpUQi+Wm2I46tao8GQ
ALFR4tBad00btRfI1SoEwnkG/CD0N/DBAJpHh/8DvsXgb+46jTvtNHkJvcDB
B4sjNwm9K3FW4qthXtaqVYk4LV4T+MKx32GstsQI+Wq0RnNjBXyVGimckz/w
fp03T+b16iXD3bjmOc4RY48yuX6G6kM181X8yrPB+KqhlDC+moo4vmq5kPGA
U5FXGmoE0DDDL9PVE6sL0KXQT9GyqEYF/QixNmKwb7/9tv899S5jf+4/5xyR
8ePlf/r2lT/17i0ria2qboE55MWLRS6+WIQ8cmr4jhiR0A2gdw281kqFkK+i
Szck+CqaJT/vf/TRMt9dtyY1/e7wbbahEMoaz16DocCoZr6arrZQCOOrhlLC
+Goq4vhqoWKG1YqwHpi23XffXebOnVvU/UB3TH4eWupHH3nE89Nja3Ib8d5Y
RUzV4bOPPpL/vewyeblnzzWagfXXT9RDIk4XzRdEQ4vWAL5bpPhdyFfRhRsS
fFVzPY9o21auc2Mj/r+9u4ZL0T9Td8K8Vg0NhGrmq1bfylDuML6aiji+at7I
2YGfGt4R6oumcU5ytNRnuBSASzOHTOyVmgdLly5N1pfFV36F4zy/rL22zHH7
Or15c1l5+eUUZVuzAfgpObP4EOPzEvXJaiCEfBW/ZkMih0X71vYbbCA/uH8f
cO1LakjMnJnQAxgMDYRq5qt4FGWD8VVDKWF8NRVxfFVz1A3ZQV0w+pLWllCP
MvSuP5UoFwatwEpqyEvCj6JP796yu+OCf7nwQs9zzgzqq3WkHqzjReSAUVfj
7/BUvAj22cd70cvJJ4vg/cnnDcjDQ7567rnnNtjvVBLIrwtj+Oe6MYiPicPn
GVNYbNXQgKhmvppLTrHxVUMpYXw1FXF8tVQ8q5KBl0vHjh1r8Ys99tjDxzvL
BsRJV6+WF6dPl8M6dZI9d9xRrsBv3vFb/MvYZ3j3PYcd5jUD89dZRx7ZYgtZ
1bUrBZJFFiyovb0C1iUI+SpewQbx9avD/tSlRQuRq69O+JqVkbeDoTpRzXz1
Nnyts8D4qqGUML6aiihfZU7bUDdQs5d6aepBpBoBnt3EYcsZ+MRu4bjpeo6j
3tmjh8g220iXmvoRm7hjWEysNazzBVfCX4naBOid8erl7zrWKQj5Kp7LBpH7
7ruvFl/9Cx6saABMr2MoAqqZr6Llygbjq4ZSwvhqKqJ8lRpXhvqBOgvUMgw1
AmhKGdPDacsVeBH8mzwr6lBMnCh/7t7da17Z/3uOPVZWPPecr88FH99zzz3l
lUmTKLacqL+FHuzFFxMeWnU4xpCvnowGweB1ESFf/YT6ang9lHEfMlQPqpmv
mn7VUO4wvpqKKF8lT8dQGCxcuFA6depUi3OgGVgQnVcvJ8CFqCsAN3L7+ebY
sTJ11Cj58aWX5I2//c3XMVTdwIxTT5UVW2whx2+8sQzdcktZfNBBmBaIPP10
3j8b8lXqBzdaEJ9etUp+mDtXWtR4r9JaoAUwGIqIauar5g9gKHcYX01FlK9S
c9RQOBBPnTBhgmzp+JxyD7ge8dcvKqFeqtbGorljIY+LWr/LqFkwbpz8T029
UK8bcO2XffeV5889V0aMGCF/pS4BwGMAvUBYVyuCkK/icdsowXnhHM2ZI1fU
1O3Vts/ee5d67wyNDNXMV81/1VDuML6aiihfbdasWal3qSqBNxG13ps0aZLk
IOhF4bK/VGLeDF4Bjz8uX7r30lmOix+79toyndpaxx4rNzuuqsf4P2gGVq2S
jx94QL6hZgG+BaE/Vk0L+SqeYI0SnIuPPhIZPlw61dSC0Na3ps6ZwVAs1Jev
vh71dS4TwFfDOtfpYHzVUEoYX01FlK+iszQ0HMj53m+//Wpxkc6dO/vPKwp4
npH7Qy20555LeGBR43DmTPnb9One8xUt9NTJkzlo6bjpprKh4+p/ob4Wnq+P
PiqydGksX+3Xr1+pj640IHdt4kSRdu3kh6ZNpV9NrQDasMYaczaUDNXMV0eN
GpV1OeOrhlLC+Goqony1efPmpd6lqgfxVLxOqU2lfIS4K89Q9U2tKBAvRdsA
d122zOtf6Vf+WPAJnTJFRm64YUIL4drK3XeXfxx9tPTq0EGm3H+//OLWD/lq
V/yzGiF+mT9fzu/USdo6nj/TcdX7t98+2T/QjxgMxUQ189WDDz4463LGVw2l
hPHVVET5qp2T4gE+h3fT2jW+UTQ47D333FOZGoE4vP22yO23y3ft2sn4Zs3k
L9SBddx8asDFjjrqqARf3Xln//fOv/lNIn5bLecgRyy+447kObnG3Yev9uuX
/Ns8vgzFRjXzVY7pmGOOkenTp/tnTxyMrxpKCeOrqYjy1ZYtW5Z6lxodXn31
VR9TDDUC/P0avlKVDmow8T6YM0fk2mvFkVOR5s3lo4EDZbstt5SNNtpIjjzy
yARfdTyVY19/3XVltTsnPjerEeEdd705/h3d+fl8/HhZ9vDDyf5w9tlnl3r3
DI0M+fBV6uPNcff4n/70Jxno7m3m6cqZr7J/2fJdja8aSgnjq6mI8tVWrVqV
epcaJYin3nvvvb5PKkch7kqtp68q3R8ez1C0AW+8IfLEE7wIRPAO+OCD5CIr
PvxQdnF9T4/9vHbtRK66KqFzfe+9qvYc5V3/AecCnYg7N//E78ydjy+WLk2e
jwvxCTMYiohqjq/+7ne/y7qc8VVDKWF8NRVRvtq6detS71KjBtxl9OjRtTQC
eG9S66gqwBw//JXYKf/W4PM335Q222yTPOY5664rr7dsKc3cv7u6f6++8kq3
SpXFW1et8nrfg/ff3/seLyX/LMDXX3+drDmRSz6zwVBIVDNfHTlyZNbljK8a
Sgnjq6kwvlqeoJ9269atlkbgoIMOkjeIUVYhVi5eLLtuvXUyJ+sr1751bdMa
/y/q2lJ/4UfHWf+NxiDih1VR0H12x/PJ7bcnr+/TEU4AX91ggw38d9eipTAY
iohq5qvnnXde1uWMrxpKCeOrqYjy1R122KHUu2QIMHnyZNkmiDuuu+66vk7n
N9SgqiKgB9jZ9T0fT95kE+/j6jqjvDlwoNx8yiny3Ny5frkTTjjBeyl069BB
3n/4YQLSiVoGlQRyyfCvPfNM+WKvvaTpWmtJi403lq/R+AaAr+KHzDnJxd/c
YCgkqpmvXn311VmXg68yr0HdE2psGwzFhPHVVBhfLX9wjci3WWeddZK8lby4
adOmlXrXCgbyrXau8QfYDX+AWbMS+VmPPy7y6afJGOrF55+fPAfnOM666qqr
5Kx+/WTOvfcm6siWu84VTcNbb8ljw4fLddtuK24AIm80bSofjhgh8sILtRYN
+eq4ceNKtMOGxgbekfDT2bNny+DBg6uSr958881Zl4Ov4jF4ySWXyDvvvFOE
PTMY1sD4aiqMr1YO0ALgGxhqBHr27Clv4xlV4YCv7rTTTv6YunTpsqYObFgL
y+GnDz6Qse7eHbjJJvJmkybylvtX9QKX4vlU7hpXd799P3WqbFGjc1jg+Krs
uGOiTgC1rQLAVzepOb7bbrutRDtsaGyY6von+X0XXHCB95qrRr56yy23ZF0O
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
nqMZX00AX5nTTjvNe5MbX618kFOtPqZxMTlqpfPd/vvvX+tzjb3iKcUycaA2
UMuWLf1yxGG//vrrWt/vuuuuSX51ww035LXfzNHputdee62vuYl2QT/D24ia
mNHfrGZQw8r4qqFUqCa+ypzQmDFj/D7dcccdxlcNZQ/jq6kwvlpdwINR+Sp6
VXxPo+jcubMcc8wxyb+pZa+10AcPHpxx+9RyVw6FD1WIXr16Jb+LqxOfCffc
c08tvgrgpngfqS+r8uT7778/r21XKsLrcvXVV5d6dwyNDNXEV5977jn/jKHG
Ff8aX60bmOdiLkxrhZUbeGfMmjUrbcylIYBu68EHH/Rz1IVEIfkqPIB62nUF
67744os5L0/cbM6cOTmvw3wu+kPmFDPB+Goq8Ihkvpv89XIF1w1dKflRURx2
2GFJfgfXGzhwYK1+w7sHPZcCL3pdHr1MOrz22mteO6LLkssV4rjjjkt+N2XK
lLyOJ9yu8lUFdXIOPvjgWhqBgw46KKWuJ7lg9XlucK9wz0S1EIVch+vAfZxL
jXf4qmosrrnmmpz3qZqBpiWf52ApQP+bMWNGztrtQgCtGxrwQs4/VBNf5XmJ
FoD7zvwB6g50FeTjfvzxx6XelVhQT5Ha1Y899ljRfhOftDPPPFOeffbZgm63
kHz17rvv9vXR6wrWnThxYs7L85ym9nqu65ADQ32+bHUMja+mghjljTfe6DlU
uQI+zfx4HE/iPRHm22ujvlRcbFL1rrRMNRQZV6MxwONfc6pC8I7KhffGgf1K
x1cVcGDNB1MuznOCnEFA7u9ZZ51V5+cG98pJJ53k75181uE+y3Ud7l/uY+7n
bICvUmcz0zlpbGAsyfkjRlaugE8zL4AmvFh45JFHfE0JYj2FQjXxVfT3WnvC
6gXUHcZXU2F8NRXGV4uHSuerAN5JDDLKWXXOP+RLBx54YPK7Dz74IO1vKl9V
DWuUrw4bNiy5HWK/+QC9aja+CtDQctzoWXV5vAy4Vjw3qo2vqhbC+GoCxlfj
YXw1M4ir6j3HsyKXd7fx1VQYX02F8dVUGF8tHqqBryqIOY4dO9ZrBML8fY5P
gRerfo7fSzooX0UXq/HaEOF20sVXmbOP0xYxj58LX1Wgo8I3IOThnTp1kqFD
h1YVX1UtstX8SsD4ajyMr+YOnuvo8LMBvso55ditJRpx6dNPP937DJZ6X+Ia
cRJiFjwjivWbzPuNGjXKj20KuV3e22eccYZ/N5IbQnyortsiXxceX9f1WZcc
ilyXR2948cUX57wOfJqalzzXMy2H9o5nEvcmcTZiZ6XoZ+XUGNdQkxveVOp9
Sdf0uUFcMvod+45GK/o5/V+9osi918/xaFXOx3s23W+SXwWf02Xhp+H37du3
T37HPsRtA40rXlrRz6+//vrkusOHD8/5PHBPUJtA14WTo3WFW+d7TrlX4J7c
O/msw32W6zrcv+wz93O2ZdFIKF/lN0rd58qhkefN+UPPW+p9Sdd4b5166qky
derUov0m/Oucc86pU79P12bPnu3nYurKV8vVgw6+mot/CdeP+JY1a6Vu1N6h
Hk+p96OcGjXc0T2Wej+s1a/ho4pfVdx3+v4h71w/gx8q38OTKtO2e/TokVwW
j4Hwu2bNmiW/69u3b+z6rVq18vW2op8TK9Z14Zv5HC/rdunSRZo0aZLcBvd2
nz59Sn4t6tuaNm3qj4fzXup9sdb4muZQVhtfzWW+ghqBzC9bs1bqNmjQINlq
q61Kvh/l1Hi/4xVf6v2wVr8Gx9l99919navod+g/VPMZfn7AAQf4z1kX308+
I3aIB0DHjh193Ib5Ta3TSpyW3Phwu6HegPhX9LeJQcKTmduIfhd641900UV1
Om48O6KaXTQC1Pcq9TWpa2MOiONgPqbU+2Kt8TXV6VQbXzV/OEMlwfxXU2H6
1coHebDh3H5UJwnv4Ts0ICHIs9K8f+piEXMlXomPP7UE0KweddRRyW1TizsE
+oOQJxLzVJDrgEe3zm3HeTOhS8xHv5oJvGO333775PY4jpEjR5atZ2AmaM0x
9BIGQ7GBTr4a+erll19e6t0wGHKG8dVUGF+tDigvpP3mN7/xvJU8qUMPPdR/
tvHGG8f68r7yyivJ+KnyPLglOQf6GeuiTYWDao4RPpO77LJLLb663Xbbef0l
vJb4rH4OJ06XW6re+IXIhf/222/9fOb666+f/G10rvDmXHKdygWqN863XpjB
UAhUK19l3G4wVAqMr6bC+Gp1gGfxTjvtlMzj1/brX//a1w6Al6YD+fvMx4fx
ybDBfQHb4G+8PPBTwF+CHCLyRnkfkHMSNvL6yNvPFONsCO8mvNvD+gmqEViw
YEHBfqMhoblkoZ+DwVAsVCtfZcxtMFQKjK+mwviqIQS1cqibc/vttye5L3lN
1Lk6/vjj/d/51ILKBs0tagivUfS3rVu3ruUjcMIJJ3iNXjkDjb3xVUOpUK18
FQ9Rg6FSYHw1FcZXDekA34vGWnfbbbeC/gZag4b0xl+9erWPHYcaAXg4Xn3o
Z8sReCmwn3iJGQzFRrXyVby/DIZKgfHVVBhfNWRC9+7da/FV5vgLCY3hNnQt
J3z4Dz/88FrHgndsoeuTFAI8o9i/XPzNDYZCo1r5KvWIDIZKgfHVVBhfNWQC
2lPqbeAXMHny5IJvX3OLilV7NKoRIN+L2gmffvppUX4/FyhfjfoxGAzFQLXy
VWqtGAyVAuOrqTC+aigldO67WHwVoBGgXlKoEdhwww39Z99//33R9iMdlK+i
WTAYio368FU8mcsR8FX87dAAUb922bJlXseOF2AU+KDQGKuj1YeD/+Mf//Ae
1Yxrv/vuu4ryGzGUDvQj+gr9hjrecY18EfoW/jYhhg0b5t+P+E5qH+T++uyz
z+Sbb74p0RHVD7x7qRf/z3/+M+V4FZwv3sPco+ROv/HGG77OM+fhyCOP9HyV
85rrOl9++WXynjY0LvB8/+qrr/z8err7j3uP/hjVh9I/qWfA99x79CflZtQ6
DqH9a9WqVd4LK7xf+Zt+X993RpxGgHvh4Ycfzml9fh9vBfaLc5Juf/ic5wvv
Pvafe4nj4W/q6UTvJermsi/U4+He5jyxDvch5y/dfY5nA+crn3UMlYUffvjB
P3/pP+nuP/o1/VJB3+JexIOO5zd9gz5L3+DdR78J+67yVerg5roO4P3Ku5fv
y2HcFwK+Sl1pnhscH54m1OCOe+9zvnjOzZs3z3tR45FHfXr8AakbzzuR62Aw
ZAP3CH2FGurU/Y5r1HHGG5jaPCHIb8aLmzrs9EF8evCZZI6Qe7wSwTsPnduj
jz7q31Nx4N6DP3CP4q2J7pxcSTyHqA2ED1KUe6Zbh7zxF154wT//jK82PsDL
Xn/9dbnuuuvS3n9XXHGFPPLIIykciftx1qxZ/rnPvXfBBRf4WsC8Gy+99NJa
yyqHe+mll2TixInei4Z1uK+pU0C/L9Q7MaoR0PqwmTzAAL8/d+5c/y7jPZ3u
Hca7HQ8wjoPnDfcSx0PtL34jei9tu+22fh9Yjpyr888/39dioD7PY4895vlD
HOCqixYtqrUO9+7jjz+edh1DZQEeOn/+fN9/0t1/3Jtz5sxJrkPfgqfBv3h+
c9+h5aRvPPTQQ57/0kcVyld5p8Stw/0SXQfAV6k3xzZ5d5QT4KvEfwH3G++3
bPmW3NMsx32tjb/tvWfIF/Qb3hfpGn0r2q9UD8B9FvbBSuZe7DfHk+0YdMwY
Hjv/P/roo9PqAdKtY3MhjRtcf/pBpnsv7l2gcZ7w3qMWcCY9AL9VjHcG73M4
QKgRoHYC/lfEi9JBjyfbPaH3UvQ44tZr2bKl//1bb70172eVXptqeb4ZUqEx
m3T3n74P4taL6xtRhHqA6Drptg1UD1CO/Q2+2r9//7zWYWxdrh4ihuqH6VdT
YfpVQynRpk2boutXMyFOI6DaVjhtMaB8ddy4cUX5PYMhRLXqV3v06OH/n6v/
Ml4omcaqjRHl7l1div1rqN8sFF+t7/7VZf1818l1eeOrqSj3exJUy33Ztm3b
gvHV+uxfdF3mNFu1alWLt8Ijx44dW0uHkI+OLdf9o66t8dVUlPt9Wez9Y/yE
PqfQqFa+So1okKvPyYQJE+Tll19uyN2qOFBvu9xi5yHQwRR7jME5aQgUiq+i
zavPc4Ljy3dOPV8vIXThufyG8dVUFNpjtCHQUPdIsX+zQ4cOBeOr9fHbils3
TiNA4xmCnm/69Olej5orcu1XWhcXnb0hAfJics2DKxWKfU+ScxzqVAuFauWr
6MLJ9Tz00ENzWoe8ELTfhjVAv0zOXblixowZMmbMmKL9HhwLTSWa8kKjUHyV
3BDGXnXF8OHDfd5EPqAeOvmZueKUU07xevlsML6aCq5POY8hAdeNPNVigXwh
cvMKnRe79957F4Svwi332muvOvl8cK3322+/tHVmeT5z/0VrfdG6du2a8++w
7Icffph1OY3rjh8/PudtVzvwhECTUc445JBDiuozw3iJ53yhn1XVylfxWt5n
n32SdfoGDBggI0aM8HmJca1bt27Su3fvtN83xsZzkndPqfcjXcMnXOfCeF8d
ddRRyeuM/259tn3aaaf57RxzzDHeV4laOlo7e+211/bvMrRk+HkX4vfatWsn
G220UV7rkKPLb3Mvso/MKVCHnFyMTp06Sd++fT2/wZMg3TbIq2QZzh3vVO6b
9dZbTw488EAZPHiw99mIrkPOMb9L39hjjz38OaF25W9/+1ufhzlq1KiUddjO
cccdJ/vuu6/fx3XXXdc/Q8kZGT16dOy+7bLLLrLZZpuVvJ+VU9thhx28V1+p
9yNTw5eN60t/4hrTT4YMGeLzg+u7bbYxdOhQv01iEfR5fos+iL8/zwFyFxj/
nXzyyfX6rRYtWvjt8m7Id13uj0GDBvl91OdG8+bNpVevXt4LJO6+0kYNBPa/
T58+frzGutwH3M/hOeS+5ne4r7R2bLQRI+YZFXcu2Aeel6p7oJ4Xv8k28TuI
27dNNtnEL9uzZ8+S97NyaTw/d91115LvR6bGc533S+fOnX2f5P7hWc21/u//
/u86b5d+on2QWA46TM4Fz3j6CfF4PuP3eNZn6ve5tIEDB/rt0m/zWY/3a7ny
VfyEuPesWbNmzZo1a9asNe5Wqb6QBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPB
YDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAY
DAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYEvj/
DNMb3A==
         "], {{0, 425}, {684, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{366.6666666666646, Automatic},
       ImageSizeRaw->{684, 425},
       PlotRange->{{0, 684}, {0, 425}}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"worsened", " ", "by", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "/", "2"}]], " ", "still", " ", "achieves", " ", "target", 
     " ", "at", " ", "1", "kHz"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8395415765131063`*^9, 3.839541767290801*^9}, {
   3.8395418067700777`*^9, 3.83954183461124*^9}, {3.839541958837928*^9, 
   3.8395420003643703`*^9}, {3.8395420898957777`*^9, 3.839542099826524*^9}, 
   3.8395421549945383`*^9, {3.8395422302947474`*^9, 3.839542232742361*^9}, {
   3.839542328645002*^9, 3.839542363815112*^9}, {3.839542620350111*^9, 
   3.839542717985924*^9}, {3.8395452998879004`*^9, 3.839545300746395*^9}, 
   3.839548311586141*^9, {3.8395483419223146`*^9, 3.839548404264525*^9}, {
   3.8395484387915697`*^9, 3.83954845963323*^9}, {3.8395488752889357`*^9, 
   3.839549057209939*^9}, {3.839549293430669*^9, 3.8395492957420673`*^9}, {
   3.8395495711020412`*^9, 3.839549596593495*^9}, {3.839551008824814*^9, 
   3.8395510470166063`*^9}, {3.839551110576812*^9, 3.839551159474628*^9}, {
   3.839551264003932*^9, 3.839551268533678*^9}, {3.8395512987855062`*^9, 
   3.8395513090445127`*^9}, {3.839551358269042*^9, 3.839551435169609*^9}, {
   3.839618724159737*^9, 3.839618741938689*^9}, {3.841277069738606*^9, 
   3.841277101507958*^9}, 3.8425775848125963`*^9, {3.842577800485285*^9, 
   3.8425778009713*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"9f736451-d92e-4103-8f1c-c2e093c38685"],

Cell[BoxData[
 InterpretationBox["\<\"configuration parameters:\\nparamSetName=Li et al, \
2020 + 400. kg, \[Lambda]0=\\!\\(\\*RowBox[{\\\"\\\\\\\"2.\\\\\\\"\\\", \\\"\
\[Times]\\\", SuperscriptBox[\\\"10\\\", \\\"\\\\\\\"-6\\\\\\\"\\\"]}]\\) m, \
Larm=\\!\\(\\*RowBox[{\\\"\\\\\\\"4.\\\\\\\"\\\"}]\\) km, \
Lsrc=\\!\\(\\*RowBox[{\\\"Lsrc\\\"}]\\) m, \
Pcirc=\\!\\(\\*RowBox[{\\\"\\\\\\\"3.\\\\\\\"\\\"}]\\) MW, \
Titm=\\!\\(\\*RowBox[{\\\"Titm\\\"}]\\), \
Tsrm=\\!\\(\\*RowBox[{\\\"\\\\\\\"0.046\\\\\\\"\\\"}]\\), M=\\!\\(\\*RowBox[{\
\\\"\\\\\\\"400.\\\\\\\"\\\"}]\\) kg\\nderived \
parameters:\\n\\!\\(\\*FractionBox[\\(\[Omega]FSR\\), \\(2  \
\[Pi]\\)]\\)=\\!\\(\\*FractionBox[\\(1\\), \
\\(\[Tau]RoundTripArm\\)]\\)=\\!\\(\\*RowBox[{\\\"\\\\\\\"37.5\\\\\\\"\\\"}]\\\
) kHz, \\!\\(\\*FractionBox[\\(1\\), \
\\(\[Tau]RoundTripSRC\\)]\\)=\\!\\(\\*RowBox[{\\\"\\\\\\\"133.\\\\\\\"\\\"}]\\\
) kHz, \\!\\(\\*FractionBox[\\(\[Gamma]R\\), \\(2  \
\[Pi]\\)]\\)=\\!\\(\\*RowBox[{\\\"\\\\\\\"0.5\\\\\\\"\\\"}]\\) kHz, \
\\!\\(\\*FractionBox[\\(\[Omega]s\\), \\(2  \
\[Pi]\\)]\\)=\\!\\(\\*RowBox[{\\\"\\\\\\\"5.\\\\\\\"\\\"}]\\) kHz; \
\\!\\(\\*FractionBox[\\(\[Omega]s\\), \\(\[Gamma]R\\)]\\)=\\!\\(\\*RowBox[{\\\
\"\\\\\\\"10.\\\\\\\"\\\"}]\\)\"\>",
  StringForm[
  "configuration parameters:\nparamSetName=``, \[Lambda]0=`` m, Larm=`` km, \
Lsrc=`` m, Pcirc=`` MW, Titm=``, Tsrm=``, M=`` kg\nderived parameters:\n\
\!\(\*FractionBox[\(\[Omega]FSR\), \(2  \[Pi]\)]\)=\!\(\*FractionBox[\(1\), \
\(\[Tau]RoundTripArm\)]\)=`` kHz, \!\(\*FractionBox[\(1\), \
\(\[Tau]RoundTripSRC\)]\)=`` kHz, \!\(\*FractionBox[\(\[Gamma]R\), \(2  \[Pi]\
\)]\)=`` kHz, \!\(\*FractionBox[\(\[Omega]s\), \(2  \[Pi]\)]\)=`` kHz; \
\!\(\*FractionBox[\(\[Omega]s\), \(\[Gamma]R\)]\)=``", 
   "Li et al, 2020 + 400. kg", 
   NumberForm[2.*^-6], 
   NumberForm[4.], 
   NumberForm[$CellContext`Lsrc], 
   NumberForm[3.], 
   NumberForm[$CellContext`Titm], 
   NumberForm[0.046], 
   NumberForm[400.], 
   NumberForm[37.5, 3], 
   NumberForm[133.42473608833768`, 3], 
   NumberForm[0.5, 3], 
   NumberForm[5., 3], 
   NumberForm[10.]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.839542002112467*^9, {3.839542091761191*^9, 3.839542100173777*^9}, 
   3.839542233187345*^9, {3.8395426601737537`*^9, 3.8395426710168333`*^9}, 
   3.839542720032159*^9, 3.839545305269196*^9, {3.839548357069672*^9, 
   3.83954840767054*^9}, {3.839548447378302*^9, 3.839548461095704*^9}, {
   3.83954888982041*^9, 3.839548901124569*^9}, {3.839548967702029*^9, 
   3.8395490578182297`*^9}, 3.839549303304253*^9, {3.839549584150291*^9, 
   3.839549604274919*^9}, 3.8395510284537983`*^9, 3.839551105039021*^9, {
   3.839551136164467*^9, 3.8395511599350233`*^9}, 3.839551269051976*^9, 
   3.8395513099934053`*^9, 3.839551366312825*^9, {3.839551426601362*^9, 
   3.8395514363767*^9}, 3.841277048894312*^9, 3.841277102736815*^9, 
   3.842576100085494*^9, 3.842577110113858*^9, {3.842577588331923*^9, 
   3.842577602208117*^9}, 3.842577801396659*^9, 3.842812812170026*^9, 
   3.843599942527176*^9, 3.843974762614379*^9},
 CellLabel->
  "During evaluation of \
In[91]:=",ExpressionUUID->"b72b67d1-f24b-4367-878e-2e92a91d7867"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
/h+vkkhZ
          "]]}, Annotation[#, "Charting`Private`Tag$23520#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{0, Small}]], 
         LineBox[CompressedData["
1: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
zIS6aZYQHPV8fpCVGP8HLSrMNQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$23520#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwVkns01HkYxqmQDmLGMObSjCLaRilTVMprV8rvK9nJ5pIurmFF5TIuuzsu
1dquDJoiJfbiMqrNJZ1oXxpKTrctE2Jd0lFylBoblexv/3jPe54/3uc873M+
lsGxkrBZWlpaAfT8vxlLcHP2WR14sZ4Vc0/pgVJeonedXBfqvn2o137XAwU2
JwL0FHPBKYT/eJkehRFXqgscc+bBksFe13cuFK6YX87aWmcAf6cZ29YkUyhy
9VI11RlBTH+y7G0FhdusBtSGB4zBNGKk0LqbwprArgjLXGN471CmSuij0Cz/
0UdxrTFEpm+0rhiisFuneUHglDEEFHV33xyjMGi4JLwi3QQWxlzoy9Mm+C9P
XRl30QRe5j35fE2H4FGJ/rhzkwn4PTMMatYnWNMYm/pAiwEwFic6YULQ430J
nhEy4EuPZ/0WFsF/bNU6wcCAZb5ZTybYBOfmOWdrZAxIXenhNi0gOFHH84gu
YcDQtWLlr4sIDnZ91h5SMSAy/xDf3oZgg6Ax7rE+E1qn9jtr7AiWf10kIiIm
2H5MybZbQfB02I8vmr2YsOz6mjWeYoKxlet9r+Yy4d0FyfJ1awmeave71VfN
hEnPUy69zgQvv45bbviECVbfs89HuhB8s7RCL8LUFFR7Y3W+cSM437MlLl9s
Cv2ps6az3Qkuj+7va/YxBfFGkbB9M+2vNKvn55vCpI+Tru4WgskquXl5jSkU
nbObmPYimNljJBU/MYV7W7iaIW+CCgO91YTJAjeVX3SGD8GLVpn56pUsGK9M
ZK3dTrDSeUYTJGGBmKOye+5L8K/oD9VJOSxw3NW5ymAHQcuDwp+vVrPgWLRO
aVUg7S/1CBjtYMFP3daGrrsIbsoo1NrDMYN1ooEdrkEEHyhctmwqNYOzjQlB
TeEEk5S7026VmMNucXqtJpZg2Ln9KUEt5vCUJWYuPUBQcjw9fmbYHH5gayaC
DxIURZdGrLNjw2HFU7eeeIIWgTXBXVvZ8Mo4zl2YSFDXsyVQepANt8RHpqKk
BAeWDntXX2ODtuoPC04KwXqm/4bLXWx4JA29m5JKMPvT3aWVn9hwaOps3vAP
BDe0X9ItdbEA80hF1msZQVa1UHM+yALUV/s7DqcTHC2QDxRkWkCh00vZykyC
hVGJDfLbFtBfYrOv7QjB37cu2uk2bAHC64yBvCyCV8QPpyd0OTByR/tGwlGC
qi9LXPzdOTAaYjCWepLg/efqvnnhHOBWrRgvySbYdSczreEwB4QWF2WDcoJj
8t4mQQsHsj9NsCsUBL3DHNWyYQ5IHNMc9hYQrHbMGenT54LXgyrPtUV0nz1u
zGIvLpw0sFmoV0qw+9J5G60DXEhyKroy8htB5/TJdXtyuZCNi4drywie3ybx
xlouuDcU53hXEtRerAwVdnKhODJ+b2EVze8EiFZPcsEkvm7S5zLdf0vHe8Lm
gXtcw6KMKwSb86JuBDnxYPHstvEpWvuGzmRI/XgQ+0bmL6f1qEMedSKJB8pG
aagVfZ8xewmj9AwP2nm1DjlKguzHjV319TzAqsHGVjpPVYnk4v1OHuxk1z1r
pvMX7M7rkX/iQbh9uHwW/V8WT23uu4APe78TmunlE0zsMt/GdeVD71OqU+s4
wZDT/if7Qviw2i+DWGfQfW0rbCs9wgdNlaGijOZhg3HvnIhyPjSUrYq6Hk3z
c3RP6tsxPiSI7pxk07yr7RPfamsJwPBmyvZj0xTaNYXM4BcBuNYsbuX9SaHl
rp6O5F+EsDW3Kq01hEKeLJOEnhUCJT6+T7CDQnbxV01e5UI4NTR/c6aEQqPB
JOWiNiGYfZAKIl0p1J8tXGjUJYTWG66Dr5wonGN1WzH5UggblSn8OHsKZ9xi
DJ9P0v6fZ6g5thR+DGNl3ptrCbbJmtFzAgr/A3Hsk7o=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$23520#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 1]], 
         LineBox[CompressedData["
1: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
KWgqiqfunOcAfzT77g63U9D/AeSF4kk=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$23520#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$23520#5"]& ]}}, {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {
       Charting`ScaledTickValues[{Log, Exp}], 
       Charting`ScaledTickValues[{Log, Exp}]}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, AxesOrigin -> 
     NCache[{
        Log[10], -Log[10000000000000000000000000]}, {
       2.302585092994046, -57.564627324851145`}], FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     GridLines -> {{2.302585092994046, 3.912023005428146, 4.605170185988092, 
       6.214608098422191, 6.907755278982137, 8.517193191416238}, {}}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{2.30258535193605, 
        8.517192932474234}, {-56.38545585612145, -49.24951102776832}}, {{
        2.30258535193605, 
        8.517192932474234}, {-56.38545585612145, -51.35001922642895}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {2.302585092994046, -57.564627324851145`}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(2\\), \\(\\(1/2\\)\\(\\\\ \
\\)\\)]\\)strain sensitivity (NSR)\\n/ \\!\\(\\*SuperscriptBox[\\(Hz\\), \
\\(\\(-1\\)/2\\)]\\) (log scale)\"", TraditionalForm], ""}, {
        FormBox[
        "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"", TraditionalForm], 
        FormBox[
        "\"nondegenerate internal squeezing\\nparameters of Li et al, 2020 + \
400. kg and a factor of two in \\!\\(\\*SubscriptBox[\\(S\\), \\(h\\)]\\) \
(from T norm.?)\\ncompare to Fig.5 from Li et al, 2020\"", TraditionalForm]}},
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{
         Log[10], 
         Log[5000]}, {-Log[10000000000000000000000000], -
         Log[20000000000000000000000]}}, {{2.302585092994046, 
       8.517193191416238}, {-57.564627324851145`, -51.35001922642895}}], 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"single-mode conventional detector\"", 
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \\(thr\\)]\\)=0.99, \\!\
\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"0.\\\\\\\"\\\", TraditionalForm]\\)ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"0.\
\\\\\\\"\\\", TraditionalForm]\\)ppm, \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
c\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"0.\\\\\\\"\\\", TraditionalForm]\\)ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"0.\\\
\\\\\"\\\", TraditionalForm]\\), \[Rho]\[NotEqual]0\"", 
         StringForm[
         "\[Chi]/\!\(\*SubscriptBox[\(\[Chi]\), \(thr\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``, \[Rho]``", "0.99", 
          NumberForm[0.], 
          NumberForm[0.], 
          NumberForm[0.], 
          NumberForm[0.], "\[NotEqual]0"], Editable -> False], FontFamily -> 
        "Monospace", StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \\(thr\\)]\\)=0.98, \\!\
\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"100.\\\\\\\"\\\", \
TraditionalForm]\\)ppm, \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
b\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"1000.\\\\\\\"\\\", \
TraditionalForm]\\)ppm, \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
c\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"1000.\\\\\\\"\\\", \
TraditionalForm]\\)ppm, \\!\\(\\*SubscriptBox[\\(R\\), \
\\(PD\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"0.1\\\\\\\"\\\", \
TraditionalForm]\\), \[Rho]\[NotEqual]0\"", 
         StringForm[
         "\[Chi]/\!\(\*SubscriptBox[\(\[Chi]\), \(thr\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``, \[Rho]``", "0.98", 
          NumberForm[99.99999999999999], 
          NumberForm[1000.], 
          NumberForm[1000.], 
          NumberForm[0.1], "\[NotEqual]0"], Editable -> False], FontFamily -> 
        "Monospace", StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \\(thr\\)]\\)=0.98, \\!\
\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"75.\\\
\\\\\"\\\", TraditionalForm]\\)ppm, \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
b\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"1000.\\\\\\\"\\\", \
TraditionalForm]\\)ppm, \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
c\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"100.\\\\\\\"\\\", \
TraditionalForm]\\)ppm, \\!\\(\\*SubscriptBox[\\(R\\), \
\\(PD\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"0.1\\\\\\\"\\\", \
TraditionalForm]\\), \[Rho]\[NotEqual]0\"", 
         StringForm[
         "\[Chi]/\!\(\*SubscriptBox[\(\[Chi]\), \(thr\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``, \[Rho]``", "0.98", 
          NumberForm[75.], 
          NumberForm[1000.], 
          NumberForm[99.99999999999999], 
          NumberForm[0.1], "\[NotEqual]0"], Editable -> False], FontFamily -> 
        "Monospace", StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \\(thr\\)]\\)=0.95, \\!\
\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"75.\\\
\\\\\"\\\", TraditionalForm]\\)ppm, \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
b\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"1000.\\\\\\\"\\\", \
TraditionalForm]\\)ppm, \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
c\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"100.\\\\\\\"\\\", \
TraditionalForm]\\)ppm, \\!\\(\\*SubscriptBox[\\(R\\), \
\\(PD\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"0.1\\\\\\\"\\\", \
TraditionalForm]\\), \[Rho]\[NotEqual]0\"", 
         StringForm[
         "\[Chi]/\!\(\*SubscriptBox[\(\[Chi]\), \(thr\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``, \[Rho]``", "0.95", 
          NumberForm[75.], 
          NumberForm[1000.], 
          NumberForm[99.99999999999999], 
          NumberForm[0.1], "\[NotEqual]0"], Editable -> False], FontFamily -> 
        "Monospace", StripOnInput -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.33333333333333337`,
                     0]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.33333333333333337`,
                     0]], {}}}, AspectRatio -> Full, ImageSize -> {25, 15}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4444444444444444, 0.22222222222222227`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0.33333333333333337`", ",", 
                    "0"}], "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 0], Editable -> 
                    False, Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.84127710388325*^9, 3.842576101359231*^9, 3.842577111368136*^9, {
   3.842577589590857*^9, 3.842577603491088*^9}, 3.842577802748158*^9, 
   3.8428128134017897`*^9, 3.843599943777055*^9, 3.843974763267902*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"edcb2d1d-b316-4c71-a290-bc18c6d9a3ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"singularityThr", "[", 
     RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}], 
    RowBox[{"singularityThr", "[", 
     RowBox[{"0", ",", "0", ",", "0", ",", "False"}], "]"}]], ",", 
   "\"\<  \>\"", ",", 
   FractionBox[
    RowBox[{"singularityThr", "[", 
     RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "False"}], "]"}], 
    RowBox[{"singularityThr", "[", 
     RowBox[{"0", ",", "0", ",", "0", ",", "False"}], "]"}]]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valsList1", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "4.93", " ", 
        SuperscriptBox["10", "3"]}], 
       RowBox[{"(*", 
        RowBox[{"Hz", ",", " ", 
         RowBox[{"value", " ", "from", " ", "Li"}]}], "*)"}], ",", 
       FractionBox["\[Pi]", "2"], ",", "0", ",", "0", ",", "0", ",", "0", ",",
        "True", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["4.93", "5"], 
        RowBox[{"(*", 
         RowBox[{
         "using", " ", "98.6", "%", " ", "\[Chi]Thr", " ", "like", " ", 
          "Li"}], "*)"}], 
        RowBox[{"singularityThr", "[", 
         RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}]}], 
       ",", 
       FractionBox["\[Pi]", "2"], ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
       "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["4.93", "5"], 
        RowBox[{"(*", 
         RowBox[{
         "using", " ", "98.6", "%", " ", "\[Chi]Thr", " ", "like", " ", 
          "Li"}], "*)"}], 
        RowBox[{"singularityThr", "[", 
         RowBox[{"0", ",", "0", ",", "0", ",", "False"}], "]"}]}], ",", 
       FractionBox["\[Pi]", "2"], ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
       "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["4.93", "5"], 
        RowBox[{"(*", 
         RowBox[{
         "using", " ", "98.6", "%", " ", "\[Chi]Thr", " ", "like", " ", 
          "Li"}], "*)"}], 
        RowBox[{"singularityThr", "[", 
         RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "False"}], "]"}]}], 
       ",", 
       FractionBox["\[Pi]", "2"], ",", "Tla1", ",", "Tlb1", ",", "Tlc1", ",", 
       "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["4.93", "5"], 
        RowBox[{"(*", 
         RowBox[{
         "using", " ", "98.6", "%", " ", "\[Chi]Thr", " ", "like", " ", 
          "Li"}], "*)"}], 
        RowBox[{"singularityThr", "[", 
         RowBox[{"0", ",", "0", ",", "0", ",", "False"}], "]"}]}], ",", 
       FractionBox["\[Pi]", "2"], ",", "Tla1", ",", "Tlb1", ",", "Tlc1", ",", 
       "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotASDShwRP", "[", 
  RowBox[{"valsList1", ",", "None", ",", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Red", ",", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Dashed"}], "}"}], ",", "Orange", ",", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", "Dashed"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", 
     RowBox[{"3", " ", 
      SuperscriptBox["10", "3"]}]}], "}"}], ",", "None", ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "24"}]]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"therefore", ",", " ", 
    RowBox[{
    "the", " ", "effect", " ", "is", " ", "small", " ", "and", " ", "can", 
     " ", "be", " ", "left", " ", "to", " ", "future", " ", "work"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.843601405788844*^9, {3.8436014383205433`*^9, 3.843601463196534*^9}, {
   3.843601545990549*^9, 3.843601651133142*^9}, {3.843601694820436*^9, 
   3.843601830775961*^9}, {3.8436021545996733`*^9, 3.843602185760735*^9}, {
   3.843602618563015*^9, 
   3.8436026290079823`*^9}},ExpressionUUID->"55fa506e-ecfe-42da-bc8a-\
b1bd0aab6c61"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "0.9901595194605856`", "\[InvisibleSpace]", "\<\"  \"\>", 
   "\[InvisibleSpace]", "0.9991939532508176`"}],
  SequenceForm[0.9901595194605856, "  ", 0.9991939532508176],
  Editable->False]], "Print",
 CellChangeTimes->{{3.843602180624283*^9, 3.843602186529483*^9}},
 CellLabel->
  "During evaluation of \
In[211]:=",ExpressionUUID->"d2bc14d1-1c45-4449-8702-e3fd1aa8ad00"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
4fP1nSHSpbOg/udAZ0BCNlz/P/aluNg=
      
      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[1, 0, 0], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{354, 21, 22, 350, 353, 349, 348, 347, 346, 345, 344, 
            352, 343, 355, 351, 
            356}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwt0EkzggEAgOFPyFpIB0uktAhZypatouyJLN2bcc3/v/U00+GZ9/6mev+d
/lgQBD8Me0OeFULcssMq41QpsMYbZ0xQY5d1WpwzSZ09ErxzQZg79tlginuK
bDLNDLM0OCDJHE0O2WKeB45IEeGRY9K0qRDliRJfbPPBJb8s8EyZbzJ8ckWX
RV44GX3K0uGaJV45JUeMZeL8GToADTgRIQ==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$63355#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          LineBox[{358, 89, 90, 91, 92, 93, 94, 95, 118, 107, 102, 124, 113, 
           96, 119, 108, 129, 103, 125, 114, 132, 97, 120, 109, 130, 104, 126,
            115, 133, 98, 121, 110, 131, 105, 127, 116, 134, 99, 122, 111, 
           106, 128, 117, 100, 123, 112, 359}]}, 
         Annotation[#, "Charting`Private`Tag$63355#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{Small, Small}]], 
          
          LineBox[{360, 136, 137, 138, 139, 140, 141, 142, 170, 157, 150, 177,
            164, 143, 171, 158, 183, 151, 178, 165, 187, 144, 172, 159, 184, 
           152, 179, 166, 188, 145, 173, 160, 185, 153, 180, 167, 189, 146, 
           174, 161, 186, 154, 181, 168, 147, 175, 162, 155, 182, 169, 148, 
           176, 163, 156, 361}]}, 
         Annotation[#, "Charting`Private`Tag$63355#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]], 
          LineBox[CompressedData["
1:eJwVzOkyQnEcx+GTSiUuwh01XYKXmtElSkhZh7RQshRKyhLKkjxePPM5v+/8
5yyvZNNroSAIUqz6GGmLYwJ3X9Z545KT/9n+qDneuaLMnH2gG3xwzSlh+1Dz
jLmhQsT+pJtMaFNli20KfNKhxg5f3FKnSIlv7oj735lG9VmTuqs/3JNwn+u8
vuii7umULgvuhsb0VZd0X3/p0eSAGQ9ccMgRGW//ACcyOxM=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$63355#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0], 
           Dashing[{Small, Small}]], 
          
          LineBox[{365, 299, 288, 329, 310, 271, 319, 300, 289, 330, 311, 272,
            320, 301, 290, 331, 312, 273, 321, 302, 291, 332, 313, 274, 322, 
           303, 292, 333, 314, 275, 323, 304, 293, 276, 277, 278, 279, 280, 
           324, 305, 294, 334, 315, 281, 325, 306, 338, 295, 335, 316, 341, 
           282, 326, 307, 339, 296, 336, 317, 342, 283, 327, 308, 340, 297, 
           337, 318, 284, 328, 309, 298, 285, 286, 364}]}, 
         Annotation[#, "Charting`Private`Tag$63355#5"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{0, Small, Small, Small}]], 
          
          LineBox[{354, 356, 351, 355, 343, 352, 344, 345, 346, 347, 348, 349,
            353, 350}]}, 
         Annotation[#, "Charting`Private`Tag$63355#6"]& ]}}], {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
     AxesOrigin -> {4.605170185988092, -56.72786253308403}, 
     FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 0}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True, "ClippingRange" -> {{{4.605170327704649, 
        8.00636742593369}, {-56.72786253308403, -53.620381676000896`}}, {{
        4.605170327704649, 
        8.00636742593369}, {-56.72786253308403, -55.262042231857095`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {4.605170185988092, -56.72786253308403}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"strain sensitivity (NSR)\\n/ \\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\
\\(-1\\)/2\\)]\\) (log scale)\"", TraditionalForm], ""}, {
        FormBox[
        "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"", TraditionalForm], ""}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 350, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True}, PlotRange -> NCache[{{
         Log[100], 
         Log[3000]}, {All, -Log[1000000000000000000000000]}}, {{
        4.605170185988092, 8.006367567650246}, {All, -55.262042231857095`}}], 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\[Chi]Thr=0.98, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=0.   ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.    ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.    ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
         StringForm[
         "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.98", "0.   ", "0.    ", "0.    ", "0   "], Editable -> 
         False], FontFamily -> "Monospace", StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\[Chi]Thr=0.98, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
         StringForm[
         "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.98", "100. ", "1000. ", "1000. ", "0.1 "], Editable -> 
         False], FontFamily -> "Monospace", StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\[Chi]Thr=0.99, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
         StringForm[
         "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.99", "100. ", "1000. ", "1000. ", "0.1 "], Editable -> 
         False], FontFamily -> "Monospace", StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\[Chi]Thr=0.98, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=75.  ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=100.  ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
         StringForm[
         "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.98", "75.  ", "1000. ", "100.  ", "0.1 "], Editable -> 
         False], FontFamily -> "Monospace", StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\[Chi]Thr=0.98, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=75.  ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=100.  ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
         StringForm[
         "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.98", "75.  ", "1000. ", "100.  ", "0.1 "], Editable -> 
         False], FontFamily -> "Monospace", StripOnInput -> False], 
       "\"5\[Cross]\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-25\\)]\\)\\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) target \
for 1\[Dash]4 kHz\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.84360141115563*^9, 3.843601463902701*^9, {3.843601535228181*^9, 
   3.843601615772813*^9}, {3.8436016523536777`*^9, 3.843601831940571*^9}, {
   3.843602181349559*^9, 3.8436021872604437`*^9}},
 CellLabel->
  "Out[213]=",ExpressionUUID->"8462c7de-138b-4609-890e-be4298e8bd13"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Li", " ", "does", " ", "not", " ", "update", " ", "their", " ", 
    "parameter", " ", 
    RowBox[{"(", "G", ")"}], " ", "to", " ", "lossy", " ", "threshold"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ASDShConwRP", "[", 
     RowBox[{
      RowBox[{"\[CapitalOmega]0_", "?", "NumericQ"}], ",", 
      RowBox[{"Tla_", "?", "NumericQ"}], ",", 
      RowBox[{"Rpd0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"\[Gamma]a", "+", "\[Gamma]R"}], ")"}], " ", 
          SuperscriptBox["\[Rho]RP", "2"]}], 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Gamma]a", "+", "\[Gamma]R"}], ")"}], "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Gamma]a", "+", "\[Gamma]R"}], ")"}], "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", "\[Gamma]R"}], "-", 
          RowBox[{"4", " ", "Rpd", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", "\[Gamma]R"}]}]]}], "]"}], 
      "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tla1", "=", 
     RowBox[{"75", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";", 
    RowBox[{"Tlb1", "=", "Tlb0"}], ";", 
    RowBox[{"Tlc1", "=", 
     RowBox[{"100.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"setConfigParamsCustom", "[", 
    RowBox[{
     FractionBox["2.`", 
      SuperscriptBox["10", "6"]], ",", 
     RowBox[{"4.`", " ", 
      SuperscriptBox["10", "3"]}], ",", "None", ",", 
     RowBox[{"3.`", " ", 
      SuperscriptBox["10", "6"]}], ",", "None", ",", "0.046`", ",", "200.", 
     ",", "\"\<Li et al, 2020 + 400. kg\>\"", ",", 
     RowBox[{"2", " ", "\[Pi]", " ", "500.`"}], ",", 
     RowBox[{"2", " ", "\[Pi]", " ", "5000.`"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsList1", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "4.93", " ", 
          SuperscriptBox["10", "3"]}], 
         RowBox[{"(*", 
          RowBox[{"Hz", ",", " ", 
           RowBox[{"value", " ", "from", " ", "Li"}]}], "*)"}], ",", 
         FractionBox["\[Pi]", "2"], ",", "0", ",", "0", ",", "0", ",", "0", 
         ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox["4.93", "5"], 
          RowBox[{"(*", 
           RowBox[{
           "using", " ", "98.6", "%", " ", "\[Chi]Thr", " ", "like", " ", 
            "Li"}], "*)"}], 
          RowBox[{"singularityThr", "[", 
           RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}]}], 
         ",", 
         FractionBox["\[Pi]", "2"], ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox["4.93", "5"], 
          RowBox[{"(*", 
           RowBox[{
           "using", " ", "98.6", "%", " ", "\[Chi]Thr", " ", "like", " ", 
            "Li"}], "*)"}], 
          RowBox[{"singularityThr", "[", 
           RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "False"}], "]"}]}], 
         ",", 
         FractionBox["\[Pi]", "2"], ",", "Tla1", ",", "Tlb1", ",", "Tlc1", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotStyle0", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Darker", "[", "Gray", "]"}], ",", "Blue", ",", "Red", ",", 
       "Orange", ",", 
       RowBox[{"{", 
        RowBox[{"LightGray", ",", "Dashed"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Cyan", ",", "Dashed"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Magenta", ",", "Dashed"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"monoS", "[", "str_", "]"}], ":=", 
    RowBox[{"Style", "[", 
     RowBox[{"str", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Monospace\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ASDShConwRP", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", "0", ",", "0"}], "]"}], 
           "}"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ASDShwRP", "@@", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
               RowBox[{"valsList1", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "valsList1", "]"}]}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"qnoisesc", ",", "qnoisewlc", ",", "totalnoisewlc"}], 
           "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "10", ",", 
         SuperscriptBox["10", "4"]}], "}"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "14", "]"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<sensitivity / \!\(\*SuperscriptBox[\(Hz\), \
\(\(-1\)/2\)]\)\>\"", ",", "14"}], "]"}], ","}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<frequency / Hz\>\"", ",", "14"}], "]"}], ","}], 
           "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "650"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "plotStyle0"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"10", "^", 
           RowBox[{"-", "25"}]}], ",", 
          RowBox[{"5", " ", 
           RowBox[{"10", "^", 
            RowBox[{"-", "23"}]}]}]}], "}"}]}], ",", 
       RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}], ",", 
     
     RowBox[{"Framed", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"legendOrder", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "\[Rule]", "6"}], ",", 
             RowBox[{"5", "\[Rule]", "7"}], ",", 
             RowBox[{"2", "\[Rule]", "1"}], ",", 
             RowBox[{"6", "\[Rule]", "2"}], ",", 
             RowBox[{"3", "\[Rule]", "3"}], ",", 
             RowBox[{"7", "\[Rule]", "5"}], ",", 
             RowBox[{"4", "\[Rule]", "4"}]}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"Permute", "[", 
            RowBox[{"plotStyle0", ",", 
             RowBox[{"SparseArray", "[", "legendOrder", "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Permute", "[", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "\"\<lossless, single-mode detector\>\"", "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<nondegenerate internal squeezing: lossless\>\"", ",", 
                 "\[IndentingNewLine]", 
                 "\"\<nondegenerate internal squeezing: realistic optical \
losses\>\"", ",", "\[IndentingNewLine]", 
                 "\"\<nondegenerate internal squeezing: optimistic optical \
losses\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Li et al, 2020: lossless, single-mode detector\>\"", 
                 ",", "\"\<Li et al, 2020: no optical loss, quantum noise\
\[Dash]limited sensitivity\>\"", ",", 
                 "\"\<Li et al, 2020: no optical loss, quantum and thermal \
noise\[Dash]limited sensitivity\>\""}], "}"}]}], "]"}], ",", 
             RowBox[{"SparseArray", "[", "legendOrder", "]"}]}], "]"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "14", "]"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"FrameStyle", "\[Rule]", "Thin"}]}], "]"}], ",", "Bottom"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<nIS_vs_sWLC.pdf\>\"", ",", "%"}], "]"}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.842575406021821*^9, 3.8425754077503443`*^9}, {
   3.842575459271105*^9, 3.842575467152527*^9}, 3.8425755207476797`*^9, {
   3.8425758430592213`*^9, 3.842575853726335*^9}, {3.8425761735804157`*^9, 
   3.842576301226389*^9}, {3.8425763348500557`*^9, 3.8425763350534067`*^9}, {
   3.842576383882304*^9, 3.842576386405072*^9}, {3.842576509586738*^9, 
   3.842576516775724*^9}, {3.842576733643108*^9, 3.842576863758369*^9}, {
   3.842576970645115*^9, 3.842576976995243*^9}, {3.842577059475244*^9, 
   3.8425770893819017`*^9}, {3.84257712915211*^9, 3.842577129489462*^9}, {
   3.842577285841662*^9, 3.842577519190515*^9}, {3.842577619497171*^9, 
   3.842577637372291*^9}, {3.842577687969715*^9, 3.842577783386281*^9}, {
   3.842577830413497*^9, 3.842577942340417*^9}, {3.842577995825232*^9, 
   3.842578020837932*^9}, {3.842578066492166*^9, 3.842578069247469*^9}, {
   3.84257813929818*^9, 3.8425781748965597`*^9}, {3.84257829230639*^9, 
   3.842578465253433*^9}, {3.842579139243135*^9, 3.842579141452244*^9}, {
   3.8428127905453253`*^9, 3.842812794545993*^9}, {3.843600027890472*^9, 
   3.843600055226822*^9}, {3.843600301956397*^9, 3.843600380373651*^9}, {
   3.843601154931041*^9, 3.8436011753215923`*^9}, {3.843974753976775*^9, 
   3.843974834493637*^9}, {3.843974946195343*^9, 3.8439749701337013`*^9}, {
   3.843975003276115*^9, 3.8439750055483093`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"3defe545-0e93-4379-a632-8bb4174d048f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]], 
         
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26407#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJw1VFlQ03cYTJGj4VCSEBIIGBI5RY4K4YiKn4hI8v8RR0DxgCqMxFJKqKnS
IngAg9IGRhDqVZVDFC2nWOUUvqJCR0FRUItVThFEhFCLCnKUPvRhZ2dn9mVn
d1YQHhMQoUGj0QLm8R/fiP0KZ700YWAVW9FaLMFDTVbWBfmaoNovD15TLcG6
3u7LvnQdOO9MWRtoS1GSLWc7rqcDjd3HrvKXYpncJLU9Tg8S7ccN+7OkOBtZ
6Wn33ABm1HUtN7qlKNPIHO7VNYQoxvu0KisKGUO1wUdXM0BZnh/gHENhs/bt
gd0RDBBf35vX9T2FB6xavvNTMUBhlbdzz2EKX4c/P0Z/yoD0LcJ4t0wKcxJf
mg9PM2BG7ioLO03hptyRortCJqTYPlaF5VH4+4vpZpWCCfmKyo62cgpH7uQV
9GQyYaA/WVFdSSGn1DdRdJ0JnbRdN6PrKYw+mCHu/sSENRssY+zvUXhKLuK4
8lnAtvhts+NDCm/Jnr1L9WZB2eClpeonFJrwLUuW/8iCJeLBkcJeCgNqKtOT
yliQ29OTpjFIYdomSvHoMQvi12k9o49Q2KTukgmnWdBM8c3r1RTOqZROSqER
fOAMp1tMUOhho23Y6GcEXVEpUpdJCpWNp9WMGCNo6LbxnZymcOAjXr1aawSe
It8tpQsIZoeO9+zrNoJim5yhfdoEvRsFhuIFbIjU/WOYTieotg5YPWvNhp8H
PRsUegRzVEmKRikbtH8513PZgKBMXXHuiIINXh5uD+sWEZwO6m+RHmfDqfK1
emUMglsX+9i3d7Lhfchcx2o2Qe11T8X902xoX2Vd1GVMsCLqa+k7vjGoJq85
RHMJ6lZnRLLkxnDpoSRhN49gTeCLwsC/jeGK4IKHg4DgXocdtV9yOaCZOMNp
FhJ00um9H+nFAZtf9auiLAkW1LycOPQTBxI8fMz6bQjuyJbTVeUcCJ14X1Jn
R9BUMWR24gkHJthrckvtCR4TjKwtFnJh47mM2iEngvW3dS/Z+3JBue1+9sLl
BEd3231eFMmFxuDQiCDX+byl8pYr5VxgT/la+XkSPLgxxdGugwuxBXGLJ1cQ
LPnnQsblD1zw//Ze+QMvgvoreoMKvUxg58kk5msfgtLM0RpBhAnIbqoDo/wI
pg5+sjirMgHzrOQBLUKwaRX9qHGFCXQ/fdFRuIGgVrbx24w/TSDO3T3OPZCg
z/CSQL05E0guONx2bDPBJPiiOsXKFJyT704d2EoQT3jxacQUTre8edCwneDs
CJWyX2kKxa/yXbVCCYq16u7BKVMwXzGlNxVCMNZ8GVOn3hRWDhR9EzzvrxCd
3dLabwpntnM0e4MJvvXXz8mi80DjjcaihACCtvKEga1OPGh1sb3mRhHcdXDE
3mITDyo652Q+3gRzT4QoX+3ngYGNzkW1O8HnpS1Vxbk8GGhqo2csI5ie0ek/
eIsHH7S6xtfP9+mlfNUnGORB15iBKGt+HzkimsFJBzPg1je+U81QGF7nEpZY
YwY3mDYVBa0UhoYb2jmOmEOqL50piaaQFtQecYDOh2sP1onieRTqj2mFBfAt
wLuPPzreLMWFK0sy2JUW8/tMja//QYovS5unrvgIIPauIVPsLMWJt2f3Lu0S
gCif6RHdJ8HcUWnIX2MCiD9SMnWwU4Jk7OPatM+EcLFhp8vxNgleUAexRi2F
YCumFdTVS1A2rvHpvJsQtu1JK22/LsGp8fK+DX5COPPIrePN/P/dudlG0ub1
/3/4LzG4W6Y=
          "]]}, Annotation[#, "Charting`Private`Tag$26407#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJw9lHs0FHgUx6WMxlLzMGbGzDRmlkpCq8jaHjfaycwvEpLOiWLDmR7sTtTR
li2pWNTYHKqV95FKJEqG2tv0UJu2h9pZZRg7pNUYeijP2tl/9o977vn+cc/5
3O/3niuKTgiOMTczM1tjqv96fWT4uTEjBXqXsuIfVEmxuburUkK1hNuf0nQz
LkpRmhvLcltFhWsZCv2eD1KsieWmtyV/AVrzIsN+Hxl+kjd87dxhA4KKicdh
qTIMNM/p77aigUNhU5hULUP6q6b1R5bTwYkX5WBpTrCFcqs3LoYOGzSysjVU
gvucWnf6Z9IharJOlUgj+E90xzGqhg66u4mpgbMI3tBOtGTGM8A41LOG403Q
cLukXJfDgO3Zj1walhJkV0sOeF5mQJh1rbObH8EdKUqfrnEGFFOmTS0NIHgi
1pO9SMiE0Pr+/tPBBG8GPn+X7suE3boM+vfrCXKFjhc8Mpiwl7ayKW8zwWBV
Q3ZqDRPifOfYrIohmLWOxD95xgQPllvzHTnBz5kKd4XYFmT9VXe8FAS951Bo
an9bqBmO1M/dRVChPjlET7CF9ElN+0Aywd4RrK1tsoW7TskFw/sJ5ka80SV1
2ULxR+bbaWkEfdUims9UFvB6i0bfHCZYlJkar5axINl27v2tWQQDhy6dPhzP
gozBBVmjRwlOhOpbZb+wILzkbd+2HIIbZq10aWtnQWWl8cqUPIKUbzU++gkW
BH3mqwQnCF7atlX2TmgHPa0RBx1PEbRqVMqZsXZQUPh5x8hpgqoQ7ZmQt3Zg
8dXFI/pygomum5oiOWxIJ/O9SisIult2/yFfxobXOUttwioJlqt6hn/6mQ2n
fMYrys8TPCYy+FWJOWDn7ZdDv0Tw+i2rChcJB35b2DWQU0fQGOc8/bycA/Bl
diPrsmmf6tjWsxc58GpL+hXXqwRT1h5yc37KASezmsFbjQQvvC9TVn7kgFeA
pjSmiaD1N92hZ5ZxYRPRe9y7TlCWY1SJYrjQ4br9x8tIML1v3KEgkwttgsLF
dWqCFrl2A8q/uDB1Uivvu0Pwk4Ec2qOwB5sARtqCRwR9LJrvwwl70Ezfv/rk
E4K7BPMZltftYdVynxXTnpn88iwIf6C3B8XkM0mchuBAgHXRcSoPyoYebq9v
Jzg3dm/vBnce7OSeY7e/ILglxeDisI4HLQtfr7imJVict1Hxcg8PBNtm0/y6
CHZUt16tKuYBhZUxKtERzFa2B/Td5MGf7k31xSa9TPHyb1EfD1LKtIm+Jm0M
ebd7oxUfdGP59yxN80WeZjb5rnzYIpcvedRBMIhtU/o4iA+lylzvNBOP2Sh3
sXUiH0p2MBZxTPy1z2e3SvL5oBI5Uo8+JBjdvDDqgIoP4Xm5B9/fJShe6z52
RccHft4Ev8HkX3fvvOMGigCcbsQnpzYQ3DxTfHt9iACeBvm/6C8lKCwXRGYn
C4AxbLe4M59gpzf3o7pIAJ0FrY8PmO4zIprm7GYQgDaR7SFJMvGEtsXsowqh
MEmunSI05TdoERUsdIDdAyMJ7BYZzlhyQclqcACnhwkzVyfJsKe6ZezsShFg
ycsP0S4yHB4oSJzXKYKs7+IfqDqkWGyUbXwxKAKqY2Odqk2KqwdH/LKmiME7
JQWu/S7FsqFQptFRDO9ptF/vXZVi4Bvz8UIvMfT/QGG31UjR33A8In+J+P//
9i9ZzFM8
          "]]}, Annotation[#, "Charting`Private`Tag$26407#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJw9VHlME2YcrQcoVwctvamlBRREwIsJlcFPLqXfZ5MBCjqQwaSGOTF2OA8c
IptKRbQgOIyKeEQ8sCAGgaLmBzo8JoqA4MFhRcFgqTAvol0d+2d/vLy8vOTl
JS950pT10akTGQzG0nH8x1UiVzd+iB28/IaT3lIRhZUqQW77FjuQONzzu1UT
hZa02kCvbgfYqHlib8tXoHJiwZDB1hEKlt3K2bFJgU6vGuJ2hzgBZM64bWdQ
YGOP+WZeOgv8A4h3byRB45/HTz0rYEGk9W+lS6IJ8nSRO/xrWLBmpHqWJpHg
uiytvO8zC7JD78ds+JlgicqfN1/Chtiu6ms2WQSvK5+8zQ1lg4tON2VlLkGB
xP3CXA0b6u8FmiyHCUbra/NzKtnQydr2evJpgnuXkfS2h2xQFu6z3ltJsHmk
Vykzs8HS8f3ve+oIfslT+6llzuCY3RoxhgQDZlg7Ni1xhkWWUnL/FkF106ER
p/XOYBKXSu1bCVYk+jxILnaGs4afZLpOgi/H8OLFBmdg3nikqe0mWJQ4+mxj
37heVdXfYSAY2iR1lE/iwOt1T/dsGiA4Mj06xDKdA989GWKUDxE8lpeT3qTg
gNHljmmtiaBypPrornQOqAIR748SNMf231UUcqBoZMni7ncEz9WzzczLHPA9
FPfD4Y8EV0wL925/zIGk/tFG7ieC1hFd8n4zB7RK4QNqJli99kfFWwkXipdX
DUVbCNrWa9PYKi7kaTJChidQvNzntsVNwwVWX9qHfZMopljX5s6r4EJKqLhG
ZEVRH9NTHvM3FyYHtE+wm0oxwyepYRWfB9IC3y3FNhT9phjupQXzoL3rYrTY
juIp/Yv32/fw4ASnk7mASTGpSGWTV8WDoDsdptavKArTX7kc7OSB+7kvEZud
KO6XGsMqZHywMLu5ZmeK127YnvaO5EOluj3sKpeiaY3X1PNpfCg8kfXuAJ+i
Uqe6e7aKD9OFr5JyXShmfbvT16uDD6fOe6WcmUbxwruT2jMf+VCerJr/3JWi
/UJDbHmwADzjPWaUeVBUFJj00lQBPIYex+WeFHMHP7seyRPAgdoNhWJvis3f
2OzmVgtA3DY1zehD0aqIO6x9JIDjMYWbLs2mGD7kFmP3RQD7VM2pifMo5sCc
+p0eQqgxXJrZ4k8RDwZLGFQIjIeDd7oXULQYyc6taiHojDdbEgIpyq2u/AUl
QvAvsB5jyyn+Ip7FmnJNCJmLOrtax/1q/yPxLf1CsGWEqFcGUBxean/sgI0I
Lplte7PH8z1V216u8BOBw+SmMY85FFdnGb1dl4kg02n/lbDx/mUHE9QDW0UQ
P1BRMuxGsVt3t66iTATnM4LkVEQxX/t46eB1ERSsD6gLZ1EMVg88lw6KgHQe
PZM5vu8xf4bDHz4uUF/JCYp/SzDlyrzkHXoXaBf36NY2E0xMcfTyNYohblKZ
Pm4NQUZse+qvNhIoDtjvmcwhaP/GKjla4gq3/0lYXdKoQGbQBS2n1hU2X5Xt
kqsV+EJ389PZcCl8cF3JLPVS4PvhIxkze6WgL4uwND6NwjKTIuHpGyksFs/O
bmuLQvpmLGzvBBnMFTvlv7gdhSdHYtkmdxm4G9R99nVRqByd+Ln0axloGma+
l1VGYf7m3dsXLZT9/1//AiQ3Mh0=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26407#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0.85], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwV1Xs41NkfB/CJXIbBjDEXKjKKsKF1aZLL5ye5fE+NTKRag7TjftmsbOzG
jrZVZE34+altUYlSrkvaIZ3ooiVP0S7buha7spKkkkv2/P44z3lezzl/fL+f
z/ucYxwaL5Yq0Wi0KDL+P1v273lWG60EcxnpshVcCif98shCXqcENzaCe48h
hXEB9WXcByW403Y+/aIZhf19XVZaZiiDjS3nmMsWCqfdW29aemEluAmbXvgH
Urh5ZOiyB10NHiquH91ZTmHv/DCOlScdKs/0q7W/oHDBVHNbejYdVL+vb0x+
TeFnXuyE3h46cNu6i9Q+UPibpVtd34ZoQJH3xveX1RB+EMA9+luZBiR0vEuo
10aYWxdjafFSAxqec/xPcRCuDtM/0ZOsCbCjsFcuQJhvttPF8J4mRP84enez
OcLpf387G6HLgL7LFhtzrBGeLK+v+DmIASuFxfO59gjviRgP+VjBgKKxk+2u
WxHGG1bzvN8zAKJ9aXmAsMULn4d527SgL7nubeZ2hD9GNm4x79eC6rggSbgI
YfHNddmBJtoQdIEq0RIjXMbMHc6J0obh2CFGuD/C8weXbdtqtWHB9y9+0l6E
dzbGZLyb04bxAXG782cIl2g8fWoOOuDYbZZ3W4LwrMTTSpKhAz4+Z7xVQhD2
qq2Xybt0oG9Me44RirBI6fTEiAYTblTHd/YfRFg12KEwaRMTJEHh1Bkpwrea
/tyuuZcJmX5F8YbhCB/hy94UpzLh0DHToEMRCNscNj1vd4kJ7d7hHwoiER5/
3CF60MGE2I95vXlR5HusDi1KZphgnLxZGBON8N4sbsUMnwXLR3jLJjEIs8ab
AjJcWXDW7kJdC/F91Ttj4VIWhMw93O8ci/DR9Z1femWxIDppU8MlYlv3JyvM
a1kwWlBqOE/8IrQ/h97Lgn3Hsyqc4hAulo2umVhkgU+x+4Z4Yv+Syau/CnTB
6HbzhjxizVuzW6566UJKyqxyBfHtgcX7WXG6cOTgrsF64sm750uHT+sCdrZU
aSDmVXnI7Bt04ZyLzuZrxG4F/0gy+3RBbnd96SxxbKrccWiBrPc/bZcRF4bZ
8+yM2CBPbZgOIW4TPX1zwo0NTvHCG0LiKYe0RwNSNnQ7Mn3oxPpG6yo/PckG
4UR0Tzf5H7GiMTu9mg1RiuDHOcSn/FFc929sCN+l/oM78b3pQZFgkQ1Xb9q8
myb1Ws5KsE4Q6IFWmc5f+cRCM1Vmq5cebCtusLAhTmg9M82K14NLYt9jraT+
Y3O4trZJD55MSq06SH/yJa+HDw/pgZ3Q2ZMidms1Zjoqc2AppSQAk35Om4pd
P5py4PaS//InxMVZ6XGtFAceJ7b15pD+i6brfvo+jgM4Ji1xnORj0e95J5VL
9j97ftCBeJ+hu2XPHxxw/jpCUkPypLq91/H5Igdon6a0DH2OcF10FPXGiAvZ
azKUlYk1fpFHssO4kFCeucOE5PP6kEmyyUku+EjPBhgdQDhUtfGE7TUutH/m
uUeL5Fmxe6B89wwXhMc13G6SvCduDG4K4vNAL1UmDQ1E2FptpCvShQeLByJb
ZvcjXKoYfZuWyYPI/64fGQxAODg/jJ5Vw4NLqT+X2e9B2CBufHXB7zx4kHLu
x6/8EM4xntx2TcCHAvpXKU27EG65o1Fm6cEHG4Mn+UPkvE6Fm6tfjeSDY/I3
YdM7SD2qwjqv1PDB/buY7F4vhFN9j1uZP+GDyCuxqtID4crZi/LL7/kwPPLQ
8At3hBlbR/zKXfRhdWCsusIVYer0lMJYqg81Svl1ms4In/h7Ye25LH2w17cq
9XBEWCWf+1Lepw9duR2JyXbk/phEx1MSDEAWLz48YIawo0pzBxQagPrETFTe
OoST1nyiq9ZiAFdqOrscjBF+uZNRnEdfBRz/u9ZeBgj3V3XeuFayCv7zTh5W
pknq22x7QKZYDWPt57fypigsCWWaW02ugSUlT1lRB4Vpfj3So3QjGN8dsptW
QWHGK5UDYqO1sI/RwrzwHYW1nSrlnMa1oHikEH4eTOHRqvvzV9yNwU3LaUDi
ROG3L88lWgwaQ7VoeXAzeR9KpqjAP18ZA6xaCnnEovCOV3PbTq0QgMdAcG6E
FoUvTvuxp9YJYFB9L79wJYVFr5UWihwEQHPNT7KmUXj+dc0zHy8B3Pf94X/3
Frxx2UzQr7T9AugPCUiTvPfGvm8YdbXRApjobNo0O+ON/wUwwghn
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26407#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJw1lHs01HkYxq3chpQxhrlkx0yMhtANi+Jd2TLz+6bNJV3IcjJWbaNGl+1G
7BEtFaWLYik2nDTJklyybxJb0Sks2ZVLiDSZkbQlamf/2D/e85zPOe95z/ue
5z0PPyLGP1JbS0vLX1P/ac3w0aIZTx0YWsGUtZSIMb7RRlhwWQdCN7SPQ5UY
a/t7i1bR9MGPU3zBUE+C4kwp03E1DRaEZW8rXyPB61J2Stt+I/iDVV7fc1qC
n6Ir3UTdxsBYvp5V1itBP+2M0X5DEzCoCc/9zYZC+khNcLIXHaqfUR72MRQ2
6TUMRUXSoeFdWVLXPgoP2zTH+qbSgTJJgR+OUPgyovskrZMOV+8f8V+cQWFu
wqDl6DQdCsaC+SFZFAblKa8+EJiC6s7tTSGXKLzzbLopVWYKCmvWxYelFCrv
XSroyzCFiqGuReWVFFooViU4V5hCwNy8g9/XUbgjLt2996MpPGlUWQsfUnhe
6myxjMeAJh2+gegJhXf9/ppI8WZAydsznaMdFLJ51teWHGOAgVN0+uV+Cv2r
K48nXmdAb+GU3cwLCtOCKFnrnwxwXbJPrqOksFHd4yeY1szbk3f9lprCz6ly
J7nADDYRWw53ksKvbPVM6n3N4IKR1WOHDxTK67PU9Bgz2Kwob5iYpnDoPd64
UWMGq0eWNxXNIpgZOt63p9cMAu2Prt2pR9C7nm/iPosJU8eNxDo0gmqhv9cn
IRMyvF3Moo0I5qYmyuolTDg/lWOfb0zQT12Wc1TGhCxRLL1yLsHpwIFmySkm
GMX3exXTCW780se+rYsJ3wbvUrkxCep90+k+MM2EdVxh5VNzgmXbt0kmeOaw
QmhsF8UiaFiVHs2QmsOuKI+gcC7B6oBnhQFvzOFYqPCmkE9wt0NYzRaWBcxx
u70XBQSd9PsfRXtawOUTr95utSZYUD04Gf+zBSyNTTTstiUYlimlpZZawLu0
k7IKEUGObGTe2Q4LuOm62rHQnuBJvnJliYAF/H2WbX1OBOsaDK/Yr2JBnePT
7XpLCI5FiQyuRrNAnGM8SS3T3KuQNheXsmD+lbQ5Xm4E49YlOYraWVCu/eaK
yoPgtbf56UX/aLjD5dE9T4KzPfoDCz3Z4Joz49rjQ1CSMVbNj2RDVbFLb5gv
wZThj1bZqWx4cEh0/wNFsHEFLdm8jA3vbMt0L64lqJtp/jr9KRs6lU/UogCC
PqPzA4w+s0GrQz8jYT3BRFhclWTDgQ8dE4yYjQTxrCdPi3AgJalka+lmgp+U
VNIBOQeIVB0/GULQXbf2IZzngHWE4rtRDe+1XGiqX8eBM4a/O/hq+sucsze0
DHCgo+JcVmswwddrZueepnGBx8xtl/kTXCA9NLTRiQv3blSN2Gn23RqntLcK
4kJruh3d3Ztg3tkQ+YsDXLgUlKwadiXYrWi+VZLHhZuL1mHKQoLH07vWDN/l
gqJV3PG1xk9P+Yvn/GEueBsb805o/iPXWcv4nMM8iHm/c0/KDIURtUvDE6rn
wRY2yyi/hcLQCBORo9IS/O/YlfvuoFArsC3yMI0HZtutuAe5FM5W6Yb786zg
AaENjzdJcM7ya+nMSivQebR/f92PEhxUNE0V+/BhcGUU3X2RBCdfZ++26+FD
cmif647nYswbk4T8reJDd0vCVFyXGInq/cq0LwTwstJ96anHYsxXBzLGrAXg
JB/Ir60To9+49sdfXASgksYq2irEODVe+nytrwCUBvz2V5r8m/jpV5Km4f/z
8F/HMlmG
          "]]}, Annotation[#, "Charting`Private`Tag$26407#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJw1VGlQ03cQpSgRKMgRcnMkEbWACNZKGapxC0rN/6eRW1FAzAAKbdFGrNax
qLQ0ckkAD2wRLChHRQRGkcOhK1oYC4iiVKmg3DAxQhCsIaD03w/9sLPzZnZ2
d95780TyfQHRhgYGBjK6/utxpUW4jWsBw+tY8e3lUpQZZqn7TS1hq1w2sLxH
ilZjDduU663Ac8LLUbiVwtu9cy1p8dYg7WjQM36nkOfgePXjFCb0JlodzHQk
GFB/MyPpGhOUQl1m1yqC6cEkvrOLCd/oPVvUEoLzaQo3hdgGJmQXmsO3E/Rc
zrBs2mQDNSGXFxZHEVQ0ndda7bMBT3FydPZ+gsM6rKpqsIFpbd2MUEnwdPhk
38EXNiBn7IvUqQh6N4ksvRawoJqyDvD7maB2WcD698tYEJF/rtW+iGBBWlJ8
E8WCnNJfo3ZeISjTVl/4KZ4FVblhPfPVBOeCBtuobBZcTsxJN64n+Fsdc25x
DQv2HpiqTkCCofYbXB51s8BX9kOybzNBxsYnXoNzLJi+vpIV10qw+ss4asqB
DY4b1euNHhCMyH4XusCHDWM73umEjwma1qlimTFsaHMuOtXyhGDNiyXfLUlh
gxO8FC98RlDOuHlydTkbisqVrgO9BBe7Urk+HWzYX5tv8XUfwfrA3pLA12wo
oRSN1wYIJrjuaojgcuB46a6x3iGCbov678dKOJDqLZB0jBBU98kHEqI4UFIY
pTo1RvBS/dCbY6kckMl1sUvVBHedjjFJq+TAj37B3LyXBPnxY7Zn/+JArZdL
44yGYKZI41Mu5oLZMUf3ExMEG++aFrv4csF8ob2mQEtwfI+T8ZVYLti49mpr
J2k+K2Layiq5cJhy6+ufIpjon7zS6TEX8poCY6anCV6dLlKVvuXCVzPTsYx/
CJp91h9UIuHBbIrFmeU6glTWeL0omgce/ncqqBmCJ0dnhXlpPFjtEmK4R0+w
eZ2Jkl3Ng46uEOvDswSNTrNfqZ7S86U72w/NEdygXhL44TwPjNRfbIl4RzAJ
VtUlL+WDQpmeLXpPEM9KHAw28+GTKk/vGzR+ryHJRxR8cPD3OWA6T9DL6FYr
5PLh9gJ1mCWNv7VbYb2okQ/MEkZADT1fvSZve/sgHy7XO90dpfe/2mJWkGMi
gGaP1shM+v5HMUeHQ90EoH+hjsql/41K1LgIgwXwtP32Cu1bghfPhilGjgig
dhDvKWk+eiraassvCsDveFp0MM1nhqp7y+gdAaTe73pdReshUYwMiEYFkGU0
eDCc1nM8cOpQmKktGJtBfgTth4I1BubnXG1h7b1jrthN0I9jXvjQzxZSzzwz
VnUSNJjhfWqWYAuBzGvi53/S/rq1eveJeluouVfc4En7W+zvpq/pswX7UHve
pUqC/cPOORqGHbifl/9yt5hgpIX4j22BduArKHscnU0wXG7ptFJjB5RwKGL/
Xnp/0KPo700cIGNPD5PLp/WcMNod4CCEDHg4qGqhcPHaqyrWTSG0tiZtLDxM
4VBFi75sgwgkr8f17u4UvnmVl+D8XARnogeT4wakeHGcCns2IYLrf0cWHu2W
4uYJnU/6B2JIc/ZwUj2QYpE2iDnuKIYRu05uQyOdT5OGs/keYsjLqgvpvCFF
/WTlwNZNYrhw3LxMTefXjtjPZ1No/H+e/QuFxFFa
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26407#7"]& ]}}, {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, AxesOrigin -> 
     NCache[{2.3025853808171823`, -Log[10000000000000000000000000]}, {
       2.3025853808171823`, -57.564627324851145`}], FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{2.3025853808171823`, 
        9.210340084153048}, {-56.7267213626304, -46.60245665288956}}, {{
        2.3025853808171823`, 
        9.210340084153048}, {-56.7267213626304, -51.35001922642895}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {2.3025853808171823`, -57.564627324851145`}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox[
         "\"sensitivity / \\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\
\\)\"", 14, StripOnInput -> False], TraditionalForm], ""}, {
        FormBox[
         StyleBox["\"frequency / Hz\"", 14, StripOnInput -> False], 
         TraditionalForm], ""}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> Directive[14], GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 650, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{2.3025853808171823`, 
        9.210340084153048}, {-Log[10000000000000000000000000], -
         Log[20000000000000000000000]}}, {{2.3025853808171823`, 
       9.210340084153048}, {-57.564627324851145`, -51.35001922642895}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FrameBox[
    TemplateBox[{
     "\"nondegenerate internal squeezing: lossless\"", 
      "\"Li et al, 2020: no optical loss, quantum noise\[Dash]limited \
sensitivity\"", 
      "\"nondegenerate internal squeezing: realistic optical losses\"", 
      "\"nondegenerate internal squeezing: optimistic optical losses\"", 
      "\"Li et al, 2020: no optical loss, quantum and thermal \
noise\[Dash]limited sensitivity\"", "\"lossless, single-mode detector\"", 
      "\"Li et al, 2020: lossless, single-mode detector\""}, "LineLegend", 
     DisplayFunction -> (StyleBox[
       StyleBox[
        PaneBox[
         TagBox[
          GridBox[{{
             TagBox[
              GridBox[{{
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {25, 15}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], #}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {25, 15}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], #2}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {25, 15}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], #3}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {25, 15}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], #4}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {25, 15}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], #5}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {25, 15}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], #6}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.85], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.85], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {25, 15}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], #7}}, 
               GridBoxAlignment -> {
                "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {{False}}, "Rows" -> {{False}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
              "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"],
          Alignment -> Left, AppearanceElements -> None, 
         ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
        LineIndent -> 0, StripOnInput -> False], {
        Directive[14], FontFamily -> "Arial"}, Background -> Automatic, 
       StripOnInput -> False]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                  False]], Appearance -> None, BaseStyle -> {}, 
                BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
              ",", 
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 1, 1], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                  False]], Appearance -> None, BaseStyle -> {}, 
                BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                  False]], Appearance -> None, BaseStyle -> {}, 
                BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[1, 0.5, 0], Editable -> False, Selectable -> False], 
              ",", 
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 1], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{
                    "0.33333333333333337`", ",", "0.33333333333333337`", ",", 
                    "0.33333333333333337`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[
               0.33333333333333337`, 0.33333333333333337`, 
                0.33333333333333337`], Editable -> False, Selectable -> 
               False], ",", 
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0.85], Editable -> False, Selectable -> False], 
                  ",", 
                  RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7}],
             "}"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "14", "]"}]}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"{", 
                RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
     Editable -> True], FrameStyle -> Thickness[Tiny], StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom"}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.842575875365025*^9, 3.8425762788259487`*^9, 3.8425763124375753`*^9, 
   3.842576380801785*^9, 3.842576530100028*^9, 3.84257656919634*^9, 
   3.842576719126066*^9, {3.8425768000902147`*^9, 3.842576865403139*^9}, {
   3.8425769714775143`*^9, 3.8425769777051153`*^9}, {3.8425770624608917`*^9, 
   3.842577090130664*^9}, 3.842577130561511*^9, {3.842577314647621*^9, 
   3.8425773710515337`*^9}, {3.8425774230064363`*^9, 3.842577523017233*^9}, {
   3.842577635413672*^9, 3.8425776387088623`*^9}, {3.842577709728035*^9, 
   3.8425777360493526`*^9}, 3.8425777870274467`*^9, {3.8425778749466267`*^9, 
   3.842577893567691*^9}, {3.842577930939547*^9, 3.84257794430558*^9}, {
   3.842578000899914*^9, 3.842578022031167*^9}, 3.84257807114615*^9, 
   3.8425781415926523`*^9, 3.8425782050911837`*^9, 3.842578467373789*^9, 
   3.842579142621122*^9, {3.842812798862772*^9, 3.842812816948173*^9}, 
   3.843599944172098*^9, {3.84360031930062*^9, 3.843600382608584*^9}, 
   3.843974764704934*^9, {3.8439748301254272`*^9, 3.843974835283494*^9}, 
   3.8439749729211407`*^9, 3.8439750068051558`*^9, 3.8522476964999113`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"95f74cf4-4b3d-4d3b-975d-8751a65f67e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ballpark", " ", "losses", " ", "to", " ", "match", " ", 
     RowBox[{"sWLC", ":", " ", 
      RowBox[{
      "other", " ", "losses", " ", "fixed", " ", "at", " ", "realistic", " ", 
       "values"}]}]}], ",", " ", 
    RowBox[{"idler", " ", 
     RowBox[{"loss", ":", " ", 
      RowBox[{
      "minimum", " ", "required", " ", "to", " ", "beat", " ", "sWLC", " ", 
       "at", " ", "all", " ", "freqs", " ", "is", " ", "350", "ppm"}]}]}], 
    ",", " ", 
    RowBox[{
     RowBox[{"range", " ", "350"}], "-", 
     RowBox[{"500", 
      RowBox[{"ppm", "?"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"TlcMatch", "  ", "=", " ", 
     RowBox[{"350", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsList1", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "4.93", " ", 
          SuperscriptBox["10", "3"]}], 
         RowBox[{"(*", 
          RowBox[{"Hz", ",", " ", 
           RowBox[{"value", " ", "from", " ", "Li"}]}], "*)"}], ",", 
         FractionBox["\[Pi]", "2"], ",", "0", ",", "0", ",", "0", ",", "0", 
         ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox["4.93", "5"], 
          RowBox[{"(*", 
           RowBox[{
           "using", " ", "98.6", "%", " ", "\[Chi]Thr", " ", "like", " ", 
            "Li"}], "*)"}], 
          RowBox[{"singularityThr", "[", 
           RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}]}], 
         ",", 
         FractionBox["\[Pi]", "2"], ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox["4.93", "5"], 
          RowBox[{"(*", 
           RowBox[{
           "using", " ", "98.6", "%", " ", "\[Chi]Thr", " ", "like", " ", 
            "Li"}], "*)"}], 
          RowBox[{"singularityThr", "[", 
           RowBox[{
            RowBox[{"100", " ", 
             SuperscriptBox["10", 
              RowBox[{"-", "6"}]]}], ",", 
            RowBox[{"1000", " ", 
             SuperscriptBox["10", 
              RowBox[{"-", "6"}]]}], ",", "TlcMatch", ",", "False"}], "]"}]}],
          ",", 
         FractionBox["\[Pi]", "2"], ",", 
         RowBox[{"100", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}], ",", 
         RowBox[{"1000", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}], ",", "TlcMatch", ",", "0.1", ",", "True", 
         ",", "False", ",", "False"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", "\[IndentingNewLine]", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ASDShConwRP", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", "0", ",", "0"}], "]"}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ASDShwRP", "@@", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
               RowBox[{"valsList1", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "valsList1", "]"}]}], "}"}]}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"qnoisesc", ",", "qnoisewlc", ",", "totalnoisewlc"}], 
           "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "10", ",", 
         SuperscriptBox["10", "4"]}], "}"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "14", "]"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<sensitivity / \!\(\*SuperscriptBox[\(Hz\), \
\(\(-1\)/2\)]\)\>\"", ",", "14"}], "]"}], ","}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<frequency / Hz\>\"", ",", "14"}], "]"}], ","}], 
           "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "650"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "plotStyle0"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"10", "^", 
           RowBox[{"-", "25"}]}], ",", 
          RowBox[{"5", " ", 
           RowBox[{"10", "^", 
            RowBox[{"-", "23"}]}]}]}], "}"}]}], ",", 
       RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}], ",", 
     
     RowBox[{"Framed", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"legendOrder", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "\[Rule]", "6"}], ",", 
             RowBox[{"5", "\[Rule]", "7"}], ",", 
             RowBox[{"2", "\[Rule]", "1"}], ",", 
             RowBox[{"6", "\[Rule]", "2"}], ",", 
             RowBox[{"3", "\[Rule]", "3"}], ",", 
             RowBox[{"7", "\[Rule]", "5"}], ",", 
             RowBox[{"4", "\[Rule]", "4"}]}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"Permute", "[", 
            RowBox[{"plotStyle0", ",", 
             RowBox[{"SparseArray", "[", "legendOrder", "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Permute", "[", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "\"\<lossless, single-mode detector\>\"", "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<nondegenerate internal squeezing: lossless\>\"", ",", 
                 "\[IndentingNewLine]", 
                 "\"\<nondegenerate internal squeezing: realistic optical \
losses\>\"", ",", "\[IndentingNewLine]", 
                 "\"\<nondegenerate internal squeezing: CUSTOM optical losses\
\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Li et al, 2020: lossless, single-mode detector\>\"", 
                 ",", "\"\<Li et al, 2020: no optical loss, quantum noise\
\[Dash]limited sensitivity\>\"", ",", 
                 "\"\<Li et al, 2020: no optical loss, quantum and thermal \
noise\[Dash]limited sensitivity\>\""}], "}"}]}], "]"}], ",", 
             RowBox[{"SparseArray", "[", "legendOrder", "]"}]}], "]"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "14", "]"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"FrameStyle", "\[Rule]", "Thin"}]}], "]"}], ",", "Bottom"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.85224771710415*^9, 3.852247738940134*^9}, {
  3.852247772206053*^9, 3.852247886129333*^9}, {3.85224797070789*^9, 
  3.852248079382144*^9}},ExpressionUUID->"d4436af8-c7f6-4c89-a918-\
02b0f27771a0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]], 
         
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$42160#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJw1VFlQ03cYTJGj4VCSEBIIGBI5RY4K4YiKn4hI8v8RR0DxgCqMxFJKqKnS
IngAg9IGRhDqVZVDFC2nWOUUvqJCR0FRUItVThFEhFCLCnKUPvRhZ2dn9mVn
d1YQHhMQoUGj0QLm8R/fiP0KZ700YWAVW9FaLMFDTVbWBfmaoNovD15TLcG6
3u7LvnQdOO9MWRtoS1GSLWc7rqcDjd3HrvKXYpncJLU9Tg8S7ccN+7OkOBtZ
6Wn33ABm1HUtN7qlKNPIHO7VNYQoxvu0KisKGUO1wUdXM0BZnh/gHENhs/bt
gd0RDBBf35vX9T2FB6xavvNTMUBhlbdzz2EKX4c/P0Z/yoD0LcJ4t0wKcxJf
mg9PM2BG7ioLO03hptyRortCJqTYPlaF5VH4+4vpZpWCCfmKyo62cgpH7uQV
9GQyYaA/WVFdSSGn1DdRdJ0JnbRdN6PrKYw+mCHu/sSENRssY+zvUXhKLuK4
8lnAtvhts+NDCm/Jnr1L9WZB2eClpeonFJrwLUuW/8iCJeLBkcJeCgNqKtOT
yliQ29OTpjFIYdomSvHoMQvi12k9o49Q2KTukgmnWdBM8c3r1RTOqZROSqER
fOAMp1tMUOhho23Y6GcEXVEpUpdJCpWNp9WMGCNo6LbxnZymcOAjXr1aawSe
It8tpQsIZoeO9+zrNoJim5yhfdoEvRsFhuIFbIjU/WOYTieotg5YPWvNhp8H
PRsUegRzVEmKRikbtH8513PZgKBMXXHuiIINXh5uD+sWEZwO6m+RHmfDqfK1
emUMglsX+9i3d7Lhfchcx2o2Qe11T8X902xoX2Vd1GVMsCLqa+k7vjGoJq85
RHMJ6lZnRLLkxnDpoSRhN49gTeCLwsC/jeGK4IKHg4DgXocdtV9yOaCZOMNp
FhJ00um9H+nFAZtf9auiLAkW1LycOPQTBxI8fMz6bQjuyJbTVeUcCJ14X1Jn
R9BUMWR24gkHJthrckvtCR4TjKwtFnJh47mM2iEngvW3dS/Z+3JBue1+9sLl
BEd3231eFMmFxuDQiCDX+byl8pYr5VxgT/la+XkSPLgxxdGugwuxBXGLJ1cQ
LPnnQsblD1zw//Ze+QMvgvoreoMKvUxg58kk5msfgtLM0RpBhAnIbqoDo/wI
pg5+sjirMgHzrOQBLUKwaRX9qHGFCXQ/fdFRuIGgVrbx24w/TSDO3T3OPZCg
z/CSQL05E0guONx2bDPBJPiiOsXKFJyT704d2EoQT3jxacQUTre8edCwneDs
CJWyX2kKxa/yXbVCCYq16u7BKVMwXzGlNxVCMNZ8GVOn3hRWDhR9EzzvrxCd
3dLabwpntnM0e4MJvvXXz8mi80DjjcaihACCtvKEga1OPGh1sb3mRhHcdXDE
3mITDyo652Q+3gRzT4QoX+3ngYGNzkW1O8HnpS1Vxbk8GGhqo2csI5ie0ek/
eIsHH7S6xtfP9+mlfNUnGORB15iBKGt+HzkimsFJBzPg1je+U81QGF7nEpZY
YwY3mDYVBa0UhoYb2jmOmEOqL50piaaQFtQecYDOh2sP1onieRTqj2mFBfAt
wLuPPzreLMWFK0sy2JUW8/tMja//QYovS5unrvgIIPauIVPsLMWJt2f3Lu0S
gCif6RHdJ8HcUWnIX2MCiD9SMnWwU4Jk7OPatM+EcLFhp8vxNgleUAexRi2F
YCumFdTVS1A2rvHpvJsQtu1JK22/LsGp8fK+DX5COPPIrePN/P/dudlG0ub1
/3/4LzG4W6Y=
          "]]}, Annotation[#, "Charting`Private`Tag$42160#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJw9lHs0FHgUx6WMxlLzMGbGzDRmlkpCq8jaHjfaycwvEpLOiWLDmR7sTtTR
li2pWNTYHKqV95FKJEqG2tv0UJu2h9pZZRg7pNUYeijP2tl/9o977vn+cc/5
3O/3niuKTgiOMTczM1tjqv96fWT4uTEjBXqXsuIfVEmxuburUkK1hNuf0nQz
LkpRmhvLcltFhWsZCv2eD1KsieWmtyV/AVrzIsN+Hxl+kjd87dxhA4KKicdh
qTIMNM/p77aigUNhU5hULUP6q6b1R5bTwYkX5WBpTrCFcqs3LoYOGzSysjVU
gvucWnf6Z9IharJOlUgj+E90xzGqhg66u4mpgbMI3tBOtGTGM8A41LOG403Q
cLukXJfDgO3Zj1walhJkV0sOeF5mQJh1rbObH8EdKUqfrnEGFFOmTS0NIHgi
1pO9SMiE0Pr+/tPBBG8GPn+X7suE3boM+vfrCXKFjhc8Mpiwl7ayKW8zwWBV
Q3ZqDRPifOfYrIohmLWOxD95xgQPllvzHTnBz5kKd4XYFmT9VXe8FAS951Bo
an9bqBmO1M/dRVChPjlET7CF9ElN+0Aywd4RrK1tsoW7TskFw/sJ5ka80SV1
2ULxR+bbaWkEfdUims9UFvB6i0bfHCZYlJkar5axINl27v2tWQQDhy6dPhzP
gozBBVmjRwlOhOpbZb+wILzkbd+2HIIbZq10aWtnQWWl8cqUPIKUbzU++gkW
BH3mqwQnCF7atlX2TmgHPa0RBx1PEbRqVMqZsXZQUPh5x8hpgqoQ7ZmQt3Zg
8dXFI/pygomum5oiOWxIJ/O9SisIult2/yFfxobXOUttwioJlqt6hn/6mQ2n
fMYrys8TPCYy+FWJOWDn7ZdDv0Tw+i2rChcJB35b2DWQU0fQGOc8/bycA/Bl
diPrsmmf6tjWsxc58GpL+hXXqwRT1h5yc37KASezmsFbjQQvvC9TVn7kgFeA
pjSmiaD1N92hZ5ZxYRPRe9y7TlCWY1SJYrjQ4br9x8tIML1v3KEgkwttgsLF
dWqCFrl2A8q/uDB1Uivvu0Pwk4Ec2qOwB5sARtqCRwR9LJrvwwl70Ezfv/rk
E4K7BPMZltftYdVynxXTnpn88iwIf6C3B8XkM0mchuBAgHXRcSoPyoYebq9v
Jzg3dm/vBnce7OSeY7e/ILglxeDisI4HLQtfr7imJVict1Hxcg8PBNtm0/y6
CHZUt16tKuYBhZUxKtERzFa2B/Td5MGf7k31xSa9TPHyb1EfD1LKtIm+Jm0M
ebd7oxUfdGP59yxN80WeZjb5rnzYIpcvedRBMIhtU/o4iA+lylzvNBOP2Sh3
sXUiH0p2MBZxTPy1z2e3SvL5oBI5Uo8+JBjdvDDqgIoP4Xm5B9/fJShe6z52
RccHft4Ev8HkX3fvvOMGigCcbsQnpzYQ3DxTfHt9iACeBvm/6C8lKCwXRGYn
C4AxbLe4M59gpzf3o7pIAJ0FrY8PmO4zIprm7GYQgDaR7SFJMvGEtsXsowqh
MEmunSI05TdoERUsdIDdAyMJ7BYZzlhyQclqcACnhwkzVyfJsKe6ZezsShFg
ycsP0S4yHB4oSJzXKYKs7+IfqDqkWGyUbXwxKAKqY2Odqk2KqwdH/LKmiME7
JQWu/S7FsqFQptFRDO9ptF/vXZVi4Bvz8UIvMfT/QGG31UjR33A8In+J+P//
9i9ZzFM8
          "]]}, Annotation[#, "Charting`Private`Tag$42160#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJw9VGlQ03cQRSj3YSAkIQcliXggAkULVvBY5dDkF24UUQQBCYIClUORqbRS
aVFAAZFaC+XwKopcUzkC4jYRbRXqwVgBQaAcKhPuggcR+++XftjZ2Zmd3X3v
7a4gLM43Ql1NTc2Hsv88rejmLvtNujC8gRHbXiFCUb6UYbtVF1KHXDiPb4iw
SsrO6DiqD+Grk3y050S4EFW/zqrHECBk7/paNzF6queODujR4FLtQ/+OXDEa
v2oK+H6TMazjaHgmj4jxt17VvcxYE2htqg6fWEdQ2Vp6qT/XBIYbIptjXAiy
Kt2PO9w0gRWLp0IfSQjGpOY49c2bwI6f3G2sQwielzqwPregg1eO/UHmfoIK
z+6ZjC10eFji49H2JUG2heWN1SfpoCVS3Eo5TtBXVp+dVkWHHZ+8e61/imDW
dhL75CkdvE+e/sM5j+DdyReeQhUdrq9tjlS/QPBjZrxdvNAUSgXRmoGlBL9Y
rkWTbzOFnnivQ06/EIyX/zhpHGcKWdXuXhcrCQ6/xZqaJlPYlTtvrCMjmL9n
qj+pzxTkzGqNuhaCW+QCmpMGAx7azkWoKQhOLvPdtLCMAdyj6SzlXYLFmWmx
cjEDzMJHlKn3CXpO1hZ9F8sA/d0GcbfbCar8B9vEeQwIjAi68Osjgtca6Sqj
OgbUOeaVRXQQDPzU1bqjiwGW/MstXU8Jark9cxpUMeDbZ/arDDsJ1h6IFs9Y
MOGp/yNnejfB4LwPgRouTDCyCVBNPSeo15gTRZcygdMxxq7qJVjXt+TokpNM
0GhX7/TqIximVZ+xpoIJSQNRtK5+gjK/3qt+00xwS9IJqhskmGgT0hRsxoJ9
bkXhdsME7bQH/ozayIKouaIjxSMEL8mGZr8+xYKub3avSXxNMCRfqptZzYLL
V+SKvlGCnNhXvIK/WHBqc8xWbyXBMwKlS4XQDPoKT28mEwRb7uhdsXY3A9dk
9/O3JwmOR1rpXI8yg717bk/ANMVXpbStvNoMVGNTKw7NEjRwHvC/upEN3hDA
L1cRFOeOywQRbFjUH3juyQLBjJfz/MJMNvQaLR6iLZKgZj5zLKeTDRVVrz5r
0ZSg6+gSP/2PbAjOdZDzdSSYBvaN6Us5YHkte/qYngSxYKOFmoQD4mlZ/V0D
CS4oSXpKPAeiAzK6R4wk6KTZ/ADOc6BNbMdrpknwsPkqE+0WDjQ4BJXbm0iw
1qFwZ/sgB86cFf8joEtwzMOg+KwuF3S1E6ZDqXiF9KvhQDsuZAcnHFRQ+ftS
ldb87VxIH211ZBtLsKQgKH4khQvRgR8+3UD166lsa6go4ULTbIoVk5ovO6fL
46WCC3ciYUaTwrMxfuRvwUsu3LSd9u+k8I/7zRwJ0uOBD99grOwNtX8OaoY/
2PDAzDG48QTFtzfLsOyxNw8YWmlvSin91N6x1xok8oCpGefIp/YjrHlN6HEZ
D5aWhCx/8DtBoY/d+7p+HrSGu5SRWwQHhleeVWqZQ51CI7SohuDexcLWAD9z
kHJZNdrUfe0Jo1nZKs0hIbn/Ixyg6vt3RBzTtYC+c115Khal34RmqK8FH0KL
k9OZCjEarb+Rw6jng7rzNl3jBDEOVd57X+4qgBMxh205K8U4O1aYuPKFAObC
s3Zq9YiwZFwc9HxCANMFMg+TDhFKJt66ZC0SQs5VAZd/X4QXJ/3p45ZCmGjx
k0ODCD2n1Od/dhRCRZog3K9KhMn7g7uLnYX//79/AT8RS6U=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$42160#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0.85], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$42160#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJw1lHs01HkYxq3chpQxhrlkx0yMhtANi+Jd2TLz+6bNJV3IcjJWbaNGl+1G
7BEtFaWLYik2nDTJklyybxJb0Sks2ZVLiDSZkbQlamf/2D/e85zPOe95z/ue
5z0PPyLGP1JbS0vLX1P/ac3w0aIZTx0YWsGUtZSIMb7RRlhwWQdCN7SPQ5UY
a/t7i1bR9MGPU3zBUE+C4kwp03E1DRaEZW8rXyPB61J2Stt+I/iDVV7fc1qC
n6Ir3UTdxsBYvp5V1itBP+2M0X5DEzCoCc/9zYZC+khNcLIXHaqfUR72MRQ2
6TUMRUXSoeFdWVLXPgoP2zTH+qbSgTJJgR+OUPgyovskrZMOV+8f8V+cQWFu
wqDl6DQdCsaC+SFZFAblKa8+EJiC6s7tTSGXKLzzbLopVWYKCmvWxYelFCrv
XSroyzCFiqGuReWVFFooViU4V5hCwNy8g9/XUbgjLt2996MpPGlUWQsfUnhe
6myxjMeAJh2+gegJhXf9/ppI8WZAydsznaMdFLJ51teWHGOAgVN0+uV+Cv2r
K48nXmdAb+GU3cwLCtOCKFnrnwxwXbJPrqOksFHd4yeY1szbk3f9lprCz6ly
J7nADDYRWw53ksKvbPVM6n3N4IKR1WOHDxTK67PU9Bgz2Kwob5iYpnDoPd64
UWMGq0eWNxXNIpgZOt63p9cMAu2Prt2pR9C7nm/iPosJU8eNxDo0gmqhv9cn
IRMyvF3Moo0I5qYmyuolTDg/lWOfb0zQT12Wc1TGhCxRLL1yLsHpwIFmySkm
GMX3exXTCW780se+rYsJ3wbvUrkxCep90+k+MM2EdVxh5VNzgmXbt0kmeOaw
QmhsF8UiaFiVHs2QmsOuKI+gcC7B6oBnhQFvzOFYqPCmkE9wt0NYzRaWBcxx
u70XBQSd9PsfRXtawOUTr95utSZYUD04Gf+zBSyNTTTstiUYlimlpZZawLu0
k7IKEUGObGTe2Q4LuOm62rHQnuBJvnJliYAF/H2WbX1OBOsaDK/Yr2JBnePT
7XpLCI5FiQyuRrNAnGM8SS3T3KuQNheXsmD+lbQ5Xm4E49YlOYraWVCu/eaK
yoPgtbf56UX/aLjD5dE9T4KzPfoDCz3Z4Joz49rjQ1CSMVbNj2RDVbFLb5gv
wZThj1bZqWx4cEh0/wNFsHEFLdm8jA3vbMt0L64lqJtp/jr9KRs6lU/UogCC
PqPzA4w+s0GrQz8jYT3BRFhclWTDgQ8dE4yYjQTxrCdPi3AgJalka+lmgp+U
VNIBOQeIVB0/GULQXbf2IZzngHWE4rtRDe+1XGiqX8eBM4a/O/hq+sucsze0
DHCgo+JcVmswwddrZueepnGBx8xtl/kTXCA9NLTRiQv3blSN2Gn23RqntLcK
4kJruh3d3Ztg3tkQ+YsDXLgUlKwadiXYrWi+VZLHhZuL1mHKQoLH07vWDN/l
gqJV3PG1xk9P+Yvn/GEueBsb805o/iPXWcv4nMM8iHm/c0/KDIURtUvDE6rn
wRY2yyi/hcLQCBORo9IS/O/YlfvuoFArsC3yMI0HZtutuAe5FM5W6Yb786zg
AaENjzdJcM7ya+nMSivQebR/f92PEhxUNE0V+/BhcGUU3X2RBCdfZ++26+FD
cmif647nYswbk4T8reJDd0vCVFyXGInq/cq0LwTwstJ96anHYsxXBzLGrAXg
JB/Ir60To9+49sdfXASgksYq2irEODVe+nytrwCUBvz2V5r8m/jpV5Km4f/z
8F/HMlmG
          "]]}, Annotation[#, "Charting`Private`Tag$42160#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJw1VGlQ03cQpSgRKMgRcnMkEbWACNZKGapxC0rN/6eRW1FAzAAKbdFGrNax
qLQ0ckkAD2wRLChHRQRGkcOhK1oYC4iiVKmg3DAxQhCsIaD03w/9sLPzZnZ2
d95780TyfQHRhgYGBjK6/utxpUW4jWsBw+tY8e3lUpQZZqn7TS1hq1w2sLxH
ilZjDduU663Ac8LLUbiVwtu9cy1p8dYg7WjQM36nkOfgePXjFCb0JlodzHQk
GFB/MyPpGhOUQl1m1yqC6cEkvrOLCd/oPVvUEoLzaQo3hdgGJmQXmsO3E/Rc
zrBs2mQDNSGXFxZHEVQ0ndda7bMBT3FydPZ+gsM6rKpqsIFpbd2MUEnwdPhk
38EXNiBn7IvUqQh6N4ksvRawoJqyDvD7maB2WcD698tYEJF/rtW+iGBBWlJ8
E8WCnNJfo3ZeISjTVl/4KZ4FVblhPfPVBOeCBtuobBZcTsxJN64n+Fsdc25x
DQv2HpiqTkCCofYbXB51s8BX9kOybzNBxsYnXoNzLJi+vpIV10qw+ss4asqB
DY4b1euNHhCMyH4XusCHDWM73umEjwma1qlimTFsaHMuOtXyhGDNiyXfLUlh
gxO8FC98RlDOuHlydTkbisqVrgO9BBe7Urk+HWzYX5tv8XUfwfrA3pLA12wo
oRSN1wYIJrjuaojgcuB46a6x3iGCbov678dKOJDqLZB0jBBU98kHEqI4UFIY
pTo1RvBS/dCbY6kckMl1sUvVBHedjjFJq+TAj37B3LyXBPnxY7Zn/+JArZdL
44yGYKZI41Mu5oLZMUf3ExMEG++aFrv4csF8ob2mQEtwfI+T8ZVYLti49mpr
J2k+K2Layiq5cJhy6+ufIpjon7zS6TEX8poCY6anCV6dLlKVvuXCVzPTsYx/
CJp91h9UIuHBbIrFmeU6glTWeL0omgce/ncqqBmCJ0dnhXlpPFjtEmK4R0+w
eZ2Jkl3Ng46uEOvDswSNTrNfqZ7S86U72w/NEdygXhL44TwPjNRfbIl4RzAJ
VtUlL+WDQpmeLXpPEM9KHAw28+GTKk/vGzR+ryHJRxR8cPD3OWA6T9DL6FYr
5PLh9gJ1mCWNv7VbYb2okQ/MEkZADT1fvSZve/sgHy7XO90dpfe/2mJWkGMi
gGaP1shM+v5HMUeHQ90EoH+hjsql/41K1LgIgwXwtP32Cu1bghfPhilGjgig
dhDvKWk+eiraassvCsDveFp0MM1nhqp7y+gdAaTe73pdReshUYwMiEYFkGU0
eDCc1nM8cOpQmKktGJtBfgTth4I1BubnXG1h7b1jrthN0I9jXvjQzxZSzzwz
VnUSNJjhfWqWYAuBzGvi53/S/rq1eveJeluouVfc4En7W+zvpq/pswX7UHve
pUqC/cPOORqGHbifl/9yt5hgpIX4j22BduArKHscnU0wXG7ptFJjB5RwKGL/
Xnp/0KPo700cIGNPD5PLp/WcMNod4CCEDHg4qGqhcPHaqyrWTSG0tiZtLDxM
4VBFi75sgwgkr8f17u4UvnmVl+D8XARnogeT4wakeHGcCns2IYLrf0cWHu2W
4uYJnU/6B2JIc/ZwUj2QYpE2iDnuKIYRu05uQyOdT5OGs/keYsjLqgvpvCFF
/WTlwNZNYrhw3LxMTefXjtjPZ1No/H+e/QuFxFFa
          "]]}, 
        Annotation[#, "Charting`Private`Tag$42160#7"]& ]}}, {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, AxesOrigin -> 
     NCache[{2.3025853808171823`, -Log[10000000000000000000000000]}, {
       2.3025853808171823`, -57.564627324851145`}], FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{2.3025853808171823`, 
        9.210340084153048}, {-56.7267213626304, -46.60245665288956}}, {{
        2.3025853808171823`, 
        9.210340084153048}, {-56.7267213626304, -51.35001922642895}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {2.3025853808171823`, -57.564627324851145`}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox[
         "\"sensitivity / \\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\
\\)\"", 14, StripOnInput -> False], TraditionalForm], ""}, {
        FormBox[
         StyleBox["\"frequency / Hz\"", 14, StripOnInput -> False], 
         TraditionalForm], ""}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> Directive[14], GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 650, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{2.3025853808171823`, 
        9.210340084153048}, {-Log[10000000000000000000000000], -
         Log[20000000000000000000000]}}, {{2.3025853808171823`, 
       9.210340084153048}, {-57.564627324851145`, -51.35001922642895}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FrameBox[
    TemplateBox[{
     "\"nondegenerate internal squeezing: lossless\"", 
      "\"Li et al, 2020: no optical loss, quantum noise\[Dash]limited \
sensitivity\"", 
      "\"nondegenerate internal squeezing: realistic optical losses\"", 
      "\"nondegenerate internal squeezing: CUSTOM optical losses\"", 
      "\"Li et al, 2020: no optical loss, quantum and thermal \
noise\[Dash]limited sensitivity\"", "\"lossless, single-mode detector\"", 
      "\"Li et al, 2020: lossless, single-mode detector\""}, "LineLegend", 
     DisplayFunction -> (StyleBox[
       StyleBox[
        PaneBox[
         TagBox[
          GridBox[{{
             TagBox[
              GridBox[{{
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {25, 15}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], #}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {25, 15}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], #2}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {25, 15}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], #3}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {25, 15}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], #4}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {25, 15}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], #5}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {25, 15}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], #6}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.85], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.85], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {25, 15}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], #7}}, 
               GridBoxAlignment -> {
                "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {{False}}, "Rows" -> {{False}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
              "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"],
          Alignment -> Left, AppearanceElements -> None, 
         ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
        LineIndent -> 0, StripOnInput -> False], {
        Directive[14], FontFamily -> "Arial"}, Background -> Automatic, 
       StripOnInput -> False]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                  False]], Appearance -> None, BaseStyle -> {}, 
                BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
              ",", 
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 1, 1], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                  False]], Appearance -> None, BaseStyle -> {}, 
                BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                  False]], Appearance -> None, BaseStyle -> {}, 
                BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[1, 0.5, 0], Editable -> False, Selectable -> False], 
              ",", 
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 1], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{
                    "0.33333333333333337`", ",", "0.33333333333333337`", ",", 
                    "0.33333333333333337`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[
               0.33333333333333337`, 0.33333333333333337`, 
                0.33333333333333337`], Editable -> False, Selectable -> 
               False], ",", 
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0.85], Editable -> False, Selectable -> False], 
                  ",", 
                  RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7}],
             "}"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "14", "]"}]}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"{", 
                RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
     Editable -> True], FrameStyle -> Thickness[Tiny], StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom"}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.852247725216736*^9, {3.8522478103188677`*^9, 3.852247821213173*^9}, {
   3.852247874758462*^9, 3.852247886950852*^9}, {3.8522479944007053`*^9, 
   3.852248032931862*^9}},
 CellLabel->
  "Out[124]=",ExpressionUUID->"1fac70d0-08c9-4742-ac8a-b650d45f7a0b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "ballpark", " ", "losses", " ", "required", " ", "to", " ", "hit", " ", 
      "5", "e"}], "-", 
     RowBox[{
     "25", " ", "sensitivity", " ", "target", " ", "from", " ", "Miao", " ", 
      "et", " ", "al", " ", "2018"}]}], ",", " ", 
    RowBox[{
    "noting", " ", "that", " ", "the", " ", "sWLC", " ", "overlay", " ", 
     "aove", " ", "has", " ", "an", " ", "extra", " ", "factor", " ", "of", 
     " ", "two", " ", "improvement", " ", "in", " ", "sensitivity"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Tla1", "=", 
     RowBox[{"75.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";", 
    RowBox[{"Tlb1", "=", "Tlb0"}], ";", 
    RowBox[{"Tlc1", "=", 
     RowBox[{"100.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";", 
    RowBox[{"Rpd1", "=", "Rpd0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]Ratio1", "=", "0.98"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsListHeld", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "0", ",", "pumpPhase0", ",", "Tla1", ",", "Tlb1", ",", "Tlc1", ",", 
         "Rpd1", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio1", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "False"}], "]"}], 
           "]"}]}], ",", "pumpPhase0", ",", "Tla1", ",", "Tlb1", ",", "Tlc1", 
         ",", "Rpd1", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"plot\[Gamma]RGrid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2.", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], 
       RowBox[{"(*", "m", "*)"}], ",", 
       RowBox[{"4.", " ", 
        SuperscriptBox["10", "3"]}], 
       RowBox[{"(*", "m", "*)"}], ",", "None", ",", " ", 
       RowBox[{"3", " ", 
        SuperscriptBox["10", "6"]}], 
       RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", ",", "200", 
       RowBox[{"(*", "kg", "*)"}], ",", 
       "\"\<Li et al, 2020 + changing \!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\
\) + \[Omega]s increased\>\"", ",", "None", 
       RowBox[{"(*", 
        RowBox[{"see", " ", "\[Gamma]RList"}], "*)"}], ",", 
       RowBox[{"2", "\[Pi]", " ", "10000"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "0.5", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5.", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "50.", " ", 
        SuperscriptBox["10", "3"]}]}], "}"}], ",", "\[IndentingNewLine]", 
     "valsListHeld", ",", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       SuperscriptBox["10", "5"]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.839615887233033*^9, 3.839615948068056*^9}, {
   3.839615985329063*^9, 3.839616056271793*^9}, {3.839616181441649*^9, 
   3.839616181643114*^9}, {3.839616217484611*^9, 3.839616225453553*^9}, {
   3.839616404866972*^9, 3.839616405594692*^9}, {3.839616447888837*^9, 
   3.8396164904055977`*^9}, {3.8412771255488367`*^9, 3.841277135828034*^9}, 
   3.842573680174053*^9},ExpressionUUID->"ff2cdeaf-ddfe-40bf-9443-\
9bef721ee675"],

Cell[BoxData[{
 RowBox[{"setConfigParamsCustom", "[", 
  RowBox[{
   RowBox[{"2.", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]]}], 
   RowBox[{"(*", "m", "*)"}], ",", 
   RowBox[{"4.", " ", 
    SuperscriptBox["10", "3"]}], 
   RowBox[{"(*", "m", "*)"}], ",", "None", ",", " ", 
   RowBox[{"3", " ", 
    SuperscriptBox["10", "6"]}], 
   RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", ",", "200", 
   RowBox[{"(*", "kg", "*)"}], ",", "None", ",", 
   RowBox[{"2", "\[Pi]", " ", "500"}], ",", 
   RowBox[{"2", "\[Pi]", " ", "5000"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valsList1", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "pumpPhase0", ",", "Tla1", ",", "Tlb1", ",", "Tlc1", ",", 
       "Rpd1", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.95", " ", 
        RowBox[{"singularityThr", "[", 
         RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "False"}], "]"}]}], 
       ",", "pumpPhase0", ",", "Tla1", ",", "Tlb1", ",", "Tlc1", ",", "Rpd1", 
       ",", "True", ",", "False", ",", "False"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotwRP", "[", 
  RowBox[{"valsList1", ",", "None", ",", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Red"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", 
     RowBox[{"5", " ", 
      SuperscriptBox["10", "4"]}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.839616525443681*^9, 3.839616849672227*^9}, {
  3.839616925348692*^9, 3.8396170530979424`*^9}, {3.83961711683775*^9, 
  3.8396171180685883`*^9}, {3.839617150482142*^9, 3.8396172422710238`*^9}, {
  3.8396173541143513`*^9, 3.83961740956437*^9}, {3.8396174574364243`*^9, 
  3.8396174575894947`*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"993df0b6-f8fe-4b02-adf9-de81cd56502f"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"NB", ":", " ", 
    RowBox[{
    "radiation", " ", "pressure", " ", "worsened", " ", "because", " ", 
     "squeezing", " ", "is", " ", "in", " ", "phase", " ", "quadrature"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"to", "-", 
     RowBox[{"do", ":", " ", 
      RowBox[{
       RowBox[{"frequency", " ", "dependent", " ", "internal", " ", 
        RowBox[{"squeezing", "?", "\[IndentingNewLine]", "--"}]}], ">", " ", 
       RowBox[{"we", " ", "now", " ", "have", " ", "pump", " ", 
        RowBox[{"parameter", " ", "--"}], " ", "so", " ", "use"}]}]}]}], " ", 
    "/.", 
    RowBox[{"\[Phi]", "\[Rule]", 
     RowBox[{
      RowBox[{"\[Phi]Fn", "[", "...", "]"}], "?"}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.836955461403363*^9, 3.8369554743103323`*^9}, {
  3.8369565731215057`*^9, 3.836956590790863*^9}, {3.8380648415358667`*^9, 
  3.838064880993031*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"08cf331e-0caa-4217-95af-ee723b93c1b8"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"to", "-", 
    RowBox[{"do", ":", " ", 
     RowBox[{
     "copy", " ", "other", " ", "plotting", " ", "functions", " ", "from", 
      " ", "sWLC"}], ":"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"-", " ", 
     RowBox[{"stability", " ", "--"}]}], ">", " ", 
    RowBox[{"not", " ", "necessary"}]}], ",", " ", 
   RowBox[{
   "same", " ", "denominator", " ", "in", " ", "transfer", " ", "functions", 
    " ", "so", " ", "same", " ", "stability"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"-", " ", "noise"}], " ", "\"\<budget\>\"", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"transfer", " ", "functions"}], ")"}], " ", "--"}], 
    RowBox[{">", " ", "done"}]}], ",", " ", 
   RowBox[{"but", " ", "I", " ", 
    RowBox[{"don", "'"}], "t", " ", "know", " ", "how", " ", "to", " ", 
    "turn", " ", "off", " ", "shot", " ", 
    RowBox[{"noise", "?"}]}], " ", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", " ", "optimum"}], " ", "sensitivity", " ", "at", " ", 
     "probe", " ", 
     RowBox[{"frequency", " ", "--"}]}], ">", " ", "done"}], ",", " ", 
   RowBox[{"2.5", "k", " ", "is", " ", "most", " ", "interesting"}], ","}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.8368751342346277`*^9, 3.8368751392758913`*^9}, {
   3.836875313220752*^9, 3.8368753282435913`*^9}, {3.836875977303494*^9, 
   3.836875978936841*^9}, 3.836876583004655*^9, {3.8368766339398327`*^9, 
   3.83687672864815*^9}, {3.8368767684068727`*^9, 3.836876770252152*^9}, {
   3.836876803846798*^9, 3.836876832232662*^9}, 3.836950132255934*^9, {
   3.83695023024631*^9, 3.836950232246825*^9}, {3.8369511012275248`*^9, 
   3.836951103033512*^9}, {3.836955749778467*^9, 3.8369558130241423`*^9}, {
   3.836956548649796*^9, 3.836956561985619*^9}, {3.836959910502049*^9, 
   3.8369599312315617`*^9}, {3.836961215578101*^9, 3.836961223432321*^9}, {
   3.8380677280162497`*^9, 3.8380677338255444`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"6f89864b-cc61-4a72-b3fa-48050eeeb5a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"noise", " ", "\"\<budget\>\""}], ",", "\[IndentingNewLine]", 
    RowBox[{"to", "-", 
     RowBox[{"do", ":", " ", 
      RowBox[{
      "turn", " ", "shot", " ", "noise", " ", "off", " ", "to", " ", "plot", 
       " ", "radiation", " ", "pressure", " ", "separately"}]}]}], ",", " ", 
    RowBox[{"how", "?"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"RpdwRP", "[", 
     RowBox[{
     "\[CapitalOmega]0_", ",", "\[Chi]0_", ",", "\[Phi]0_", ",", "Tla_", ",", 
      "Tlb_", ",", "Tlc_", ",", "Rpd0_", ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Rpd", " ", "Id"}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Phi]", "\[Rule]", "\[Phi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RinwRP", "[", 
     RowBox[{
     "\[CapitalOmega]0_", ",", "\[Chi]0_", ",", "\[Phi]0_", ",", "Tla_", ",", 
      "Tlb_", ",", "Tlc_", ",", "Rpd0_", ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Rin", ".", 
          RowBox[{"ConjugateTranspose", "[", "Rin", "]"}]}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Phi]", "\[Rule]", "\[Phi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RawRP", "[", 
     RowBox[{
     "\[CapitalOmega]0_", ",", "\[Chi]0_", ",", "\[Phi]0_", ",", "Tla_", ",", 
      "Tlb_", ",", "Tlc_", ",", "Rpd0_", ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Ra", ".", 
          RowBox[{"ConjugateTranspose", "[", "Ra", "]"}]}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Phi]", "\[Rule]", "\[Phi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RbwRP", "[", 
     RowBox[{
     "\[CapitalOmega]0_", ",", "\[Chi]0_", ",", "\[Phi]0_", ",", "Tla_", ",", 
      "Tlb_", ",", "Tlc_", ",", "Rpd0_", ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Rb", ".", 
          RowBox[{"ConjugateTranspose", "[", "Rb", "]"}]}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Phi]", "\[Rule]", "\[Phi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RcwRP", "[", 
     RowBox[{
     "\[CapitalOmega]0_", ",", "\[Chi]0_", ",", "\[Phi]0_", ",", "Tla_", ",", 
      "Tlb_", ",", "Tlc_", ",", "Rpd0_", ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Rc", ".", 
          RowBox[{"ConjugateTranspose", "[", "Rc", "]"}]}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Phi]", "\[Rule]", "\[Phi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotNoiseBudgetwRP", "[", 
     RowBox[{"params_", ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         SuperscriptBox["10", "4"]}], "}"}]}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"20", 
          RowBox[{"Log10", "[", "1", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RinwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RawRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RbwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RcwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RpdwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"QNwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"fRange", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"fRange", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<vacuum\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[\(R\), \(in\)]\), behind SRM\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(R\), \((L)\)], \(a\)]\), \
arm intra-cav.\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(R\), \((L)\)], \(b\)]\), \
SRC signal intra-cav.\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(R\), \((L)\)], \(c\)]\), \
SRC idler intra-cav.\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(R\), \((L)\)], \(PD\)]\), \
PD loss\>\"", ",", "\"\<total quantum noise\>\""}], "}"}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", "10", "]"}]}], ",", 
         RowBox[{"LegendLabel", "\[Rule]", 
          RowBox[{"legendStyler", "[", "params", "]"}]}]}], "]"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Directive", "[", 
          RowBox[{"Gray", ",", "Dashed"}], "]"}], ",", ",", ",", ",", ",", 
         ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "Dashed"}], "]"}]}], "}"}]}], ",", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<quantum noise transfer function,\\n|R| / dB (20log10)\>\"", 
           ","}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \[Pi]\
\)]\) / Hz\>\"", ",", 
           RowBox[{
           "\"\<nondegenerate internal squeezing\\nparameters of \>\"", "<>", 
            "paramSetName"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "plotNoiseBudgetwRPPretty", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotNoiseBudgetwRPPretty", "[", 
     RowBox[{"params_", ",", "plotStyle_", ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         SuperscriptBox["10", "4"]}], "}"}]}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RinwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RawRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RbwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RcwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RpdwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"QNwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"fRange", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"fRange", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<readout port vacuum\>\"", ",", "\"\<arm intra-cavity loss\>\"",
            ",", "\"\<signal intra-cavity loss\>\"", ",", 
           "\"\<idler intra-cavity loss\>\"", ",", "\"\<detection loss\>\"", 
           ",", "\"\<total quantum noise\>\""}], "}"}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", "14", "]"}]}], ",", 
         RowBox[{"LegendLabel", "\[Rule]", 
          RowBox[{"legendStylerSplit", "[", "params", "]"}]}]}], "]"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Join", "[", 
        RowBox[{"plotStyle", ",", 
         RowBox[{"{", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", "Dashed"}], "]"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<noise response\\n/ dB (20\!\(\*SubscriptBox[\(log\), \(10\)]\
\))\>\"", ",", "14"}], "]"}], ","}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ",", "14"}], "]"}], ","}], "}"}]}], "}"}]}],
       ",", 
      RowBox[{"FrameTicksStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
      RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], " ", 
     RowBox[{"(*", 
      RowBox[{"Quality", " ", "looks", " ", "the", " ", "same"}], "*)"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8369590983792353`*^9, 3.8369591985394707`*^9}, {
   3.8369592494458237`*^9, 3.836959267243211*^9}, {3.836959325737783*^9, 
   3.836959397486257*^9}, {3.8369594329848022`*^9, 3.836959687217719*^9}, {
   3.836959719555378*^9, 3.836959721379772*^9}, {3.836959759961191*^9, 
   3.836959760706551*^9}, {3.8369598650861893`*^9, 3.836959915688439*^9}, {
   3.836959957720145*^9, 3.836959958534608*^9}, {3.838064921649622*^9, 
   3.838064953709259*^9}, {3.838066520102168*^9, 3.83806652674868*^9}, {
   3.838066580379581*^9, 3.838066586569106*^9}, {3.838066623324628*^9, 
   3.838066644367217*^9}, {3.8380677376598*^9, 3.838067739373752*^9}, {
   3.838852972578677*^9, 3.838852976420627*^9}, {3.839032766283444*^9, 
   3.839032769242948*^9}, {3.839033623458404*^9, 3.839033625349867*^9}, 
   3.839035330797402*^9, {3.84248861912355*^9, 3.842488683983551*^9}, {
   3.842488715440199*^9, 3.842488910812914*^9}, {3.8424891722859983`*^9, 
   3.842489172641168*^9}, {3.8424892361904593`*^9, 3.842489249021285*^9}, {
   3.842489297319139*^9, 3.842489307884183*^9}, {3.842489470355755*^9, 
   3.842489478348918*^9}, {3.842573757257821*^9, 3.8425738031721783`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"74395ae9-21ab-4be4-95b6-12d3b7df7666"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"setConfigParamsLi2020", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]Ratio0", "=", "0.95"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"plotNoiseBudgetwRP", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Chi]Ratio0", " ", "\[Omega]s"}], ",", 
      RowBox[{"\[Pi]", "/", "2"}], ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",",
       "Rpd0", ",", "True", ",", "False", ",", "True"}], "}"}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"plotNoiseBudgetwRPPretty", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Chi]Ratio0", " ", 
      RowBox[{"singularityThr", "[", 
       RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}]}], ",", 
     RowBox[{"\[Pi]", "/", "2"}], ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
     "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Red", ",", "Cyan", ",", "Magenta", ",", "Orange"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"10", " ", 
      SuperscriptBox["10", "3"]}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<nIS_sigRO_noise_budget.pdf\>\"", ",", "%"}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pumpPhase0", "=", 
     RowBox[{
      FractionBox["3", "4"], "\[Pi]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plotNoiseBudgetwRP", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Chi]Ratio0", " ", "\[Omega]s"}], ",", "pumpPhase0", ",", 
        "0.1", ",", "0.1", ",", "0.1", ",", "0.1", ",", "False"}], "}"}], 
      "]"}], "\[IndentingNewLine]", 
     RowBox[{"plotNoiseBudgetwRP", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Chi]Ratio0", " ", "\[Omega]s"}], ",", "pumpPhase0", ",", 
        "0.1", ",", "0.1", ",", "0.1", ",", "0.1", ",", "True", ",", "True"}],
        "}"}], "]"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"BAE", " ", "2", "nd", " ", "peak", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"if", " ", "real"}], ",", " ", 
      RowBox[{"not", " ", "a", " ", "bug"}]}], ")"}], " ", "appears", " ", 
    "in", " ", "all", " ", "noise", " ", "transfer", " ", "functions", " ", 
    RowBox[{"(", 
     RowBox[{"except", " ", "Rpd", " ", "ofc"}], ")"}]}], "*)"}]}]}], "Input",\

 CellChangeTimes->{{3.836959705591845*^9, 3.836959751571341*^9}, {
   3.836959788576008*^9, 3.836959820529869*^9}, {3.836960116813314*^9, 
   3.83696012265786*^9}, {3.838065261146402*^9, 3.83806526843169*^9}, {
   3.838068184880612*^9, 3.838068231416999*^9}, {3.8388530064698*^9, 
   3.83885301330237*^9}, {3.839033698370612*^9, 3.839033702078025*^9}, {
   3.839033740667149*^9, 3.839033766012961*^9}, {3.83927265619827*^9, 
   3.839272659020966*^9}, {3.839376856393968*^9, 3.839376907276566*^9}, {
   3.841277361401338*^9, 3.841277394071485*^9}, {3.842488453892207*^9, 
   3.842488542540745*^9}, 3.842488596099822*^9, 3.842488627462275*^9, {
   3.842548559944528*^9, 3.842548586469055*^9}, {3.842573796827198*^9, 
   3.842573819443181*^9}, 3.8428128316077023`*^9},
 CellLabel->"In[94]:=",ExpressionUUID->"24d54f1a-861b-467f-b5a7-0ab8f2298c59"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
+a73qWzrePTkdyYsPpz4Gu7Ixf8Bin69zQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$36528#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$36528#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$36528#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 1]], 
         LineBox[CompressedData["
1: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
Hg==
          "]]}, Annotation[#, "Charting`Private`Tag$36528#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQPVXr8w6WgzPtGMBA5YA7q+i2gvnH7WH8HTtZpPLn
X4fz5d89+nBk7gs4v2PFjZnenp/g/Dd6CWXrVX/A+RmPopbaNf6D82PtnylK
WDA5wPhCSyJmqeWzwvm2xtEFRtM54PzLZpJ17zu44fyvFwRMnXbxwfkH3z8U
XHxLAM537mHesThACM7n/nLQKP+ZMJzPIRbnKZwoCud7MU83afotBucfZ51x
Lr9PAs6vPlTGYsYmBeeXen3iOz5XGs5f0uO91UBKFs6XmOVokLpNDs5Pufdf
p0dVAc6/duYsf9AjBP+1wquYv+sU4fxLlfdbw3mV4Pxdl66s25iN4AMA9kV2
hA==
          "]]}, Annotation[#, "Charting`Private`Tag$36528#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwVk3k4FIoah2UpWY4ZYwYzjJmxlbpOkaLo+4qosVMSIltHqGlhSqpD6dg7
xISaji5anTqESHEoS0ldIydG2YZsubahNCbd7h+/5/33fZ73+TGDOB6hsjIy
Mmd/7P/kmYir5Ovztno5XbgULHHGghau/+n829B48cmJbdnOGMq3mDyRXwkf
mX65JqbO6KBAfnQ0vxl2UIQSVpATVj2Wp3LyO2F+55rCthY26k2Kphuuj4KQ
HGG36OeASXe68hx3zcKdli/8MxZ2OGF6gPuX4QKY+x2aGzLfhmEin5tb45fg
U/uhi15W1rgfhplalrIYUSwgRk1tRPUi76tGHAXszVayW9GxHm3MfY+a5Sji
cnK1pmONCb7dqH1uKkkZ37FNZ3JJ+qhlstChPaWMG1LFrpXqLPTT7Vxjt0cF
vQ7K0qUkJg7J8YS5TFV8FbBRNXQLHefbCBbbq3/CpI8RYdQSCjaZjTws0FbD
+rnUzDBZMuZm16yTi1FD0uEj7/YHkJC+1oIiohHQ9Mi2tVlAwBX7GXsuOxLQ
mpsbwklTxel05eztsQScVgg7HvJUCeunBoiF3QTkXyNHHs5UQA/9W0bBK4ko
euwnm+gghyKv8C36lkTsJRSM561ehsdTTN0GDxJR981n5dFjSyBbOxtSyCOi
7J+/3vKckMDlmUcxwQ1EZDuvLNN+9gVYhrGX9MVEVFlz7pbvzBw89IbCQaY6
BooZBR3cWbBNk6sqdFPHv6ffRyq6TIP1Pl/j/RfUcdPvQu/C3AmwMCq7Qnmk
jhaufLd5yzEwFSstbxtVR0fe115q5DAY1wVFJ9NI+JZp4vEfxhAw0quHtruQ
MLHxjY+evQi0fdR3S+NImKy4dXLyVT+oG4c/rygjYW71LedS+z5Qnqs34wyT
MH2WXyY42wPsU7yK52QNnOv5NeuQ1QdIkYZZau3QQHvTD8Wq9u+hJc76SWSU
Br7gH7VYzesGJQXC1vpCDeSI/45xonYDO3mwjvxWA0+nX5ZIW4SQrFppG/6j
E+1KTEbcH0J4kZnSVLuejPlalKDb6UJQpPjvIgWS0WxzNzfnshBKzBuNArPJ
eNQigqhTLARv97XyfzWT0ffu4P2ldiHIcLIGpBIyJqzv2FK0vBvupklq2aYU
3EEPzfe17QaPe4H83EAKFpwtsjNP7AZJ84uY4WwK7gpxoL5r++Enl7Ph/CIF
751o88s6/h6u6neO9P1LE3Wrk1RTX7yHMVvNazYHNJFnbbp5uf4HsAzZ63Lt
siY2Fsu8PXn+AyQl5Cz72qCJ5K5LxakjH6CrqLPc64sm8jvTdxp49sCqRs2w
8tVa+LjbLMi3qQeaFXLfcC5pYXXoxJzFy17w7/HkhdVoYfzY+gmxex/Mlav5
BU5oYfQifwuO9EFK2iuWD00bI5XuluXs6AdmSOKYB1sbBxf647Vv9EPVFtsS
xxhtnBzKl8uRHwAX0neu3R1tXJowS2uOGoCh8Wobm05tvN3QEPB4dgBin3Hl
Ny6noiLdhjgaJ4LT5k2Gq6yoGLpY0bFs/SCcLiI7UCOpaFYAPlnSQYghh4ap
5FMxY18ds2RsCE79Vp68JKCigM45ayAzDCe/yBVPy9PwYKrZZgp7BLhhnq2i
TTQMnN11ZqJjFLjCgv92hNOwp3KgrPDhOESzZ39qvk7DpfQ9rc2LE1B9vMZ2
92saMq18e+r4UyBzLenUgJSGcwEjJs84M2D/3PP+kbU6qGhNqiSfFUPaJ7po
0VcHeaVugnydz9BOGqckp+rgcVdhSlbCV9CyrnCkPNFBF6ME0JFZAv+QuLjC
cR20/ari0/RlGRalOVaso+riSklyt7Dzx79d7tlVOutiFdey1EtGGZcRVnbY
xOvitiRb1fFpNSwR/BLcUK6LChFEOW4xAf2zmmbZo7qYDf+upTSroMoew/MC
Gh01x/5xUjZWwCeUBKK3Kx2rDTnuNQ+lEN4lutF7no4Z9Rff2BPFoHV127rQ
R3TM02Dn66SMwRH/GN7iKB0tE0sVv6UMQAOrVJJJ08OAiclaQk4XUEdGA1a5
6GEZ03kuI1MAR4sZjbVxevhMLuNGbspLaOJ4m+wp08MCLavnTsJnoLMh4/dP
H/XwcOuM4p2fn4KVNFiCKgyk9/fmuLtVQEjv97Vphgyknumv8bIvATP+vjED
GwY+WLq9eDjuLsj4lN2s2c1AE/GKqJe0InijqRrkFcnAhAPsStZQPlz/5yB9
6gIDVUSSojXheRCZVdedeI2B0o8q8/f3ZsNmd2oOo4yBn4tbo9O8M0BRLcrz
cQsDz9cplRP8UuBd62s1DxED//TZGV3lfhG89x6LGVlkYKXrpTynb3HwfkBj
8AyZiaLvHgHVxrHgH1nlpP4zE4NMqZ7l9dHQ/9n30e2dTHTUzVQ7ceoYBMd/
17MJYuJSV6Oeum4kDCsXJrfHMvFhemsN+e5BCLtiL/6Fx8R5f8FNV8cg+MQY
9/v2gIkqi1d0edn7weCk8UhWExNL6/vIV/Z6g//rkGMmvUxc2FSsT1LdDbn6
BYt180xk1Kz7OJvoBu0xfRf3qrJwhSBp+A8HR1Bp0yFMGrBQKpjRO/SbPdgb
+VxNsGahnfe5gFj+dog7k2NA281C+gnLpwuNW6G6veNBaQQLc8qlC2lRVvA/
wi1+gQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$36528#6"]& ]}}, {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.837641821656743*^-7, 
        9.210339988212002}, {-58.47754667209467, 59.956163229093974`}}, {{
        3.837641821656743*^-7, 9.210339988212002}, {-58.47754667209467, 
        59.956163229093974`}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox[
         "\"noise response\\n/ dB (20\\!\\(\\*SubscriptBox[\\(log\\), \
\\(10\\)]\\))\"", 14, StripOnInput -> False], TraditionalForm], ""}, {
        FormBox[
         StyleBox[
         "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"", 14, StripOnInput -> False], 
         TraditionalForm], ""}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> Directive[FontSize -> 14], GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"readout port vacuum\"", "\"arm intra-cavity loss\"", 
       "\"signal intra-cavity loss\"", "\"idler intra-cavity loss\"", 
       "\"detection loss\"", "\"total quantum noise\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
                StyleBox[
                 InterpretationBox[
                 "\"\[Chi]/\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \
\\(thr\\)]\\)=0.95, \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"100.\\\\\\\"\\\", \
TraditionalForm]\\)ppm, \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
b\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"1000.\\\\\\\"\\\", \
TraditionalForm]\\)ppm,\\n\\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
c\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"1000.\\\\\\\"\\\", \
TraditionalForm]\\)ppm, \\!\\(\\*SubscriptBox[\\(R\\), \
\\(PD\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"0.1\\\\\\\"\\\", \
TraditionalForm]\\), \[Rho]\[NotEqual]0\"", 
                  StringForm[
                  "\[Chi]/\!\(\*SubscriptBox[\(\[Chi]\), \(thr\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm,\n\!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \
\!\(\*SubscriptBox[\(R\), \(PD\)]\)=``, \[Rho]``", "0.95", 
                   NumberForm[99.99999999999999], 
                   NumberForm[1000.], 
                   NumberForm[1000.], 
                   NumberForm[0.1], "\[NotEqual]0"], Editable -> False], 
                 FontFamily -> "Monospace", StripOnInput -> False], {
                 Directive[14], FontFamily -> "Arial"}, Background -> 
                Automatic, StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[14], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "14", "]"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", 
             StyleBox[
              InterpretationBox[
              "\"\[Chi]/\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \
\\(thr\\)]\\)=0.95, \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=\\!\\(\\*RowBox[{\\\"\\\\\\\"100.\\\\\\\"\\\"}]\\)ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
b\\)]\\)=\\!\\(\\*RowBox[{\\\"\\\\\\\"1000.\\\\\\\"\\\"}]\\)ppm,\\n\\!\\(\\*\
SubscriptBox[\\(T\\), \\(l, c\\)]\\)=\\!\\(\\*RowBox[{\\\"\\\\\\\"1000.\\\\\\\
\"\\\"}]\\)ppm, \\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=\\!\\(\\*RowBox[{\
\\\"\\\\\\\"0.1\\\\\\\"\\\"}]\\), \[Rho]\[NotEqual]0\"", 
               StringForm[
               "\[Chi]/\!\(\*SubscriptBox[\(\[Chi]\), \(thr\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm,\n\!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \
\!\(\*SubscriptBox[\(R\), \(PD\)]\)=``, \[Rho]``", "0.95", 
                NumberForm[99.99999999999999], 
                NumberForm[1000.], 
                NumberForm[1000.], 
                NumberForm[0.1], "\[NotEqual]0"], Editable -> False], 
              FontFamily -> "Monospace", StripOnInput -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.836959716326427*^9, 3.836959822678297*^9}, {
   3.836959964025607*^9, 3.836959985150392*^9}, 3.8369601242554398`*^9, 
   3.8373918869357862`*^9, 3.838064913202474*^9, 3.8380666710254374`*^9, {
   3.838068180842101*^9, 3.838068190880781*^9}, 3.838083894614842*^9, 
   3.838146951987307*^9, 3.838853283449235*^9, 3.838853530980928*^9, 
   3.838926570031081*^9, 3.839033053524352*^9, {3.839033726715255*^9, 
   3.839033772311615*^9}, {3.839035324619267*^9, 3.83903533885116*^9}, 
   3.839272559967062*^9, 3.839272665414111*^9, 3.839277463051721*^9, 
   3.839358495288706*^9, {3.839376848281294*^9, 3.839376908138994*^9}, {
   3.841277380392733*^9, 3.84127739539712*^9}, 3.842488433439699*^9, {
   3.8424884891815166`*^9, 3.842488543764489*^9}, 3.842488597310936*^9, {
   3.842488654035692*^9, 3.842488686337509*^9}, {3.842488850279129*^9, 
   3.842488871901813*^9}, 3.842488914256628*^9, 3.842489176470936*^9, {
   3.842489227353572*^9, 3.842489239437099*^9}, 3.842489290726411*^9, 
   3.842489385300254*^9, 3.8424894803372707`*^9, {3.842548555880578*^9, 
   3.8425485874485693`*^9}, 3.842573752099626*^9, {3.842573819815414*^9, 
   3.8425738233817987`*^9}, {3.842812828452684*^9, 3.842812832626809*^9}, 
   3.842996012411944*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"94989f61-0911-4b3f-a4b3-058c66c5ca38"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "optimum", " ", "sensitivity", " ", "at", " ", "probe", " ", "frequency"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "see", " ", "old", " ", "commit", " ", "before", " ", "October", " ", "7", 
    "th", " ", "for", " ", "original", " ", "plot"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pastThr", " ", "requires", " ", "maxThrRatio"}], "=", "1"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "plotThresholdFinder", "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"plotThresholdFinder", "[", 
     RowBox[{"fProbe_", ",", "Tla_", ",", "Tlb_", ",", "Tlc_", ",", 
      RowBox[{"\[Phi]_:", 
       RowBox[{"\[Pi]", "/", "2"}]}], ",", 
      RowBox[{"pastThreshold_:", "False"}], ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "False"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"reference", " ", "now", " ", "has", " ", "loss"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"probeNoiseRef", "=", 
       RowBox[{"QNwRP", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", "0", ",", "\[Phi]", ",", 
         "Tla", ",", "Tlb", ",", "Tlc", ",", "Rpd0", ",", "\[Rho]RPTrue", ",",
          "\[Rho]BAETrue", ",", "False"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"probeSigRef", "=", 
       RowBox[{"sigwRP", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", "0", ",", "\[Phi]", ",", 
         "Tla", ",", "Tlb", ",", "Tlc", ",", "Rpd0", ",", "\[Rho]RPTrue", ",",
          "\[Rho]BAETrue", ",", "False"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"probeSensRef", "=", 
       RowBox[{"ASDShwRP", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", "0", ",", "\[Phi]", ",", 
         "Tla", ",", "Tlb", ",", "Tlc", ",", "Rpd0", ",", "\[Rho]RPTrue", ",",
          "\[Rho]BAETrue", ",", "False"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxThrRatio", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"pointRatio", "=", "0.875"}], ";", "\[IndentingNewLine]", 
      RowBox[{"rpdList", "=", 
       RowBox[{"{", "Rpd0", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"leftPadding", "=", "60"}], ";", "\[IndentingNewLine]", 
      RowBox[{"imageSize", "=", "250"}], ";", "\[IndentingNewLine]", 
      RowBox[{"arrowHeads", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.04", ",", "0.6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.04", ",", "0.9"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"20", 
                   RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"QNwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"\[Chi]Ratio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeNoiseRef"}], "]"}]}], ",", 
                  RowBox[{"20", 
                   RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"ASDShwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"\[Chi]Ratio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeSensRef"}], "]"}]}]}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}], 
             ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Chi]Ratio", ",", "0", ",", "maxThrRatio"}], "}"}], ",", 
          
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameTicksStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<sensitivity increase / dB\>\"", ",", 
                   RowBox[{"N", "[", 
                    FractionBox["fProbe", 
                    SuperscriptBox["10", "3"]], "]"}]}], "]"}], ",", "16"}], 
                "]"}], ","}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<noise increase / dB\>\"", ",", 
                   RowBox[{"N", "[", 
                    FractionBox["fProbe", 
                    SuperscriptBox["10", "3"]], "]"}]}], "]"}], ",", "16", 
                 ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
               ","}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", "Blue", "}"}]}], 
          RowBox[{"(*", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Blend", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Blue", ",", "Green"}], "}"}], ",", 
               FractionBox[
                RowBox[{"i", "-", "1"}], 
                RowBox[{
                 RowBox[{"Length", "[", "rpdList", "]"}], "-", "1"}]]}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}], 
           "*)"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"60", ",", "10"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"50", ",", "1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "imageSize"}], "}"}]}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", 
           FractionBox["3", "4"]}], ",", 
          RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
          RowBox[{"GridLines", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "0", "}"}], ",", 
             RowBox[{"{", "0", "}"}]}], "}"}]}], ",", 
          RowBox[{"Epilog", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"PointSize", "[", "Large", "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"20", 
                  RowBox[{"Log10", "[", 
                   RowBox[{
                    RowBox[{"QNwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"pointRatio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", "Rpd0", ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeNoiseRef"}], "]"}]}], ",", 
                 RowBox[{"20", 
                  RowBox[{"Log10", "[", 
                   RowBox[{
                    RowBox[{"ASDShwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"pointRatio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", "Rpd0", ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeSensRef"}], "]"}]}]}], "}"}], "}"}], "]"}]}], 
            "}"}]}]}], "]"}], "/.", 
        RowBox[{
         RowBox[{"Line", "[", "x__", "]"}], "\[RuleDelayed]", 
         RowBox[{"Sequence", "[", 
          RowBox[{
           RowBox[{"Arrowheads", "\[Rule]", "arrowHeads"}], ",", 
           RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"p2", "=", 
         RowBox[{"ParametricPlot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"20", 
                RowBox[{"Log10", "[", 
                 RowBox[{
                  RowBox[{"QNwRP", "[", 
                   RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"maxThrRatio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", "Rpd", ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                  "probeNoiseRef"}], "]"}]}], ",", 
               RowBox[{"20", 
                RowBox[{"Log10", "[", 
                 RowBox[{
                  RowBox[{"ASDShwRP", "[", 
                   RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"maxThrRatio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", "Rpd", ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                  "probeSensRef"}], "]"}]}]}], "}"}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"Rpd", ",", 
             RowBox[{"rpdList", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"rpdList", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "Black", "]"}]}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"LineLegend", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{
                  "\"\<\[Chi]/\!\(\*SubscriptBox[\(\[Chi]\), \(thr\)]\)=``, \
varying \!\(\*SubscriptBox[\(R\), \(PD\)]\)\[Element](``,``)\>\"", ",", 
                   RowBox[{"NumberForm", "[", "maxThrRatio", "]"}], ",", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "]"}]}], "]"}], 
                 ",", "14"}], "]"}], "}"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"leftPadding", ",", "10"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}],
         ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"pastThreshold", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p1b", "=", 
          RowBox[{"ParametricPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"20", 
                    RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"QNwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"\[Chi]Ratio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeNoiseRef"}], "]"}]}], ",", 
                    RowBox[{"20", 
                    RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"ASDShwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"\[Chi]Ratio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeSensRef"}], "]"}]}]}], "}"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", 
                   RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}], 
               ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Chi]Ratio", ",", "maxThrRatio", ",", "2"}], "}"}], 
            ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Blend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Red", ",", "Yellow"}], "}"}], ",", 
                 FractionBox[
                  RowBox[{"i", "-", "1"}], 
                  RowBox[{
                   RowBox[{"Length", "[", "rpdList", "]"}], "-", "1"}]]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}]}], 
            ",", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"LineLegend", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"StringForm", "[", 
                   RowBox[{
                   "\"\<\[Chi]/\!\(\*SubscriptBox[\(\[Chi]\), \(thr\)]\)\
\[Element](``,2), \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``\>\"", ",", 
                    "maxThrRatio", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}],
                 "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"leftPadding", ",", "10"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
            RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p1and2", "=", 
          RowBox[{"Show", "[", 
           RowBox[{"p1", ",", "p1b"}], 
           RowBox[{"(*", 
            RowBox[{",", "p2"}], "*)"}], "]"}]}], ";"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p1and2", "=", 
          RowBox[{"Show", "[", "p1", 
           RowBox[{"(*", 
            RowBox[{",", "p2"}], "*)"}], "]"}]}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"20", 
                   RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"QNwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"\[Chi]Ratio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeNoiseRef"}], "]"}]}], ",", 
                  RowBox[{"20", 
                   RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"sigwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"\[Chi]Ratio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeSigRef"}], "]"}]}]}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}], 
             ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Chi]Ratio", ",", "0", ",", "maxThrRatio"}], "}"}], ",", 
          
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameTicksStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<signal increase / dB\>\"", ",", 
                   RowBox[{"N", "[", 
                    FractionBox["fProbe", 
                    SuperscriptBox["10", "3"]], "]"}]}], "]"}], ",", "16"}], 
                "]"}], ","}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<noise increase / dB\>\"", ",", 
                   RowBox[{"N", "[", 
                    FractionBox["fProbe", 
                    SuperscriptBox["10", "3"]], "]"}]}], "]"}], ",", "16", 
                 ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
               ","}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", "Blue", "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"All", ",", "24.9"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"45", ",", "10"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"50", ",", "1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "imageSize"}], "}"}]}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", 
           FractionBox["3", "4"]}], ",", 
          RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
          RowBox[{"GridLines", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "0", "}"}], ",", 
             RowBox[{"{", "0", "}"}]}], "}"}]}], ",", 
          RowBox[{"Epilog", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"PointSize", "[", "Large", "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"20", 
                  RowBox[{"Log10", "[", 
                   RowBox[{
                    RowBox[{"QNwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"pointRatio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", "Rpd0", ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeNoiseRef"}], "]"}]}], ",", 
                 RowBox[{"20", 
                  RowBox[{"Log10", "[", 
                   RowBox[{
                    RowBox[{"sigwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"pointRatio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", "Rpd0", ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeSigRef"}], "]"}]}]}], "}"}], "}"}], "]"}]}], 
            "}"}]}]}], "]"}], "/.", 
        RowBox[{
         RowBox[{"Line", "[", "x__", "]"}], "\[RuleDelayed]", 
         RowBox[{"Sequence", "[", 
          RowBox[{
           RowBox[{"Arrowheads", "\[Rule]", "arrowHeads"}], ",", 
           RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"p4", "=", 
         RowBox[{"ParametricPlot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"20", 
               RowBox[{"Log10", "[", 
                RowBox[{
                 RowBox[{"QNwRP", "[", 
                  RowBox[{
                   RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                   RowBox[{"maxThrRatio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                   "Tlc", ",", "Rpd", ",", "\[Rho]RPTrue", ",", 
                   "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                 "probeNoiseRef"}], "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"20", 
               RowBox[{"Log10", "[", 
                RowBox[{
                 RowBox[{"sigwRP", "[", 
                  RowBox[{
                   RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                   RowBox[{"maxThrRatio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                   "Tlc", ",", "Rpd", ",", "\[Rho]RPTrue", ",", 
                   "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                 "probeSigRef"}], "]"}]}]}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"Rpd", ",", 
             RowBox[{"rpdList", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"rpdList", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "Black", "]"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"leftPadding", ",", "10"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"All", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"pastThreshold", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p3b", "=", 
          RowBox[{"ParametricPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"20", 
                    RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"QNwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"\[Chi]Ratio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeNoiseRef"}], "]"}]}], ",", 
                    RowBox[{"20", 
                    RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"sigwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"\[Chi]Ratio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeSigRef"}], "]"}]}]}], "}"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", 
                   RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}], 
               ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Chi]Ratio", ",", "maxThrRatio", ",", "2"}], "}"}], 
            ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Blend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Red", ",", "Yellow"}], "}"}], ",", 
                 FractionBox[
                  RowBox[{"i", "-", "1"}], 
                  RowBox[{
                   RowBox[{"Length", "[", "rpdList", "]"}], "-", "1"}]]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}]}], 
            ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"leftPadding", ",", "10"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
            RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p3and4", "=", 
          RowBox[{"Show", "[", 
           RowBox[{"p3", ",", "p3b"}], 
           RowBox[{"(*", 
            RowBox[{",", "p4"}], "*)"}], "]"}]}], ";"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p3and4", "=", 
          RowBox[{"Show", "[", "p3", 
           RowBox[{"(*", 
            RowBox[{",", "p4"}], "*)"}], "]"}]}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"p1and2", ",", "p3and4"}], "}"}], "}"}], ",", 
        RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", "Blue", "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<\[Chi]/\!\(\*SubscriptBox[\(\[Chi]\), \
\(thr\)]\)\[Element](0,``), \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``\>\"", ",", 
            
            RowBox[{"NumberForm", "[", "maxThrRatio", "]"}], ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{"N", "[", 
              RowBox[{"rpdList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
          "14"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", "10", "]"}]}], ",", 
      RowBox[{"LegendLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(T\), \(l, \
a\)]\)=``ppm,\\n\!\(\*SubscriptBox[\(T\), \(l, \
b\)]\)=``ppm,\\n\!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm``\>\"", "<>", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"Not", "[", "\[Rho]RPTrue", "]"}], ",", 
              "\"\<; no RP\>\"", ",", "\"\<\>\""}], "]"}], "<>", 
            RowBox[{"If", "[", 
             RowBox[{
             "\[Rho]BAETrue", ",", "\"\<; with BAE\>\"", ",", "\"\<\>\""}], 
             "]"}]}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Tla", " ", 
              SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Tlb", " ", 
              SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Tlc", " ", 
              SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"\[Phi]", "\[NotEqual]", 
              FractionBox["\[Pi]", "2"]}], ",", 
             RowBox[{"\"\<,\\n\[Phi]/(2\[Pi])=\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"NumberForm", "[", 
                RowBox[{"N", "[", 
                 FractionBox["\[Phi]", 
                  RowBox[{"2", "\[Pi]"}]], "]"}], "]"}], "]"}]}], ",", 
             "\"\<\>\""}], "]"}]}], "]"}], ",", "14"}], "]"}]}]}], "]"}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"fProbe_", ",", "Tlc_", ",", 
     RowBox[{"\[Phi]_:", 
      RowBox[{"\[Pi]", "/", "2"}]}], ",", 
     RowBox[{"pastThreshold_:", "False"}], ",", 
     RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
     RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
     RowBox[{"symSRM_:", "False"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"setConfigParamsLi2020", "[", "]"}], "\[IndentingNewLine]", 
   RowBox[{"plotThresholdFinder", "[", 
    RowBox[{"2500", 
     RowBox[{"(*", "Hz", "*)"}], ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
     RowBox[{"\[Pi]", "/", "2"}], ",", "False"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<nIS_optimum_squeezing.pdf\>\"", ",", "%"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plotThresholdFinder", "[", 
     RowBox[{"10", 
      RowBox[{"(*", "Hz", "*)"}], ",", "0.1", ",", "pumpPhase0"}], "]"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plotThresholdFinder", "[", 
      RowBox[{"2500", 
       RowBox[{"(*", "Hz", "*)"}], ",", "0.1", ",", "pumpPhase0", ",", 
       "False", ",", "True", ",", "True"}], "]"}], "\[IndentingNewLine]", 
     RowBox[{"plotThresholdFinder", "[", 
      RowBox[{"10", 
       RowBox[{"(*", "Hz", "*)"}], ",", "0.1", ",", "pumpPhase0", ",", 
       "False", ",", "True", ",", "True"}], "]"}]}], "\[IndentingNewLine]", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "pump", " ", "phase", " ", "really", " ", "affects", " ", "low", " ", 
      "probe", " ", "frequencies"}], ",", " ", 
     RowBox[{
     "but", " ", "leaves", " ", "kilohertz", " ", "sensitivity", " ", 
      "relatively", " ", "unchanged"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8369602460387917`*^9, 3.836960570434452*^9}, {
   3.836960627210816*^9, 3.8369607279513474`*^9}, {3.8369608765618668`*^9, 
   3.836960897357997*^9}, {3.8380681498794003`*^9, 3.838068159323031*^9}, {
   3.838083444905792*^9, 3.838083452146599*^9}, {3.8380835326812897`*^9, 
   3.838083636160364*^9}, {3.838084004217861*^9, 3.838084027090013*^9}, {
   3.838084059188428*^9, 3.838084141938397*^9}, {3.838853160582803*^9, 
   3.8388531611276693`*^9}, {3.8388535618479853`*^9, 3.838853564883458*^9}, {
   3.8390327745015917`*^9, 3.839032784980894*^9}, {3.839033632202093*^9, 
   3.8390336338082848`*^9}, 3.8390338043661747`*^9, {3.8425490622237673`*^9, 
   3.842549070607132*^9}, {3.842549158030919*^9, 3.8425493686493464`*^9}, {
   3.842549548129068*^9, 3.842549553407838*^9}, {3.842549593912283*^9, 
   3.8425496055286303`*^9}, {3.842549645427759*^9, 3.842549660065629*^9}, {
   3.842549708354478*^9, 3.842549748437958*^9}, {3.842550105879712*^9, 
   3.842550179330722*^9}, {3.842550211412051*^9, 3.8425502623395853`*^9}, {
   3.842550404250971*^9, 3.8425505921608953`*^9}, {3.842550641080554*^9, 
   3.842550866138659*^9}, {3.842550954995096*^9, 3.842551065361086*^9}, {
   3.8425511007254343`*^9, 3.842551343017188*^9}, 3.842551374077917*^9, {
   3.842551406221991*^9, 3.842551443324484*^9}, {3.842551567248476*^9, 
   3.8425515853521214`*^9}, {3.842551624722869*^9, 3.842551671713953*^9}, {
   3.842551852274262*^9, 3.8425519484472322`*^9}, {3.842551992124021*^9, 
   3.8425519924824038`*^9}, {3.842552027127948*^9, 3.842552039823621*^9}, {
   3.842552073402626*^9, 3.842552077821487*^9}, {3.842552534765761*^9, 
   3.84255260230851*^9}, 3.84255266957477*^9, {3.8425528777260313`*^9, 
   3.842552920608238*^9}, {3.842553020690796*^9, 3.842553222580496*^9}, 
   3.842553351637218*^9, {3.8425533943995934`*^9, 3.8425534256574793`*^9}, {
   3.8425534719201393`*^9, 3.842553472252222*^9}, {3.842553513759388*^9, 
   3.8425535254838448`*^9}, {3.842553557317258*^9, 3.842553584008374*^9}, {
   3.843086700966992*^9, 3.8430867123646383`*^9}, {3.8430867518129787`*^9, 
   3.843086762318451*^9}, {3.843086828754736*^9, 3.84308686101474*^9}, 
   3.843086948479251*^9, {3.843087071074584*^9, 3.8430870713478107`*^9}, {
   3.843087106113873*^9, 3.8430871126036787`*^9}, {3.843603272320901*^9, 
   3.8436032871402884`*^9}, {3.8436034002304583`*^9, 
   3.8436034558209476`*^9}, {3.8436176993253803`*^9, 3.843617750735606*^9}, {
   3.843887826594486*^9, 3.843888030447608*^9}, {3.8438880728349543`*^9, 
   3.843888124616926*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"0965fdd5-b70c-4675-b9cb-c0cff4c32991"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {}, 
       TagBox[
        {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
         Arrowheads[{{0.04, 0.6}, {0.04, 0.9}}], FaceForm[Opacity[0.3]], 
         ArrowBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag$24027#1"]& ]},
      AspectRatio->NCache[
        Rational[3, 4], 0.75],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{
        RGBColor[1, 0, 0], 
        PointSize[Large], 
        PointBox[{{1.7563946417953227`, -22.140883005998372`}}]},
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox[
           InterpretationBox["\"sensitivity increase / dB\"", 
            StringForm["sensitivity increase / dB", 2.5], Editable -> False], 
           16, StripOnInput -> False], TraditionalForm], ""}, {
         FormBox[
          StyleBox[
           InterpretationBox["\"noise increase / dB\"", 
            StringForm["noise increase / dB", 2.5], Editable -> False], 16, 
           FontFamily -> "Arial", StripOnInput -> False], TraditionalForm], 
         ""}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->Directive[FontSize -> 14],
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{60, 10}, {50, 1}},
      ImageSize->{Automatic, 250},
      Method->{"ScalingFunctions" -> None},
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {}, 
       TagBox[
        {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
         Arrowheads[{{0.04, 0.6}, {0.04, 0.9}}], FaceForm[Opacity[0.3]], 
         ArrowBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag$24050#1"]& ]},
      AspectRatio->NCache[
        Rational[3, 4], 0.75],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{
        RGBColor[1, 0, 0], 
        PointSize[Large], 
        PointBox[{{1.7563946417953227`, 23.897277647793693`}}]},
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox[
           InterpretationBox["\"signal increase / dB\"", 
            StringForm["signal increase / dB", 2.5], Editable -> False], 16, 
           StripOnInput -> False], TraditionalForm], ""}, {
         FormBox[
          StyleBox[
           InterpretationBox["\"noise increase / dB\"", 
            StringForm["noise increase / dB", 2.5], Editable -> False], 16, 
           FontFamily -> "Arial", StripOnInput -> False], TraditionalForm], 
         ""}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->Directive[FontSize -> 14],
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{45, 10}, {50, 1}},
      ImageSize->{Automatic, 250},
      Method->{"ScalingFunctions" -> None},
      PlotRange->{All, {All, 24.9}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 0}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.842550679721807*^9, 3.84255080701751*^9}, {
   3.842550846360124*^9, 3.84255086815423*^9}, {3.8425509638497143`*^9, 
   3.8425509892453117`*^9}, {3.842551055404628*^9, 3.84255106818254*^9}, 
   3.842551115785844*^9, 3.842551286959773*^9, 3.8425513477006407`*^9, {
   3.8425515746728067`*^9, 3.842551592421825*^9}, 3.8425516388563843`*^9, 
   3.842551674094108*^9, {3.8425518801290827`*^9, 3.8425519002631617`*^9}, 
   3.842551954590116*^9, 3.8425519968404007`*^9, {3.842552030164651*^9, 
   3.842552040535816*^9}, 3.842552078716774*^9, {3.842552555911894*^9, 
   3.842552591474551*^9}, 3.842552670628132*^9, 3.842552921851972*^9, {
   3.842553026407915*^9, 3.8425530887326717`*^9}, {3.842553140402542*^9, 
   3.8425532232822237`*^9}, 3.84255335341822*^9, 3.842553474914865*^9, {
   3.842553516254512*^9, 3.842553526218478*^9}, {3.8425535661619253`*^9, 
   3.842553584959942*^9}, 3.842812866118607*^9, 3.8430867166452427`*^9, {
   3.84308685246069*^9, 3.843086861720984*^9}, 3.8430869491815357`*^9, 
   3.8430870721589127`*^9, 3.8430871136650457`*^9, 3.843603177829432*^9, 
   3.843603427505629*^9, 3.8436034599704037`*^9, 3.843617607297173*^9, 
   3.843617680765458*^9, 3.84361775622701*^9, {3.8438876734930477`*^9, 
   3.843887680848093*^9}, 3.843887765802243*^9, {3.843887926158997*^9, 
   3.843888031076693*^9}, {3.84388808809081*^9, 3.843888125299818*^9}},
 CellLabel->
  "Out[132]=",ExpressionUUID->"03e479a5-e389-4d7d-93f1-b8579bbb10fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"copied", " ", "from", " ", 
    RowBox[{"nIS", ".", "nb"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Checking", " ", "stability"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "\[Chi]", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"denominator00", "=", 
     RowBox[{"\[Gamma]btot0", "-", 
      RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
      FractionBox[
       SuperscriptBox["\[Kappa]0", "2"], 
       RowBox[{"\[Gamma]a0", "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
      FractionBox[
       SuperscriptBox["\[Chi]0", "2"], 
       RowBox[{"\[Gamma]c0", "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"additional", " ", "poles", " ", "at", " ", "\[Gamma]a"}], ",", 
     "\[Gamma]c"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<lossless: \>\"", ",", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"denominator00", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Gamma]a0", "\[Rule]", "0"}], ",", 
            RowBox[{"\[Gamma]c0", "\[Rule]", "0"}], ",", 
            RowBox[{"\[Gamma]btot0", "\[Rule]", "\[Gamma]R0"}]}], "}"}]}], 
         ")"}], "\[Equal]", "0"}], ",", "\[CapitalOmega]"}], "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"stabilitySol", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"denominator", "\[Equal]", "0"}], ",", "\[CapitalOmega]"}], 
         "]"}], ",", 
        RowBox[{"Assumptions", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Kappa]0", ">", "0"}], ",", 
           RowBox[{"\[Chi]0", ">", "0"}], ",", 
           RowBox[{"\[Gamma]a0", ">", "0"}], ",", 
           RowBox[{"\[Gamma]btot0", ">", "0"}], ",", 
           RowBox[{"\[Gamma]c0", ">", "0"}]}], "}"}]}]}], "]"}]}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"denom00", "[", 
      RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", 
       RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
     RowBox[{
      RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}], "-", 
      RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
      FractionBox[
       SuperscriptBox["\[Omega]s", "2"], 
       RowBox[{
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}], "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
      FractionBox[
       SuperscriptBox["\[Chi]", "2"], 
       RowBox[{
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}], "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stabilitysWLC", "[", 
     RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"stabSol", "=", 
       RowBox[{"NSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"denom00", "[", 
           RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], "]"}], 
          "\[Equal]", "0"}], ",", "\[CapitalOmega]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Im", "[", 
                RowBox[{"\[CapitalOmega]", "/.", 
                 RowBox[{"stabSol", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"\[Chi]", "\[Rule]", 
                 RowBox[{"ratio", " ", "\[Omega]s"}]}], "}"}]}], ")"}], "/", 
             "\[Gamma]R"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "stabSol", "]"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ratio", ",", "0", ",", "2"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{",", "Dashed", ",", "DotDashed"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"50", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<Im[\[CapitalOmega]]/\[Gamma]R\>\"", ","}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{",", 
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<poles of transfer function\\nunstable when Im[\
\[CapitalOmega]]\[GreaterEqual]0\\n\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, sym. SRM loss?=``\>\"", ",", "Tla", ",", "Tlb", ",", "Tlc", ",", 
                "symSRM"}], "]"}]}], "}"}]}], "}"}]}], ",", 
         RowBox[{"GridLines", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"1", ",", "Red"}], "}"}], "}"}], ",", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Re", "[", 
                RowBox[{"\[CapitalOmega]", "/.", 
                 RowBox[{"stabSol", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"\[Chi]", "\[Rule]", 
                 RowBox[{"ratio", " ", "\[Omega]s"}]}], "}"}]}], ")"}], "/", 
             "\[Gamma]R"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "stabSol", "]"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ratio", ",", "0", ",", "2"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{",", "Dashed", ",", "DotDashed"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"50", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"All", ",", "1"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<Re[\[CapitalOmega]]/\[Gamma]R\>\"", ","}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\!\(\*FractionBox[\(\[Chi]\), \(\[Omega]s\)]\)\>\"", ","}], 
             "}"}]}], "}"}]}], ",", 
         RowBox[{"GridLines", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"1", ",", "Red"}], "}"}], "}"}], ",", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2"}], "}"}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "stabilitysWLCPretty", "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"stabilitysWLCPretty", "[", 
     RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", 
      RowBox[{"symSRM_:", "False"}], ",", 
      RowBox[{"hideYAx_:", "False"}], ",", 
      RowBox[{"plotStyle_:", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"exclusions_:", "None"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"stabSol", "=", 
       RowBox[{"NSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"denom00", "[", 
           RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], "]"}], 
          "\[Equal]", "0"}], ",", "\[CapitalOmega]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Labeled", "["}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"\[CapitalOmega]", "/.", 
                RowBox[{"stabSol", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
              RowBox[{"{", 
               RowBox[{"\[Chi]", "\[Rule]", 
                RowBox[{"ratio", " ", 
                 RowBox[{"singularityThr", "[", 
                  RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                  "]"}]}]}], "}"}]}], ")"}], "/", "\[Gamma]R"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "stabSol", "]"}]}], "}"}]}], "]"}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"ratio", ",", "0", ",", "1.1"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImagePadding", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"hideYAx", ",", "2", ",", "20"}], "]"}], ",", "10"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"20", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "220"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", ",", "}"}], ",", 
           RowBox[{"{", ",", "}"}]}], "}"}]}], ",", 
        RowBox[{"GridLines", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"Directive", "[", 
               RowBox[{"Black", ",", "Thin"}], "]"}]}], "}"}], "}"}], ",", 
           "None"}], "}"}]}], ",", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"hideYAx", ",", 
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], "]"}], ","}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"FontSize", "\[Rule]", "14"}], "]"}], ","}], "}"}]}], 
          "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"All", ",", "All"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5.5"}], ",", "4.5"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "plotStyle"}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "exclusions"}]}], "]"}]}], ")"}]}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<\\n\\n\!\(\*SubscriptBox[\(T\), \(l, \
a\)]\)=``ppm,\\n\!\(\*SubscriptBox[\(T\), \(l, \
b\)]\)=``ppm,\\n\!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm\>\"", ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Tla", " ", 
              SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Tlb", " ", 
              SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Tlc", " ", 
              SuperscriptBox["10", "6"]}], "]"}], "]"}]}], "]"}], ",", "14"}],
         "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Top"}], "}"}], "}"}]}], "]"}], ")"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"setConfigParamsLi2020", "[", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"stabilitysWLCPretty", "[", 
           RowBox[{"0", ",", "0", ",", "0", ",", "False", ",", "False", ",", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", "Red"}], "}"}], ",", "None"}], "]"}], ",", 
          RowBox[{"stabilitysWLCPretty", "[", 
           RowBox[{
           "Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False", ",", "True", ",", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", "Red", ",", "Cyan"}], "}"}], ",", 
            "Automatic"}], "]"}]}], "}"}], "}"}], ",", 
       RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<imaginary part of pole / \!\(\*SubscriptBox[\(\[Gamma]\), \(b, R\
\)]\)\>\"", ",", "16", ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<ratio to singularity threshold, \[Chi]/\!\(\*SubscriptBox[\(\
\[Chi]\), \(thr\)]\)\>\"", ",", "16", ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
     RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<nIS_stability.pdf\>\"", ",", "%"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"realistically", ",", " ", 
     RowBox[{
     "\[Gamma]c", " ", "is", " ", "at", " ", "least", " ", "\[Gamma]R"}], ",",
      " ", 
     RowBox[{
     "so", " ", "the", " ", "lossless", " ", "plot", " ", "is", " ", "not", 
      " ", "useful"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "plots", " ", "look", " ", "much", " ", "nicer", " ", "with", " ", "Li", 
      " ", "et", " ", "al"}], ",", " ", 
     RowBox[{"2020", " ", "parameter", " ", "set"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Exclusions", " ", "\[Rule]", " ", 
     RowBox[{
     "None", " ", "makes", " ", "a", " ", "strange", " ", "line", " ", "in", 
      " ", "the", " ", "lossy", " ", "case", " ", "that", " ", "I", " ", "am",
       " ", "going", " ", "to", " ", "assume", " ", "is", " ", "an", " ", 
      "error"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.83504641704847*^9, 3.83504651011362*^9}, {
   3.835049371511012*^9, 3.835049380301217*^9}, {3.835049418434885*^9, 
   3.835049469736174*^9}, {3.835049508857883*^9, 3.835049557578328*^9}, {
   3.8350497931951036`*^9, 3.8350498562789583`*^9}, {3.8350499447238283`*^9, 
   3.8350499782220507`*^9}, {3.835050012687291*^9, 3.83505010081954*^9}, {
   3.8350501385701714`*^9, 3.8350501438812428`*^9}, {3.835050175325329*^9, 
   3.835050219451564*^9}, {3.835050308236258*^9, 3.835050388374193*^9}, {
   3.835050432386447*^9, 3.835050511999774*^9}, {3.83505056773658*^9, 
   3.8350506526832933`*^9}, {3.835050688626114*^9, 3.835050689709009*^9}, {
   3.8350507425496798`*^9, 3.835050754560383*^9}, {3.835051042014687*^9, 
   3.8350511646313143`*^9}, {3.8350512392918997`*^9, 3.835051285130447*^9}, {
   3.835051341858755*^9, 3.835051351648428*^9}, {3.835051473303735*^9, 
   3.835051486835176*^9}, {3.8350516126305943`*^9, 3.83505166725378*^9}, {
   3.835143788713299*^9, 3.835143801585413*^9}, {3.8351438402169533`*^9, 
   3.835143863663851*^9}, {3.835143978415365*^9, 3.835143979233163*^9}, 
   3.83514405083946*^9, {3.835300388984281*^9, 3.8353003942118883`*^9}, {
   3.835904131864151*^9, 3.835904132443358*^9}, {3.835904202931649*^9, 
   3.835904205921523*^9}, {3.835904262493464*^9, 3.835904276290058*^9}, {
   3.835904372211176*^9, 3.835904377642256*^9}, {3.835904409857163*^9, 
   3.8359044571483927`*^9}, {3.835904499094524*^9, 3.83590452862432*^9}, {
   3.835904581922208*^9, 3.83590462466094*^9}, 3.8359046786027527`*^9, {
   3.835904716885625*^9, 3.835905054795032*^9}, {3.835905184376197*^9, 
   3.8359053513384867`*^9}, {3.835905439587319*^9, 3.835905504505887*^9}, {
   3.8359055463703537`*^9, 3.835905566229837*^9}, {3.83590560438199*^9, 
   3.835905606332498*^9}, {3.835905663921935*^9, 3.835905708835417*^9}, {
   3.835905740747705*^9, 3.835905757754509*^9}, {3.835905797103469*^9, 
   3.8359058969789953`*^9}, {3.835905927406488*^9, 3.835905927832864*^9}, {
   3.835905960221671*^9, 3.835906187354944*^9}, {3.8359062179128113`*^9, 
   3.835906234364009*^9}, {3.835906267835814*^9, 3.835906312918454*^9}, {
   3.8359066233981*^9, 3.835906623622389*^9}, {3.835907018220572*^9, 
   3.835907018412875*^9}, {3.83590851353498*^9, 3.835908513794125*^9}, {
   3.835910963149638*^9, 3.835910976361925*^9}, {3.8359164503514147`*^9, 
   3.835916455043648*^9}, {3.836179604404111*^9, 3.836179615139862*^9}, {
   3.836250176159008*^9, 3.836250221227647*^9}, {3.836336010423093*^9, 
   3.8363360373829308`*^9}, {3.8363448160371923`*^9, 3.836344816659512*^9}, {
   3.8363462481744223`*^9, 3.836346332687386*^9}, {3.836505989396023*^9, 
   3.8365060036075993`*^9}, {3.836530955588299*^9, 3.8365309581363497`*^9}, {
   3.8388552711513968`*^9, 3.838855312100977*^9}, {3.838855343824719*^9, 
   3.8388553443065557`*^9}, {3.838855393066392*^9, 3.8388553932693*^9}, {
   3.838855483184791*^9, 3.838855618063979*^9}, 3.839032797799479*^9, {
   3.839033246651506*^9, 3.839033253769734*^9}, {3.839033828734683*^9, 
   3.839033867682425*^9}, {3.841277518722204*^9, 3.841277529804846*^9}, {
   3.841277578269162*^9, 3.8412775840213537`*^9}, {3.84248993655204*^9, 
   3.842489939678392*^9}, {3.842490144492827*^9, 3.8424902596908216`*^9}, {
   3.842490312356442*^9, 3.842490408423012*^9}, {3.84249043991644*^9, 
   3.842490607637925*^9}, {3.842490646128581*^9, 3.84249067067914*^9}, {
   3.8424907103523397`*^9, 3.842490719122973*^9}, {3.842490749957156*^9, 
   3.842490752570109*^9}, {3.84249078963741*^9, 3.8424907932514*^9}, {
   3.842490958691676*^9, 3.8424910018897533`*^9}, {3.8424910524450703`*^9, 
   3.8424911038031473`*^9}, {3.842491136425355*^9, 3.8424912832699947`*^9}, {
   3.8424913349868*^9, 3.842491403889536*^9}, 3.842491434281934*^9, {
   3.8424914910657063`*^9, 3.8424915179536467`*^9}, {3.842491571184808*^9, 
   3.842491606286931*^9}, {3.842491657593686*^9, 3.842491659137364*^9}, {
   3.842491704924737*^9, 3.8424917535000134`*^9}, {3.842491835994956*^9, 
   3.842491866623144*^9}, {3.842491988670282*^9, 3.8424920901698713`*^9}, {
   3.842492174276855*^9, 3.8424922151390944`*^9}, {3.842492267454309*^9, 
   3.84249227188315*^9}, {3.8424925557394257`*^9, 3.842492556835112*^9}, {
   3.84257390760255*^9, 3.842573917354434*^9}, {3.842573965533119*^9, 
   3.842573997460681*^9}, {3.842995844537672*^9, 3.8429958538403997`*^9}, {
   3.84299602931879*^9, 3.842996035367772*^9}, {3.84360372118649*^9, 
   3.843603731708784*^9}, {3.8436037757656116`*^9, 3.843603792983782*^9}, {
   3.8436038237598877`*^9, 3.8436038446859922`*^9}, {3.84360394570542*^9, 
   3.84360396336644*^9}, {3.843885329742044*^9, 3.843885349821061*^9}, {
   3.843885400218913*^9, 3.843885402204032*^9}, {3.84388543514398*^9, 
   3.843885453678822*^9}, {3.8438855101466227`*^9, 3.843885562331027*^9}, {
   3.8438856652343903`*^9, 3.843885682090444*^9}, {3.843885717138384*^9, 
   3.843885919860036*^9}, {3.843886011455871*^9, 3.843886012992729*^9}, {
   3.843886706969244*^9, 3.843886708981842*^9}, {3.844477325633073*^9, 
   3.844477468761586*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"1fc45ae0-6255-4c50-aa7c-d825532ddd9d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"lossless: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalOmega]", "\[Rule]", 
       RowBox[{
        FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]R0"}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]R0", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Kappa]0", "2"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Chi]0", "2"]}]}]]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalOmega]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]R0", "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]R0", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Kappa]0", "2"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Chi]0", "2"]}]}]]}], ")"}]}]}], "}"}]}], 
    "}"}]}],
  SequenceForm["lossless: ", {{$CellContext`\[CapitalOmega] -> Complex[0, 
        Rational[
        1, 2]] (-$CellContext`\[Gamma]R0 + ($CellContext`\[Gamma]R0^2 - 
         4 $CellContext`\[Kappa]0^2 + 4 $CellContext`\[Chi]0^2)^
        Rational[1, 2])}, {$CellContext`\[CapitalOmega] -> Complex[0, 
        Rational[-1, 
         2]] ($CellContext`\[Gamma]R0 + ($CellContext`\[Gamma]R0^2 - 
         4 $CellContext`\[Kappa]0^2 + 4 $CellContext`\[Chi]0^2)^
        Rational[1, 2])}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.836531075470694*^9, 3.836592805980894*^9, 3.8366059443873863`*^9, 
   3.838855322245838*^9, {3.838855467556366*^9, 3.838855619347466*^9}, 
   3.838926573989048*^9, 3.83903313514401*^9, 3.8390338474280167`*^9, 
   3.8390353582554407`*^9, 3.839272625392375*^9, 3.8392775710353537`*^9, 
   3.839358499097335*^9, 3.8393769259004297`*^9, {3.841277511394951*^9, 
   3.841277530129902*^9}, 3.841277584721854*^9, {3.8424899241029787`*^9, 
   3.84248994093909*^9}, 3.842490156558428*^9, {3.8424901888427362`*^9, 
   3.842490199107864*^9}, {3.84249042355772*^9, 3.842490516298883*^9}, 
   3.842490565234874*^9, 3.8424906080362167`*^9, {3.8424906486880713`*^9, 
   3.842490671305709*^9}, {3.84249071549461*^9, 3.842490719570994*^9}, 
   3.8424907530253973`*^9, 3.842490793978139*^9, 3.842491002758313*^9, {
   3.8424910759191847`*^9, 3.8424911045926733`*^9}, {3.842491157678383*^9, 
   3.842491283956773*^9}, {3.8424913670899754`*^9, 3.842491404581953*^9}, {
   3.8424914952663383`*^9, 3.842491519253519*^9}, {3.842491577594974*^9, 
   3.8424916067281303`*^9}, 3.842491659735085*^9, {3.842491705671412*^9, 
   3.842491737635478*^9}, {3.842491843579727*^9, 3.8424918669159603`*^9}, {
   3.842492047127233*^9, 3.8424920640011044`*^9}, 3.842492100567984*^9, {
   3.842492186453764*^9, 3.842492215693317*^9}, 3.842492272761458*^9, 
   3.842492557407248*^9, 3.8425738548984623`*^9, {3.842573971389676*^9, 
   3.842573997804991*^9}, {3.842995964316033*^9, 3.842995964994403*^9}, {
   3.8429960166726933`*^9, 3.842996038522624*^9}, 3.843603627913093*^9, 
   3.843603734977417*^9, {3.8436037764905767`*^9, 3.843603793627758*^9}, {
   3.843603834309766*^9, 3.843603845995111*^9}, {3.8436039464672937`*^9, 
   3.843603963766696*^9}, 3.843885301261284*^9, {3.843885334172428*^9, 
   3.8438853612844477`*^9}, 3.843885403263538*^9, 3.8438854550655203`*^9, 
   3.843885511311783*^9, 3.843885560537047*^9, 3.84388573797301*^9, {
   3.843885770925603*^9, 3.843885834388204*^9}, {3.8438858874200087`*^9, 
   3.84388592013098*^9}, 3.843886014154582*^9, {3.843886733098833*^9, 
   3.843886734607561*^9}, 3.84447729240026*^9, {3.8444773338195543`*^9, 
   3.8444773492036257`*^9}, {3.8444774105318832`*^9, 3.844477469124508*^9}, 
   3.847930389700845*^9},
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"05e70862-e65d-4aa7-8c32-4bbda63ed40c"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1:eJxF0ns01HkUAPAxPQzymvk1KSSUlYwSFQ6+vcnzNEkaZ6X0mLQljNombR49
vRIqRhRbeUW1enr0+zalJFsbjcq7iQmV+f7yyIS1s3vOfueec889nz/uPefe
c023hXF30Gk0Wrgy/62X8o/GVMwKcKX9F51kiG1CsIHRCfC/A0+3t7ONzmMf
nv6CZ6ZZgF36h3CawPgWdhF5SVaddRf73ti8Du3kKuyCqtOXedqPsEeZt4Jv
6T7BlgQG545OeoYtWP04NbzmObZRjX9aqLge+1R3jvuZpFfYLtFLH26Y+xq7
cv3dLaaXG7ANv59pOUZ/g320R62jKE6CbdG4LK92tAn7ZvIzlyOB77BdM+Rb
B969xy4LDQ+ecG7BNk9OlNU/bMVuKdy9IMOxHTsqI8+DEnVga8ruj6gnd2K/
6PV2lIIP2Jy+1Zsd5Sqn6TFcwkul2D2zR7QHgz5iL99wO3+TSRe207EGtkOr
yvNyjH8NSerGZrba54R5yrAR/dCNp+Mq77cwyRNd/4T9Leysv29oD/aOvEUK
H8Ne7OaR7C0LW1Re7mBfzkvpw3YX2Mjorp+xuU2DrYljKnvP6YFbyr5ge6QW
8Imwr9i9Y7XyNdb92IfWz9gublVZnDKXFu4sx9aqt71oclHl61firz6vVdnr
iKQsckjlJlGor+uIHIRJN87PlX4ig+9PyBmjciA5Of50WfRnsk+Skdo4Lgd3
S8R7Iu36yQpFhoEvDYGgEZl+lzMij57q4N9WQ6DugaZbsjNFrp5h9WDmJAR2
7jUddjD/Rr60Jzd3TUGg+4ZOPFE1QKY/1ihep47A0m3C57SoQTKA6/ejjIFA
dqbNOon5ECkN6xUd0kLgSwKb28kfJoeLWa06+gisebujS1I0QlY6BlkLmAhU
Nnh6BdsoyJjawuj3LATer1QjiRsK5X+5GF9hI8CLXWC47NoPcrYpP8jRCIGS
FP4RjYgx0u1CVWfITwicWPnKZs3vE+TUvhorsSUC9HjijiaNBp84vxLMsUJA
tLC9uYZDg8ulHxht1gjUqC2r5J6kQSeOuq3/YgQKFuRGCu3UoPXj9bHuLsp9
5RcswgV0qCeXmXI2IHBfZ8WeOzcnw5cr0J5EPwS0R0t1tRomw6QMxZ3ejUov
KOgxHZgMNZymeVwLUN7PHrZn2k+B9OO2ESZBCHi13hX9dXsKHJwVLdbfjcCm
0j7f3SVT4fu1+iHDvyFQ3dI/P/sgA3bZ5u+LiEGgqGZVyP5zDNhvZCfsj0Xg
jMsiN+NyBqQP+J2VHUNAEmlRRetnQOtLmWRTAgJnmU9m0bZpwN++mxjdO49A
Sspx4dZVmtC80EZysAwBH9HJlZpyLbhXw8tN0YZAwkqxXdS4DnT3udcT2KG8
b336D32WLjRLN0t42InAGLuae8lSFzYZKerjPyLweYbWuqQNutB10TWuTi8C
MYUanPJCXai3iRZkPoiA/ZM25nxLPVh+5bbAW5MCQ+5No411elABjPPzllIg
YnaPq96EPrzG/hjLcaAAO+5VfaQGE3K/Fm594EiBCp5F2msWExaL7E1fO1PA
6US+/LAlE/KGPC/TVlGg7lDbvOT1TFhRLMzd4kuBxXX8c8X5TCic/k5kzKfA
NFGJDbGCBS2+5AiLdlPgF9tB6rUHCzaIQ3hL9lAgt9PNINGPBa32y2d676NA
I1Bcl+9iwea6qVnRAgpIHwbVxaWwoFPMkgstMRQIGIiye9vMgjL/0QO74iig
+yw6x6eLBdM4j/wH4ilQfiug7dFXFuxr9mJrnVTOoz8fyaYRULRk+zmnZGV/
9TGuiQUB106zinqaQgED9asmBxYS8JtU7sdNpcBwDn+o1oGAHqmHidB0Ckyp
Mmjc5knA4Z0rBocyKMArnpAV+REw30X9Tex5CrwzOGr49WcC+hB/lmtnUqD7
77AD1rsI+KMvLT0riwJmnJzxXfsJ+A8McBwe
              "]]}, 
            Annotation[#, "Charting`Private`Tag$27065#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1:eJxF0ns01GkYB/BpbI3LYKgmyuxEUolio43F85YukksNDY3NtYROLiVtUi7V
Vsp9VKYkopCUpZtI6TY2XeQSUSRNqMz7QzKk1u45+85zzvc85/Pn9zmPrm8I
bzOdRqOFjeffnZUTHVM+3d2G9t90VPmZxntr6fwJ/9vjyJs3bJ3jxHumPhbo
KV8gvvRXJDOcU0JcUJUlqcy4Rnz92+x21YQK4gsVR84KVO8Sj2qWeJeo3ydu
9PA+M6rwiDh8+b3ksAc1xDoP+KlB1bXEh99n2iUde0ZsHbX4tot+HfGtdde8
dM++IJ7xNan1AL2BOLp7QntBXCOxQf2v2eLRJuIrCY+s93o0E9sIpT4DzS3E
xUFh3j+sWolnJRyV1N5uI27ND5wvtHhDvFOYbU+J2omVJTeGGQkdxI97HC06
4S2xce/yDRZSuVNZitZhlzqJu38eVh30fEeMXMpy3LhdxJYHXrCXtMk9O5Pz
h9+x98SabWaZIWskxJi++/LDMblDDbjZoqIPxP0hKXznoG7izdkmMqcZPcSv
hk95LWyVGy0xKxUk9hLbhS+Q0G0+EvOaBtuOfpPbcWb3Ha/iT8T2yRcCpoR8
Ju75JpauMOoj3r1u2qbqNrmrE/VpYVZSYpVa09Pc03IX5e7PqxHL7bC3sXjH
F7mbREHONsNS0P3N9dI9y+dV3jd+SBVHpVDUodQ1U726qrdRmFw/JoWs5Y22
NeKiqnKZUMuZhmFoQdSA4vZEiD7cHlA2AUPm6YuhDeJSWD7N8Ka2AoaFW1VK
HmnfhadmVRu6JmIwit6pldvxBNLuKRWuZmB4ebhntkJDHbjzXEeKFTEE+Zbr
r09qgM6QHtFuFQyX5wvsYs+1wFDh5DY1DQxHih+LL7q8hVsWnkbhmhh25Z04
eef3TogR50e1TMZQepC+b974XyhLrDm5bAxldLfFwQ7v4WfdAE8LHQx8Tt2I
Zlc3rDpR0eE3B4PKwTMb41dKYVLvA8PquRgUJs0Lmjre677Vs/CZhhjMvSqu
HvXAgDrfKr42whCvEByRp0aBpTHDlP8LBmc3qw+D/v1gdG9drJ01hto3Cx07
uweBJZXoGrtgCOHENQX5yODpUrz1qCsG7SEPLjtXBseEsqs968fNd6qzlchA
yZJpf94dgzAwptI0cAToB023cz0xnLyxzTw7cBQGp0dVawRiuCRozHrBH4OW
lRp+Q/swVLb2zTu1i4a6THOCt8dgKHhg6xeaTkN9Oosi+2IxJFmbrOKU0hB9
wDVFcgBD4w6DClofDRllnaxqiseQonl/Os13Atr3latz/TiGxMSDkT62dDQr
f0HjrmIMTqJDy5SlCmibksMq2evx/suqF+0cm4TsnK53e7RjENSmjWhMZiC9
NL342x0YvrEreVlzGahJR1a7/x2Gj9NUVh9zYSAbk/M8tR4MMflKxqX5DMRy
o3nOGsSw5fCt2by1iqg0tyzcUZmC3pSirxfSlZAMODnZiyl4b/V878zvKug8
+12s8RIKjH7KyvigyUS8z/k+Ny0oCL/qoH9uDhMVisx066zGzVzR/nUtEwm+
rDlLs6UgfaB8zfRzTFReGHnGy5mCzcI6w/UrVFHk1GYRJ4ACbTO3jXPj1JDB
p8zIgkAKXvp2vzuXroZeVPsJzLdSYHU3yYRdoIYMQ6XajsEU5EX3b2h/poZe
/T0pIyqcgvt7K4UTOerIMsb8RGsMBVckH/2Lr6ojCX80YkscBdxEmWWmWB2l
Gt/lD+ynwN+vpHx/qzrqfeXAVjlEQT29ZvgUjYVE5pvSLRMocK88wOMasNBK
puHOh4kUaDHyuBELWai/U+rKS6ZgKDPgi3gJC9kn75kSlEbBxAqtet81LDTk
v3Twi5ACQeEPSYErC+VYMxpij1PQrBU94/NGFnKa8qRU9eT4Pb+HRBhtYaGR
3tS0jAwK9Iwzx7aEstA/1uUBTQ==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$27065#2"]& ]}}, {}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
         GridLines -> {{{1, 
             Directive[
              GrayLevel[0], 
              Thickness[Tiny]]}}, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, 
         ImagePadding -> {{20, 10}, {20, 1}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{"", ""}, {"", ""}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         FrameTicksStyle -> {{
            Directive[FontSize -> 14], Null}, {
            Directive[FontSize -> 14], Null}}, GridLines -> {{{1, 
             Directive[
              GrayLevel[0], 
              Thickness[Tiny]]}}, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{20, 10}, {20, 1}}, 
         ImageSize -> {Automatic, 220}, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {All, {-5.5, 4.5}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
              "]], 
             
             LineBox[{{1.008569843702062, -1.635711543544779}, {
              1.0089352136634337`, -1.6596894800762387`}, {
              1.0096167353417103`, -1.7038848415700854`}, {
              1.0099507971596053`, -1.7252937256083856`}, {
              1.0102848589775002`, -1.7465345425267247`}, {
              1.01095298261329, -1.7885120653380682`}, {
              1.0122892298848698`, -1.870469213423205}, {
              1.0149617244280291`, -2.0267089722218365`}, {
              1.0203067135143478`, -2.3120939027626064`}, {
              1.0206407753322426`, -2.3288800119911905`}, {
              1.0209748371501375`, -2.3455544322264728`}, {
              1.0216429607859274`, -2.3785755143147522`}, {
              1.022979208057507, -2.4433559112902707`}, {
              1.0256517026006664`, -2.568235747823594}, {
              1.0298713237078427`, -2.7542291857055745`}}], 
             LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAA0DMX9jl98D9KmlK9kUUGwOQxom5y
gPA/MPu1tBSJBsDuHDN67oHwPwhNs3fwpwbAAvNUkeaE8D+dEAGMLOUGwCyf
mL/WivA/PFO4wMddB8B+9x8ct5bwPwYykHcGSAjAI6gu1Xeu8D/wJssv9wMK
wG0JTEf53fA/1Kf3rZ4tDcBITrfoW9/wP9tOjbvuQw3AIpMiir7g8D8/9bQf
LloNwNYc+cyD4/A/5VCAiHuGDcA+MKZSDunwP7oYMQZV3g3AEFcAXiP08D/y
vFdKIosOwLOktHRNCvE/I3w7JQraD8D5Px2ioTbxP+C6zr55KRHAphbjgS04
8T+XljB7HzQRwFLtqGG5OfE/kHO4/b4+EcCqmjQh0TzxP+7uzoXrUxHAWvVL
oABD8T8LzAnu+30RwLqqep5fT/E/KXW1CgTREcB6FdiaHWjxPxcNiUf6chLA
Juydeqlp8T81eTjW7XwSwNLCY1o1a/E/Q789ctyGEsAqcO8ZTW7xP+2ZCfSq
mhLA2soGmXx08T9l9/MFDsISwDqANZfbgPE/mqeyVvMPE8DmVvt2Z4LxPw8K
CYKbGRPAki3BVvOD8T86RAE4PyMTwOraTBYLh/E/3YRzYHk2E8CaNWSVOo3x
PzTZs2e5XBPARgwqdcaO8T9s2vCsPmYTwPLi71RSkPE/K+E6tL9vE8BKkHsU
apPxP5N1ZiO1ghPA9mZB9PWU8T8ReleYKYwTwKI9B9SBlvE/CuB06ZmVE8BO
FM2zDZjxP8eUHh0GnxPA+uqSk5mZ8T+m+aQ5bqgTwPjLJcM=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$27125#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1: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
              "]], 
             LineBox[CompressedData["
1:eJwBEQLu/SFib1JlAgAAACAAAAACAAAAPurmIRoj8D/A5ZyNxPbSP7x5J0CZ
JPA/AjNE7jG70z9Hl7zgYyfwP/c6TFI+JdU/BurFKsIo8D8qdWUBoNTVP8Q8
z3QgKvA/x5olOqGC1j9A4uEI3SzwP4UkGnmC2tc/Oi0HMVYy8D96g/AR53na
PyzDUYFIPfA/5YO8l9F53z/qFVvLpj7wP9Wr108bCuA/qGhkFQVA8D/egZ8F
tlbgPyUOd6nBQvA/Ova/JS3u4D8eWZzROkjwP0MD8hFiFuI/EO/mIS1T8D/o
W9WV2E3kP85B8GuLVPA/C/u3GJqS5D+MlPm16VXwP+lsUX7m1uQ/CToMSqZY
8D/cyYubJ17lPwKFMXIfXvA/TbLyxn5n5j/A1zq8fV/wP0j/PUjLqOY/fipE
Btxg8D+CsbcUsenmP/vPVpqYY/A/afcfGk9q5z/0GnzCEWnwP8kk0MYAZ+g/
sm2FDHBq8D+6h+3PQ6XoP3DAjlbOa/A/s0DyYCzj6D/tZaHqim7wP/1mqqHz
Xek/rLiqNOlv8D9LhkYC1ZrpP2oLtH5HcfA/xbbqTGHX6T/msMYSBHTwPyIT
ubN/T+o/pAPQXGJ18D+3r5JIFIvqP2NW2abAdvA//lchuVjG6j8iqeLwHnjw
P3dPZTFOAes/4PvrOn158D8RqRnX9TvrP5CdZlpaevA/yd8fCNVg6z+7cQeH

              "]], 
             LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAACDQX9jl98D/mqLx80ADwP9lGEWP2
fvA/Pj6tclYn8T/kMaJucoDwP5Tbb2Eb7fE/7hwzeu6B8D8G2kGGhZnyP/gH
xIVqg/A/bM1FfF418z8C81SR5oTwP0NoVUxGxfM/DN7lnGKG8D+JqmeVB0z0
PxfJdqjeh/A/9IYOHHnL9D8sn5i/1orwP677Bqo7ufU/Noopy1KM8D/jhS/D
NSn2P0B1utbOjfA/yK6lDmKV9j9VS9ztxpDwPxxeAEsFZPc/fvcfHLeW8D/F
xo6ptuL4P4jisCczmPA/3R2BnD49+T+SzUEzr5nwP1zoGl0Hlvk/p6NjSqec
8D+maU891EL6P9BPp3iXovA/JW8wgP2L+z8jqC7Vd67wP8g84BYu6/0/LpO/
4POv8D+SbAcrMTP+Pzh+UOxvsfA/G9Ypz3R6/j9MVHIDaLTwP84vikHaBv8/
dgC2MVi68D94W4CO5gsAQMhYPY44xvA/PC5QAl0PAUBtCUxH+d3wPyp4VHd5
7AJASE636Fvf8D9W4Dqz5QYDQCKTIoq+4PA/RRxCPi8hA0DWHPnMg+PwPxTf
ZclcVQNAPjCmUg7p8D+D7NNTMrwDQBBXAF4j9PA/9IJmDD6EBECzpLR0TQrx
P4DAuq7dAAZA+T8doqE28T9o8mGTNr0IQKYW44EtOPE/SsRDsXDUCEBS7ahh
uTnxP4RBOXaY6whAqpo0IdE88T+EMC/DsRkJQFr1S6AAQ/E/WPhh1RB1CUC6
qnqeX0/xP6QpA2apKApAehXYmh1o8T9VRcmgYYQLQCbsnXqpafE/XZW8H6WZ
C0DSwmNaNWvxP1m2Q0PbrgtAKnDvGU1u8T93CXrwH9kLQNrKBpl8dPE/XFL1
FQ4tDEA6gDWX24DxP7tKGciV0gxA5lb7dmeC8T8hqvDPEOcMQJItwVbzg/E/
EsD9LoD7DEDq2kwWC4fxP33NolI8JA1AmjVklTqN8T/Yc7i9LHUNQEYMKnXG
jvE/OAw2D02JDUDy4u9UUpDxPzNrqm9inQ1ASpB7FGqT8T+6c7yzbMUNQPZm
QfT1lPE/2PbLwWHZDUCiPQfUgZbxP8uDuDNM7Q1AThTNsw2Y8T82HRAeLAEO
QPrqkpOZmfE/pZselQEVDkD9jpYm
              "]]}, 
            Annotation[#, "Charting`Private`Tag$27125#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 1]], 
             LineBox[CompressedData["
1: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
              "]], 
             LineBox[CompressedData["
1:eJwVkXlcDHgAxZMjlBKVq1nSIm0olESesG4do2MURa4OiqgYyaSLpFKkWkKX
pDIx7mmmqUbpomKqSelQdPr9KiqsdvaP93mf999736fl7Mk8KC8nJ2cj0/8+
fvm07yvPEoRP3lSe8egz6jaq7v/uTzBVPCE/ZqgNnwySPLw4BLPWeDTP6fiE
Xs1l7N4AgmsXhMkvFT9hSKEw2C2QwCF/565q81bI91tfaQ8iOMZ+46J7rwVK
jW03nEMIdim8+L1IvQXTXvukN4YSzOB+7F0a2Yy5PAWe/UUCSU6yZrpaM/Ru
xQklYQTTHbdwMpObYBS2sJQZTtCnYOFbbdKEtd4vJBWXCdhpFqmjHn6EzbYP
Pa+iCGLFoSp/mDdir9HR4XXRBHafs7/ifgPctH6PEcbI9nUbhCuqNsB/cLbm
01gCrZClz53763GhhbtgWRzBudO3E6571CO63GzZg3gCpsV8B8FXKe4m7996
9wbBsznlzYryUjyMGLDRTiQY7NLd6xpdB/7p4H23bhE4sUa05i6ow1uLu6eu
JxF075zwxH93LaQmxkFTUwi8vQfU7vyqQdu815GRqQTSyDFDM27X4MfPzrTQ
dAI+q6phM5FAO33xe99sgn02heKJOe+xOEbY1P9A1q+qKF3v8HsY+1t2e+YQ
cHwPfPaa/R7brb1Gu/AIipp1BsfEvoOP3BMD1gsCqw6n3cVx1eB0bTR995Lg
zfR1HqF7qhEmqdlsmUtw1YerX6BdjVuZw06b8wiEi1y5J3hVKGaZRhi/kvF1
sH25qq0SVesr4nlFBNEDZqzdvEp8WOyUqv+a4Mu9xOMxQZWgYwL4OmWy/3xE
vxg6lZiZU9g5vUrGpzsrL5P9FkcnbN803ECQranIPRRRgc3mT784fCSwnThS
kry9AnNj5oYJmggycsbuGaVUAYnmcFlgK4E8zq0YuVyONfppTOUOgqC2DPc1
iWWYbCfnqD1A8FnU9addZwk6/3EfCf5GMCFTfWHI0xIUNkluf/lOMJzLbvcO
LsFpt6zWrGEZv5DTo0O0S9By1t7VeIRgyqnBwG+HX+NRCu/kjokUGz60ZkmV
ixHRMVuDq0ihZyho2tReBJfFl55OmUThymbNMhUUQfPZvh81KhTiZO0SnmcR
gkqVOc7qFEZWUcpXal/Bts/lku8cin6zDW/7hWLor3inJ9WiGGp8/K8gUYyJ
fqhYrU3xZoe6Tu9ZMYRjNVTl51MUta6yPG4qhs6Mgtjwvyh+MTzs6vMKMQxG
0h0jihS7qI7mmgKkabQGLDKm2MTNvj74rADMnvR9z1dSlJ5hxrsnFCAjYblW
5WqK4MH8ssOOBbD/tu223HqKLkYfN7AzHy8y2IlOFhQVetarf6vm41DAWv8u
S4pu9tEjZkMiTGGNc/RlUhiMX/KztFEEt7HRjEgbimy/c+EPM0WYuffeDYED
xcX7DPO0bSKw1WsTGC4UNz0P6q67lof53TfZ91wp6vsYqn7n8lCVv9/e0J1C
mmK9q8c1D7rHvs7Y4UHxd7Gb0At5kJaMi/c7ScGvHL21rU4IE47h9XoOxfFq
fcP1SQK02/70OXye4nxgg0qPnwDRi0S2/YEUOpZbMnvtBOiUbtdQDKW4X7rC
ekBZgATDA9dMLlOYaMSJvnBysVFJ1/tVhCyz5jUvccxFX8tXa2YUxRGdWani
VbnYGnVGzS2GotpA2FM7yMf3Q2YD365SePSouFhL+EgyVXgXEEvRWVZzfOZj
PszVyh9NiqPQemOlqnuVjx+d0THx8RRKK2dZnT/Bx3+yd8Z1
              "]], 
             LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAYhhfYhgk8D9V/mw/TnnTP8Q8z3Qg
KvA/wpolOqGC1j9A4uEI3SzwP4AkGnmC2tc/Oi0HMVYy8D90g/AR53naPyzD
UYFIPfA/4IO8l9F53z/qFVvLpj7wP9Cr108bCuA/qGhkFQVA8D/ZgZ8Ftlbg
PyUOd6nBQvA/NPa/JS3u4D8eWZzROkjwP0AD8hFiFuI/EO/mIS1T8D/lW9WV
2E3kP85B8GuLVPA/CPu3GJqS5D+MlPm16VXwP+VsUX7m1uQ/CToMSqZY8D/X
yYubJ17lPwKFMXIfXvA/SLLyxn5n5j/A1zq8fV/wP0P/PUjLqOY/fipEBtxg
8D98sbcUsenmP/vPVpqYY/A/ZPcfGk9q5z/0GnzCEWnwP8Uk0MYAZ+g/sm2F
DHBq8D+4h+3PQ6XoP3DAjlbOa/A/rUDyYCzj6D/tZaHqim7wP/lmqqHzXek/
rLiqNOlv8D9GhkYC1ZrpP2oLtH5HcfA/vbbqTGHX6T/msMYSBHTwPx0TubN/
T+o/pAPQXGJ18D+0r5JIFIvqP2NW2abAdvA/+FchuVjG6j8iqeLwHnjwP3JP
ZTFOAes/4PvrOn158D8NqRnX9TvrP5CdZlpaevA/wt8fCNVg6z/qB+5M
              "]]}, 
            Annotation[#, 
             "Charting`Private`Tag$27125#3"]& ], {}}, {{}, {}, {}, {}, {}}}, \
{}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
         GridLines -> {{{1, 
             Directive[
              GrayLevel[0], 
              Thickness[Tiny]]}}, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, 
         ImagePadding -> {{2, 10}, {20, 1}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{"", ""}, {"", ""}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         FrameTicksStyle -> {{
            Directive[FontOpacity -> 0, FontSize -> 0], Null}, {
            Directive[FontSize -> 14], Null}}, GridLines -> {{{1, 
             Directive[
              GrayLevel[0], 
              Thickness[Tiny]]}}, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{2, 10}, {20, 1}}, 
         ImageSize -> {Automatic, 220}, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {All, {-5.5, 4.5}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}]}}, AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"],StyleBox[
   "\"imaginary part of pole / \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(b, \
R\\)]\\)\"", 16, FontFamily -> "Arial", StripOnInput -> False],StyleBox[
   "\"ratio to singularity threshold, \
\[Chi]/\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \\(thr\\)]\\)\"", 16, FontFamily -> 
    "Arial", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#2, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8424901577693768`*^9, {3.84249018992253*^9, 3.842490199588539*^9}, {
   3.8424904238469257`*^9, 3.842490516520466*^9}, 3.84249056546452*^9, 
   3.842490608264782*^9, {3.8424906489095163`*^9, 3.842490671529964*^9}, {
   3.842490715721293*^9, 3.842490719794229*^9}, 3.842490753252863*^9, 
   3.84249079420639*^9, 3.842491003005501*^9, {3.842491076225737*^9, 
   3.8424911048566923`*^9}, {3.8424911579611597`*^9, 3.842491284210087*^9}, {
   3.842491367349519*^9, 3.842491404842762*^9}, {3.842491495518454*^9, 
   3.8424915195154743`*^9}, {3.842491577863305*^9, 3.842491606983316*^9}, 
   3.842491660010805*^9, {3.8424917059225492`*^9, 3.84249173788981*^9}, {
   3.842491843810493*^9, 3.842491867147545*^9}, {3.842492047362957*^9, 
   3.842492064267449*^9}, 3.842492100830632*^9, {3.842492186719208*^9, 
   3.8424922159657593`*^9}, 3.842492273029933*^9, 3.842492557667384*^9, 
   3.8425738553201323`*^9, {3.842573971629937*^9, 3.842573998034491*^9}, {
   3.8429959644313107`*^9, 3.842995965125729*^9}, {3.8429960169128923`*^9, 
   3.842996038762844*^9}, 3.8436036281454372`*^9, 3.84360373523977*^9, {
   3.843603776745226*^9, 3.843603793878989*^9}, {3.843603834566696*^9, 
   3.84360384627312*^9}, {3.843603946728408*^9, 3.843603964025943*^9}, 
   3.8438853013646*^9, {3.8438853344391947`*^9, 3.8438853615696507`*^9}, 
   3.843885403498549*^9, 3.843885455335291*^9, 3.843885511573985*^9, 
   3.84388556079984*^9, 3.843885738207272*^9, {3.843885771165504*^9, 
   3.8438858346255817`*^9}, {3.8438858876529427`*^9, 3.8438859203645372`*^9}, 
   3.843886014396532*^9, {3.8438867334374743`*^9, 3.843886734861044*^9}, 
   3.8444772926362123`*^9, {3.844477334040083*^9, 3.844477349423484*^9}, {
   3.84447741075172*^9, 3.844477469346734*^9}, 3.847930389924603*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"af88a90d-f5c2-478f-90e7-5170a6083933"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"denom00", "[", 
    RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", 
     RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}], "-", 
    RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
    FractionBox[
     SuperscriptBox["\[Omega]s", "2"], 
     RowBox[{
      RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}], "-", 
      RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
    FractionBox[
     SuperscriptBox["\[Chi]", "2"], 
     RowBox[{
      RowBox[{"\[Gamma]cFn", "[", 
       RowBox[{"Tlc", ",", "symSRM"}], "]"}], "-", 
      RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "24"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"setConfigParamsLi2020", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "stabilityPlane", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colorFn", "[", "ratio_", "]"}], ":=", 
   RowBox[{
    RowBox[{"ColorData", "[", "\"\<ThermometerColors\>\"", "]"}], "[", 
    RowBox[{
     RowBox[{"(", 
      FractionBox["ratio", "maxRatio"], ")"}], "^", "6"}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"keep", " ", "inside", " ", 
    RowBox[{"(", 
     RowBox[{"0", ",", "1"}], ")"}], " ", "to", " ", "avoid", " ", 
    "wrapping"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stabilityPlane", "[", 
    RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", 
     RowBox[{"hideY_:", "False"}], ",", 
     RowBox[{"additionalEpilog_:", "None"}]}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"stabSol", "=", 
      RowBox[{"NSolve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"denom00", "[", 
          RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "False"}], "]"}], 
         "\[Equal]", "0"}], ",", "\[CapitalOmega]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Chi]Thr", "=", 
      RowBox[{"singularityThr", "[", 
       RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "False"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Re", "[", 
                RowBox[{"\[CapitalOmega]", "/.", 
                 RowBox[{"stabSol", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"\[Chi]", "\[Rule]", 
                 RowBox[{"ratio", " ", "\[Chi]Thr"}]}], "}"}]}], ")"}], "/", 
             "\[Gamma]R"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Im", "[", 
                RowBox[{"\[CapitalOmega]", "/.", 
                 RowBox[{"stabSol", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"\[Chi]", "\[Rule]", 
                 RowBox[{"ratio", " ", "\[Chi]Thr"}]}], "}"}]}], ")"}], "/", 
             "\[Gamma]R"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "stabSol", "]"}]}], "}"}]}], "]"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"ratio", ",", "0", ",", "maxRatio"}], "}"}], ",", 
       RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "350"}], "}"}]}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"hideY", ",", "1", ",", "35"}], "]"}], ",", "10"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"30", ",", "10"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "11"}], ",", "11"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Thickness", "[", "0.02", "]"}]}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "ratio"}], "}"}], ",", 
          RowBox[{"colorFn", "[", "ratio", "]"}]}], "]"}]}], ",", 
       RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"hideY", ",", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
                RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ",", 
              RowBox[{"Directive", "[", "Black", "]"}]}], "]"}], ","}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", "Black", "]"}], ","}], "}"}]}], "}"}]}],
        ",", 
       RowBox[{"PlotPoints", "\[Rule]", "60"}], ",", 
       RowBox[{"MaxRecursion", "\[Rule]", "10"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"Epilog", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "[", "0.01", "]"}], ",", "Black", ",", 
          RowBox[{"Point", "[", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Re", "[", 
                   RowBox[{"\[CapitalOmega]", "/.", 
                    RowBox[{"stabSol", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
                  RowBox[{"{", 
                   RowBox[{"\[Chi]", "\[Rule]", 
                    RowBox[{"1", " ", "\[Chi]Thr"}]}], "}"}]}], ")"}], "/", 
                "\[Gamma]R"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Im", "[", 
                   RowBox[{"\[CapitalOmega]", "/.", 
                    RowBox[{"stabSol", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
                  RowBox[{"{", 
                   RowBox[{"\[Chi]", "\[Rule]", 
                    RowBox[{"1", " ", "\[Chi]Thr"}]}], "}"}]}], ")"}], "/", 
                "\[Gamma]R"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "stabSol", "]"}]}], "}"}]}], "]"}], 
           "]"}], ",", "\[IndentingNewLine]", "White", ",", " ", 
          RowBox[{"Point", "[", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Re", "[", 
                   RowBox[{"\[CapitalOmega]", "/.", 
                    RowBox[{"stabSol", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
                  RowBox[{"{", 
                   RowBox[{"\[Chi]", "\[Rule]", "0"}], "}"}]}], ")"}], "/", 
                "\[Gamma]R"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Im", "[", 
                   RowBox[{"\[CapitalOmega]", "/.", 
                    RowBox[{"stabSol", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
                  RowBox[{"{", 
                   RowBox[{"\[Chi]", "\[Rule]", "0"}], "}"}]}], ")"}], "/", 
                "\[Gamma]R"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "stabSol", "]"}]}], "}"}]}], "]"}], 
           "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Not", "[", 
             RowBox[{"additionalEpilog", "===", "None"}], "]"}], ",", 
            "additionalEpilog", ","}], "]"}]}], "}"}]}]}], "]"}]}], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxRatio", " ", "=", " ", "1.1"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"colorBarPower", " ", "=", " ", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          FractionBox["1", "maxRatio"], ")"}], "^", "n"}], "==", "0.5"}], ",",
        "n"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "so", " ", "that", " ", "threshold", " ", "is", " ", "at", " ", "the", 
     " ", "middle", " ", "of", " ", "the", " ", "colorbar"}], "*)"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colourBar", "=", 
   RowBox[{"DensityPlot", "[", 
    RowBox[{"y", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "maxRatio"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "20"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "350"}], "}"}]}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "All"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"30", ",", "10"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "-", 
             RowBox[{"(", 
              RowBox[{"maxRatio", "-", "1"}], ")"}]}], ",", "1", ",", 
            "maxRatio"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", "24"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "colorFn"}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"stabilityPlane", "[", 
       RowBox[{"0", ",", "0", ",", "0", ",", "False"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"stabilityPlane", "[", 
       RowBox[{"Tla0", ",", " ", "Tlb0", ",", " ", "Tlc0", ",", "True"}], 
       "]"}], ",", "\[IndentingNewLine]", "colourBar"}], "}"}], "}"}], ",", 
   RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<nIS_stability_plane_unlabelled.pdf\>\""}], ",", "%"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.847930374874229*^9, 3.8479307396174297`*^9}, {
   3.847930780929421*^9, 3.847930797896391*^9}, {3.8479308723771677`*^9, 
   3.847930939225677*^9}, 3.847930974119968*^9, {3.847931098135556*^9, 
   3.847931145578796*^9}, {3.847931199280263*^9, 3.8479312118457003`*^9}, {
   3.847931247901841*^9, 3.847931323169299*^9}, {3.847931405074628*^9, 
   3.847931443292101*^9}, {3.847931538123152*^9, 3.8479315769696302`*^9}, {
   3.8479316125631323`*^9, 3.847931689254765*^9}, {3.847931759420836*^9, 
   3.847931842542253*^9}, {3.8479928269732037`*^9, 3.847992913367662*^9}, {
   3.847992955023525*^9, 3.847992992787787*^9}, {3.847993029830791*^9, 
   3.847993146081934*^9}, {3.8479932025865517`*^9, 3.847993347677226*^9}, {
   3.847993411117497*^9, 3.847993430226684*^9}, 3.847993461375655*^9, {
   3.847993519124926*^9, 3.847993612464405*^9}, {3.847993642931487*^9, 
   3.847993767390232*^9}, {3.8479937976651278`*^9, 3.8479938174022503`*^9}, {
   3.847993854512912*^9, 3.847993867563959*^9}, {3.847993920216468*^9, 
   3.847994005460935*^9}, {3.847994115437811*^9, 3.8479941181922607`*^9}, {
   3.8479941806860523`*^9, 3.847994198783444*^9}, {3.847994398164238*^9, 
   3.847994458607256*^9}, {3.847994569084525*^9, 3.847994612545302*^9}, 
   3.8479946759069777`*^9, {3.8479947213659163`*^9, 3.847994733121272*^9}, {
   3.847994776655514*^9, 3.847994781423777*^9}, 3.847994835329232*^9, {
   3.847994875771535*^9, 3.847994951633368*^9}, {3.847994989516539*^9, 
   3.8479950201270123`*^9}, {3.84799509935739*^9, 3.847995135962624*^9}, {
   3.84799522424413*^9, 3.847995224835964*^9}, {3.847995286809065*^9, 
   3.8479954626373463`*^9}, {3.8479954991156387`*^9, 
   3.8479956546691027`*^9}, {3.8479956938876657`*^9, 3.847995781119594*^9}, {
   3.8479961329596777`*^9, 3.847996156651623*^9}, {3.847996187398817*^9, 
   3.847996227906331*^9}, {3.847996263667407*^9, 3.847996341475912*^9}, {
   3.84799647447398*^9, 3.8479965121862164`*^9}, {3.847996550018777*^9, 
   3.8479968994782877`*^9}, {3.847996947065564*^9, 3.847997064769266*^9}, {
   3.8479971616263227`*^9, 3.847997201511827*^9}, {3.8479972321022177`*^9, 
   3.847997405649331*^9}, 3.8480066295167923`*^9, {3.8480074783093367`*^9, 
   3.848007481166889*^9}, {3.848007512665165*^9, 3.848007545309402*^9}, {
   3.8480075783225927`*^9, 3.8480076153472843`*^9}, {3.848007668235729*^9, 
   3.848007703620397*^9}, {3.8480122288513727`*^9, 3.848012283735894*^9}, {
   3.848012316911435*^9, 3.848012366836357*^9}, {3.8480124000730257`*^9, 
   3.848012446550956*^9}, {3.8480142432698107`*^9, 3.8480142556016693`*^9}, {
   3.848014443244166*^9, 3.848014458693581*^9}, {3.848014534863324*^9, 
   3.8480146128052197`*^9}, {3.848014729779537*^9, 3.848014730027671*^9}, {
   3.850948590639906*^9, 3.850948600028981*^9}, {3.850948652505641*^9, 
   3.850948791254982*^9}, {3.8509488320761538`*^9, 3.850948857748596*^9}, {
   3.850948892135488*^9, 3.850949024737789*^9}, {3.8509490768405533`*^9, 
   3.850949105111813*^9}, {3.850949274845211*^9, 3.850949289581017*^9}, {
   3.8509494552030888`*^9, 3.8509495369479523`*^9}, 3.8509495773870687`*^9, {
   3.850949614531212*^9, 3.850949615147633*^9}, {3.850949853472108*^9, 
   3.850949861813493*^9}, {3.850949895125607*^9, 3.8509498963572273`*^9}, {
   3.850949942528661*^9, 3.850949958527059*^9}, {3.850950000953433*^9, 
   3.850950070144031*^9}, 3.850950105987041*^9, {3.850950139462798*^9, 
   3.850950148827582*^9}, {3.850950185052065*^9, 3.8509502670877523`*^9}, {
   3.850950305357107*^9, 3.8509503441243887`*^9}, {3.850950376118161*^9, 
   3.8509504876654043`*^9}, {3.850950628843101*^9, 3.850950723769485*^9}, {
   3.850950799056521*^9, 3.8509508357167587`*^9}, {3.8509509119697857`*^9, 
   3.850951083090852*^9}, {3.8509511353625317`*^9, 3.850951159011031*^9}, {
   3.850951269892387*^9, 3.8509512982289057`*^9}, {3.850951341033533*^9, 
   3.8509513509965143`*^9}, {3.850951381865343*^9, 3.850951424570146*^9}},
 CellLabel->
  "In[1034]:=",ExpressionUUID->"14098373-6585-46eb-a38a-7d66b980b77d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxllns4lHkbxweRCIPZrHMSW7uiJDHSzKocqlWU00snoqhQkpRWtW2kSFKv
JKyKWpNTrPOailTS1SBh5XxKpTUSXtS+7/v83PdcM/OP63N9f4f7O/M8ro+O
Z4CjtziNRtskRqP97+9Y4fzLCRO6bNr/Px0Vkzzvi1XjyEEqLtUSn5G/DI7I
5gwjV/9RaPf8HfLEa+s3Md3IJr62ttotyFLHlb0na5H3+rjVaXCRMzqOWe3L
RbadbbAnOgV5+aatA3OikdstNC/ohyLnZ+QXXtuF3FbA1efaIac5RLnXLRHg
srf+a+nIYV7LnR/xFwAvrsjYm/gSuUzu3on0LOS7ri5t0RHIYrH+ZdXbkb2T
1b2jTZG9VvHuHJdG3tNktkn1Lx3gH30rSzZzkDW0r4oPHkEOS39vetoKuXdp
r1StFHI3926S1tP5wB5WE6plF5BzP7598sUGeYebo3jqLOSGncW/tPysDTxC
e7WL2akFbHJqXfdDa+RiVjmv6KomsHakaVfxWw3gdJf0Y4dXInuNrJBN3qcO
bGdT716QpgacxJFsXF2mCtx2ISqnuOZbYKvbMll6b1SQJ68NjTyZBxxh4vdm
S/43wLGDTudKYhnAVdm6qzeYKwPvtFqdPd6sCGxkGTf7vDEdONSRZx6bNxdY
/cMGk+pMaeDVkt3S3VYS+Ht4qEc/VRxnzTCNfEaOFj36LWwKeEGk5OP6Rinu
DDvElgQ0Oc8F1uK0L8y/QQeWTrg0zEpSAk42jNXZG8jgak+J13sJvL+HkzoK
DyvTgC1HHx1t0e0SmWdlusWzxwsl4LyFl532HDqvzG3um9vhb8IXWb85xPMS
/T0N1msGiZlafKMMHG+fzjEf+wTrwxTCZmt8xdxxql1hnsNXyCfV3KpVm7HP
eqNbRp6MD5A/iPCrulKF+/X/rWfK0Z2APNGpcFrGjAF50pMEuhN/GvL+mGif
yhIlbowFp43/jCfSZ1XqMbWEO3j+YEqm6eSyMciXHohSSlfH8ztrTuky1/Ih
d8+LCt6wFXOFnuy8m0y8/+SKAq3ITCVuXMyB4G2XW0Xun2PrbC+TiPeHzVuf
XaP9GXKDlZOl3nJ4/lhfiJjj9b8hLzI4Um5kjfl83lBW3+M+yO/3/Mnc7on5
wcLsoJBWfP5SE5rO9t7E77+g5VFKRRzOs9gnccWdmFGcN++NvJUUnmdOf8jc
bvcR8s77f4VrsRhcvdvBFsH2XJG+AWYrR53ccf+xvC1nwvwGIZeRyLbd7Yv5
T1sNzR9xcN7sbQs1lFNx3sbG/2xVvYjzdtfwrlSvwXnVl6U5Z4vjeWVWw0X1
5kOQG0+emX3FgsE9EGQ4zr9XIzJvQvyLqZcuuN/tdmip79MByD+wTkV2emP+
1JS9fqC+G3K6xrXjffsxL74Y48SNxz6uyu3Ji5Oxj45KFH9dNPYpLXDTKNLE
PhlK/Ae9NDyv0qktZsnv+L7EO9QxXppjzjeS2yDvjOwbO+2R09QP61ULXUa0
dzO4ddoe1w91ZIn0bz1aHaS3D/fbmp8M6T/ZC/nzL0t2Zvhj7ux6MjI/Evst
92a+MLmB/exU5xh7XMB+n4L9aREy2K/kVOBbmkC/pu+Smao7sV9CRF30B4H3
Xb24ssfACTnR2Tr92Vbsd7E5VJ3lxeCOLzo3PVBaKNIvvvhW11o/3C8f8snr
dHkP5GfPrOc/PoC5xNDUtZU3uiD3e762KiJA4Pd3aJLknMb+uTd9dpUI/L8u
5o7+1H8e+4daevR207C/Xemt0BiB/5d8pdynQUzs/ypwwDpMoL/b1DrDMoH/
Pz+vDdC0VMD+2+aZcV4IvP++DpVXGwTer3jZA7wBe+xrkCZb5CzQty62brP0
UCfkav11l1UE+jaWy89WtMHnvb3xl09jAaL7hZ8v4pvcGSa+CUx8E5j4JjDx
TWDim8DEN4GJbwIT3wQmvglMfBOY+CYw8U1g4pvAxDeBiW8iU74JTHwTmPgm
MPFNYOKbwMQ3gYlvAhPfBCa+CUx8E5j4Js5H+SYw8U1g4pvAxDeBiW8CE98E
Jr4JTHwTmPgmMPFNYOKbwMQ3sT/lm8DEN4GJbwIT3wQmvolM+SYw8U1g4pvA
xDeBiW8CE98EJr4JTHwTmPgm/h6Ub1bMMI18+oYDI9ZMDLBmeA1d9kLGvWlg
yjdnsWd4tWuF3V6LOcCKS3W7w83kgCnfpLOJb8L9xDeBiW+KzOO/MSQ+2u4z
3G+jn/miZ54Cm/imyPqUocoFOk3DsJ7ZJ77/yPfyMI8D81peX2s95BNa4/Jm
XxQgvz1eoW2QNgT52Iq8mOV52Cfn17bTQx6FcN9phVdRP5zH/RsNN+x3temC
/ZRv0iE3u7RM5/eed5DXaqrXRgbLsYlvivQJYY+aLHXA8++EZ7W8r26F/ZRv
4vkyO+Q1eDoPIad8E3OtJzu8bYIHIRfb52dJd5FjE98UuV8plpPEMMH7R9wW
lRuGN8F+yjfx/L/bpgzZfjchp3wTc+62BWnGh+qEfBPzLv8d/UNFb2E/a1mu
XI0Nfv9+BRGscD2B3yvBtzGV2QjrKd/E86bHyzPMGq4K+SadTXxTpC/lm7hf
zTR3SM75sZBvYp54x+PQWTecd0eprZk+G+e9d2/0rrEWzhtjZOOipfAK1lO+
ieexGt4FVnpyhHyTzia+KTIv5Zu4P9lPVcmt5bmQb2LuHxe+z8i1Scg3MQ/S
1sw8uRj75Or/abllFfaxMmT0nlfDPh8afQ52HGmA9ZRv4nl9DnLnLmflCfkm
5pRvIhu0z7JOsX8p5Jt0NvEBkf6Ub+L+gOiv9GVfGoR8E/PMHJqiryL283l2
OMmXif3ijJV2F32L/Xivi8U0vsd+lG/ieT8+kP/B9Gu+kG9iTvkmcq1j0H0/
Zx6sp3yTzia+KdKP8k3c362oYjZ5plHINzEf15V6HlvVIuSbmMfdzJF1lcT+
nja1Dw+bY/+gU++uv1DB/l2jgVcuSmD/uCN2IxpfMQ/eG5K3y+APId/E+yjf
RJYM0an6tRP7U76JOeWbyM0DetsMPV8L+Sbm7m3/2v5RtxVyyjcxdzrTNfzm
YLOQb9LZJ264//d5Smad2Oi7aNYYft8z5wk/b/8AIfLjWw==
       "], {{{}, {}, 
         TagBox[
          {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.02], Opacity[
           1], LineBox[{1, 61, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
             16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
            32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 
            48, 49, 50, 51, 52, 53, 62, 54, 66, 63, 87, 79, 113, 102, 143, 
            129},
            VertexColors->Automatic], 
           LineBox[{162, 147, 164, 117, 160, 145, 131, 93, 157, 141, 127, 115,
             104, 73, 154, 138, 124, 111, 100, 91, 83, 69, 152, 136, 122, 109,
             98, 89, 81, 75, 55, 149, 133, 119, 106, 95, 85, 77, 71, 67, 64, 
            56, 57, 58, 59, 150, 134, 120, 107, 96, 86, 78, 72, 68, 65, 151, 
            135, 121, 108, 97, 88, 80, 74, 70, 153, 137, 123, 110, 99, 90, 82,
             76, 155, 139, 125, 112, 101, 92, 84, 156, 140, 126, 114, 103, 94,
             158, 142, 128, 116, 105, 159, 144, 130, 118, 161, 146, 132, 163, 
            148, 165, 60},
            VertexColors->Automatic]},
          Annotation[#, "Charting`Private`Tag$83991#1"]& ], 
         TagBox[
          {RGBColor[0.880722, 0.611041, 0.142051], Thickness[0.02], Opacity[
           1], LineBox[{168, 228, 169, 170, 171, 172, 173, 174, 175, 176, 177,
             178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 
            191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 
            204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 
            217, 218, 219, 220, 229, 221, 233, 230, 254, 246, 280, 269, 310, 
            296},
            VertexColors->Automatic], LineBox[CompressedData["
1:eJwVzcdOglEQBtAfG7YoYIsdsBBFsMfeQVFc+QgmbvWNrQuNvcYeOS5OZu43
d+5N7B/tHYaCIDhgWzNPkS62mGWYCnJMMUgHjTzaW1PH6aOVOsr4MrtlRT9K
gmZq/j/kQ3nmmEXnEXqIUsWP/JV7rrnkhFPOOGfJvQy9xAjzK3/jgRuuWJZn
idNENX/yd564Y1U2RpIWagnxafbCun6Cftqop5xvsw11kgHaaaCSPNOk6CTC
JjMM0U2BOdLssMAuF94tAdj3J24=
            "],
            VertexColors->Automatic]},
          
          Annotation[#, 
           "Charting`Private`Tag$83991#2"]& ], {}}, {{}, {}, {}, {}}},
       VertexColors->CompressedData["
1:eJztl2k4VV3/x0mDRCpDREhK5jJUhvomKlLKEFFCUbekgRIlzSqKBiVSkUK5
ZcoQOY4655gODqHMDjnT3mm+E6pndz+vnxf/F/93Xu3r+lzrWmvvz/qt317f
eTsPOPtPEBMT2yQuJiZBPVmXckLl+QwMNakMzS+mofMBe3KinxAenc//5R+y
1v3LFx5u/JfrzP0Z/oczHRaM/eGSUQVT/vCg82ZJf/jm3lnntSj+uOrkjD88
IVTSRIHiv7UvTdem+KUDFhZ/OL/d8vBsild8jUhbTPFwWuubP3yW8NzCuRQ3
+9j01o7ih7ZP3n2H4mnyPyP1KN45q7PxPMUvL27YfJ/ipt8jRu0o3l0nri5R
QsMnhS9eGRT/Ebpp5DjFR/YktHVSPHr13fWFFP/r/Y1dXRQ/2XMh7kgpDbRU
4m4jxY/Y7es/KGDghnleCvmCBmaGuO4wxRU1MsychQwQPR4mT+g0LJ9xN9fM
X4i2uRtiGSKKDzvLcVg0WLAPcZIobkbz+F1BMjCnuvuaVSMNWsIw7wW7hcD6
qDMtHxg4bZUS7dJFw+ru5uwxim9JeZuv/JUB7b0DjuFDNFwJvWag/ZcQ2mqJ
RVE/GPi287P1xUkVMLScdvhBgBBeqotYgeJMzCwTWSloV4A+nLypNlAIzhGp
BO1pTOyzl2oI3lyBOl1GYfB+al9aTSRFSkzIjAbakNEVyN0eFGUaTK17b3hZ
kC4TopoHD7a2VqB/88u/x0KFWO5zrVQNTJzpedb6UJGOHftyDNIihJAK+ZZr
v42JPLbB4pPOdPgLdRe5nhPC5u78ZPEIJmJO9BETb9PRelvW0uaKEM1Sdj4m
aUzMrzfy2kjQcVNj49g/CdS6HI1khTdMuAWs8rnsUQmJPpI2L12Iod3qZ17O
ZEGDpDWbt1Wi+PpCa+0iIR4+4Qfs2sFC5nkvI5nwlxBhWolcnRCiW/nDvBIW
foxNLvE1f4VggXZd7QDl7RnTTmZuFdR0PlQbTWdg9aZ7++b/FmI9W510vluF
L9KKxyrUmBCqqnTqaIpw9p6Mu4JuNWZ6hQje2LNwewrPINFOhMf3HS/511Zj
+yHx7xH3qnDoo6KH92ER6sPnGcfH18A5RnOb8oYaOL38bRGfJUK6YvxD8QO1
MNV8nGKhWgfDEJOc5XwRSpVszrqcqsO0Qy6hv33q4SsVY9KxhECO0akE8hEb
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
        "]],
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      BaseStyle->(FontSize -> 24),
      DisplayFunction->Identity,
      Epilog->{
        PointSize[0.01], 
        GrayLevel[0], 
        PointBox[{{0., -1.0000000000000135`}, {0., 
         1.3475909423264729`*^-14}}], 
        GrayLevel[1], 
        PointBox[{{
         9.98749217771909, -0.5000000000000001}, {-9.98749217771909, \
-0.5000000000000001}}], Null},
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{{
         Directive[
          GrayLevel[0]], Null}, {
         Directive[
          GrayLevel[0]], Null}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{35, 10}, {30, 10}},
      ImageSize->{Automatic, 350},
      Method->{"ScalingFunctions" -> None},
      PlotRange->{{-11, 11}, {-2, 2}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
tvA8u3i/vNz00WR5q/fA73eH3vPC+BovJ8b6eL3F+znimluB1vG2li8mMzyc
b6P/eWPUi1xJwfNTh6dTCo55KgvPs9PjYd1JqwfLX5cuZJ1d/ZVXQ9+mrbzt
M0/+kvPdjeQg8FA35+C03wTvmoHhqakD5tCuVy8hp0uMj+v3BtKbxArFSHyc
t228P+OwiS6NXz20vPaj0g/eu0bXHTUTb3nPtoz8fVP6QXf1G3cPfB3ibQpb
Sdp9yhPKxNfEX3UU5ePz0SL3C9vGPhD4eH9RUX2X4Ttt4efRh7NRocJktNyD
+nX8Rt0XXqrBjVg1124epUfFv+r9ZnBm0bVs5t3fPJynIK9+/1CBvQQf5739
2X3oyeh8smA/9pbZX94wvVudzo8rfPJMoWGI97DqelT58le8wDvHg30Sm3mn
EiZUmmK+8g67rvbqOLoDbqVj89UjRfj4PHZ3hXPa/TUEPq6XC3h6VlX1HoV/
+GzVpytXe3nNDynt7v5dvNTvZyPIMztgu07o+5d5P3l4XqNc3X9b29LF+QI/
JGhOoWrmnCUJ9psE/B7+UEunkMb/14/VhfuSYi6Ml4/xBH5U+Nr7433rRWJ8
XG8yv/pxWMceIh/nKecQVN5FPhA+v4zDHp43iOPlrJcRSbKJn3lPjS+PBWn3
8hISJoJ8WjfBdHl9+fQT0zzcL33MVefVuJgkH/frVWzV/lF2jczH5ynLzcR/
SubS+UdLh/ZjvsO80hnVfLXsFt7PbT5RBbTXPKfzKYGwop+H+13HJ8N/3OOK
8HFe0fSVDVmlPyX5eJ7OgjjimdO7KfzXXZsqfPNMQeQzw1kylyZ5OF/1N/2M
5tzV4nycr3g3r+460QI/z8YMn9u7l+wPovH/5XFagcSf4aL1UqO8f/pTQ/BB
bClnHhTl/8tvUYYOjOcJtopE/r9+kzpwed6u+S2Iyv/3+bGEe3eruLlemeL9
4+uYwqAdJnv+5Erwcb+S23W3l9c9yXy8v1d0uDvxmz+dv+lnPYteUsmbnnfN
ebPtAO/QefE+k3220N3Ck1r+TeT/MHXdcTl+77+ePUnIiEi0KKWk0umcNLVo
KtJQlJIks5CdLZWRkkJmoSKhI6JQSSIZkRFatPf6fV7f5z53vz97GT3PPc51
Xe/rPZCMsL970ndzvFMjIjM/hoMIPn7R9fkGizYBeuf5berzw+tx8Lvf2fPu
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
/BOiR65DaoZljtjrvJnCFhuCN3UZJbfn2fPs2YjgmR6X2e8qqvn09b8/58By
tW//r585pLXx/ryePMn+fAGe3P/sIPPsEJTguea4sLtv+YyXbIJH5LqksxUv
mAkQkH/0W89tJfB9t27/yuouGL5BpeaX2AXs+rQqxJLLpPt1tMpm/4HJPFQo
b3h9c6ohGPcq0Y1pL6Lqoz4uXngu+HNlC5T4G5niie5T97tsl0bEH1Bh0C+q
qYeDKL4BPiingxbbCdGFf7sW3e3zAYNjpcsdhP1wqzjW61iZJd7l9DSsewML
ET+Vae/qGS/n8ql5ggekR3mcPmQpRnYfE6PeiEvh01gew6ainp7vz/X9Lfp4
XQpReUwAmO+zcfLlIOJf3ljlLeYWCSg8CWHjiW/XGMj2wsSVo7kyTU7A4q5Z
le4TJiJ5yrs9dXJ7r/MIfgJOu3b9SC4WIU3NPNkzltZYfW7ishLbDkj8+W9n
/rZ0s2CgU4vnbPdPtASj9298ZnJ0eD6PbylYmlAqRJS+CWvfn/oJVQ3AX6/8
Xg1F6WGhpZwLUiLzMcJ/mr9dVHjER0SvaKkSY1rxRIzejhm9qkazBWbebsws
P/sWSvLOFoKlJWNm7gBSyHsLsuRMnAd80g6FZMlxENHzD24+zD4bJUCSvOG1
mB2+9WKqdA9UG/WHe0Z+Ee56p5I7ciUTEb/uNC1LTrwfj+6nP2V86uQfFaFz
75JEeezFoCaNWfb7SRt8LGc5bQfbA48c/2HJ3x/SSMJnNMA9fU+LB0xJPyvG
RvzONzrHhEiS97Mc9IzUeCrb3Q+J/swjutEqv4SFiB9p8IOfK1A4H0n49nrg
a/jCmB97xaiuZR87+2EKzF4U4h0d3wC1ox2+pnz3AV3RaZ4+Y6URyVe3W/v2
z4hb9DyMFdc1zfkrFCIjnYurQU0ofhsoO+XCmD6oHu09srPGChyac2BmmTwL
SfiDKvjWh6jDWc08RPEtcJrem29FfDHpx8HdpzyFyZc7oWR+dMVGrTtP511h
IKJ/mnxpe39+BReRPM8t4ddmHBohQhK/1MXgvvSgdGPOIIUH6uKcD6dP79nC
RoSvW3k2NSJAWoAIn+XUvR+slYNiJNE3+IJReY0Lsr2HYNaN7MmW7U74ztGn
vgl32TQ+lGk9s+eVjoA+jxN2WfbsjO2CxL9A/kBHYnQTAxG9mv2flcuvCnkU
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
5aA+Q4ruP4bQQ9k3bA6txzAt3P5qaIsAEf3mcTPPqLKn3fCwrkP4LiOEBYeV
0m4vZlL7ESOgc/3j8UkuPETyh2u35qpaR4oQwWu/eqr8O+nTBsm+TU7u3oJf
JdKoLiKjfPE5c7Dq8775VTpc2o/r9kz3J6KdQtTwyf79Ymln4G29t3xEQT98
IL3qTEUmxNutuybeuE/2caPw/Kp9+52C6P0CHvE0QGbnZjH6tnRn8VE1DOWD
Ai/Xr22AP/an2XJuO+Ortg1K9oNSlL/GFLxKJf1ndBKHno9CXbxmHxsQIDNe
SYPaGn+8MzfBQvNLLyR5YXttEq8o8FiI8AulI8JMd30n/J3/JuUAsy+G/SK0
XO5mRH9kCDC8dkU3d3knJHyXXePSZyTEMOh6ZjhYPthZwKX5gEN7ZUadkRKh
k9nPFZ9PX4837Zw+HR4cpPI4FPGHkE9dnSvZiOz/r6/pe57byifzkpF8x4w6
jZbh+XrfQSvkENeTJ/Fbd8Vn/GYFdXwcgpL90QI8Z2eV9IhqNsWHtwC1L5yn
7F8iQEj0+lnk0nCw9LCL7xidbmjXXDnvdZUT3hA7LuetIpPwq0H2h9LZp7V5
9LztvSP42gsvEeFD4W1p/yJq17XC4oyUWfmay/HFVgVFpbPSBL/Fh479Df0w
gkvPi71arf2JXkJUoKW+ckNfMC57+NPng30/7TfFK39XUnyURfw8QY/lIreJ
C/nEHxa8aD+QXeH23/lN5dP9YjVNlnspRe0vFuJNd2rvZW/h0HyaC1Md4bkq
ASJ+/Ae+Gx7S8+il/UOXJ3g4VH4i/acFeF1Uc/DKIx7RA4D9spNPq3wRUXi+
J6j7FBzamNEBl9a/Nh8d6AvSZYNKm3wYaNvnhwHAZg5YUzAj4n4Kl8anWjJi
4i58E6Ix6t/bvcOXY5Uy7XF8+UFI+Kob32d6Lp3Ppv1tXh2cqzfxzbB+rPTk
kTN/ysXoWGNKS/CZpeD0x4f2Rz2kKP6+PF7WvZ3rNouD1sucdmvk64PCwtrD
rmcFiFM9qz2qFOElPU+MGxb1QOMo5+lV+m7/nVSVK5UimfT7/1l6Vd3GLTx6
f7P5mGXcrSSCH2iAZm2u+Y157bC2f15x61sbbHlUunzCkDSFF7FxTPMqTrob
l97Xjf6BnZcn/9ePxBctu1rpjV0/t12UMRiAkvwzc6z4mrVb79fw+213/J/a
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
qw+lqjOOCXwn809MwKTeNTUDvgo4p1e2AIMFOjPxRwrpPAjnhVeXXO3PIfsp
T+zFme2iGNwI619cMcrd5oilVj5jppiU0P+efpTSJfH2I8k72oKr9/nIeUQS
5L5CC/y9Wxy1l7Mdxn5JPm/maAai97D/7tL6Dim/XVTcx7RKz0/k/bkBeBye
MvUsyYZRvdfP8M4ewE8M/RLv5VXDFjj0hVljCTx6BcAWxhdI6fHWFh5TtNXI
o+ovHNhI9J7/hqFZ7f2Q7/wlBBHOw2ZS2QNfGircNOvbAq6tX1SpH1JGPq/r
cfLWcHZ+5wJI+S/Tt4057bTLgVTeqc4Nzc5UvTrYpMOKzQ0ccM7DiRM1N7/C
OT+ICXC2fx++qy8PUv5jvec3JFiTsuCcfsscBGof1qhhtlJ55oDl25Cfn/Q3
0k9lhfMjrqgYheTT+rM0LumHw0bZ9L83NGkb58XsSkjlQ/gw6w8qvywivx8T
oL0u6H7S9Vx6P7vFK3FN53QmLF8o4vpzTT/xKvl3SllkOdTYdVah+7cldlhe
aimsU07lOePgB9uj9nYVULx/fPpdZLna0xz4zaMuyM/KD6y11iq4n19P8uV2
gSBHRd74A8Wk/04D6I6u3HPA/COkePHXWM02cMkRMM2WXS6C1wpfyLzbNJTQ
RvLOXMBDSQf2jS++QdIPAwYFOrV0RvMhpUfOXR98cE1oNjk/c8a/WQM11qdW
0c9nRAgKub3zM+1XGtCU9BT4mUs+P3q4dqBKsMgFw8r+/zjfZTwiXm/3drx+
7xfZ33jgoSIx76L675DSu7MdnZG3av9E/v8VQPjzoOaPIjmQ+V0rpfC/AHC5
bKq4qq8GknwH/Dil66tA0RdI8ZO7aovupIfnkb9/BPx+nj66WTsLxquqXX8I
jPCm9/xvd95qhvf9WXmJR07gjWzMKz1QSterR1JFtj9fkk/P62/VcGW/YGTD
uXw5G2zSdOPCq9YKyn8KuAXZFuzkLoKU/rN8xPSTGMqlP894/j+irjssxy6M
l0KlKIUoCimkIYnGcaKpodJOpakhokVEU6EkeyREMhLSUOm8u73e9p5aShqI
Uvm+6/I8x5/f1Sev5z3Pfe77/q12SL9bAHewpG/1sn3Q2AfZ368062G5U7+q
nKATmHtsZ6l+u4TIH5BENWHcEYsXMuCk/qe6fkMjpFldI3TuTwck8zEkCrgF
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
ocujB2NOBIEjVRy6cfYNxH1kjuhOpZojzqWYD72y1jpm1THyftwA3qpdXHuw
pgBaF55LnG2ZgHf4Up5t7GdDONW1JdbEAr0Az3rCRevJfEXgJvlGKvpsCdGf
aqILa/maPKbo8P0LuiWgeAOBubC20Ccd8HHcWGSasx3i0Yvdb2dXBd+sMEmc
9TZD3+4PKQfls0g/UHC/bXhgLplK5J37gz2SZdz7VfrJ+gUsFjPTQ3Vr4NSt
C32TV01B/mGZQT3/IsK/0BAN8Rwuf1dLI/NwgJ2R4ceghiZi/jAD13w2lfet
KCfrBRq4y77eBJkkfoRql38O129CsC5yRF1kqooqn7ECfS4ZhpLa2Yu4jnmC
VbWj2iev1xL1zArUvZOSk/EpJv1nwaGj2zp7DtOhgFz/KCXzGHr3rnuBlV0r
xqeclpWfbn5UQe6LwOeTrnpwiknit0g7gta0OYcCQ5R927doHUdsx7fL723s
gS99p1dyKTij1AzPyTIZNvzr97cfXOr+fFomvhD3cx0RjudnjGlw/TZ25Gz3
UTC0raplU3UDuU9CK/pYg8lZ//rBHr5dh9i3yP3fRuC+eU2YKTeCZUNW1xt2
T1CdX7TOXvGrI/lQYPSGuZ+ycR30VQozjm+HSE3J4kzDeDHx+aXAkq3PTo28
pEOxN8ZRuZ/cwef1F7Kvd7UReZg+4Kd8ztrAoEo8T1CuumfGWLEwvj1lf6zY
ZSsV7ni4/9ce4WCw//umoejyXjiiPl12s/Y4eGRd8XL9ezYk9aw+i4O2ecwX
Yrzwybo77Qev0iCZhyWS59poWNhI5DuaoVcP1g3fdSoj/Bd2I2mDbpb9Zwb2
+wwQWChy2AfBzcodX6QMM6g6Z79vdr8yQu5zkUdxnd+6gRqCL3EAFdck3l45
WoT5ke9Nr3PJidKhZ+koj97Oc+DH1+DQBu4WSPq/fe7KMrJqKMd43EzfuTyv
e0zM19n+eucNWR0KTDcV//bg/EXAO7BmgJrbRfCrtYBJI4W/x6ga/s2j0UBc
1kIy+zb84yc/i/tyKmEpjZif3ZFilNeZxWP1eH+YLxJ2R0eolPSvAF5PA3by
6zAg6XemegWk/HlYAEWUmgNzzX1AUgScVz5QD//mXZuCqHqqh8KjEpKvCQ7J
Vt/8wsuAf/2K/cD61O6rmyU6yecLtO90GcTfqiL3Lyg1OXQbXz0L179w/zm7
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
8y7ng0MG+mqX8kTX/g4VDTZERH5yEEp8OZy/5f4Qkc/oAoL/FV2Oy6mBWZMn
kpTK1cFoas0yhXKsh8mTbGtOjWSjw57nt2Ksu04Ba00mW9v7ZiLf0xKtaXXl
CEwugwbw8tFt8aboTbisjkEkk+TpoMtvWyQyxCgwQcryK1/FKXS/7z5iF+mC
v1+fb+rPsEaTWwvvTK6pIvQ5amCa+kBKl32Jn5a+cXg/1z8qFFP+sO7lQU+Q
mrj+YEl2PckrB34H2mlgsJjMN0WrlS+orpVmYH/zsRb92zHReTjfxlm5SW2z
ez25fwSNw48NR9KLMT/ZSp0/7wI3g+BNmiJbHa2k4xad5HwehH9P5aJlVGJe
Oxun7W39LpLnoIL8RR5Z1VdQofpJZ/Eq3TBwQIwmdCtyAPutDB44i5yLqMH5
P10rzn4ITSok81HQAfuwd16jNGj0SoASUhYJXjXO7b6t2EzwW1TQJ7nxoTCr
MvI8Bjb/9hS+dWBiHoxbW3Ph8QVE5nOBLTdlBcrravG+NOuFt5rEwyLsb/ri
9pPvSBgdJqoeVWVsDQI/s97fE+xuhds/KnFkXjBFQ+Df3ouj5bifQRcqNgfw
5sNDNhe3aogeRAEKHN5XuyiEv1geBLi/uNid1kPqi8HDC13HjltWY/6XLq/g
5bmsAlKfiexu2uxRcKOR3y/qc+f26t3ZiPNK/fj5Wz0mSvD//1pLvT/q41Ke
5kLOwTAXcXLebYl2f6a7gNt1uH56sf2q+bRIMearxX0vdhYuoEP1aEOJiEUP
8Fy1Nvnh6XbY1GdN904zRQ/Vs1cyC7G/H2wMO8rLGrbES8tO2zc9Y0qFV5S1
P4l+PYle8N77MxLbh/XxIyNNbxUGqkk/JtCKl3/dJlYIJwdlu5LDlIGeZn2x
zmtcfwHGsslfnTua4J/glO7be8zQw+ffap89LSX5JkiCyRXEu4qJn7/XYxFq
wTcRwT9UQyUJ3r7nt9diXh6/hvByEf4i0p+BBm+3bs3YTyf7EeAXeOAOCmuB
BfKb0xvWHEO6thdaSgTLsR5rjc3woEsOk/AnKqPoXbreXr4UmB7bbjW70wWc
T2q3zNbqJvXmwDzwS/7A6yo8n1M62X72quaSvqTCgsq1YxeN1PcgoeVxXyBo
IPylJmilcPjmVTolxPclBG5MoEWGEwP7Z9/SFT7wMfPgy8Ny1el1QSCPX3q8
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
VmjhedbSIAWTCPn+kUfk6//zx/1vP8j/AZlR+SU=
       "], {{{}, {}, 
         TagBox[
          {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.02], Opacity[
           1], LineBox[CompressedData["
1:eJwl1DdQFGEYBuBDRE7EjIoZzIooCIYGFNFCMYEVJhxnzKkwV2qlVpi1MaCV
oTE0NIbCxnGMgM4o2URQPJFU6PncUDx3x/e+/7+7w+4mb9pbsCcqEAjM8xH5
nunjle9iNpNHFj2Ipicx9CKWIL2Jow/x9KUf/RnAQAYxmASGMJRhJDKcEYxk
FKMZw1iSSGYc45nARCYxmSlMZRopTCeVGZFrocoJhpz0Vxfw0rWl8dr8NFtY
RjZpVOv+1v2m+0ovnTfmZ9jKcubTpPdPr1Xvo04WleZX2Ech6dTotep913ut
M4u35mfZxgoW0KwX1vuj90knmyrzq+xnDbOo1fuj16D3RieDd+bn2M5KcvgR
7P4ntelV6syn2ugaB1hLBnV6bfZr1Hurk0mZ+Xl2sIqF/NSLsl+7XpXOAmrM
r3OQdWRSr9duvya9dzqzKTe/wE7y6dCJs1dY55t8CQ3mtzhKLi06PXQ6dKrl
OdSal3CI9YR1BunEuilb5PmEzO9xgtl81ulwPs32KZPPocL8IrsooFOnT0z3
zf1dvpRGf97mGIv4pROt02mfGvlC6sxvcDhyv3sAkuRD7PFXVkTY/DEbAt0P
yGB5UP5LVsBv4/ucZA5fHKPTuf5wjHL5XN6bX2I3sfYYYY/+9uiQFdJlXspq
uqyPl0fJG2R5NJnf4Xjk2bN+knykPNoxNstjeCZbTMj6nvIuWa15LvXmNzlC
P+uT5UOt/yfbGHlZ8MRXUeSnPEHeWx4yX02r+QNOkShPkSfJg46xQx7Hc9lc
vjp+l+v/KauI6n4ffTDPsm6VdYutS5UVm5eavTB7anbL7K6XzyMvpIfWF3sB
ldjrsrWj9dL0Gs0m6v4HxGiZOQ==
            "],
            VertexColors->Automatic], LineBox[CompressedData["
1:eJwV0L0rxAEcx/GP49yD52KQk0wmo2IzyHQL3cQNl4y6W0yWK+P9B4wyYjLx
N5hllVJSSgZ+Fi/De3m/v31+D8sHvd3uUJIdVMaS+UryMJlMlJLZerIymjRG
kp6j81pyXU4uhpOBPsW1uR53yDW5G65rq8ov8NP8N7eHgr9DC0XVM/SS/qY1
8c5f4RTb+HRTdlPYfda38MJf4gQdlDxnzk3dzqfewhd/iwHW8Wqn8A0fdh71
DTzxZ+ihZqNhY8bGj7aPX/4eq9rm/zuMJ2v6oo2+voQjra8d822+43/9AXEG
KNA=
            "],
            VertexColors->Automatic], LineBox[CompressedData["
1:eJwl22OUXWcDBeCJzca2baexbdu2bdtubDW2bauK2wZtUAT9nrO+f7lnv8/e
c9ZKZ+aem6Zs2a1m11AhISHhY4SEpI8eEtI+bEhIqaghIXUihoREjBkSclhY
R/7J6+jhQkJuyMKECQl5GzkkJHSEkJDdzG/OfIkUEhIzfEjIqWghIeF0/Bwl
JOSdfI3eKvJR8rl8FfkkvoN8kDy7vFfokJB++ibwxfQN4xva6Wwzua/hlf0y
fH0+Fl+Fz8oX5985n5cvxFfhQ3ldkk/KZ+d/0T/P/jH+Jj+BP8ev5vfwneTb
+e/50/xA/iA/j1/PN7K/2X5avgD/p+tZ+Rh8Sv6W83H5JHx2/rH+NPx/8lj8
Sf397H/H7+I7yTfw4+QL+Crymfwcfi3fWN8Svr+diXxR+/H51nw/Pjvfma/E
N+Fj8bX5+nwnPjnfnC/MV+FD+N38j/yf/Fr+OX+Cv8WP56/w1/kn/Hz+Pr+L
P8MP4EepicOn539xPQn/n/Ox+FPOh+Wjep2cv6k/Dv9Wf2h+l/629mfyq/nG
8oV8f/lEvph8JD+Wn89X0TeV72BnEJ/Nfni+Nt+OT8E35ovwVfnQfGm+At+Y
j8nX4LPwxfg/5Gv4q/xjfj5/l/+eP80PkB/lT/C3+An8BX4Nv5fvaP+0+8/L
l+dD80X5ZHwO/onzafnMfDH+T3luPjqfgr+hf5z97fxJfqB8Hz+XX8c3lq/g
V/G7+U76NvHj+AV8Zfvp+d78OL4YP5hvyHfmU/Ct+fb8QD47352vxDfhYwZf
P/+aDyXfzX/kr/NP+Hn8D/zP/Dv5Wv4lf5K/zY/ny7n/d/4c3v4V1z85/7vz
X53f4fxj/f/oj+r1Mf2h+Ef63+j/Tn8Z+TD5TL6CfJz9NvJ+8szybvp66RvD
F9I3iK9rp73NxPaf2i/B1+aj8RX4jHxh/o3zOfl8fAX+i7wYn5DPzP+gf5b9
Q/xVfoz8FL+C38m3k2/mt/HH+b769vKz+NV8Pfur7afk8/CvXc/IR+GT8tec
j8Un4DPzP+pPwX+SR+OPBt/f7C/lt/Pt5Gv4UfI5fAX5VH4Gv5Kvr28B39vO
WL6g/W/45nwvPjPfni/HN+Cj8dX52nw7PjHfmM/PV+A/y3fwD/jX/Er+MX+E
v8aPll/gL/M/8bP52/x2/gTfx/4g9x+DT8X/4Hp8/pPz0fhjzv+nP6LXifmr
+mPyv+v/Kt+uv4V8Kr+Cry+fy/eWj5UXkg+1P5KfzVfQN5FvY6ef/Uz2Q/HV
+VZ8Er4+X4CvyH91/lu+DF+fj+p1FT4DX4h/pf87/iL/Iz+bv8lv44/zB9kj
7DV2DHuG/Y79nm1r+5h7z8mWZr+6XpBNxGZhf3I+JZ+eL8S/1p2djxx8j+Sv
2B5lezN/lO8r38XP5Ffx9eVL+OX8Dr6dvnX8KH4OX95+ar47P4ovxPfn6/Lt
+SR8c74135fPzHfmy/EN+Kj8cf5X/gu/g/+Tv8z/xM/i7/OP+Df8Sv4pf5S/
zo/mW7j/MHw8/o7rUfj3zofn9zv/Tn8or+Pw5/RH4p/q/0u+QX8d+Th+IV9D
Po3vIh8mzx38bLQ/iJ/Cl9Q3im9qp7v91PY/2K/AN+bj8jX4nHwp/i/nC/LF
+Bp8OK/L8in53Pwz/Yvsn+Lv8lP4S/x6/gDfTb6L38uf54fyR/lF/Ga+mf1d
9jPyRfiPrufkv+HT8vecT8in4HPzz/Vn4MM4F5c/q3+Q/TX8Pr6bfAs/iV/C
15DP5RfwG/nm+lbwg/mpfAn7ifn2/CA+N9+dr8a34OPy9fnGfDc+Nd+aL87X
4MPy+/nH/Ed+I/8bf4a/x0/mb/C3+Rf8Yv4Hfh9/gR/CT3L/Cfks/DPXU/Jh
+Lj8Oecj8TH51Pxd/Qn49/Lw/D79nezP5dfzzeVL+cHyqXxJ+Vh+Ir+Yr6Fv
Jt/FzjA+l/0ofH2+E5+Gb85/y9eM8P/fWcvzVfjmfBy+Dp+DL8l/kG/gb/LP
+cX8Q34vf54fIj/Jn+Hv8VP4K/wG/iDf1f4F91+Qr8yH50vwqfg8/AvnM/LZ
+ZL8R3l+Pjafhr+jf5L9XfxZfqj8EL+Q38Q3l6/m1/H7+W76tvGT+CV8dfuZ
+f78JL4kP5xvynfn0/Dt+c78UD4335uvxrfg4/Dn+T/5cPL9/L/8bf4Fv4j/
hX/K/yXfyL/iz/L3+cl8Qff/wp8/uX7R9bfOv3T+k/Nbnb+r/6P+SF4f1v9V
/339v+tfpr+QfLB8mq+/rHy0vKW8tzyDvLO+7vpG8vn19bdTy04bmwns37df
jK/BR+bL8un4Avzvzmfjc/Nl+X/lhfl4fAb+gf7p9vfzl/iR8uP8Un4b3zr4
+8Fv5o/wvfTt4qfz3/G17S+0n4zPyf/mejo+Ip+Iv+x8dD4un4F/qD8p/7c8
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
dD4lf1t/PP5PeVh+T/B82v5sfi3fVL6YHyifzH8b/H7Mj+cX8tX0Tec72RnC
57Afka/Ld+BT8U35Ynx1Pmzw/pKvxDflY/O1+Gz8t/w7+Tr+Ov+UX8jf53fz
Z/lB8uP8Kf4OP4m/xK/j9/Od7Z91//n5inzY4P0ln4LPxT9zPj2flf+Wfy/P
y8cMfk/ib+mfYH8nf5ofLD/Az+c38E2D9yf8Gn4v30XfFn4Cv4ivaj8j35ef
wH/LD+Ub8135VHxbviM/mM/J9+Sr8M342MHXz7/lw8j38n/zN/ln/AL+J/4x
/0G+nv+NP83f5SfyFdz/B3+OaP+a61+cf+18CP998Hmh/k/6o/Mn9Ifhf9T/
h3yV/nLyEfLZfCX5BPvt5APkWYOfj/r66BvHF9E3hK9vp6PNpPafmyrF1+Vj
8JX4zHxR/g/nc/MF+Er8f/Jv+cR8Vv4n/XPsH+Gv8+PkZ/iV/C6+Q/B8nN/B
n+T769vPz+HX8g3sr7Wfms/Hv3U9Mx+NT87fcP4bPhGflf9Zfyr+izwGfzz4
/mZ/Ob+T7yBfx4+Rz+MrBZ9P8LP41XxDfYv4vnbG84Xtx+Vb8n34rHxHvgLf
iI/B1+Tr8h34pHxTviBfif8q/55/xL/lV/NP+WP8DX6s/BJ/lf+Fnxt8nsPv
5E/x/ewPcf+x+DT8T8Fzbf6L8zH4E86H4iN7nZS/rj82/1p/CL9Tfyv70/mV
fEP5fL6vfDxfJHg+zo/m5/KV9E3m29kZwGexH4avybfhk/EN+UJ85QjBP0rw
c5kvxzfko/PV+Ex8Ef6NfBV/mf+Zn8vf5nfwJ/l+8sP8Mf4GP44/x6/id/Pt
g/fPZnLzZfmQ4PMlPgmfjf/F+dR8Rr4I/1aek48afJ/kr+kfY38rf5zvL9/D
z+bX8A2Dzyf47/jv+Q76NvBj+Hl8Rftp+Z78GL4IP5Cvz3fkkwXPV/i2fH8+
K9+Vr8A34qPzJ/nf+f/47/n3/FX+F34O/5D/kf+DX80/54/zN/mxfCu3HY5P
wN9zPRr/0fmI/EHnP+gP43U8/oL+KPxz/f/IN+mvJ5/AL+ZryWfw3eQj5HmD
n4/2h/DT+NL6xvDN7fS0n9b+X/Yr8U35+HwtPjdfhv/H+cL8t3wtPoLX5fnU
fF7+hf4l9s/w9/lp/BV+I3+I7yHfw+/nL/LD+eP8En4r3yJ4fm4/M1+M/9v1
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
            "],
            VertexColors->Automatic]},
          Annotation[#, "Charting`Private`Tag$84024#1"]& ], 
         TagBox[
          {RGBColor[0.880722, 0.611041, 0.142051], Thickness[0.02], Opacity[
           1], LineBox[CompressedData["
1:eJwNzzkvZXEcBuCfpVG4wTVyRyY3GRUaiUqm8Q1IdFofgMpo9PMFxr4z9nXM
2I2dGQpL5VYqKqWJkCCe4sk/533fc07+n5taGpqzIqKN7wUR2UURrYUR5bx4
vuWaSzropItueuilj34GGGSIYUYYZYwfjDPBJFNMM8Msc8yzwCJL/GSZX/xm
hVXWWGeDTbbY5g877LLHPgcccsQxJ/zlH6c8pCLyP5CMyHH3r+5dwavujgxX
PNsl7ZJ2eXbtNlXkcK+/IfdjRNombVNs8033hQSP+pS+Wl+tL9f3yeso40z/
3z8S+oQ+V98mr6TWe43yRnm9/EC2I8vIMrJz2UqpsyTiojjizbfS+hr90yen
zTsElkyJ
            "],
            VertexColors->Automatic], LineBox[CompressedData["
1:eJwV0T8orXEcx/HvLQYMjz/n4HEuT8JwKJQMugPKGUxK7iilFIuziUGKhYHB
KCmKTIZrMbEqZbDd4VIGDBaD1F14Gd6der8/355Ov/bZ8uTij4jYQF0horsp
4l9bRG99RKElYrARuYjDuoiDNOIij4aIM32Km+FWuBWuzD1yT7UR1Xwn38m3
8Nv8CHL4q382R6R6qif6Oj+IKrzpd/hvk7PJ2VTbrGr9qMCrnvhGUS/qmb7L
l5DiQa/UMz3T8/om/wsJPvRUH9AH9KK+z0+gAzf6u+8neqJX6st8Dz61zO2Q
NqT1aUf8bzxrNVqX1qUVtB1+hzvlTrkDbvT7W9wCt8DNcHfcLffCvXD3XJ7r
48a5cW6Y6/EuJe9S8i5/9DP9Wr/W97zhuTe8tDu2u7S7stv+GXHi/8zZl+23
7Mda/bqZdrPkpphFrLmbd/cF4zRCMQ==
            "],
            VertexColors->Automatic], LineBox[CompressedData["
1:eJwV2mW4FQUbBdBLN9Ld6YeAlHSDdHd3d3e3dHeHSIcIUkoj3SDdIN1d35pf
MrPftV8f5nBnzjk3ZZOOVTqECgkJiftdSEjOZCEhQ+KEhFRKEhLSOkFISKIU
ISEvY4aEPEkYEhIhXkjIzqT+K7+QOCTkefyQkEXJQ0K+xAoJuZ0oJOSzfB3/
RX6Yv81P4S/FUM4nihsSctP5RLFDQj6aj80fMB+DD+s4GX9WfzL+qf4I/J/6
h9o/gl/I15Uv5LvJx/GF5dP5gfxMvry+WXxLewbxWe3PyZfkG/PJ+MZ8Lr4S
H4avyRfl6/Ex+Hp8Br4Y/1p+mD/A3+Bn8Df4Dfxhvp/8PL+TP8//wl/gl/I7
+fb2R+bT80X4EL4In5DPxt81n4tPzRfgX8oL8FH5tPx5/Sv5X/ldfG/5Ln4y
v4pvIN/Mz+M38231beGH8/P5ivbX51vyg/n8/GC+Ot+BT8n35BvxffjMfB++
FN+Yj8U/5O/y3/g/+G/8Cf4/fhb/hr/Mv+aX82/4Pfxlfkzw+nH94/CZ+efO
Z+Yj8an4c+bT8LH5TPxt/Zn4L/J4/EH9M+yfzq/n28jX80Plc/mK8l/58fxy
vp6+3/ge9kzgC9tfhq/Jd+Yz8Z35EnxDPhbfkq/Mt+WT8235PHwVPkzw+uXP
88/5X/nn/C7+Ij+av8cf5e/yM/l7/O/8Ub4fn4zPxVfmv+Mr89/zRfjX5kvy
2fnyfCjH5fnEfA7+rv5t/Gb+JD+KP8kv5rfz7eUH+DX8Ab4Pf5Cfxq/lG9jf
nu/JT+LL8ZP45vwAPis/ku/E/8IX5EfztfjOfCr+I/+G/06+n/9Ofp1/z6/g
w+l7xId1vIUPZ89p/hE/hz/j+n/y57jOX3U+rvm35r8zv8d8FPtDHCfSf1J/
Iv0P9YdhNukfYP8Q++fyNeVz+U7yX/j88sl8X34qX1rfNL6pPf34TPZn5Yvx
9flEfH0+O1+O/2a+Kl+Qr8VHdVyLT8cX4p8Hf7/8Hv4KP4W/wq/hD/C95Kf5
rfxpfjh/hl/Ib+Vb2x+OT80X4D87X4CPy2fmb5rPzifn8/BP9efhI5pLyZ8O
Xt/8Yn4H312+gx/PL+fryDfys/iNfEt9v/OD+dl8Wftr8035/nxuvj9fmW/D
J+W78vX4HnwGvgdfnK/PR+fv8Tf5T/wG/hN/hL/DT+Nf8Bf45/wS/gX/F3+B
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
/iW/mD/h+v8fvOv8LQ==
            "],
            VertexColors->Automatic]},
          Annotation[#, "Charting`Private`Tag$84024#2"]& ], 
         TagBox[
          {RGBColor[0.560181, 0.691569, 0.194885], Thickness[0.02], Opacity[
           1], LineBox[CompressedData["
1:eJwV1EdsznEcx/GffbFHSMzaI4KTPS72CSdccOFEgkTs2nuPmLE3bY3S1q5V
q7VKUTVr1UpQK8Hrd3iRfD9vPJ7/8zRhxJiBo0uEEDr4ZV+DEPITQphIeyrw
1a2Q/RzgIIdIIpkUDnOEoxwjleOcII10MjjJKU5zhrOc4zyZXOAil7jMFbK4
yjWuc4ObZJPDLW5zh7vcI5f7PIivq4XX0ySELY1CmN4whCf+T5PoQEW+aV6T
F1+/9rh2qzZRW2CfTEcq8V3zJr5uXabuoG6x7r1tHj2pTQkexvdCd0K3TTdD
99R9Cp2oTLHmbXwPdBd0h3RLdEW2+fSiDiV5FN9XXZpuu26m7pn7VDpThR+a
d/H91F3UJemW6j7YFtCbupTicXxGunTdDt0s3XP3aXShKj817+Oz0V3SJeuW
6T7aFtKHepQmPz5vXYZup2627oX7dLpSjV/xGWqyNWmadZpi91UMoBlF8XOg
uaxJ0SzXfHJfRF/qU4a7mvuac5qtmr9uGxlMG57Ez57mpGaXZo7mpXsi3ajO
7/h50uRo0jXrNT/cVzOQ5nyIn0nNFc1hzQrNZ/fF9KMBz+2v7Nn2JHt59rmP
pCz37A/s5+3bbP/cNjGEthTE74jmlGa3Zq7mlfsMulMjPi97gT3Lvtdelh3u
w/kTvxP2W/YM+wbbT/c1DKIFb+1F9lx7qr0aKe6j+Ri/c/Ys+xH7StsX9yX0
J4EX9kJ7jj3ZXoH97qMoR649z55p324LbHYfSrv4b9i/2B/ZM2y1SHUfx9P4
88F+2r7HPs9W6D4zPqeWIdRs6jvV2Pvs3p1VbmvdEt2G6Re28jyahTDBnx/b
OoTx/q4e8WeX34vjc3F7pvsP2HTsOA==
            "],
            VertexColors->Automatic], LineBox[CompressedData["
1:eJwVkU8og3Echz9v1HZSuxAHvDPG/Blr5aQo5aJIjoreiVxsIge5vbWcpJSL
chny56JWLq9ESk2SXZRYJvXmQt4oKcWzw+fwfZ7Pd793v59pJUdmDUk2cVul
17CUjUpnQekjIn02SYWQVMs8z7zIPMHc2yA5phSHdcNMmAEbp1cJf2yRnhql
HGwf5iPbcIv81ks3+DzewW/ifuAbZJREyDudSzo5Olk663Q8+CoZJEHygnfx
t/gjfAU5hM8QP7nD3+Mv8BmcQbbgYyRWOgPv4R9K/wVXTY7hC6TI+Q7+FL+H
X8G5cJv0kS/cN+4Zd46rIyfwKlLAFXFXuAO4nyS4pynuaZh76oTv0AvBwrAA
zKMzRDKwXdgaLEUvQa8c5oN5zHk64p3KeKc3OlFmG5/Gp5iTbdJcM+fQXaK3
TG+ab7HapUm+65rf66c/QL+mQ+piJ8ZOnJ0/3j3AXg97/0sDWdk=
            "],
            VertexColors->Automatic], LineBox[CompressedData["
1:eJwV2lXAFYUaBdBDSnd3d3d3d3d3d6cgKZLSDaI0iCLhpZQu6U5JCaW77pq3
/8z+1t68gJzB1G161ukRJhQKxY8ZCkXLGQplSR8Kpc8eCmXMHAo9zRUK9UwT
Cv2ZJRTanyEU+j5HKLQxXSi0LlsotCFTKDRQPjVtKLQtayj0e8ZQaCz/I7+U
X853zh0KfUoVCp3w82nPt3q+w/0J96fcL3S/UP8l/Vf1r9F/QP9e/fv1T9H/
PnUo1FTeQp5bXkleWV5VnkCeSV89fQ30pdVX2k4xOyVsfmV/Dp+MT8m/9Dwy
H42PwV9y/8B+Qj4Jf09/eP6LPAx/RH9F+QJ+Md9dPoEfJ5/A15F3sj+Dn8m3
1DeSH2JnGF/Wfn37H/38xfPznj9w/5/7p+7/5/6w/rf6P+g/pP+u/r/139a/
Tn9G+VD5CHlNeSd5R3lneT55JX199PXTV1pfSztN7DSzmd7+PvvF+JJ8HD4z
n4XPxr9xH5nPzxfiw/uchk/Op+T/0d/R/u/8Tn4Sv5Jfwf/E95SP53/mf+GH
84v4ufx8vrX9rPYf+Pmx5wc8P+/+uvub7te636L/H/2P9G/Xf07/af1n9S/S
H0/eVd5DXkreSN5I3kSeXl5IX1t97fXl0VfLTlU71W0msL/JfjY+Jx+OT8wn
5ZPz/7h/pz8Dn5l/JY/Lx+Bj8Zf0N5Sv5Tfww+Rz+Vn8HL6VfJD9ZfwPfA99
U/iJ/CS+jv2e9qPxMfm7nr9z/8n9F/dH3F/SH8nnqD5f0P9K/1P9z/X/T39B
+SR+Ct9CPkg+UD5YXlbeSN9ofgxfS19P+13sdLOfz/5Z+9X4mnwavjBfhC/G
f8Un5svzFfl4fB4+O5+TfysfaP8If5xfwG/lN/Nb+JHyOfwe/k9+Mr+eX8Wv
4Xvbf+L3/8Hg95Lnv3q+2f1R98fdz3U/U/85/Rf1/6T/T/279f+h/1v9z/36
G8qbyLPLy8nLyyvK48jT6aulr46+lPqK2ylkp4jNcPan8on4pPxTzyPwkfgo
/Dn3d+3H5RPwt/SH+A/yT/ID+svK5/Dz+c7yMfxo+Rh5DXk7+1P4aXxTfUP5
AXYG2S9pv7r9t37+4Plpz++6f+j+sfut7vfrf6n/jf59+v/Wf03/Df2r9KeV
D5QPkVeVt5O3lbeX55KX09dDXy99xfU1tdPATiObqe3vsV+IL8rH4NPzGfhM
/Av3EfjcfD4+5HMKPjGflL+jv639Lfx2fjz/A7+UX853lX/Dr+M38IP5efxM
fjbf3H5a+3f8fN/zPz0/5f6y+6vuV7rfpP+O/vv6f9N/Sv9f+k/qn6c/pryj
vIu8mLyevJ68gTy1PJ++lvpa68uhr5qdinYq24xjf539THxW/ovn8fmEfGL+
jvtX+tPw6fln+mPyUdxF48/prytfya/hB8ln8tP57/l+thexS9guur5lx7Lj
2Rq2u9iOxEZl//b8lft37j+4P+D+nO7wPn/l8xndz3Q/1v2f7q2288rH89/y
TeT95H3l/eUl5fX0jeC/5qvp62q/g51O9nPZP2m/El+VT8Hn5wvwhfhwfHy+
NF+Wj8Xn4DPzWfmX8r72D/CH+Tn8r/zP/C/8UPn3/A5+Fz+RX82v4H/iu9uP
bP+Cny97/j/P97k/4/6c+6XuV+i/pv+m/g36j+g/qP+w/hn6w8pbytvI88ur
yavLa8qTyLPpa6Svib6M+srbKWWnjM2o9pfYT8Wn5d96Hp2Pxcfhr7n/V39S
PgX/UH8kPlzwZwT/l/6q8iX8cr63/Dv+W/47voG8m/3Z/Fy+rb5v+BH813xF
+83th/hw/GXP/3X/3P1L97vdH9f/Uf5Ffkz/A/139d/X/7P+rPKR8tHyuvJu
8q7y7vJC8mr6BugbpK+8vrb2W9hpZT+z/UP2S/Fl+QR8dj4Hn4v/4D46X5gv
xkfyOQOfmk8b/Pdaf1f7u/g/+Kn8Wn4Vv4bvK5/Eb+a38KP4ZfxCfjHf3n5e
+0/8/NzzI55fdX/L/R33G93v0P9Y/xP9O/Vf0n9e/0X9y/QnkfeU95GXkzeT
N5O3kGeWF9PXUV9nfQX01bNT005tm0nsb7Wfi8/Lf8Un51PyqfnH7j/pz8Jn
59/JE/Jx+Hj8Nf1N5Rv5X/iv5Qv5efwCvp18mP0f+ZV8H30z+Mn8VL6B/f72
Y/Fx+Qeef3Ifhg/H/+X+mv5ofEz+iv53+l/KX8t36y8qn8rP4NvIh8mHyofL
K8qb6RvHT+Dr6etrv4edXvYL2b9ovxZfl8/AF+dL8KX4qHxyvjJflU/EF+Bz
83n5j/Kh9v/iT/FL+P/x2/jf+W/kC/h9/AF+evBnOb+O38D3t/+3//bv8PNu
z3/2fLX7Q+6PuJ/lfqL+0/rP6f9B/279O/Tv0j9e/32//nryhvIs8tLyMvJy
8pjy1Pqq66upL5m+Inby2yloM2R/DB+fT8T/63lYPgL/FX/a/S37sfi4/A39
n+Rv5e/le/WXks/k5/Ad5KPkI+Wj5FXlre1P4ifzjfQNst/XTn/7xeyXsf8q
+HuU5yc8v+X+vvsH7je7/1P/M/0v9f+h/7r+y/qv6v9Rfyp5P/lAeSV5a3kr
eRt5dnlpfV31dddXRF8jO3Xt1LeZwv5O+/n5QnxUPg2flk/PP3Ufls/B5+Y/
yZPyCfhE/N/6W9n/ld/Cj5Ev5RfxS/hO8q/51fxafoC+2fx0/nu+if1E9q8H
XZ7v9vyo+wvuL7lf4X6t/r/139H/i/6/9B/Vf1z/bP2R5e3kHeWF5bXlteV1
5SnkufU109dCX1Z9le2Us1PBZkz7P9lPz2fiP3oeh4/HJ+D/dv9cf0o+Df+f
/mj8V8F3xOD7qv5a8hX8Sr6/fDo/hZ/GN5H3tj+fX8h31DeeH82P4avab2c/
Ah+Jv+75c/ev3b91v9f9af1hfA7v80n9/+l/oP+R/s36c8nH8OP5hvLe8l7y
PvJi8tr6hvLD+cr6Otlva6e9/ez2j9svz1fik/J5+Lx8fj7Ex+FL8KX46HxW
PgOfiX8m72V/L3+An8n/zK/nN/KD5NP47fz/+HH8T/wy/ge+i/3Pfv+f9PMZ
z7d5vtP9Sfen3S8Kvivqv6z/mv61+g/q36f/gP6p+j/49TeTt5TnkVeWV5FX
kyeUZ9ZXX19Dfen0lbFT3E5Jm5Hsz+WT86n4V55H4aPzMfnL7h/aT8Qn5e/r
j8CHgj8n+KPBd2v5Qn4J30M+kR/PT+Tryjvb/56fxbfS9zU/lB/Ol7PfwP6n
4M8i/oLnD90/cf/M/Q73R/S/0/9Rflj/Pf239N/Rvz54tyEfJh8pryXvLO8k
7yLPL6+sr6++/vrK6Gtlv6md5jYz2N9vvzhfio/LZ+Gz8tn5t+6j8AX4wnwE
n9PyKfhU/IPg3Yb9//G7+O/4VfyP/Eq+l3wCv4n/lR/BL+bn8Qv4Nvaz2X/o
5389P+j5Bfc33P/tfp37rfof6H+s/3f95/Wf0X9O/+Lg76fybvKe8tLyxvLG
8qbyDPLC+trp66Avr77adqrZqWEzof1f7Gfnc/Hh+SR8Mj4F/8D9e/0Z+Sz8
a3k8PiYfO/g7a/DdWr6O38gPl8/jZ/Nz+dbywfaX8yv4nvqm8t/y3/F17fey
H52Pxd/z/L37z+5D/FH3l/VH9jkaf1H/a/3P9L+Q7wjebci/46fyLeWD5YPk
Q+Tl5I31fcOP5Wvr62W/q53u9vPbP2e/Ol+LT8sX4YvyxflIwd+v+Ap8JT4+
n5fPwefi3wXvNuwf5f/iF/Lb+N/4rfzX8rn8H/xefgq/gV/Nr+X72H/q9/+h
4PeS55s9/839Mfd/uZ/nfpb+8/ov6V+pf6/+Pfr/1D9J/wu//kbypvIc8vLy
CvJK8rjy9Ppq66urL5W+EnYK2ylqM7z9aXxiPhn/zPOIfGQ+Kn/e/T378fiE
/G39YfiP8s/yg8F3a/lcfgHfRT6W/0Y+Vl5T3t7+VH4630zfMH6gncH2S9mv
Yf9d8Hcpz894fs/9I/f/ut/m/oD+V/rf6t+v/5b+6/pv6l8dvNuQD5IPlVeT
t5e3k3eQ55aX19dTX299JfQ1s9PQTmObaez/Yb8wX4yPyWfgM/KZ+ZfuI/J5
+Px8GJ9T8kn4ZPzd4N2G/a387/wEfgW/jP+B7yYfw6/nN/JD+Pn8LH4O38J+
Ovt3g/eInu/1/LT7K+6vuV/l/hf9d/X/o3+L/tP6T+g/pX++/ljyTvKu8uLy
+vL68obyNPL8+lrpa6Mvp77qdirZqWIzrv319jPz2fgQn4BPxCfh77p/rT8t
n4F/Lo/FRw2+J/Lng+/X8lX8Wn6wfBY/g5/JN5f3t7+YX8p31TeJH8dP4Gva
72o/Mh+Nv+X5a/fv3X90f9D9ef0RfI7k81n9z/X/q/+J/m3Buw35BH4S31Te
X95PPkBeSl5f30h+FF9dXzf7He10tp/b/in7lflqfEq+AF+QL8yH5xPwZfhy
fGw+J5+Fz8a/kvezf5A/ws/lN/Ob+F/5YfKZ/E5+N/8tv4b/kV/J97Afxf5F
P1/xfIfn+92fdX/e/bLg3wr0X9f/t/6N+o/qP6T/iP7v9YeTt5K3lReQV5fX
kNeSJ5Vn19dYX1N9mfRVsFPaTlmb0ewvtZ+aT8e/8zwGH5uPy193/5/+ZHxK
/pH+yHz44M8J/kTw/Vq+lP+B7yOfzE/iJ/MN5d3tz+Hn8e30jeFH8qP4SvZb
2A/Dh+eveP6f+xfuX7nf4/4v/Z/kIZ+P63+o/57+f/RvCt5vyL+Wf8PXk3eX
d5P3kBeWV9c3UN9gvoK+dvZb2mltP4v9w/ZL8+X4hHwOPiefm//oPgZfhC/O
R/Y5I5+GTxf8Nzt4v2F/N/8nP41fx6/m1wbvvuTf8b/xW/nR/HJ+Eb+E72A/
n/2nfn7h+VHPr7m/7f6u+5/d79T/r/6n+nfpv6z/gv5L+pfrTyrvJe8rLy9v
Lm8ubynPIi+ur5O+LvoK6qtvp5adOjaT2t9mPzefj4/Ep+BT8Wn4f91/1p+V
z8G/lyfi4wbvCPnrwfdr+c/8r/wo+SJ+Pr+Qby8fbv8nfhXfV9/3/BR+Gt/Q
/gD7sfl4/EPPP7sPy4fnT7i/rj86H4u/qv+9/lfyN/I9wfsN+TT+e76tfLh8
mHyEvJK8ub7x/ES+vr5+9nva6W2/sP1L9mvz9fiMfAm+JF+aj8an4Kvw1fjE
fEE+D5+P/xS837B/gj/NL+V38Nv5//Fj5Av5/fxBfkbw5zm/nt/ID7B/y3//
d/p5j+ebgn8TcH/Y/VH3s4P3pfrP6D+vf4X+Pfp36t+tf4L+f/z668sbybPK
y8jLysvLY8nT6Kuhr5a+5PqK2ilgp5DNMPbH8gn4xPx/nofjI/KR+DPub9uP
zcfjb+r/LH8n/yDfF3y/ls/i5/Id5aPlX8tHy6vJ29j/jp/CN9Y32H4/OwPs
F7df1v7r4O9Snp/0/Lb7f9w/dP+b+736n+t/pf9P/Tf0X9F/Tf9PwfsNeX/5
IHlleRt5a3lbeQ55GX3d9PXQV1RfYzv17DSwmdL+LvsF+MJ8ND4tn47PwD9z
H47PyefhP8uT8Qn5xPyt4P2G/c38Vn6sfBm/mF/Kd5aP4tfw6/iB+ubwM/iZ
fFP7ie3fCLo83+P5MfcX3V92/6P7dfpv6b+r/1f9J/Qf0/+X/jn6o8jbyzvJ
i8jryOvI68lTyvPoa66vpb5s+qrYKW+nos1Y9lfaz8Bn5j95HpePzyfkb7l/
oT8Vn5Z/oj86Hyn4nhh8Zw2+X8t/5FfxA+Qz+Kn8dL6pvI/9BfwivpO+Cfw3
/Fi+mv329iPykfkbnr9w/8b9O/f73J/RH9bnCD6f0v9E/0P9j/X/FrzfkI/l
J/CN5H3kveV95cXldfQN40fwVfR1tt/OTgf7Oez/Zb8CX5lPxufl8/EF+DB8
XL4kX5qPwWfjM/KZg3e2wfsN+/v4g/wsfhO/gf+ZHyyfzv/O7+DH8yv55fwK
vqv9L37/n/LzWc+3e77L/Sn3Z9wvDr4v6r+i/7r+dfoP6d+v/6D+afo/+vU3
l7eS55VXkVeVV5cnkmfR10BfI33p9ZW1U8JOKZuR7c/jU/Cp+deeR+Vj8LH4
K+4f2U/MJ+P/0R+RDxP8OcEfC75fyxfxS/me8m/5Cfy3fD15F/sz+dl8a32j
+GH8CL68/Yb2Pwd/FvEXPX/k/qn75+53uj+q/73+T/Ij+u/rv63/rv4NwfsN
+XD51/La8i7yzvKu8gLyKvr66Rugr6y+1vab2WlhM6P9A/ZL8KX5eHxWPhuf
g3/nPipfkC/CR/Q5HZ+ST80/DN5v2N/B7+Yn86v5n/hVfG/5RP4XfjM/kl/C
z+cX8m3tZ7f/yM//eX7I84vub7q/5X69+236H+r/V///9F/Qf1b/ef1Lgr+f
yrvLe8nLyJvIm8ibyTPKi+hrr6+jvnz66tipbqemzUT2f7Wfg8/NRwjeb/LJ
+ZT8Q/cf9Gfis/Jv5PH5WMF7wuDvrMH3a/l6/md+hHw+P4efx7eRD7H/A/8j
30vfNH4SP5mvZ7+3/Rh8bP6+5x/cf3Efhj/m/or+KD5H5y/pf6P/uf6X8p3B
+w35ZH4a30o+RD5YPlReXt5E3xh+HF9HX2/73ez0sF/A/nn7NfjafDq+KF+M
L8FHDv5+xVfkK/MJ+Hx8Tj43/z54v2H/GH+CX8Rv57fw2/hR8nn8n/w+fiq/
kV/Dr+P72n/m9//h4PeS5795vsX9cfcn3M8P3hfrv6D/sv5V+vfp/0P/Xv3f
6X/p199Y3kyeU15BXlFeWR5PnkFfHX319KXWV9JOETvFbEawP51Pwifnn3v+
FR+Fj8ZfcH/ffnw+EX9Hf1j+k/yL/FDw/Vo+j1/Id5WP48fIx8lryTvYn8bP
4JvrG84PsjPEfmn7Ne2/D/4u5flZz++7f+z+P/fb3R/U/1r/O/0H9N/Wf0P/
3/rXBO835IPlw+TV5R3k7eUd5XnkFfT10tdHX0l9ze00stPEZlr7f9ovwhfn
Y/EZ+Ux8Fv6V+6/4vHwBPqzPqfikfHL+XvB+w/42/n/8RP5Hfjm/gu8uH8tv
4H/mh/IL+Nn8XL6l/fT27wXvEj3f5/kZ91fdX3e/2v2v+u/pf6B/q/4z+k/q
P61/gf7Y8s7ybvIS8gbyBvJG8rTyAvpa62urL5e+GnYq26lqM579Dfaz8Nn5
MMG/7/GJ+aT8Pfdv9KfjM/Iv5LH5aMH3RP5C8P1avppfxw+Rz+a/52fxLeQD
7C/hl/Hd9H3Hj+cn8rXsd7MfhY/O3/b8jfsP7j+5P+T+gv6IPkf2+Zz+F/r/
0/9U//bg/YZ8Iv8d30w+QN5fPlBeWt5A39f8aL6Gvu72O9npYj+P/dP2q/DV
+VR8Qb4QX4SPwCfky/Ll+Th8Lj4rn51/HbzfsH+IP8rP43/jf+E388Pls/hd
/B5+UvDvOfxP/Cq+p/2o9i/5+arnOz0/4P6c+wvulwf/XqD/hv5b+n/Wf0z/
Yf1H9c/UH17eWt5OXlBeQ15TXlueTJ5DXxN9zfRl1lfRThk75WxGt7/Mfho+
Pf/e85h8HD4ef8P9E/3J+VT8Y/1R+AjBnxP8yeD7tXwZv4LvK5/Cf8dP4RvJ
e9ify8/n2+sby3/Nj+Yr229pPywfgb/q+RP3L92/dv+H+xP6P8vD+PyX/kf6
7+t/oP+X4P2GfJR8DF9f3kPeXd5TXkReQ98gfUP4ivra229lp439rPaP2C/D
l+cT8Tn5XHwe/pP7mHxRvgQfxedMfFo+ffDf7OD9hv09/F5+Or+eX8Ov4/vL
J/Nb+G38N/wP/GJ+Kd/Rfn77z4L/l8TzY55fd3/H/T33m9zv0v+f/mf6d+u/
ov+i/sv6f9CfTN5b3k9eQd5C3kLeSp5VXkJfZ31d9RXS18BObTt1bSazv91+
Hj4/H5lPyafm0/L/uf+iPxufk/8gT8zH4xPwN4Lv1/JN/GZ+tHwxv4BfxHeQ
j7C/kl/N99M3k5/KT+cb2R9oPw4fn3/k+Rf34fgI/En3N/TH4GPz1/R/0P9a
/lb+R/B+Qz6dn8m3k4+QD5ePlFeWt9A3gf+Wb6Cvv/1edvrYL2L/sv06fH0+
E1+SL8WX4aPzKfmqfHU+CV+Iz8vn5z8H7zfsn+TP8Mv4nfzv/A5+rHwRf4A/
xH8f/HnOb+B/5gfav+2//7v8/IfnvwT/LuD+iPtj7ucE70v1n9V/Qf+P+v/Q
v0v/Hv0T9T/w628gbyzPJi8rLyevII8tT6uvpr7a+lLoK2anoJ3CNsPaH8cn
5JPwTzwPz3/FR+bPur9jPw4fn/9b/xf5e/lH+f7g+7V8Nj+P7yT/Rj5K/o28
uryt/cn8VL6JviH2+9sZaL+E/XL23wR/l/L8lOd33D9w/8j9Fvf79L/Q/1r/
Xv039V/Vf13/yuD9hnyAfLC8irytvI28nTynvKy+7vp66iumr4md+nYa2kxl
f7f9gnwRPjqfjk/PZ+Sfuw/P5+Lz8l/kyflEfBL+dvB+w/5v/DZ+nHw5v4Rf
xneRj+bX8uv5Qfrm8t/zs/hm9pPYvxl0ef6H58fdX3J/xf1P7tfrv63/nv7N
+k/qP67/hP65+qPKO8g7y4vK68rryuvLU8nz6muhr5W+7Pqq2qlgp5LN2PZX
2c/IZ+E/ex6PT8An4m+7f6k/NZ+Of6o/Bh85+J4YfGcNvl/Lf+JX8wPl3/PT
+Bl8M3lf+wv5xXxnfRP5Mfw4vrr9Dva/4qPwNz1/6f6t+/fu97s/qz+czxF9
Pq3/qf5H+v/VvyV4vyEfx0/kG8v7yvvI+8lLyOvqG86P5Kvq62K/vZ2O9nPa
P2G/Il+FT87n4/PzBfmwfDy+FF+Gj8ln5zPxWYJ3tsH7Dfv7+UP8bP4XfiO/
iR8in8H/j9/JT+BX8T/wP/Ld7Ifsn/bzOc9/93y3+9Puz7pfEnxf1H9V/w39
6/Uf1n9A/yH90/V/4lvIW8vzyavKq8lryBPLs+prqK+xvgz6ytkpaae0zSj2
5/Mp+TT8G8+j8TH52PxV94/tJ+GT8w/0f8WHDf6c4I8H36/li/llfC/5JH4i
P4mvL+9qfxY/h2+jbzQ/nB/JV7DfyP6X4M8i/pLnj90/c//C/S73x/R/0P9Z
flT/P/rv6L+nf2PwfkM+Qj5KXkfeVd5F3k1eUF5VX399A/WV09fGfnM7LW1m
sn/Qfkm+DB+fz8Zn53Py791H4wvxRfmvfE7Pp+LT8I+C9xv2d/J7+Cn8Gn4l
v5rvI/+W/5X/jf+aX8ov4Bfx7eznsP/Yz088P+z5Jfd/u7/tfoP77fof6f9P
/w79F/Wf039B/9Lg76fyHvLe8rLypvKm8ubyTPKi+jro66Qvv766dmrYqWUz
sf3N9nPyefiIwftNPgWfin/k/qP+zHw2/m3w74N87OA9YfB31uD7tXwDv4kf
KV/Az+Xn823lQ+2v4H/ie+ubzn/HT+Hr2+9jPyYfh//H84/uQ3xY/rj7q/qj
8jH4y/rf6n8hfyXfFbzfkE/hp/Ot5UPlQ+TD5BXkTfWN5cfzdfX1sd/dTk/7
Be1fsF+Tr8On54vxxfmSfJTg71d8Jb4Kn5DPz+fi8/Afgvcb9o/zJ/nF/O/8
Vn47P1o+n9/L7+en8T/za/n1fD/7z/33/0jwe8nzLZ5vdf+X+5PuFwTvi/Vf
1H9F/2r9+/X/qX+f/sn6X/n1N5E3l+eSV5RXkleRx5dn1FdXX319afSVslPU
TnGbEe3P4JPyKfgXnkfio/LR+Yvu/7GfgE/M39Ufjv8sD/GHg+/X8vn8Ir6b
fDw/Vj6ery3vaH86/z3fQt8IfrCdoXwZ+7Xsfwj+LuX5Oc//cf+v+yfuf3d/
SP8b/e/1H9R/R/9N/bf0rw3eb8iHyIfLa8g7yjvIO8nzyivq662vr75S+lrY
aWynqc109vfaL8qX4GPzmfjMfFb+tftIfD6+IB/O59R8Mj4Ffz94v2F/O7+D
/5b/if+B/5HvIR/Hb+Q38cP4hfwcfh7fyn4G+/eDd4me7/f8rPtr7m+4X+N+
s/77+h/q36b/rP5T+s/oX6g/jryLvLu8pLyhvKG8sTydvKC+Nvra6cutr6ad
Knaq2Yxvf6P9rHwOPmzw73t8Ej4Zf9/9W/3p+Uz8S3kcPnrwPZG/GHy/lq/h
1/ND5XP4mfxsvqV8oP2l/HK+u77J/AT+W762/e72o/Ix+Duev3X/0f1n94fd
X9T/lc9RfD6v/6X+J/qf6f89eL8h/5afzDeXD5QPkA+Sl5E31DeK/4avqa+H
/c52utrPa/+M/ap8DT41X4gvzBflI/KJ+HJ8BT4un5vPxufg3wTvN+wf5o/x
8/kt/K/8b/wI+Wx+N/8H/13w7zn8Sn4138t+NPuX/XzN812eH3R/3v1F9z8E
/16g/6b+2/o36T+u/4j+Y/pn6Y8gbyNvLy8krymvJa8jTy7Pqa+pvub6suir
ZKesnfI2Y9hfbj8tn4H/4HksPi4fn7/p/qn+FHxq/l/9UfmIwZ8T/Kng+7V8
Of8j308+lZ/MT+Uby3van8cv4DvoG8eP4r/hq9hvZT8cH5G/5vlT96/cv3H/
p/uT+r/Iw/p8Qv9j/f/of6j/1+D9hny0fCzfQN5T3kPeS15UXlPfYH1D+Ur6
Othvbaet/Wz2j9ovy1fgE/O5+Nx8Xv6z+1h8Mb4kH9XnzHw6PkPw3+zg/Yb9
P/h9/Ax+A7+WX88PkE/ht/Lb+TH8Cn4Jv4zvZL+A/efB/0vi+XHPb7i/6/6+
+1/c79b/RP9z/Xv0X9V/Sf8V/Sv0J5f3kfeXV5S3lLeUt5Znk5fU10VfN32F
9TW0U8dOPZvJ7f9uPy9fgI/Cp+LT8On4J+5DfHY+F/9RnoSPzyfkbwbfr+3/
wv/GfyNfwi/kF/Md5SP5Vfwavr++Wfw0fgbf2P4g+3H5BPxjz0N8eD4if8r9
Tf0x+Tj8df0f5W/k7+R/Bu835DP4WXx7+Uj5CPnX8irylvYn8pP4hvoG2O9t
p6/9ovav2K/LN+Az86X40nxZPgafiq/G1+CT8oX5fHwB/kvwfsP+Kf4sv5zf
xf+P38mPky/mD/KH+ZnBn+f8Rn4TP8j+Hf/9/z/ki8bj
            "],
            VertexColors->Automatic]},
          
          Annotation[#, 
           "Charting`Private`Tag$84024#3"]& ], {}}, {{}, {}, {}, {}, {}}},
       VertexColors->CompressedData["
1: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
iP3whTsf4n/mjWZ7MrH83tJFJp5U9Anbv5b7wcUjiS2PUErBxGxcszzBxVcL
X22R1GRDROLzEe/AbjTOfLvKESJ4O/LUwn/idNznSpuH7aqGG1doV/uBRlR0
a8rMm8eH/FfZfWMPCJ2XpFP8qslQqXla01fFQdPRb9v1ogewuZMW1FvXiwey
VoL7zzFhXv6lP0WtFfNFlogHaLQhZ+GZtvqbFMQdk03xZeVBpV+y+tXhKmyo
HZPs/v998qffu3x7RIOq+kc7yJDRc2en1m0DDuaean3SO9aPtvV5qRr2Pahr
98uxe8vAj1YX36jSRpSLHpMPKm3BxmvX2lJM+NgQcrrXspgBn+9K8awuCiR9
6CKTd7mw33h0OuITGcnan2l7rElImPrjEhjEwrHouupWtU6Ef6LcDIjqwH8P
rrOuyBIcwnTvuopyyL08Hrc6rw7J3cONkr58rL8cMKKdxYSl1cvI1mQq/FvW
mkgs4+Gj6KXOc4pUlLEdpV+bDGKx1nGq7Wk2lm5Lb+OY9SAma95pd78ubF4p
+NLamQ57e3XHrNAa3H2+y6R4XRPkxJYWrxDjw85/l5sM0S9NbPsXnpwlI+S8
2rMAPgdB3ZkFOvaD6NVvvbDdsg+2e8QtR+KZ4OqM7v70txXfp+vO6n5sg00d
mRtTR8HRPUJbU95/Q8dz/+fk7f+/J0+m2OE4DxeCXV2UOqjYfjYn09tgiOiv
/vtnmtkw2KQZ/b6tF73VC3qfuXWj9ER2Sep8BuZkt49/0qyHt+nHILXuZgSd
HlslosHHS9W3Io57GTjnuyhD9xIFi+53HdTQ5eLW3HzVgZ4hJL8qfpNt3Y8e
3dvbDi1jYXat8GaX8HZkv1hHTn7TDjmVE78Y16lQZr1ZJhxSgtXd1eb9kzUw
ntPzF3Qm9Cbb18XaySTy1ub8lT1U/PX5nT5SywWp4Wf2MxcKHi19JU21GMAx
rT73wDEWXqk2GU0TuegQT6soCe7Epbn6JwbfaRDUuOrxjlsJ0/u3Xpdca8DK
1CLuNgYPWf/ahwP06Ijcu1HaLozgpoGMopkEDoQ+3bii2k3C6t1pxkX7euH7
UV3KbgMT/w1OvX15rAU2AXWOKqmtqLhvvfipMgXKl3ofxKvmwII9z07tSiXa
87OE5w/xEJoe/u6VBh3lqc3qMffJ4AR0HhWP4SBUrVM0MYuE9ab5iqXavVjn
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
Y+E8Swm5lF7sPxZ3IDCsB/7yT5ot39Mx627J3KCaGjS9lEotdGrGqVv/XWdW
9397ZG7yf9d5a9f5sYEgAj1/mjK36xN4HD3z4PVXDgbuhwqEcQgYpLXmm5ny
4BIyed2NXNf6q35Zro8INP89LfZCmY21nXYf3OfTUf3zoVDIXj5kf36y12yk
ISs+85L4+jGIzK7tFCZ5Q1yyimJQMoAeOb36yMN9uGiqxmP8YqD/Z5GyxZwm
3J++RiSWtUHV7PatWWUE9tqqqkmR/PIrVejy9RdsmBZ/nb1FcBx7szLtD84l
e6jFYHv+WwbWJsRxL5N8MvThh+RdYyay1z44v+MYFdkZhaVLST7ZGneSK149
hltRl0xfmQ3h6/SpclmSTx5/Mr0uFtIF5pFKlkx0F2yUdoaUnKRha1VM9oIT
5Uj7YFBrR61Hw//v31//v3+H/3//vijw+Re9g0DZRYnKn1YEtLdsnhrU5yJF
wz9o7iiBnQYB7g7hpJdIN5f+useCQoGu4XA2AQG3oHVu8WzkSg8JPjxDR++p
d3WCJA/bygqkcC7SMbSp6M5TCQrulEmPPNTjgr/+28QckqvodRHd1jb9uB0S
EZ76hAkzY+OCh89a0CCwRGDsfTsYK/fOG8ojUK/AvC8Vx8c+3sYdR6bZaD/8
NDd57jgSNfKvzJC9ZTP27ztfmonZNy0a1pH8LFMrm3ivkIk5Mzmv55H87G9s
vOdbCA9DbdhhnUDBxoSVzw+YkT6o9umlUygbDQfeyOUt7kGybil/8e1u6C2/
wnZdRIdSt9LwqFwVig7fSx1IaMT5Yp+rUlMErh+jjDr94sK3z2v7mx4mmqmR
Qk9Iri61j3gdk8WCUeyfSimSq5cvlPu7iuRqg27TdU5LaPgtUs2eoz+K97pV
ijYHORDV8ntmrt2Ptt/pTdv8emEvcIXlu58Bj4VWWdyT9TjnXFf1Y0Er2rYK
f9/eQOCN8Nq/JhJ8aCu/07m7jY1/i6afdTEJfJ0y8XW4w8GVe56rW7cyIBG8
dXckyeFxW9/G6pQx0CtmdfLwTwpWLborcJzkcOvC2dIqW0ax6UPPrb8mg7jY
2/Dv5RMWHt+MW7KE2oEX2qZvwuI64Xj9b4NTBRVzy06wPjkVI0BlYmqJfN3/
5LexzRWz1uoScJj76omxPQHa0PDKJGcu7ly1WjrQT+DPnbQ74uk8vP1jdn+4
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
YGzeAB+9Dhej9y5joEnogbxVMAUNp7/1fX3IxYJgx1fO0cOwOuu0MWHpAK4G
Rvy2kGFhsbeRDV+8HbY9nSNqFzsw6WrnvTiLgFOQtSanmw/hjc9ZK6w5uLG/
2W/1DIGTwnVXotK46JZaPzPhycTgyIyS4kEC0yGKa3+tYiF17cuCw5o0+Okc
1qZ/5EHTM36BggUVO4JvKebJj+BL6ooPQWMkv9B30eYE9EKluGf2ArceNB99
4lWeSMfslniXk6drwPEeKypRasblqVsL27kE8q+2hpzexMPShOxXH1TIefRn
I0csisBzjsNArhQbR/kbcj0F6FjflxD5dCcfyy+3m/i9oyEwb4TisGgMnq2E
0qGPHGg3VXnoRg5g0acXr+rM+/BC5qV8K5OBtNkalb/fNULtOF423WzD+ZxT
BdvLCeStdlgZbkM+h9IlcnqxbGzcevHA0F8CF+bdPrnwF8kT5p86PV8yEHFT
x2vOagL7efLV39SZuPRBLrTUkQqlVTkK7ao8PLD8dcs7egxnIPTswsohDA5R
Vwz9ZWG/GFWUY9UFv4DlMaJnu2D/KjOzYQ/p9fepIhsXlWMsdKm+Wno9dq05
Erl3jMDGGuuup6E8DIycXBp4jYXd4Y4598n9GjxzZ398JBtuKbHExxN0XNrf
HGr8kPTqHcmvfDzo+OF56673LAq+Fk7JL1blQps1W+HG4iHcOr3csnd9P6Zo
kd2115noPRn6VG1HC0zFT/cbx7fjR9HTcQGxcZSjsGbYlYsA10uHB8SYCDwW
NVBkSuCVupiyUjoTbhp5nOQqKlbd3DpaE0Byb0OKXnkEBcc2ZwnfXTmMRcMU
A3NfNlITV/YvpXRjOCf7i6NXNyp2ysx7+YeGlztnr+NVVWIs+5iYtUcjOut2
ThqeI72y90N56DMWqvKSz/2IpZH3oGTpOhE+4BJ9ZP80FV3UF61TsqMQentD
87ItB7HHCg8UCvZD7obQyQ0OvWTv0W8rWTLww/zF0jKpeixaGLHtfn8LWhLn
rXnUSGDRqVTJR3P5ENlebb3MmI2Ppz8lutIITAqstuwP5aBXKDrE2YABA4uZ
DXNFSV4VUVril83ALJUh2mseBZ59+3/OjHJRtLTN4I/kf77f6DrjLz8I9xWz
O01vs1ARZqN7/HUH3ilF2a8I7sRT3fhIjSwq3uzb8fFIxgfsftq+wZFZi4zz
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
2sQJ3P5i89MsoA87fX2fD7P9kmfe/MQxtt8Wr6R/XRtUi2sy2RvTFFqwP3I2
7lo8CwteO3gfiE0gTNZdg28lGWY24VlF5kyYP5e3My0g4aWVVoLShnHIP+7f
LVw+iXWvpwi28YMo+XppIMSkH+b3lOyOsfnDXSL/uGt5EzqCxA5HxLUj8sS7
Fl9ZFhLHw/6js/ufba+nfE4Q2T1l+fKPIgO79kefc04eB8W0pSBEdhjdJadE
Xi7TkFZ9w8z8aDc6fr2bYfp3I/m5WKSHHXvf7jZrCEpUwuW32w/13Ab0XX1p
bZPARL/LYYc958govORcZsVJQNIKiaRqRTrCD+1a8UR8GO1OD53DNQdwLl/E
1CiSipeJhdsDbVohdKI45UFaBx68VuWV38dCkaH6FqFsKvqgJn2MnaMHVtst
Ma8y4LHixszHKAIC1D46RMqOYBVt1JPrEttPnt747k3rQYv/erKaTw9u71Oc
1PtHwi7TROu3bdUYI55eZXCxCfaV675m+rHw+l2unFM6DepKrSEpT0gQib0R
bsrNxNbKRzM6y0RcEkqf6ds0hkwT8yldC3aerBKLZfAMgJmhUDNn24d6bEp6
Z0JB4bLzwn6pBkiF8OicGm9FoMvvOv/VLOhfzWj3/EiBzY+May4sAjZkPaAr
E+g4s/LkOw6JMWREv5+/LT0E86sOKfz3afgRdKxmJL8TnH4Edb6bXWgQvOLX
nUPEXruOJLvKElhy9XRfZNVhNMHpuE0hE31TtXLTNWTErNXaytxLgPC6F5+z
z/z/Oe93BFWGhkHeWxglmjWAjiuLJ5L7qWhRtbBzTWtDW0Lf63HeTnz6PiVA
OcJC4SanKy8nqbDMOrOta4EIC09fysMnDKy+fpv/xSQBbcETrZczRtBY4K9l
nDXB5r6a9a5sfw40oHsPMNi5rfdF+p8FGQsmp95WydaAfmHKfKV5M4rHFwPE
wlmIrP/V/4Ld/8vfkqTmW0ngNusNl1BksvOASeB0IKGyZKRu5PEYAuX07Q9H
TIKUdSw2s3UA3uRnYmvb+3DqaPm9z0kUbGy58V3bpxEZoe2c4UVtiM75eOGW
GAunt5e/s56mYFgid15QhgjugGd5OVwMUHJknuwZHsMhubRGp4wh6C350YLr
aBjzNvKXDO3CpZX7tx9d6oKmtepl21Ukdq4YcwreKAN/Q9WribZ6tHfzqm29
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
b+cvKFV1IKPAh7zn0UM2ZJObzaRNulC7/W496W0npktefqpTo+NDxiax4+cr
MZqRcWyoox4B3IUaZTeIPhgrtLewiIVWvc8LT3+kQf3YyZ2PZAidh5Wsp2kS
r0sXHlKxHcThmTHpbe7DwEqbmZQzJGzNHLrrE96NNXG/dL0vMOBixGnOL6hF
2SavlcO7mmGadmFFjwQf21Le/B1vYiDo6qZbusJU+DBd72/+ycHwkr8bjb0H
4VZp+OLKqT5UpT+4o/yWhYkoY4erUu0weON/kJbfDs1/KV3ruqiQNdg4sn/2
C74Vns7SPVyDS8f0VtyM5SPjTvCTl5vZqDqqtfiRHOErssb36k/xsO3liR9+
QzSYZFfvarEaQu5THrWxexi/2Dd+K/N6MVnk5X7xeg9ConuUPxN7OGKV6b3D
tgGBvvtPLPrVgtHWq2mV2ny0xWNujRUTu4/fd5u+TMWkjtnzJkMuIg+SfF6P
DsFvxafL3xz6YaAjoOMpx8bn9dNbeO87UN29o0P7YweWzuVlnbhB6LzWUOVs
QRnoYjlM2vI6iMll3Mt34mPCsGNr6C4WmjX8lMQtaPjZ/d+kXzPh80pC69d7
UVGZ6XUh+sQAQt11Xfyn2ODPHG+a7OiGQn5K54/nXbB48PJVYC1xf09falBY
Xo0yhceyuuGNiFrzrlqXw4OoS0NKsSkDfpzHCsbPKJCwng398oYDoc3OH31H
yFCW0LHStu/FuoCNn+N0WegPmPV5592KOcfKhPEvbfhJlnbYrk3Mn+vep3Mj
D40y+nE1j6pwrYJv1EMm5twTxxBfzUDo4/LC3mAKpB3lDvc846BIP7R8dxoZ
KbL63ks1e9GQMCKQq8TCh5bREFH1VjwS/LRwW1gbhE/ohb08xUddlYjqWy0W
Co0lHuro0aDmaR9PLuOiUTz92H5rKpZ//1Hsu24ACcVGk1FMNpTXOF//eb8b
whNjIyc9u/DtwdqNX97R8eCmx/7kmCrMY7yrbTJoxLyRsFW3/n8eu4LnKiNF
Nk6f5SbLLiDmtVq/4KYNDy9vP5rn8pWG/s/WYtVKQzCh/XplVzGMR7u73N+9
6sXBPVy1lgM9cPr9/HvsDwYoJWsYHqR6kA+obDrxqgWC0yTNcA0+aqWHJOt0
mVDf/6Uk4xTBM2s/b6Su56K5aOy82bshJNbf03y8oZ/oN4oZMkIEl7sH7LR0
6MAai1+rXt3uQPatTXp/TtFg//H46q1by5BK0/r7tbyW8ItCvWXPeBhQ7RY1
86ZD0aq+ZeliYs5+/7yndTjgzldZWrGmH+8HNwQVGZFApT0YD4hgwtUy5pnR
pSYouM8yGUQ/exnNcDU04cPUZkcOLYuJH2cbKcF1BLfXHRVt8ONiR2FAtlgU
BavczrkFbCDjvX6kuMdVNpb6DM1ivBMyCy4taAjoREgQXyZfiI6I+SFV9zkV
uPZBRvv5rXoEc+/v+OzPx7C6g7VcCgvVTwUtcl/SkHnbonvFYh5MPb9VuS+g
gXTo+vwIjUGQZ3qmHx4ZRsqWEM65FSTI6gdePenYjbNDZobC1gwc/VC8Lcag
FsYkgVaH0SaI9WzXiFrCx52piT12eQxojCpFZYxS0JF9apESnYMjg/QYSa1B
9P5oWvZxXR/GvebtDH/Cgvu6ysn539qQvftKau/9duQJRVVfzqXC3vdZgf7f
ItwxfKG4brYaMlucLKN7iVwrac9dn8LF2fB8+sV8Fnbd9dCUKOLBXUjQi99A
R3qGknayGQVrKls6B505qP6cd28Xpx8qpm7qyCHBuelNUu0AE5XxOb+FCprx
NNo+e41UG4odqb/+HODj8ViP46XvTNgY/6fwb5bg1+IdXz1fcJFnXf/v1wgF
ovzxXbYfyLgo18B5k8mGVNH1dpWyLojJ9yedG+vEv3pKkpcdHZ6zpdLXjb/B
MtNineXpBmhobAlSC+Xjq8W+K0cIXnja3bRdpJ2GDLLqJ+Y6HlaHj8hqExx5
0uxMyN3XhO9WMJ/892gYnaVJf8QGSFhwSEXCldQNtclLKcIJDPR8tSo/+7AO
GeUTeZfqmtFo9nRvnCwfv8IGHA3/MJCeLKR7aA0V+7t0Q+MXccEJLLqlzx3E
WBJpYRDBEa3CvKCJehaKN9gKbIpqR4XGSm+pBR3YZSbF4y2mIW+1COXNp6/Q
qz9tHEapga6jgVF9Eh+CKe6fW+3YkLAldQ/8/zx2rTk1ug8Pf4feK8rK0hEX
fC/AJnYI/g6N15snhiExZ+Jm4NKHM4FizjHVPZj6cjesdCcTV7a4PshVb8SG
19PFUkatKNDZ0e2hx8dmi6X587yZII0P3SuOpoL5ZrnFz0NcKLv2Nr/UpaBs
waYjtKx+lMlfWT5sRPhMclWftXYnbkW+83gw2wFJcrZ8BJGTizL6vGoiy/Fz
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
InvYqB5WNyg7nZ9ykE461nftCAWtp+2Yvh2jYF9KKtVcy0JvbsafwPIBzDi8
bBVe6IXF6A77nY40nN1/JGqorBlCHj+L1K63IzXYOJx5iAv7FbmGK0JpaNXQ
NZxNJcHoRIOktiMbxrH7gn+dJ0JE482Tes4gDixKZbmdYaC+wMbjZSABIsvz
KY4HCZAyph181UfGbKtQ3pu9lTDtsrW0FW7E11iyf8ANLkQzTrT8eUIHk/5Z
oJHnKzvr9tDmp9jYuWew5lY3CTt+He+8TB3GW1qYs/IBJtaar56YTuvF80ec
++ZbepBRjLvtMlR8EbTu8Xheh1mDmX+v7rdg5nPRfTEBLoTn4giNkVQc26Q2
5tdFhBsla1ayjYVGssfOgKphxP9dqnCd0Y+6s3zN3Jt0iJ70WbvcsgMueVsd
V+l1olT4cudFfxKyb988/PZxAVR+7om55leLo5wT9Q8/8ebBLWqjTRyP8yLK
vz/eTsQY2XiXvgELcgNqSdG+gzDv+xxHvcXjamaaenYWDX8XUgXChVqxPFhi
e21fO0ycDqilGXBhww+tumYeV8sP98eRSf+j473jenz/93+ShKLSpCTSokFJ
i0MqGhJFZCQNiaRIyEgkpal6GUkaRDSIhtLU3nuP594NFZLkd70/379//x63
5+15Xtd5ndfxuN+7VZBoWBYwH8LBcdpfl/UlJPwdIxUsOT+InphQtbYoJhr/
zBxZdLgLsYPjj49+6oRx7ytW2CYqVtAPGAY9/EZ4jGdPOqsejjYy+XwBPNxa
pHnpVBnRi4qnEvfkUSB8QWmMIcNFouZVq1vEObI9JjlU5jSMr4u+5Z32YuGi
0LbnGr5EPz9dlJv7tBv3PnouW36ZhpX75m/o9tYiUtmj3MS+GdNjvxjKogRv
+C+cG+ygYc8hkTi7ZWQsOLPwU940G+EHKXSzoGHoywvbJHv0Q4pjvCEwgwFL
81+JDYrtaDtQXZP0rR2br2TJygwRPu59VW7Brq9o021ge52tgZrsyqC+ZzyY
Ljiw+ZMeE54vI/0611KB3GA72dNciM7Gfv7NpCA9viPK+sgIzqjPR7MGWLBb
PnjT728fqC8T1KMf9CC9PSVET5wO8hmby+6+DUiL5SZJLmpFbnzYoIg64R3t
fj1/D9DR+vmXl/BVMs462N3bCw7MY4/W6S8kIfSnf2LT+QHscNp2qmItE6Xy
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
WBL7dMWQX4HfYwy3bf8pbZegYcw5x7+dw0L65/Pln1TGMPxm+uGSHQSn7Qhx
087hQFjsjpJX9yjCLnctblRmwWvBjj/H+rgwCjT57CY3it1v3fSSCa6W+f/o
OO9wLN8/7hMqKlG2EGmIVGYJb2SUEC2hSGkplErKrG/R0BIqKhoiFJVVsvfe
e917XpSUiPJcv+N5/n3+5Lgd132e5+d8v18vx33ci7YGNb0j4PmoVV1UioB8
YRIrIpSPuD1bg27HEAiQWub/zoeH1Xsoa9rTCEQKNVhYDPKhpT2wa/VeDhwf
btvZ8JdAZbpR25MPXMTfoOwbDGDCdZtIfCTZ7+v3Za8z1mWhXUD+0av/ff+1
OVH8u5KHhXO/anq5UjERdzhK3XQQ0yc48B5hY/ECS0n55C7sPxrvFhDWCX/l
Jw2WOXTMuVs4P7CyEvWvpVPyXRpw6tb/3c+Mjv/bd/Nf/d/9DBz6Hn7s/TAu
WFTFSj0n53bEXk7DeBTU6d5bc3OpcBZLEJEpZyHHfcn5MY9RyF3QNRV6SIeu
hOR7jzAOGqwqdyuRr//JuFwy/J5cx91rAXRjHiKfG40m8kdwVCnTb/IzG2st
LEN93vLh9VqSYuEygqnHuuUet8nnT+n/jThP4P12+VsxbgQKE8ZeSJM50a05
KyvzgcDPFZO6O2k83Np5abg3kEDndH369k0EHsfMPnj3k4Pe+yECYRwCm1Ob
cs3NeDgY/P26J7l/6/87m+FB8l7D3zNiL9XZWNPm+MVrER0Vkw+FgvfyITf5
zUm7joaMhPTwheuHITK3qk2Y5L2FUuWUzYW96JQ3qIk61I1QM00eY4qBnsnP
6lvn1eP+zDUiqbgZK4TudB5/ScPAf14FLflsRE5+bJwh96dB747Un3gGIhUg
o+/ChbiQu1uZ1CiMmhqGeE0smIQepTxay0flZg77XckIsleq9Zg/5kDlSt4n
XzECd7o7ReQpBJIK1+w0juWhv2+7SRS5vr0uvVZpdXy47Njzu6qRjy1f1Bz2
XSQgfGbyw64Jkk/Mb9+aU0y+zkFDU5rk2akUoSvXX7JhVvBzrpXgCPZmpDsd
mE9yRuPm7bkfGFiTGM+9QvJq/5ffUneNmchc8+DSjqNUZKblFymQvGodf5K7
sGIYt6LDzd6Y9+PnzKkSOZJXH38zuy4W3A7m4TKWbEw77NXsggtP0mBdHpcp
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
QhSN9V80FwP9hmU578ngl3opi3kMY6D3iNa3WBbMNQ/kkCx64VpaJe5V0APm
yl0T2lsJDv97UkEx4jNeb148sZvRBNMX2362/O99X453r3h9ZKLttZHWpXdU
zL7xz7VZzYPuRQmV/82RC+c+tcNuFMPNLUER59mI+mTau9JnAAfPGPj0JhK9
KV/7s86HjgSJ47+nuxqgaa9uNWbZhi4nl/qvS/nwe7PZjtJFh8H1gYkrIhQ4
3Q4u2jjFwdWN/63Xvz6KZqEXsw/dhpDyc++51FdMrOcUfrwv24Xj045tr6q6
IBkbLldP+AdZ7FfXkr3vUcmV1mQ416MME/OiH/Jx11O5Ql+dhesq1fxEGRou
5uaWxTrwoKet2R3LpEJrO9XIyXoMOyeW5IiT2FgwHCHh/msQMxbXfhdF9ENi
0nDk53IGPL1axNW8m3F22adZ9/kdcA0jHR9U5mOFexhP6CgDS7M05Pf6U7Dm
aLDm24NcMLtCYwP/jeHlo0DVFg8SgqKzlozJsPAtSvzcSEU3lIqzV5LKu/FX
eqMjPYyKdaO1SQHdn0DfZaXnsqURk/kFh+ud+Bj9ZBpleJjwoJVG5btMqLDl
TJWbdHJx6tOfUK/LFETl6TY4uIzAYv3KyM6/LIifMqpMpPXB90/20XNZvUg4
/z6O3EbD7gvqspk766B1csjENr0FsnHCKwt5PGR8HPTdeIQO0YIi+XupZISN
SFsVZnOw1JM88OLvMJbazkZ7OQ6iMY5SJqfBRKP1RrvJGx14HjJ4Z6i2E1MW
Bp4MFQpcy3v4oUXFSD999V12Wi1STm46cLOLh3sLXEOfi9JB9jxHFrhAhr2u
R1fiLQ60lvHiCi4M40Kq4ttQoUFMdXkNqIkxYbvG2TygqR2Ds7WKy107cb4+
5fO9E3xsF3zzX9gqJoJFNe78R/jf/qLNScuKuaiknk/MIj4/vubX7lULR0A/
Phs0r5eFY0oOZG9T4jnMtxXeZ9wL6fX1qbb3aIjMGr57e1ctgg4bnL002wzV
K0fu34rj42hd6OIgURa2dt3Z+3qaih/6jKZJfR7i1e6wz2RSUX1M8JvO7CjS
rt5dsb6Q/b93emxwcxtETkqy0nnlfuxYkHi3tI+O5/ds53wuNSHL9myF/dl2
3JSLrzknx8ek1Yd/kGXgacGV3HumFFyP2czrlePCfXj8Zs6FMayvvSVrKULC
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
sw71ua/KGgs4WHSr+cLDah4/u9b7/AYRRqvepPacY2FD5OY65f5hCOzQCTZ6
PYCpFJvOs300BPzXIbX/vzb8HFGL2CXUCT/WNpN3R7hI6ItufcegQVuF9mH+
NwlfZ/jyFv/HRp2c1tmtDCL+bPga7582AoWKpjanN7x+jJmzxrteuPYWiU8w
ezDm9WHmkyUFsi2uAxc31mCvkdm9KLNmqLAGhkkhXOxM77/+cYiO18u3GG1p
JaNwhWhmpAoHgiuOfnliR4Zuo9fa8Sdj8HoV+tozlIlHRuJ5j5oGcMJ1cE6t
tQ9hIZtw7QkVuwrI6X/cGwHS8bcK+W2Q2i7jZSbFxVvHgmy7CSpSI76O7lQg
wWtNqpT0EjbYpkXtGBjDHdS2nE4bQqG7dfF/tXRc/Gobw7zVhX/ts2dPz3WB
fK/PZAkfGS1qS85suvYVDYFsGYfmenQv0ZuJ9+SgxS5F6PkqCgJtxXWGIwn4
dWtdUME0EyPmdjKT1kN4OaWddaO0H2ffa4bt3cXrxwNDjNQlLdivlBsiuL0D
aevXPZHX5r1n+jNFTQ8aPnPaduVGk+DfmSUZYMnGO+K/bV9UiTDctyScnD4M
B98Nn5/uYkBySay03toedNTtLZua6sb2lUvCvvD8OS1cJuasZyVSzhcPtkU2
IiM7d9M3Ny7Mztr9N3Ced1+FOoc3OZPhaa5E+kBiQ11BIvRaKgmvZb91KKaM
IotklbRoLRNVwrt9Bfb0Q4f/8M/jI73o2HHfbGKagl2L9ESNG+sQNRy1MXNx
K0ju15dumuOg13JDooInFTvG7ug++kwEbT/z00gxC2fe7ixLsx3Flc6mK6PP
ByH8Wd/U1ZqOY8I57iakDtxWHT686R+Pn/2uXnjIyxvTHP+tnJlCxJz6qL5r
SR3Sf7bn6jRwsIWdf2X7JAUvzz/ZpGhPhCzFaV9uAAu/TntIx+0awQ+9Ibt2
0gB6IxpffpijYfroVm7moXbIUkUYI+iEgRjJKuQ4F/FhozgpSEdl91nxNAky
/KdcBo2y2ahx5XyelCTBac9bsyzSCFQs00+41jCgHci06xPrQ7W43RPBLb34
xdd1gOtPwdzpwy4WzTV4Tanq5ytqRn3j7nPxEVw8+Duf8nmWjnjRIlc9Bhk+
fJp6jgYchI6u4pg/IGPCQrLiXc8YEsMqZ0dTebnx57S1iPogpObsGfPC/QgI
L01uK+P53p5nNkfEm1AXcibeXL4dTcUVuQfWc1GVT7bNW0nDYMPBJZ67eRxi
GddTK8VGzhbt3z93EbDjgOtlAcoQJuvVluqQ6QhJ3b31Fa0Lup9/ilToduNQ
s8uBdWpkOKxOXKfUXobYY/mDaoYNMBSv/rXjLgeXbjTdazKkQLnpLYnaSIDg
u6KMwZUsTMgIXj//eQiuH++MvP7ZD1XrwcPbztHw/t83l+3ZLZCKkvod5tqB
LoNtmcv1uci8WN2jEUHDlYPpWc+zSOh1CjCbPM+G6Nok/hWneN5dqn+ijTIM
iTNCRxg2DGxfO7WPFNSDVuv9iu+39WCHVbmeczcZi/bNd4usq0LjZEDqlflG
cGLpth88uTApKgrXuEOHhJdu2+1bZOxdGL/zZZqNhcrx17ntPB9szd6cPDKK
X0NTBUXaTB6kL3sdmdqPPRKD8w1r+/BpV63q//t+xWRr1elr9WgX9g2evtIK
VqFr5Q4+LsYb29r7YqmIe2QWt6aDiHdCMQEVLSy4TswveBeO4u3V5S9MCIO4
ofJz2uoqHXUcZoukWScamnM/bNvThXXsuKzV90iQKz74+7/jxTgifeKStl8d
Aj/p91pmcBBsEr6h8gkFi2YPWRXJE7Fxzew7pgkLRynjmUG+w0gyyPwY4TEA
H88OSlkuDaVSZyv5f7Ti45nai/JdHXD6+iyg8yAXAve814030LBn89UREwIJ
Ciu0Vn4OZSNd5fB94yIi5N4LGkk7jeCGqOTRw5EMeDd+0Xc27YVqrqRubnYP
msZkSOe2UOD7OVx/9fVqbJPe0NY61ITsP47vt97iwrDNxiPpCx2u4bU/F30i
Y+W18OEsKQ4Sz4/nVmwlw0MEuYvsxuAxS/846c7E1Ca+Dd2uAyiZ+nNxx6M+
GPU2Ppm7TEX34qPtu6obkKBUmPLBtA1nll49f1CUC6+lUs7j7VTYNP4aZwqS
cM3U7pX9FAuHnB3s9/mPIYq85uO980P4/mKtAvsNHXJxw8UMqS4k/BVObynt
QsyhpKWd/SQs+DTG75T4Amu3w8UHT9XD89hWf+YzLiT1HtwK2MHAhGCRl4os
BRxfvwGaPQf6FqXzh8k8L3hG135lSYDZO9/BOwNM/NKtdzL8PogXo5HKm+70
I3ku+uPOVTSUH8nQTT3XjFTizaTy2XasuJxctl2Ni7Td14VkDtOguG2Rco43
CdU5cRY/DdlIjjeSjv9JQFVIXV690zCEcvTnd8gy4FmpbXHoYzdykh++Xp7f
DaYee2D2Nhk9d4b36lVXwHFLkShVrhH1TL49ik5cPLVannjZmI5h383P883I
0NGPZf/XzkbWEZmdErz1tnSQD90+N4r3K/M+7ZxnIKF7qE53qA/+X4e/F7/o
RcQpO/LSZgp88u4YF22ow9O/wQsrE1ow4KyvoM3mIEvTbIXFQSrUWrzV554R
QTiStoaTyUIySzr24Y8RfKopOHbgzCDo+gFb3XfScYbfSk/9Rgc8xIxDOOU8
7g2ezqGqk7AvdfKcVXwBRmxfvR2Pq8WH2T4LZgcHxNVSiwMEqdAMXrpa6zKP
c5bX6kiEsdAn1SSf6zqCwqpKK6F/AxhQPbPBeykdV6tO96QUtENys1jdModO
lFdri42f5II2c+9+hiQdz2s5g994/n9M6g31zGc2NA6L+x3grR9m6rZ92+JR
bF/lye/YxUBK4TlHYZM+tPDfG7tr0ot+yr/lt6IoIO8tevZoYy30Pxq+lZ9o
hl1FkSM7motJ5nLKOyEGBvOLtxnOkDGu6CZqasLBuaEdx9em8PJlg6v3zekx
GOze9zoqj4nxsJg12+0H8XXr/czeLf2Yq5NOmOqiQjCx0KrVpQm3O3YrGZ9o
x4fkzNvV8lzENt+XtF5Pg2v/IzFBCxLO3FYXk5JnYz5qFEWuBHjKZc4e4B/G
t3/xv29O0qG0afcq5tpuSDzmviGf6MYId3/BeiMyan+IOB0NKof9i09MX58G
OPgT4xZFcLBxJP7jMRsK8OhC+UkmAYs7l1g6y7FwXEPdYjFtCNtOLxA0JQbg
TTFZtd6bhqy39zI6/rbgoWvgS8O7PI/JM6be2s1FRsC715mJNFy+dd99ZSEJ
ewdCD2+5xOb5TTo104uIOrXetI/8I5gX+zEl5MjAax3bjKT3Pbi6d7nhbcse
vEsxe6bO5J1XgX2ovncVovb4eSnsaILjcddcMR8uxp7PvDgaQ8dh7t9vmRFk
vJ8p6foyz8b6h7e+ldN5fJbeHVr3ZxS2ctdKo4yYmPnjErirux/edQNK0zp9
SFnf3rpaiwoJq2CXr3X1EGxhPL6V0Yprhcf0S5dwMaK+e/DVSypsnZ8ado0S
cUFjXFO9jwWOz4nVVYxRnN27x5T+bxA1Evl3y4LoOKUtfoZ6sxPXl0aGvD7b
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
fm1yufKQDqLgMF6Wowb/ANzPZsU=
        "]],
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      BaseStyle->(FontSize -> 24),
      DisplayFunction->Identity,
      Epilog->{
        PointSize[0.01], 
        GrayLevel[0], 
        PointBox[{{-1.4073848233366988`, 4.7454305575712635`*^-12}, {
         0., -1.0430885228217173`}, {1.4073848233366988`, 
         4.7454305575712635`*^-12}}], 
        GrayLevel[1], 
        PointBox[{{-9.98696995689712, -0.5109213459230723}, {
         0., -0.02124583096608187}, {9.98696995689712, -0.5109213459230723}}],
         Null},
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{{
         Directive[FontOpacity -> 0, FontSize -> 0], Null}, {
         Directive[
          GrayLevel[0]], Null}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{1, 10}, {30, 10}},
      ImageSize->{Automatic, 350},
      Method->{"ScalingFunctions" -> None},
      PlotRange->{{-11, 11}, {-2, 2}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxl1b1qVEEYxvHBCxBvIIVolztIE1KJ2tmkF6xEvAGxESzExtVGqyAp0gVE
Lf04TCrB4jAKMaC4DAETjDtdbNTds/t/lvdxSQi/vJyPf4bJnL9++9qNMyml
39Pv2U//jC5enn69WI/u5IPXt6ZfH2zey8P44LP8Zf4L+c/f2eeb/Gi4fixf
mHFU5VfD5YfypeGBP+T94f7H8s3hBX/K88/EnNKnjZWysfJynd7oTqY3znuZ
XkwvphfTi+nF9GJ6Mb2YXkxvNL3ZerP1ZuvN1putN1tvtt5svdl6s/Vm683W
m603W29W77vx6pvx6kf1RncyvXHey/RiejG9mF5ML6YX04vpxfRieqNZ32Lr
W2x9i61vsfUttr7F1rfY+hZb32LrW2x9i61vsfUttr7F1reo98pwn331Rncy
vXHey/RiejG9mF5ML6YX04vpxfRieqNTejus91f1RncyvXHey/RiejG9mF5M
L6YX04vpxfRieqNTevZ09vmu3uhOpjfOe5leTC+mF9OL6cX0YnoxvZheTG80
+7fa/q22f6vt32r7t9r+rbZ/q+3favu32v6ttn+r7d9q+7fa/q22f5fn+rmj
rbNHW4fqje5keuO8l+nF9GJ6Mb2YXkwvphfTi+nF9EandHVxH3qjO5neOO9l
ejG9mF5ML6YX04vpxfRiejG90SndX9u5t7ZzrN7oTqY3znuZXkwvphfTi+nF
9GJ6Mb2YXkxvdErvh/9fJ+qN7mR647yX6cX0YnoxvZheTC+mF9OL6cX0Rqd0
d2/zzt7mRL3RnUxvnPcyvZheTC+mF9OL6cX0YnoxvZjeaM6jZudRs/Oo2XnU
7Dxqdh41O4+anUfNzqNm51Gz86jZedTsPGp2HjU7j3jf54v/19t2Pm0v3v/E
5hOZ6x/unj7YPV3+/TDXu/35XMccM/f3537z+WjxPk8W6/FLZv54+Nk0x7F3
eX18/ui/53M98xQ+Ez2f3/jzud8/nLo+zg==
       "], {
        {GrayLevel[0.8], EdgeForm[None], 
         GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
           
           "]]]}, {}, {}, {}, {}},
       VertexColors->CompressedData["
1:eJxTTMoPSmViYGD4CcTMQHysc32ZyPMj9u8uSr9T3r7P/vaiM2wzU17aj4pT
Vzxtz5vJokDx71d9VmkAxfVD1oeMilNf/KLhn6PRQHHxKzG/gnbssz/3vaJ+
zag41cVfbP6y0+HVEftevw1X5x/ZZ186K/xiWeqoOLXFF/fc9Hzx44i9W0zM
v2dM++1r7j80LM8cFae2eFDNMyEx7aP2q1lPW6rd2G//6SrrCa3yUXFqiycJ
/XJX3XTU/kHN3Jd83Aftizq7VnLPGRWntvjCDLkDSs+P2R/z5TWZP/uw/RQ/
lRlZH0bFqS3O4GjgyBlz0v6rsfz/z5dP2HOdlj6jPOfVqDiVxe+0LmFT+HDW
/tGaPzPs3C/aZ+9sP6N35/WoOJXFNyXNsTlx/Iq9HG/1hLJrt+zL2YX/r7J9
OypOZfE+VdbzL1Qe2P/I8X6i+/2J/ZnOx3u/O74bFaey+DrzqceWh76w/5pv
phr39rV9nrbnwjSWt6PiVBZvunX3kx7DW3uHi7Vza5lf2qdfTmKsXvtkVJzK
4jXuvZyG4g/tu46/+i16fav9gr8egpJhR0fFqSw+sU6lGjSO928qD6PK9n32
C3RZOEDjS9QS96l2bjH9DGw/3p6wvr/mnv3FGMPV2Sm3SBbH5X5SxydxmYPL
3pmxB8Hm/JuSDjaHrfEi2Bxc4memNj7PTX9mf+BZ1KfDOhftOx2Wzvyrcwmn
OC5zSHU/LvNxmUOq+3HZCwBOHS+q
        "]],
      AspectRatio->20,
      AxesLabel->{None, None},
      AxesOrigin->{0., 0.},
      DisplayFunction->Identity,
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, {{0, 
           FormBox["0", TraditionalForm]}, {0.8999999999999999, 
           FormBox["0.8999999999999999`", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}, {1.1, 
           FormBox["1.1`", TraditionalForm]}}}, {None, None}},
      FrameTicksStyle->{{None, 
         Directive[
          GrayLevel[0], 24]}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{1, All}, {30, 10}},
      ImageSize->{Automatic, 350},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
        "GridLinesInFront" -> True},
      PlotRange->{{0, 1}, {0, 1.1}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8480073749425983`*^9, 3.848007552036759*^9, {3.84800759600007*^9, 
   3.848007616761182*^9}, {3.848007670278414*^9, 3.848007688338003*^9}, 
   3.8480122859053593`*^9, {3.848012334492971*^9, 3.848012367897327*^9}, {
   3.848012414840439*^9, 3.848012447542674*^9}, 3.848014256438847*^9, 
   3.848014317745894*^9, {3.848014445260004*^9, 3.84801445990067*^9}, {
   3.848014560875296*^9, 3.848014580226561*^9}, 3.848014618196082*^9, {
   3.850948577930583*^9, 3.850948605380928*^9}, {3.850948668158916*^9, 
   3.85094868576677*^9}, {3.850948728072811*^9, 3.850948794461541*^9}, {
   3.85094883346096*^9, 3.850948860435934*^9}, {3.850948893283009*^9, 
   3.850948899349279*^9}, {3.850948929624283*^9, 3.850949025393981*^9}, {
   3.8509490776323643`*^9, 3.850949085325508*^9}, {3.8509492767247467`*^9, 
   3.850949290601623*^9}, {3.850949457496029*^9, 3.850949489764802*^9}, {
   3.850949532589225*^9, 3.8509495492819242`*^9}, 3.8509495810561943`*^9, 
   3.850949616339456*^9, 3.8509498641377*^9, 3.850949897616192*^9, 
   3.8509499489252768`*^9, {3.850950002200441*^9, 3.850950071910206*^9}, 
   3.8509501137284307`*^9, 3.8509501895960417`*^9, 3.850950231800418*^9, 
   3.850950269349284*^9, {3.850950318795117*^9, 3.850950346227985*^9}, 
   3.8509503780758963`*^9, 3.850950422276705*^9, {3.850950472420154*^9, 
   3.850950489327333*^9}, {3.850950631389577*^9, 3.850950727866596*^9}, {
   3.850950814247899*^9, 3.850950836773982*^9}, {3.8509509509637213`*^9, 
   3.850951084754888*^9}, {3.850951136661392*^9, 3.850951160349119*^9}, {
   3.850951271052004*^9, 3.850951299414312*^9}, {3.8509513424764*^9, 
   3.8509513522065907`*^9}, {3.850951383006803*^9, 3.850951425758696*^9}},
 CellLabel->
  "Out[1042]=",ExpressionUUID->"967bb9a1-d8dc-48d1-9d5d-18494aca18c4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"-", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Optimisation", " ", "and", " ", "feasibility"}], 
   "*)"}]}]], "Input",
 CellLabel->
  "In[112]:=",ExpressionUUID->"a5db4890-360d-4d80-8138-505bf28e77b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"broadband", " ", 
     RowBox[{"detection", ":", " ", 
      RowBox[{"optimising", " ", "integrated", " ", "sensitivity"}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"--", 
     RowBox[{">", " ", 
      RowBox[{"un", "-", 
       RowBox[{
       "squeezed", " ", "integral", " ", "is", " ", "bounded", " ", "by", " ",
         "finite", " ", "circulating", " ", "power", " ", "through", " ", 
        "the", " ", "Mizuno", " ", "Limit"}]}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"to", "-", 
     RowBox[{"do", ":", " ", 
      RowBox[{
      "bias", " ", "kernel", " ", "to", " ", "encourage", " ", "more", " ", 
       "broadband", " ", 
       RowBox[{"sens", ".", "?"}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "plotOptimiseBroadband", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotOptimiseBroadband", "[", 
     RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", "Rpd_", ",", 
      RowBox[{"symSRM_:", "True"}], ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
      RowBox[{"\[Chi]RatioMax_:", "0.95"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Chi]thr", "=", 
       RowBox[{"singularityThr", "[", 
        RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<\[Chi] sing. thr. (ratio to \[Omega]s) = \>\"", ",", " ", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"\[Chi]thr", "/", "\[Omega]s"}], ",", "4"}], "]"}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"optiFnInt", "[", 
        RowBox[{"\[Chi]Ratio_", "?", "NumericQ"}], "]"}], ":=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Beta]", " ", 
            RowBox[{"ASDShwRP", "[", 
             RowBox[{
              RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
              RowBox[{"\[Chi]Ratio", " ", "\[Chi]thr"}], ",", 
              RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc",
               ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], 
             "]"}]}], ")"}], 
          RowBox[{"-", "2"}]], ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", 
           RowBox[{"fRange", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"fRange", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"MaxRecursion", "\[Rule]", "10"}], ",", 
         RowBox[{"PrecisionGoal", "\[Rule]", "3"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "4"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"optiSolInt", "=", 
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"optiFnInt", "[", "\[Chi]Ratio", "]"}], ",", 
           RowBox[{"0", "<", "\[Chi]Ratio", "<", "\[Chi]RatioMax"}]}], "}"}], 
         ",", "\[Chi]Ratio"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<broadband optimisation: \[Chi] ratio to sing. thr. = \>\"", ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"\[Chi]Ratio", "/.", 
           RowBox[{"optiSolInt", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "4"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Chi]Ratio", "/.", 
               RowBox[{"optiSolInt", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "-", 
             "\[Chi]RatioMax"}], "]"}], "<", 
           SuperscriptBox["10", 
            RowBox[{"-", "5"}]]}], 
          RowBox[{"(*", "tolerance", "*)"}], ",", 
          "\"\<, at max. ratio allowed\>\"", ",", "\"\<\>\""}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"plotASDShwRP", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Chi]Ratio", "/.", 
                RowBox[{"optiSolInt", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "\[Chi]thr"}], ",", 
             
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Chi]RatioMax", " ", "\[Chi]thr"}], ",", 
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Thin", ",", "Black"}], "]"}], ",", ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Dashed", ",", "Gray"}], "]"}]}], "}"}]}], "]"}], "]"}]}],
      ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"peak", " ", "sensitivity", " ", "optimisation"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotOptimisePeak", "[", 
     RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", "Rpd_", ",", 
      RowBox[{"symSRM_:", "True"}], ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
      RowBox[{"\[Chi]RatioMax_:", "0.95"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Chi]thr", "=", 
       RowBox[{"singularityThr", "[", 
        RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<\[Chi] sing. thr. (ratio to \[Omega]s) = \>\"", ",", " ", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"\[Chi]thr", "/", "\[Omega]s"}], ",", "4"}], "]"}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"optiSol", "=", 
       RowBox[{"NMaximize", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[Beta]", " ", 
              RowBox[{"ASDShwRP", "[", 
               RowBox[{
                RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
                RowBox[{"\[Chi]Ratio", " ", "\[Chi]thr"}], ",", 
                RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", 
                "Tlc", ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}],
                "]"}]}], ")"}], 
            RowBox[{"-", "2"}]], ",", 
           RowBox[{"f", ">", "0"}], ",", 
           RowBox[{"0", "<", "\[Chi]Ratio", "<", "\[Chi]RatioMax"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "\[Chi]Ratio"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<peak sensitivity optimisation: \[Chi] ratio to sing. thr. = \>\"",
         ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"\[Chi]Ratio", "/.", 
           RowBox[{"optiSol", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "4"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Chi]Ratio", "/.", 
               RowBox[{"optiSol", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "-", 
             "\[Chi]RatioMax"}], "]"}], "<", 
           SuperscriptBox["10", 
            RowBox[{"-", "5"}]]}], 
          RowBox[{"(*", "tolerance", "*)"}], ",", 
          "\"\<, at max. ratio allowed\>\"", ",", "\"\<\>\""}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"plotASDShwRP", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Chi]Ratio", "/.", 
                RowBox[{"optiSol", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "\[Chi]thr"}], ",", 
             
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Chi]RatioMax", " ", "\[Chi]thr"}], ",", 
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Thin", ",", "Black"}], "]"}], ",", ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Dashed", ",", "Gray"}], "]"}]}], "}"}]}], "]"}], "]"}]}],
      ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "probe", " ", "frequency", " ", "sensitivity", " ", "optimisation"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotOptimiseProbe", "[", 
     RowBox[{
     "fProbe_", ",", "Tla_", ",", "Tlb_", ",", "Tlc_", ",", "Rpd_", ",", 
      RowBox[{"symSRM_:", "True"}], ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
      RowBox[{"\[Chi]RatioMax_:", "0.95"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Chi]thr", "=", 
       RowBox[{"singularityThr", "[", 
        RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<\[Chi] sing. thr. (ratio to \[Omega]s) = \>\"", ",", " ", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"\[Chi]thr", "/", "\[Omega]s"}], ",", "4"}], "]"}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"optiSol", "=", 
       RowBox[{"NMaximize", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[Beta]", " ", 
              RowBox[{"ASDShwRP", "[", 
               RowBox[{
                RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                RowBox[{"\[Chi]Ratio", " ", "\[Chi]thr"}], ",", 
                RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", 
                "Tlc", ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}],
                "]"}]}], ")"}], 
            RowBox[{"-", "2"}]], ",", 
           RowBox[{"0", "<", "\[Chi]Ratio", "<", "\[Chi]RatioMax"}]}], "}"}], 
         ",", "\[Chi]Ratio"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<probe frequency \>\"", " ", ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"fProbe", ",", "3"}], "]"}], ",", 
        "\"\< Hz sensitivity optimisation: \[Chi] ratio to sing. thr. = \>\"",
         ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"\[Chi]Ratio", "/.", 
           RowBox[{"optiSol", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "4"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Chi]Ratio", "/.", 
               RowBox[{"optiSol", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "-", 
             "\[Chi]RatioMax"}], "]"}], "<", 
           SuperscriptBox["10", 
            RowBox[{"-", "5"}]]}], 
          RowBox[{"(*", "tolerance", "*)"}], ",", 
          "\"\<, at max. ratio allowed\>\"", ",", "\"\<\>\""}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"plotASDShwRP", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
            ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Chi]Ratio", "/.", 
               RowBox[{"optiSol", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "\[Chi]thr"}], ",", 
            RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
            ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Chi]RatioMax", " ", "\[Chi]thr"}], ",", 
            RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
            ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Thin", ",", "Black"}], "]"}], ",", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Dashed", ",", "Gray"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", 
          SuperscriptBox["10", "4"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"fProbe", ",", "Red"}], "}"}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "broadband", " ", "optimisation", " ", "against", " ", "kernel"}], ",", 
     " ", 
     RowBox[{"i", ".", "e", ".", " ", "mutriK"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotOptimise\[Mu]tricK1", "[", 
     RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", "Rpd_", ",", 
      RowBox[{"symSRM_:", "True"}], ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", " ", 
          SuperscriptBox["10", "3"]}], ",", 
         RowBox[{"4", " ", 
          SuperscriptBox["10", "3"]}]}], "}"}]}], ",", 
      RowBox[{"\[Chi]RatioMax_:", "0.95"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Chi]thr", "=", 
       RowBox[{"singularityThr", "[", 
        RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<\[Chi] sing. thr. (ratio to \[Omega]s) = \>\"", ",", " ", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"\[Chi]thr", "/", "\[Omega]s"}], ",", "4"}], "]"}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"ASDShCrit", " ", "=", " ", 
       RowBox[{"5", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "25"}]]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"from", " ", "Miao", " ", "et", " ", "al"}], ",", " ", 
        "2018"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"k1", "=", 
       RowBox[{"1", "/", "9"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"integrand", "[", 
        RowBox[{
         RowBox[{"f_", "?", "NumericQ"}], ",", 
         RowBox[{"\[Chi]Ratio_", "?", "NumericQ"}]}], "]"}], ":=", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Z", "=", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["ASDShCrit", 
              RowBox[{"-", "2"}]]], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"ASDShwRP", "[", 
                RowBox[{
                 RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"\[Chi]Ratio", " ", "\[Chi]thr"}], ",", 
                 RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", 
                 "Tlc", ",", "Rpd", ",", "True", ",", "False", ",", 
                 "symSRM"}], "]"}], 
               RowBox[{"-", "2"}]], "-", 
              SuperscriptBox["ASDShCrit", 
               RowBox[{"-", "2"}]]}], ")"}]}]}], "}"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Z", "<", "0"}], ",", "Z", ",", 
           RowBox[{"Z", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "k1"}], " ", "Z"}], "]"}]}]}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"optiFnInt", "[", 
        RowBox[{"\[Chi]Ratio_", "?", "NumericQ"}], "]"}], ":=", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          RowBox[{"fRange", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "-", 
          RowBox[{"fRange", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]], 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"integrand", "[", 
           RowBox[{"f", ",", "\[Chi]Ratio"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"fRange", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"fRange", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"MaxRecursion", "\[Rule]", "10"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "3"}], ",", 
          RowBox[{"AccuracyGoal", "\[Rule]", "4"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"optiSolInt", "=", 
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"optiFnInt", "[", "\[Chi]Ratio", "]"}], ",", 
           RowBox[{"0", "<", "\[Chi]Ratio", "<", "\[Chi]RatioMax"}]}], "}"}], 
         ",", "\[Chi]Ratio"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<\[Mu]tricK1 optimisation: \[Chi] ratio to sing. thr. = \>\"", ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"\[Chi]Ratio", "/.", 
           RowBox[{"optiSolInt", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "4"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Chi]Ratio", "/.", 
               RowBox[{"optiSolInt", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "-", 
             "\[Chi]RatioMax"}], "]"}], "<", 
           SuperscriptBox["10", 
            RowBox[{"-", "5"}]]}], 
          RowBox[{"(*", "tolerance", "*)"}], ",", 
          "\"\<, at max. ratio allowed\>\"", ",", "\"\<\>\""}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"plotASDShwRP", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Chi]Ratio", "/.", 
                RowBox[{"optiSolInt", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "\[Chi]thr"}], ",", 
             
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Chi]RatioMax", " ", "\[Chi]thr"}], ",", 
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Thin", ",", "Black"}], "]"}], ",", ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Dashed", ",", "Gray"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10", ",", 
           SuperscriptBox["10", "5"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", ",", "Red"}], "}"}], "&"}], "/@", "fRange"}], ",", 
           
           RowBox[{"{", "}"}]}], "}"}]}], "]"}], "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8389319738453007`*^9, 3.8389321555053387`*^9}, {
   3.8389322352249813`*^9, 3.838932237643272*^9}, {3.838932279803762*^9, 
   3.838932287031493*^9}, {3.838932325893104*^9, 3.838932436235195*^9}, {
   3.83893247362187*^9, 3.838932484579322*^9}, {3.838932542532151*^9, 
   3.838932564191246*^9}, {3.838933021956428*^9, 3.838933123364362*^9}, {
   3.8389332084083157`*^9, 3.838933208883883*^9}, {3.8389335802944717`*^9, 
   3.838933594447268*^9}, {3.838933666315538*^9, 3.838933666846182*^9}, {
   3.838933886174268*^9, 3.838933904543795*^9}, 3.838934424798189*^9, {
   3.8389346367024727`*^9, 3.838934637068562*^9}, {3.8389346803614492`*^9, 
   3.838934873643566*^9}, 3.8389350801106358`*^9, {3.838935193108636*^9, 
   3.8389352412753363`*^9}, {3.838935398868618*^9, 3.8389354008204107`*^9}, {
   3.8389354608153152`*^9, 3.838935485770495*^9}, {3.838935828799415*^9, 
   3.8389358308745413`*^9}, {3.838948165700429*^9, 3.8389481659564734`*^9}, 
   3.838948656007753*^9, {3.838948735448895*^9, 3.8389487369857473`*^9}, 
   3.838948792136237*^9, {3.838950104074198*^9, 3.838950128385983*^9}, {
   3.839032806776524*^9, 3.839032813305482*^9}, {3.839035570474435*^9, 
   3.83903557247885*^9}, 3.839035698763916*^9, {3.839035942451255*^9, 
   3.839035959569323*^9}, {3.8390360028051023`*^9, 3.839036024466522*^9}, {
   3.839277830853528*^9, 3.839277830910915*^9}, {3.83927803930261*^9, 
   3.839278059333344*^9}, {3.839278285898387*^9, 3.839278343249638*^9}, {
   3.8392787111961393`*^9, 3.839278712210651*^9}, {3.839617769454565*^9, 
   3.839617769508966*^9}, {3.8396179005690823`*^9, 3.8396179313802233`*^9}, {
   3.839618035639719*^9, 
   3.8396180478930597`*^9}},ExpressionUUID->"abf09643-bfdb-4f92-bb70-\
da43f15e7d0f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "optimisation", " ", "and", " ", "plotting", " ", "is", " ", "slow"}], 
    ",", " ", 
    RowBox[{
    "but", " ", "faster", " ", "for", " ", "Li", " ", "et", " ", "al"}], ",", 
    " ", 
    RowBox[{"2020", " ", "parameter", " ", 
     RowBox[{"set", "?"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"plotOptimiseProbe", "[", 
    RowBox[{
    "2500", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", "Rpd0", ",", 
     "False"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"plotOptimisePeak", "[", 
    RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "Rpd0", ",", "False"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.838933923682683*^9, 3.8389340425621367`*^9}, {
   3.8389340823202677`*^9, 3.838934158943657*^9}, {3.8389341893722973`*^9, 
   3.8389341973169813`*^9}, {3.838934524201665*^9, 3.83893453167605*^9}, {
   3.838934794010911*^9, 3.838934801104147*^9}, {3.8389358933402767`*^9, 
   3.838935894650889*^9}, {3.83895011418978*^9, 3.8389501144413633`*^9}, {
   3.8390338846453943`*^9, 3.8390338867786093`*^9}, {3.839034128918816*^9, 
   3.8390341447486353`*^9}, {3.8390354352959538`*^9, 3.83903547076202*^9}, 
   3.839035966856776*^9, 3.839278066041747*^9, {3.839376991397736*^9, 
   3.839376993933242*^9}, {3.8393770550739613`*^9, 3.8393770664273443`*^9}, {
   3.842577986303362*^9, 
   3.8425779874625*^9}},ExpressionUUID->"6e58ce1c-53b3-4de6-ab4c-\
3967f355f567"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Chi] sing. thr. (ratio to \[Omega]s) = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox["\<\"0.9902\"\>",
     0.9901595194605856,
     AutoDelete->True],
    NumberForm[#, 4]& ]}],
  SequenceForm["\[Chi] sing. thr. (ratio to \[Omega]s) = ", 
   NumberForm[0.9901595194605856, 4]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8389341977870893`*^9, 3.838934239210639*^9}, 
   3.83893448085884*^9, 3.83893453235826*^9, 3.838934594513115*^9, 
   3.838934643805838*^9, 3.8389348152112494`*^9, 3.838934875765163*^9, 
   3.8389358972803593`*^9, 3.8389486786191483`*^9, 3.838950134405905*^9, 
   3.8390331361070747`*^9, {3.839035447159245*^9, 3.8390354728235693`*^9}, 
   3.8392726259998913`*^9, 3.839277571532065*^9, 3.8392778573031263`*^9, {
   3.8392780673624277`*^9, 3.839278079576125*^9}, 3.839358499705789*^9, 
   3.839376947435521*^9, 3.83937699473529*^9, {3.839377055943626*^9, 
   3.8393770668848267`*^9}, 3.839441875346607*^9, 3.839443121880855*^9},
 CellLabel->
  "During evaluation of \
In[89]:=",ExpressionUUID->"e4f76d58-6a3f-46b0-a24b-1dcd56e468d5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"probe frequency \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox["\<\"2500\"\>",
     2500,
     Editable->False],
    NumberForm[#, 3]& ], 
   "\[InvisibleSpace]", "\<\" Hz sensitivity optimisation: \[Chi] ratio to \
sing. thr. = \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox["\<\"0.8743\"\>",
     0.8743129624440219,
     AutoDelete->True],
    NumberForm[#, 4]& ], "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm["probe frequency ", 
   NumberForm[2500, 3], 
   " Hz sensitivity optimisation: \[Chi] ratio to sing. thr. = ", 
   NumberForm[0.8743129624440219, 4], ""],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8389341977870893`*^9, 3.838934239210639*^9}, 
   3.83893448085884*^9, 3.83893453235826*^9, 3.838934594513115*^9, 
   3.838934643805838*^9, 3.8389348152112494`*^9, 3.838934875765163*^9, 
   3.8389358972803593`*^9, 3.8389486786191483`*^9, 3.838950134405905*^9, 
   3.8390331361070747`*^9, {3.839035447159245*^9, 3.8390354728235693`*^9}, 
   3.8392726259998913`*^9, 3.839277571532065*^9, 3.8392778573031263`*^9, {
   3.8392780673624277`*^9, 3.839278079576125*^9}, 3.839358499705789*^9, 
   3.839376947435521*^9, 3.83937699473529*^9, {3.839377055943626*^9, 
   3.8393770668848267`*^9}, 3.839441875346607*^9, 3.839443124142334*^9},
 CellLabel->
  "During evaluation of \
In[89]:=",ExpressionUUID->"c3b013cf-0aec-411b-bf04-d70a98e84778"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
mtsK++/DDAUzf1sr7L/6Uxct/K9aYf91sckc0Ppuhf3X8leOgsEqxn8hzrV5
8Dzjv+KrV4kXvmf8d6RZz8WBncT+G+60au8TCRL7741qE5M78iT2X+4vZc1y
yiT237E6Kw1uFRL77+6yTyWpqiT236tNfqybC0jsv09bqYNnNEnsv1ptmy3G
9Ejsv++u6FYOrSCx/3ZJpftMWJLYf//XL+F1+giJ/Xepa47ftjoS++/xFVHh
F51I7L+11gU3ZBDfaf+d7sp8OormGe2/s8ebCzQkGf/ldek+KPOS8V9WwaaO
fG0r7K+p+ZMVbA8Zf90V0CUtNcT4q1uqW4eHEIn99f7zvGfDMiT2V82yRrW7
iiT21xk9B8MFLBL7ata5DP1zaiT21WN9CpOD6iT21e0hMt4ftUnsq7N6QjvU
FpPYVy3qPNt8TEjsqwHeG/hyXEnsq5O8HBe0LpHYV7v5jdZ9fExiX9VKNDm3
VoDEvtr0SvGny2XGT1c5G49qDllhPy05LvD8kLQV9sswSYPbO64xfvk8cFHD
3k7GLxe9d94vwUtivxzxFhoUkSaxX4pFOWVUKJDYL9/dmrbMQv1G++QH+35l
EVQf2iedibLfgOpD++RAUsnWVMQ32ifNb4XYdeqT2Ccj32X93mFEYp+sStHI
8t9IYp/8MJCYGxdOYp+c3epR2dBCYp/UUu0LSkHno33SQLSaNyaf8cfidV88
w9kZ30v42NwZVc743qETom65E4zvhfxvnDccPY/RvuegWxbiI0di3/vQ75Li
o0Rin3vK1lQthvYT7XOlZq3UPQ0S+1wvp73Ael0S+xxfnmnom6Uk9jlr153m
YEZinwt3+nBFfheJfS7qUaHKeD6Jfc7dK0HX9DSJfa7JzLjKY4DxtZpLrW08
nxhfM86un3Scb4V9y7WSU9gkhfEtU6491RtaGN860B4Q0cdFYt/yGoofG5ck
sW8NBnpvWIP6gfatqi/vT3mgfqD9quvQQvVGNG9ov2o21pgeQfWh/Uo0fd6U
EOoH2q8sgj/JdS4ksV9de9aekoTmMe1X9+YtjYi0JrFfJd55ZXr2OIn9asTk
2jPnTyT2q/KjkpMDpiT2KwU73hLV54xPWV7NlrYWYPyn4KPfp33FjP+Ui8rp
3fjJ+E9F/Y6+BGES+w/XtpTSIlkS+8++K1pm4qgfaL8ZLlg9VYP2A+03amdi
ewnUD7TfPA0WWx6lQ2K/6RnKDdi7hMR+8zTh8LtSILHfLK6/GyG6jcR+Exoc
a/Yji8R+wxlUMZmSRmK/6TGMfvTzD+MvPyoi4+N6rKhjMiE/rwaLwHJfcX2O
r4x/5G3rutzLT2L/8PN7liSE5iPtH2EWgkImaD7SPrFVfdmJBLS/aZ+oFXwZ
thTNP9onLpZ/L/m1iMQ+obZccI+jMYl9wqBX59l7RxL7RO3HscrC8yT2iW3v
p3Ie1ZCUy1mp7FEZUfCamikzQbwWeDa2MsdSDORqKliG4uj8K07Wft4lDsSa
jBQpxMPcFo1qi2QF0PazmJwyJ6m0Gom4iReKEDPkXtO1j8R+QO3QV79ezvD+
Z3Huu+g6hvffZqmO1cOWmPc7QqKb2FYwvD/W93fm31CG9+IHhqKHXjG8X3Iq
OfOcMMP7Z2ueLPfdzPD+5Tmr2M1XGd7veW5WL/GVed8lV/3PTxE9hvezifV9
uz0Z3ltIrNq9/ArD+5oVdd5/XjC8zzhfWXqmm+F9uvSxFYGTDO/jzv7RuMll
jXkvnGyj+2iS4f322ZSEjL8M7/0sw21e1zC811udcZArnOF9Y89ettVGDO/T
VisL2Pcz77taIk8ZFFxmeF/lE90w7MjwfrjFyDp2HsN7D+8tf/0phvfDCV5P
rolZYV4/d9KWkAtjeO3fyeE6mkfi9032O2/3zjYy/P6ntzs0d5jhd/ibi52n
2KwxvxvYYmeKpxh+l48kWrkLWGN+xz26GFn8jeF3WI29mHU2ifkbWfQwcKab
4a/prkKbH2xWmJ/zarkihfwYfpqHerzec4vE72dSsiMdNrxlePqMK3rs+zeG
pzIxGbJmMwxPv65M82Wh+0fzVOyhpNRRQWvM0z7XzlaDcYanbwzjq6NLSMzD
g6G8LyvGrTDPXiypvXoqjsTvL+y8HcTfos/T7y8WEhe8RD8zvAtar+TVNsbw
Llp3hkec0xrzLjPEgPdNMsO7ntTUKFcea8y7u/Fs9062kphXp5qqZg3fM7xK
MZBcLj1hiXnz/BIXZ80Bhje3HB2nuzNI/HwvmJp+Z+Vrhj9t/Ht+1PYx/Mn5
fPOv9xTDnxcBDdvfo/rR/Bmb7E8R5LPG/Hm3MFlx4R+GP+o9JVs2oP1F86NA
Luzy7b9WeP6/OmDe3hVN4udfoZeXZX4hf6Offz0vjqpdbmb4oH/o9qbNowwf
GotbarrYrTEfNj3c39/9jeFDtv6lG4bo+mg+SP4+0WSH9jc93xuFn3+VQ7yn
53OkhEXR2F9mPq+q6lj7Fp2fns9HbnC4XEX9Qs9no8ZnDg/R/mhNLhvVlJcF
y/CAbG5UHyrJRJnNWg4ks1ukNZGfpie5He4LlAdb1VqpWg5rPD+f9nA9ckbz
z+V7VtbBDHmI+nr2htkfZn7QmZ4fdKbnB53p+YGP/78/ej/Sx+n9iL//nz/T
mfZnOtP7g860P+Lf+68/6Uz7FT7ff/1BZ5q3dKbrSeeV16GtK5E5TteHrj99
nM7/B/jvwzk=
      "], {{{}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[1, 0, 0], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{388, 406, 407, 405, 401, 403, 397, 399, 392, 396, 391,
             390, 395, 389, 400, 394, 404, 398, 
            402}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Tiny], 
           GrayLevel[0]], 
          
          LineBox[{1, 98, 50, 146, 26, 122, 74, 167, 2, 99, 51, 147, 27, 123, 
           75, 168, 3, 100, 52, 148, 28, 124, 76, 169, 4, 101, 53, 149, 29, 
           125, 77, 170, 5, 102, 54, 150, 30, 126, 78, 171, 6, 103, 55, 31, 
           127, 79, 7, 104, 56, 32, 128, 80, 8, 105, 57, 151, 33, 129, 81, 9, 
           106, 58, 152, 34, 130, 82, 10, 107, 59, 153, 35, 131, 83, 11, 108, 
           60, 154, 36, 132, 84, 12, 109, 61, 155, 37, 133, 85, 13, 110, 62, 
           156, 38, 134, 86, 14, 111, 63, 157, 39, 135, 87, 15, 112, 64, 158, 
           40, 136, 88, 16, 113, 65, 159, 41, 137, 89, 17, 114, 66, 160, 42, 
           138, 90, 18, 115, 67, 161, 43, 139, 91, 19, 116, 68, 162, 44, 140, 
           92, 172, 20, 117, 69, 163, 45, 141, 93, 173, 21, 118, 70, 164, 46, 
           142, 94, 174, 22, 119, 71, 165, 47, 143, 95, 175, 23, 120, 72, 166,
            48, 144, 96, 24, 121, 73, 49, 145, 97, 176, 25}]}, 
         Annotation[#, "Charting`Private`Tag$46708#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVy2VWFlAYhdGPFEnpkO5mLgyBAeAQGJOgdHeXgNIlIS3dsPnxrH3We9fN
q/tWWx8UCAQa9F0vWtO4GtWkH/qpZr1qXROK8/GMLXrThrLdJvmF5yxjKwPc
RA6nGM8LlrPt45lbzOU0E/ifFWxnMLeZxxkm8pIdCrF3OKtOdSnUbZdzSrKv
2K0w+y/zOc9kXrNH4fYeC/iLKbxhrz7Z+yzkAlN5yz5F2Acs4iLTeMdK9vMz
D1nMJabznlUcYCT/sYS/mcEHVnOQUTxiKf/wKx85pGj7mMvKtJ84rBj7hCsa
0ahi3U65qiz7mTUc4zs13Elz
           "]]}, 
         Annotation[#, "Charting`Private`Tag$46708#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}], 
           GrayLevel[0.5]], 
          LineBox[CompressedData["
1:eJwVztlWQQEAQNHbp/gDocHUnEqF0DwoSUlFg6IQ+fG2h73WeTyhaqv4MhME
QZmweKDMDrNEiBJjjnkWWCROg0OyvFMhwSNH7PLBNUmaHLNHhxtSPHHCPp9U
SfPMKX1yfHHLiCWm82cMyNOlxphlWpwzpECPO/5Yoc0FvxzwTZ1VXrmkyBrr
bLBJhi3euKLED/dM2OYfebgfug==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$46708#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{0, Small, Small, Small}]], 
          
          LineBox[{388, 402, 398, 404, 394, 400, 389, 395, 390, 391, 396, 392,
            399, 397, 403, 401, 405}]}, 
         Annotation[#, "Charting`Private`Tag$46708#4"]& ]}}], {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> NCache[{{{
          Log[2500], 
          RGBColor[1, 0, 0]}}, {}}, {{{7.824046010856292, 
          RGBColor[1, 0, 0]}}, {}}], FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
     AxesOrigin -> {2.302585092994046, -56.09861278657163}, 
     FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> NCache[{{{
          Log[2500], 
          RGBColor[1, 0, 0]}}, {}}, {{{7.824046010856292, 
          RGBColor[1, 0, 0]}}, {}}], DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True, "ClippingRange" -> {{{2.3025853808171823`, 
        9.210340084153048}, {-56.09861278657163, -49.86907586501895}}, {{
        2.3025853808171823`, 
        9.210340084153048}, {-56.09861278657163, -49.86907586501895}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {2.302585092994046, -56.09861278657163}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"strain sensitivity (NSR)\\n/ \\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\
\\(-1\\)/2\\)]\\) (log scale)\"", TraditionalForm], ""}, {
        FormBox[
        "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"", TraditionalForm], 
        FormBox[
        "\"nondegenerate internal squeezing\\nparameters of Li et al, 2020\"",
          TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{{2500, 
         RGBColor[1, 0, 0]}}, {}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 350, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True}, PlotRange -> NCache[{{
         Log[10], 
         Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, All}], 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\[Omega]s=0.  , \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
         StringForm[
         "\[Chi]/\[Omega]s=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.  ", "100. ", "1000. ", "1000. ", "0.1 "], Editable -> 
         False], FontFamily -> "Monospace", StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\[Omega]s=0.86, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
         StringForm[
         "\[Chi]/\[Omega]s=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.86", "100. ", "1000. ", "1000. ", "0.1 "], Editable -> 
         False], FontFamily -> "Monospace", StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\[Omega]s=0.99, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
         StringForm[
         "\[Chi]/\[Omega]s=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.99", "100. ", "1000. ", "1000. ", "0.1 "], Editable -> 
         False], FontFamily -> "Monospace", StripOnInput -> False], 
       "\"5\[Cross]\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-25\\)]\\)\\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) target \
for 1\[Dash]4 kHz\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    GrayLevel[0]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                  "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.838934882510024*^9, 3.838935904386339*^9, 3.838948685441059*^9, 
   3.838950140837489*^9, 3.839033289358656*^9, 3.839035450674398*^9, 
   3.839035530492825*^9, 3.839272644762444*^9, 3.839277625282682*^9, 
   3.839277920196226*^9, 3.839278077010519*^9, 3.839278146012699*^9, 
   3.8393585017626*^9, 3.839376950049741*^9, 3.839376997417499*^9, {
   3.839377058532744*^9, 3.839377069527934*^9}, 3.839441878297123*^9, 
   3.839443125096282*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"0471dd97-1da9-4bd7-aae9-e55fbb67f116"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Chi] sing. thr. (ratio to \[Omega]s) = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox["\<\"0.9902\"\>",
     0.9901595194605856,
     AutoDelete->True],
    NumberForm[#, 4]& ]}],
  SequenceForm["\[Chi] sing. thr. (ratio to \[Omega]s) = ", 
   NumberForm[0.9901595194605856, 4]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8389341977870893`*^9, 3.838934239210639*^9}, 
   3.83893448085884*^9, 3.83893453235826*^9, 3.838934594513115*^9, 
   3.838934643805838*^9, 3.8389348152112494`*^9, 3.838934875765163*^9, 
   3.8389358972803593`*^9, 3.8389486786191483`*^9, 3.838950134405905*^9, 
   3.8390331361070747`*^9, {3.839035447159245*^9, 3.8390354728235693`*^9}, 
   3.8392726259998913`*^9, 3.839277571532065*^9, 3.8392778573031263`*^9, {
   3.8392780673624277`*^9, 3.839278079576125*^9}, 3.839358499705789*^9, 
   3.839376947435521*^9, 3.83937699473529*^9, {3.839377055943626*^9, 
   3.8393770668848267`*^9}, 3.839441875346607*^9, 3.8394431250985413`*^9},
 CellLabel->
  "During evaluation of \
In[89]:=",ExpressionUUID->"d0ca5749-fda5-4718-b05e-3c67dd7ed23f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"peak sensitivity optimisation: \[Chi] ratio to sing. thr. = \"\
\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox["\<\"0.95\"\>",
     0.95,
     AutoDelete->True],
    NumberForm[#, 4]& ], 
   "\[InvisibleSpace]", "\<\", at max. ratio allowed\"\>"}],
  SequenceForm["peak sensitivity optimisation: \[Chi] ratio to sing. thr. = ", 
   NumberForm[0.95, 4], ", at max. ratio allowed"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8389341977870893`*^9, 3.838934239210639*^9}, 
   3.83893448085884*^9, 3.83893453235826*^9, 3.838934594513115*^9, 
   3.838934643805838*^9, 3.8389348152112494`*^9, 3.838934875765163*^9, 
   3.8389358972803593`*^9, 3.8389486786191483`*^9, 3.838950134405905*^9, 
   3.8390331361070747`*^9, {3.839035447159245*^9, 3.8390354728235693`*^9}, 
   3.8392726259998913`*^9, 3.839277571532065*^9, 3.8392778573031263`*^9, {
   3.8392780673624277`*^9, 3.839278079576125*^9}, 3.839358499705789*^9, 
   3.839376947435521*^9, 3.83937699473529*^9, {3.839377055943626*^9, 
   3.8393770668848267`*^9}, 3.839441875346607*^9, 3.839443126161235*^9},
 CellLabel->
  "During evaluation of \
In[89]:=",ExpressionUUID->"7b30d6a0-2725-4c66-9d3a-c2c5a359b017"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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

      "], {{{}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[1, 0, 0], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{375, 393, 394, 392, 388, 390, 384, 386, 379, 383, 378,
             377, 382, 376, 387, 381, 391, 385, 
            389}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Tiny], 
           GrayLevel[0]], 
          
          LineBox[{1, 98, 50, 146, 26, 122, 74, 167, 2, 99, 51, 147, 27, 123, 
           75, 168, 3, 100, 52, 148, 28, 124, 76, 169, 4, 101, 53, 149, 29, 
           125, 77, 170, 5, 102, 54, 150, 30, 126, 78, 171, 6, 103, 55, 31, 
           127, 79, 7, 104, 56, 32, 128, 80, 8, 105, 57, 151, 33, 129, 81, 9, 
           106, 58, 152, 34, 130, 82, 10, 107, 59, 153, 35, 131, 83, 11, 108, 
           60, 154, 36, 132, 84, 12, 109, 61, 155, 37, 133, 85, 13, 110, 62, 
           156, 38, 134, 86, 14, 111, 63, 157, 39, 135, 87, 15, 112, 64, 158, 
           40, 136, 88, 16, 113, 65, 159, 41, 137, 89, 17, 114, 66, 160, 42, 
           138, 90, 18, 115, 67, 161, 43, 139, 91, 19, 116, 68, 162, 44, 140, 
           92, 172, 20, 117, 69, 163, 45, 141, 93, 173, 21, 118, 70, 164, 46, 
           142, 94, 174, 22, 119, 71, 165, 47, 143, 95, 175, 23, 120, 72, 166,
            48, 144, 96, 24, 121, 73, 49, 145, 97, 176, 25}]}, 
         Annotation[#, "Charting`Private`Tag$47642#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVy1VSA1EURdHGneAuCUNiCAwAqpgZ7m7B3d3d3Vl87Frn3a6O1NRV18YE
QVCvBr1rUxNqVJOa1aJWtelDW5pUqp+v2K5PbWtKae7X7NCXdlToNs103rCS
nfzWroq8Z5jBW4bZxR/tqdh7lpm8Y7d+ta859Sjw7QDzCtn37P0/24dcUJb9
wD7F2kcs4SKz+ch+xdnHLOUSc/jEAcXbJyzjMnP5zEEl2Kcs5wrz+MIIh5jI
M1Zwlfl85bCS7HOuaUTJ3hdc16jGFFWK+yU3VGC/sYrj/AMPFUdE
           "]]}, 
         Annotation[#, "Charting`Private`Tag$47642#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}], 
           GrayLevel[0.5]], 
          LineBox[CompressedData["
1:eJwV0NlWQQEAQNHbp1iKBlMzSoXQPEgDSUUpGiTy/W0Pe63zfELtQfV7JgiC
GmFxT4VtZpkjQpR5FlhkiRhNDsjRpUqcBw7Z4Y0rErQ4Ypd3aiR55Jg9elyT
4okTBuTpc8OIZZ455YcCH9wyZoU2Zwwp8skdf6zS4Zxf9vmizhovXFBinQ02
SZMhyyuXlJmObDBhi3+kYxt2
           "]]}, 
         Annotation[#, "Charting`Private`Tag$47642#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{0, Small, Small, Small}]], 
          
          LineBox[{375, 389, 385, 391, 381, 387, 376, 382, 377, 378, 383, 379,
            386, 384, 390, 388, 392}]}, 
         Annotation[#, "Charting`Private`Tag$47642#4"]& ]}}], {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
     AxesOrigin -> {2.302585092994046, -56.09861278657163}, 
     FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True, "ClippingRange" -> {{{2.3025853808171823`, 
        9.210340084153048}, {-56.09861278657163, -49.86907586501895}}, {{
        2.3025853808171823`, 
        9.210340084153048}, {-56.09861278657163, -49.86907586501895}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {2.302585092994046, -56.09861278657163}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"strain sensitivity (NSR)\\n/ \\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\
\\(-1\\)/2\\)]\\) (log scale)\"", TraditionalForm], ""}, {
        FormBox[
        "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"", TraditionalForm], 
        FormBox[
        "\"nondegenerate internal squeezing\\nparameters of Li et al, 2020\"",
          TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 350, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True}, PlotRange -> NCache[{{
         Log[10], 
         Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, All}], 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\[Omega]s=0.  , \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
         StringForm[
         "\[Chi]/\[Omega]s=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.  ", "100. ", "1000. ", "1000. ", "0.1 "], Editable -> 
         False], FontFamily -> "Monospace", StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\[Omega]s=0.94, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
         StringForm[
         "\[Chi]/\[Omega]s=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.94", "100. ", "1000. ", "1000. ", "0.1 "], Editable -> 
         False], FontFamily -> "Monospace", StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\[Omega]s=0.99, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=100. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
         StringForm[
         "\[Chi]/\[Omega]s=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.99", "100. ", "1000. ", "1000. ", "0.1 "], Editable -> 
         False], FontFamily -> "Monospace", StripOnInput -> False], 
       "\"5\[Cross]\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-25\\)]\\)\\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) target \
for 1\[Dash]4 kHz\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    GrayLevel[0]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                  "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.8389341977870893`*^9, 3.838934239210639*^9}, 
   3.83893448085884*^9, 3.83893453235826*^9, 3.838934594513115*^9, 
   3.838934643805838*^9, 3.8389348152112494`*^9, 3.838934875765163*^9, 
   3.8389358972803593`*^9, 3.8389486786191483`*^9, 3.838950134405905*^9, 
   3.8390331361070747`*^9, {3.839035447159245*^9, 3.8390354728235693`*^9}, 
   3.8392726259998913`*^9, 3.839277571532065*^9, 3.8392778573031263`*^9, {
   3.8392780673624277`*^9, 3.839278079576125*^9}, 3.839358499705789*^9, 
   3.839376947435521*^9, 3.83937699473529*^9, {3.839377055943626*^9, 
   3.8393770668848267`*^9}, 3.839441875346607*^9, 3.8394431270838737`*^9},
 CellLabel->
  "During evaluation of \
In[89]:=",ExpressionUUID->"b4ec50ee-37dd-4c18-af04-71c68dd3f7da"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"printParams", "[", "]"}]], "Input",
 CellChangeTimes->{{3.839617958848846*^9, 3.839617960395555*^9}},
 CellLabel->
  "In[236]:=",ExpressionUUID->"47b8ac6c-1a87-4fad-a5d3-766647e129da"],

Cell[BoxData[
 InterpretationBox["\<\"configuration parameters:\\nparamSetName=Custom \
parameter set, \[Lambda]0=\\!\\(\\*RowBox[{\\\"\\\\\\\"2.\\\\\\\"\\\", \\\"\
\[Times]\\\", SuperscriptBox[\\\"10\\\", \\\"\\\\\\\"-6\\\\\\\"\\\"]}]\\) m, \
Larm=\\!\\(\\*RowBox[{\\\"\\\\\\\"4.\\\\\\\"\\\"}]\\) km, \
Lsrc=\\!\\(\\*RowBox[{\\\"Lsrc\\\"}]\\) m, \
Pcirc=\\!\\(\\*RowBox[{\\\"\\\\\\\"3\\\\\\\"\\\"}]\\) MW, \
Titm=\\!\\(\\*RowBox[{\\\"Titm\\\"}]\\), \
Tsrm=\\!\\(\\*RowBox[{\\\"\\\\\\\"0.046\\\\\\\"\\\"}]\\), M=\\!\\(\\*RowBox[{\
\\\"\\\\\\\"200\\\\\\\"\\\"}]\\) kg\\nderived \
parameters:\\n\\!\\(\\*FractionBox[\\(\[Omega]FSR\\), \\(2  \
\[Pi]\\)]\\)=\\!\\(\\*FractionBox[\\(1\\), \
\\(\[Tau]RoundTripArm\\)]\\)=\\!\\(\\*RowBox[{\\\"\\\\\\\"37.5\\\\\\\"\\\"}]\\\
) kHz, \\!\\(\\*FractionBox[\\(1\\), \
\\(\[Tau]RoundTripSRC\\)]\\)=\\!\\(\\*RowBox[{\\\"\\\\\\\"133.\\\\\\\"\\\"}]\\\
) kHz, \\!\\(\\*FractionBox[\\(\[Gamma]R\\), \\(2  \
\[Pi]\\)]\\)=\\!\\(\\*FractionBox[\\\"\\\\\\\"1\\\\\\\"\\\", \
\\\"\\\\\\\"2\\\\\\\"\\\"]\\) kHz, \\!\\(\\*FractionBox[\\(\[Omega]s\\), \\(2 \
 \[Pi]\\)]\\)=\\!\\(\\*RowBox[{\\\"\\\\\\\"5\\\\\\\"\\\"}]\\) kHz; \
\\!\\(\\*FractionBox[\\(\[Omega]s\\), \\(\[Gamma]R\\)]\\)=\\!\\(\\*RowBox[{\\\
\"\\\\\\\"10\\\\\\\"\\\"}]\\)\"\>",
  StringForm[
  "configuration parameters:\nparamSetName=``, \[Lambda]0=`` m, Larm=`` km, \
Lsrc=`` m, Pcirc=`` MW, Titm=``, Tsrm=``, M=`` kg\nderived parameters:\n\
\!\(\*FractionBox[\(\[Omega]FSR\), \(2  \[Pi]\)]\)=\!\(\*FractionBox[\(1\), \
\(\[Tau]RoundTripArm\)]\)=`` kHz, \!\(\*FractionBox[\(1\), \
\(\[Tau]RoundTripSRC\)]\)=`` kHz, \!\(\*FractionBox[\(\[Gamma]R\), \(2  \[Pi]\
\)]\)=`` kHz, \!\(\*FractionBox[\(\[Omega]s\), \(2  \[Pi]\)]\)=`` kHz; \
\!\(\*FractionBox[\(\[Omega]s\), \(\[Gamma]R\)]\)=``", "Custom parameter set", 
   NumberForm[2.*^-6], 
   NumberForm[4.], 
   NumberForm[$CellContext`Lsrc], 
   NumberForm[3], 
   NumberForm[$CellContext`Titm], 
   NumberForm[0.046], 
   NumberForm[200], 
   NumberForm[37.5, 3], 
   NumberForm[133.42473608833768`, 3], 
   NumberForm[
    Rational[1, 2], 3], 
   NumberForm[5, 3], 
   NumberForm[10]],
  Editable->False]], "Print",
 CellChangeTimes->{3.83961796065766*^9},
 CellLabel->
  "During evaluation of \
In[236]:=",ExpressionUUID->"294ec63b-5a20-48fe-9bfc-201126ca0dba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotOptimiseBroadband", "[", 
  RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "Rpd1", ",", "False", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", "0.99"}], "]"}]], "Input",
 CellChangeTimes->{{3.839377133004155*^9, 3.839377133692834*^9}, {
  3.83961777612607*^9, 3.839617819988051*^9}, {3.839618100174468*^9, 
  3.8396181021372557`*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"9bfc2b58-2c73-4188-b9ea-f393a81380cd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Chi] sing. thr. (ratio to \[Omega]s) = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox["\<\"0.9992\"\>",
     0.9991939532508177,
     AutoDelete->True],
    NumberForm[#, 4]& ]}],
  SequenceForm["\[Chi] sing. thr. (ratio to \[Omega]s) = ", 
   NumberForm[0.9991939532508177, 4]],
  Editable->False]], "Print",
 CellChangeTimes->{3.839278331461512*^9, 3.839278372415666*^9, 
  3.839358503133741*^9, 3.8393770775988407`*^9, 3.839377134035038*^9, 
  3.839617729937357*^9, 3.839617820919559*^9, 3.839617937131281*^9, 
  3.839618102661961*^9},
 CellLabel->
  "During evaluation of \
In[245]:=",ExpressionUUID->"b0ff79f0-db17-4ff5-8d6d-7ef44ff41578"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.839618130193615*^9},
 CellLabel->
  "Out[245]=",ExpressionUUID->"c52479f9-b97f-419b-996c-cad047e84fd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"setConfigParamsCustom", "[", 
  RowBox[{
   RowBox[{"2.", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]]}], 
   RowBox[{"(*", "m", "*)"}], ",", 
   RowBox[{"4.", " ", 
    SuperscriptBox["10", "3"]}], 
   RowBox[{"(*", "m", "*)"}], ",", "None", ",", " ", 
   RowBox[{"3", " ", 
    SuperscriptBox["10", "6"]}], 
   RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", ",", "400", 
   RowBox[{"(*", "kg", "*)"}], ",", "None", ",", 
   RowBox[{"2", "\[Pi]", " ", "500"}], ",", 
   RowBox[{"2", "\[Pi]", " ", "5000"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotOptimise\[Mu]tricK1", "[", 
  RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "Rpd1", ",", "False", ",", 
   RowBox[{"{", 
    RowBox[{"1000", ",", "4000"}], "}"}], ",", "0.98"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8392780699441023`*^9, {3.83927867937953*^9, 3.839278679602572*^9}, {
   3.8393771370017557`*^9, 3.839377137769272*^9}, 3.8396180024498053`*^9, {
   3.839618169052668*^9, 3.8396182201121387`*^9}, {3.8396183266402693`*^9, 
   3.8396183616879463`*^9}, {3.839618524352333*^9, 3.839618532191481*^9}},
 CellLabel->
  "In[262]:=",ExpressionUUID->"c2ccb358-37e2-4ef4-bfd7-eca9fcd336ea"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Chi] sing. thr. (ratio to \[Omega]s) = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox["\<\"0.9992\"\>",
     0.9991939532508177,
     AutoDelete->True],
    NumberForm[#, 4]& ]}],
  SequenceForm["\[Chi] sing. thr. (ratio to \[Omega]s) = ", 
   NumberForm[0.9991939532508177, 4]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8392781665031013`*^9, 3.8392786803720407`*^9, 3.839278718362266*^9, 
   3.839358522724415*^9, 3.839618015907798*^9, 3.8396180713254223`*^9, {
   3.839618171389823*^9, 3.839618220709148*^9}, {3.839618331451092*^9, 
   3.8396183624104033`*^9}, 3.8396185329132032`*^9},
 CellLabel->
  "During evaluation of \
In[262]:=",ExpressionUUID->"4d973331-8a82-414a-902f-ec1aa04befb7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Mu]tricK1 optimisation: \[Chi] ratio to sing. thr. = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox["\<\"0.9663\"\>",
     0.9663280402758443,
     AutoDelete->True],
    NumberForm[#, 4]& ], "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm["\[Mu]tricK1 optimisation: \[Chi] ratio to sing. thr. = ", 
   NumberForm[0.9663280402758443, 4], ""],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8392781665031013`*^9, 3.8392786803720407`*^9, 3.839278718362266*^9, 
   3.839358522724415*^9, 3.839618015907798*^9, 3.8396180713254223`*^9, {
   3.839618171389823*^9, 3.839618220709148*^9}, {3.839618331451092*^9, 
   3.8396183624104033`*^9}, 3.83961853940501*^9},
 CellLabel->
  "During evaluation of \
In[262]:=",ExpressionUUID->"d7cd0cbd-0021-4c6f-a740-52b2ac2ab229"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
      
      "], {{{}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[1, 0, 0], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{388, 406, 407, 405, 401, 403, 397, 399, 392, 396, 391,
             390, 395, 389, 400, 394, 404, 398, 
            402}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Tiny], 
           GrayLevel[0]], 
          
          LineBox[{1, 98, 50, 146, 26, 122, 74, 168, 2, 99, 51, 147, 27, 123, 
           75, 169, 3, 100, 52, 148, 28, 124, 76, 170, 4, 101, 53, 149, 29, 
           125, 77, 171, 5, 102, 54, 150, 30, 126, 78, 6, 103, 55, 31, 127, 
           79, 7, 104, 56, 151, 32, 128, 80, 8, 105, 57, 152, 33, 129, 81, 9, 
           106, 58, 153, 34, 130, 82, 10, 107, 59, 154, 35, 131, 83, 11, 108, 
           60, 155, 36, 132, 84, 12, 109, 61, 156, 37, 133, 85, 13, 110, 62, 
           157, 38, 134, 86, 14, 111, 63, 158, 39, 135, 87, 15, 112, 64, 159, 
           40, 136, 88, 16, 113, 65, 160, 41, 137, 89, 17, 114, 66, 161, 42, 
           138, 90, 18, 115, 67, 162, 43, 139, 91, 19, 116, 68, 163, 44, 140, 
           92, 172, 20, 117, 69, 164, 45, 141, 93, 173, 21, 118, 70, 165, 46, 
           142, 94, 174, 22, 119, 71, 166, 47, 143, 95, 175, 23, 120, 72, 167,
            48, 144, 96, 24, 121, 73, 49, 145, 97, 176, 25}]}, 
         Annotation[#, "Charting`Private`Tag$210645#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVy1VWA1EQQMFBg7s7W2IJLCCwNdxdg4Xg7u7uVnzcU939ZmrrG+rCcUEQ
NKpJL9rQlJrVola1qV0detWmppXs5wt26k1bynObYYiXLGcX37WtfPssU3jF
CnbzQzsqsM8xldesZA8/tauoevWlPc0rzTc37NO39lXoFmM6b9mvHx2oyG2B
GbzjgH51qGK3RWbynlUcZMAjlHCJWXzg0P+T+ZilXGY2H1nNYcbzhGVcYQ6f
OKIE8ylXNapE+xnXNKZxTWhSSd7Oua5c8zNrGOEfDrlG/Q==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$210645#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}], 
           GrayLevel[0.5]], 
          LineBox[CompressedData["
1:eJwVzVc7ggEAQOHPT0l2WdkiFNkrWyRlZmTLLPnjXhfv85y7EyqUM7cNQRAU
CYkjZhmlkTBNNNNCK23kmSPONZu0c8w8r4xxwxZVOiiwQIVx/ufb1IhQZJE3
EpTZ4YcoJywxwR27dHLKMu9Mcs8eXZyxwgdTPLBPN+es8kmSR7L0cMEaX6R4
4oA6vVyyzjfTPHNIjBIZZuijnwEGGWKYKzZI80KOX0b4A2obIjA=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$210645#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{0, Small, Small, Small}]], 
          
          LineBox[{388, 402, 398, 404, 394, 400, 389, 395, 390, 391, 396, 392,
            399, 397, 403, 401, 405}]}, 
         Annotation[#, "Charting`Private`Tag$210645#4"]& ]}}], {}, {}}, {
    Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> NCache[{{{
          Log[1000], 
          RGBColor[1, 0, 0]}, {
          Log[4000], 
          RGBColor[1, 0, 0]}}, {}}, {{{6.907755278982137, 
          RGBColor[1, 0, 0]}, {8.294049640102028, 
          RGBColor[1, 0, 0]}}, {}}], FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
     AxesOrigin -> {2.302585092994046, -56.668307013948805`}, 
     FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> NCache[{{{
          Log[1000], 
          RGBColor[1, 0, 0]}, {
          Log[4000], 
          RGBColor[1, 0, 0]}}, {}}, {{{6.907755278982137, 
          RGBColor[1, 0, 0]}, {8.294049640102028, 
          RGBColor[1, 0, 0]}}, {}}], DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True, "ClippingRange" -> {{{2.3025853808171823`, 
        9.210340084153048}, {-56.668307013948805`, -49.24952033348044}}, {{
        2.3025853808171823`, 
        9.210340084153048}, {-56.668307013948805`, -49.24952033348044}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {2.302585092994046, -56.668307013948805`}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"strain sensitivity (NSR)\\n/ \\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\
\\(-1\\)/2\\)]\\) (log scale)\"", TraditionalForm], ""}, {
        FormBox[
        "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"", TraditionalForm], 
        FormBox[
        "\"nondegenerate internal squeezing\\nparameters of Custom parameter \
set\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{{1000, 
         RGBColor[1, 0, 0]}, {4000, 
         RGBColor[1, 0, 0]}}, {}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 350, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True}, PlotRange -> NCache[{{
         Log[10], 
         Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, All}], 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\[Chi]Thr=0.  , \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=75.  ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=100.  ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
         StringForm[
         "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.  ", "75.  ", "1000. ", "100.  ", "0.1 "], Editable -> 
         False], FontFamily -> "Monospace", StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\[Chi]Thr=0.96, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=75.  ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=100.  ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
         StringForm[
         "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.96", "75.  ", "1000. ", "100.  ", "0.1 "], Editable -> 
         False], FontFamily -> "Monospace", StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\[Chi]/\[Chi]Thr=0.98, \[Phi]=+\[Pi]/2      ; \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, a\\)]\\)=75.  ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=1000. ppm, \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=100.  ppm, \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
         StringForm[
         "\[Chi]/\[Chi]Thr=``, \[Phi]=+\[Pi]/2      ; \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``", "0.98", "75.  ", "1000. ", "100.  ", "0.1 "], Editable -> 
         False], FontFamily -> "Monospace", StripOnInput -> False], 
       "\"5\[Cross]\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-25\\)]\\)\\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) target \
for 1\[Dash]4 kHz\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    GrayLevel[0]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                  "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.8392781665031013`*^9, 3.8392786803720407`*^9, 3.839278718362266*^9, 
   3.839358522724415*^9, 3.839618015907798*^9, 3.8396180713254223`*^9, {
   3.839618171389823*^9, 3.839618220709148*^9}, {3.839618331451092*^9, 
   3.8396183624104033`*^9}, 3.8396185398969603`*^9},
 CellLabel->
  "During evaluation of \
In[262]:=",ExpressionUUID->"cf5c0279-0db0-4c84-be2a-73e829556047"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1853, 1023},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 254, 6, 44, "Text",ExpressionUUID->"45536b2d-a4a5-4af5-902b-e0c4b447a39d"],
Cell[815, 28, 192, 3, 44, "Text",ExpressionUUID->"ff483bee-ee34-4fed-95df-f190376ecfd3"],
Cell[1010, 33, 16704, 463, 1201, "Input",ExpressionUUID->"51ce2a0c-08ec-488b-af85-ece07d7a9c69"],
Cell[CellGroupData[{
Cell[17739, 500, 18452, 492, 1428, "Input",ExpressionUUID->"474bcc37-a9a4-474e-993f-fb10ea120e2b"],
Cell[36194, 994, 1864, 31, 28, "Message",ExpressionUUID->"600500a9-5a97-4de0-a6b8-0bf97763c484"],
Cell[38061, 1027, 1834, 30, 28, "Message",ExpressionUUID->"5c7e1896-cc4b-4be3-a662-f1c2a1f2b5c8"],
Cell[39898, 1059, 1864, 31, 28, "Message",ExpressionUUID->"91984429-c9c4-4186-9b41-95c1e2b04331"],
Cell[41765, 1092, 1863, 31, 28, "Message",ExpressionUUID->"d4c5ecf5-a590-4a9d-b594-26aed10b2031"],
Cell[43631, 1125, 1864, 31, 28, "Message",ExpressionUUID->"abb7d8a9-4a77-4524-9519-3c8be967dfb9"],
Cell[45498, 1158, 1792, 29, 28, "Message",ExpressionUUID->"41741870-9c1d-4b88-b92f-f20bfd61a260"],
Cell[47293, 1189, 1834, 30, 28, "Message",ExpressionUUID->"7dee70c6-fc45-484c-b273-5d876707d13f"],
Cell[49130, 1221, 1866, 31, 28, "Message",ExpressionUUID->"ed7be683-b838-4651-be79-1c28d9b8da3c"],
Cell[50999, 1254, 1864, 31, 28, "Message",ExpressionUUID->"2333edf4-0990-4ede-ba05-6f33586048dd"],
Cell[52866, 1287, 1832, 30, 28, "Message",ExpressionUUID->"9217bbcd-5b43-4b62-83f6-bd3feeebd99b"],
Cell[54701, 1319, 1862, 30, 28, "Message",ExpressionUUID->"e25633bc-92f5-4db7-9159-e95d887bf3a7"],
Cell[56566, 1351, 1862, 30, 28, "Message",ExpressionUUID->"cf025bca-cceb-4622-a9b6-c0e941c330f9"],
Cell[58431, 1383, 1862, 30, 28, "Message",ExpressionUUID->"76429e47-7f8f-4c2b-a3c2-0d74895cfcdc"],
Cell[60296, 1415, 1793, 29, 28, "Message",ExpressionUUID->"50e12088-de5b-4471-9243-54ce36210c2b"],
Cell[62092, 1446, 1833, 30, 28, "Message",ExpressionUUID->"725020ea-bd08-4fa9-8c2d-2a2c70fd9cf1"],
Cell[63928, 1478, 1861, 30, 28, "Message",ExpressionUUID->"4c7c1a26-043a-4fb7-a570-d71e8b699c9a"],
Cell[65792, 1510, 1862, 30, 28, "Message",ExpressionUUID->"6ce7c501-b790-4e4d-9f2e-1c616d5db574"],
Cell[67657, 1542, 1862, 30, 28, "Message",ExpressionUUID->"59af48cf-c707-4cdb-98bd-3accfb6ce2c0"],
Cell[69522, 1574, 1793, 29, 28, "Message",ExpressionUUID->"16fbaecc-6259-48f1-b022-b3c403581f87"],
Cell[71318, 1605, 1833, 30, 28, "Message",ExpressionUUID->"a20986ff-4cc0-49a3-9fe5-8f4fa189847a"],
Cell[73154, 1637, 1862, 30, 28, "Message",ExpressionUUID->"01586d7a-88df-4118-ad82-c40d846facbf"],
Cell[75019, 1669, 1861, 30, 28, "Message",ExpressionUUID->"9872cb06-71b3-472b-b479-fb367fc41c1a"],
Cell[76883, 1701, 1833, 30, 28, "Message",ExpressionUUID->"803795ee-4ca9-4525-b376-61979f1e7cb8"],
Cell[78719, 1733, 1845, 30, 28, "Message",ExpressionUUID->"6caa3bfc-0a6f-4b67-b1f2-eec9ad9737a7"],
Cell[80567, 1765, 1833, 30, 28, "Message",ExpressionUUID->"05785bf5-0dfe-42f2-8bf2-7afe365d1bb7"],
Cell[82403, 1797, 1835, 30, 28, "Message",ExpressionUUID->"6c18f29e-d18b-440c-bf90-83f6d87cf5c1"],
Cell[84241, 1829, 1845, 30, 28, "Message",ExpressionUUID->"bf4cc7f6-8eaa-4da5-878a-cb6ef8e6fdc2"],
Cell[86089, 1861, 1845, 30, 28, "Message",ExpressionUUID->"65b3cdea-8f97-48e1-b570-c7f0065f9dad"],
Cell[87937, 1893, 1845, 30, 28, "Message",ExpressionUUID->"02215f86-b813-4bc7-809f-b17308c7123e"],
Cell[89785, 1925, 1793, 29, 28, "Message",ExpressionUUID->"5d7b3656-445a-43b0-92be-c1f39b91a786"],
Cell[91581, 1956, 1835, 30, 28, "Message",ExpressionUUID->"2729147a-7f3a-493f-b53f-97e645363f96"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93453, 1991, 2973, 71, 178, "Input",ExpressionUUID->"30f0d068-9672-4682-bcd1-c84a629aa724"],
Cell[96429, 2064, 2440, 55, 64, "Print",ExpressionUUID->"c22dc943-e600-426a-98a8-6046cf440c5d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98906, 2124, 6743, 167, 571, "Input",ExpressionUUID->"6fe9231a-e423-450e-8ffd-ff95966f8692"],
Cell[105652, 2293, 3396, 83, 117, "Output",ExpressionUUID->"04aabf19-f5e2-491d-881c-ebdb471494ce"],
Cell[109051, 2378, 614, 12, 30, "Print",ExpressionUUID->"b4f11ea0-044a-4440-bb46-d4583417526f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109702, 2395, 6649, 164, 489, "Input",ExpressionUUID->"60642c49-28eb-4952-a9b6-24849b5cb4d1"],
Cell[116354, 2561, 9019, 244, 180, "Output",ExpressionUUID->"3185aa4e-3374-407f-a748-3a8a36f29d33"],
Cell[125376, 2807, 2423, 59, 48, "Output",ExpressionUUID->"4c005290-1d56-4c14-85f6-af0326c7d863"],
Cell[127802, 2868, 597, 8, 44, "Output",ExpressionUUID->"f6d7a623-4974-4b55-9792-d1252be697fb"],
Cell[128402, 2878, 596, 8, 44, "Output",ExpressionUUID->"1a1f24fe-0f8e-4dac-ae38-60521065869a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129035, 2891, 2516, 56, 302, "Input",ExpressionUUID->"ee811092-1183-4cbd-819b-c4d0c7953167"],
Cell[131554, 2949, 3721, 90, 81, "Output",ExpressionUUID->"036fef26-5d1d-44c9-aaf0-0ff5f19dac87"],
Cell[135278, 3041, 1731, 49, 48, "Output",ExpressionUUID->"4f758ef7-6c78-42eb-acfe-bded3faed1d9"],
Cell[137012, 3092, 152, 2, 44, "Output",ExpressionUUID->"7e55c2d4-eb5c-4a07-86b9-1d668fef61e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137201, 3099, 3720, 90, 109, "Input",ExpressionUUID->"1a62276a-51d9-4e5e-a02e-94f74778753a"],
Cell[140924, 3191, 4083, 95, 81, "Output",ExpressionUUID->"ffd8a735-a873-4462-b49b-2b379fce0736"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145044, 3291, 12196, 311, 1306, "Input",ExpressionUUID->"0b50e370-1d2e-4524-a566-c0cce9087db0"],
Cell[157243, 3604, 5691, 141, 83, "Output",ExpressionUUID->"71062ed1-2ea1-4fa9-95ec-ed57ea445467"],
Cell[162937, 3747, 5875, 141, 114, "Output",ExpressionUUID->"070a001a-5ce3-45e7-960d-0e0f4b15c4b2"],
Cell[168815, 3890, 1221, 21, 28, "Message",ExpressionUUID->"62b912c4-b9a9-4c61-bff3-49e9ad5e2833"],
Cell[170039, 3913, 1222, 21, 28, "Message",ExpressionUUID->"29ebb4d4-bd03-4652-8763-526cfa80448f"],
Cell[171264, 3936, 1222, 21, 28, "Message",ExpressionUUID->"3fde0a9f-1b0e-40ee-975d-373101440ce5"],
Cell[172489, 3959, 1153, 20, 28, "Message",ExpressionUUID->"a536a637-f167-426b-b09b-3ea32db727ee"],
Cell[173645, 3981, 1195, 21, 28, "Message",ExpressionUUID->"99b3f5f3-203c-4fbe-ad33-823058e8cf4b"],
Cell[174843, 4004, 1193, 21, 28, "Message",ExpressionUUID->"24886a47-79df-491f-b1f6-6b8a2aad6d6f"],
Cell[176039, 4027, 1222, 21, 28, "Message",ExpressionUUID->"32d58bcf-0496-4f76-bcbb-eb4dbb9e55f3"],
Cell[177264, 4050, 1192, 21, 28, "Message",ExpressionUUID->"85fa9e65-2367-4003-ad36-c7b84c82909b"],
Cell[178459, 4073, 1222, 21, 28, "Message",ExpressionUUID->"89a02e79-7929-4c22-872e-39cd2fdcc3f3"],
Cell[179684, 4096, 1222, 21, 28, "Message",ExpressionUUID->"49d20ced-ed91-4dcc-90ae-1c5239681152"],
Cell[180909, 4119, 1153, 20, 28, "Message",ExpressionUUID->"70e8a904-958c-46a6-978a-a15cac783a38"],
Cell[182065, 4141, 1195, 21, 28, "Message",ExpressionUUID->"4b8359b8-8f01-435f-9139-f10cd9fa570b"],
Cell[183263, 4164, 17201, 440, 303, "Output",ExpressionUUID->"ef9a9607-9c1c-48d5-ae8a-544827941032"],
Cell[200467, 4606, 5877, 141, 114, "Output",ExpressionUUID->"a7bd5f36-f874-435e-bc76-0668812e368b"],
Cell[206347, 4749, 1067, 19, 30, "Print",ExpressionUUID->"e3fda81f-173a-4222-a195-d97a063b72da"],
Cell[207417, 4770, 1218, 21, 28, "Message",ExpressionUUID->"36f3410f-bc89-4cb2-bbf1-95d0d3ea2c75"],
Cell[208638, 4793, 1218, 21, 28, "Message",ExpressionUUID->"d682de6c-2f8e-43be-88bd-f002ed7d8c39"],
Cell[209859, 4816, 1189, 21, 28, "Message",ExpressionUUID->"52f9a26b-1fda-4a17-b891-141a645fb055"]
}, Open  ]],
Cell[211063, 4840, 87232, 2102, 8133, "Input",ExpressionUUID->"eabb38b1-4c8c-427b-a6f1-9b7e0c3e871a"],
Cell[CellGroupData[{
Cell[298320, 6946, 4198, 83, 339, "Input",ExpressionUUID->"88ebc2e7-dd84-4907-b15a-fa0cd14e3ede"],
Cell[302521, 7031, 4161, 72, 134, "Print",ExpressionUUID->"f2ed7e13-5d40-434d-90a9-83514eb13fb2"],
Cell[306685, 7105, 107905, 2037, 706, "Output",ExpressionUUID->"5e09794d-2a96-43f3-bdf4-4557a94277bf"]
}, Open  ]],
Cell[414605, 9145, 1193, 29, 160, "Input",ExpressionUUID->"209a6386-5244-45e9-8323-4028f6e8cff4"],
Cell[415801, 9176, 1064, 26, 131, "Input",ExpressionUUID->"d6949277-6182-4c16-bf82-3529a30bce11"],
Cell[CellGroupData[{
Cell[416890, 9206, 5103, 121, 434, "Input",ExpressionUUID->"46874195-3581-4ea5-b6d3-b716dfe3fd58"],
Cell[421996, 9329, 159444, 2923, 635912, "Output",ExpressionUUID->"57ba49d4-97de-4cff-b5e8-603d05eca57e"]
}, Closed]],
Cell[CellGroupData[{
Cell[581477, 12257, 6102, 141, 427, "Input",ExpressionUUID->"1c819ce3-a6af-482b-a396-09b7a4b304ca"],
Cell[587582, 12400, 158780, 2902, 635912, "Output",ExpressionUUID->"86f360dd-5704-4ceb-97fe-4a2d7e0129e6"]
}, Closed]],
Cell[CellGroupData[{
Cell[746399, 15307, 4742, 113, 399, "Input",ExpressionUUID->"ce6cef14-ee09-451f-ba38-f6b7580e5bca"],
Cell[751144, 15422, 157215, 2878, 635912, "Output",ExpressionUUID->"c3e17922-b298-4dc5-aa29-d062f9e68728"]
}, Closed]],
Cell[CellGroupData[{
Cell[908396, 18305, 3283, 83, 312, "Input",ExpressionUUID->"a2211593-81bb-4d73-a788-3d0dcb3b2efc"],
Cell[911682, 18390, 155533, 2849, 635912, "Output",ExpressionUUID->"45118f6f-97ee-45ab-a27b-8f8fb7b82b3e"]
}, Closed]],
Cell[1067230, 21242, 3594, 81, 253, "Input",ExpressionUUID->"99ab4c44-622c-4095-a02f-1c9cf2c691bb"],
Cell[CellGroupData[{
Cell[1070849, 21327, 275831, 4658, 1711, "Input",ExpressionUUID->"9f736451-d92e-4103-8f1c-c2e093c38685"],
Cell[1346683, 25987, 3171, 59, 134, "Print",ExpressionUUID->"b72b67d1-f24b-4367-878e-2e92a91d7867"],
Cell[1349857, 26048, 41711, 813, 323, "Output",ExpressionUUID->"edcb2d1d-b316-4c71-a290-bc18c6d9a3ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1391605, 26866, 4339, 112, 465, "Input",ExpressionUUID->"55fa506e-ecfe-42da-bc8a-b1bd0aab6c61"],
Cell[1395947, 26980, 418, 10, 30, "Print",ExpressionUUID->"d2bc14d1-1c45-4449-8702-e3fd1aa8ad00"],
Cell[1396368, 26992, 39954, 798, 295, "Output",ExpressionUUID->"8462c7de-138b-4609-890e-be4298e8bd13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1436359, 27795, 11410, 275, 906, "Input",ExpressionUUID->"3defe545-0e93-4379-a632-8bb4174d048f"],
Cell[1447772, 28072, 45461, 899, 776, "Output",ExpressionUUID->"95f74cf4-4b3d-4d3b-975d-8751a65f67e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1493270, 28976, 7744, 195, 735, "Input",ExpressionUUID->"d4436af8-c7f6-4c89-a918-02b0f27771a0"],
Cell[1501017, 29173, 44610, 889, 776, "Output",ExpressionUUID->"1fac70d0-08c9-4742-ac8a-b650d45f7a0b"]
}, Open  ]],
Cell[1545642, 30065, 3622, 89, 346, "Input",ExpressionUUID->"ff2cdeaf-ddfe-40bf-9443-9bef721ee675"],
Cell[1549267, 30156, 1909, 47, 164, "Input",ExpressionUUID->"993df0b6-f8fe-4b02-adf9-de81cd56502f"],
Cell[1551179, 30205, 1020, 23, 98, "Input",ExpressionUUID->"08cf331e-0caa-4217-95af-ee723b93c1b8"],
Cell[1552202, 30230, 2084, 42, 156, "Input",ExpressionUUID->"6f89864b-cc61-4a72-b3fa-48050eeeb5a7"],
Cell[1554289, 30274, 18506, 439, 1320, "Input",ExpressionUUID->"74395ae9-21ab-4be4-95b6-12d3b7df7666"],
Cell[CellGroupData[{
Cell[1572820, 30717, 3274, 74, 320, "Input",ExpressionUUID->"24d54f1a-861b-467f-b5a7-0ab8f2298c59"],
Cell[1576097, 30793, 45082, 871, 324, "Output",ExpressionUUID->"94989f61-0911-4b3f-a4b3-058c66c5ca38"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1621216, 31669, 38768, 855, 2934, "Input",ExpressionUUID->"0965fdd5-b70c-4675-b9cb-c0cff4c32991"],
Cell[1659987, 32526, 9612, 193, 525, "Output",ExpressionUUID->"03e479a5-e389-4d7d-93f1-b8579bbb10fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1669636, 32724, 20790, 472, 1954, "Input",ExpressionUUID->"1fc45ae0-6255-4c50-aa7c-d825532ddd9d"],
Cell[1690429, 33198, 4014, 78, 79, "Print",ExpressionUUID->"05e70862-e65d-4aa7-8c32-4bbda63ed40c"],
Cell[1694446, 33278, 38441, 677, 512, "Output",ExpressionUUID->"af88a90d-f5c2-478f-90e7-5170a6083933"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1732924, 33960, 15689, 357, 1559, "Input",ExpressionUUID->"14098373-6585-46eb-a38a-7d66b980b77d"],
Cell[1748616, 34319, 648682, 10697, 770, "Output",ExpressionUUID->"967bb9a1-d8dc-48d1-9d5d-18494aca18c4"]
}, Open  ]],
Cell[2397313, 45019, 2313, 69, 107, "Input",ExpressionUUID->"a5db4890-360d-4d80-8138-505bf28e77b8"],
Cell[2399629, 45090, 23499, 560, 3234, "Input",ExpressionUUID->"abf09643-bfdb-4f92-bb70-da43f15e7d0f"],
Cell[CellGroupData[{
Cell[2423153, 45654, 1460, 31, 153, "Input",ExpressionUUID->"6e58ce1c-53b3-4de6-ab4c-3967f355f567"],
Cell[CellGroupData[{
Cell[2424638, 45689, 1133, 23, 46, "Print",ExpressionUUID->"e4f76d58-6a3f-46b0-a24b-1dcd56e468d5"],
Cell[2425774, 45714, 1436, 31, 46, "Print",ExpressionUUID->"c3b013cf-0aec-411b-bf04-d70a98e84778"]
}, Open  ]],
Cell[2427225, 45748, 32926, 650, 504, "Output",ExpressionUUID->"0471dd97-1da9-4bd7-aae9-e55fbb67f116"],
Cell[CellGroupData[{
Cell[2460176, 46402, 1135, 23, 46, "Print",ExpressionUUID->"d0ca5749-fda5-4718-b05e-3c67dd7ed23f"],
Cell[2461314, 46427, 1226, 24, 46, "Print",ExpressionUUID->"7b30d6a0-2725-4c66-9d3a-c2c5a359b017"],
Cell[2462543, 46453, 32558, 639, 487, "Print",ExpressionUUID->"b4ec50ee-37dd-4c18-af04-71c68dd3f7da"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2495150, 47098, 208, 4, 60, "Input",ExpressionUUID->"47b8ac6c-1a87-4fad-a5d3-766647e129da"],
Cell[2495361, 47104, 2302, 46, 209, "Print",ExpressionUUID->"294ec63b-5a20-48fe-9bfc-201126ca0dba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2497700, 47155, 473, 9, 353, "Input",ExpressionUUID->"9bfc2b58-2c73-4188-b9ea-f393a81380cd"],
Cell[2498176, 47166, 714, 18, 267, "Print",ExpressionUUID->"b0ff79f0-db17-4ff5-8d6d-7ef44ff41578"],
Cell[2498893, 47186, 160, 3, 401, "Output",ExpressionUUID->"c52479f9-b97f-419b-996c-cad047e84fd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2499090, 47194, 1198, 26, 678, "Input",ExpressionUUID->"c2ccb358-37e2-4ef4-bfd7-eca9fcd336ea"],
Cell[CellGroupData[{
Cell[2500313, 47224, 776, 19, 267, "Print",ExpressionUUID->"4d973331-8a82-414a-902f-ec1aa04befb7"],
Cell[2501092, 47245, 838, 19, 267, "Print",ExpressionUUID->"d7cd0cbd-0021-4c6f-a740-52b2ac2ab229"],
Cell[2501933, 47266, 32913, 652, 2870, "Print",ExpressionUUID->"cf5c0279-0db0-4c84-be2a-73e829556047"]
}, Open  ]]
}, Open  ]]
}
]
*)

