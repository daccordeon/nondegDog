(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1855812,      34345]
NotebookOptionsPosition[   1851718,      34277]
NotebookOutlinePosition[   1852086,      34293]
CellTagsIndexPosition[   1852043,      34290]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
sWLC from Li et at, 2020
Re-viewing calculation
Lossless first, then lossy\
\>", "Text",
 CellChangeTimes->{{3.834797040711691*^9, 3.834797069039122*^9}, {
  3.8351208439461184`*^9, 
  3.83512084812578*^9}},ExpressionUUID->"075d40ea-fa8d-4f2b-babd-\
8770a0fbd10e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"poles", " ", "of", " ", "transfer", " ", "functions"}], ",", " ", 
    RowBox[{"shared", " ", "by", " ", "signal", " ", "and", " ", "noise"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Kappa]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]R", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Re", "[", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "I"}], " ", "\[Gamma]R"}], "+", 
              RowBox[{"I", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[Gamma]R", "2"], "+", 
                  RowBox[{"4", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Chi]", "2"], "-", 
                    SuperscriptBox["\[Kappa]", "2"]}], ")"}]}]}], ")"}], 
                RowBox[{"1", "/", "2"}]]}]}], "2"], "]"}], ",", 
           RowBox[{"Im", "[", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "I"}], " ", "\[Gamma]R"}], "+", 
              RowBox[{"I", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[Gamma]R", "2"], "+", 
                  RowBox[{"4", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Chi]", "2"], "-", 
                    SuperscriptBox["\[Kappa]", "2"]}], ")"}]}]}], ")"}], 
                RowBox[{"1", "/", "2"}]]}]}], "2"], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Re", "[", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "I"}], " ", "\[Gamma]R"}], "-", 
              RowBox[{"I", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[Gamma]R", "2"], "+", 
                  RowBox[{"4", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Chi]", "2"], "-", 
                    SuperscriptBox["\[Kappa]", "2"]}], ")"}]}]}], ")"}], 
                RowBox[{"1", "/", "2"}]]}]}], "2"], "]"}], ",", 
           RowBox[{"Im", "[", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "I"}], " ", "\[Gamma]R"}], "-", 
              RowBox[{"I", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[Gamma]R", "2"], "+", 
                  RowBox[{"4", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Chi]", "2"], "-", 
                    SuperscriptBox["\[Kappa]", "2"]}], ")"}]}]}], ")"}], 
                RowBox[{"1", "/", "2"}]]}]}], "2"], "]"}]}], "}"}]}], "}"}], 
       ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<poles of lossless transfer function\\nunstable when Im[\
\[CapitalOmega]]\[GreaterEqual]0\\n\!\(\*FractionBox[\(\[Chi]\), \
\(\[Kappa]\)]\)=``\>\"", ",", 
          FractionBox["\[Chi]", "\[Kappa]"]}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Chi]", ",", "0"}], "}"}], ",", "0", ",", 
       RowBox[{"2", "\[Kappa]"}], ",", "0.1"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.834797072193462*^9, 3.8347971126938047`*^9}, {
  3.834797155053739*^9, 3.834797238999207*^9}, {3.834797426907981*^9, 
  3.834797428058433*^9}, {3.834797492169059*^9, 3.834797617490972*^9}, {
  3.834797647546322*^9, 3.834797725607292*^9}, {3.834797759469356*^9, 
  3.834797815352064*^9}, {3.835050112908222*^9, 3.835050113989367*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"17151575-c0ee-4630-b295-3e5603dfe84f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Chi]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Chi]$$], 0}, 0, 2, 0.1}}, Typeset`size$$ = {
    282., {158., 166.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Chi]$2140$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Chi]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Chi]$$, $CellContext`\[Chi]$2140$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[{{
          
          Re[((-I) $CellContext`\[Gamma]R + 
            I ($CellContext`\[Gamma]R^2 + 
               4 ($CellContext`\[Chi]$$^2 - $CellContext`\[Kappa]^2))^(1/2))/
           2], 
          
          Im[((-I) $CellContext`\[Gamma]R + 
            I ($CellContext`\[Gamma]R^2 + 
               4 ($CellContext`\[Chi]$$^2 - $CellContext`\[Kappa]^2))^(1/2))/
           2]}, {
          
          Re[((-I) $CellContext`\[Gamma]R - 
            I ($CellContext`\[Gamma]R^2 + 
              4 ($CellContext`\[Chi]$$^2 - $CellContext`\[Kappa]^2))^(1/2))/
           2], 
          
          Im[((-I) $CellContext`\[Gamma]R - 
            I ($CellContext`\[Gamma]R^2 + 
              4 ($CellContext`\[Chi]$$^2 - $CellContext`\[Kappa]^2))^(1/2))/
           2]}}, PlotRange -> {{-2, 2}, {-3, 2}}, AspectRatio -> 1, ImageSize -> 
        Small, PlotStyle -> PointSize[Medium], PlotLabel -> 
        StringForm[
         "poles of lossless transfer function\nunstable when Im[\
\[CapitalOmega]]\[GreaterEqual]0\n\!\(\*FractionBox[\(\[Chi]\), \(\[Kappa]\)]\
\)=``", $CellContext`\[Chi]$$/$CellContext`\[Kappa]]], 
      "Specifications" :> {{{$CellContext`\[Chi]$$, 0}, 0, 2, 0.1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{372., {219., 228.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.835822557125505*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"29c8d744-edc6-4ca7-9b5b-95b69c471cd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"sensitivity", " ", "curve"}], ",", " ", 
    RowBox[{
     RowBox[{"using", " ", "values", " ", "from", " ", "Fig", ".4"}], "-", 
     RowBox[{"5", " ", "in", " ", "Li", " ", "et", " ", "al"}]}], ",", " ", 
    RowBox[{
    "2020", "\[IndentingNewLine]", "they", " ", "choose", " ", "to", " ", 
     "plot", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"2", 
         SuperscriptBox["\[Alpha]", "2"], 
         SubscriptBox["S", "h"]}], 
        SubscriptBox["\[Gamma]", "R"]], ")"}], 
      RowBox[{"1", "/", "2"}]]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"\[Alpha]", ",", "\[Chi]", ",", "\[Kappa]", ",", "\[Gamma]R"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]R", "=", 
     RowBox[{"2", "\[Pi]", " ", "500"}]}], " ", 
    RowBox[{"(*", "Hz", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Kappa]", "=", 
     RowBox[{"10", "\[Gamma]R"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sh", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "\[Chi]_"}], "]"}], ":=", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], "+", 
         SuperscriptBox["\[Chi]", "2"], "-", 
         SuperscriptBox["\[Kappa]", "2"]}], ")"}], "2"], "+", 
      RowBox[{
       SuperscriptBox["\[CapitalOmega]", "2"], 
       SuperscriptBox["\[Gamma]R", "2"]}]}], 
     RowBox[{"4", 
      SuperscriptBox["\[Alpha]", "2"], 
      SuperscriptBox["\[Kappa]", "2"], "\[Gamma]R"}]]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ASDh", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "\[Chi]_"}], "]"}], ":=", 
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{"Sh", "[", 
       RowBox[{"\[CapitalOmega]", ",", "\[Chi]"}], "]"}], "]"}], 
     RowBox[{"1", "/", "2"}]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ASDScon", "[", "\[CapitalOmega]_", "]"}], ":=", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[CapitalOmega]", "2"], "+", 
        SuperscriptBox["\[Gamma]R", "2"]}], 
       RowBox[{"4", 
        SuperscriptBox["\[Alpha]", "2"], "\[Gamma]R"}]], " ", ")"}], 
     RowBox[{"1", "/", "2"}]]}], 
   RowBox[{"(*", "given", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["2", "\[Gamma]R"], ")"}], 
           RowBox[{"1", "/", "2"}]], 
          RowBox[{"ASDScon", "[", 
           RowBox[{"\[CapitalOmega]to\[Gamma]R", " ", "\[Gamma]R"}], "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["2", "\[Gamma]R"], ")"}], 
           RowBox[{"1", "/", "2"}]], 
          RowBox[{"ASDh", "[", 
           RowBox[{
            RowBox[{"\[CapitalOmega]to\[Gamma]R", " ", "\[Gamma]R"}], ",", 
            RowBox[{"\[Chi]", "=", "0"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["2", "\[Gamma]R"], ")"}], 
           RowBox[{"1", "/", "2"}]], 
          RowBox[{"ASDh", "[", 
           RowBox[{
            RowBox[{"\[CapitalOmega]to\[Gamma]R", " ", "\[Gamma]R"}], ",", 
            RowBox[{"\[Chi]", "=", 
             RowBox[{"0.995", "\[Kappa]"}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["2", "\[Gamma]R"], ")"}], 
           RowBox[{"1", "/", "2"}]], 
          RowBox[{"ASDh", "[", 
           RowBox[{
            RowBox[{"\[CapitalOmega]to\[Gamma]R", " ", "\[Gamma]R"}], ",", 
            RowBox[{"\[Chi]", "=", "\[Kappa]"}]}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[CapitalOmega]to\[Gamma]R", ",", "0.15", ",", "35"}], "}"}],
        ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.01", ",", "100"}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<lossless stable nondegenerate 3-mode amplification (sWLC)\\nfor \
different nondegenerate gains \[Chi]\\n\[Kappa]=10\!\(\*SubscriptBox[\(\
\[Gamma]\), \(R\)]\), \!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\) is SRM \
coupling rate\>\""}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", ",", ","}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<angular freq, \!\(\*FractionBox[\(\[CapitalOmega]\), SubscriptBox[\
\(\[Gamma]\), \(R\)]]\) / [\!\(\*FractionBox[\(1\), \
SubscriptBox[\(\[Gamma]\), \(R\)]]\)]Hz (log scale)\>\"", ",", 
       "\"\<strain sensitivity (NSR), (\!\(\*FractionBox[\(2 \
\*SuperscriptBox[\(\[Alpha]\), \(2\)] \*SubscriptBox[\(S\), \(h\)]\), \
SubscriptBox[\(\[Gamma]\), \(R\)]]\)\!\(\*SuperscriptBox[\()\), \
\(1/2\)]\)\\n/ [\!\(\*FractionBox[\(\[Alpha]\), \
SuperscriptBox[SubscriptBox[\(\[Gamma]\), \(R\)], \
\(1/2\)]]\)]\!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) (log scale)\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
     RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"y", "-", 
     RowBox[{
     "axis", " ", "looks", " ", "all", " ", "wrong", " ", "because", " ", 
      "we", " ", "have", " ", "scaled", " ", "to", " ", "\[Alpha]"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ASDScon", "[", 
          RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDh", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"ASDh", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.995", "\[Kappa]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ASDh", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", "\[Kappa]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         FractionBox["10", 
          RowBox[{"2", "\[Pi]"}]], ",", 
         FractionBox[
          SuperscriptBox["10", "5"], 
          RowBox[{"2", "\[Pi]"}]]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<lossless stable nondegenerate 3-mode amplification (sWLC)\\nfor \
different nondegenerate gains \[Chi]\\n\[Kappa]=10\!\(\*SubscriptBox[\(\
\[Gamma]\), \(R\)]\), \!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\) is SRM \
coupling rate\>\""}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", ",", ","}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ",", 
       "\"\<strain sensitivity (NSR), (\!\(\*SuperscriptBox[\(\[Alpha]\), \(2\
\)]\)\!\(\*SubscriptBox[\(S\), \(h\)]\)\!\(\*SuperscriptBox[\()\), \(1/2\)]\)\
\\n/ [\[Alpha]]\!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) (log \
scale)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
     RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQfZp5z3PvSW8cX1SlvAHRAanbPoBofQe5byBa6L49
kw+QXntPgB9Ez/hjJAyi5x2JlAHR12rjFUG08P9EML3PJkgVRF+6V6QNortN
ZgSCxT33hYLoBCbPWBB94M6hOBB9ce/vZBCd/fhqBohm6LqXC6JLev60g+g5
B752g+hU9ZiJIPp71NRpIHoJ+8w5IDpo1vlFIDpg1aYlINp2xfKVYHtObN4M
orWzGraDaI6bSbtBdMbpEydBtNtRn1MgeubVvP37gfTTRw4HQfTyis9MB4C0
3Pa9zCD6w9d0ThCdb/2CB0T/KvgidxBIu1pxy4PoExairWKT3zhWOCl0gmgp
8RtTQfRcOfmZIBoAd1K3eQ==
  "],
 CellLabel->"In[4]:=",ExpressionUUID->"178a6746-8cba-4802-b5cf-1ad1741287d6"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6], 
            Dashing[{Small, Small}]], 
           LineBox[CompressedData["
1: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
X5eodjg=
            "]]}, Annotation[#, "Charting`Private`Tag$2378#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwV13k4VV0XAPB7r3mKSyFDoUiKhAyJtUURSlJEZaj0ImSqkMoQShKNoqJC
FNJsqo00GjInZCZT5uHO9zvfX+f5Pc/e56y9zj57raN89NQ+TwqJRKohk0j/
v8rwHnZNc+FgsSbKzF9rLsx/HOutcOBgK/Mn6/7vhrCwY39tOTh28c6RYcIJ
U3e89ICDnzae/jpImNXRGFS/hoNV+Mg3+wj3vrSMp/xjY41l3wU7Cee66Rb5
XGRjV7F+nzrCW8uEKcZZLGwhe3noBWHnMwr89fdZePNx8V+FhEM3awl73Gbh
APn0rwWE3z+1l4yPY+H3KuXZzwnr3UpVafZi4evVwo5PCW/yUzM/qcnCjiSh
uIeE167efin9HRM77WhQSCQsHhPGz/rGwJOmxRPHCEemr+UVq2LgvlSjwqOE
Z1//JK8qY+BlB3P8PQi3DaqyoYCBeS1MJ1wJP9zZNBeTwsDguLvDmfBG4Q19
Ii7E/X5Qo+wIW6V0lcmP07Hwj32zRoSjMiDQWIyOZcu/rBchPJYZgU7x0/Hm
r4vZQoT3Py4Rf8Kl4c3pXUqChNWzdQuFZ2n4q8FnST7C9c/Wjf9uo+Ee8/Fh
zi4uKLwT9wzNpGGDpOt2s4Tf1fYcfKtLw6q6mnLthCfoF9EmlyVMTxGzzyCc
yoSUn/uW8HveQqsHhHewuX2nbJbw1zd+pumEH5IiY4q2LeGc3+Zr7xLeKxD5
ZfPqJfxwi9zvJMKvl0fa6g0uYrO2vqHzhMM3RR408l/E6WvlLroQFvSMDDCP
XsBvN7pbiBEWqP5d6nFuAf9U6O4VJsy/RpcvMmQBq3y3PSdImLdv6F75iQWs
abSQx0OYe9jm0xabBfzYAU3SrbiwuF9aWn35Ar62bT11mPCQRX6ZaM48XnqJ
XpcTrlrbzt/2fQ67rR1nHCXMe+lNk3vVHPalLFW7Ed45kPxwvHQOy9ylJB4m
/P3RLn1y/hzGOWJUR8INq8o8NybN4S8KWYtWhP/IPqyO3jeH3ybYaWoRpoke
j97UOYtXqTJ0Fy25oLkwxb48MYOfbhCknSN8wsQ1XX9oBkv/kWafJZwZW2s4
+GcGZzte4AQTXi6dFww/Z/DfzdaLJwkz9I+OLrycwa3fz5QcIvwltKXl6NkZ
PGe05upWwm6s4ufbKDP4x5lV5gs7uZDCE+08LTONi412bHElrJh3ZVqeOo2D
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
EkVF/wPotVYG
            "]]}, 
          Annotation[#, "Charting`Private`Tag$2378#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
sZVJ/x96C2Mz
            "]]}, 
          Annotation[#, "Charting`Private`Tag$2378#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAFwRcXppa/r9Q3Ks2/yMSwPS+6uDA
U/6/6fDNLT8iEsDQeXlj50z+vzaU1Rx/IBLAiu+WaDQ//r+O8Hri/hwSwPza
0XLOI/6/gcBiC/4VEsDgsUeHAu39v5qKu836BxLAqF8zsGp//b9HMyDk7esR
wDq7CgI7pPy/7ykRwrizEcAPg3kG/Mj6v7n0oQdMORHAgZ8/cTsN+b/lvbR4
K8YQwOz5f0AvWve/UAFEPl1UEMAIZYBwQ4L1vzqOGO9Drw/AwiTYBtbJ87/W
ZmNAiMMOwC317/2I7PG/++LQdzPADcCRA4JZ8Bfwv+oN+z/kvAzAJM3WNqzF
7L/iZ9A+/sULwIm0KXy4Eem/VYM9oc6zCsAoRSuOwZzlv4VS4aDJrAnAulEh
aTM54r+s9BikXaMIwF3/LgvMF92/8WZynM95B8C6rXjdKjvWv7AqPM82WgbA
uT2FZRaWzb+66haIphYFwJAf1mf09r2/TZNHg0XMA8ABbLhQE82Fv0kydX5W
jALAe/mmh6nRuj/VGLPkQSQBwFLb94mHMss/k1bH4waQ/78u2g2lmxHVP3Ia
JK/Cg/y/zs428yFn3D9coQ1HU235v304AVRXn+E/tNpQ2t139r8w6Obs3FTl
P2C2cPziLvO/qe4duWXL6D8wMLfzPQ3wvy95YLyFMOw/qgdngrvb6b9T4iL+
ZN/vPzQT6ktS++K/HlGbuaOn8T8xEmsDcffYv2EgZZN0hPM/KAqiKrd2xb+r
sbQIkVj1P6bsMUFy8ao/WO6sFy8N9z+AlqRgcZzQP1Qa5cWs5vg/+YeQ3x4O
3z+z8cUNrKD6P7kPFZYLTeY/GIss8fZR/D+Mbh5lGPfsP8wT03MhKP4/iHg1
MgAc8j/jRyKQzd7/P1FzD8dsgPU/pLXYpSzdAEBm1SQfvy/5PwmddFAzuwFA
CiTSZwmi/D9wZdPI35QCQNFTD44PAgBAfyXSEPyAA0DW8LIBRtgBQD87pSVZ
XQRASavgqX+PA0CmSBgKJkwFQB2IT+TLawVAEjdOvJg2BkAPJIQZrT8HQC97
WDtMEQdAqnQyclH0CEDytgKKb/4HQAUdivLuzQpAaEiBpdPbCECGiTfqOIgM
QOG6wo7dtAlADgOeyeg5DkABJaRHV6AKQAN9bp1CCBBA0uRZzRF8C0DEPJOi
3OMQQI7/NO/mfwtAsRaLQrHnEEBKGhARvIMLQJAH/+KF6xBAwU/GVGaLC0Db
VFklL/MQQLC6Mty6mgtAUsXKr4ECEUCOkAvrY7kLQIOnO9smIRFASzy9CLb2
C0DnAEGJcV4RQAZXmCqL+gtASpTeN0ZiEUDCcXNMYP4LQI9D6uYaZhFAOqcp
kAoGDECyUUpGxG0RQCoSlhdfFQxA1cUhChd9EUAI6G4mCDQMQPoc1KW8mxFA
xAJKSN03DEC6ASNbkZ8RQIAdJWqyOwxAv57ZEGajEUD3UtutXEMMQNt1fH0P
qxFA5r1HNbFSDEDv2o1bYroRQKLYIleGVgxAwcEPFDe+EUBe8/14W1oMQOpS
9swLwhFA1Si0vAViDEAo9O8/tckRQJBDj97aZQxAGkUC+onNEUBMXmoAsGkM
QBTCd7Re0RFACHlFIoVtDEBqDFBvM9URQMSTIERacQxAxMWKKgjZEUDIFUVv

            "]]}, 
          Annotation[#, "Charting`Private`Tag$2378#4"]& ]}}, {}, {}}, {
      Ticks -> {
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
       FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
       Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
       AxesOrigin -> {-1.8971198736110233`, -4.605170185988091}, 
       FrameTicks -> {{Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
       All, DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "ClippingRange" -> {{{-1.8971198736110233`, 
          3.5553479502145553`}, {-4.535153249969042, 
          4.461945214004519}}, {{-1.8971198736110233`, 
          3.5553479502145553`}, {-4.535153249969042, 4.461945214004519}}}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 400, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
       FormBox["\"lossless stable nondegenerate 3-mode amplification \
(sWLC)\\nfor different nondegenerate gains \
\[Chi]\\n\[Kappa]=10\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\), \\!\\(\
\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\) is SRM coupling rate\"", 
         TraditionalForm], PlotRange -> 
       NCache[{{-1.8971198736110233`, 
          3.5553479502145553`}, {-4.605170185988091, 
           Log[100]}}, {{-1.8971198736110233`, 
         3.5553479502145553`}, {-4.605170185988091, 4.605170185988092}}], 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {Automatic, Automatic}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         RowBox[{
           SqrtBox[
            FractionBox["2", "\[Gamma]R"]], " ", 
           RowBox[{"ASDScon", "(", 
             RowBox[{"\[CapitalOmega]to\[Gamma]R", " ", "\[Gamma]R"}], 
             ")"}]}], 
         RowBox[{
           SqrtBox[
            FractionBox["2", "\[Gamma]R"]], " ", 
           RowBox[{"ASDh", "(", 
             RowBox[{
               RowBox[{"\[CapitalOmega]to\[Gamma]R", " ", "\[Gamma]R"}], ",", 
               
               RowBox[{"\[Chi]", "=", "0"}]}], ")"}]}], 
         RowBox[{
           SqrtBox[
            FractionBox["2", "\[Gamma]R"]], " ", 
           RowBox[{"ASDh", "(", 
             RowBox[{
               RowBox[{"\[CapitalOmega]to\[Gamma]R", " ", "\[Gamma]R"}], ",", 
               
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.995`", " ", "\[Kappa]"}]}]}], ")"}]}], 
         RowBox[{
           SqrtBox[
            FractionBox["2", "\[Gamma]R"]], " ", 
           RowBox[{"ASDh", "(", 
             RowBox[{
               RowBox[{"\[CapitalOmega]to\[Gamma]R", " ", "\[Gamma]R"}], ",", 
               
               RowBox[{"\[Chi]", "=", "\[Kappa]"}]}], ")"}]}]}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 TagBox[#, HoldForm], ",", 
                 TagBox[#2, HoldForm], ",", 
                 TagBox[#3, HoldForm], ",", 
                 TagBox[#4, HoldForm]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", "10", "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"angular freq, \\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), SubscriptBox[\
\\(\[Gamma]\\), \\(R\\)]]\\) / [\\!\\(\\*FractionBox[\\(1\\), \
SubscriptBox[\\(\[Gamma]\\), \\(R\\)]]\\)]Hz (log scale)\"",
   "\"strain sensitivity (NSR), (\\!\\(\\*FractionBox[\\(2 \\*SuperscriptBox[\
\\(\[Alpha]\\), \\(2\\)] \\*SubscriptBox[\\(S\\), \\(h\\)]\\), \
SubscriptBox[\\(\[Gamma]\\), \\(R\\)]]\\)\\!\\(\\*SuperscriptBox[\\()\\), \
\\(1/2\\)]\\)\\n/ [\\!\\(\\*FractionBox[\\(\[Alpha]\\), \
SuperscriptBox[SubscriptBox[\\(\[Gamma]\\), \\(R\\)], \
\\(1/2\\)]]\\)]\\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) (log \
scale)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
       Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, BaseStyle -> Directive[10], DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.835822557603506*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"5332203a-0052-4221-9ceb-ad5be44613e4"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6], 
            Dashing[{Small, Small}]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$2908#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwd13c8lV8YAHB7XePua96BlIwkI5XukwqpEJGMjCjKLyMkFBItKWVEKZVI
RckeSVZKhUgysgqpRIQofuf0z72f7+dd55z3eZ/zPBw3HysPPh4eHlv0g/9d
DnyNfv6khzvhIP/6x1k6eCuv/6G0o4/rGxn8Cvvu5Rg595p+bqpKXSP2J74m
kwzdQS5fG88/s/0ZAZ+yPnGLx1RfYm/nrXLYYjDEVfmh+gI75KLnxtyXw1yZ
BKkGbGLHumKXyyPc/pwjz7EzWSQ1iuMXbqdKRz12a24pOfj7KFctO6IO++cG
g5qeu1+5h/e11f67/l3J4Y3u37jbKOx/3jZf3CbZ9Z17qSCtGvtAnH50QNIY
99uHN8+wz3CKdTt3/OAaWU5XYQ8qOTRauY9zV9urPMWeyq+XX1E1zi0f167E
FtikfYggP8FNc9R5gr3EXZRU2zrB/XqTUo6tNxXglr7iJ7fCbbwU2/hkX37Y
uZ9cledPS7D3ZxTb6m6c5I4vrirCPuT7gS4SOMk9OhZciB2wbr69M3OSm7Oh
tAA7om39rgixKa7OTbV87FSB+l2NLVPcE19aH2KnNw8zrvP/4g5ljudiZ10T
7fDV/cVNaBT+5wKd7Xb0lF/cNxXKD7Bfu7fZubpMc3uW0+5iF/FzRvriprkT
RZQs7Ou3/jvi8mSaG7VbPPPf+PqEkpxlZ7iWtl9v/1tfR4NWp7YZrrim4w3s
k/d7U9O+znDrH1Vfx56di3br4ZvlDvkv/ef+lLcTjitnuS/Tv17Dfvz+INEx
bpYrQNyTim1tfX27velvbonPUAJ2fcacS6zrb+7YR+Y/r5m2DagM+c2teLfz
8r94SpG6qpjzm1u6pjQe+9vHiJFR0hz3Pc/eOOyYA3ujQrvmuHPyq05h/y5/
mpQzNcd9w4GYf/ErIX+vV2Kem6lsFv3v+Y/amjfCPFd5YWfUv/tPb2aK35nn
TnzfFI5dFrms9NqhP9wtdSeDsN/UNi3ffeoP19HBLfDf/ISPXKOl/+EKHVgX
gC0SVxce1/KHS6377Ie9K9XNOELnL3e1nvh//+Lp8bXWvXN/ubUP09ywj+/0
Fa8WWuCqSY65/rt+euNmNmWBu9rR8J/lDL4WdastcO9XdThjGz01SLVxWuAq
hPE5YV9sbHcxqVrgLhqyd2FrfCKOLY9Z5P5yDzbD9l3z0L4gfpF7JDdvy7/1
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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$2908#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
NKU=
            "]]}, Annotation[#, "Charting`Private`Tag$2908#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwVkHk41HkcxyflHNeMMRjMj98vYypydUwH34+j2JxRlt0Viph2c5Si2Arh
iR7JNqsnU1gycq2k1FDzSw06ZBM6KUuGURQdyjFr/3g/r/9er+d5m++M9Y9U
olAo3gv7n2F7xjLabvYhQyvr7eVv6KRHUkKOzrs+FJAu67rdRydtMufyfmT1
oyCdIr++F3RyvkRHKDvYj1quKnsxeuik8LlDvarta9TQXueSdo9O/rbUaYLY
+gZ5/3LYZkc9naz4I9M44s4AsitsVmEep5Nm+wwShkRDiJc9WZlhSSef1N6g
J72Xo8tTg15dO2jkIPHzA/+IDyg1dXnIr6W6ZFRZY+Bq1ym0OTDjY/hTHbIj
ojsoPOwLCudHRbZ6aJMBARe8f/L4hkTJm3a1dGuS4lTuDWHMLErujQeBM5W0
HtIdX56pQCd4D142X1Unw9Y/0XBdtQjqLL/3J7qpkYX4fLDgrhJsFP55mtKg
Qr4tOYr7rF8Cv4+sidN3UiZXb6jrrK5QhiiyZiq2czF58BPwbNeoQkoaX57i
rES2uXFZrEtqoDx6pXymg0KqX41t5G7QgEnuTp+ZA/MSP7R7XZ+UCrofM+r6
QmYkorArq6ZXa0F/w6UjlMPTkomSsLG1Um2g7Sguk2z/LCEc67UmTHRhSODX
WB4xKXFfF5HePawL0uMp1ifCxyUxLXvHNGto0A5Z/GDNEYlpAZ43HUmHvGFP
rUT9fyV3k7PyD67UAzSwXzyn/VQyVVXwWDSqB75cceRzK6nEgq9QsiphgGJe
fXATpQj5rjHId4nWB/XoLvzOp060yPdFiCbOhNcb8xippX2oOtE7K3qMCY+J
Vl8f4TAKtjYsNbhsAL3hz84PNI+j3JW5M4f4hjDynaWcHzWFmlHD5Rg7I8gr
iX/YTJtG+4QZZcx3RpA1pDdjVD+LVmTWnqCVsiCS8fIINFPg1dGshxf4xsBV
MrN7GL8Y9KVUr9e4CST6eYirdFVgMwuW1Y+ZQM/J828PzKqBQoy58kSmcG/2
kCJp4demkUBfWigbZqv3JLVla0Mcx+lGCgeDkKElxW73daHm739CC99g0Lh0
tkiVR4d9Zer2nO1m4PO+zPlkqx7kNgZac6+bwRFm9zp/X32IifvWms4wh2vy
0/LyW0zYYpdwqiLJHKp0YmQib0OQF7h94fSag/0h3quiFiOgSqH3kR0O4ecC
VpyyNYZl3xlvkQCHRklkWudNE6D2OOVrTOKQdbK48qItG7K//iWrmMIhRfGs
zXQtG9RYqo7un3FglqnJBI5sWBLaKUufxiFuAFZkbmHD/Eio49w8DhYDN+/v
jmDDh9ljIxNUAsY70C7uWTb0Lr3j1GNBAEVKHa5WsGGbu+WZ/ZYESDWiN1qo
YNDFzxmlLSOgNC/0zHlNDDprA874WBFgqs78IdcIg3be0GibPQGOnsHSWAcM
mryUBWJEQJonVdUhCoP1sXx5kDMB8fbjB6r2YnD9dAf66kJAZb/bMJGAQUOv
QO6wmYArtm4PGKkY1IZxoMaLgDmbLeVfzmFglZ4t8PQhIKsw2yy2BIPKi+Py
UV8CDI5ZCWUiDETyawJOAAG7n+QUPGvAgKNlPHZ3GwFnX7gZbG3CoMzmKOwK
XOjlBJ69dxsD3H9QsCiIAFHTLZZLOwbFCe5jRcELPtfkC+JHGPwHMU8sAA==

            "]]}, 
          Annotation[#, "Charting`Private`Tag$2908#4"]& ]}}, {}, {}}, {Ticks -> {
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
       FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
       Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, AxesOrigin -> 
       NCache[{
          Log[5/Pi], -4.719384508974166}, {
         0.4647080265847003, -4.719384508974166}], FrameTicks -> {{Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "ClippingRange" -> {{{0.46470821455083033`, 
          9.675048210594753}, {-4.719384508974166, 7.951883770249672}}, {{
          0.46470821455083033`, 9.675048210594753}, {-4.719384508974166, 
          7.951883770249672}}}}, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0.4647080265847003, 0}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 400, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
       FormBox["\"lossless stable nondegenerate 3-mode amplification \
(sWLC)\\nfor different nondegenerate gains \
\[Chi]\\n\[Kappa]=10\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\), \\!\\(\
\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\) is SRM coupling rate\"", 
         TraditionalForm], PlotRange -> NCache[{{
           Log[5/Pi], 
           Log[50000/Pi]}, {-4.719384508974166, 7.951883770249672}}, {{
         0.4647080265847003, 9.675048398560882}, {-4.719384508974166, 
         7.951883770249672}}], PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         RowBox[{"ASDScon", "(", 
           RowBox[{"2", " ", "\[Pi]", " ", "f"}], ")"}], 
         RowBox[{"ASDh", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", "0"}]}], ")"}], 
         RowBox[{"ASDh", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
               RowBox[{"0.995`", " ", "\[Kappa]"}]}]}], ")"}], 
         RowBox[{"ASDh", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", "\[Kappa]"}]}], ")"}]}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 TagBox[#, HoldForm], ",", 
                 TagBox[#2, HoldForm], ",", 
                 TagBox[#3, HoldForm], ",", 
                 TagBox[#4, HoldForm]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", "10", "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"",
   "\"strain sensitivity (NSR), (\\!\\(\\*SuperscriptBox[\\(\[Alpha]\\), \\(2\
\\)]\\)\\!\\(\\*SubscriptBox[\\(S\\), \\(h\\)]\\)\\!\\(\\*SuperscriptBox[\\()\
\\), \\(1/2\\)]\\)\\n/ [\[Alpha]]\\!\\(\\*SuperscriptBox[\\(Hz\\), \
\\(\\(-1\\)/2\\)]\\) (log scale)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
       Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, BaseStyle -> Directive[10], DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.835822557790366*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"16170572-d03d-47f7-b837-386907c2c883"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"want", " ", "to", " ", "plot", " ", 
     SuperscriptBox["Sh", 
      RowBox[{"1", "/", "2"}]], " ", "against", " ", "f", " ", "using", " ", 
     "real", " ", "values"}], ",", " ", 
    RowBox[{
    "to", " ", "compare", " ", "to", " ", "sensitivity", " ", "target", 
     "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
       "recreating", " ", "Fig", ".5", " ", "in", " ", "Li", " ", "et", " ", 
        "al"}], ",", " ", 
       RowBox[{
       "2020", " ", "also", " ", "requires", " ", "radiation", " ", 
        "pressure", " ", "noise"}], ",", " ", 
       RowBox[{"not", " ", "yet", " ", "derived"}]}], ")"}], 
     "\[IndentingNewLine]", "This", " ", "requires", " ", "using", " ", "the",
      " ", "correct", " ", 
     SubscriptBox["\[Alpha]", "GW"], " ", "scale"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"\[Alpha]", ",", "\[Chi]", ",", "\[Kappa]", ",", "\[Gamma]R"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"3", " ", 
      SuperscriptBox["10", "8"]}]}], 
    RowBox[{"(*", 
     SuperscriptBox["ms", 
      RowBox[{"-", "1"}]], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[HBar]", "=", 
     RowBox[{"1", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "34"}]]}]}], 
    RowBox[{"(*", "Js", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Larm", "=", 
     RowBox[{"4", " ", 
      SuperscriptBox["10", "3"]}]}], 
    RowBox[{"(*", "m", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Pcirc", "=", 
     RowBox[{"3", " ", 
      SuperscriptBox["10", "6"]}]}], 
    RowBox[{"(*", 
     RowBox[{"J", "/", "s"}], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]0", "=", 
     RowBox[{"2", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], 
    RowBox[{"(*", "m", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]0", "=", 
     RowBox[{"2", "\[Pi]", " ", 
      FractionBox["c", "\[Lambda]0"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"value", " ", "in", " ", "Li", " ", "et", " ", "al", " ", 
      RowBox[{"doesn", "'"}], "t", " ", "make", " ", "sense", " ", 
      "dimensionally"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
       "using", " ", "Korobko", " ", "et", " ", "al", " ", "2019", " ", 
        "instead", "\[IndentingNewLine]", "\[Alpha]"}], "=", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"2", "Pcirc", " ", "\[HBar]", " ", "\[Omega]0"}], 
          RowBox[{"c", " ", "Larm"}]], ")"}], 
        RowBox[{"1", "/", "2"}]]}], ";"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]", "=", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"2", "Pcirc", " ", "Larm", " ", "\[Omega]0"}], 
        RowBox[{"\[HBar]", " ", "c"}]], ")"}], 
      RowBox[{"1", "/", "2"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]R", "=", 
     RowBox[{"2", "\[Pi]", " ", "500"}]}], " ", 
    RowBox[{"(*", "Hz", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Kappa]", "=", 
     RowBox[{"10", "\[Gamma]R"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ASDScon", "[", 
          RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDh", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"ASDh", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ASDh", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", "\[Kappa]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "10", ",", 
         SuperscriptBox["10", "4"]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<lossless stable nondegenerate 3-mode amplification (sWLC)\\nfor \
different nondegenerate gains \[Chi]\\n\[Kappa]=10\!\(\*SubscriptBox[\(\
\[Gamma]\), \(R\)]\), \!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\) is SRM \
coupling rate\\nno radiation pressure effects\\nparameters of LIGO \
Voyager\>\""}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", ",", ","}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ",", 
       "\"\<strain sensitivity (NSR), \
\!\(\*SuperscriptBox[SubscriptBox[\(S\), \(h\)], \(1/2\)]\)\\n/ \
\!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) (log scale)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
     RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.835035149895096*^9, 3.835035211208274*^9}, {
  3.835035683781434*^9, 3.835035707461011*^9}, {3.835035759597912*^9, 
  3.835035764614431*^9}, {3.835035795287764*^9, 3.835035833335251*^9}, {
  3.835037379195499*^9, 3.835037409004099*^9}, {3.835037454910521*^9, 
  3.835037586108575*^9}, {3.835037620133082*^9, 3.835037643593316*^9}, {
  3.835037675441442*^9, 3.835037755446409*^9}, {3.835038866585786*^9, 
  3.835038931356164*^9}, {3.835039117091229*^9, 3.835039141920133*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"0883ef2b-3c1f-4b86-94d2-5cfe699198ba"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6], 
            Dashing[{Small, Small}]], 
           LineBox[CompressedData["
1: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
a57P8w==
            "]]}, Annotation[#, "Charting`Private`Tag$3440#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
9HFT4n+MQBZ3
            "]]}, 
          Annotation[#, "Charting`Private`Tag$3440#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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

            "]]}, Annotation[#, "Charting`Private`Tag$3440#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwVz3s01AkUB/BpyGEpY4SaCTM/ERUZs5Qa6+42pd/M/H4626YoNHqIdo48
t6yyREu7Gr1oF6dILz2nZqaIuoeNNm+R97KrpFK2shh12v3tH/fc8zn33HO+
X2FEzNc72CwWi2Lm/13tUdyk2c2GsozgA+EVNHJMXdSme9gQt8LLnMc47M+y
wPAENuwUG51qL6fRcFzbYrGfDUsaczQkY09DXVvkETaU3JQ+Fd+hsajmzRN7
DRs8KkRrTfU07t0kGcieYIM45pGZRkPj0vTOMWWaEfRxh2LZl2g8+vpkkeqa
Mfhe2FfnkUejv2yDy6G6mSBeZ1vwSwaNsdP5PH6vCaQPbinaHE/jqeqIAnMT
U2hOmOo9t5VG8xSPSVN7MziydFznHkhjHJU+oJR/Bmakk6dEwuSPCxYvSzCH
mKEA4Wk3GvOyRBHzsi1gy+u2Qr+5NFbrj9pv1M0Ck5+8R0Nn0rjiybtbxY2z
IefQui79ewp9yE7drkFLGPQuXRP2F4XWL4UlqzM5MNSY/T6lmULRxa6gUI4V
TH/iSRuqKCTjHrcSF6xgR21lcEYZhU7D6nSXlVw4Y/JjT1w+hWfbGs54PuAC
x87o6A+ZFDrUU5kjIdawaSQ4vimWQn9JYOf5YWsIyGZxncMpDCk/McY9MAcM
u6u52TIKlw0W+FVxbWDVPmtWkzeFFalOBlWRDQy4PC97IWTui8eSG8S2kKri
QKE58x+4MlqEjDs8+ZP/KNDfnlS3k3awIfXTVPeAAh0nf012HrCDDzrR0spa
BZ4jVY9ToudCmTkvyPmaAp0vHnyXNmMeuC1IDnA/psDIG5sDHpycB+rE1W/D
EhUYKNKaWQp4AD1rbmwIVqDo3rpjJnoeuOrP363yVWB5jSrL+Cs+qDyunvXj
K9AoXqGFej74uLGuHPwox7UeMecXbZ0PeTat30X0yFEcwTXhv5oP0gvl/aPl
cpxbYlhcnmYPxraJ20R5cjwborwfOtsBVP6lfdEJcvy78nAWnHKA3HYBj7Ve
zvSfsmt1d4RjeXdOpHjIcQF3eM6uckdwmVio8bGQ4yG2xbdBrgL4nm4jXgzL
sLclcyQ/TgDueyb2u1XL8GDv/YK+2wK48lvh0/rTMnQd5XtNsYWgdLQ8npQs
Q4Hv8n9tSSGMf9FuOLJRhoYQ7+ftOUIoKIUOyluGzenf3IzqEkJrbtoYnyPD
qWGxdoYDARe3K7yUr0nsZPknLHck4K3Ez6Z2lEQ9T/Z5jICA+FX9k4sYx9Nb
tX0EAdnhSyrHX5L4Rvez9vZCAkqDrb7MGiHxWcYzrUpEwHULUnJ9iMQ2Il/X
LSXgRuyb6Y/dJGokJYmcNQQUv9rbrmScG3TVOyCAgLtDVVdru0ikDtfotCQB
tYV7w3M7SXz4dkynpgmYhIr7Th0k3sO1+tWbCAjI1MXLWkgs6lmflBJMQI50
Nnm9mcSU8TCfWyEEWKhdHOYw9nVN1AtCCXj2Ia+uv5FErbpY/0FJgEthql1s
PYnHL11J8tpGwKBD/8uORyTG1dz2idpOwB/qj1UrGHtONuqf7CQgMjJ9m/Hv
JFpadSfN2kVAYsQL76iHTP9FT32kUQQ0JFibNtWR2CAdm0iOJqDlOavHi/Hl
sGm9ZjeTz/jm5fxaEv8D9DI4fQ==
            "]]}, 
          Annotation[#, "Charting`Private`Tag$3440#4"]& ]}}, {}, {}}, {Ticks -> {
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
       FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
       Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, AxesOrigin -> 
       NCache[{
          Log[10], -61.45603923197753}, {
         2.302585092994046, -61.45603923197753}], FrameTicks -> {{Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "ClippingRange" -> {{{2.3025852339686432`, 
          9.210340231001586}, {-61.45603923197753, -51.551503621981375`}}, {{
          2.3025852339686432`, 
          9.210340231001586}, {-61.45603923197753, -51.551503621981375`}}}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {2.302585092994046, -61.45603923197753}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 400, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
       FormBox["\"lossless stable nondegenerate 3-mode amplification \
(sWLC)\\nfor different nondegenerate gains \
\[Chi]\\n\[Kappa]=10\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\), \\!\\(\
\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\) is SRM coupling rate\\nno \
radiation pressure effects\\nparameters of LIGO Voyager\"", TraditionalForm], 
       PlotRange -> NCache[{{
           Log[10], 
           Log[10000]}, {-61.45603923197753, -51.551503621981375`}}, {{
         2.302585092994046, 
         9.210340371976184}, {-61.45603923197753, -51.551503621981375`}}], 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         RowBox[{"ASDScon", "(", 
           RowBox[{"2", " ", "\[Pi]", " ", "f"}], ")"}], 
         RowBox[{"ASDh", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", "0"}]}], ")"}], 
         RowBox[{"ASDh", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
               RowBox[{"0.986`", " ", "\[Kappa]"}]}]}], ")"}], 
         RowBox[{"ASDh", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", "\[Kappa]"}]}], ")"}]}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 TagBox[#, HoldForm], ",", 
                 TagBox[#2, HoldForm], ",", 
                 TagBox[#3, HoldForm], ",", 
                 TagBox[#4, HoldForm]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", "10", "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"",
   "\"strain sensitivity (NSR), \\!\\(\\*SuperscriptBox[SubscriptBox[\\(S\\), \
\\(h\\)], \\(1/2\\)]\\)\\n/ \\!\\(\\*SuperscriptBox[\\(Hz\\), \
\\(\\(-1\\)/2\\)]\\) (log scale)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
       Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, BaseStyle -> Directive[10], DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.835822558045444*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"c0c1ae48-7c49-4dc7-ab95-8cac87331a8a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{"integrated", " ", "lossless", " ", "sensitivity"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   FractionBox[
    RowBox[{"4", 
     SuperscriptBox["\[Alpha]1", "2"], 
     SuperscriptBox["\[Kappa]1", "2"], "\[Gamma]R1"}], 
    RowBox[{"2", "\[Pi]"}]], 
   RowBox[{"Integrate", "[", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[CapitalOmega]", "2"], "+", 
          SuperscriptBox["\[Chi]1", "2"], "-", 
          SuperscriptBox["\[Kappa]1", "2"]}], ")"}], "2"], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]R1", "2"], 
        SuperscriptBox["\[CapitalOmega]", "2"]}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalOmega]", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Chi]1", ">", "0"}], ",", 
        RowBox[{"\[Kappa]1", ">", "0"}], ",", 
        RowBox[{"\[Gamma]R1", ">", "0"}]}], "}"}]}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.835036401456932*^9, 3.835036477906516*^9}, {
  3.835036560927867*^9, 3.8350365732602654`*^9}, {3.8350366954834623`*^9, 
  3.8350367090085773`*^9}, {3.8350369829776917`*^9, 3.8350369894316263`*^9}, {
  3.8350460686606197`*^9, 3.8350460692238073`*^9}, {3.835052726033289*^9, 
  3.835052741344212*^9}, {3.8351255901800613`*^9, 3.835125592289096*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"cd9ae65f-fc2e-4d00-9185-a9ecc73b6a9c"],

Cell["\<\
Lossy sensitivity, adding loss terms to each mode, assuming each noise is \
quantum with uncorrelated vacuum bath\
\>", "Text",
 CellChangeTimes->{{3.8350455927349243`*^9, 3.835045636929449*^9}, 
   3.835128735206914*^9},ExpressionUUID->"e9937aac-b987-4462-a6d6-\
6a2fa2646848"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Gamma]a", ",", "\[Gamma]b", ",", "\[Gamma]c", ",", "\[Gamma]btot"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShLossy", "[", 
   RowBox[{"\[CapitalOmega]_", ",", "\[Chi]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", 
     SuperscriptBox["\[Alpha]", "2"], 
     SuperscriptBox["\[Kappa]", "2"], "\[Gamma]R", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]c", "2"], "+", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]], 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Gamma]btot", "-", 
           RowBox[{"2", "\[Gamma]R"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "-", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}], 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Kappa]", "2"], "\[Gamma]c"}], "-", 
        RowBox[{
         SuperscriptBox["\[Chi]", "2"], "\[Gamma]a"}]}], ")"}], "2"], 
     "\[IndentingNewLine]", "+", 
     RowBox[{
      SuperscriptBox["\[CapitalOmega]", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Chi]", "2"], "-", 
         SuperscriptBox["\[Kappa]", "2"], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Gamma]btot", "-", 
            RowBox[{"2", "\[Gamma]R"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}]}], "-", 
         RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "+", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], 
     "\[IndentingNewLine]", "+", 
     RowBox[{"4", "\[Gamma]R", " ", "\[Gamma]a", " ", 
      SuperscriptBox["\[Kappa]", "2"], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
     "\[IndentingNewLine]", "+", 
     RowBox[{"4", "\[Gamma]R", " ", "\[Gamma]b", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
     "\[IndentingNewLine]", "+", 
     RowBox[{"4", "\[Gamma]R", " ", "\[Gamma]c", " ", 
      SuperscriptBox["\[Chi]", "2"], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ASDShLossy", "[", 
    RowBox[{"\[CapitalOmega]_", ",", "\[Chi]_", ",", "lossRatio_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     SuperscriptBox[
      RowBox[{"ShLossy", "[", 
       RowBox[{"\[CapitalOmega]", ",", "\[Chi]"}], "]"}], 
      RowBox[{"1", "/", "2"}]], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Gamma]a", "\[Rule]", 
       FractionBox[
        RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
        RowBox[{"1", "-", "lossRatio"}]]}], ",", 
      RowBox[{"\[Gamma]b", "\[Rule]", 
       FractionBox[
        RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
        RowBox[{"1", "-", "lossRatio"}]]}], ",", 
      RowBox[{"\[Gamma]c", "\[Rule]", 
       FractionBox[
        RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
        RowBox[{"1", "-", "lossRatio"}]]}], ",", 
      RowBox[{"\[Gamma]btot", "\[Rule]", 
       RowBox[{"\[Gamma]R", "+", 
        FractionBox[
         RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
         RowBox[{"1", "-", "lossRatio"}]]}]}]}], "}"}]}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Checking", " ", "that", " ", "lossy", " ", "expression", " ", "can", " ", 
    "be", " ", "recovered"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"losslessAsmps", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Gamma]a", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Gamma]b", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Gamma]c", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Gamma]btot", "\[Rule]", "\[Gamma]R"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ShLossy", "[", 
        RowBox[{"\[CapitalOmega]", ",", "\[Chi]"}], "]"}], "/.", 
       "losslessAsmps"}], ")"}], "\[Equal]", 
     RowBox[{"Sh", "[", 
      RowBox[{"\[CapitalOmega]", ",", "\[Chi]"}], "]"}]}], ")"}], "//", 
   "Simplify"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "Plotting", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ASDScon", "[", 
        RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ASDShLossy", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
         RowBox[{"\[Chi]", "=", 
          RowBox[{"0.986", "\[Kappa]"}]}], ",", 
         RowBox[{"lossRatio", "=", "0.5"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ASDShLossy", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
         RowBox[{"\[Chi]", "=", 
          RowBox[{"0.986", "\[Kappa]"}]}], ",", 
         RowBox[{"lossRatio", "=", "0.1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ASDShLossy", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
         RowBox[{"\[Chi]", "=", 
          RowBox[{"0.986", "\[Kappa]"}]}], ",", 
         RowBox[{"lossRatio", "=", "0.03"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ASDShLossy", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
         RowBox[{"\[Chi]", "=", 
          RowBox[{"0.986", "\[Kappa]"}]}], ",", 
         RowBox[{"lossRatio", "=", "0.005"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ASDShLossy", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
         RowBox[{"\[Chi]", "=", 
          RowBox[{"0.986", "\[Kappa]"}]}], ",", 
         RowBox[{"lossRatio", "=", "0"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", "10", ",", 
       SuperscriptBox["10", "4"]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{"\"\<Expressions\>\"", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<lossy stable nondegenerate 3-mode amplification \
(sWLC)\\n\[Kappa]=10\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\), \
\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\) is SRM coupling rate\\nno radiation \
pressure effects\\nparameters of LIGO Voyager\\nconventional detector is \
lossless\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", ",", ",", ",", ","}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \[Pi]\)]\) \
/ Hz (log scale)\>\"", ",", 
     "\"\<strain sensitivity (NSR), \!\(\*SuperscriptBox[SubscriptBox[\(S\), \
\(h\)], \(1/2\)]\)\\n/ \!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) (log \
scale)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.835045649418078*^9, 3.835045971653326*^9}, {
  3.835046076383677*^9, 3.835046076831917*^9}, {3.8350462580617037`*^9, 
  3.8350464223988743`*^9}, {3.8350494312121487`*^9, 3.8350494411018753`*^9}, {
  3.8350526972158833`*^9, 3.8350527198937187`*^9}, {3.835052787275949*^9, 
  3.835052795389646*^9}, {3.835052830197174*^9, 3.835052963601975*^9}, {
  3.835053029536222*^9, 3.8350530344832172`*^9}, {3.835053084937231*^9, 
  3.8350531345219193`*^9}, {3.8350533831923037`*^9, 3.835053449363131*^9}, {
  3.835148895562232*^9, 3.835148907294775*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"c56bf380-6221-4a99-8e63-f827f05573af"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.835822558185935*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"31f7cc20-9eca-4bfc-a150-cf98a51e310b"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6], 
            Dashing[{Small, Small}]], 
           LineBox[CompressedData["
1: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
a57P8w==
            "]]}, Annotation[#, "Charting`Private`Tag$3925#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwl13k8VF8bAHAh2RnMPmOZKFulkkTyVKIZkYSkCOFnV2QJpRAtSoskJdKi
BZXsiclOtiiJqCiURFqI4j3nvn/N5/u5d87ynOc851wV1wBrd0EBAYGZeQIC
+Ldy6fWWRz6CEHdU4elzujk/zH7tuxO/BcFIGQgvi3495nJUCG6TAgm/Lyqs
HaIKwxefh4TPjV5M88sVhp70KcLDV359+GMwH7ZYmJZjG/NsF8XVzYdVe9IJ
22eGZFhtE4GWXUIV2PunLzGYPSKg/zCYcHh2o8FrtQWQ6FVKONbpn8OFfQsg
wkqYj31GVidi65MFYFO/nXBKpesVCRFRaDO8S/jXQ9uJRnNRUKmdJWydvpl7
8pwoCFo6PMPOPW2YwX0tCtR1ZYQlIpdOirLFwFpUrRJb/7e+wssNYvD9tTNh
t30bl6d7isGF/muEy93sfVbliwF1VqUKe6TP9bhAtxgcM/yPMG2n363nc2LA
lnpAONAi+p2LuTiItppWY8uu+Hcicp84tAZfJJxDCdO9dFEc9s8MEh5+53ei
6Z04GElfqMGOqx5eOSQsAcYdo4QX3t3bN09TAt4OmtdiOwXuXLn6gATcPSBX
h60WrHuwI1kCekUOEP4aKlMRUCIBRkNdhMMP1fDuzEqAqXBOPfb6IxlnTVQk
QSmS1YAtGhPR+X6jJJwpTiScfHy5K/2EJGwWiG7EPnhqyKj3iiR8iqolvPtM
Gv16riRUGEk+x1ZJEnuh/lISPp68Qjg7/YOxvpIUHJdpbMJOzLzE/LtcCmZU
6c1EfG5ZTFaYSEHhHS/Cq++X5Jp5S4EwWaYFu7LwHHtHgRQoGPm2YpfWT9b2
1EpBg+szwo+6Hfc5d0mB8iS1DTtjVqPKawY9j2kgfNi00jNyvTTUda9rxw6x
V5ebt10acjkZhP28zzw55iYNrySEOv4/HwfpxHhpEOttJmzQOfH4erM0/FwX
9grbm01SbemTBpLyJ8KpbsuSpsekoat+eyf2nwmfA9vlZED7jN5r7GKZT7rz
d8iAQZHcG2yrlT99r+yRgad+VoSH7YRuLfeUAeObZwjTrqmQnQ7KgOFFyW7s
UG2nX4VXZGDrDekebD3u6wLP9zKQtUO7l9gPObzGks8yYBcfRvgTqbxP/IcM
HHWpIczza4/pFJSFvwyXPmJ8q0qyw8iy8Lwx4x32jrq42TIDWRj33NCPHX2Q
f9zdWBa0xy8TztWalpM2kYWWNROERc76Ld5jIQuZjFsD2AX2NlbznGXhqrHC
J2z5LyqZm47JguAJ+jC2cEbdnmsnZOGaYSjhn7Z+7MnTsnAj9xXhzmfFKXeS
kXuSPhPxvLw1UeIO6j+cNYLN4R6KfNEoC4sp1t+I9uc4BpqtyEfKCAsX1E9G
d8jCqcrFY9iDygpBum9loa5TYBz73tQ9r0ujsvDI6+l37OV3uuwcZUmw95bL
L2yHC9W+xXIkCPmeSTj68MNoeTIJzsZ+JNxuczy3gU6CX0c8f2MfmKcvoreQ
BGrdQZPYRQ6XCqT1SDBinvIH20jKToG/iwQb1Biz2B5T6zWZTiTIfetG+MzA
EghxJsGyjw8I95XM99V2J0HqR9M57CMeBVUp/iRwfhwm0IRcVaEQtP8oCQKf
jwhicwM7XnCySKAgLCeKTXNLfh94lwRfK90JD9vuHKu8T4KtXSWE49a8k9z7
kAT9C/aKYVcLjJjdKCHBpegScWxIFCxf2EQCPY1QKWy97OX3VL+ToMJ+tTz2
wsHE6EWGckDd91YJ+9Ub0fuWRnKQPAbK2PHNRztCjOXA7fktwiP5Qap1G+Vg
ImWfCvbjmB21/22RgzfnxRdib1RREr/rKAdyBlaLsPfuzj2ndUQO/imoLsG+
0d6UoVMjB3evzxhix3Y6HYmvQ+/Xx6zF9uge39PXIAfL/SSNsDX7FZQSWuQg
V1dpHXbe991pQ6/lwJrPA+xK2dHL177Iga9IqQn2e0upC5Ky8mBOmbHAVnxu
cWzYQR6yEuRdsfvbLh6mOspD6fAjwlmdvaGme+ThdrnVXmydfj/vm3vlwaEr
0Q17w5/TW5195WFtjfx/xPgWt9C7DskD9fwKX+zcGMvcugx54Gs3hWAbr936
+vYg+j/H7zS2Q0nSmNxhBSifPVSNvfr9FaOncmRwsLs7h104e0JgWIEMX5bG
CzQj67LDquSoZKD3uc3D1nGw4XoyyTCvUEkIG9VeW3lVMvTPuyCCTas/5Ou1
igwlaX5S2FMP9lwh25PBNq+XgR3SYuEEDmS4XvqQif3zq6GKz24yzKyKYWGP
a9Cy+M5keBOySBF7+EZbno8XGXIK3FWw31xa3/gsnAyU21WLsUujFv7xSyOD
fFPfSmzPXM2gunQyBKRn6WJTepePKmeSYZdqwCrsQAP40HGbDKmLp/WwNX/t
bljzkAwaVnNrsC97J1+eX0WGtXUVxtiml9Pk99SQgW27D4jx1t08XVxHhvts
pfXYVmqPj/o0kWHWKHQDtuj7Vq8Xr8jg3ya7CTvMVswgbZgMtec+cLEXxcrm
//5Cht3l+3nYL/OoS61GyTCUPEdYR3YRR2iCDAmqCluI+TduEPeaQeNNUbLE
Tv7Dja38RwZVyauETdS3zTIFKCDfTd6KnXFsz0SLMAUWOsyzwraHyG5daQp4
FRVuwxYJiLE5I0uBzc9Z1tj5aSdbhuTQ8/dRhGVnUipTqRSIerd2O3a5Rsba
n3QK3HmUTNjXPqvQgkWBg7ajhOsLCu4JqFBA7MNZG2J9P5apOiykwMiDXsKq
8tXXHqtR4IniYlvsI/vaz3toUuDznQeE3za/j6Mvo8BDqqYd9mqtsfCmlRQY
EEgmbJ/glblMnwK/N40SDh8daDi/lgLJGqt3YF+xdPr+CyhQvjWIcNmDLtrO
TRQ47XCd8Oz+5v+ULCnw7+oLwqBbWfjJjgJCPdWEo38Xzs/eQ4HIvlDC1cX3
bQI9KdC0dYjo7xN9UeQrXwq8uBpLWCQi44b+fgrcypchnHzfcbV3EAU0N7cQ
81n8lvH8SjAFdnOOE95sdHFi9iAF8v1HiXh0+VnH6URSYH9lCmGvazIM18MU
EFc2Jnxy7sT6mmgKWJVGEvFl6Ji9+h2L2nstT/i+s7CXejwFBCpuEevV9Ozw
2VOn0PrnlBDru3vCUPXpaQpcPW9IeJTzp+hbIgW+CxQT+SAdG/RuWxIFfHQz
iHzZZuq5lJZGAbaCtgV2f4haJTedAo+cjhD5F5jVbxtxHeXD7RZz7CRRx0N9
tyhQ9NGeyFfVNQyS7B0KqBUmEfld4PX65vp7FOgwaNyM3dm4relmLgWmSRwz
bI8ZaefOh2j860xMsSe1mn4seEyBPW17iP1CO23K9CmigM6b6I3YDlsNvZfz
KRBsFkLsx/Nxrb93VFJg1y+PddgNT/fGHK6mgMgDKyNsfe2Eq8/rKcD7JW1I
7H+x3hb3FxQwOqtL7HdL2L8roYMCJs4jRH04Fjp/OO8VBbjJqUT9+PlpyTyB
bgrc7P2gg91ReXhlaj/K9wCSFrb4tByf/xHlq8gJDewNy7O2DA1SQGvbFFGP
8tJb3XVHULwyn6pin41UTmn5QQHHq+/Z2Fv0Kv8KzqfCtV2B0tixfnYnNBZQ
4U3ZTknsJze/kK3EqLBo/Wpxoj7Jyy9Lk6JCtOnL+dhi43tdVlOo8HXdhb/E
ebp4atSRRgVygfo0dphTQngsgwpP/R9PEudzU/6FF4pUqFx9ZwK79u78Wp/F
VHjxTmIYe/b9ZevzGlQQXrn5E/Yq2tJ3xVpUmOoK68e+GWc3NV+HCq7phW+x
o/dmaWboUyH3YkYbcb6wuYkvuVQIWkQqxL7t9rtdYwsVfh1YlYctnX2DEmVJ
hcjj3FzsXoPZNI3tVHA3gdvYEfaPsw/vpoJQn+tF4jxMdx7vcKKC0SKBc9i8
ISldDRcq1OedSsCmh3g+6XCnwvpW3xjsogvsRvUAKsSEbNtHnK89jVKH96P+
Nu3yIe4jnLBtHUFUcCne5oFt+6i961AYFZ4/ENqN/aMlfqj9KBWyW4NNsZeJ
TwgfSqLCpJUzFTt5W/rm9mQq2GbRSUS8UrYkLL5MhZTJJ8R9pnlxlnx7Guo/
rvQfvk/5bNrNWZxFhSjjFOL+mnWk1vhFCRX6RK5kYUvXB8UsKqNCTUl1OvF9
IKNSF1FOBQt2xyXsTdciLBdVUaHu+dV47IEnOo4RTVQYDepxx1aaTA1Xe4fm
957PIr4PYPa19Qcq2JcXyWPnn3BZdWSACgsiz4tjb2apj3cPofyKmJhsRN63
vsD97DgVBu/bvMDmn2q1mplHg6YLzoexxV+tyFUXpsHAp8AgbBvFZAk7ERrQ
ndw8sYcf7q59KE6DzwcHtmGTOj8besjToMyEuxDbVVl48QtVGjx98V9FA3K2
13+xs4tosDTTJA/7d17jBy0NGtxbOHMT++Smc1fjltBgM//HCezH3opya/Vo
MN4rao0tXKD/77YZDUSKfLrr8f6dveLwkksD6dMFjdgpZnNF87bQILeuvRRb
u7smcLcVDZYUHUvFtpmzHibtpEHQnmc7sG9x/ToivWnAi9dqqMPxvPF5qMsX
jbepPx/78l/3v7oBNNhAdczAPv3ASW00iAZmhikh2MFkq1DHQzRwGqQoY2/6
sIK57iwNFj657lGLXGHwYFnqeRrM/DWwxF6TpGXyO4kGDvEJq7CXmKn65V6m
gcApWyFscg65QvEGDaoPeV+pwedN2JTrXAEN5vx/lFUj72k/ELqrmAam/QXp
2G+0vp8qKqWBF101Gru573N+QAUNfvoKmGIXmPSIvK+nAe2/jIYqXN9ky+/x
e2ggHp5fUYk852VQweqjwbHi+qvYB6sKO8Le0yBONfwgtl/Ig786n2iwLvHh
cmzbtxmW17/RoMpva9ozZLU7MRNH59FBZM7bmY9sKvp6rl2IDgahl1dje3pq
SqmK0OG0rb009j31F4trxenweyi6tAJ56V1FR3EFOpA2+0ph690rqTu/iA5t
K89cfYq8Q1zq1YA6HajXDXyxw7yd+3W16NBS42aIXaq54F/nMjo8VFvSVYa8
7r7NCuYaOsypeUtgm2aPXb1hTgcbiveOUuT/JDfe+2lBh8852xWxj/smF22y
osPHrbc+liA3ahu1D9nQYaojPADbMufkAm0nOvz8V32oGNkuVy0wfx8dLs+L
iCjE7T3cZVZzkQ6F9c1jj/D+k3P3/3aJDjo3ft7C9j/gf5GaSocDOp67sEP0
jw54XaND1OzS6oe43vNvR0ln0YHxXur0A+Trbd+LdhTT4WhUynQ2rrcrZvqO
lNLhzaqqm9h3koRF7pWh/7sqWWI/tKfa/OXTYX+D27X7yOXv145nNNBh+OKY
7j3knvF49S/ddOA9tdXPQu6zPrdVvpcOipsfv7yN62t+asjad3RYJb1wH/aX
sJzqMwN0oH3UuXkLeUqgw3nlVzokdDcI3MT5SVK8HPmPDsmBgiczkLcuzxeT
UWbABXn5phR8HtzoHPLgMMDd9JsBdiH5T025KgPSYcedS7geTxtF+2swIPlA
9eFk5K+VddPNKxhQ4JFFT8LrYdMzkrCJAUOJW4UTkctq/zV8NGPAn9eWDmeQ
x/SV76zlMcA4PT33NF4PtrvbV0sGrNilZp2ArDr47a25PQNuGVjEnsD1LFSw
RdyHAb2J5udi8Hn+WTXb1Y8BJybdGqORF+82O1kawIDLlJPzsM9Agqn3AQZs
Tv3odQR5txilouEQA96q2nAO4Xikajw8fpaBvq+rloQgLy+3Oi9SyIDv6y6e
8MD1dYXGSb1iBpCXbkpwR3a6PS/ao5QB/e/uJrjh+nYmb39tOQPYkofiXHH8
nRS2xdUxIORKsaMT8oW51zIib1D7D1ov2uL9EvRwgV4PA0ysLfbb4PkMHZ9z
72VAVKw6bzuOX+uasZoPDDip9v6HFbJJxpWWY1/QekTmLNqC/Av2nJ7/lwGc
ISfhDciSBauPrZplwNTBnjxA5mjIHnIXYMLqkW1OxjjfSc98a4SZYJZOyl6L
z+8PnC3HpJgge5PNWY33Y/Sg+HwlJqzauyFQC7mkyu+48AYm5LS7+pNwfq9j
H9QwYcLLsx8KZZB1S5q8LE2ZwNI7MyOFnJurZZ7CYwLssjoojpx5+bOU9nYm
vN55ZpMQckKA+4Xtbkz4vtyb/pNmzud+UYgN82BCcEuD8gSyiHv1gTRP1N7P
5wvHkY84LLQb8mXCgdjzrK/IwZs+0CKCmfBOQ6lrANmJ6XgtM44J4ufv+rcj
M5MlE+uOM2GL9l2tNuQu2bKoryfReIVyBpqRrUWYLnqJTNASu2TSgGz2vWth
4yUm3Bavq69A1qmzufv9DhPu+w+03UcWCtqSD8+ZUFNeeDoKefyfwu6kZib4
1wjZRCL3He8VGm5lQpVjrtxB5OJr/tsTXzIhoLAzLBDZt/HsRG8vEwynYwfd
kF+qvNKJGEfPw11Wb0Z+lp3W1TLBBB+qXIQJcu5qjyOcX0zYljpVAMjHLSZb
G/4gf6WS1iAbHaQH0IRYEFTr7aCBfLvNMaeAzIIFltqLRZEv7FpkK0ZjAaku
6aUQjt/gt7+7GSwY+/MhdI6K7td/o7YIK7FAUbkt/TeytHrmiLU6C8S0wwI/
IodGDWqMG7Dge66xdDny5qUBtzWdWZByMjfAE5n2ZPQ/O1fUft4Nqb3Iw2a+
GtFuLEjKmp/hiBzv4pX9xpMFkqmPrlsj1ybtzTu+nwWi7hKUtcgbZ3aUD0az
wDxhY44kstzxzii5YyyIKEmNE0HuV7Bdvy6eBedEX1gLIEcvta6+eIoFWq77
q35Q0P5w2dJoksQCpuAFwW7kdfXQmXmLBU/Wb3l/A1natuJSSxYLXke2dV9F
7v1gtHP6LgvkHEJrLyJHzhi83ZaL5kcr2heP/GTpqn6BIhb0bC+V8kbWv6jx
zameBc7RQlu1kVe6yokwR1jA/rBH6ibZnL9i7u7h4FEWqK9foZmKfXX9ZOsY
C5wMynXOYnfuG479yQK95bzpCGQdXmvjt38sKPKRD7dG1l6RkFgpy4aTqf6C
MwrIrQtF2fJs2E09c3MMWcv3yZFQMhvcGvYs+YisefvLfm0GG3q6t0w0IWsw
uDbJC5Elr29MQ14kKEL31mNDeFrZK33s9LRz1frI/K2NWshqa1eJKxmyYX2F
YaYismqI20yHMRsmzq6dEULmfKnsNeKyQXM807xZHt2P2qMySbvZkJA+vcIB
mZb5R6vkKBty2wICd8mZ86fBrHwkhg2r2oyPmiO/fZdkpRjHhtlYj32GyNfZ
OsExJ9kwndf3jYGsedmj3OICGy4GRXh0kcz5hmc7rPpvsiFpc66MBbLiMpUB
hSzU37lfYobIAi3+wWZ32XBru/wHdeRqCfHU7Bz03P6LqjDylngYCClkw/0f
mX+LZdH+P5wTLFHPhr2MoGImMrBnFqxrZIP6h1i3Bcicss2p+5rY8Niu4POE
jDl/8M9A+as2NvjsO3S4ATkgmCGa8YYN8TLfGg8gH/GNT9UdYYNeeE9xlbQ5
/4aDS4WjtCI4sMe010uh9RKI4x2TVQSf77bC6siFt+69ypZThLEVpbnSyPXj
P0ZmKIrQbBMT0SOJ6ndcHC1VSRFswPJbILLe4/v7O3UUIdp2o+BlCXQfkfi9
cOt2RcgzP7eEL2bO3/6I8SDEFr2vxR/JQH5rZ2xwbYcimJxjBR9FHrt+3Gp0
lyKoRrkNr0dW0GceOuWmCBvCXHl8UXO+oxt01gUrQmPQcE3eAlSvyk4ehxRF
kJp+POY735x/N7C+MTlVEXKuvXPYiOyqLiI1elURrJi/DtORX144eu7ydUUw
WlY0Xi2M6r93WOrEPUVIfZYWSEOOpnlk33yqCFEuOx89EkT9H1jfJjqgCB8/
DBnen+PxmzWi5PZ8UoSlp5YZhSHHvSuzKRhShGqpmW8myFM8/TcuXxXB3nfl
3t5ZHr9XZVl/6S9FsJ7+GC+OfLuV9dNXVAm4/abnbf/y+Ku1pqgvlihBolro
1pwpHr+9fyRobpkSfI/UpBxA9k9917pkhRKU6nufN0C+LVYXf1JPCSiJrPu1
kzy+wvDFyY3GSrAz3cqh5zePP3Fz5etCKyW45bw29fdPHj9XMSD5apASWJm0
kn+O8/i8TteJxmAlSNtosvcR8uBpO8s/oUowNTSz1x+Z/c9IxC5SCX720aKG
xnj8hB7JEJljStCrEc7s/Mbje6Xcs41OVgLSooovN7/y+KpygwqeJUow6BM+
JTrM44+/mVhc80QJ7mi94hYO8fhPrs8ZcMqVACJL1+9Ftl5Od3lbqQRJvWFq
ZYM8/lGrLTlWTUrQcta0wusTj993Jm/TmndKUH3bYnt+P4/fdMzY8JigMrCG
9QcX9KJ4C0r62qkrQ3/W4/K8Nh6/4vO//VEayrDGKrxxC/JU21joHU1lcKv1
OjXYyuP7pHfETGsrQ41j4xI6stXaK1euLVeGFxJ9M+HNPD4zRPP5oIEyFOhL
/9Fp5PEfft6sGWqhDOnvyzw9q3j8nrZjw5cClSGQahhNLuDxY3oqrrwtUoay
zroT7BQeX/0rc8WUoArsazv3xSKEx1deoz9H4apAifZvkrktj//HYdXQy9Mq
UMDVz2Po8vit0TZ5Xl0qcL5jf/0pGTTewZX58xQ5IL9ytEBllMt/LWB8QF+J
A4V9dpfjv3L5hQyeboAyB1qNEg6OjnD5QZbO+W85HBjZflCn5AuX/60gIb9o
MQd2nVh50GqYy/8U+ynfbzkH/OszIw8PcPntnEsFb0xQezaNEV1vuPxHazOD
ZU050CAaK7IO+axdziozMw70CA+cudHF5VucrCrI53Lg0GxWiv9rLr/++1hB
oiUHiimjZ4Vfcfnl/M2Fm+w5kDOoQ9dp4/LTureHRO7kwDyZ7iMXW7n8yJ9O
eo8dODDJihqcbuHy16gHFyo7cmDnq7b7Nc1cfn7i9cIZFw60n2Yq7XrO5V+4
mx2yYi8HnksvCeU3cvmBVUV6Xm4cYDNcmtWQdSabCzs9OPDIbOOB8XouX4b0
JkTKkwOMk9PVtsjfND/qmXhxwP7SoPyTOi6/yWTsd7g3B1Q/SrgoI993mi58
5MOB/d3+2cdqufz/AQ9PQ/M=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$3925#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
9rUxPAAZbif5eIlSIfiGj8FpZFOlam5BKSqcs/FJO4scUTQ45UanwqYXG44F
I9cKLz9ukKHCbpv3OiHIEr90I44rUCHLiqf7HLK5t6Nj2yYqbM/cdTEUOXok
YofEVipMetIMzyPPNrf/eqZMBTn/g9fDkKXUpl/JqlGhzPw8Ixz54C2+unMa
VPgg8mkK+8GFA/5bdKgwek2AEIk8/9f/QPQOKnSOX87GlvbN2DYMVAj98ZUW
hRx36M1MogEVJEIf8kQjP2z72/HOiAr3ZBYDsT9rShXrGFNBgDftDTb9jl5M
+l4qzBLPacbgfBV3dZndTwW77ssXsROSY/X0D6B44plD2I/WlEjlHaTCyR1j
krHIX/y7Vr5ZUMEn76UttsyH+bcmVlRwYYtPwbayIv5XZEOF8qjBR9gXOlWy
f9ui+Zy4No7doGN5+qADFaIudv3BXig7Y3HHiQqXbmkIxiHLSeeqsLlQ4cZq
yzps67RHxCNuVJgmmVOwEznGPld6UOEubzMBm3matZvnGBWqmN9W8HiLn2RK
j/pQIaG6bRJ7g61RwoMTVBgmUxuxbbo9PUh+VGiu77qEnQSJhl6nqMAt+8gK
u7myTKY5kAqJ4R0i2EsyvazUIJQfhT2deD7kM7+NnQymQg3r3VPYttwijR3n
UH627CBjXwrWzJcOo4JrmdNtPN8tczbBQREo37YtqGB/dzhn3RtFhVLrriq8
fhv7rmgoxFIhcvKpPLa9frNweDwVluS6UvF6p9S++/bqArpeqvhrBK63HIXy
uEtUaDG3u4jzZTP/3qSxVCrE3JnuwPnlcP64t+ZllH/L//3C+dfmXCX/MZsK
nmlJmjg/f714wQl5VOj+AQY4f7fs+fkus4AKPRHZBji/0zfrXjMqooLXrxwp
XA9PChzOX7lBhVfjX3+dQf5NiLD7cYsK5HfGT3D9HF1qo9wqpUJTh402ri+l
BrNUzloqxOlDKK7PPcoKCer30f0tNq89juO7uSbC7QEVAlhyInF9JyRVnmxr
QM8T6mbpifuNPflATDvK333FDrif/Oyb3VPbQYWwgtgwR2QBo8fw4SmKv/J+
mj2y1rZARcPnVGCbOHkJ96u01ZeCnK9R/BavRw4gl/iXr1V/Q4VjohMXTXG+
TMWtug5TYUjix5Z9uD57tn9+PE6Fh9l5gPuj/tXc7uhpKhS7St7RxflCPtVW
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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$3925#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
B2Y2sDE=
            "]]}, Annotation[#, "Charting`Private`Tag$3925#4"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
II++5f63pGA3B5xrmZ1hDTa8/wGkX1db
            "]]}, 
          Annotation[#, "Charting`Private`Tag$3925#5"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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

            "]]}, 
          Annotation[#, "Charting`Private`Tag$3925#6"]& ]}}, {}, {}}, {Ticks -> {
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
       FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
       Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, AxesOrigin -> 
       NCache[{
          Log[10], -57.0800259820388}, {
         2.302585092994046, -57.0800259820388}], FrameTicks -> {{Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "ClippingRange" -> {{{2.3025852339686432`, 
          9.210340231001586}, {-57.0800259820388, -51.55095439350851}}, {{
          2.3025852339686432`, 
          9.210340231001586}, {-57.0800259820388, -51.55095439350851}}}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {2.302585092994046, -57.0800259820388}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 400, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
       FormBox["\"lossy stable nondegenerate 3-mode amplification (sWLC)\\n\
\[Kappa]=10\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\), \
\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\) is SRM coupling rate\\nno \
radiation pressure effects\\nparameters of LIGO Voyager\\nconventional \
detector is lossless\"", TraditionalForm], PlotRange -> NCache[{{
           Log[10], 
           Log[10000]}, {-57.0800259820388, -51.55095439350851}}, {{
         2.302585092994046, 
         9.210340371976184}, {-57.0800259820388, -51.55095439350851}}], 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         RowBox[{"ASDScon", "(", 
           RowBox[{"2", " ", "\[Pi]", " ", "f"}], ")"}], 
         RowBox[{"ASDShLossy", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
               RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.5`"}]}], ")"}], 
         RowBox[{"ASDShLossy", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
               RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.1`"}]}], ")"}], 
         RowBox[{"ASDShLossy", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
               RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.03`"}]}], ")"}], 
         RowBox[{"ASDShLossy", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
               RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.005`"}]}], ")"}], 
         RowBox[{"ASDShLossy", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
               RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0"}]}], ")"}]}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 TagBox[#, HoldForm], ",", 
                 TagBox[#2, HoldForm], ",", 
                 TagBox[#3, HoldForm], ",", 
                 TagBox[#4, HoldForm], ",", 
                 TagBox[#5, HoldForm], ",", 
                 TagBox[#6, HoldForm]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", "10", "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"",
   "\"strain sensitivity (NSR), \\!\\(\\*SuperscriptBox[SubscriptBox[\\(S\\), \
\\(h\\)], \\(1/2\\)]\\)\\n/ \\!\\(\\*SuperscriptBox[\\(Hz\\), \
\\(\\(-1\\)/2\\)]\\) (log scale)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
       Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, BaseStyle -> Directive[10], DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8358225587057343`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"0c90bbeb-fa9c-4665-b31c-f37613bc6a84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "plotting", " ", "signal", " ", "and", " ", "noise", " ", "transfer", 
      " ", "functions", " ", "separetely", "\[IndentingNewLine]", 
      SubscriptBox["S", "h"]}], "=", 
     FractionBox[
      RowBox[{"|", "R", 
       SuperscriptBox["|", "2"], 
       RowBox[{
        RowBox[{"+", "..."}], "+"}], "|", "Rc", 
       SuperscriptBox["|", "2"]}], 
      RowBox[{"|", "T", 
       SuperscriptBox["|", "2"]}]]}], ",", " ", 
    RowBox[{
     RowBox[{"plot", " ", 
      SuperscriptBox[
       SubscriptBox["S", "h"], 
       RowBox[{"1", "/", "2"}]]}], "=", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"|", "R", 
          SuperscriptBox["|", "2"], 
          RowBox[{
           RowBox[{"+", "..."}], "+"}], "|", "Rc", 
          SuperscriptBox["|", "2"]}], ")"}], 
        RowBox[{"1", "/", "2"}]], 
       RowBox[{"|", "T", "|"}]], ".", " ", "Here"}]}], ",", " ", 
    RowBox[{"plot", " ", "|", "T", "|", " ", 
     RowBox[{"and", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"|", "R", 
         SuperscriptBox["|", "2"], 
         RowBox[{
          RowBox[{"+", "..."}], "+"}], "|", "Rc", 
         SuperscriptBox["|", "2"]}], ")"}], 
       RowBox[{"1", "/", "2"}]]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "\[Gamma]a", ",", "\[Gamma]b", ",", "\[Gamma]c", ",", "\[Gamma]btot"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TLossy", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "\[Chi]_", ",", "lossRatio_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Abs", "[", 
      FractionBox[
       FractionBox[
        RowBox[{
         RowBox[{"-", "2"}], "\[Alpha]", " ", "\[Kappa]", " ", 
         SuperscriptBox["\[Gamma]R", 
          RowBox[{"1", "/", "2"}]]}], 
        RowBox[{"\[Gamma]a", "-", 
         RowBox[{"I", " ", "\[CapitalOmega]"}]}]], 
       RowBox[{"\[Gamma]btot", "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
        FractionBox[
         SuperscriptBox["\[Kappa]", "2"], 
         RowBox[{"\[Gamma]a", "-", 
          RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
        FractionBox[
         SuperscriptBox["\[Chi]", "2"], 
         RowBox[{"\[Gamma]c", "-", 
          RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]a", "\[Rule]", 
        FractionBox[
         RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
         RowBox[{"1", "-", "lossRatio"}]]}], ",", 
       RowBox[{"\[Gamma]b", "\[Rule]", 
        FractionBox[
         RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
         RowBox[{"1", "-", "lossRatio"}]]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        FractionBox[
         RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
         RowBox[{"1", "-", "lossRatio"}]]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]R", "+", 
         FractionBox[
          RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
          RowBox[{"1", "-", "lossRatio"}]]}]}]}], "}"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RLossy", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "\[Chi]_", ",", "lossRatio_"}], "]"}], ":=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"\[Gamma]btot", "-", 
            RowBox[{"2", "\[Gamma]R"}], "-", 
            RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
            FractionBox[
             SuperscriptBox["\[Kappa]", "2"], 
             RowBox[{"\[Gamma]a", "-", 
              RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
            FractionBox[
             SuperscriptBox["\[Chi]", "2"], 
             RowBox[{"\[Gamma]c", "-", 
              RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"\[Gamma]R", " ", "\[Gamma]a"}], ")"}], 
              RowBox[{"1", "/", "2"}]], "\[Kappa]"}], 
            RowBox[{"\[Gamma]a", "-", 
             RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"-", "2"}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Gamma]R", " ", "\[Gamma]b"}], ")"}], 
             RowBox[{"1", "/", "2"}]]}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           FractionBox[
            RowBox[{"2", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"\[Gamma]R", " ", "\[Gamma]c"}], ")"}], 
              RowBox[{"1", "/", "2"}]], "\[Chi]"}], 
            RowBox[{"\[Gamma]c", "-", 
             RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "]"}], "2"]}], 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"\[Gamma]btot", "-", 
           RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
           FractionBox[
            SuperscriptBox["\[Kappa]", "2"], 
            RowBox[{"\[Gamma]a", "-", 
             RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
           FractionBox[
            SuperscriptBox["\[Chi]", "2"], 
            RowBox[{"\[Gamma]c", "-", 
             RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}], "]"}], "2"]], ")"}], 
      
      RowBox[{"1", "/", "2"}]], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]a", "\[Rule]", 
        FractionBox[
         RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
         RowBox[{"1", "-", "lossRatio"}]]}], ",", 
       RowBox[{"\[Gamma]b", "\[Rule]", 
        FractionBox[
         RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
         RowBox[{"1", "-", "lossRatio"}]]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        FractionBox[
         RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
         RowBox[{"1", "-", "lossRatio"}]]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]R", "+", 
         FractionBox[
          RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
          RowBox[{"1", "-", "lossRatio"}]]}]}]}], "}"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tcon", "[", "\[CapitalOmega]_", "]"}], ":=", 
    RowBox[{"Abs", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "2"}], "I", " ", "\[Alpha]", " ", 
       SuperscriptBox["\[Gamma]R", 
        RowBox[{"1", "/", "2"}]]}], 
      RowBox[{"\[CapitalOmega]", "+", 
       RowBox[{"I", " ", "\[Gamma]R"}]}]], " ", "]"}]}], 
   RowBox[{"(*", "given", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rcon", "[", "\[CapitalOmega]_", "]"}], ":=", 
    RowBox[{"Abs", "[", 
     FractionBox[
      RowBox[{"\[CapitalOmega]", "-", 
       RowBox[{"I", " ", "\[Gamma]R"}]}], 
      RowBox[{"\[CapitalOmega]", "+", 
       RowBox[{"I", " ", "\[Gamma]R"}]}]], " ", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "Plotting", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"LogLinearPlot", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{"Rcon", "[", 
              RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{"RLossy", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                RowBox[{"0.986", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.5"}]}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{"RLossy", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                RowBox[{"0.986", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.1"}]}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{"RLossy", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                RowBox[{"0.986", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.03"}]}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{"RLossy", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                RowBox[{"0.986", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.005"}]}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{"RLossy", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                RowBox[{"0.986", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0"}]}], "]"}], "]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "10", ",", 
           SuperscriptBox["10", "4"]}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{"\"\<Expressions\>\"", ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", 
          "\"\<lossy optical sWLC model\\n\[Kappa]=10\!\(\*SubscriptBox[\(\
\[Gamma]\), \(R\)]\), \!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\) is SRM \
coupling rate\\nno radiation pressure effects\\nparameters of LIGO \
Voyager\\nconventional detector is lossless\>\""}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", ",", ",", ",", ","}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"50", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"TicksStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
              RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", 
              SuperscriptBox["10", "4"]}], "}"}], ",", "All"}], "}"}]}]}], 
        "]"}], ",", 
       "\"\<shot noise transfer function,\\n|R| / dB (20log10)\>\"", ",", 
       "Left", ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"LogLogPlot", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Tcon", "[", 
            RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"TLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.5"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"TLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.1"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"TLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.03"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"TLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.005"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"TLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "10", ",", 
           SuperscriptBox["10", "4"]}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{"\"\<Expressions\>\"", ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", ",", ",", ",", ","}], "}"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"50", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "5"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"TicksStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
              RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", 
              SuperscriptBox["10", "4"]}], "}"}], ",", "All"}], "}"}]}]}], 
        "]"}], ",", 
       "\"\<signal transfer function,\\n|T| / [?] (log scale)\>\"", ",", 
       "Left", ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3", "=", 
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"LogLogPlot", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ASDScon", "[", 
            RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ASDShLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.5"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ASDShLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.1"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ASDShLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.03"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ASDShLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.005"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ASDShLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["10", "3"], "<", "#", "<", 
                RowBox[{"4", " ", 
                 SuperscriptBox["10", "3"]}]}], ",", 
               RowBox[{"5", " ", 
                SuperscriptBox["10", 
                 RowBox[{"-", "25"}]]}], ",", "Null"}], "]"}], "&"}], "[", 
            "f", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "10", ",", 
           SuperscriptBox["10", "4"]}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"50", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10", ",", "5"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<ASDScon[2\[Pi] f]\>\"", ",", 
              "\"\<ASDShLossy[2\[Pi] \
f,\[Chi]=0.986\[Kappa],lossRatio=0.5]\>\"", ",", 
              "\"\<ASDShLossy[2\[Pi] \
f,\[Chi]=0.986\[Kappa],lossRatio=0.1]\>\"", ",", 
              "\"\<ASDShLossy[2\[Pi] f,\[Chi]=0.986\[Kappa],lossRatio=0.03]\>\
\"", ",", "\"\<ASDShLossy[2\[Pi] f,\[Chi]=0.986\[Kappa],lossRatio=0.005]\>\"",
               ",", "\"\<ASDShLossy[2\[Pi] \
f,\[Chi]=0.986\[Kappa],lossRatio=0]\>\"", ",", " ", 
              "\"\<5\[Cross]\!\(\*SuperscriptBox[\(10\), \
\(-25\)]\)\!\(\*SuperscriptBox[\(Hz\), \(-0.5\)]\) target for 1\[Dash]4 kHz\>\
\""}], "}"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", ",", ",", ",", ",", ",", 
            RowBox[{"Directive", "[", 
             RowBox[{"DotDashed", ",", "Red"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", 
              SuperscriptBox["10", "4"]}], "}"}], ",", "All"}], "}"}]}], ",", 
         
         RowBox[{"Filling", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"7", "\[Rule]", "Bottom"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ",", 
         "\"\<strain sensitivity (NSR)\\n/ Hz^-0.5 (log scale)\>\""}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", 
     RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.835120879118744*^9, 3.835121247667739*^9}, {
   3.835121329705986*^9, 3.8351214256963387`*^9}, {3.83512145939685*^9, 
   3.8351214754757032`*^9}, {3.8351247999671583`*^9, 3.83512491743371*^9}, {
   3.835125002196806*^9, 3.835125125037553*^9}, {3.835125238930457*^9, 
   3.8351253139856567`*^9}, {3.835125392848321*^9, 3.835125402300335*^9}, {
   3.835125685181933*^9, 3.835125820398439*^9}, {3.8351260276810207`*^9, 
   3.835126047887781*^9}, 3.8351274463337107`*^9, 3.8351274774748287`*^9, {
   3.835128640721171*^9, 3.835128647862671*^9}, {3.8351397885449877`*^9, 
   3.835139790045581*^9}, {3.835143343959598*^9, 3.835143409528427*^9}, {
   3.83514414323567*^9, 3.83514414442521*^9}, {3.835144181007579*^9, 
   3.8351443448402452`*^9}, {3.835144417144515*^9, 3.835144445166535*^9}, {
   3.8351444787173*^9, 3.8351445256722593`*^9}, {3.835144591391017*^9, 
   3.835144605764311*^9}, {3.835144762448125*^9, 3.835144810753087*^9}, {
   3.835145190050756*^9, 3.83514530070345*^9}, 3.835145564987812*^9, {
   3.835145657435965*^9, 3.835145669228572*^9}, {3.835145860530944*^9, 
   3.835145861489225*^9}, {3.8351459055152493`*^9, 3.835145965487389*^9}, 
   3.835146013938201*^9, {3.835146143993353*^9, 3.835146181872806*^9}, {
   3.8351462588703337`*^9, 3.835146351748781*^9}, 3.83514641132631*^9, {
   3.835146446318653*^9, 3.835146449046102*^9}, {3.8351487636600122`*^9, 
   3.835148768069024*^9}, {3.835148929734826*^9, 3.835148945195519*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"a3269429-4f32-448a-a72d-fafb6b081f86"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{TemplateBox[{
         GraphicsBox[{{{{}, {}, 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6], 
                Dashing[{Small, Small}]], 
               LineBox[CompressedData["
1:eJxN2Xc41nv8P3DJJtkrMrKy5TaSrYQKyZYtmRUKmZlFpCIZGUVIEjJCZqIk
WdFRRjIrkrKl3/h+r/vp/HOux/V8vl7vz7hvnOvwO543PkNKQkKitZOE5P/9
u0XqfleZB6kGyf/+w0AlnEh1gVRjv6HSnIRdzwvbL0WGdheRryVVdNOFwDpe
B285hcPJOg0na6PhcV5tJsY4WGatvffsDewP7T2e1HAbfvu45xTrXfQ5os1Y
PDNgF9tP/S3ZcIWi/R3OPMyTMk6aXihEnvlyfoCnDA6wUBmNXYbbZJuzx9Zh
Flode8V/sONEB9+NnTuJ+5/WG36ZoNypIfb//eXFZkr//UN0O4l9/QuWjrcZ
4FS9EYFZFsxPCTh9VeeECZvTuSk86Ed88HSe44e7S34JHhbeqSH6P+ep8Fzz
m0wXQ+7usPHwlxT2PVe+4qIrB1OwkItkK+J6TeZip5cOYf5BG33hcQ30F7KT
XHMPw2qXOfav68LXjTNnjU7AH8UFigpOYp8weYH7linyiyPi4qZWyFuqS78/
toUZbskXkzrBNu61npZn4VXu1jmKC7DOsm6JzUXsT37/7lxFAPLxQmNp2hDk
0hGDPx3C4bHqqrZpdjKib83dyfQqgdX1TYVj2smJ9l6/y7XnEwXRt4UyPreN
UhDPKzfKyvKZgPuC7tvvnaUgvq8/+XkCHXMUxOfP0lswcWkR++T/FuXzr8Bm
oiWu7zawz+9UmdhlEkqiU0IrfgiSUxL71Y+qS7qpka/+qz8gygxziDf/6WOH
D5q1VoVxw1bh7QHi/HBgcYfyoBD2pw++24wQQ15H2tMgJY38s2T/lSE55JsW
g1oxSjBP1BDZAVX01Z4Otw1rIg8jn9CXPwbnyEzTfTGEm6y/dcWbwKTlC8YT
NnCU7V+rpAtwXiwJj/olnPeqYufot8vw1CjF/ZRQmIKWxkkrEvOx1Wwev+7A
ReOckpnpcMcunp+62ZTE9/ldia/sTy720Tnv880pRF8iUVj++BPkJ2r3r6yU
wecmJWpyq+AbDDJBhnVwySE51Y1G7HvvovAvvxX5wq2DzcZvYIZ6lcitd+jL
zqgfKepFbsysTWk2CPuo6bzZ8Rn9JDe960/G4Irk4ycsJ9HvbzTcTf4N+dI3
457SeeRsbGZJp3/DCpqWplSreF7mnqfZKzYxH3DX7j+7HVREp7Y4ZtBSwKG/
em6epYGd+TRjXtJTEffrG5YG8TIjlw7l9Q5iR77+6a+1HB/cdvCzzndRuNj1
mMpRSfj23VrZXFnsC2jbL/JPHrZdSuW2Vkb/sCAVU7UacrFT/pTM2jBDxNTm
uaPwUqnpYscxeGi0dVrYCG6iJwxHmMD5qrm9IxY4L96T6bWyDeyTEV6f4oC+
RcdC+eIZWG3NrtDAHX1B0feZReeQ05irJVH4Il+IfnLN0R8eqOAObQhCv+7r
dV+uK3AO04arXxQV8f3GaLrb9l5D7nnhv1NSCdhnnK2rF3cLvsLW8setAi5J
OJSjNwgf0Vu9VDMDfyarPLZ/HW6RE9SM3sJ5hY5JCl9IqYm+cYtUQpWSGr+P
mrz502hhq59jbEu70dfYa0R3kgW58InGHU84YNpgqRUqHvSN3r63auFHnsLl
3RAkDH92YxKQF0dfoOZZ9Lw0rLSsxNKvBTtf0JbNdoUbnC085Ctgsoq1rvnn
sN7OjAOF9dvu11glxaEF7r8/vMbVTk38fcT1K9Sm/y1yew2+5oRuXG9+YrPg
0Q/U+Pk24niNZAi5jBTZj5oRzPuFPDT0/Yr8RafOM4kZ5KTcM2xTP3C+rkds
YPYv5Am1YiMWy5jvpe7UZNpAzmHp9fDtP+S2hfTU0WQ0ROeuPPVUo6Yh7p/R
Odm9souGOC+VsihXxoT+xcmku+7syGsJ8hv7uJGTRA3YDvMhP9Ln35IiREN8
HnECnMJGYsi7vWtjqaVhtmbruRY5+DTDX6NgJfiBXVaFvCo8XaLO8VMTltga
CyrUwfX4nIgYdTgGUxT1EMiN0E+n4I8rNNl2v04XRo9Zot/c2Ej4aYPrN+He
HXfbEf2ZANtR+bNw8IcnhP88YIYDf2ODL8B5N46P8l7CfsXvGYSXl5F3HP0e
6xIK2+Ypj1JHor9IEkd4chWOsfkv1ige5qoVHf19E/NP2AIId+/AGr7tscrp
cP97ttHhLNhVwoUQngtvXquMFSzE/puTZKPtxfA+LROCRxn6VVm5sfRVsP7G
4khZ7bb3UXErdvUlnOYlQ1B/B0t0hMWO92C+Sfj9SPQAcpPIvYT9n+CZUa/Y
ztFtz1+lfuT8xLbnn0ZHYJ7F+8tbso6tmtv2/I0fj1gubnv+Jetyf5eR29Lq
x+ZsIF88mzaiTUKL5986IzdNBnPxK8XGUcNPQq6OSNLT4vkPDcj1MMH9CsKx
F9lh16RLI+zc8ObPVrk6PnjfI6eRHWKwrY+lnOJFuLqX5UVcAMwg1314JBhu
+a1jFh0NC10iXO5LgX/47248XwMHhrzSL9yCU67JOnLG0mFf1S0e88pduL9D
348+r4EbGg/7cDbAKoez7gW27CK+j9rXK22f2nYRn5fSiZO/VN7CVT1Fe7Le
Y55gRqbzrw8uG7K5YP8RlrKrTm/+jPnirwyvBL4gL/zxknNyFhb25jmsM49+
3pLfuYJFWCCwO5VqBf2crf0v3TaQ742MnOv4B9+jHGaXIKMn9rniFbQSqOiJ
eSrDTc95OuRsd2ZTDBnhZE7t5lJWOFFgmdV3L0xXYKjRLwDHiT9ylxeBqUpJ
76SI47wYwunGFWl64vMmq6mctSAgj1DdzVKrhHmSFle1PapwqE6La7AmvNmx
J2n4CBxoeKleTR/7Vvu6prMNcJ6fhSjTjlPI/3wOV3E0x7yPwyeXl9bwwiTh
lqA97OV+oy7aGfPf5qcnp1yRu/pqMuh6wVMr6cqPvGHn4D/ONH6YHycxSPQI
RG4fXVDTGYp8hHrHhGQkfPqGFX3iVfSHmCqUFq4jt7i7y+nkTeQDe84mlCcj
N8lpqmZOg3sFucYvZqJv9MiXbuA+8i7JdwqK+fCxcmGH1CL0Xytcub5WAuvU
/Vdp9Qz9VnW5sbpqWKs1nobnBfpNulOE0Cbkau/U7UZbkb84mRar8QZWHlh8
dv8d+unO0snrP+G1RY+Lp5h24/wo35tZbPBNtqDiWS74dGHEawLvbuJ+UeW4
ibB98J+3t0jeiqDfZJPGzSaB3CK80KSYAAsyl15YUYIX8qrjtVQx/0KhsTBB
E/m1122tH4/Az3dPEsjN4aj7P4yMrDFvJPfHM8MOOferjWtTTvCM2c6Hsq67
iZ/3ihma5mBPzF8JZBpuv4D+cTquNaZLyDmy+FltLyP3l7BdqsqAFfQGK13H
YMcNBg3GSfjGE/2Omlnsq7WLMnGcRz7J2DBC8xs5Q+uK67MV5Cp+sr+tN5ET
kivVIkgYiLm+V2/kAClsr/PztRg57MdLRx9GyYD/vloVPdVHDT/oOZIqQgd3
RYYJdDPAa/I1xQGscOFW9gcuUdi8PWbrhTJcaWFitMMeZv7G/+BINEz36g+J
z1UG/LzLabfLikW+GZje0HEd/mPqxbOSgPv5IaMRvO8mPEnL/MnwNvojU5MH
g5ORDzQ/Ty1MgbvuXV/pT4Xb/W3NdmTATcaylZKZ8HNJMharbOwvpRr0ibmP
/NHXRz3luQzEv88fNATLjD5Enp5mmEhbiPnrhkvHnYvhYPIMmvpS+OKYl9ts
OexVp/GatRJ2SWEW0aqGbb2nos/V4Dyz4zUT6XWwoUi8dns9+rqkdg9+N8Ia
w7I7+Fpgpedk9sdbYdmkwYaANuwTO1fE8/A1LKAXEtzTAXMJGn362wkz/xNQ
FnsP0w0tpZr1YD9Z5euViL5t7z8xw+zpB/SX3M9VfhpEPn9Ek4VqCPkUH4sv
4TNctFrkdncOli38aGbDwEi0VVKr53MmOCK0NIKZFe41uVbyhhNeV7/YKsgN
7xO3HwrbCx9nO74wxAdf3KFEobCPEX9v/NjHfUsI+avB3Qd+iMDzLRtHj4qh
z1YybfNAAlZL6/P9KwW7RDXGWshi/sb5x9nP5JBXW92tpFdArrrLjKXJGtbz
6esRKNh2P1OJEcKHmIj+8B/VYwNV+Oq78D4/dfh7ha9guzb8LNK87exx+Ix/
93yiARPxetg99NifG8FvbFvUx4zRDzI+5EplilxSp+KmjDk8elCyxsIS/VuS
+V+uWMPa/Lw0j2zQX2JJPdBjh7yAitF6zQG23IyN5HdGn3aBtFjPBXn916B+
b1fk5wf/bKa5w/xvvYRaPNHva5g68e0cHF1u58fkDSvmf8xS9sX8bNrJdsdL
cEZCx884f/SdTpfcEr8CsxqJ1J6KgNu1c8aDopiIP28uK3LS5sUgFxe/Ldd5
Df69dumD5y048q4qZ8kDWP56leZAHjwdKu2+lQ+n+RTeFn4EH3PhrzN4jOv/
a5n+1e8J/PQEM132U/QdNOMJ7WUwszy5zc9nuP5XoqHR7FXI/blXnqg/h/cz
XBg4W4v9n3bObiW+QJ6w4iDyvAFW/z5kONaE/q+RUwFUL5Hn9nbmyLzC+VED
tleutiN3GVqwG3kD645EqMt3wmLjLLzxXdhPN5W/Nd4Nz88qjRzsQ797rqP+
5gfk5b9OZ04PIk9emg9WG4L91q6cvvMZVt7xcI/2F5ibXHEj7Su8RfVmaGES
+8forGuPziBvYZhLy/qGXJ9PnmP9N9wjHZJi+nfb9cnt9iv+Bycr3jfdScpM
tN8hOXkrMmbi87NQf8VSRsGM69U2/0NJDXMfne2zpYXHDHYl0THALcbZPk5M
cJ6ZrHEtCxxj9VKWkR12tTVldOXE+fqO0wsNe5BLuFzuZt2L66V3py315EO+
4JWZ+FIAecWlZgNvETggZHIXrwRsFe4/d0kK8yrR1O86ZZDvjc0o3ieH/F+8
ZHygPLz37YnoGSt4vPtOKLsNXDAw7K9jB3t+FvK+5ADLjHu55znhvD/TlU59
Z5DXzP09TeqK5xH6+4iZrDv6WmsJhvae6LuIdHF+DIHFJNmYKa/APw/Y0ilE
bHs+SvnkZ6KQB6jNbyXFwHGm9BOGibCBtdlw6C2Y2SFr4EkSfM9T6g1tKmzv
49einA4LBTTUud1jJv59+C2EojI1Cy6JNChpz8H1+cSmFCw/wLxi4kiO0EN4
M1k43aQAbko/lxT5CI7KqYovfwzr5W9Ff3my7fNTrBPGUIq8t+xGgHo58pTq
Ae9zFcit6/d6ZFbBfC9dnDufwxOvS2w2auHCrmUzsXrYq1/NyLIR+w8Mxehd
a0a+PNqlVf0Srp1kU5l6hX7Yd1t51tfw4V/5Uoc7YKqVeRHfTsxz0e/eJf0B
HmE2p7AdRD+XM/tf/H/bvn+806t1n7Z934SkF78N4/38EvP/zjmG+SqZxgnd
cfQDFShH/CdgdRXDwfwp9AnGpVfJZmFRV0Ylx+/bfp6E+sw0zsEMyX2pPAsw
WRFBL2gR82uNd9Y+/sH1zX9YfqSwsu37+N3cKnkNHthRQ7O4gfm37Fx1hltw
k2SQxxMSFnw/tD/vod3JgvdpqdrpSo4883xWcBslfDv6n4QgDfoxGfbD4XTI
A8uaE0bpkZ9vF1BTZUTuPBw5n84MW/yeyFplRf84tY6hGQdyDd6Cf8+4WIj3
T5CnKmXkQb7/mJv9eV7M73XoYHjHDzP5izeLCaJPkRDvfU0Y+fqDOf4pUbhz
3fvr6QNwE0NfUi0BrhQmHOZQhLOMl/P6DsEXigJd9I/AzFaRs4oWMNWFibQ7
Vriezegj+r9PwwsZ+etGduhPlFE+LnFA/rHd1ZrOGfm74Te07i5wy2+xF+2u
cBV1vKeQB1zEO8cd6QVnyxu8GzsPX3NgkLp3EQ729x5Z84O9E3pvmF/G9bjk
yqlXBiG3qkn+yRSKXHEsQ7WeiRXfp61YkhkWVmKfwBPwkokdLj/kEqPKyUp8
3zJWJnque5CXBGjRJfFgn8Rdmff1vMhF++lMmQXh/MV1djVh7BNknB1yFUXO
Z/DKvkEC5ngd4ukmD6dMeUgnK8Is5FaLDQdx/u19upWzh5AzaCkEsKjBN+wF
D6lrwHRhTFtuWpiPyyRpTj6MnOrFfGSjDivx92HM0Gedb7rIydY6qFmPwRHs
NZ3qJ2AShYJEd0Ps3/SJZG06Ba8+tctgtYBncrvLPdzg/+5qdjQHwhZV0gk/
guGBfh4j9jCcZ/KbllkrHO5lXP/gGQkbycyk3o3GfJfBgHXLVeQd18u/sMfD
ukU5eVo30G97feOs103kh6eDxVJvI28h95hrSYY1BC1L51Lwvhu0jvpypMEq
DvIK2hno14btW/PKxH7XEjHf9myYbVh2ju8B+q20B88G5sE+yhpf+vJhPrej
1pKPtt3vXYMPMY+xL7jN1HDsCXKxpdNvDpbCH/c5ayeVox9j7FH/owI5IdxH
Uaca+fjTy2XZNbi/myNXxNfqkKvtuvbQuAH+cSiRt7gJ+9LcU9LIX8I6aZnM
dq/Q/9Oel/C8HX6w/JiSqWPb+xV6Fu7RCW+dqt1o7YKLI5ov7e3Z9vkee+/W
8wGuoh/8KvYR5zurjthEDcFMnpODw5/hpvQfJxVHMX/uze+3N78g515dP/Lt
67bPlzBpk/YU8gBTauXMGTwv4SiGiuVvyPvL2aWM5rZ9v77sLXz0E7kMg7DA
zkXkI2qS907/wb54LwJb1TLymQ4tGreNbT9P1vSiWv5i32HRk1t7SNiIXjSz
CLhEykbs50TbLXaRITeocPEUpUS+Oe41FU6NvIjxkv0nWuQWGsFDBHqY4nyk
yQ0G9Csy47qmmZAzbKS2pLPDrysri0j4YUXxn4Gdctty62L6Lflt58W7PZBW
gmdfCCs4KMOBc1/f3FbB+TR779u0qsEZBra/ljTQlwjbEy2iDb94+pHD8gh8
fOxOcdxReJjhlMYLPXjL+91ZXgP4xoO4DSMjmLfvaGKEMc4v3Um+r8IEuQah
pWrSDHm3c5g+uyXscEdlRNd62/t7teYdaANHLFeRF9thH5PIxbRhBzjXXFZy
tzPc+vyxiY8rbDLrOpPrjn2TnMLBHzzZ8P+/9L/upjy/7f0G5eQqecO6qncW
ty7DH72MY2SCYbes3VyOoXDcv1jNVxFwZ3PozevX4ZM6rlIcmfC4n1CLXjbs
UzBuGnQf17fzY/ZscS6uP5nKJmTkIfqCB7kYGQrhSrfBPM0iWCc9Wcm3GPMD
HSc780pgjgSdPR7VsJXhIXfZJvh2zPtl8xbse1PvFBnaCpMsrex+2AYrScTf
e/savuDEt3+xAy5Ir6jkeAezUQ93nemBDTS8reP7cP/R/uQz5R+Q/5mU3EEy
BPe1hMqlj8M060xNTROwlmzB8ekpuDz7/RnCd/jbgNOi1Rzul59+NTT857bv
45F42sJfyG8G86V2/cb1vX5WIbi0hP6/b7ple1ZhBYFhVa11zJ+z9O5w3USe
f5PcPHEL+XB72tdKEnZiflyhZZOUHI7yMovdT8lO7NflfWM1okYuxswsnbkL
pl5wclBkgzVEVudsONiJ1x9gGx8YxQWX3uGjfMyN/kxnRVLPXpxnfmi4eO8+
uO0ReZuHCLw1lmZ8ez8szyE1+lycnfj3mKdhi8eoJPbnxZitksug/7n+W5TE
AeTMS6GMpwiwvgRz1mUFOMKpQCxHCa5NP1Tdpgz/6nmvPaeC/aLUzt3M6sjt
NVZPK2siT/WPn7XXRt5dwud39QhMNVVBWnIUVufRS+zXg/Odl3v3H8c++v/7
5Q0zQO7328iq3wj5sPJW5v5T8OGIx19CTeHiNxZC/eaYZ2GkcNtvBQdZPCsO
PQ2PZ9sv9NliXn96F2G/A/JyqTr/UCeY08+1ru8M+jNkL7VC3eHqJJ4O0fPw
3k8du0K9MR8jEHCyzxefn3k3oTuifshNy3o/hgRg/sVqGHdfIHJBDUl70RA4
/upQbkgY+r+7rk73hiO3YpMXF42CW2zGz4XEwLd+qCyLXIelaRbJQpJh3pX0
QKFR+KGeV1+wOwfy3Nnpj55w2uaZTcJ5DuL1MJuNM9zyRp7w1FZozhc5JfWn
g3p+cLijucHDAHijrs9xRxDmL7Ea+duEwD/PdV6vCYPdXuvmsEbANkGab97F
wIP99cP7Y+GTUsqL0dfht1erKMYTOIjfvyNfDuxRu4nraVR+Kp1+G/2DyeKH
l5PhZ3MFFsZ30Zc8KuhVkoa8ICcnnOYezL/OneKSBbM+YW3cmwsnUtzuC3yI
fdT29DMDBbi+yJq4zQNF6P9lomRMLIb9PSOFvpdg/terfwePliH34A02yH0G
TwasOv6r3HaeJffbK/8h/z/kbL4y
                "]], 
               LineBox[CompressedData["
1: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
3OCn1muVz9zR/w98TBp9
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4397#1"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1: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
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4397#2"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1: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
+w8X0unl
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4397#3"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1: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
VA6+avATOZy9HcjfToWGJyXpefw/EFCX1+t14Lrz+PhZoa7viPnI+PLxLips
3dI7mhDxHU0sjje87qZCUPJD31Ozs8gvkMJTMESFq34rINn9DYV7x11Wn6YC
P9+GT5vvTqPrtk6N9kI04J45mLv54xekzBZrGiNCg9VTH/Rmyr6gmuKy1+UE
GkzuvjImH/AFtf/4Nb0sQYMsAs8KkecLmomNJV2WoYFV9OjTUo0JpFl968SA
Cg1UJ9i1Rko+ocZD3SurqjQY7FaMXBf8CRn/m4/boEGDxGKYyTT6hA6b6OUF
/EeD7C21jmtfx1H4aHcHQZ8GFm1ycwNq46iDf4G1z5IGe4jrChuHx5DlXcqd
ICsa2KXtJ9jcHUPvrJF23kEaBPumelnEj6Hv1+LNvx2mgZzRrzAnrTFE3CYV
luRKg95yK63hSx+QvSsMPAukAZf6m1Lu0ffox6PEeLhIA0JJ/p7RymFU6t/e
kX2ZBgHzxOIBn2HkrMAt+O0KDUxneyuDNw6j/syI9EvXaBCvkL+n8uYQqvMK
uTxXhtdP3930ZdkbFElyLy96TAOzTO0Bh64BtP3l9dmlRhp81N9jq5Y5gOaj
xlT2N9PgcPXvkYu2A8j9u9391TYaINt0VdHp12h3m2WDdTcNvrMRf6USXiNi
wI5unnG8fhsSbuac7kMvFM8RHD/j/rmzVd6Y9KHY0UcH7n+hgU5MiE8WuQ/9
Nd025DRDg9uNnfQz9b1ohLHlY/1vGuyt/q9ndF0vKnklPe/NIwMHdvf+ZC/p
Rlob/0r2bJIBqT25NNOQLtT7cfrk2hYZmD2Q0krW7EK+l0dfbVKVgdG7Nb9j
5jtRCe+zuERNGZhvEtyw+WQnIk5e+LMTyUDAhsGSC8EdaK5IbbDGHLdfu3Mh
KbcdpdjJq322kAFx07yfZ5zbkRJRKlXMSgZC5Fu4fim2I6codqPjNjLQHe9q
frz+Gep26qlRdJaBDjPbr9FjbaiC5pd95aQMtKb+COI3eopMB5znOgJloLx9
Jm9A/CmaOG+9dzFYBvxX/6sW/9yKqKu63NahMrBUemfPdHQrSn4rECQcIwPS
i2lZA89bkOfFMqvIbNxfReKvZ0ebkSxhguhRJwPma3L9XcON6MfQnPzThzIw
wPPvv+NJjejhtTVtZoMM/OX0Io/oNCKLrWSnd80yQG0J2cBf2IAizM1um3fJ
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
XBQ8VVS4C/0POc51NA==
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4397#4"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1: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
                "]]},
               Annotation[#, "Charting`Private`Tag$4397#5"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1: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
0W8GIv8vx6lALQ==
                "]]}, 
              Annotation[#, 
               "Charting`Private`Tag$4397#6"]& ], {}}, {{}, {}, {}, {}, {}, \
{}, {}, {}}}, {}, {}}, {Ticks -> {
             Charting`ScaledTicks[{Log, Exp}], Automatic}, 
           GridLines -> {None, None}, 
           FrameTicks -> {{Automatic, Automatic}, {
              Charting`ScaledTicks[{Log, Exp}], 
              Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
           Identity, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None}, 
           DisplayFunction -> Identity, DisplayFunction -> Identity, 
           Ticks -> {Quiet[
              Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
           AxesOrigin -> {2.302585092994046, 0}, FrameTicks -> {{Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
               Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
              Charting`ScaledFrameTicks[{Log, Exp}]}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{0, 0}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{50, 10}, {0, 0}}, DisplayFunction -> Identity, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None, 
             "ClippingRange" -> {{{2.3025852339686432`, 
              9.210340231001586}, {-1.9286549331065747`*^-15, 
              15.459461395219229`}}, {{2.3025852339686432`, 
              9.210340231001586}, {-1.9286549331065747`*^-15, 
              15.459461395219229`}}}}, DisplayFunction -> Identity, 
           AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {True, True}, AxesLabel -> {None, None}, 
           AxesOrigin -> {2.302585092994046, 0}, 
           CoordinatesToolOptions -> {"DisplayFunction" -> ({
               Exp[
                Part[#, 1]], 
               Part[#, 2]}& ), "CopiedValueFunction" -> ({
               Exp[
                Part[#, 1]], 
               Part[#, 2]}& )}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{50, 10}, {0, 0}}, 
           ImageSize -> 300, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
           FormBox["\"lossy optical sWLC \
model\\n\[Kappa]=10\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\), \
\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\) is SRM coupling rate\\nno \
radiation pressure effects\\nparameters of LIGO Voyager\\nconventional \
detector is lossless\"", TraditionalForm], PlotRange -> NCache[{{
               Log[10], 
               Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
              All}], PlotRangeClipping -> True, 
           PlotRangePadding -> {{Automatic, Automatic}, {
             Automatic, Automatic}}, Ticks -> {Automatic, Automatic}, 
           TicksStyle -> {
             Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
         FormBox[
          FormBox[
           TemplateBox[{
             RowBox[{"20", " ", 
               RowBox[{
                 InterpretationBox[
                  SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
                 
                 RowBox[{"Rcon", "(", 
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ")"}], ")"}]}], 
             RowBox[{"20", " ", 
               RowBox[{
                 InterpretationBox[
                  SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
                 
                 RowBox[{"RLossy", "(", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                    RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                    RowBox[{"lossRatio", "=", "0.5`"}]}], ")"}], ")"}]}], 
             RowBox[{"20", " ", 
               RowBox[{
                 InterpretationBox[
                  SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
                 
                 RowBox[{"RLossy", "(", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                    RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                    RowBox[{"lossRatio", "=", "0.1`"}]}], ")"}], ")"}]}], 
             RowBox[{"20", " ", 
               RowBox[{
                 InterpretationBox[
                  SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
                 
                 RowBox[{"RLossy", "(", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                    RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                    RowBox[{"lossRatio", "=", "0.03`"}]}], ")"}], ")"}]}], 
             RowBox[{"20", " ", 
               RowBox[{
                 InterpretationBox[
                  SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
                 
                 RowBox[{"RLossy", "(", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                    RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                    RowBox[{"lossRatio", "=", "0.005`"}]}], ")"}], ")"}]}], 
             RowBox[{"20", " ", 
               RowBox[{
                 InterpretationBox[
                  SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
                 
                 RowBox[{"RLossy", "(", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                    RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                    RowBox[{"lossRatio", "=", "0"}]}], ")"}], ")"}]}]}, 
            "LineLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                Directive[10], FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm], ",", 
                    TagBox[#3, HoldForm], ",", 
                    TagBox[#4, HoldForm], ",", 
                    TagBox[#5, HoldForm], ",", 
                    TagBox[#6, HoldForm]}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"Directive", "[", "10", "]"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ), 
        InterpretationFunction -> (RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
        True],"\"shot noise transfer function,\\n|R| / dB (20log10)\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          ItemBox[
           RotationBox[#2, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
           Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 2}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", "Left", ",", 
           RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]},
    {
     TemplateBox[{TemplateBox[{
         GraphicsBox[{{{{}, {}, 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6], 
                Dashing[{Small, Small}]], 
               LineBox[CompressedData["
1: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
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4495#1"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1:eJwd13c81G8cAHB7j3Pc91bIZTeokKL6VMbvKEkqlBXKTCgVEopCaBhJRpQk
JDOliFAyQkbKbKDISEOi3/PcX/d6v+6+933G5/l8Po/CQW8LFx4uLq4/3Fxc
+LNm1c2WBx48cG1AuezQginYDeXutD/GA599Qjieu1ryWuw0D0g19HKsOdfQ
fjiWB25WXy7HTq391iX7gAc65YUrsE9a6Q9E/uSBLTLyldgyokYO6/7xwHBm
OMf3n+wc+ijICwmkCY4/s5w+bKbzQu2lp0+wLSciR37o8YKpjWcVtkZY96Rj
KC/0t87WYL8PjJUjIngheq9WLXbUccMdjVG8MKtyjOPPrsW5a+J5YX/eLMc3
dsa58N7hhZWGc8+xhWSN391q4oVmfqkG7MHysvoRKh+4m59+hR37wOtHyhI+
eDBYz7HePUVFcwU+CGwgNWEnpl0JfajOB9rXb3O8PfyIfuRGPvC372jGfmih
XKTuxAc+zze/xr48kZDqVcAHhuN2ndh8Xx/+ayvig0nfAo79R9856pTzwbD5
IscHPigo/6viAxWZ9C5s5bf5BZfa+KCo5mM3duXzuqriWT5IpIT2Yo+m/Bia
28APivu4BrH3J9MM7Dbzg/WF/Ry3JOpl12zjh1TZco6LL4e6R2/nByF/7yHs
4PPi35fY8cPpLx+HOfvlp8QHofygZPDhE/Zmkz3KEQ38MPNJcxyba49ywJtX
/LDcNYnjavtfzazX/HDDapHjrceTj1f18MN8ePMEtlFG3/PfY/xQJe8zyVmv
ny5OHmICsKOieQbbKtM/w3yXAPz9NjCHTc83nk3bIwBPlff8we4tp/03YS0A
J983cry/+dFk5EEBmKktn+fE6+/FTbV+AtB3OWkB29nsfJ92ogBczPTmPozs
8yeJwXwnACWnw4WxryilvK8fEIDiEUIEu8g8Lc33owCozOdwPJt9i9U4IQDB
Cq2i2P67H6if4hKErNBlEtgBeY0bupUEIQQmyNjn7BZsrh4VhLojIrLYtyK5
ZDcfF4TehCKO60p4B76cEoSqkP1y2AKiIk5bzwpC5O378tiR5YTHdIIgLDdw
ZGHHkjQDdz4WhJibX1Swr9UcTBEVEIJhvxtrsYOn2y4dFhGCHYO7tLCdl26J
qJUQghIpIW1sjWB5n0CqELys99fBrl//3uirqhCcv2y7HvtH4Z6ZRlMhoLnu
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
AuYV6/tHG9hwz+5P2QMPFjyjS67vrGfD/8vCb/A=
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4495#2"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1: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
NvA/5JS6SA==
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4495#3"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1:eJwd13k8VF8bAPCy72bMwlwJE6JUZI3ksYRhLBFJtixlSfWjbFEiayVbJCUR
WqSSPSFCSQqVNtKmFCmVouJ97vvXfL6fufece85zznOeo+izy9GfZ8GCBcML
Fywgf9tWnu29FswDxjfl8hxNuEARUjkmtJsHhNuWFZD2fH3R3msPDyivXHuG
9Ex29UOxWB6Ist9RTlpjpqt/ezoPfDfiqSd9uv3LE7lrPCDHFH5OOtJ17avU
aR5ga5YpOqE7NW+dGZnlgfRejgppuqiFt948D/BETC0jfeWm/et3grwwO+eo
TXqU7fvWmMUL7KQNlqQ3TqR++GnIC/IenJ2kV8UPTm49yAvaA9xW0i/3pS9m
JvFCRZZkJ+m0vettu9N4Yf+iZ/f+317A9Yurc3hhzZW4QdKn7I/585bzQtp1
9iRpITnLF+d6eOFRUIP8RvRIXW3nB2k+ENENSSKdfi3kZ8EidBzrKGnDS0pK
Dop8UFV+P5t0bmHWwfplfCBdY3uWNDdx59pUIz7I6b3cRLreUaVqmS8fZDpN
/yCdOXH8dEglH9xsmAh2RvN9rp/vq+KDJwrKYaTDP77YqlvHB78j/aJJu79V
VJlv4YMt8n9SSKs8u1yZ0ccH1YapZaSbbne0XP/BBzWHNd6S/ljw8/WMAT8o
bx33cUFvyZcx9zTmB3q+VjDp3lzDsjYzftCdSAgjfT3zYNBhLj8YSMEh0vuT
xb8v8uSHuqClZaTpYcp8cJAf9F1ufCZtbO2sktTFDw+jTfdvQi9wVol+dI8f
Qhsyk0m3ev26z37ID468nzNIm+7N39vylB80390oIW1RNHT79xg/NIs9vUua
O+3vGywmAMNVvDKuaNfi8CKHDQKwsCSyiTTrsuWPQmcB+G+1fBfp53UyVhOb
BSDLuK+P9Jb7jZOpPgKQxuf6gbTn77l17WEC0Jv3TWoz2s8ueUgnVwDW8Hnv
IP3fbB4h+0IAfAYTVd3QWcoFLztfCcDo8mYd0lUOhYWh7wRAeJbfjPSPsnPs
7gkBqLW57UE63OnasqgFgqDb8S+bdHRFt8GgsiDwu+/h3YI+5PnPLXu3IBC8
v76QPpe6QM54ryA02JnNke6o5n31KUoQuuLPirujBURFfE0TBEH5d7Y66dQ6
ZvC344IgEugUTDqdorHP/oYgNK+zHyd9os2nQFRACKZePPnrQcbrW1/GdhEh
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
cbwKWQuiujjwP7awZzA=
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4495#4"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1: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
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4495#5"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1:eJwV13k8FV8UAHDZsnsr3kh4CWlDSEVOlnh6RZRkz1KEFqJk+WVfKrQgiUhS
kiJLWhCFJDttlFQihJKi4nfmr/f5fubOfTP3nnPmXEXXg1YevDw8PO8W8PCQ
v7WrclqKvXlhtcgOh0ZDLlCElJOEDvECn3CcC2mnDwUWzkd4IT69xp30zLnS
NrFQXkiJNPAlrT7T0LEvkRckhALCSGfWfeuRK+aFb6Z1OaSP2eq9j5/mhdlA
6ijpeo3Hl/tneeFHxYcJ0gzRzS5r53khQqviJ+nbjyw+fFrIB+xfh+dJD7Ld
Phqw+MDISIX+DL1jLP7Lzw18oElL3UB6dcTL8T3hfNBRUZRMujc4cbFUDB8c
HryeSjohwGRrUwIfNCoUXCI96Hm3QPM8H7x//fg66UsWSR58+Xxww8z0MWkh
OdO3V5v5wO1M8Q/S/RXl9V+k+WH69ianJnRise/PjEX8cFRjlQfpDTeVlCwV
+cG+l+1DOjXrbPg9NX7o6FI6TpobfUAvXp8fCl1OpZK+Z6VcoubGD1Unv7eR
PjOWkulbxA+6fa7c52j+kXvz7SX88L7ivTXpwKG3e3Qq+GFhm7s9aYePisrz
1fyg0Re7n7Ty61tFye38YOutGU/64ZOn1Xen+CE2WLGR9FDGzw8z6wXgZWkB
txltny5j7GQgAKPpm3aSbkndcK3WSAAmvn9wJH33TPj+k1wBOKRmcJB0WKz4
j0VOAhDS7XOWNMN/KT+EC8Am/6w3pA3MdyrHNAjAvrl8vxdonp3Kx7ueC8DR
15YhpGucf71gtwlAtAJ/DGnDgPSA6lcCcEU+IZ305uy+J7+HBeChPPMxae60
h5u3mCCIGGjQWtC2VwKzLbcLQrll90PSrFumU1k7BeHrvoEG0m8qZMzGdgtC
pPefDtL2L+6Px7sKwgHv7cOknX7PbazzF4S2ykSpVrT7ttg+7VRBKF1k50/6
8GwaIftWEKp3nNNpQ59dmtFb/14Q/kyYG5MusczK8vskCNMZNCvSU9euspvG
BOGIV4cv6UDrYrUgnoXgOc28Rvp4YdP6l0sXQmPNI1Y7Osrpn925QwshVGaR
RAf6ajyPnEHAQpgp+SNH+mkp3/uvQQshemBsJWlBURE3w8iFMLRLZBvp+Aop
78kUnJ9POYl0IkU92OLBQij/9ofRib5Q65ohKigEIXJPVneR+zXZnrxPRAhu
8A8BaXeFTTF1EkKwIm+xFenVYfKHg6WFgHB/coR0/brezSOqQvBPduo+6Z93
dn5v2iIEKe3T5t1oq8tmnIQzQvBAXPF4D1q3pWLjYIoQrIt4epr04n/KWoYX
heCv9385pIftBORnrwjBqn9rnpE+IVU75VUqBBq3rrBeootOb8jmvBSCvZY3
q0iLhqz6JSQnDPFx0sRrtOXzVrtaRWFwzQvVJJ1KHK4KVhaGS9d4tpBmV96N
/rZaGDa9dwwhrTuty+gyFIazk8f6SbsfMtK47CkMfu6WRW/QVe623tqlwjCc
GLmnl8yv0pmWb/eE4d/d56GkOXwZmtcfCcOMjfZF0l05fTNEA85X5ttJeuSd
axzPG2FoWnvUtA8ts9s37/m8MNjwUnXeof22Rrzfs0UERJ1jV/WT+1fQriVg
KQJlnuXbSF8UVEy4vkMEfPpEDpJ+XF2tNe4oAqblSndIUzT/xYccEoH+KQWt
D+hbUse00lJEYEejq9EAmb/vfeOb34tAcZ3FiU/oEL1H7w5+EgG1oKg80pR0
MS36sAjoHP7URHqt1c13u7+LQMJ3ZanP6JgnQ2u+8ItC9bMHRaSX3HB7t0BN
FMZFrIYGyfzw271m7RFRgKP5YcPoig7Gw4RjomAw++QaacqaNuN3IaJwbE68
lXTtj8020dGikGe6ROEremmAVlBnqih40V2ekB49Kll9sFIUPo5zmaNkPoQ+
Nb8+Jwq3y7a/+Ybu7DvR+YdXDHxebRQaR6/YqOdgsVAMGpscdUi/myvxnZYU
g55pjXOkN53ITjZWFIMT7ussJsj6HBnc028kBu9kf7ZNkvERp+HKiheD4cd3
/k6hLYTldzedFoNjnArtn+T4BDHL4LNi0DTIc5B00Mkv+n0ZYvA3y2mAtENi
JiunSAxEa7jN02jF88Ltql1i0NW6/tZvdOHlDwa68uIwFluQ9xftodCqM7xE
HOqlS7+QXpzzcOVFVXGo3S2q9g+ddCVN9q+GOCS6Xr1N2i9v669qY3EYzk2o
miP352Zlkel+ccjWPD7CY4TrWX5GbleZOIQpJkUJoGHDiOm9SnHwEp18Trqq
2tiPVSUOsQ45dEH0/cZf9W/rxSH89Ldc0sVvHA+5vBKHlNvGjQvR2XPL6rz+
iMMRu5UKIuiwzbWeIZskwKj3oKQk+m+T7Lk+EwkIk926h/Rxi4BHG80lINUs
6i7pQFtV2gJrCXD9vWA3Be27P/FBtLsEFF40uU41ItfLTiIpVgK07m22ZaDX
93y/m/NCAraskFhAoAU9Z1tH23H+IGlH0h0zC0bX9kjAui+RlaT3y1GVWt5J
wK62WH9Z9EX31ednxyVgdb7p6CL0zHfvI9Y0Sei3XTgpj74n+VlLYJckTCpc
NldGR+WMWlraS4JE/qe7pC3XTPlkOEtC2PkMORX0kA1fnoanJBgmOX8nLZOl
yHQKkoTumK05y9BHVzj9LM+QBBfuauZKtA7nZZlnvyS84E+x1UK7/qEA9bMk
9Khveks68ZZ5U+WwJEyrxDhpoz9Tq96J/JAEDeO+vTpoc9+OyB5eCtz50xmm
Sz6/dmXhMSYF9jtHNeuhdzXEzD1cTwF7PuVPJmif7Fwjqj4FaptsgjejI4Jq
4jwMKGC1T5duii5aPkuTMKZAvSPVxIxcz2RfFeetFPirrFFsji6z3WG5wIUC
WWcGblqg6V8Vr5hEUyD0OEPDDi32dIrHL5YCqns5XaT5sxucs+IpwA5UP2aP
ntrpK/frNAW8JWVqHdA9j+9duJ5KgXW3XJ2cyf1It0gSvU6BpOTzle5oNic0
pL2JAlE1FJ5DaELJ8u2/Zgp8O8l4QJo+z16v1kqB6vhPgYfJ/ytr/BXRSYHi
jNEJP/SgAsNfq5cCQ41l3wLQBb8LvNLGKJA6N0UNQWtcf2XjSKGCnUXOvzi0
3bknPvdoVNDq/f05nlyfsDsRdCYVOk+7tSaQ8bQjrugZiwpLQ47mnUIfWaAr
qLOECmpXHzkloyvs0sokdKhwUXtY8AJaX9yGUWNPhViW4drr6L2/N6nJOlHh
u2Cq8Q1yfz+uhEAXKoSJLbMuQL+rFPBZ4UGFVRa0I4XoE3vL6i4coIJLjuzT
O+i6aob/4XAqiPQ65VWiOX6d7ex8KkiklXo1k/Hmntrvd4MKs+u0L70g43Hn
7vHam1TYkkC0taBj1r0Xc7tDhY8VLL129BOeEdPcSiro75BZ2kPmfxJv1ZJm
Kgx5nNbrJ+OzUKNAaZIKBhpHT/8k4yFr6t6RH1Q4a/l2fBrdnVTR8OQnFapl
eq1/k+vhr//ZfZYKt9UfKPwh68N6jkIeHw2MXyq18BhjvX3mkrpUigbOWrZB
Yuglg0kRyhtoMPTfFvml6O7XQje36dOgOds7Uxkd+yK8M9CABvJTanKq6JFS
f6UGIxrMchIVl6PvRu6q38elwe0G1kYNtJGivMgNRxp46L1t0Ee7ORSdWX6C
Bt9nVyy3RTMtVe5bR9CAteRZ/250g1H2QHAUDXzYmy7Yo5cvP7umOQ7na2oW
c0b/mAno9jlDA1H9U2J70ZFp+qyiKzTwEvrP8wg6t6M5W/0pDQzazXPOoqN6
nE7ENtAgqXG+5jx675sJ53fPaLAwV+djKlptgCF/qoUGIRPaqzPQJZMOmV9e
0uA6tH7ORddSxtKzvtLAabtsWxm6f5v4OTEKHVYI7Lj9lrxuddnPjUaHCU/r
pe/QV200rO4z6MDYtSGrH+3ptJPqyaKDanHHhc/oCd/MpDo2HQKcwovH0fOn
Vp46rk2Hrtt//flN8PvxfGv0kB0dlpUZ7lJHD7SlhEk70qHhZSbPGnR+T9/R
zc50+GM7XKiNVh/w3X/VjQ51Z50kNqANZ05buPjQoSBg8U8T9F6VFtarUDoc
+vpphwO6KHJbUUM2Hazn3wecRPvFp+ZPX6GD1cOhyET02qR32Uvz6NBKWKWc
QddcPHAu8gYdMrp31qahO4oTjxmU0CHh00mTq+jp9y2GFXV0uNLMnHqENtCz
eHltkA5B9fniU2gtqzux/MN0OPH60ptfaFVPqq7rCB28vBQL/6Ap5zsvyE3g
eJVxB77N+L4ju+zOz9DhZMm6aRo6JsOlL1yMAeaXY8TWoJtnD3900GTAuWGb
yUB0DaXz3H0tBuz/EmIfjC5T1jKWWcsApu1k03/oLKvpq50bGODh+74yDn2o
4PhecxMG5C+PfXURTbeLHF5rywCT6e7FNWi7yvPjtDAGfAoqnZcwxffrbr7g
cYIBoePdQgz0me/8hvciGBCQMSLNQjcuDzjvGMsAGzWK2RK0TtbOddeTGZBL
CE2uRVMjpSL1cxnA4Sj4uJLjuRekPBsZkOqvr/cQ7e7VVn2/iQG9Tzxptej5
aCEv8RcMCA8IG28g56s+9qCknQE/jBKqOtFXNXa7/HvDgJk5ieIRU7KfJgrO
jjHgQbz5+CIz3L/+DP1HNCaE/y2UiEaXz8XzDDGYsM/vrNNJtJbcsTqaNBN+
DAaUnUGr2+3geMoysU+0OZaFxl5nJ12JCSt67a3voWUaQ328tJkwdfi0xxj6
923nDKYtEx5aL9J25GB/0LLVCeyYsGfVvSPu6KnRDYreDkyId3J56I2eWCaT
X+PChAmVWbfj6KHcthJvLyZ4JuxgXkC/TtvU9Pg4E37R2oW60ff/WzLjm8mE
jcuTA3eaY/4Uqfk3XGYCyNDCnNBSfRpjCleYEEM9nrwP7bcePnReY8Jgs0ZP
EFrtp8OzdXeYwEh5MJiFTt+fmi5Qx4SRpeaqI+hjO4XXZw4x4Qw3/MypLXhe
jqKUTn9lQnWYMDUN3VUivcpyjAmyCZszc9DqFGU233cmNH2U6y1HDzUZinj9
YYLKz79TH9C2EPJGS0IKxu5eyFnPxfVfPn68eY0UOF1ztp9GN9oXSsxpS0FE
V9LjBVtx/CmvK6t1pcCIUaAljj4+9vHZWT0pSHJ5tUkJ/fD2K5ndJlLgsujx
jBUatGrLP9tIQRehNFaCNtNP+T4XJAWTDYOWodu48MrXKkY9RAqsBGP8EtBe
WZKEa5gUBHAkctPQCfPxm55GSMHBnMUaJejmx2HJJ0/i/WuV+IbQ2zd7rpLJ
lILAMfVEGwuMf4sN+zVqpEDI63O1gSWef2Nap3fVSsGLNM2Ubehnj9wiw55I
gdJd4WBHtO6KU5eeN0rBNtXsY8FoKeG+Fo92KWh5EKx/D91ZG7bm4oAUCBhn
zmltx/O8Tu1fXgFpSOrdMLTBCuuzr038soXS8CJy9xQX/eDqV6alsDSMfQqm
O6HV6PTVmeLS0Hx9yckTaOEJtz1rpaQhpWinaz26/oZAvbeKNGwo1a/baY31
R46T1MWRBvuNNiORO7hwzX26YxlXGjrCzFamoyUKc6X+2yYNOrNjcUXovvVz
mcuspcGzpPn0a3Sw7d3CMAdpWCWk066+E/uHc3JNqgeloatubvcn9GqR7/yh
56UhM/SwtcsuPG9sv2zWkSoNujnCwkHouQvcUyrp0uB1zr73DPqFSj69I1Ma
tpWU9tahvU0c2Cr50hBZ/ct0mS3W8xP1Bu2V0iBzdGRwBi3/6+Lxpe/x/hsU
vbt22B/D3EurD7g+J8/xtKBL4/don/goDUusng8Moc0WqU68+SINU6KtPPL2
WN82lXkkT0jDvlmna6fQNSdbLf8skIGNht7Fvg7Yzyrwq7QrycDS0YMppk54
nvHaFzWnLAPV7ec5e9HTJU0fli+TgZOHWPLR6ASTM5diVsrApkelq+rQd/cv
punpyECviPVHcCb7O91/10xlIM+7+76hCxfyOL6dIftl4M5Cvg8urvg+ucNf
XvnIwPuqyaEYdPpfj79aB2Xg4Z152Vvo07edlo75y4Bo1ze+WXQA0/KoY6gM
WPGue5fixgWTD5qyG5Px+t2Bzm537LeP/XadL5MB35pvzkf34XnzeuT38AUs
MCvtETTy5cJmoZfzHXwsaP61yN0f7empJq4kyAKx+OSRXHSBartKvQgLOt22
HhM4wIVVNxY7ijBYcKX7QWQTWqegsuGsMgvyVaRXOxzC+QrHL+VuYUHU421X
M/y5sO+OvenTFBacfxxS6XMc94fmceBbGgvOvNt+IBt94MiBFOmLLNi2dbtS
FzpQN/yjVxYLvo5tS9oQjPFec+0/iXwWZOruApEQLuS0TVbsuseCk5JVE3mh
XHg7Eav69Q0Leuq66c0nsP+0OmNB72NBZXGo7j/0QOnFQL33LLAfXrxiVTgX
vh679STxIwu4VS+OJqF/83S6rBllgXmUqZtFBPZX1MXpIf9Y0D/TGlobifXc
X6Umb54FHwJGwsbRi7rVv7QsIOBF5WnVRVFcUEo30lYUJEA20XP/EbSmolf7
UwkCuPYmuxWi8TytUSosqUAAhfewmVsM9uO5PV/2sgloM/yVdwpdzpx5WqVE
AMtZya0MvXhWP+LAMgK6ojRH+GO5MFrbMPtCk4D+8YTyDLSC9tdXS7UJ2CJA
T61GW+eLVYSuJeBnWVDxAPr+ye3+K/UIsH67KF45jgtxO96OnDIh4PONf9pX
0Q/r/z37ZEpA+SbKwcfocV2F63rm+P8030d9aBs5D/fRbQT2JZIx9HiM56RY
Q+PteL+Q6fQK9KMFBQqXrAmY5r29zwStNPitd4stAbMPitb5o21tqQ9y7XD+
tcLJceiTTWvS/zgQYJxGdF5CV+nZHLV2xvnV7v+7jf5edGznzT0EmHg/FKlF
KytmrOFzJ0Cs5MdUB3r3uUdU+70EzHxVrxhAnxLoHy/xJGDpDmPuJLrmKG+L
iDcBtwzmiubQU8NKha6+BOi9Xf1GJIELKg6mCfcPEnD1781GJtquxcuT5kfA
4R+mAfLoRDi1ef8RAtY5975RQdeWFCnVBhKQKLJ5ahX6p1I7LxFEgE3T3oda
aNW0H/2Hgwnw2KO8ah3aQViq+lkoAfye/sZ66ORg3UzFEwSYrzWe1UfXjdkF
B0UQMPYyzXwjeto5dHd7FAFbpwLVyetqHZfXLoslIOjF1LX1aCfjWmZ4PAE9
muo3dNBnyj/9eHWSAPmQHZoa6CeqCzvUEwmwi76or4b+fXHZnbhkAhIKOfWK
6BXi3MT+swRcarvXII12/u+Aj24KPs92C30x9NnJZPPkNAJOScaw53G96t3u
qg6lE7DswJDfBHq2u1sQLhEgbsVU60evNPv9KS2LgBHFGqMW9PkV+jmmuRjv
l5+dzkM3Zjn/dzmPgCun58oS0X8oEY6/8gnQeuesHoh2/VnPyi8kgN3uLgbo
1H3Dv+aKCPjRc2MvG930WrTHppiAZ++c+fnQGlWWZwXLCdjpk/G3CuPRTHNZ
gs49AoKZxq2X0E7XFkTsvU+AdvkRehA6IbHkcH0VAUu2/h1cgc7mPek1XUPA
+bHXh/nR5YFue5TrCFD6stXjDebHgBNje0wDAdnRqmHh6N8do2blzwjIdxu5
bIWWMH0Kg88JiBv7x2aj168OVN/cRsChQh7Th5if5+ZfSgq+JmD9AY+BXszv
Av87C3XeEvAyrnE4G13zJW7eo4+AqE22HDf0aOu68acfCCAcCiQ+Yn0wzs5o
if6K17vTr7dgPbFjHKkvGyUg0lB0XzT6UBy36vM3AkL2qoWsR1869O+WyQ8C
LIoXFF7G+vQTnE8L/CUgnvJkjQ3WL7GytdHacwRUuR29N4/1jr2MEurBIwtq
h5kX89HbqI99nvLLgmaLd9D3//D7/oHNjRaXhXYJs64jYVzYFTEoIiAvC9Ev
Te6uxHp7YLqKV1tRFl7rNfU/wnoctT9t1n2JLBx8MH6Ki75jZfb1iYospC4Z
8PEI4oLQkoJnUeqy0OOldSX6KBcq63zj+A1lITzpelcE1v/AjXJBy4xl4Vx8
yqJ5P+ynK5u9tm2WBYqVsMpxdFHR8i0XzGVB1sb8rM9hLlxJHxZfYS0LCb8O
Lzc6iPl+0OOctbss7JNub7i/H/df1jHrSowsPBLiNxrH7yefP7cUnsuCx4Bm
7ibsL81WHbym5rIIPjob70iW4cIaV5qg7MgiaDho+Orb8BaQuTKzvDJcDjxv
OmycqdwCuXZ7qh0lFkN2+JJz4UlbYOJhQhxcWAxPOtJPZezbgv3pb+n2lfLg
/CLBslV/CyjRBhmelfJgGS6X91J6C8TwivnYqCqArKrfjoRxc3jbFj2U5qcA
vimcjxcbzSHybXVGb4UCmN/Ysr30qjmojspq/uZVhEL6RsvFYeagsE53Xoqj
CP894rzdaWcOM3baX7pOKwLjRsGYz1pzaI3YUeL1Cj0iklBMNYffg2tKFyxm
w0rTEoXUbxx4yWNwRFeeDSbBwqdnxjhQTphrHVRgA7uwZ9YB7b/NpbSXzYbf
n56/WTLKgW9lp0orVNjwwGriZvEwBz5HfS711WDDT+XMMy8+caCDnVb22pgN
klZdToJvOVCsdyWAspkNV8YvT3u94UCyzS1tU1M2BCUUJr14zYGtCXVlpRw2
VF2KeHr+FQcaJ8fLkraxIbnvl8GSHg5U1ZiVm9iyYVz5/gFo50DmG+vAkN1s
CF03wLraxoGQKSedu3ZsGLyzpn4hep1qQLmCIxvylLeyW1s4UJqUU/5nDxvE
ZzSHHJs5cO5GYaCmGxvcJ8MuPX7OAb+6Ch0vdzZMLh/evhSt/utFec9eNiRN
02pGn3FAkvo6UNyTDes6Wo9Zor+pfdIx9mKDWWyeZmkjB5qNx6eP72fDzeqz
Y9Lom06z5cXebJhQTr0R3MCB/wGpTKzl
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4495#6"]& ]}}, {}, {}}, {
          Ticks -> {
             Charting`ScaledTicks[{Log, Exp}], 
             Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
           FrameTicks -> {{
              Charting`ScaledTicks[{Log, Exp}], 
              Charting`ScaledFrameTicks[{Log, Exp}]}, {
              Charting`ScaledTicks[{Log, Exp}], 
              Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
           Identity, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None}, 
           DisplayFunction -> Identity, DisplayFunction -> Identity, 
           Ticks -> {Quiet[
              Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
              Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
           AxesOrigin -> {2.302585092994046, 51.553382046101895`}, 
           FrameTicks -> {{Quiet[
               Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
              Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
               Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
              Charting`ScaledFrameTicks[{Log, Exp}]}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{0, 0}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{50, 10}, {0, 5}}, DisplayFunction -> Identity, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None, 
             "ClippingRange" -> {{{2.3025852339686432`, 9.210340231001586}, {
              51.553382046101895`, 57.0800259820388}}, {{2.3025852339686432`, 
              9.210340231001586}, {51.553382046101895`, 57.0800259820388}}}}, 
           DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, 
           AxesOrigin -> {2.302585092994046, 51.553382046101895`}, 
           CoordinatesToolOptions -> {"DisplayFunction" -> ({
               Exp[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Exp[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{50, 10}, {0, 5}}, 
           ImageSize -> 300, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
           NCache[{{
               Log[10], 
               Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
              All}], PlotRangeClipping -> True, 
           PlotRangePadding -> {{Automatic, Automatic}, {
             Automatic, Automatic}}, Ticks -> {Automatic, Automatic}, 
           TicksStyle -> {
             Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
         FormBox[
          FormBox[
           TemplateBox[{
             RowBox[{"Tcon", "(", 
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ")"}], 
             RowBox[{"TLossy", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"\[Chi]", "=", 
                   RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                 RowBox[{"lossRatio", "=", "0.5`"}]}], ")"}], 
             RowBox[{"TLossy", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"\[Chi]", "=", 
                   RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                 RowBox[{"lossRatio", "=", "0.1`"}]}], ")"}], 
             RowBox[{"TLossy", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"\[Chi]", "=", 
                   RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                 RowBox[{"lossRatio", "=", "0.03`"}]}], ")"}], 
             RowBox[{"TLossy", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"\[Chi]", "=", 
                   RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                 RowBox[{"lossRatio", "=", "0.005`"}]}], ")"}], 
             RowBox[{"TLossy", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"\[Chi]", "=", 
                   RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                 RowBox[{"lossRatio", "=", "0"}]}], ")"}]}, "LineLegend", 
            DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                Directive[10], FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm], ",", 
                    TagBox[#3, HoldForm], ",", 
                    TagBox[#4, HoldForm], ",", 
                    TagBox[#5, HoldForm], ",", 
                    TagBox[#6, HoldForm]}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"Directive", "[", "10", "]"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ), 
        InterpretationFunction -> (RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
        True],"\"signal transfer function,\\n|T| / [?] (log scale)\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          ItemBox[
           RotationBox[#2, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
           Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 2}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", "Left", ",", 
           RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]},
    {
     TemplateBox[{TemplateBox[{
         GraphicsBox[{
           GraphicsComplexBox[CompressedData["
1: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
8wGHZgl20zyH+YB/j+jdpHkO8wFWFvMv0DyH+QDJIcswmucwHxBxQLmC5jnM
B8SpSFXQPIf5gF8D6j3UX2A+wLxiXhv1F5gPqFWY8Jr6C8wHnJmul0j9BeYD
GM2yDjTPYT5A/d6W/BttOB/wd3pOQFcbzgeskwq8atCO8wEHHYUsr7bjfICw
dtJlzQ6cDxhQjU9u7cD5gO7PjtqFnfh9BpzXIimfvuK8gEyJ6/inPTgvUPZn
zTv3PpwXGCzq00jl4rzAmNSotgdcnBfYc3HGJI1enBc48Nvw5dx2nBfgDLWa
jK7DeYG5D5zt+x/hPEC47mWnPr55gPC1o+bS/oB5gIFHjwL+dzw8Mg9gHzee
S2uYBzCd7hJJ+wXmAXoKflj97/rQyDyAAiP5X5rnMA+QaPPoGe0fmAeIb/+V
T/Mc5gF2ZrZr0DyHeQA366ZQmucwD3DwqPkXmucwD3Dq9kZPmucwD5DYMGWI
+gTMAzR2Th6mPgHzAPeZC9bSPId5AHuNdck0z2EeoK/1bzX1CZgHsB5qT6c+
AfMA12ZxQ4+34TxAf3Xsi/I2nAeI2/QlW7wd5wFyYwyueLbjPMDjCs+7ne04
D9A3cUrj2V6cB2gwmX1CmovzABEKDXNpnsM8gJpK3rvOPpwHSP+2+duWLpwH
6AkzarjchPMAPy+a+ndWov8/tNsWsZXP/0VVhA+V9qH/J7VxSmu56P8bKsIG
d3LR/8Vqe/L6u9H/T9tWrlNqRe9/2WPs4sxF7+9XPvG5g4veH8zSk1nSh94f
tX/yFZ9O9P4l0/rsz/F5v617ydUiLnr/nRUte89w0fdFix3LaJ6D70ukKc5O
7EPfZ5x4Wt/KRd8P6fb0WMpFz78rNT2ijoueH67/r1o+yfMLo2PcBouk9OND
84IzuOj5vtHrf9DXA88v2m9y/iMXPV/k9c6BZi76fY99rQ/1IfD7IIu/zvR6
b6JL+/c/N6X05b5r+7zgoufbqWRprOLzfPnlzWz6ekf7jpgdOSGlX3HJ/v4X
Lnq+7Iy0z7Q/eJ5/tu0d/fwEz5e5fUeOfv6UKI1/pXpYSl/PTWof/TwBzx9c
VRJMP2/A8wNe7S8Q4/P8p4v6cncrsXmen7rvabgHqcHzZa0kr3uSGjw/6tSb
6V6kBs93ufC4Yy+pwfOLs8RjfEkNnt/yILPcn9Tg+XblG/YdIDV4fo1UxPlw
UoPnq3Ibl8WSGjz/w0e3OSdJDZ6v5WVxJZXU4PnNJtGCd0kNnp95J3S4ktTg
+awLeVXdpAbPr32qt1B6Ppvn+TFfP+yxJTV4fsKqeJ2zpAbP11cMtBJYwOZ5
/rW16x6HkRo8X3JUnLiOMpvn+XnnA7KUVdg8z4+9ln/deiGb5/mt8cVThhax
eZ4/vuSS5ZglbJ7nu4oGLD+xlM3z/GN+iqHqy9k8z3ffYlkQqMPmeb7t3x6n
+QZsnuf7KbZZOhuzeZ4/+QqjcB+bzfP8gsE10hvM2TzPrz3bO1qQxeZ5PluO
eSCNvF/w/LOWxSUuE9g8zx86oVQh14Se75EpraNwBz2/3rbBZ38sen5A6vfh
EGf0/BCm53htXfT8uZWhB8Mk0PMT00dZb+pBzz+osHlsSBl6/phngb8u8Xl+
mG+477Qg9PyOw7H+lnye38HMP+rG5/nGYbL7M/g8P1Ls3ovjfJ5v+2harT+f
5zOUvs+g6wE8/96kjEl0PYDnD24JtdlDavD8ulkSfXR9gOcfnukh50Nq8Pw7
BmdE/EgNnl9912UgkD7fiOe7T/5pFUpq8PwDt5PnR5MaPD9FsdfwKKnB85fq
y+86R2rw/NUOw8XppAbPTz5w9lQxqcHzf1gYb2wgNXi+mr6+wxjS7+D5tfs+
LVtGavD86pp13T6kBs9X2WA/voLU4Pk7FN/n6pH1AJ6/Z5R1zltSg+df1XUv
vkbWB3i+hUR7dQ5ZH+D5xVUd2jPIegDPd5sRL969mM3z/Ma1syI11dg8z3e4
uqDJWIPN8/zZLMc32lps3v0LZtzxyVJbyeZ5vtap8xYqZmye55s+jA1pJP0P
np803uSzCdkOnj/rVfJof202z/N9z+klZcxk87z+Xpahzdj36PUVQm+/0PwE
r6+x0S2l/QJeLy/VOkz7Bby+8feqYNof4PX9tZ3B3qQGrzf/pme0j9Tg9Srz
XtYEkBq8vtRi99tgUoPXj5Y2so0kNXh94N6sy3GkBq9/+6+GymlSg9cXOdgf
TaP1iNfv+n3/dD6pweuVm0O7akkNXi+VV3nnB6nB68epMjWUyP4Hr1c6GXvB
idTg9d0aKYzbpAavfyM6SmAO6Qfw+oJ02Zs3SA1eL+J+v92D9Ad4/e2v8t67
SH+A159+27HjFskj8HqfoJmHPUh/gNeXZ/kLJJH8BK9ndmS5uqqzeV7/NELL
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
78CvK31X59DrU+DXTp0zqqtIDX5dFb5tTC9dDyN+rXZc/eFM0q/g16L/+Lmt
pedTI349erTy2AukBr9WSj1TMZ70L/j10OX8e1GkBr+2L/JNMiD9DH7d0zvq
+VLSz+DXheXKCo70eHrErz/HTbGdQPIO/PpY7anQaSTvwK9nnxE/k0nyDvza
O/ywujXJO/i+/Obb1VMuk7wDvz728Oah4yTvwK9fuVj7J5H+Ab9eM298sy7Z
/+DXx4UaX0eRvAO/ruOsys8g7xd8uqjwc/pGPp++XrtWhvYD+HR2y/vptB/A
pxuzmh1p3oFPrxp7/y/tD/Dpj5P2Lad5Bz6t2XlBieYd+PSF4AYpmnfg0zE+
egdp3oFPz/uxy5nmHfi0xcCGszTvwKd/n/Sqo9dnwKeLe1UtaN6BTz+s9tzy
iNTg06/jl1p9pP0z4tPnYw48FCD7G3z69ZhDEzRJDT5dqbl6oR+pwaeV3Hr0
q0gNPn3pedodJukH8OmFTms8G0gNPr3J2NuUfp6AT5udfyTxgPy+waflHi/0
VyB5B9/Xn8eI3PSH9Ad8X/+Cp6KLzUnegVcn1k64aUvWN3j1QPbqsfT8Crw6
6NHHpX9I3oFX754weW8JyTvw6BD331HP35ny/Hnamr7Ne8jjwZ97HxfWDpE8
A38+H/MyZio5Hwdvntdf9OsQ2Q7ebBQQJfiJPB68+U5jh+AS0o/gy6ed1tWP
4/NlFWXfOFHy8+DLQhPPtdwi/Qq+/O3ssnx6vAi+rKBfl3SL5B348iO9hIz7
ZDv4coMkq3oaeT/gyyen1oy9RLaDL9eskfOW5/Plgt8JOb/J64EvK4ufEqX5
Cr4sFFdqcYrU4Mv+so0ZpaQGX1Y2OBrbS2rw5WrndrFaUoMv/468ecib1ODL
jrpSm7L5fPlP8L18mrfgy5FjC6Lp+gJffu8xMZOuL/Dl56ras+h6Al/2yqn9
RvMWfFmr0DWR5i34snlwVR3NW/DlgUfnYmnegi93uYzLo3kLvjxYztlE8xZ8
ee34GEuat+DL+c3CLdQDwJcvSuU50LwFX57BnupK8xZ82dkhx62Hnu+M+HLW
8ceD1APAl9/qXtppR2rw5TDxw+fPkRp8WUBZavI4sn7Al1NfJ+hGkBp8WaJD
znYlWU/gyz7Rx/IXk/UEvvxaXtFpPclb8OWsovOLR5P1BL78qfTntokkb8GX
U24MNaWQvAVfbjqtW80keQvfly84NtchnuQt+HLb8mqv/aS/wZfTNQT16ec1
+LJ2taslm+x/8OXGg1bvykjegi9LruMILCTvD/xYKjFR9wefH+eVKMyk/QB+
fOsJQ4z2A/hxXsfiDTRvwY+HZJ1+0P4APz7W16VC8xb8uOfACWmat+DHFRNn
CNK8BT8e/hW7g+Yt+HFo63djmrfgx5u6Yzxp3oIfjzNbdInmLfhx7xpPQZq3
4MdXIsz/0Ovh4Mey7v619Ho4+HHrDt/JNG/BjzWnZsosJzX4cdE2rUn76PXO
ET+e/0wj5QWpwY8vqi+8a0D6AfxYZGpK/HtSgx8fmlgadpP0B/jx5CUNXnmk
P8CPlwQV1c4meQvf7+9XbaA+SPoDvt9/fUVzDYPkLXhyef/+SQYkb8GTX5Xd
/ecz2b/gyX+nT+ifS7aDJ2+/s/WSjDab58Wjxcd0u9aZ8nxYR3qNuwt5PPiw
bJqSzjTSP+DDR4OGV/9L8hY8OOOXUpY/yTfwYG/xvCr6+uDB53xsdLeRfgT/
lRa1XZTC579nDsx8Mpr8PPgvayjq7BPyeuC/O0X6G2negv8Gv1D63kDyFvx3
+szsX9lkO/jv5eF2XQ3yfsB/xzXWdafT67kj/iuhMqewiM9/O7U88kXIdvBf
ydBRYlxSg/9eYGp+PUJq8N9NFUU/XpAa/Nc4y7uf/jz4b2OCtFIVqcF/z3Tq
aoSSGvxXxSXvwmo+/138cR/nK9kO/htxdVbKe1KD/46TeDOB/v/Bf3uPpPQX
kxr8dztbJ3qA1OC/e2pN47tIDf7rVHI9gj4f+G+v9+EZEnz+u1jIZlMZA/33
5d2bR54y0H81P2xhP2Og/zr/ubKngoH++8Dm2LIqBvpvwKySxdUM9N+oKAmp
dwz0X2HHyEWNDPRffd8rQe0M9N+Oh5nD/Qz03/1z4g6OZaL/rlIR+UeKif5b
IZCwTp2J/rvfX3zJBib67/rVyb/p8ST4r8iJ227Pmei/bQdWySiw0H/1Xpol
H2Wh/87PYaxVNUT/9X9yZVK/Ifpvs9/tvyLG6L8hwzdEwk3Qf1cqH/Ghx0Pg
vw6XHTcOstF/Bd0+P9CzRP/dtNKuM8wG/dc1TXRF9gb034zxYz5t3oL+a3K7
dhxzJ/rv8YeBue7+6L+ioz1Ntkag/9q6nx4ujEL/DYm7Wh3qhf7r1KSWYrAK
/bfZkWVzZAb6b+luxtvudvRf1+ubVv7MRf9NDpl7LCQO/bfkVdKh0y7ov44V
HMtKPv+1DJmV+obPf6WV9thw+Px3Z4Jp8yk+/zVLW7XmNp//pk9daTmbz38P
FJi+t+XzX/G0a13ufP4r3inEyeLz34XGt2QT+fy3VzExLYDPf3/5TPlK1wf4
72CGgUM5A/337e1r7OcM9N8cy5r8Fwz038AZM0VeMdB/70+a41/LQP9tPxz2
bz0D/Tfr0ergFgb6b2bOmrpuBvpvd+S11GEG+i+jfvfkyUz03z7Z82aKTPTf
jWMUWwyZ6L9hRaKjPJjov5GSjOVXmei/ekt8YweY6L99v1SU17HQf5XH2mS8
Z6H/Wv/96B1jiP57vN2uz8cI/TfRS3dFvjH6733rmRr2pui/R9kh8fR4Hfy3
r7TVcr8F+m9cvU6bjhX675n9ntab16L/KnzdnWDsgP7rXtTt6OvC5v19d9hD
i0unvdCDax7VTH0ejB6crvfn5p9o9OBo0ZKldiHowYWCAsyezei/k62qHcbx
+W+X8aNk2h/gv1vjs77R/AT/jQiYU0bzE/xXSG+JGO0P8N+yogLJlwz034SX
g2Y1DPRfr22WN+sY6L82ZVuYTQz035Ye9rSvDPTfmkrt9B8M9N+9GxbKCjHR
fxvXje+TYaL/ujkefL6Cif4bd+R47jYm+u8pjfZxJ5nov21OsSsamei/Tive
l+qy0H/t10hX5bDQfz06Wmw2GaL/mp2PmLjUCP3XxFTWfYsx+m+/Z6xTlwn6
b6eCmVKnGfrvKyn5rlvm6L9jWWf/qK9B/61+9Gd9iy3670rGjqydm9B/hbOb
XtdsY/P+fvvKPInFmzzQg2MmF/am7kcP/pz2W+NSFHqw9i6npvpw9GAXiZel
edvRfwcUz8ZX8PmvmliiDu0H8N+CGG4VzQ/wXwOvc3U0P8B/c2Zu8KpkoP/e
7R4Sf81A/3W2vF74hoH+azt6yrIGBvpvt5BVWysD/feD9EBVHwP9N1nNv3MU
E/1X/Z7ROnEm+q8je/G0hUz033PxTddXM9F/E//0Twlkov8K1Tuk5jLRfx3U
1/lNZKH/ugkecN3LQv+tzhj2EjBE/015Pq2/wBD912iwZnaREfrv/Wiznpkm
6L/fxV4K1pii/3Zln0zWZqP/enepHrZbjf6rc1v3ka01m3d/eknfztaf69i8
+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
pzjMBw==
            
            "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
               EdgeForm[], 
               Directive[
                RGBColor[1, 0, 0], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 
                 PolygonBox[{{2873, 2894, 2895, 2877, 2879, 2856, 2858, 2851, 
                  2855, 2850, 2849, 2848, 2847, 2846, 2845, 2844, 2843, 2854, 
                  2842, 2865, 2859, 2881, 2878, 
                  2880}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, {{}, {}, 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6], 
                 Dashing[{Small, Small}]], 
                LineBox[CompressedData["
1:eJwV1HeYDgQcB/Bz7pxx7sybbjkrpHJcRBpUlLiTSFOnkHRXSkNFi4wooyka
ZpoyirYiLWWkQrQXRclo9/n98Xm/3/d79zz3u/d9n7eooqpfZbWEhISzPEQ2
8fC9XMYt9KGEY+2JbNBncxmJ5Nl+kMu5lb50oJO9Oh/qDzOC6uTbfpQruI0y
OtLZnsRH+hwuJ4kC209yJbdTTinH2ZPZqM9lJMkU2nbLF7iDfnE7Xew12KQ/
whXUoMi2R77I+Hgd4na62lPYrD9KJSk0tf0sVzGB/nE7x9trskV/jCpqUmz7
Ra7mTs6O2+lmr8XH+uNcSS2a2fbKl5jIgLidE+y12arP4ypq09y2T77MJAbG
7Zxor8Mn+nxGUYcWtl/lK0zmnLidk+ypfKov4GpSaWn7Tb7KFAbF7Zxsr8tn
+kKuoS6tbPvla9zFuXE73e1pbNMXMZo0jrD9Ll9nKufF7fSwp7NdX8y1pNPa
dkC+wTTOj9s5xV6PHfoTXEc92tgOyjXczQVxO6fa6/O5voTrqU9b2yH5Jvdw
YdzOafYG7NSf5AYacKTtsHyL6VwUt9PT3pBd+lOMoSHtbH/ItcxgcNxOL3sj
vtCf5kYacZTtT7mOmVwct3O6vTFf6s9wE4052vaXfJtZVMTtnGHP4Cv9WW4m
g2Nsf8v13MuQuJ3e9ky+1p9jLJm0t/0j3+E+LonbyaLEz/6V73I/l8adZNPB
z/6T7/EAQ+MmcugYXzy8Lx5kWPx9cmlCHvkUUEhRvIc+zE1lMc1oTgta0io+
V/FZifc/3j+/2zbeq3j94zWN1yn+d0rje48P9IcYzpnBlsU3+lLG0cfzbL7V
n6evnsN3epnMpZz2nv8P7vePbg==
                 "]]}, 
               Annotation[#, "Charting`Private`Tag$4582#1"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1:eJwl1GW0VVUUgNFHd6N0d3eHhQKCRXeDTXcj3Q220iDd3d3d3dIlIencwx+T
vdZ37hvce895L0OTVlVaRoqIiHjlnyr0oyr9qcYAqjOQGsxlEIeoyTwGc5ha
PGA+Q0gaOSLiiLM2D1nAUN7Sjzrr8IiFDONt/ZizLuXN/zgXMZwv7ck4bq5H
BfNj52JG8JU9OSfM9alofuJcwkjW2b8mBSftDZhk/pin5qWMYr39G1Jyyt6Q
yeZKPDMvYzQb7N+SitP2RrwwT6Ey/9qXMyZ83igRERu170jNGa0xL81T+YTn
9hWMpQmvtGl8ygv7SsbRlNfadD7jpX0V42nGG20Gn0f+/56uZgLNaRG+x3Cz
vZ+Zrn/Ba/saJobvX9+kfU8azobvlUj6LHsV3tjXklM7Zu9DAX7UkmmbzS1J
y3v2O86fOed6cfsV8ygqmJ8436Wc+YHz9/C9hfvktX85q4ZngAgmsk7/wVmQ
+/wW7p+ffeb8ybXk5i3mVpQ3P3am433zXecvnPe6Evar5tFUND8N75UPzQ+d
f4RnwOsi22ebqxGJd+y3wmdlveu57MfNfSkUPqeWQttqbk16PrDfc/7KBddL
2q+Zx4T3FZ4hLYo2x1ydyOE7sd8On4kNrue2nzD3o3D4HFpKbZu5DRm4qJXS
rpvHhv83PG9aVG2uuQZR2Kjl0U6a+1MkvDctlbbd3JaMXNJKa3+bx4V7FJ4L
LZo2z1yTqGzS8mqnzAMoGu6LllrbYW5HJi5rZbQb5vHhuw7PiRZdm2+uRTQ2
a/m00+aBFAvPhZZG22luT2auaK2IoS+w1yY6W7T82hnzIIqH+6ml1XaZO5CF
q1prYuoL7XWIwVatgHbWPJgS/Kml03abO5KVa1obYumL7HWJyTatoHbOPISS
TNLSa3vMncjGda0tsfXF9nrEYrtWSDtvHkopJmsZtL3mzmQP318c90ZvRxzX
lmj1ic0OrbB2wTyM0kzRMmr7zF3IwQ2tPXH1pfYGxGGnVkS7aB5OGaZqmbT9
5q7k5KbWgXj6MntD4rJLK6pdMo+gLNO0zNoBczdycUvrSHx9ub0R8ditFdMu
m0eG3zuma1m0g+bu5Oa21okE+gp7Y+KzR5tBVv2QvQd5uKN1JqG+0t6EBOzV
ZpJNP2zvSV7ual1IpK+yNyUh+7RZZNeP2HuRj3taVxLrq+3NSMT+8PeMbiRx
bY3WnMQc0GbTnXLuaQ9nT3rRmz7hbx5J/dxar29BEg5qc8ihH7X3Jj/3tbLa
TfMEPgrsj8JzTCXzc2dlZ1+v/Q9+tARq
                 "]]}, 
               Annotation[#, "Charting`Private`Tag$4582#2"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1:eJwV02W0VAUUgNGhu7u7u7sRkxQJpRtUuhuU7gbpRpAGQbq7u1O6uwTc98de
55xvLqz35s2kadSmWuswoVAofthQqGK4UOhV+FBoHEW4555HH5JGCIXWa/WI
yX6tEq/t4ynKffd8+pLM8/9o9YnFAa0yb+wTKMYD9wL6kdzzG7QGxOagVoW3
9okU56F7If1J4fmNWkPicEiryjv7JErwyL2I30jp+U1aI+JyWKvGe/tkSvLY
/Se/k8rzm7XGxOOI9j0f7FMoxRP3YgaQ2vNbtCbE56hWnf/sf1Cap+4lDCSN
57dqTUnAMe0HPtqnUoZn7r8YRFrPb9OakZDjWg0+2adRlufupQwmnee3a81J
xAmtJp/t0ynHC/cyhpDe8zu0FiTmpFaLkD7DXZ6X7uUMJYO+U2tJEk5ptQmj
z3R/wSv3CoaRUd+ltSIpp7UfCavPclfgtXslw8mk79Z+JhlntJ8Ip892f8kb
9ypGkFnfo/1Ccs5qdQivz3F/xVv3akaSRd+r/UoKzml1iaDPdX/NO/caRpFV
36e1JiXntXpE1Oe5v+G9ey2jyabv19qQigtafSLp893f8sH9N2PIrh/Q2pKa
i1oDIusL3N/xn3sdY8mhH9TakYZLWkOi6AvdFfnoXs84cuqHtPak5bLWiKj6
InclPrn/YTy59MNaB9JxRWtMNP1Pd2U+uzcwgdz6Ea0j6bmqNSG6vthdhRAb
tYk0JYbXlmhVCcMmbRLNiOm1v7RqhGWzNpnmtKAlsTyz1GvfE44t2hTy6Efd
ncjANa0VsfVl7uqEZ6tWVDtn703O4Luq5dWO2TuTMfisuW+Zw7ju9dLuK/bf
yR/8bdz3zdHB59XrcdzL7T8E75P9kRkh+E7Yb5pDgp/Z/szc5vli9vP2Wmaf
4P0wn5h1zFzBZ8u8a/5ojgz+X/OFWdec6t/nM4+7a5pdgvfafGz+ZGYKPvvm
bbO2OTz4/c3n5g3/toz9qn1A8F7bn5oFgs+P/YE5JvhOeS6ue4W9BhGD76v7
X3Mo271e3H3B3pfcwefbfc8cxTSv53efsHclc/D9ct8xR3DT62Xd1+wDKRh8
L7V42srg9yISO7QS2kV7P/IwXSugnbR3I0vw94rmZ9PL6dfdgygUfHe1+Nqq
4L0mMju1ktole3/yMkMrqJ2ydycrt7Q2JNBXB+8lUdilldIu238jHzO1Qtpp
ew+ycVtrS0J9TfC3JCq7tVkU1s+4e5KdO1o7Eulrg78l0dijzaY9ib32d/A5
ITp7tTl0oCOd6EwXKnhPuprd6E4PetKLJP6fdcHniRjs0+ZSRD/r7kUO7mrl
tRv2wRSmkvuhOTb4bNhfmvXM3p79H2UjD3M=
                 "]]}, 
               Annotation[#, "Charting`Private`Tag$4582#3"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1:eJwV1GPcFWkYwOGTbdu27c21qLWybS6ybdu12bZt2942a6/5cPXc93/mvPV7
z0xp6raq0TJMKBT67I9aEUKh1xFDoYmU5419NSNIFikU2qI1ITnntdq8MU+i
Am/taxhJcvdv1ZqSggtaHd6aJ1ORd/a1jCKF+7dpzUjJRa0u78xTqMR7+zpG
k9L927XmpOKSVo/35qlU5oN9PWNI5f4dWgtSc1mrzwfzNKrw0b6BsaR2/06t
JWm4ojXgo3k6Vflk38g40rh/l9aKtFzVGvLJPINqfLZvYjxp3b9ba006rmmN
+GyeSXVCbNYmkM79e+xtSM91rTEhfZb9S8KwRZtIen2vvS0ZuKE1IYw+2/4V
YdmqTSKDvs/ejozc1JoSVp9j/5pwbNMmk1Hfb29PJm5pzQinz7V/Q3i2a1PI
pB+wdyAzt7XmhNfn2WsQgR3aVDLrB+0dycIdrQUR9Pn2mkRkpzaNLPoheyey
cldrSUR9gf1bIrFLm05W/bC9M9m4p7Uikr7Q/h2R2a3NIJt+xN6F7NzXWhNZ
X2T/nijs0WaSXT9q70oOHmhtiKIvtv9AVPZqs8ihH7N3IycPtbZE1ZfYfyQa
+7TZ5NSP27uTi0daO6Lp/9h/Ijr7tTnk0k/Y/yA3j7X2RNeX2n8mBge0ueTW
T9r/JA9PtA7E0JfZfyEmB7V55NFP2f8iL0+1jsTUl9t/JRaHtPl0IpZrK7Tf
iM1hbQGdie3aSu134nBEW0gX4ri2SqtFXI5qi+hKN+K6vlqvTTyOaYvJq5+2
/00+nmndiaevsdchPse1otplc3+KsUTLp50x9yA/z7VS2g3zEEoHv18tvrbW
XJcEfGG/6xzJCdeL2a+YBwTvrfm5sziVzA+DZ8M5NniHnP8F303wnfpcfufZ
4Fl29nRWdz4Lng1nAWcF5/3gWXSODt5Z54vgWXD+6/OlnTeDZ9s5NPg/IOjO
MlQxP3aOD95F88vgu/eZBOZ15npUMz91JqS8+Z5zFCfdV9x+1TyQElS2P3KO
Y6nrBeznzL0oSEX7A+cYXrhexn7LPIyywXOkJdTWm+uTiFNaCe2aeRAlWaYV
1M6be1Mo+Luj+b3pZfXb9uGUC753LZG2wdyAxJzWSmrXzYMpxXKtkHbB3IfC
vNR6kFjfaG9IEs5oKyisX7T3pQivtJ4k0TfZG5GUs9pKetGbPvSlH/0ZQCX/
/oHOQQxmCEMZRlI/b7Of05hknNNWUUS/ZO9HUV5r5bQ75hHBM0hV+xPnBGqa
XwXvsXO4e/8HglwM/A==
                 "]]}, 
               Annotation[#, "Charting`Private`Tag$4582#4"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.528488, 0.470624, 0.701351], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1:eJwV1FV0VAcUBdAXLAnB3SFQL3XB6l7q1Fs0uCW4lOLu7u5S3N3d3TW4FXfd
72Nz7zlzZ9asmSGxcQkl4iOCIEj0T8nIIDgSFQTtKMRVeTrdeCJP4E8ysFNX
iqP29hTmmjyD7gTRQTBR9xcZ2aUrzTF7B4pwXZ5JDyLcT9L9TSZ268pw3N6R
otyQZ9GTJO7/05UkM3t0ZTlh70Qxbsqz6UVS95N1pcjCXl05Eu2deY9b8hx6
k8z9FF1psrJPF8dJexfe57Y8lz4kdz9VV4Zs7NeV55S9Kx9wR55HX1K4n6Yr
S3YO6Cpw2t6ND7krz6cfke6n68qRg4O6ipyxd+cj7skL6E+U+xm6OHJySFeJ
s/YefMx9eSEDiHY/U1eeXBzWVeacvSef8EBexEBSup+lq0BujuiqcN7ei095
KC9mEDHuZ+sqkoejuqpcsPfmMx7JSxhMKvdzdJXIyzFdNS7a+/A5j+WlDCG1
+7m6yuTjuK46l+x9+YIn8jKGksb9PF0VYjmhq8Flez++JGC5bhhp3c+Xq5Kf
RF1N/rf35ysiWKEbTjr3C+RqFOCkLp4r9gF8TRJW6kaQ3v1CuTrPcEqXwFX7
QIqTlFW6kWRwv0iuwbOc1tXimn0Q35CM1bpRZHS/WK7Jc5zR1ea6fTDfkpw1
utFkcr9Ejud5zurqcMM+hO9IwVrdGDK7Xyon8ALndHW5aR/K90SyTjeWLO6X
ybV4kfO6etyyD+MHolivG0dW98vl2rzEBV19btuH8yPRbNCNpwF35BH8REo2
6ibQkLvySEoQwybdRBrRmHu6UfxMKjbrJpHN+1gh1+FlLury6TbY/+GtcOru
m6P5hdThd+pmi9mMLR7PLa+1N+RV+z7z9fCzs+8wC5mtzDfMg2bR8O+d52U3
V8pvm3XNV8y9ZmGzYPjdmtvMd80W4WuaB8wi5iXPjzU3yu+YTczXzP3h64Wf
q32X2YY37YfMJp7zwBzDrxTU7zHThL87+1azOVvd5ZHX2RuF7zv8XuWdZmsm
ezyHvMpeL3zf4e9K3m625LLH88ub7P+G7y+cuofmWH4jLdt0ed2ttzcO3ydT
dDl1q+31w88z/P3H+L+pb8ojeRy/k47tuqk0ozktaEkrWtOGtrSjuNdpb3ag
I53oTBcee63x/EF6duimkct7WSM3CD9frugK6Dbbm4bfTfjbkXebbcPfjP2w
Wczs6vYpPvgHeQ==
                 "]]}, 
               Annotation[#, "Charting`Private`Tag$4582#5"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.772079, 0.431554, 0.102387], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1:eJwV1GWAVFUYgOFZwABUbEEFxe5u6e5YWsmla5fu7u7ubulGpbu7Yenubp7z
4+H73jN3LjvDXVLHxEXHRkUikXh/pEkcifybJBKpRHK2617EckR34g9u6Nmk
5T9dmRTs0L2J46juzJ/c1HNIx/+6Cm+zU/ehFvG6C2m4peeSnqW6Ku+wS/el
Nsd0V9JyW88jA8t0Nd5lt+5HHY7rbqTjjp5PRpbr6qRkj+5PXU7o7qTnrl5A
JlboGqRirx5APU7qHmTgnl5IZlbqmrzHPj2Q+pzSPcnIfb2ILKzSsbzPfj2I
BpzWvcjEA72YrKzWcaTmgB5MQ87o3mTmoV5CNtboWnzAQT2ERpzVfcjCo/Ac
kJ21ujYfckgPpTHndF+y8jg8B+Rgna7DRxzWw2jCed2PbDwJzwE5Wa/r8jFH
9HCackH3JzsRljrLxQZ7PT7hqB5BMy7qAeQgimXOcrPRXp9Pidcjac4lPZCc
JGC5szxssjfgM47pUbTgsh5ELhKywlleNtsb8jnH9WhackUPJjeJWOksH1vs
jfiCE3oMrbiqh5CHZ1jlLD9b7Y35kpN6LK25poeSl2dZ7awA2+xN+IpTehxt
uK6HkY/nWOOsINvtTfma03o8bbmhh5Of51nrLJod9mZ8wxk9gXbc1CMoQGLW
OSvETntzvuWsnkh7bumRFCQJ650VZpe9Bd9xTk+iA7f1KKJJygZnRdhtb8n3
nNeT6cgdPZpCvMBGZ0XZY2/FD1zQU+jEXT2GwrzIJmfF2GtvzY9c1FPpTHH2
OWvDT1zS0+hCCfY7a8vPXNb/0JV7eixFeInNzp6Yk/mb1/nL2QGzHb9wRSdM
6h72MkzXj8yJlAifz2vzzVfDs2Cfab5hxpjJzEVmcrOb9923jwvX6qLhuzTn
mW+aycKzZ84IP4dZLvyM5kLzLXOL90fMKfo1s2T4rswF4e8Lz4l9tlmBl+2L
w2fynoNme34N/9bO55pXnSeyT7eXZYZ+bE4Knz/cPzynXp9llqe71x+Y4ykW
7s9WZ1GumWovFT4DJZ0dMjvwG9f0THqE31fXljJLU4aylCOG8lSgIpXC/wWu
rWxWoSrVqE4NDrtvR37nup5FTx7qCRTnFbY5S+A+0+ylw3cYfjf0HLNiuMa+
xExh1nTtUyh+DrA=
                 "]]}, 
               Annotation[#, "Charting`Private`Tag$4582#6"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 Dashing[{0, Small, Small, Small}], 
                 RGBColor[1, 0, 0]], 
                
                LineBox[{2873, 2880, 2878, 2881, 2859, 2865, 2842, 2854, 2843,
                  2844, 2845, 2846, 2847, 2848, 2849, 2850, 2855, 2851, 2858, 
                 2856, 2879, 2877}]}, 
               Annotation[#, "Charting`Private`Tag$4582#7"]& ]}}], {}, {}}, {
          Ticks -> {
             Charting`ScaledTicks[{Log, Exp}], 
             Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
           FrameTicks -> {{
              Charting`ScaledTicks[{Log, Exp}], 
              Charting`ScaledFrameTicks[{Log, Exp}]}, {
              Charting`ScaledTicks[{Log, Exp}], 
              Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
           Identity, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
             True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
           Ticks -> {Quiet[
              Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
              Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
           AxesOrigin -> {2.302585092994046, -57.0800259820388}, 
           FrameTicks -> {{Quiet[
               Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
              Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
               Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
              Charting`ScaledFrameTicks[{Log, Exp}]}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{0, 0}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{50, 10}, {10, 5}}, DisplayFunction -> Identity, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
             True, "ClippingRange" -> {{{2.3025852339686432`, 
              9.210340231001586}, {-57.0800259820388, -51.55095439350851}}, {{
              2.3025852339686432`, 
              9.210340231001586}, {-57.0800259820388, -51.55095439350851}}}}, 
           DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, 
           AxesOrigin -> {2.302585092994046, -57.0800259820388}, 
           CoordinatesToolOptions -> {"DisplayFunction" -> ({
               Exp[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Exp[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{50, 10}, {10, 5}}, 
           ImageSize -> 300, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
             True}, PlotRange -> NCache[{{
               Log[10], 
               Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
              All}], PlotRangeClipping -> True, 
           PlotRangePadding -> {{Automatic, Automatic}, {
             Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
         FormBox[
          FormBox[
           
           TemplateBox[{
            "\"ASDScon[2\[Pi] f]\"", 
             "\"ASDShLossy[2\[Pi] f,\[Chi]=0.986\[Kappa],lossRatio=0.5]\"", 
             "\"ASDShLossy[2\[Pi] f,\[Chi]=0.986\[Kappa],lossRatio=0.1]\"", 
             "\"ASDShLossy[2\[Pi] f,\[Chi]=0.986\[Kappa],lossRatio=0.03]\"", 
             "\"ASDShLossy[2\[Pi] f,\[Chi]=0.986\[Kappa],lossRatio=0.005]\"", 
             "\"ASDShLossy[2\[Pi] f,\[Chi]=0.986\[Kappa],lossRatio=0]\"", 
             "\"5\[Cross]\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-25\\)]\\)\\!\\(\\*SuperscriptBox[\\(Hz\\), \\(-0.5\\)]\\) target for 1\
\[Dash]4 kHz\""}, "LineLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                Directive[10], FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"Directive", "[", "10", "]"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ), 
        InterpretationFunction -> (RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
        True],
       "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"",
       "\"strain sensitivity (NSR)\\n/ Hz^-0.5 (log scale)\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          ItemBox[
           RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
           Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {"", 
          
          ItemBox[#2, BaseStyle -> Directive[10], DefaultBaseStyle -> 
           "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 2}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
           RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.835822561061986*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"046d1568-760c-4f7f-833b-aeb669e9ef08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Checking", " ", "stability"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "\[Chi]", ",", "\[Kappa]", ",", "\[Gamma]btot", ",", "\[Gamma]a", ",", 
     "\[Gamma]c"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"denominator", "=", 
     RowBox[{"\[Gamma]btot", "-", 
      RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
      FractionBox[
       SuperscriptBox["\[Kappa]", "2"], 
       RowBox[{"\[Gamma]a", "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
      FractionBox[
       SuperscriptBox["\[Chi]", "2"], 
       RowBox[{"\[Gamma]c", "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"additional", " ", "poles", " ", "at", " ", "\[Gamma]a"}], ",", 
     "\[Gamma]c"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<lossless: \>\"", ",", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"denominator", "/.", "losslessAsmps"}], ")"}], "\[Equal]", 
        "0"}], ",", "\[CapitalOmega]"}], "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"denominator", "\[Equal]", "0"}], ",", "\[CapitalOmega]"}], 
        "]"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Kappa]", ">", "0"}], ",", 
          RowBox[{"\[Chi]", ">", "0"}], ",", 
          RowBox[{"\[Gamma]a", ">", "0"}], ",", 
          RowBox[{"\[Gamma]btot", ">", "0"}], ",", 
          RowBox[{"\[Gamma]c", ">", "0"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Kappa]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]btot", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]a", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]c", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<lossy: \>\"", ",", "sol"}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Im", "[", 
          RowBox[{"\[CapitalOmega]", "/.", 
           RowBox[{"sol", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"Im", "[", 
          RowBox[{"\[CapitalOmega]", "/.", 
           RowBox[{"sol", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"Im", "[", 
          RowBox[{"\[CapitalOmega]", "/.", 
           RowBox[{"sol", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Chi]", ",", "0", ",", 
         RowBox[{"2", "\[Kappa]"}]}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*FractionBox[\(\[Chi]\), \(\[Kappa]\)]\)\>\"", ",", 
          "\"\<Im[\[CapitalOmega]]\>\""}], "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<poles of lossy transfer function\\nunstable when Im[\
\[CapitalOmega]]\[GreaterEqual]0\\n\[Gamma]a=\[Gamma]c=0.1\>\""}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{",", "Dashed", ","}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"50", ",", "20"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "0"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{"\[CapitalOmega]", "/.", 
           RowBox[{"sol", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"Re", "[", 
          RowBox[{"\[CapitalOmega]", "/.", 
           RowBox[{"sol", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"Re", "[", 
          RowBox[{"\[CapitalOmega]", "/.", 
           RowBox[{"sol", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Chi]", ",", "0", ",", 
         RowBox[{"2", "\[Kappa]"}]}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*FractionBox[\(\[Chi]\), \(\[Kappa]\)]\)\>\"", ",", 
          "\"\<Re[\[CapitalOmega]]\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{",", "Dashed", ","}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"50", ",", "20"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "20"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2"}], "}"}], ",", 
     RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.83504641704847*^9, 3.83504651011362*^9}, {
   3.835049371511012*^9, 3.835049380301217*^9}, {3.835049418434885*^9, 
   3.835049469736174*^9}, {3.835049508857883*^9, 3.835049557578328*^9}, {
   3.8350497931951036`*^9, 3.8350498562789583`*^9}, {3.8350499447238283`*^9, 
   3.8350499782220507`*^9}, {3.835050012687291*^9, 3.83505010081954*^9}, {
   3.8350501385701714`*^9, 3.8350501438812428`*^9}, {3.835050175325329*^9, 
   3.835050219451564*^9}, {3.835050308236258*^9, 3.835050388374193*^9}, {
   3.835050432386447*^9, 3.835050511999774*^9}, {3.83505056773658*^9, 
   3.8350506526832933`*^9}, {3.835050688626114*^9, 3.835050689709009*^9}, {
   3.8350507425496798`*^9, 3.835050754560383*^9}, {3.835051042014687*^9, 
   3.8350511646313143`*^9}, {3.8350512392918997`*^9, 3.835051285130447*^9}, {
   3.835051341858755*^9, 3.835051351648428*^9}, {3.835051473303735*^9, 
   3.835051486835176*^9}, {3.8350516126305943`*^9, 3.83505166725378*^9}, {
   3.835143788713299*^9, 3.835143801585413*^9}, {3.8351438402169533`*^9, 
   3.835143863663851*^9}, {3.835143978415365*^9, 3.835143979233163*^9}, 
   3.83514405083946*^9, {3.835300388984281*^9, 3.8353003942118883`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"099af43e-d730-461d-825e-0617c033dd5b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"lossless: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalOmega]", "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "500"}], " ", "\[ImaginaryI]", " ", "\[Pi]"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"250000", " ", 
            SuperscriptBox["\[Pi]", "2"]}], "-", 
           SuperscriptBox["\[Kappa]", "2"], "+", 
           SuperscriptBox["\[Chi]", "2"]}]]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalOmega]", "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "500"}], " ", "\[ImaginaryI]", " ", "\[Pi]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"250000", " ", 
            SuperscriptBox["\[Pi]", "2"]}], "-", 
           SuperscriptBox["\[Kappa]", "2"], "+", 
           SuperscriptBox["\[Chi]", "2"]}]]}]}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "lossless: ", {{$CellContext`\[CapitalOmega] -> 
     Complex[0, -500] Pi + 
      Complex[0, -1] (
         250000 Pi^2 - $CellContext`\[Kappa]^2 + $CellContext`\[Chi]^2)^
        Rational[1, 2]}, {$CellContext`\[CapitalOmega] -> 
     Complex[0, -500] Pi + 
      Complex[0, 1] (
         250000 Pi^2 - $CellContext`\[Kappa]^2 + $CellContext`\[Chi]^2)^
        Rational[1, 2]}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.835822561396291*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"b7a214e8-e5bf-4b71-a095-9dd601698b50"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
CNr2GQ==
           "]]},
         Annotation[#, "Charting`Private`Tag$5707#1"]& ], 
        TagBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
mcC/ARlWB+k=
           "]]},
         Annotation[#, "Charting`Private`Tag$5707#2"]& ], 
        TagBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJxF0Ak0VXkcB3BLhlLWZCkMMRUZr0KS/AzN2KsnKiVEZInJMhUz0sMjz1rn
VWRJtlHKcuy8ukYvSaFnlzX0sjxcrmUId+rM67rn3HPP53x/y/9/lZx/t3bl
4+Hh8fn6fvuau46yasZcDdKTvj2VSJ9mpHGsbDiUcp0udTyCJkuHB1xThIp3
RclmQTbXZ+weFaAzJfC9Xxin2JsoIES9Knlq9GU0k8ivNR2CxLk3hKVLxPt5
eZsJlw0Zv2vWbyH6GTmoP53eSuyr9Uzdbsdpg0Kui8e8vBwW2uAJ11nuetUu
PO3EPKpb51mfre1Ebuos/iBMfz1vtqPK5Mes572m3lL8Gh2E5386IvrMu5Oo
51vKE9uu+oHYr4M7lZ3M7yXqeWvNjWI5fUT9u3Ctpjq1AbjLtZ7oW77b2gNE
fW7ShYPnDAeI+4blx6VP2w4Q/Xpdo34ylHXnqqdKe3au22gstPAHo0Hi/ygm
TCw9nhok8onFgf520hAxP2u8ukEkbpg4j4j839MjIyNEf4xHqVu6CpvoXzDM
G3EP+Uw4YD+zZNvLUWLeQD4zmqU0TuRfPNuS9wRNEJbsmLSsl+MQ+9R/EVxz
q+ZALNdaW0+Qzeo4QOVa/3NiljqLQ8w/FqtmgbI5QOPar9sqMVBiEuhcV/rS
98d4TEIM1yYZSpeKpKcg7vv5HGuOmlVNEfuuyTsqf7SfBjeuSZZ+jvSn0+DM
9WgQNcVkZRpcaf97/JS6+yMeFELdebxJYZWIEyrJp8iPQk4wa7hBrRLpiFpJ
ThFAIc306MbklgrEYucnbTkhFBKSDV3SgyqQGkZj8/1NKLCKLgV+UK5AdE6V
eUhtQYFUKdxu+rYcUY6KTBWTQME1zZZWs6MceW/z7vKqKgrBL4pbfT1LkL0c
W+FOKxSySYOiceR8pMLGEqGdQEEutIh1KO0ZYvzcyN/g5FcbIkYmE0+Rs3Ga
PdlnUKCR3JbCIvKQKNLGvAAXFKp0Cp/7/JOLsAMY5hKBKBjuOSzobJqJpK8q
06yyUPjDfuLFrPptRFIUFWIuozCv23LZffA+bECSC3amzEDukXqcd6QcvLSq
uzdazIIMr8kOqy9MyDNzTn+xMAvZT6UFPe0aYX5CTox9DwO2jpCNx6UWKD1p
wk8/OgfaQQbBZMsOCDGlPixhz8GFgHqKB6sblPrMuzKp8xBactWmUqMP9A6G
02X3L0Dk9qmAEodBsFdoXuJtXQBOkqiXHv4R5htih65QFkEn4rTuzaphSNzg
EGCt8i+Mr/BHZZE/gWR/aQYf819oCInt1+lhg0AwxeaQ7xI46fe037k5CjyP
HQqGJJaBpqaooCkwDn4PCmIlapehX2n6yOvsCXiufktI3OcLSNg/LMvVmwRx
c7+9oSIrwFwzsBUomoJejfetgYwVeNVzgNyqhEJhGqiMOKyC/3W8zr4XhfMF
OuLya6vQ6R2XIXBnBm5SH1F6n6zB3I9+6v22s/BsVD5ZxBKHGxd37aMJY3Ar
lerUfwyHbS/Ju4tFMLhoPamaT8bhbILj5l5xDHYwGIVWp3HQ9YVkDRkMaPHn
6mKccYBrr9qaVTBw10ma2RSIg3tfFEPMAAPl8K2mgjk43Go8Hh1+BYM13b+2
dObi0FRnrJ7nj0H35HBLTh4Ovxp8qmBdxSDhdPH534pw8FIxS1UIxgBXs/an
MnBIvgvR5VEY9LLi0/hbcUj/coCXnYFBRcSiS2s7DiLxXTeEczCgH3bck9mF
wynz6HHSYwwssn8uMerHoZ3nQMyfBRhUXW98QxnDoejYviVRBgb3NLTjyRwc
9KQmP2shGPgOpdgoTeOgYMVm2tVisNvy8kDNHA4DlFyzzHoMNvC2ZSUs4nCF
FDzz+i0Gg6WHPZ2WcagtzonkNGHA8MzUJK3iMNuntlm8BYP7isLzOI6Dzw3R
EO12DP4DlJa8EQ==
           "]]},
         Annotation[#, "Charting`Private`Tag$5707#3"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox[
        "\"\\!\\(\\*FractionBox[\\(\[Chi]\\), \\(\[Kappa]\\)]\\)\"", 
         TraditionalForm], 
        FormBox["\"Im[\[CapitalOmega]]\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{50, 20}, {10, 0}},
      ImageSize->300,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"poles of lossy transfer function\\nunstable when \
Im[\[CapitalOmega]]\[GreaterEqual]0\\n\[Gamma]a=\[Gamma]c=0.1\"", 
        TraditionalForm],
      PlotRange->{{0, 2}, {-2.339552971201103, 1.2395529712011029`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
WwP/H58hOtc=
           "]]},
         Annotation[#, "Charting`Private`Tag$5758#1"]& ], 
        TagBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxFlAs0VHkcxyfvyNtSNlp6IKnWkS1u09FxmCFCOnYjY6SUFRHrkfea6tis
2rxWsqLE5DljInNjSChsZRQitWhSyHNGGWN2t9P9/+4598z5nO/v+/19//fe
M0b+oR7HZUgkUtl/9/+/jTVUR/vcyX2Hv1x8jGDSl6sL043vwajXJ/cxv1wN
WCjF29K1iGAm1qE9ZnLoNuHnYLFModbRGsLPw8ztFFdOcAm9Aqtm3jHp5xF6
PWal4+ZObSPyWBj2Lvem+TOCizDX9K3OMwJivhQLH3DJjdGa+poXiYn2zzV/
0Jv6qpNI58qzJ7wNCD0LS018TSabwnz25rC3MmSYvxeWaXnpFKEzcPLgbh9J
CPLjLfavGCERxPxl/LHelgG3RPAP3a9L/CaL4CSMpDzYVcAjuBB3LDIKrNH7
iPZHGdCM//GZJhjfNnlYpc9lBuVpq88otS7NoHm5pmtVG/NnUb+frbgDq53n
EN+h+hc2iuZQP+GEvoYgex7lcQ45ymbaL6DzJFIYf9UKFpDf6JVTfzFDSPgx
mx9SM9dZipDfx/DJ51V8ETGPCR+nj5xJXkTny5XzjfDY9AnlaQ9zimRageXj
kz33hH1GeaQy36oRrSXi+8HD86rStVqWkH7f/KKSZogY7bPu1ev+44wY7auO
u31F5yzS8aLuNv210cAXQ+UtNqQAe7BT3C2yxSj/nU18HrUR8v1G19A6eYRe
jb/8LX+jywNCv4V3DXHL3TrE6PmxEpYavXrEqH9cS9TocQGwMEix9N049A3R
zgk+NQH7x7lbvp+Ygv30gLvC4BmUj71c49DwcQ72eXKeJ5wRQh8HBaFixBKc
T9MpfFuK2jLqX9isrmKjuYz0nXsq3s9qL6P8pmqnjjJd0F1Nx0vo64DTFHyN
7DYto/5yD6i6JJtldD6RrREp4fgyfP8WT/kxOMrHqwv2bRrzlSCej51XpNMl
qL+11+2JV8ckqC9XXZ3dd1KC8tqShu06w5EfG/SPp7HOQ56CCTcvqRLyqLKh
CZJq4Euvjf1j2TCvmZtmFlEP+Z4RZNXZBuBst7mZ0/fBP7CtpPdDE+jrVx+p
D2xBOkZ7q5o/1gr9i5qbE+ntMG8Sa+bo3QVsOfHpuesL6BPZXn6vsx/OV1/s
d50yCHl7fToC9r8BpnTnzO/6AJxW5tzHmgTuZkgbdkwTeRxMw59dUD4Lugc5
MMVsAfZn6X97okQE/fpFf1M3fgZdn59iUSgGPlplrWmwIiH+//G7Rz6pPSWt
oP5qCg1rfpVFjAfWnFO2VlhB+3k+e5XeK62gfWuVpPL5KsBhbJ7sQTVgY2V7
aa025MVy5CWBurCP79e+pL8O5lPrnERJhsCCAPepA2bAZA3tCan5Cnq/Odze
cdZ20ClaP46ttYJ9zCbfwTEyzIfoBz+K84T9bQ8t2nd4gb4hbLp15Cfg6PU1
LVk+kP+0PZxHocHzMD1r1Simw75kQxG3MgD8lpExdTpBoKd9Z8tpD0Y6Ntq5
zIoNhfxM46TKNxHAU9125VejwO8QI8t0iAV98cn5W+WJqA/mdo5STEuB+dIt
yje0GMCrejoLHl4APhKfnh+dBudhmR7MM0+H/iq9GrnDGcD41syr9lng13lx
+MpiDvQ5nayXwcyDecP+vDSNQshPYtxIHmKCXzVK0YleAZx38rSWoAry2M57
iqdrIU+g+axVpgnYuYCkZMYHv24d7fdIMfgrxg2uqR2QovmL1xl+w65S1CfA
Y2pzpTvwehyvdvGSwvvK8G675A980vrPWeUYgjm4caoORbEE9JXdcap9pZA3
MDXaU3IH5muLnHN/qYT5y17sow41iDHpVo+zDBz6Dj3LKJDlS9F56s8vHuM/
Bz3TlmZW3A/7nG9tr90/DPMN0d2Pkt/DvmyLXRnuk6CHjeR7Gk2D3/RA8Gve
Auhyq3pvXl4E/xuObZDfEuzHg4p37JQA52xQEUql4P8XvXZHLQ==
           "]]},
         Annotation[#, "Charting`Private`Tag$5758#2"]& ], 
        TagBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJxFlHk8lXsXxY9UhAyRHKJoMFe3wU1OVFwZmog0mKNcUYiSjEW5qltJeCUZ
IiRkKHEMGSvzTETXeEqKMuQ4nPu+vfzW+cfn+9lrr7X3fh6PtPU5Q9sFFApF
ioNC+d9fPVtGfdEnW3XKr18ibaGmuFM3VUsj+dcvlrblUXhkJtWIsH51a8ZD
qs0cJ9NMbCbzg6muGsa/fvG0Dxuva96i+hN99PKD14KoIRr/94+m+XFnyv5F
fUz46LGYtJHRLKLnZfuZ7pUqJH7rDL4ySm6UEv3FGlWN8LG3RL8iS6iLg6OW
6F/0aFbV0ho05vcptn8ocexLE+Hx9TsFnjm2Er8FU08FJda9J34qbMsXh1M7
Sb3Kf2tNuUI34VV3hqaSvn6cy7tPG5rs7mre1DPXH0F7/DnvHf/fvUTPL/nk
W19fH9Hf/DP7VPTagbn6HdrErqd9dj6Dc/1BNNfNpVmiJQxS704tvVEv/ZnU
p+2bHsh7DJG64m6u2VN5X0je3ljp089XfMW9JC1k/jH9NpcfQFP6Yszbun9k
fh66sMAIdykTvLDwQdqayNF5Pf3M1rz2JfrfSf2prnV0wQR4fEhccCD0B+Hs
w3s5Q7TG5p8H3Ucn4FHWwNjcPBSK9Ae9triAcXKPHb/7h1A3T5C6qVTtFEfj
BPzf3epx8pskfuELzV0N1/4keuGu7NgFpT+JfpGXn5Gq8xTRU5LM03qWMec4
m17+pfXso+VMor+5yWCDqRhzzi+dviJH81mzJOobKuSevpEDj/HE2gcognMP
SCjs2QD/P1qWJuVtgR+P+HU7dxXo68wocttUUQ+NuTQ4qoZ+0/7vCanqRE+T
kXc4dWY36gyH/nVyWuDUdPP+Pm0m2ff8WOvjGN15/yL69u0GNub7mORes5ff
rZE4CH1poWZvqwE4iDM/NsQI/Er6epSHPfq9bSnmvztiPq2kS5Jj57Afz/D3
znQX6Os2OUQ6umHeUNf+Ewru0JvmmEsMeiCPoWEQYemLuqi5RKh2KOouEWm3
lhXD/yUr4npxKZhlfs3PpQL662vM3Bqq4BeZwmMW3Ir7lxXYKi0bBov1SlQK
iU0Tfb5iILfQWcI0laYV1cFO08Q/3fPJXZHz0MdWl4uLuYMDzy1SXnUFbJh5
xUA5FP2DO7widAumyfyWvXwWlUXT5F7vb0Su2V8CPrxViVFTBr+qzryUQ2/A
2gH6zg3voC9U7thmVA3/7S32zOZa5Gd4MwtMGqBXlA262t4Ev8e1VJ0TrahL
uSfxfWifJvcKW61ab94Jf8G3b+5/7II+yPnocet/wJziDKm+XrBn8cVe2wHw
uD1X4iAD/meFwxz+HII/I2/9b0PDeB5WNi/GHUbA7/m0c79+x/xG2c3eTuPY
V3vxOJcrE/WiVP+qcRZY1UTk7kU25slgxxlPcbAIKyVuEb+8kEX+v+IPlXSx
FrNIv9SUYZz3EnB4TM9pCh+L5AvpuShd4WfNfc9z6dGvBXh3CKG+SfXZp1Fh
Ftm3MF3vTZIo/A7IMRKsqNAHLTaX3r2WRe61sERXlLIDfG/H4NhLGvQyGf6N
5zTg/1xeJkN2D/bbFVN4p1sL7OWzjbfwIPIn1KT/+w1Af0BmQdc2O7CIomn+
sD30W8TDPMycwE4/+cZplzHPp6yfn6bvoL9Tua7xEh3zp0dprO0znyH9Pzx+
cFlZzZB+FZMnQx9OzhB9noBAZqvdDPEr9+3aXelC+mncZsHrdNxQ11fVXlJ2
EX51o8/qCjyRJ1xjlaXmA/8jycvDc/yg77D2ssi4hvpi2bwI39QZcj9dznPe
M+nQ3+yWsfbIhL4mr+WPyWzMIxQeJO+aAzZyVV86mov+0EPfRxzzwe1KCU2f
C8ErlxzPOV1M8mkW/Usj+0pnyPsW+/q1j1UF/Pseup3seou6rIf83hNVqNsf
+aDQVgNO2XyX37geeZuHfjYfaMG93CpSXlW2gXPiLB/qdGBfpo+IX9kH8E7T
NzZ7PiLfd7unTmEPuFhkkxKtH/pFo70Crwbhr1Md9mPb53l9MT0oSb814wv0
1QHs3I3fcA9B68yolFH4G6qfviI/Br/74hKnEiawX9tEje6aKfiJN15Rjp4G
m6WpCEnOIv/F8Z/8dZRZ8r7xL87lu8o5S/Snn1/mUVkMLjLdyf2Je5bcV4yb
vSiSd5bkO2cWcR7kB8vwaLGzhNHvkb1o5rQo8hotK5jiVOj9X+pN+ErBf8DG
YHifPFhdUHiIrQh9WF4TI2MDWGfZ0T6xrcSfHp1P7alUQX3KrqPbW3WWvO/J
heYdfergBWdWt4ftniX3PiHa06Knhfn5HG0b0nXhZyMmW3dyH+bLL2FUix5E
/llxh7eeRti3vEy5YqPJvL6Ivsr5W2nPMfi5r3xefN8UXFfhUqRjgXy581sL
pq3g7yc1kZdqg/k3u116KWIPfdBqtewKB8zXW8nK8DgHDpHxTf3oirzh6t0p
9y7CX/sSZ7K2B/RRa8ueTHmiPll7LT7Fh+TRDl3WibO4gvzE9TwxywKg52io
jCq7jvpxr1uR7kHgDLmDEYq3MA9vk2B4123sR1cIuad1H3qRFuO7k2GYz9Fv
xe3kCPRLtUUECUbjeV64ahpYEov+2g1S1y7EQy/3vvuqfCJhmm9AjF9nMuZf
epFLz+oZOMLOcdlAGvoz9VXjvmVh3gGh+tIFhWD9KAq3fCP6RV9a/O02jfnj
EsuOMGcw36YIxVU+FDaZn37j7iAnJ5vk6XpNpgUuQr3lrJn7Um428be2LNkV
zMMmfp6at+sfCLDJPKHrT1jHi7DJ+5i2RPZHKhX+PbUFIsVrwM8Ykg/496E/
8GGAZdcB5NsYDq9LNQDv4jIe8jKCfiWdnr7fBPMF3T5RftMafEqr5IapLfR7
phQMlOzgJ5UaLMqyx7xT1syOSkfST2taYR3zwIlN7ple9fbUmfOo3/T7TUnt
Au5hp/KfUZ5L8JPxF9HhSkB9drvn0tZE5LcP9zYkPIU+K1Y//EIq5r9jkmmm
/RzMVjA8H0DHPu+7X203LsQ9X4RIz64tRl6w7l8lY6Xgs7MjgaUV2Ecv8+iB
kHfoX2dXJGxTzSbfc4qkXPuWOuR31t+O4mwkelrOtcmTjc3oD1GzkI9rQ57T
SPlXlw7o9eM3ZO3pQn6ue/Vbv0/wD1XedtvgC+rOPZFG0t/gJ7fPobtoDHkf
s9XsLZngsFW842w2+F/MeKTM
           "]]},
         Annotation[#, "Charting`Private`Tag$5758#3"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox[
        "\"\\!\\(\\*FractionBox[\\(\[Chi]\\), \\(\[Kappa]\\)]\\)\"", 
         TraditionalForm], 
        FormBox["\"Re[\[CapitalOmega]]\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{50, 20}, {10, 20}},
      ImageSize->300,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 2}, {-9.992007221626409*^-16, 1.0732155904709846`*^-15}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.835822564132312*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"9b8e1160-e187-45d5-9804-f62d00b70011"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{"flatuicolors", ".", "com"}], "/", "palette"}], "/", "us"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"DarkAmerican", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", "\"\<#0984e3\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#00b894\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#d63031\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#e84393\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#6c5ce7\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#e17055\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#00cec9\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#fdcb6e\>\"", "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"LightAmerican", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", "\"\<#74b9ff\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#55efc4\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#ff7675\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#fd79a8\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#a29bfe\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#fab1a0\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#81ecec\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#ffeaa7\>\"", "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"American", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"DarkAmerican", ",", "LightAmerican"}], "]"}]}], ";"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.835212354017386*^9, 3.835212654467853*^9}, 
   3.835212820795138*^9, {3.835213008993103*^9, 3.835213010826685*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"04764d18-a189-403e-985d-311924c4ee4c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"introducing", " ", "photodetector", " ", 
     RowBox[{"(", "PD", ")"}], " ", "loss"}], ",", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["R", "PD"], " ", "is", " ", "the", " ", "reflectivity", 
      " ", "of", " ", "the", " ", "lossless", " ", "beam"}], "-", 
     RowBox[{"splitter", " ", "before", " ", "the", " ", "PD"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Alpha]", "=", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"2", "Pcirc", " ", "Larm", " ", "\[Omega]0"}], 
        RowBox[{"\[HBar]", " ", "c"}]], ")"}], 
      RowBox[{"1", "/", "2"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]R", "=", 
     RowBox[{"2", "\[Pi]", " ", "500"}]}], " ", 
    RowBox[{"(*", "Hz", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Kappa]", "=", 
     RowBox[{"10", "\[Gamma]R"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", 
    RowBox[{
    "\[Gamma]a", ",", "\[Gamma]b", ",", "\[Gamma]c", ",", "\[Gamma]btot"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]a", "[", "lossRatio_", "]"}], ":=", 
    FractionBox[
     RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
     RowBox[{"1", "-", "lossRatio"}]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]b", "[", "lossRatio_", "]"}], ":=", 
    FractionBox[
     RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
     RowBox[{"1", "-", "lossRatio"}]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]c", "[", "lossRatio_", "]"}], ":=", 
    FractionBox[
     RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
     RowBox[{"1", "-", "lossRatio"}]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]btot", "[", "lossRatio_", "]"}], ":=", 
    RowBox[{"\[Gamma]R", "+", 
     FractionBox[
      RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
      RowBox[{"1", "-", "lossRatio"}]]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TPDLossy", "[", 
     RowBox[{
     "\[CapitalOmega]_", ",", "\[Chi]_", ",", "lossRatio_", ",", "Rpd_"}], 
     "]"}], ":=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "Rpd"}], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"Abs", "[", 
      FractionBox[
       FractionBox[
        RowBox[{
         RowBox[{"-", "2"}], "\[Alpha]", " ", "\[Kappa]", " ", 
         SuperscriptBox["\[Gamma]R", 
          RowBox[{"1", "/", "2"}]]}], 
        RowBox[{
         RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "-", 
         RowBox[{"I", " ", "\[CapitalOmega]"}]}]], 
       RowBox[{
        RowBox[{"\[Gamma]btot", "[", "lossRatio", "]"}], "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
        FractionBox[
         SuperscriptBox["\[Kappa]", "2"], 
         RowBox[{
          RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "-", 
          RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
        FractionBox[
         SuperscriptBox["\[Chi]", "2"], 
         RowBox[{
          RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}], "-", 
          RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RPDLossy", "[", 
     RowBox[{
     "\[CapitalOmega]_", ",", "\[Chi]_", ",", "lossRatio_", ",", "Rpd_"}], 
     "]"}], ":=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "Rpd"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"\[Gamma]btot", "[", "lossRatio", "]"}], "-", 
               RowBox[{"2", "\[Gamma]R"}], "-", 
               RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
               FractionBox[
                SuperscriptBox["\[Kappa]", "2"], 
                RowBox[{
                 RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "-", 
                 RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
               FractionBox[
                SuperscriptBox["\[Chi]", "2"], 
                RowBox[{
                 RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}], "-", 
                 RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}], "]"}], "2"], 
            "\[IndentingNewLine]", "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "2"}], 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"\[Gamma]R", " ", 
                   RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}]}], ")"}], 
                 RowBox[{"1", "/", "2"}]], "\[Kappa]"}], 
               RowBox[{
                RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "-", 
                RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "]"}], "2"], 
            "\[IndentingNewLine]", "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"-", "2"}], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"\[Gamma]R", " ", 
                  RowBox[{"\[Gamma]b", "[", "lossRatio", "]"}]}], ")"}], 
                RowBox[{"1", "/", "2"}]]}], "]"}], "2"], 
            "\[IndentingNewLine]", "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              FractionBox[
               RowBox[{"2", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"\[Gamma]R", " ", 
                   RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], ")"}], 
                 RowBox[{"1", "/", "2"}]], "\[Chi]"}], 
               RowBox[{
                RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}], "-", 
                RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "]"}], "2"]}], 
           ")"}], "/", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"\[Gamma]btot", "[", "lossRatio", "]"}], "-", 
             RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
             FractionBox[
              SuperscriptBox["\[Kappa]", "2"], 
              RowBox[{
               RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "-", 
               RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
             FractionBox[
              SuperscriptBox["\[Chi]", "2"], 
              RowBox[{
               RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}], "-", 
               RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}], "]"}], "2"]}], 
         ")"}]}], "+", "Rpd"}], ")"}], 
     RowBox[{"1", "/", "2"}]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ASDhPDLossy", "[", 
     RowBox[{
     "\[CapitalOmega]_", ",", "\[Chi]_", ",", "lossRatio_", ",", "Rpd_"}], 
     "]"}], ":=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}], "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "4", 
         SuperscriptBox["\[Alpha]", "2"], 
         SuperscriptBox["\[Kappa]", "2"], "\[Gamma]R"}]], 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Gamma]btot", "[", "lossRatio", "]"}], "-", 
               RowBox[{"2", "\[Gamma]R"}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], " ", 
                RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], "-", 
               SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "+", 
               RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], ")"}], 
             SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], 
             RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], "-", 
            RowBox[{
             SuperscriptBox["\[Chi]", "2"], 
             RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}]}]}], ")"}], "2"], 
         "\[IndentingNewLine]", "+", 
         RowBox[{
          SuperscriptBox["\[CapitalOmega]", "2"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "2"], "-", 
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Gamma]btot", "[", "lossRatio", "]"}], "-", 
                RowBox[{"2", "\[Gamma]R"}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "+", 
                RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], ")"}]}], "-", 
             
             RowBox[{
              RowBox[{"\[Gamma]a", " ", "[", "lossRatio", "]"}], 
              RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{"4", "\[Gamma]R", " ", 
          RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], " ", 
          SuperscriptBox["\[Kappa]", "2"], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}], "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{"4", "\[Gamma]R", " ", 
          RowBox[{"\[Gamma]b", "[", "lossRatio", "]"}], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}], "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{"4", "\[Gamma]R", " ", 
          RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}], " ", 
          SuperscriptBox["\[Chi]", "2"], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{
          FractionBox["Rpd", 
           RowBox[{"1", "-", "Rpd"}]], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]btot", "[", "lossRatio", "]"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], " ", 
                   RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], "-", 
                  SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "+", 
                  RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], ")"}], 
                SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["\[Kappa]", "2"], 
                RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], "-", 
               RowBox[{
                SuperscriptBox["\[Chi]", "2"], 
                RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}]}]}], ")"}], "2"],
             "\[IndentingNewLine]", "+", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]", "2"], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[Chi]", "2"], "-", 
                SuperscriptBox["\[Kappa]", "2"], "-", 
                RowBox[{
                 RowBox[{"\[Gamma]btot", "[", "lossRatio", "]"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "+", 
                   RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], ")"}]}], 
                "-", 
                RowBox[{
                 RowBox[{"\[Gamma]a", " ", "[", "lossRatio", "]"}], 
                 RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], "+", 
                SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}]}], 
           ")"}]}]}], ")"}]}], ")"}], 
     RowBox[{"1", "/", "2"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.835299122099277*^9, 3.835299144876786*^9}, {
   3.835299175278569*^9, 3.835299228471072*^9}, {3.835299276673067*^9, 
   3.835299604250779*^9}, {3.835299801029831*^9, 3.835300001235983*^9}, {
   3.8353000339614477`*^9, 3.835300175148591*^9}, {3.835300234989298*^9, 
   3.835300244824089*^9}, {3.835300427312283*^9, 3.8353004276748953`*^9}, {
   3.835300621400079*^9, 3.8353006277529087`*^9}, {3.835301855355398*^9, 
   3.8353019502755003`*^9}, {3.83530198480434*^9, 3.835302016857963*^9}, {
   3.835662388964417*^9, 3.83566239028649*^9}, 3.835822534941793*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"7b650e63-8190-4f34-9e28-a2e26cf42a02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Plotting", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"Rcon", "[", 
            RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RPDLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.1"}], ",", 
             RowBox[{"Rpd", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RPDLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.1"}], ",", 
             RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RPDLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.03"}], ",", 
             RowBox[{"Rpd", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RPDLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.03"}], ",", 
             RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RPDLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.005"}], ",", 
             RowBox[{"Rpd", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RPDLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.005"}], ",", 
             RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RPDLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0"}], ",", 
             RowBox[{"Rpd", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RPDLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0"}], ",", 
             RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "10", ",", 
         SuperscriptBox["10", "4"]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"90", ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "115"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"TicksStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
       ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", 
            SuperscriptBox["10", "4"]}], "}"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Dashed", ",", "Gray"}], "]"}], ",", ",", "Dashed", ",", 
          ",", "Dashed", ",", ",", "Dashed", ",", ",", "Dashed"}], "}"}]}], 
       ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<shot noise transfer function,\\n|R| / dB (20log10)\>\"", 
            ","}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           ",", "\"\<lossy optical sWLC \
model\\n\[Kappa]=10\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\), \
\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\) is SRM coupling rate\\nno radiation \
pressure effects\\nparameters of LIGO Voyager\\nconventional detector is \
lossless\\nwith PD loss\>\""}], "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Tcon", "[", 
          RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.1"}], ",", 
           RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.1"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.03"}], ",", 
           RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.03"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.005"}], ",", 
           RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.005"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0"}], ",", 
           RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "10", ",", 
         SuperscriptBox["10", "4"]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"90", ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"TicksStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
       ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", 
            SuperscriptBox["10", "4"]}], "}"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Dashed", ",", "Gray"}], "]"}], ",", ",", "Dashed", ",", 
          ",", "Dashed", ",", ",", "Dashed", ",", ",", "Dashed"}], "}"}]}], 
       ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<signal transfer function,\\n|T| / [?] (log scale)\>\"", ","}],
            "}"}], ",", 
          RowBox[{"{", ",", "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ASDScon", "[", 
          RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.1"}], ",", 
           RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.1"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.03"}], ",", 
           RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.03"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.005"}], ",", 
           RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.005"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0"}], ",", 
           RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              SuperscriptBox["10", "3"], "<", "#", "<", 
              RowBox[{"4", " ", 
               SuperscriptBox["10", "3"]}]}], ",", 
             RowBox[{"5", " ", 
              SuperscriptBox["10", 
               RowBox[{"-", "25"}]]}], ",", "Null"}], "]"}], "&"}], "[", "f", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", "0"}], ",", 
           RowBox[{"lossRatio", "=", "0"}], ",", 
           RowBox[{"Rpd", "=", "0"}]}], "]"}]}], "\[IndentingNewLine]", "}"}],
        ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "10", ",", 
         SuperscriptBox["10", "4"]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"90", ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"50", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Dashed", ",", "Gray"}], "]"}], ",", ",", "Dashed", ",", 
          ",", "Dashed", ",", ",", "Dashed", ",", ",", "Dashed", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"DotDashed", ",", "Red"}], "]"}], ","}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", 
            SuperscriptBox["10", "4"]}], "}"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"10", "\[Rule]", "Bottom"}], "}"}]}], ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<strain sensitivity (NSR)\\n/ Hz^-0.5 (log scale)\>\"", ","}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ","}], "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", 
     RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.835662878609599*^9, 3.835662882666335*^9}, {
  3.83566318399382*^9, 3.835663193945155*^9}, {3.8356634148205643`*^9, 
  3.835663435821727*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"27208b19-6c02-43ff-a1f2-e8b1de8161d0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}], 
              GrayLevel[0.5]], 
             LineBox[CompressedData["
1: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
TwasOv6r3HaeJffbK/8h/z/kbL4y
              "]], 
             LineBox[CompressedData["
1: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
3OCn1muVz9zR/w98TBp9
              "]]}, 
            Annotation[#, "Charting`Private`Tag$5823#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
moFtp5yf33WIDGbbZnt2pGVgu3mqRpyMyfA7cTXQbnsGZjuiVVNyhAxebLrw
xj0dSw/TCtK3QU7le+e7kIoRAgfPWNuSgS5dOyrYkIrd8zzn7mVHBqXz294I
p6ViFebPjiU7kEH878vRnbtSsR6qluaoExmuBke/4UlKwXjbNH+dPUWGTu7e
M/P7k7HU2oHpWC8ylEYfH7YmJGNS5YGfb3qTIbruzmmpP9cx+q3Knlc+KF+6
LdScB9exA6c1S/kCyFDFLZF4Vfg6Fi6s6X0vmAyWh0n98xNJ2KqNxmT/VTJ0
D9zleDl0BcscPKGzmUgGI5V6ZbfMK5i2ReJVxWto/nfssH1w7AoWaDypFppM
BnXvYeaVwXhsCcu6LJ9Bhllb5stJY3HYvNw/3IU8MhydF+YJ4orFEvMVve/m
k2GlvMOC0BODbSVY1nfeJkO4i4LFwawYzEvisZvsPTIE3N15lcqIwb5znShv
f4DWh9p73S8W0djX+UYjYjkZztMnQk/WRWKRp37mGlSQof2E2WZbYiQmOyXz
y/8pGYIT9T7lOURiTuOBWa3PyBBz7PGV3M0IbKxPYcK3hgyuY8IJb/UjsOGq
hEuNTWTY/HB4z8ZUGNYVblHm8Z4MermMmauzoZgjk53w5SEy3O5p0N7yIBT7
EeLslz5MBsfOgTucbqGYcJCf6uuPqD3xgBed4yGYhc+1MulxFH9Fyqzop2Bs
2La9rOs7GW5pGdAvLF/APIf6hCemyfBZTs/41osL2LrlB7+/M2R4uxzuhYVd
wKTNplUV58lwZJGsysp/ATt+kLM8fJEMvo8bnDy2BmFf1fXKNdbJUHjwy8nK
8HNYQNkhEaO/ZPj09aCbu8k5jE3Z3N/pHxm4fo2+iJc+h9EYTmpJm2QQGSQk
S1cFYh7ky+VTLBR4EUl3t1k6i83z1ZTf5KXAt9eWJ30vB2ArE2oVWwgUoPgU
5nOO+2KDTFiANpECy58bkuKf+mKVeEN1HxIFDtEysgPjfTH/w44VHykUuMpe
yh2n4YvNP02oeCZPgcXAY0cvXjuDfYv8VuGtQoHvQ3/bQp6cxhpzfgTcVaUA
/6+f3h/dTmO3q9bVP6hRwFx5C99P6dOY46zQ04OaFPiI+RtrXPHGPprvfiq7
kwJljV7yaz5eWC8l4+mQHgWyQ7bsZrP2xJ7sun1WUJ8C9flnPq5LemLXLB9p
HDhAATDJjEsc8sCM418/rTCgwIfPRdLhdh5Y68+Fp0mHKXA+9rxBkIc7Vlt/
sHK/FYpXP8PdK8cNyx42Dwy2poBdnE7T+ZNuWPCSg2a5DQVOFymscqu4YTsU
zlaS7CmgdOpkx4smV6wiKb9y/QRqT5Qgq/TbBUt5UByo6kyBiIYTRL0GF8zv
9TNNDxcKdGdMCrxPcsGU/3RUDrhRwIxIFvNRcsEEhIYC+dwpEDvW2O+z7ozN
079q6nlQgEMieHSyzRlr11tYvuBJAeWPw/wDN5yxhw5rlU9OUYDlIOzfccoZ
+w80d+xs
              "]]}, Annotation[#, "Charting`Private`Tag$5823#2"]& ], 
           
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
DyKYkqI=
              "]]}, Annotation[#, "Charting`Private`Tag$5823#3"]& ], 
           
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
GBMIOYKniot2of8BKkR6lg==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$5823#4"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
xFy18juRcDRaYMGgjzMgM4qjrjwkDE25177pmcDzTU7scaXdOfTvS7Sp8hwD
qP2Frsk6IUh+WlLlNwcTPCLPKj46cQbZO5jdJ3AxQTb2w6qfzhmU0hstr8DN
BM4V56K8dWfQ77Lv0rbrmDD6YdXycH4g6ghoFKgXYEJafQVddjgAefxz+RxO
YYLDCQZj+5HTKOtkxpFMKhPKta6bv1I5jXrHnr0tE2XCXuJA7iD3aaTRqtY/
Js6EUFvqR/77/og7gadRX4oJagOP5Mhs/qiAVJy5To4JDzKCbk9Wn0JDUe/J
jI1MuM9/rzMs5RQSXCQla8kzYex+p7eP1yl0ejAkxkuRCbWpPrz76aeQ/vV9
fs+2MmHniSVRauxJNL7hx95kTSYUz+rYifUfR4ztWv9EjZnwTj9DMPC5N7q7
ZWhJwYQJBXVvDBlXvdE2VtCM7l4muKXEnDGx80Y7BWpGXPYxYWTX6B7apBey
G9GsLz3IBPrsuGoCvxdKP695do8tE27Wx+fVuB5F0oGDJw/bMfF+ZGM3rnQU
3fY+4+ljj82edSxkzQNVWFQfuuLIhM7Z3IpfWR6ob4OmxnsXJnx9SAheG3JH
gl0aPwOOMeFK16pakKcbSmt4PRXvw4T359is5HXdkGR54Hi2LxOOfn1kt53g
hhSvV/U9OcEEDtUP7cG1rsjwuEaZ0Gkm/v4NlHYjuKJIkobv7VAm9P58QpF5
7oyWbdW/vLzEhAUB6OcUdUKZg87a/5KYINbnuPqj2xFpWSZdUkhhAn/ul9WL
0Y4ocN8X1bArTGi7sUhoWXRAC+haxMYMJtjzW1lwjtqjmfWrEsF5TPiPeUw1
vN8WJeUr+BbkM4G1xpd5PtUWbZG2buq9yQQ+69pOcStb5CP2wEP2NhN2Gd1b
xzZ8GE3yOZd3FzFh+W0Tz8UpG/RpptVUppwJz+asvpzecAhFH/txw7iCCSG/
3H+tn7VGsl+lfvpXMuFAkdAmq1pr5DIWeK2zmgkyt6g7lA9Yow8D8hOn6pmg
qBPgXR1hhYZrLoa3tjHBmpny6d+yBXoeafnQa4gJNcbW1go7D6IjbPakiDdM
aH/q8dlf/CCaO+fqlz7MhIBH+mbEn2aIdNZPpeUdEy633RrRKzJDlidSHtLH
mDC7krfFQ8IMDdt1P3w+ycTnU3rvHsJ+5P1mgDQxxQSezXoWV3r3oRXrt35/
vzHBbO8i9filfYhuPqWiMIP7K/PTrk9wH3Iy4i2PnMf9Fep+tJ5kij6pGZSr
r+Dx/jIvvaRugk4/3Es2/cuE6vWha5V/jRG3koW/yyoTTCy5Tv5sMUZym1xU
k/8xYc1fsHrcwhh5MSPKv3KywKg/jx5w1gjNCNWXZwuywPj5CjNqeA/6PaFa
wS7NghuU2MDY7/pokA2d1pJh4e8yS03Ox/qoimaidoLBgrw1pYili/rIf/+R
incsFmx5uJOhu1UfzVRerKjeyALFp6Mn1wfuQp+jP1f4KrNAvFhhOoimh1pz
504XqLBAu32i6O0coJs1K2pvVVkwUMDOVtAB6Mg0sdJIgwV/M29dcQ4E9M5i
Z6WsDguOLFcYfStDqJ+VUfnGgAVTqquGR+13oP90bwYQ9rDAVNDYnI26A6VY
31c3NGRBRUfHRcNeXbQvsaWywpgFw4/6pt7s0kWdP2Yrk/ezQKwsLmtUVQc1
NBlV7bZhgcr4Bm2q2naUM2wRGHqYBWs/WB/7lrRQ6IKjRrktC7hE2z/L1mmh
7fIBVQwHFkREDxpE7tJCFcn5VSvOLGjae8CQ3VYTpRaVBKq44utpcef1mJrI
r6Vaw8uNBZxzlbyCkxpI6VdP1WsPFsxan6jWDtZAIsQ3gUKeLCC979W/rq+B
ZhQ/aRh4sSDu6ZOJSCEN1G0wuxTszYLN3ndtvw+qo3uOf6r+O8aC0cPrHIZv
qqP/AZWpR5g=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$5823#5"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
/geDbPGO
              "]]}, Annotation[#, "Charting`Private`Tag$5823#6"]& ], 
           
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
Cz1x3qh57ksFIY8s0y4yF/oflnj5cQ==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$5823#7"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$5823#8"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJxF0HlI0wEUB/A5bcy85jSvNZ0zTZTMudw0DSU0/Vlz0WG60Nw6vBrWPAhZ
hTNFo1pmpiSDVDI7afnbTxal4hADtbxwmoIGuaTDlYQ6+6MD4r0Hj8fnjwfv
fQMVxYdO02k0muRv/5v9Ea1v9UX0RNr/YjFDtMxz6JwPj6QnStG2BnLU+SI6
0jY4nncDrTMtT3H16AuZ8fN1q+idGrNVXmkPrv/WqFM+cwAnpB0NqRncBD6/
0eTHmWWAm/sVLU4MJthJHbHG5DqCVRLNvHz/ZrxflSUUlzqB79QKFL51zuB+
qp57zOAC3j210tU64goWEWZD/oIb2ONzYFtyNQss6JzOyGa5gwnVxBj/ATrI
otWExLHB7ePD9yIH0P5DkuolmQf+Hy81d1jQMuNtK/uSJ1i80LLnNXsL+OXl
IJtShxaHWyuGhV64L40rFPShE7iEdpLwBges3a0InkffJ5QT6kIfcHBn1Uql
nS847/nxlIFGtFRAOrrx/DCPnoO3GBTaaFLWOuzlgO1LDpCJQ+jUiOKOsNyt
YKGCzeB8Qfu02cKNlVxwu0zem+3qD/7+6mptYjNaHL7uPbYjALyNbfHMN6Jr
6M5nM0J54NnR6qUmFbpqtrdlrhsd+pUTtU4PBPNiY357EWibLPrT5HX0O82R
FwXT6HWLkLTz54PNtITSmAA05Ze2q5iHLknPJef46GXDNbJ7O3rxyiKpFKDH
+U2GmSS0Pr6tjLUPfTPjaXRKClpy1WQgCfSbH1aDNh3d05dKJWeide8Pl6uz
0OqfOaIuGTo2tIziZaNJbSv1S45uePikPOokWmXqFhWcQkeujVBTZ9Bu7jPl
Lvno5bCPoqQC9HCSdbWiEP04Z4PSF6H/AEd9/Qc=
              "]]}, 
            Annotation[#, 
             "Charting`Private`Tag$5823#9"]& ], {}}, {{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}}, {}, {}}, {Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> {2.302585092994046, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{90, 10}, {1, 115}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{2.3025852339686432`, 
            9.210340231001586}, {-1.9286549331065747`*^-15, 
            13.777024368842447`}}, {{2.3025852339686432`, 
            9.210340231001586}, {-1.9286549331065747`*^-15, 
            13.777024368842447`}}}}, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {2.302585092994046, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"shot noise transfer function,\\n|R| / dB (20log10)\"", 
             TraditionalForm], ""}, {"", 
            FormBox[
            "\"lossy optical sWLC \
model\\n\[Kappa]=10\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\), \
\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\) is SRM coupling rate\\nno \
radiation pressure effects\\nparameters of LIGO Voyager\\nconventional \
detector is lossless\\nwith PD loss\"", TraditionalForm]}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{90, 10}, {1, 115}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{
             Log[10], 
             Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
            All}], PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}],FormBox[
        FormBox[
         TemplateBox[{
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Rcon", "(", 
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ")"}], ")"}]}], 
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"RPDLossy", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                   RowBox[{"lossRatio", "=", "0.1`"}], ",", 
                   RowBox[{"Rpd", "=", "0"}]}], ")"}], ")"}]}], 
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"RPDLossy", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                   RowBox[{"lossRatio", "=", "0.1`"}], ",", 
                   RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], ")"}]}], 
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"RPDLossy", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                   RowBox[{"lossRatio", "=", "0.03`"}], ",", 
                   RowBox[{"Rpd", "=", "0"}]}], ")"}], ")"}]}], 
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"RPDLossy", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                   RowBox[{"lossRatio", "=", "0.03`"}], ",", 
                   RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], ")"}]}], 
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"RPDLossy", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                   RowBox[{"lossRatio", "=", "0.005`"}], ",", 
                   RowBox[{"Rpd", "=", "0"}]}], ")"}], ")"}]}], 
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"RPDLossy", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                   RowBox[{"lossRatio", "=", "0.005`"}], ",", 
                   RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], ")"}]}], 
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"RPDLossy", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                   RowBox[{"lossRatio", "=", "0"}], ",", 
                   RowBox[{"Rpd", "=", "0"}]}], ")"}], ")"}]}], 
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"RPDLossy", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                   RowBox[{"lossRatio", "=", "0"}], ",", 
                   RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], ")"}]}]}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm], ",", 
                   TagBox[#3, HoldForm], ",", 
                   TagBox[#4, HoldForm], ",", 
                   TagBox[#5, HoldForm], ",", 
                   TagBox[#6, HoldForm], ",", 
                   TagBox[#7, HoldForm], ",", 
                   TagBox[#8, HoldForm], ",", 
                   TagBox[#9, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}], 
              GrayLevel[0.5]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$5919#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
/A9akLpq
              "]]}, Annotation[#, "Charting`Private`Tag$5919#2"]& ], 
           
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$5919#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
QLdCJk9kBxf+B56vZzw=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$5919#4"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJwd13k8VG8XAHD7vsxihrn2SUharMnyc+yGKWRJskVE0kJJkrIWCqlIItGq
ErJWlgiRCO1FWpQWrbIV3nPfv+bz/dyZ55l7nnPOPVc1YNuaID4eHp4hXh4e
8rNl6dmeijA+uH9PmTohwwWKiHqmyHY+OPFAm0Ha902pk99OPqhY+R+L9PSx
qocS+/hAaP1WVdLLpzv6N2XwwX6OgC7pgtZvTxQr+KBUVdyNdLSn6evUCT4o
M72UT7pd586Z4Rk+IF44FpGWEbf1XzHPBxkJ4+dIX29wevNemB9SxNzLSH9g
B74zZ/HD9aOud0i7jaV+/GPCD1dCHEdJL0t4+n1DPD80D602nkS/2puhxEzh
B6NCKpBO22WzqiuNH8Q0X9qQ/hByo1T3OD+030xwIX3aKTOI/yI/MJvUQkmL
KNq9PNfND/5Rt/JID9fWtH+UFYBci208U+iMivA/+QrodHlh0iZX1NScVQXg
vxu9kqRzCrPj67QE4FyzkzxpbvJW01QzAVB5cd2QdN0a9UqtQAFQ9JvaSvro
2ImC8DIB4LR9HyEt8KVuvq9SAAK0NcZIR42+3GBYKwBJScHjpL3fqarPNwnA
R61Zvmm0+vNrZVl9AgB26Sqkb99ta7oxLgAWubo+pEfz/7yZNhaEii3fXpFe
nydn7WsuCEXnDEZI9+SYXGixEoTWqeQx0jeOxm9O5wpCu6LlHOm4g5K/FXwF
wTpqkcoMeV6RCwUgXhDubmgIIm3u4K6e0iEI3inWU6R53NVjHt0XhLm7x3j/
opv9Jh+wHwrCkNSYGGnLXXm7mp4JQsP3BkXStkWDd6c+CYKD3Asr0tyJoMAw
CSHY3CiYTdqzOKrI2UUIjpTFGP5Ds67ZjRe6C8GsmaoF6Re1cvZj64RAyXHA
kfT6Bze/pwYIAZPitYG079Tcf62RQuBV8vsw6Y2rDw4a5AhBm3TAB9I7ZnIJ
+ZdC8O3tweJZdPbC/Fftr4UgYkXzddKVzoWFEe+FIEdQpIH0+IVz7K4xIbBc
2/6UdJRrhdYeHmFoeTgvOYeOudpl/HShMBzdFLWPdJLvrNex7cJwQWo6ZB59
LpVH0XyXMNh42USTbqvif/15jzC4ZpQcJC0kLhZomSgMFfw5F0in1jLDfp4Q
hpyd7iOkMyjL9zrdEgZHB5dgHgYXTrYE5IsLicC+j8+ieNFxP/uyNomJwKVa
n4OkN6pYpLRKiYDGsfFc0svilHfslRUB2Vue9aTbV76y/aIpAqL//v0j/afc
/VeXowi8G28/yIdec8aek3ZUBFwmfl3hRxv11P734YQI2NLeNJJWmlXXtzwl
AoKv3vWR/uQlqDxTLALrBzSmSB9gtoyHVomA6sMrNgLosiMmRZynInDUoe49
afHYpZMiiqIQ05+mJ4R2vt/r1aIqCh6BUo6kc4gdjXvVReH9/WsBpNn1N5K/
LRMFxUuQTdpowkjmkaUoSOne/EV643YrnTMholBnSNQLoxs3eoYZVIlCbkui
tyhaoGq651udKCw1a9tNmsOfr3upAX8/p36M9KOzg9NEhyjc/eLYRfrLUMAh
nheicLZc2VgMLbcu/Pz9eVE4b01VEUdHrEp4vcFRDI7HrBSSRAuV9ukLOovB
zhSzhaRPCammXXITA8GzQdak7zQ16X/3EQP1UnYiaYrubGrsdjE4VebGJ4W+
xozWzz2B3zdoFJZGj74OT+1+LQa13q+XUdGxpg1D296LgZnTTVfSlDwJffon
MXD72bib9Io1V4bW/RIDbyHbZtIpd0f1PgqIg1uvsysNveBy4BCvlji07kqK
p6N9I9bprdgpDqvmuucZ6Np+mdtp0eKQmLVLnUmur/fQeihWHLyl7FeRbvlt
65GcLA60xLB80gt36e8ZyBEHHY+KlbLor7ulm7bViwN714Y4OXTMvjaHS3Pi
sOnWuUXy6IHBAwN/+SSg5eYHd9La/5l6OwlLwGSdZwLpobnK8AlpCdib8OAl
aYsDRVnWqhIgKMZzVAEtkrj3ybCVBGhfrhVQIvPjkE4AK1UC3I1+01TRTqLK
67qOSEA++yOHtEiahPPebAlQKJePJ70n/aPZYL4ERI3Y/SDtnVHAOlsmAc9V
q/vYaNXjon2ajySg2EnjrBr66pk35kbKkkA1PbtTEx2k0mv4aYEk2E1ZVZFW
Ont7ySlNSdDI0hknnVmcK/9PRxJ6b3zbuYjMj/OrJpusJaH/4MweLfJ8rtSX
2W2WBIWLF7O1yXjWHFVcWy0JIhajPDpoMPliV1cvCd0qFTakG5usI1iNklCW
2pZG+ua9yfaX7ZKw0qqfoYuueOGz3f+ZJMQeSFqmhy6aW9Qa+lcSaq7l7DAg
+4FtS0ishRSkNDzXNUb/65I/NmgjBWsabsWTjnHa1fCfgxS0+I0/JB3lqUnj
dZWCH6Jh203Q4ZszbiVvlALV6Ogbpv+Pl5dU5kEpCDYPdTBHGz/5dePsAylY
xwxqtCbzP2Sm92ufFFTk0GVt0P3TvF9XPJGCrOOq20lvVqSq9QxJgcR5nwW2
ZH1sXHZ85rsU5EZtyLBDT/8K2+lKkwY10/EoB3Sd9Ii+4FppeK1hccIZnXT2
q7PzemlgRl2fIe2sN74l308a0nnS/V3IevHgP68TIg2Pz6YvWUPWa6Eqw3eP
NPjJNne7ondr+/6pyZcGuUQ/lbVoQ87T6pBh9Oo3yr7ogL8UoI5Iw1B1RwHp
jGsOXfWfpOGHnYWCH3qE2jgk9lsa+k7/IPzRDuH9iU/4KDBKc1UOIP+/Qf3V
aAYF3ii3WAej13akzN02poDULUfhbegtRSVWVDMK3Ob/c5J0wp7mQ0HmFDif
Z794O9kfF8/QpKwp0H7/p8sOMp5Z4Rp+qyjg5RpwMRJd7enmzOtPgRdO2yKj
0fTPqsU2yRRoDBXKSUBLtI3zRBykwNMZ0Esk+11Rh19hKgXamBp9pMfdwxUn
j1Dgz+CUVDL6yZ26k5dyKFDh25F9kDyPPKdM8UsUWBVfd+sw2W85+2L7uijg
sMjrZC6aUHN+OdtNgW0R8dyT5P7zbGOtXgrMeYTz5pH7Vd+bTBiggKdTTvgp
9AcVmUj9VxiPW9ZOBejSqdLQ3DEKcLIeGZWgdS498/ChUMF92d/S62ivY3e3
1NGoMOxxL62cjE9ceQKdQYXlfoVhFWQ+uR0q62RR4dS/0OU30Dt5jYQMF1DB
XL24vYbsX1651VKGeH2yXL0RbSbpIdO8ngoKHtsaH6CDpyy05H2psO7+kzs9
5Pm+WwJR/lRICtjR3kv2n3rBLdpBVPhXajPQRz6/gqtbT26lAudX9t/H6NYm
mcgd8fj7GJFDQ+TzI2Kgj32RCpa6c6d+kPm2MWc44jIVnBoWt/wk89F93feW
K1RYmlT++RfZj1e+lggsp0KzSLv5H/Rdni92JfV4XXvVzDRZ/5l8jQu6qaA6
pVfJz8T8vKpTqvaTCh8via6UQwsVjtft/E2FBSsdM1jox5m1HXf/4Hr3WSME
emek2cjGGSrsMQrKVURXGHNUzvPTYMHmUakFaO1O/5yFTBrwqVg4LkUv+JCZ
oG5Cg7qaOiFbcr3nIldWm9HgAm9xlB364IP4gShzGtBLiFF79JeqSLUOKxrY
1zX3OqJvJK5t38SlgZ0ZpdIFbaWqLHbZhwZboq3u+qADvcuOLj5Ag8Kk3MW7
0QxnjZuuCbi/3auH0egOq6K3e5No8DXz8+4Y9OLF2Xrdh2gQmBR2fx/69/Su
x1uO0kCTMDyUhE7MNWOVFdPg+ooyr2x0SX930fI2GhxQLd5xHZ30xPfAwQ7c
3/pXbAU6+MUPv6FOGrB8r6TdQGu9lVE+3EODmZHAa7Xoyp/eBR+f0kCeMKc0
o1soY3mFn2lgJLt8dR96eLXkMQkKHZRlOM1/yOtrzkQE0uiQ4Z2sNIU+56Gz
5qYMHU78Obx/Bh3i604NYdGhdIO4wzz6R3hBZiubDpl/2byislyYP7zkcIwB
HX66188ooJXur0oe9aID3dhc3w799uGJOFkfOuR+u93KQV98Mrjb1o8Oj1iS
Hlz08rfhm88F4v6+OokuaMvpI07+W+iwecnb+fXoYI0e1rN9dNgjWJ28A12W
uLqso4gO40sDXhSiI1JzLk4U0+HTqpSus+gVmUNFC8/T4bnRaMM5dPOprccS
L9NBcDiyrBTdX5ERbV5Jhyh3Sm0NeuJ1j2VtKx3UYk+F9qLNTZ2eXvhAB6W3
tVv55bigv6b8oMAnOjTxLmcKozVDqEYBX+jQ/Vy4RQxNOT5wUvEHHRY+/aJO
Q7/9stbr+DTGdyuhropOyfcfjJeQgcTP/XPm6O6ZHe+8dWVgclDBIh7dTBk4
dlNfBp5I2O9PRler61vLrZABX6HUllR04ZqJcwMmMiD6d6NnNnp7aUywg40M
SM3rtpSg6V6Jn1Z4ymBeVhzrQHvVH/9Oi5MBnTYNbzoL7+9x98mgAzLgmpiq
K4c++kvAsi5BBnbtKZRSRN9bvOu4z0EZ2Gc0+1QdbVjovvJSFu43s6rcGE1N
ZCaalciAYNPafYHk97knmSH3ZEDDrPRWPXpj6MOmm10y0LHE1KMJPZ8sEir5
QAayGWGTd8n1mqJvVfbJQPqGplUP0ed01vnPvpABKzVVx48scp4mSrPHZKCJ
8S6TSeD5DeebNdAYkB9jFhuDrplL5RmVYcCLhIq0A2h9xehWmiwD9v/rP5OC
Xu7lxgmRZ8AXuulQNhpnHXe6GgNkvPdcvYKWu7dvS6gBAxSqnU8Moaeu++Uz
PBnA+Nray5HH+aBnlS94MWCS+rfFGT3+1UQ1zJsBl78NNaxF/1gkd7HZnwGP
lHq7gtCjJQ8rw0IZ4HfTyjIB/TzXoutODAPoy3Wu30bf3L9gOryAAU+udjWv
UMD6KdOK7DjDgP4s102AZg7qjKkUM8DE31SOg44whjcDFxjQquKf54XW+uPd
ubKcAZoL3Ig4dN7mnDzBVgbUgwW7Ax3tLmpcMMoA33r6pQ2K+L6cRKma+MyA
87cWV4WhH1XKLnUeY0CeqXv3LvRyijqb/xcDtNxkVdPQo12WYqF/GdAy9sfn
BtoTYl/oSzFBxc9eV0QJ47/4e0y3HhO+CW6qvIW+t/6q1JwBE9qetea2oz0P
hxYvM2KCgbZ3ah86ZuxdZ7YpExSvRB39iL59/ZncOhsmpDc+N5RRxv6v31Iz
4sGEnw3Nb7eh7c1O/Jrbw4SNk8cX6qhw4Vn4mpTlsUygZKwtM0OHFkoTAXFM
0ItZauOATptPtWhLYIJ8jWdBILr7TlxWejoTvLR8p3PQLrYhS+UKmCB71X8r
jyrmv5PJZp1mJoinRt4ZQmen9E6sbcH9C5nvv6I7GwIT4+4yoaHDnvkXbaR9
+PT9e0zQXVt4WZaN5yM62BPUx4QRy29HXNADLXF6p94yoTpnrfc9NNew5R+f
oCxwHyccaVmA/TncI3WRsCyEskzv9qNvnfvMcBaVhVGiTeIdWotOX1YgKQvi
n7MH+NW4IPojcMMKpiw8TFlpbItuvyzYHqYhCwd8OmN70OaKnMxHHFk4ZbIg
cGwhFy5snOhfxJWFCKuxDF51LkhdLWHuXy0Lah0X+hnoQeO5gkWusvD8llvx
f+i9njeuxnnLQtyWk0FH0bXHFLs0t8lCpNDIMRMNfF8W+yWw77gsHDo/7Fai
ie8bLmfs+3Nk4afv5aqb6LmT3MMaebJgsevLsn70A42L9P4CWRhIdNnDu4gL
YTbebI2LsjBbPuy1AX3xQLt5Xz3u1yQdqa7FBeXJUzELX8uC1M3azvbFOB/D
3NM1b2TBf68e/zC6KnWDwYF3snDafGjtNNpeQfPHi4+yYP6G7aqtjf3Nojoo
64csbP3FOH4M3Zze6/yXVw7rctJt0xKcZ1UENPrU5ODdw68xasvwfSZ0U9Kc
uhxERTM4FuiJyq43ixfJga7+JgNfdJrN0dMpS+TANPN1yEn0jc1KNFNDOcjo
zTSTWk7Od0azF+zkYPeanvJ59HlO+EDsZjnQ1x1wnNHF+yn59PHZFjn4IMHs
UNTDevwX9E9/mxyMHDkfYoE+ct134VikHFjITSqloncxnHf77JMDG15/L0Kf
CzZvdOX/y5IDz0xXwtoA5+3oqYD5ajnQUrCQqF6B75uXEn/F87KAPhZLlzDj
gq3I0/l+fhbc3JYebIQOCdGSVBNigYDJ4lcb0aWafRrtYixIdDZe2oheelnJ
R0yGBc1dT4Mj/sN+W1rfka3OgvIaqa/D5rje1e+nSxxZkGsV0DpgyYVN5evt
2k6wYMLjcMkPezwfWtDWb7ksENHuTlficGHrzq0nZE+x4Hx0UjgXHWUU/y60
kAUvncVZl9BJzRf2S11kQYP9tx++Dlw4+/Bn7do6Fvz+HXe805ELL38c1Pz8
ggXqerVDh1bj/LnmqBN9kAU9+dahN9Bvq05Fmb5mwYfFRxoH0Z+jr93NeMeC
lcqn7ug4YX/mGfDX+8oCo5BfP5+gGVSlvNhZFtRm3V8g44L9PFKj+fw8C0wL
/wswRis8Xv6xh5cA33e/7f3RanlWBqpCBNw9GCp4Ba2rGtrXJkXA+dsnxk3W
4Pu0TpWotAoBnq2zGziuOI+XPPkYzCYgSlH6eBi6hjHd1qhGwNeUbO0jaKUZ
s4StiwjYdvVvfA/6a0vHzANdAq5oJ7py3LigYvD52UIDAtyWnVodjHa9KFG7
bwUBIb1wNAF9M90lcokpAY9qlQfr0IfcXn45bENAU0aegoI79sv22c73dgR0
6L95o4v+bqRyydSBAO3Qugf2aA/FoI1fVxOQZ8sUiUCnZR60tHYh4PVX6dXJ
6AbeUpXTrgQk/N5/ORet9uHbK0dPAt4H786sR3t6Um+VeBHAnXWidqLTu/Ty
/noTEG1umfsU3WjqsdvVj4Diue8KI+hfZdHuVzYQUGk9XfATra6ar8e/kQCj
oX+MWfS6Yw3U9cG43ujJA8IeXDgsOPy9MoQAy4Cw5xR0826+HrEwAiRbaQos
9PgntasB4QSsz15qrYLW8LZLu7mNABNB/1XqaK+e0BBaBK5f6KC3GJ0Bh203
7yTg6cPjP5eiWyrL1FqiCLC/NJqog/6j1sdH7CHAYMf4iC5aM/f38I69BCQF
h9H10N6izKbOfQT88hcSIa9n7TUqUD1AgFlqUtMydOuY1949CRg/iasG2ugJ
v33r+pII4H/sEKyB1uo/s2LRQQJOmq9YpYr2tW5hxKcSYP3C+QN5P0dr3v9+
lk4ARTl+CRV9V1O4f3kGAbG6t5XIeEydWlR+KAvPu5i35i/GS1uSmzGcTUCi
ps/3b2i//Vu3GJ0gQHHTx/ZhdPbPLIesXALGytqN+tDtgTc0R/MIuNG4zKIZ
PfP4sRCcJmBtcvCra+gl9lPvcwsJsHvXKHQKfVzb7KxdCQGi7OiZcPS9Qr/9
Z84T4GT29LY7+i8lwWfyIgHHht15TNEBf9pZF68ScMctfpYfnbPp0+RcGQGZ
BZ3lI5ifXc/Fn3hUEEDtDH3WhtZpdM4WqiFgi+3L6Hi0ve6iNMM6ArwUxoP9
0L4XeBOCbxKgl5H0ywSdllG5o72RAL+XBc9/YL0U8aWHTjRj/hap6HSS9RUV
uEG9FfP1irRSEfqtr4xLSgcBUiHCFWQ9TvV/ta/pxP9z5rqrAlrKrg0+3Ceg
Z5g/eQzr13hZ1HLbhwR09wwfSUcfm38qLfQc63VRvUwN1ntpZLmw4UsCZj/v
FNmHbv54aD5okIBa5RPxluivvSu/t70hwLZClbfTmQvWRfk9yZ8xH5cXqt/F
fuMls7O9+isBe2yEDfejtx/iNo58w/NiZ3cYoU9vn71m8xvjp2O14yL2rz/g
d0TwH8Z31exIxCouYFNPNpjDfjRyXYKNZi+i7AvikQfe1p11vVwurKbe2dIm
IA888fuL1dEX3rC5yZLyUCb7/FUL9tO1CR/EBJXlYbLSWa7GDvvxRCOfgao8
zFtNsFejkzbnzmxcIA8qSUu73ttyoXyN/ee7GvLwMlxuUhItsqC0M2m5PLgH
K0o4W3OhvjX8kIClPBgXeG08AdjP/1Pcs8haHnTNT2KUcJ6u7w5dbSsPmVbC
6mfweVFWttjxpIM8fAYzOIfPk+K8T5LarvKgSNk+VGSK9b4t6JjrRnn4vexx
XLARnr+8T2FxijxsrzQzMcbnK38ktwruy4MJX+S6Wzhv2y/ddkHLXwH7s/XO
kU+OoBdAE5L/ogAS63Q+Gd52BLni6cX18Yrg+u9wes9hRyjx2tDkI6UE73sl
VxQFOMKP22mH4KQSLIxrjB4xdsT5dEq2b4kyxBU5xxpSHUGN9kEmpF4ZcrPE
djh/cYAUPoktHpoqUPb8/DvpVgd4+TB5NDdCBcbMXX5qnnaAxJdN+a9qVeDO
gxW/7aIdQPOrvO4UnyqYf9xpU+PiACorjeaZHFUYaui8+WOJA0x7GXx8dEQV
XHav/Cwq7gC9CW6Voc9UQd2IZuQ8woGpD3pVvEpsGFQ0nTFo4cBTHvOdRsps
iAilh+Xd4UAN4aC/TYUNr2e8Bv81cyBytX/VKzYbbL7ptbc2ceBb9eGqWg02
WB16dcmlgQMjSSNV4TpsqJlOKw+v40A/O7f6uTUbnp592XChjAMVpsW7KLZs
WO8dt04MneVxzcDOjg39Jj4T4dc4sCqttbqKg7/f1KlncJUD935+r85czYY7
3ToNrZc50NhsX2PjyYYX8X9F3pzjQMEL16jYdWyIo5XXWqNjx30Nb3ixQfVo
6qZLJRxYqbmrRsWHDTz3zndtK+ZAVebZmr8b8Poh78K5Mxw4dvlqlG4gG9pH
qR4B6IjWWsPQjWwIt3wj1V7IgeWTD2qeBON+yfcSjxRwQJr6PEoyhA227YPm
P0/j/Wu9N7QOZcPfq8Kzbuhu6+8TMZvZsO6T9a26fA5c8Z2pqQjD+9U+HqOA
/h/CZBOE
              "]]}, Annotation[#, "Charting`Private`Tag$5919#5"]& ], 
           
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
MBsO6K4MYaEL7OfK77ixQdWkXC+gmQP/A4CrsXc=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$5919#6"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
Wc+c1GncDhJgPyE+SjpwV+q9eF8JCDVxMTj4//VykUhLkICvNvafotBGL37e
vfRIAo5eyY47Ssa///yTr90S0HVTdoB0zxz3V4MXElCydt4oFr1LnqryuF8C
um8MTpI+77syY/67BJjsDNp1DD33c/d+B5okmDde3ZVAnpeSX3T5t0nCjrOl
NSfJenrpq53ddvQj58WpZL3QmdqT4yEJ7+uDU0gPO/Je0faXhLV10x5pZL7m
KUu7H5QEh9TtYqfQB5a5T1fkSAL9kmhUBlqf/bLc/70kSHyPvZuD9v5NAeoX
SRj32qV3gay3t2w6qkck4XXlSCXpL9S6fpFJSTB6XlqXi7YJ7Il7wUOBq4di
ey+S89ervhkhTYHXJyqJy+ht7cf/3TeiwGjiFZVb6D35heuoJhSo8PlZQzr2
YEOinykFPAW+by4m6+PSeZqEBQU0380fvU2uZ3qgmsdGCoynhI6WoMudtthx
e1LAzrqgrwItNapcsD6eAlJhk/aNaLHWKa6QBAoITmpPk+bLb/fIS6KARrzy
uSby/NoaKP/rJAVyxhnvm9EvGqvO/XeWAiE6QRFt5H5k26aJ/keBj1HJnZ1k
vWXHRHd34PMm5rleogkVu7d/uygwOPCphrTUAstI8wkFlj/MCntFvq/8wa/Y
XgpkcfuOv0YPKtFDdd9RYPb01cF36KLZooCscQrUlORwfUJr//fK0Y1ChVb5
ilff0S5nWvZU0ajQkH6rfoJcn0N3YqWkqaB0tOLaDzKetiQWP2RSoeIbd9Qk
ej+3oYD+YirwfypY8YusXy5Z5RL6VBgO0u78hzYRd6Q3bKdCXsXMRwkZDuyY
NdOUc6dC0qGSb5Lo1E/LIdyTCtrB139T0P3V/HuW+VEh5L4jUwp9ZEd587m9
VPiT+dRHBt1cTw8NPkqFKxkZ+kpodkhvN+saFRKHnfpXoWV9z74PuU6FthwB
SV308Fbn7003qNDdzTDTQx9fPSDmc4cKJ8DvugG6hWvMqrCaCpyxoWRjNKTx
1C3uokLo6OxpS7T+Te0ilR9UeEU4Nm9HC+RNVe2fpEJJ9oXFbujnaZXtLdNU
KF4TE++O3h9q8sV3ngp3AuibvNAlRmylK7w0eLL3yc8d6GUPPc8uYdDANkkt
JQS9eDAtVnUNDeyXbhU7QT7vtdCNTSY02Cm/NDEFnfDoaG+4KQ0O3M3lT0WP
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
JocNN9znK0p2s6DcuapSAf0/5zg35g==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$5919#7"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
k0bfdJotL/Zmw4Ry6o3gBg78D2GUrOA=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$5919#8"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
/a64GcKBGN3T85XR/wPcNyZW
              "]]}, 
            Annotation[#, "Charting`Private`Tag$5919#9"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {2.302585092994046, 51.21157348221172}, 
         FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{90, 10}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{2.3025852339686432`, 9.210340231001586}, {
            51.21157348221172, 57.0800259820388}}, {{2.3025852339686432`, 
            9.210340231001586}, {51.21157348221172, 57.0800259820388}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {2.302585092994046, 51.21157348221172}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"signal transfer function,\\n|T| / [?] (log scale)\"", 
             TraditionalForm], ""}, {"", ""}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{90, 10}, {1, 1}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{
             Log[10], 
             Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
            All}], PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}],FormBox[
        FormBox[
         TemplateBox[{
           RowBox[{"Tcon", "(", 
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ")"}], 
           RowBox[{"TPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.1`"}], ",", 
               RowBox[{"Rpd", "=", "0"}]}], ")"}], 
           RowBox[{"TPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.1`"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], 
           RowBox[{"TPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.03`"}], ",", 
               RowBox[{"Rpd", "=", "0"}]}], ")"}], 
           RowBox[{"TPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.03`"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], 
           RowBox[{"TPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.005`"}], ",", 
               RowBox[{"Rpd", "=", "0"}]}], ")"}], 
           RowBox[{"TPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.005`"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], 
           RowBox[{"TPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0"}], ",", 
               RowBox[{"Rpd", "=", "0"}]}], ")"}], 
           RowBox[{"TPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}]}], ")"}]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm], ",", 
                   TagBox[#3, HoldForm], ",", 
                   TagBox[#4, HoldForm], ",", 
                   TagBox[#5, HoldForm], ",", 
                   TagBox[#6, HoldForm], ",", 
                   TagBox[#7, HoldForm], ",", 
                   TagBox[#8, HoldForm], ",", 
                   TagBox[#9, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
6L+qDUtvD/Cg/16O7c37xYP+e/evmQUPDf33qJJQkQQN/VfmgXiZFg39t0by
1FxXGvrv1bG1l3fR0H/XH2pseURD/3VXXFTLz4v+m1u45WIoL/rvp12Ncv94
0X95b3YrFvOh/15r63x2mx/99+g7obQ/Aui/eyONrK8Kof+GzV1k0i+C/nvN
5GZ12Sz03yVaj74fYqD/zrO3OZktjf47oLetnVsB/XdWFStOTRv91+zuibmB
Bui/a6W2Bbtqo/9uNNv5ZNEc9N+sCVXFr79xvtlQ76jYZY755vT1sj6kP8B/
rTdHbSD9Af77xyDsI8lP8N9fTh+uk/wE/71pfJ5O+gP893zWi42NPOi/cjf7
Cz/yoP9eL+y708mD/luyZntCHw/6Ly/TIv4HD/qvSuPIiqk09N+/l3MvidHQ
f3OXpGWo0tB/4x4qai2jof8WJa6oD6Wh/66+tWPKNRr6r2TM/LFRGvpv/ZOX
z9x40X8nrD/xNPKi/z6sYzTH86H/ZsU/PBTCj/67S+vm2VwB9N8d3xxL1YXQ
fwVbSx44iaD/mjkNscdE0X/NdGYHx9DRf3naeYvNpdB/ZzkMeWjPRf+1ORhT
s0wT/bf34DSpq/rov24Tj2X/6aL/DrZ2zvihiP5rILDrpvM09N9W81OaWzjm
ma+6W9WT/gD/jc1QlSD9AP7bULexmOQH+K/RUtMKkh/gv8fM112u50H/TYqZ
79PEg/5rIhe8s40H/Te06f66LzzovxGm/sLfeNB/Byr6+cd50H/HVu0P56eh
/765MSomS0P/NfsnkLCYhv7bMNxX6END/z313CViLw391+UxH9c7Gvrv9eMl
CvK86L9DV9++yuJF/937SrdRiQ/9l3E0O+kbH/pvYFCG6RQB9N981dgkD0H0
3+FP+0w0hdF/Oy7mZx+Yif6bX3tz/mExVmnerucm1fcYplmNQv5l4ujB5upL
Hb7ooAfLFi8pCjdAD17jcafiyCL04M3zpnqk09GDJ2i1+p0c88yf+ehm5HqD
Bxcc2WJG8gA8uOhZ9FVy/cGDdbcFbSZ5AB7c0v7mPnmeAg9ePrblF3meAg/+
JbtLiOQBeHAV+1AreZ4CD04NokX28qAHG8ccnjrCgx5cfmc4dgoNPViYfpkp
SkMPtvvyba4KDT14v/yaYSsaerD83Mrnm2jowf3bpKZfoKEHb/uoITpAQw8u
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
/4D3+qvfDVtri977OI535pFl6L3OM5K3pTug91YlrhhhOaP3Gpzl5Y2i8jV/
w/rd/5TFTR9XH7Jd54v+e68w1uDvLvRfo6ZFbL509N+SNZF3J3ah9577enp0
A8c88B0zkZCyVPTe+tQXPWeS0Hvbwvviviai9x5/d7eCkY7e27iksu1RNHpv
rGGHxHmO+V+76bOyH6eg9+at6TvtnILea6dv8cc4HX33jj7v/tQ09N1Ec/71
SYnou2cz/93em4a+u/Z73IkyjnnfQwONW6elou/u5bMaUU9H3+2iWY+qpaHv
CjrPXtCWhr5br6VxWS8dfVegaHjkfRr67nDd5XXyaei7hu/fbnfkmPfdOmwd
LpuOvrtHOFl+Ig19lzUSoUH+vuC7Jgvu/72Rhr4bsFpZ3TAdfdcrKcd4QTr6
rpKrBet7Gvru1ccHBzjnfR/Mdq8LoqPv+jwp4NtER9992r32+WY6+u4Q75X+
LXT03WWrDheE0tF3eeY/vxxJR9+dfUjiEJm/At89sjHtUiIdfbcq4fKvPXT0
3YiqooijdPRdvoUH/l2io+/W64vseERH3/USOfK+no6+y5tMv/qXjr77ySs3
Uo2Bvptz7k5nCAN9NyzD/tgLBvruq2aWlJ44+u7tUovqD+LouzPeX045IoG+
G5J0J6pIEn1XkHYjVUUafbdS7+C3XzLou72Fq2uPyaHvHgr7YtipgL7bbesZ
ME8FfXfklugdd3X0XaNZ01dO00PfrXncsOuzKfquXFWctogD+u4JwdDyGV7o
u+2RJyP8vdF3BY9fcVC2Rt/9PqAj82kO+m5IkNUb7X6c93XZYeF88BH67sgd
37snMtF3F2YqCSqtQd91bDk+w8QIfbevYU/lNo553497ZGV3cMz75mmHvVnI
Me/7+8wyn6Uc8751t+xfeXDM+xrKmlaWccz78r9c5vabY973zK389SIc875n
RgWmuXHM+95zvpVjyDHvG6N1VEGWY943OWHWumA6+m7CA2YDWR/gu2tL85+H
0NF3zb3r9bbR0Xd5FeekhtPRd20kFEai6Oi74TlJTTvpHPO+b53+pNDRd5eU
ubgepKPvRmfly56ho++++bI1rYiOvhurdvbpSzr67hchFd8eOvqu8GvR6FkM
9N1ZShaFyxjou6+WRPEcY6Dvxs5YdGGMgb5bLOI+f6c4+m4rX8dXdQn0Xbkf
nkGSkui78jtN7vhJoe9a+825wSWDvjvHM5FfQxZ9N/ZDd6WcPPquVLexf6sS
+q5KWmjVVFX03cKfW4X7NNF3f7361ihphL4rXOU4x8QafXf12/rMEFf0XcNl
XPPP+aDvzpZ+fu23K/qundiMRwd10HdP+NQ1cM77Rrk8kyL9Ab779cTNTaQ/
wHdFUxTMSX+A72bbae/ZSkffdX39OCuMjr4r//HX0+109N2JEGeVODr6btuH
tY+S6Oi7W8Yc9u2jo++ubloy7wQdfZdr3aKca3T03eC1vEFP6Oi7oxuTrdro
6LtSJ7K1aQz0XWWzvl1GDPTdsK377iQy0He/W380a2eg7/Z4y9itEEffHf/x
+c2EOPpu3ZXU5DoJ9N1aV/nP06U45n1j97Xul0bfjdRknds7B33XV1l5vftc
9N0Dy09vb1BE3131lqsmZT76bqX9JtWZGui7R0q67MnPU4Hv6mhLXJ5gou8y
pEo32jqh7269PXHD2ht9tyJqvfeuFei7w/IfzHyXou/Ga53m38ox71sic/Q2
6Q/wXdsjI3bkfgq+WxV3xpXcT8F3zVS8B0h+TL7v+c/fvRF09N3hldcMdtDR
d9sFZxXE09F3o+mu/mQeFXx3w7yfdofp6LsLl8YEnKej75Y+sXlfTEff7fPQ
3PeOjr674GSX0jAdfVee72eGLAN998iXVbI+DPTdXhOv4RsM9N0fs+I7GOLo
u6se/BvIE0ffXdTA2LxaAn33/ZSGo2sk0XetD7M2lEqh7+6e8yFhuwz6btTj
HKkWWfTdKb+1aH/k0XcrHpsY/1ZG372QMLDqpBr6rmZkvc5nbfTd4OnvfwZ4
oO/S7y4zfeaDvjuz03phtQP67g6th92c8745syJ/kecp8F1dV1sjkgfgu50R
OlNJHoDvWqsyjEgegO8OTxGXI3kAvps2b1SH5AH47py/0V6xdPTdIC6F67vp
6Lsjc/yX7qWj7x555WCVQ0ffnfvAyvwqHX33QZHtulI6+u4SnrpfTXT03Wd3
1zZwM9B3i288btBmoO9W+kmejmKg7xp9kLpbw0Df1WFV+1mLo+/qx8uF9Iij
7zJKjLbckUDfXaTMF9Qkib5b/MWnaqU0+u6ZM49Wmc9B3+2b9yR0VA5916si
tnilIvru/VkGy2pU0HeHpq+W01iEvvtR0MjTUB99V7390d9N5ui7KhYr7l9b
jr4bPLZHw2Ql+q7agQW/FFei79Knhl0gP18BvmvjO6TkxjHv+8ZhfibJA/Bd
g+C9IiQPwHdp7ZsFSB6A73o927+f5AH47rCQCi/JA/DdR3fPZ0XTOeZ9mVFl
u+jou6zaRyppdPRdgS1GL7Po6LvhN/YYnKOj7xpctJa/TUffXXVwuVQVHX03
RUtbdZCOvhteUxwowUDfHciXMXFloO++71C2Oc9A3z1iszeZVxx9d8rGRNUs
cfRd+rfMx9YS6Lva+mnOSyXRd5P4Zqruk0LfHTnsvs9IBn23iGtic5Is+m4s
Uzk2Qx59V+6+R/MGZfRd4Ve/y16rou+up7v5dHG8H7pun+3HITf03f2h4SWt
Pui7vpJ2DuLO6LvSPb/vPeeY902qKLhJ90HfFWk/Lr/NA323YZ31hyee6Lt5
V17x2Pqg7/qH60nPX4a+e2yarv8UjnnfufvMvpC8Ad/d+OmJPMkb8N2S7rQu
0l/gu+qqe2aRvAHfnQir+UL2b+C7eSHPB8n+DXz3da/fKNm/ge/WlCkvIHkD
vqvpopSTSUffTbmyyvsYHX1X8Ng3mSt09N3OprSBEjr6bsny1rZGOvruT0nJ
JVwM9N3ClChZDQb6bsgTqTthDPTdZLf9x98w0Hd5x/UvLxVH33U8tSq1RRx9
d7r297qLEui7Hbqi5c8l0Xef+ngOmUmj725t0HaUmYO+KxnMflAhh77L1j43
NEcRfXfk0Rse8r468N1djOrocnX03aOt32JP6qHv+oUsH7pkhr4b8duRt9UB
fddvv07AJS/03Rue/1a9W4m+m7eaJSBiib67+1uVawXHvO8N7rAokjfguz5t
yiOkP8B3x3XNesj9CHz3T4TLGpI34LthawRekP0L+O59mh6T5A34rkxZiD3J
G/Bd+j+V/al09N013DqCJG/AdyU2X5x/lo6+Ozh12oebdPTdNzmrg1/R0Xdd
Nsx63EdH3zXJG9xIZ6Dv3vcSG1zOQN9dvORRzikG+q5R3ZtkbnH03ZsPa0TT
xNF357V7LDGSQN/9vr1dW00SfTdu+R6DSCn03Rjt8Y8yMui7bl9l3b1k0XfH
8uWuusmj73rcUpquqIy+y350x329Kvpu1Ys7l9ZxvB+64eXb71pu6LvPNra4
vvJB3y1p3DR82AV9d9ml3SYGHPO+r6xnchV7o+9eXJ+fmuyJvpt3bGMXwxN9
93ZUb3+WD/qu/KKuzzR79F1NreUntnHM+7Z+njO1ciX67ngxd5mfF/ru9MZR
uRYf9N3qiJLdAT7ou00Ppyoz3dF3rzevS+70Rt+V4p69eD/HfO/sC+UtJN/A
d13V8umkf8F3s5rW1ZJ8A98VVZvBRfINfDchT+w1yTfw3bsFcq9JvoHvqhRx
PyP5Br77q1ugh5xPge9O4xOxJfkGvus2xN1DzqfAd2cF5mZepqPvPhtK0ib5
Br6boJ3a0EBH370WrzX0j46+u+pYgK06A323/rC03TYG+u7VCbUjrxjou1nX
DXwWi6PvJq/tU24UR9/9EaagfFoCfXdK3sCBh5LouzuHIhfpSqPvisrE8PHP
Qd99I5t/vUAOffdGCf8PLkX03fLp37idVdB3r/tUee9RR9+1fTgl21EPfffI
oYMB1mbou42eLqciHdB3L2xU/ujphb5bVhaRKe2NvnvSh/+sjBX67vXihjCu
MvRdIdN7ISTfwHe/fFH8TPoDfHfHv856km/guyKRf1kk38B3RQa/5pF8A99N
jYyXIvkGvpvkry9G8g18tyzmswXJN/Bdtzq/AnI+M/m+5wDB8+R8BnxX3jV5
Ick38F2+MyePVNLRd1u2Lc7spaPv2h3+/E2Mgb7LK65aZc9A37VTbKk6zkDf
/bWQKTrBQN89628svlscfddb2VVYVwJ999yaYQsFSfRdgfhdG4Kk0HfpG/31
hGXQdy8dtmFYyqLvcrmJyBjJo+9GfYvNnKKMvjtyysddVxV9lxEjdUyF433Q
X0bkLla7ou9q0K6b3/NB370TwxBb5oq+Oz37Ou9WjvneCzIh+vHe6Lsz7b2e
zFiBvrvi2b5zjz3Qd+u8nYpv+KDvjj3/PoO8Dxl8d9tDXdOrHPO98WU7VJNX
ou+K/Z448cwLfTeq89jTdh/03XfnpO1NfdB3advURj+6o++W9qy+IuGDvhun
3/eKc563YGh5a+xK9N2O2kC9Bh/03QShwvZub/TdyIXlj7b6oO9eTXHPr/FB
300a1dJM9kHfdetdHXfRG3235mBePuc8716xdDbJV/Ddv9+viJD1A7678Ul7
FclX8N2pn5xHyf4EfDdlnFVC8hV8V1ek9z7JV/DdwYKd+SRfwXfNwu6+IPkK
vls5vUKO5Cv47jS3ezdIvoLv/qAPW5J8Bd/lS5KoJ+f/4Lv+S5huJF/Bd29u
XeZA8hV8t/TLH7+FDPTdZEt9+lYG+q5n/iZGJQN9V7pmipGBOPquS+fp6Dpx
9F3+T6dcj0ug79LG6hOKJdF3R2IPNahLo+++VhD7NWUO+q5w2wGjC3Lou165
OsJDCui7vul2eUtU0HdXHDkcvVUdfTeocth/gR76rudU2Ra6GfquTK9LN9MB
fdfb4beshhf6Ls9cK1tTb/Rd2cNHss9Zoe9WJ/PznOSY5931pHMjyVfw3WnG
Gq2kP8B3t19gviX5Cr4bEdplRvIVfDep5O8Rkq/gu88zK3hIvoLvpj2u+knO
v8F37+xOliX5Cr77q9M0geQr+K6zwp3VJF/Bd/nmLW8i59/guzlFnxeSfAXf
dazz/EHOv8F3o4/QdUm+gu/GiR4tYTHQd+d4f9yQw0Dfvaj+yusvA303Jszt
dLw4+m5LRe9fTQn03dGhuNo5kui7699t3BMghb47aHh/kEcGfXdZOn/GYln0
3ZaZqf0L5Tne77xv5eZvSui7T/P5E6VV0XeXfcx+wsvx/mfLRzuLzrii71Z8
1nS97oO+uywkSivXFX1XfezsFkGOeV5ze9Getd7ou2sOVa6xWIG+Gxw/8Oug
B/ruvOb7Zg980HcDbF57rXZA3+W17Mqy5pjnrROZLbJmJfqudsiAxKgX+m6d
uVUYyVfwXXMmP5+aD/qusINgu4oH+u7CY1waWj7ou9/Gd9EDOOZ35/5u6stb
ib4rSbfZ/N4HfXeLmO2Wd97ou8d8GOcTfdB31yzVUmD7oO8effRjc4QP+u7O
jqttz7zRd599rB7inN/9+8/2a7kP+q64VOoJ4g3guw0T26+0+aDvvtZ9GOni
g777PVjlUrMP+u7n/SeKq3zQdwv9rJ4f8kHf1X91aP2D47aTnpfanXGB+WfZ
pOdBDZ4HNXge1OB5UP+vqzuPp2p7/wBOSUohTciwj1JIZBbJUlL2UVGGUiJE
pZsiQxrIlEjIFCmUoTRJUYbYoYguSimVREUlpEio/NbSeY77+97/Pq/tmHrW
+qx9zvs68HoeZHg9DzK8ngcZXs+DDK/nQeb5n//+fr+CnOt63L+3Ch+f82m1
oveascerNMou140by38fP2zwNy9kgjdYzPwUOHYd/l7j/3+8CPfr/X18J+fx
c5hN/nd5TSpnIOdu+eLcYSPG2FDD8XmLGDcvt1pybO8LPk7WYCTO1iuLF/7v
5+dB8P38/fyvOJ9fkOl63Xt1v9U0ZLnPe9WuQ4bMkx/F3+UmSCFv15eLh31X
M22V1/cK2PFyrqtyvr4A9+v9/fp9Bn/zPEbmge3j8LSxr18YfvlJaOEM7uc/
/77s7AtzAc7n1+F8f1+5P29sgVhpSPzY7yv/cX9lVvrY57Mp6bFY95/rg1bG
zwPOj133MM248yhzLKeORCaG4e+nsNDS+YU2G5+nsq5E4Meb2LAsy2Jobq71
uy6icYvmfjzTL7xR4cLYxw8OHrGKDR277lbjwb/n3Nh1+8srZvnmjV3/0rve
mLx/N1x/FPOWd8Pxses8phOCDr4du54pEWPy7j+P91i/3bJG05R7Xe3LmSOR
/3m8XLTEoJ7Y2HVnjU05A/95/OeKZQvcNo5d/2awWfHMfx7vVY/SRJVMuf5i
a/2WGjUfmusv2taUPyMZ/MUjx8L3JIO/MPAxGSAZ/EXhIQVhdZzBX6xC3qok
g78wk2rfTDL4CxvW+ESSwV/MCHL6RDL4i167aFMNnMFfTEtVfUUy+AvTyPZw
TZzBX/CWTnLTwhn8xeV47TxtnMFfZJWYrV6CM/gLweBTJ/RwBn/hU6N8bBnO
4C8KLqxUX44z+Is/zy/4riI/P8dfFPCdHE/+3jf4C6Va6z3EA4C/2BnwtMER
Z/AXmhbr53qQ6xx/8Zhv5qLj5PEcf9GTjILSyefn+ItgzY95lTiDv0jfMWwx
hDP4i3uahwWWHKC5/qIzkQmJwRn8hZPzmneTfWmuvzjICs49hzP4i7q8hdv2
H6S5/iK3OLj3yCGau19vnF+Q/uIwzd2vf09Ntanzo7n7tXxpxbRVATR3v655
odfwKZjm7te+HuteRofR3P16cVyow+MomrtfPwm+GLA5iebu1zdeK1zUzhrz
F9blrzTp4jF/of7n9p5tb8b8xYZDwnl64myuv0grm5Yvd5bN9RdeURd6TYTZ
XH8x5LUoiC9rzF/4nz3A5NmM/f/1RRlGuvyyNNdfeMnq36A7x/xFd69mPZl3
8BcP1uW+Jhn8hZu8XRfJ4C+6lXaPI/MM/qLQR0SGZPAXiqb6K0kGf8GzVMOH
ZPAXxofZJSSDv8icdX42mX/wF+opl06SDP7ic0LAIrIewF+s9XvdTzL4i423
jPnJegB/QV8X26eDM/iLIStpS12ynjj+4tCHzd1LcQZ/MS8qVh+Rn5/jLzyn
p2QY4Qz+Yqh5WgiNM/iLmbIddutxBn8RuLZ/kS3O4C9aqxp/7MIZ/MWlkN8b
D+MM/sIw0PVjHM7gLzbeTei6RfYnjr8IC3RZ2IIz+AvxqLvHZ+P5B38hf21+
pwPO4C96f6g/r8YZ/EVLi1nhOrwewF+4/Mw7yYvXA/f/r6+yMf2KM/iLxHsh
lTJ4PcB5wPi0Zy1zhGaWVaHG8xmS6NHSO+Z9/jQzfxy/+C4tKVRY9mbS90D8
+CNXPQWrpJCL0IwsYdwf1YI/5q7bII3mS3qYuEfQzIz9hvUC76SRpWOw5oI4
/PuUdotP9pBBXlnWa1RT8e8z2EAveByFJl0J7D+ZQ3PPH8Jx6Un8NTT3/GH+
jC6s+kEzje+6nHc1U8jSbnL8+A1sJl00+/TE+SzU7LstRNmBzUyp1vru6cpC
/WxH0StPaeZ9d4WpzE0W0ih1UJyCf573GkY3NYdZaJnBbV8lfZrrTa4UJGk+
nkBzvcl0m1v/knkHb6KqKdFEMngTyYb2jySDNxF6n/2LZPAmF4qezCLzDd7k
6Rw+PZLBm/gEHttJMngTF6+hbJLBmzw3LxohGbyJd4TLbrIewJsY3+4dR+Yf
vEl+gUTpaOZ4k2tdHbdJX4A3Mb4yIEzWA3iTZxvvPyR9Ad4kgH+6NlkP4E26
j/+xMSD9BO8vfm3EfgXO4E0KKaHvq3EGbxJaNVPKDGfwJuyY3eo2OIM3Kcix
NXbBGbxJU5+4kA/5+hxv8kygbH0kzuBNCu6Ku18h3y/Hm7xoyhvXgDN4k6fr
d7oJ4HkHb7JeLFxtDc7gTfj2vFx4DWfwJp9mvqKU8HoAb+KvPGt1Lc7gTRSL
Jyvm4PUA3oRfS+TUI9wX8Pfm+xbcWrMaz8+KYeuS9gBJJDOvPXwLXg9Kaici
y0SkUODyDr8ZeD3oRTWYtaVLoUPuforfQvD3c/PyvsbF0igkamn693CaCRBz
vpJ+VxrxPOvY/e4UzXxLV3+ebyaDMkP2npt3lmbenMxduaRFBolcz/iYdplm
5ngp1rTrUuiA/tYSlXKae96+arH8bOonvF+2WB29UI3Pd7dWHz2rxmacRxw+
+M1goVM7nLa9iWQz8Ue1DxjbsNDwTIdDr3topnveb3HfVBaSe1F/LTuaZl5u
fpRb94mFCmoe5J5m01xf0/h0Gro2neb6mrnh75+Q+QZfczY+6i3J4GsEq+S/
kQy+5s2fGAEyv+BrdL51LSAZfM34AWUzksHXVN7jCSUZfE2zqkgDyeBrPtZo
qJL5B1/zoCjkJsnga76Yzd5M5h98jQOP62Iy/+Brej2ibEg/gK9Z5zq1iawH
8DWrV0l1kn4AX7Mw3OGmPs7ga1bW/lQxxBl8jeKLt+OMcQZfk5AcpWlKzmcc
X7P8jnKdBc7ga15/HtpmjzP4GnZo0qc9pE85vsb2p7VgIM7gazLeCf9Ixhl8
zX71LJ4SnMHX/NKuQV9wBl/T5b80fwGe92CRkmzmlRjy3mlv7ouz1TU591t7
xdGNmKs5n3AGf+NXt/yVJ55/8DeyIZse6+D5B3+TWxQwRxPPP9zPLVHI+OWD
+8Hbr13hq64k6jwQ+G45Pi/pxCl0b62SRLN8PwQlHMXnuSd+56dtkUJV7Rn6
74Pwz7/7WJJGpxS6HOmsbITP57ZOqLHSUxo1PN4fJBKJ+6ZOsm+3gAyanbnV
+XwCzew8nW0ZEC+DbloMVx6/QDMKFRkN/8ykUPjxjfen5+O+s3U5PtGeQne8
aGFevL83bezdE55JoU6f9PdO/GxmpCPIVPUrhVrbFvgsPMhm2uR62ZHaLGTg
G66uo8lmAkS1/sk4xEJ9U7+tS8fnL/BFHts/UnY/x3zRNf/AR2SewRfN7nB+
TjL4IvN9le0kgy9qPN09SDL4Im2dL6JkfsEXZTXLa5EMvqj1XLwDyeCLnsk+
SyMZfNH4RLs+9dH5/uuLQqtVt5B5B1/Un1rYTTL4IssC0Qwy/+CLpknVnSLz
D74o2vFJK5l/8EWpgi+Pkf0ffFH2ttVvyf0C+KLBnDU95H4BfJFdhH0luV8A
X3Q+7bw62f/BF61S2iS4jpyvOL5Ix2Zf9Ubihzm+6N7Ls8HbcQZflDkgG+FJ
+pTji2pdnNVO4Ay+KOaqyK6LOIMvshRrMPwXZ/BFHivXrODF8wy+6IzMia7l
OIMv+ln3ISkVZ/BFLy+rLpmD5x18UVBWqmA+zuCLuhZvL43G8w++SPVE6MwM
PP/w/gJ/4rfvFMb7/4NYx9zQfZKo+VLo1Rl4/19M11V3/5ZEFooFxZfx/YJi
onPJmhgpZPMu28sV7/9fQkLEkmSkEVOeYGqA9/+CXT5J37Kl0Ya4WYFP8f47
42PcwAoDGdQiWTzzzhmaOWpmetXskQziq/0UZ3uJZsyWnjlzTpVCHhNivNNK
8dcT7TqCDlJI8oN1W/U7fD9qGy6E7lHod/X5BiU5NlPpWSpYLMhCzPMHV7fg
+4XNzdrF18xZKPh7/Poff2imzyDRf0ECCylrT/MVT8b7u1tUrmQrC1k4njMX
3kBzPdWQhxrzUILmeqq5/xx7PHre4XgqJ5vTb0gGT/V1f0EPyeCpfJ65TyDz
C54q7+iuueqj++FfT3Vs1TmaZPBUWsr9fiSDpxp3/XAVyeCpvCmNeWTewVOl
599LJRk81Xi5TyvI/IOn8hTMFCXzD57KDmWpkPkHT2UvoZpO9n/wVIYuxefI
/g+e6v7+2evI/g+eKuVW0S1yfwCe6tRJIfOVOIOnWusla8Mm88nxVHMHHkRv
wBk81fr+IGYruf/heKqYjMyO3SRzPJXpVWaeP7m/4Hiq4vo7dok4g6cqOn/M
sQBn8FRCJ3YmfCDrleOpgn1DDsngec8zesX/tkoMrbgY4rwH57VXwyYqbRVH
IXxRw004g7e6vI7X2wHPP3ir715nLkvi+QdvdbDjtZgonn94vwXzB6wzbLz/
C8mf71wvL4nCD4xP4sH7f5GyZhvPbUl0T2OTmxHe/2U/lzXrm0ihloHpGjvx
/u/mKSGQ2iSFnpTP+pSJ7w9m6Mw5HO6Ezz+uviv1T9JMM0ulrbBfGqncXXnE
Nh6fv15N8RIOlkE74/L9G9JoZijd/digIIXSUys+Lr2J94O5LzaVWlFIRL7z
2uY6vL5nh71oO0uhP/cyYvXxfH/eXtD0bzuF9u2sNFnrzGZWJK9xr1Fm4fNq
i9Jrms2s2qOVM3U/C52PdKg0q6LHPFlj7nXBEROm/XrBkLIRvv/oOLho6AE+
H8UWXY4+QSGtWJ6hHnx+urdNto//KT5vUV8m1RuymQnH+UtXSLEQv1AmS8WX
zSgnbZygcZ1C76fuPLoJ35/P2GVWGjtIobiwrts2+DwGvkwnYOTbw97/vJ/E
x+7R56fAl01bFNNIMvgyweySDySDL0tTSfxJMvgyYy/+aWS9gC/z6K1WJxl8
WZS3lh3J4Ms6O7adJRl8mYRyYzfJ4MvsDddZkPUFvqy4+O17ksGXTUzZdpqs
N/BlQRVl/mS9gS9jBVrUkPUGvuxlWLUL6RvwZVGpU/JJ34Ava/v8byHpG/Bl
B6oyDpG+AV+2VG5TI3l+CnzZzFV6IeT5KfBlOs/qJEjfgC+L8G7LdiL7BceX
ndjnaLmf3J9xfFm5seuVMNLHHF/W+vO7eybO4Mtabtl6VuMMvmzfzxMVv3EG
Xyb92aBHH68n8GWyTwJ4k3AGX/Ys2fqXKF5f4MuSbVVXZOMMvuxGiUVPAF5v
4MuOLdZrisbrDd5fIrLcveI7Xm/Htu280rRDEvHGqN7qxetNrXHvx6A+SZT4
cnyHD+6bNKnFnoFhUqjbbS2/Iu6bqq/fO4dnSSPr3PNFHWH4/iXmaHRimjTK
+uYRaI77JnNS5bEwLRm0ZaX/q4m4b9arim97XSaDPh406DO+iPeXlIbAISUK
iX2dsbznLv732leg/sWLQrOe+9tPasXn+WQ5y5PFFNq+1F5TQIbN/MzpkraZ
yELn7sybNSuFzSwTvNPssIaFNhaPtPXj85jXmg71I6dYSL562O8IXs+iB9zV
yl+zUIJA5LrXVjTX04WiwXxHaZrr6XwMm0efjwJPd0z8QjPJ4Ok2FxzvJhk8
nanBl/FkfsHTWe/QYZEMnk67q2MVyeDpak8IHiIZPF1C+cZyksHT9QQ0S5F5
B0+n4J6aQDJ4ur3WZ3XI/IOnu7xVlo/MP3g60YcPJLRHz+d/Pd2VLf+Ekb4B
T5d7If4A6RvwdJoPTaRJ34CnexyX5UP6BjzdgMrJIfJ8FHi6+75qPeT5KPB0
Hq93D5Dno8DTNQ3t6CfPR4Gne3t4bpcrWR8cT3fROrboCM7g6V79MUxNIOuP
4+nK3pbMvY0zeLrtCW83tZGP53i6mK2uvnPwvP/75tMtt1J8vyGneGYHztVK
+k86LMRRoEOK9ROcwds9nzuDbxOef/B2v6dc/yWE5x+83eCusCm8eP7h/Tbk
wg75a+L5t/nlZ8onI4kMqdnOb/H569Cw7mvza5Lo5w/78ZK4b+Z5OQ03GEgh
Y17vkEW4b9oH35U8q5dCKd2N4Ta4b3rSQs26NkujM9Pk7jdG4P6jdZq2fZFG
K180nWLiaEbqtz6/1SEZNKf54MBIKs04zty0zWAihbY9yOZrvYHnL0Rk+Zz1
FHn/nuQF/+I+8LKKOJlIIaGga1Z7hmjmbfoGSrKNQrIjZb47trCZ/c8PBu9U
ZKF0RfN6ays2o5ic//ieGwsdnRIu5FJLcz2hzPR+HddxNMMz/VtbmAGFkJGI
2NT7+N+n75i9fiiF7qdqL7zzhWbyU4t1Letw/wnZrxpawma0KjSetIqx0EPz
/nfngtlM0OC8wpZsCv1qPX6xfDKbmXzp84R3ffj+qL5F/gy+Dr6wYUNr3rR+
E+a8dG9l730K8X1kqd9YyGbidaN/SongfhSf/G36aTbTN18mxq+TQobX+2en
7GUz0gvzfYz/UIiaPmAYmcDm+sHYmOvZx7rH/KBjRMZof4EfROWKo/0FfpD/
p95of4Ef1E/5Ovr6CvjBce9miYw+P8bxg0ZPU9RGXy/h+EEvyxO2JIMfHPdL
5czo/RPHDzq6SHwZfb6A4wddH7iakfUKflCudfxbksEPmjlJnSLrF/xgQs8r
b7J+wQ/eENBlyPoFP6giMWxN+gv84J847TTSX+AHGwLaUkl/gR9cW1ltTfoL
/GCvs+lF0l/gBxXoBCPSX+AHf59QqSCvr4Af9KptX0b6C/xg2r3MIvL6CvjB
MtuuTvL6CvjBI9sjfTNwBj/Y9JB/xkOcwQ9uCm6b/Atn8IPxO/t89PD6BD/Y
mmXFxOMMfnCrp0OnEF6v4Ac3PPzukY4z+MEezVmpB/H6BT+on/nBJhSvX3i/
kOk/xOa14/X7cdVuhQAnSXQgJ9XjLemvZMOBuh5JVCV39bUd7q/XLbFm0iFS
qC4s5P4k3F/5GdnProhKo/2nkuOKcX85yPNP7UqWRjmCG8Wm4f7ak9RSt0hN
BjUpJGncSMLnz7QRXdkSGaTxT5RLSRZe3/U93hcVKZRWUC8zB/fX4jQZobL9
FDIQmm2a24Lno9jdR7OQQjwxl7fPlmQzUbVB8goTWKgxvDT85Dk2oyLr072U
zUINVpf6ZgiyGR2LkxEKUSwUOmmcoX463k8PO7rHv2Sh7ptr9lVupLle8t6F
H63qFM31kv3Ljo/2F3hJ0QWKo/0FXnLo0ffR11PASzq6LBztL/CSxspzKZLB
S96RjzYmGbxkQYqU7+j8c7zkebU6hmTwkoP/FEuQeQcv+fGBTAzJ4CXXv5uk
TuYfvGTz/YFfJIOXdKr1FSHzD15SeHneYdJf4CV9eFe6kP4CL9knrc1P+gu8
pIjmHxvSX+AlM7rf15H+Ai/ZWbKjkPQXeEl7E7PLpL/AS75R1Ism/QVe8uQB
732kv8BL3lH2mUT6C7zk7Tqn8nicwUv25B2YmI8zeEkVvwfMW5zBS+ondfqJ
43lvWtgbfrtQDGkdvF+6HefQ3fG3V5qJI9Xw8TG1OIOnbCoSs7HA8w+ecnVn
lr4Ann/wlOsR34WfOMP7p3z40JGgiOffv7371xYJSbR7bk9IPe6v5lb9TUOX
JNGX5YemC+D+kluqOVlGTwrtm+IpK4L7S7Z4ddLeR1LIf+XHzxq4v15bGeie
s5ZGXUf2r0rH/RXSUmyR1yGN3vwc9vDA/dUeYbV20FsGybrXC5zG/XV6jena
Nj4KtX0NrNLC/TX3jpLWw3UUejWCqmY8wvdLmcUuTgkUsrtp7h//E5+fKlJX
lLdQSCOBVzfDms1M6ReN1JFnodU6CdeW4D6bc9Or7cw/LNQ+bm9Q4GOa60XF
h+y2S/HheTASeq6jT6FVuqZ+khV4nud2604PodCpCLWD8p00o8pM2vrrEYXi
71iw9bXYTG1rzaucWSyU82uBS28Yvl9SCI/Nu4jPl4axFyIEcJ9VaSuEfcP3
b/WWQXv82Vw/OjHS4+btHyaM1LJlnafLKaSqYxTuII8fv1F+XNdUFpqjvCFW
9gybcTPenT//E4XUg1+FuLqymUR6fHLXMIWuOxkU58ewuT70lj9bVv6rCWMf
YzUzfBILpdgcz8nB6z/y+Nk2vQEKFfAU9iTj7++P5FD3WlEWUs33kzCJZTMX
BHdapvCw0G2rosVMEpvrPTt6ykM+fjHhek7rycOjngA8Z9mb5NG+A88Z9Tll
1BOA5/RZIjjad+A57xTf2TJ6ngXP2SWWRDJ4TonCks8kg+f8vu/wWrK+wXOW
7ElsJhk85/u1PJFkfYPnLFu514P0HXjO94/zCsl6B8+pt45lRvoOPKfBzJZ4
0nfgOaPu8MaSvgPPuTXk8ErSd+A5l2S5RpO+A8/p7DIyl/QdeM6IAsVE0nfg
OQ8ko0mk78BzXry9zo30HXjO9QWmJ0jfgecUiJIbIZ4APCdPd5RTFbk/5XjO
uyLeKsM4g+d0kxsx0CWvl3I8p+mvRNk4nMFzqs3Xb5+C1zd4zrScoOg0nMFz
dj06/ccbr2/wnKG/Ei8E4r6D92t5x7/OvgWvd7GiLhcrB3xe3azR9pz03cil
I55dkmjiiKXbBtx3Q2hVSWegFJpTdK5sMBjv1zwhdLCINGpMu6GYhfvukntV
dXwSvn9b+2V+bxQ+r7R1eoyoyKB3S3T0Q3DffW36tuB+kQzK0rtZ64v7rvTT
731+ChQa/+u9UW4x/vcuWD98xYNCy9L0xSfhvnvAFp88qYBCkSGeA5kSbGaL
rdlVET4WmvXMVbP/LJu5uOjFDwWahe+fSy4qTWUzp59v0x05yUJHrvPUpmTQ
jD3PFlH/Jhay1JmnVrKJ5vpVZvBRpSSL5npVVbHuUS8AXrXD/NJov4FXzY2v
GfUC4FXXBiaOegHwqi+a20e9AHjVLbbyB0gGr2pz9kQpyeBVg1yVxcl8g1ed
7/QuimTwqqqFRovJvINX3ay7Y5Bk8KrlVbaCZN7Bq+4Jd/Qm/QZeNXaD0lbS
b+BVWcnLh8jro+BV8z0MTUm/gVd9fD6vkPQbeNXycSqppN/Aq9Y5BAeTfgOv
+sPuoB3pN/CqU19N0CD9Bl5V/CP/DeIFwKs29Fy2JP0GXnV65lLfPHI+5nhV
W8XUfuIFuF71Bx0khufb7sl+7813xJC67TkLJ+JnpqzI7lsjjiJCxt96hDN4
1k1VPQLr8byDZ21llN/z4XkHz7rnopVnH87wfjV9224pyeF5j9k833KSmCTy
rmjLqML9JmRZmlCbhfuN3az0h3iBlLPRFTpS6G36wxO8uN+Q1PDEZdVSKHZw
l74s7rcNNySue1lKI0GdOJ1w3G//KviJ2n2QRrmf3+uswf1GNzp8q/aUQW7Z
/UFOuN9yP92vuDmeQq6dZ0615eD7y3rdxalr8f1ORYB0RA3N9XMrz0XYXxvA
69Fi1bP4NxTy/7VcwcySzbwIfDOdWsBCPWL2gmp2bCa2pPFz6G4WUomLM5zV
QHO9rlJRtNgA7jcLW8nHwktxf14yzMgop5kcPZb8nyAK+ZTlxTl+ppnudTk9
dTUUKnI2frxTg80k7U2wPz2ThagFI5ZeEWyGz7DkaGoWhXxDfp/3nshmlm98
U2jbS6HUQMuc2sNsrt91MX+iFz5gwrz89/2h3WUU6jvNpFXMZzND7d9Dnk5h
ofkzvQ5uTmYzSo2iq4c6KHQo0uxB0w42Y/Xy0qJ7Q7hvD/8ZjI9mc33urlbF
lp+435RkZZPcBVioStTfhjeFzZiKG+0X/kGhBu8jzbKhbKb68n0PrWkstMNR
2doons3YnxHucB+hUGZbYd+yRDbX24bOTuy+3WXCVBgUXDDkZyE+P+1/enBf
OjzccniCMAu9/Jzmdgt//OvCLZMlflNoS+Kri3lx+PfLFx51YTILlVbe1ZyH
P779YFl5DS8LrZ1rHiiEfx7wtAcij7mL4/4EXwl/3w+8JOT/AxLRi0E=
          
          "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[1, 0, 0], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{4341, 5003, 5004, 4345, 4347, 4324, 4326, 4319, 
                4323, 4318, 4317, 4316, 4315, 4314, 4313, 4312, 4311, 4322, 
                4310, 4333, 4327, 4349, 4346, 
                4348}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               GrayLevel[0.5]], 
              LineBox[CompressedData["
1:eJwV1Hl4DgQcB/CFzQ7nDmxjzDFL62AoiSJJqmGVdJBcFdkqikp0KCFUQjfd
d6QoikqXcnYpoajcUeiktj6/Pz7v9/t+3z3PfnvfPW/+oPLSsqMSEhLO8xDZ
0MNO+Tq3UkIxJ9qrsFZ/hKuoQiPbLvkGt9GLtpxkr8o6/VGGU5U82265iNvp
TTs62KuxXn+MEVSjsW2PXMwd9KE9J9sT+Vx/nKtJpIltr3yTiZTG7XS0J/GF
PpeRJJFv+0W+xZ3xPsTtnGKvzpf6PMqoTlPbPrmEuzg/bqeTPZmv9CcoJ5lm
tv1yKZO4IG6nsz2Fr/UnuYYUmtt+lW9zN33jdk61p7JBf4prSaWF7Tf5DpO5
MG7nNHsa3+hPcx1pFNgOyGVMoV/cThd7Db7Vn2EUNWhpOyiXM5WL4na62muy
UX+W0dSk0HZIvss9XBy3c7q9Ft/pz3E9tTja9rt8j2lcErfTzV6bTfrz3EBt
Wtn+kO8znUvjds6w12Gz/gJjqMMxtj/lCmbQP26nu70uW/QXGUtdimx/yQ+4
lwFxO2fa0/lef4kbSedY29/yQ+7jsridHvYMftBf5iYyOM72j/yI+xkYt3OW
PZOt+ivcTCbH2w7Lj5nJ5XE7Pe1ZbNNfZRxZnGA7Ij/hAQbF7Zxtr8eP+nxu
oR6tbf/KlcxicNzOOfb6/KQvYDz1aWP7T37KbIbE7TSg2GsV8jPmMDTuJJu2
XquUq3iQYXETObSLLx5Wi4e4In4/uTSkEXk0pgn5VPhwm8pmNKcFBbSkMP6v
4n8lPn8q/WxRfFbx/sd7Gu9T/O20j+891ugPcyXnBlsDftZfYwIlnmezXV9I
Lz2HHXpvmUsf2nj+P78QkPA=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$6019#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1GWUVWUYgNHL0CEIIp3SINIh0iFgSwmC0l0GgpTSjXSXpDRSUird3d0p
IB0CAu5v+WOv93ufc2bWzJlzJ2ODtlXaRItEIkmjIpEqDk/NsZTkln0OvUgf
PRL5Q2vIa+zRqvLMeRyluG2fS28yuP9PrVHU/997r1aNf53HU5o79nn0IaP7
12qNeZ19WnWeO0+gDHft8+nLG+5fpzUhGfu1GrxwnkhZ7tkX0I9M7l+vNSU5
B7TPeOk8iXLcty+kP5ndv0FrRgoOajXDg9In28vzwL6IAWTRN2rNSckhrRbR
9Cn2Cjy0/8pAsuqbtBak4rD2OVH6z/Z3eWRfzCCy6Zu1lqTmiFab6PpUe0Ue
25cwmOz6Fq0VaTiq1SGGPs1eiX/sS/mJHPpWrTVpOaZ9QUx9ur0yT+zLGEJO
fZvWhnQc174klj7D/h5P7csZSi59u9aW9JzQ6hJbn2l/n2f23xjGm/oO7Ssy
cFKrRxx9lv0D/rWvYDi59Z3a12TklFafuPov9g95bl/JCN7Sd2nf8AantQbE
02fbP+KFfRUjyaPv1r4lE2e0hsTX59g/5qV9NaPIq+/R2pGZs1ojEuhz7Z8Q
YY02mnz6Xvt3ZOGc1phX9Hn2T4nG79oY8uv77O3JynmtCQn1+eGzTBR/aGMp
oO+3dyAbF7SmJNIX2KsSnT+1cRTUD9i/JzsXtWa8qi+0VyMGa7XxFNIP2juS
g0tacxLri+zVick6bQItSOLar1oNYrFem0hLXnNtsfYZsdmgTaIVrQn/tJK6
Z4lrNYnDRm0yhfVD9k7k5LLWltf1pfZaxGWTVko77dyTAkzRimiHnTuTK7xr
9uvmUK64XsF+0bk/b4e/jf22OSq8r64nsy9z/jw8J+d7ZrzwmXC+Zv4Ufmbn
R+Zm95d2PuP8hdkrPA/zgVnfLBjeLfNvs645Inxf8x+zQfhf4euLmkfsdcwu
4Vmb98165pvh3TdvmF+aw8Lvbz42r/rad50vOQ8Iz9r5oVksvD/Od8zR4TPl
vuT25c61iR8+r/a/zCFscb2M/axzbwqF99t+yxzJVNffth917kru8Pmy3zSH
c831ivbLzgN5J3wutRTab+H3IgFbtbLaOec+FGaaVkw75vwDb4XPSWI/m15J
v2IfRPHw2dVSaivCs+YVtmnltPPOfSnCdO0d7bjzj+ThutaOVPrK8CxJyHat
vHbBuR9FmaEV1044dyMvN7TvSK2vCn9LErFDm0kJ/aS9O/m4qbUnjb46/C15
lZ3aLDqQ1rU14T0hMbu0X/iejnSiM12IeCZdzR/4kW50pwfpfJ/fw/tEEnZr
sympn7L3ID9/a5W1q86DKUFV+11zTHg3nJ+YDc2e7v0PlMALMw==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$6019#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwV02WUVlUAhtGPGbq7G5Hu7gYRkRREsZDuTimDTmnp7pTu7k7p7m5Ewn1/
7HXO+9yZWcxwv3QN2tRsHSEUCsUIC4UahodCkSKFQrMjhkJV+WhvYCxZ9f1a
ez7hitaIyPoc+0tCbNTGkU0/YHcgI1e1xkTR59rViMAmbTzZ9YN2Rz7lmtaE
qPo8uzphbNYmkEM/ZHciE9e1pkTT59s1CGeL9hc59cN2ZzJzQ2tGdH2BXZOI
bNUmkks/YnchCze15sTQF9q1iMQ2bRK59aN2V7JyS2tBTH2RXZvIbNcmk0c/
ZncjG7e1lsTSF9tfEYUd2hTy6sft7mTnjtaK2PoSuw5R2alNJZ9+wu5BDu5q
rYmjL7XrEo1d2jTy6yftX8jJPa0NcfVl9tdEZ7c2nQL6KbsnubivtSWevtyu
Rwz2aDMoqJ+2e5GbB1o74usr7G+IyV5tJoX0M3Zv8vBQa08C/W/7W2KxT5tF
Yf0fuw95eaR1IKG+0q5PbPZrsymin7X7ko/HWkcS6avs74jDAW0ORfVz9q/k
54nWicT6avt74nJQm0sx/bz9GwV4qnUmib7G/oF4HNLmUVy/YP9OQZ5pXUiq
r7V/JD6HtfmU0C/af1CI51pXkunr7J9IwBFtASX1S3Y/CvNC60Zyfb3dgIQc
1RZSSr9s96cIL7XupNA32D+TiGPaIkrrV+wBFOWV1oOU+ka7IYk5ri3mF1J5
tklrRBJOaEvoSWrPNmuNScpJbSm9SOPZFq0JyTilLaM3fUjr+Va9Kck5rS2n
jH7VHkgxXmt9Sadvs5uRgjNaZe2u+0jKsUIrq11zH0Tx4DNqv3RO5o3nX9qP
3MfyWfBO22+dM4L3xvP09nb35sH75f7emZJa7s+dE4P/N/cIwbvs6z933gv+
Bs4/g3fG+TH4fmf54DPpfBP8ns5pwf+JM5wWwWfE95dzXg/+vs7BwTvq/BD8
ns4SzjrOV8Hf0TkleAecYfzre6s5H2vjgnfPPUTl4HPn/M85M3i3fV0Ge4d7
C1JR237hnMRZz6vY991HUYF6wc93Tmel5+XtG+5DKEld+7VzKm89r24/cR/P
58HnQ/tE2+nektSc077QHriPpiKrtAraTfehlCI8nn+7XkN/ak+gSvAZ0jJq
u9xbkYbzWlXtofsYKrFaq6jdch9Gad5p/fhU3223Ji0XtDVU0m/bwynDe60/
mfQ9dhvScVFbywAye7ZXa0t6LmnrGMggBjOEoQwjzO813DmCkfzJKEaTxc/a
52e0IwOXtfV8pt+xR1CWD1pN7Zn7X3xBffudc1bw+XWPSEvG+Nr/AemuDJQ=

               "]]}, Annotation[#, "Charting`Private`Tag$6019#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GOglmcAx+G3ZS3btm271pYx1VBty7a5tmXbtlu2bdvGcrueD1f3/f+9
55xO5zxvqRq3rNEiTCgU+uyP5uFDofARQ6F5EUKhmkRghzaVTPpBuyOZuaO1
III+365FRHZq08isH7I7kYW7Wksi6gvs2kRilzadLPphuzNZuae1IpK+0K5D
ZHZrM8iqH7G7kI37Wmsi64vsukRhjzaTbPpRuyvZeaC1IYq+2K5HVPZqs8iu
H7O7kYOHWlui6kvs+kRjnzabHPpxuzs5eaS1I5q+1G5AdPZrc8ipn7B7kIvH
Wnui68vshnzJAW0uufSTdk9y80TrwJf6cvtbYnBQm0du/ZTdizw81ToSQ19h
f0dMDmnzyaOftnuTl2daJ2LqK+3vicVhbQF59TN2H/LxXOtMLH2V/QOxOaIt
JJ9+1u5Lfl5oXYitr7Z/JA5HtUXk18/Z/SjAS60rcfQ1diPickxbTAH9vN2f
grzSuhFXX2s3Jh7HtSUU1C/YAyjEa6078fR19k/E54S2lEL6RXsghflP60F8
fb39Mwk4qS2jsH7JHkQR3mg9SaBvsH8hIae05RTRL9uDKcpbrRcJ9Y32ryTi
tLaCovoVewjFeKf1JpH+r92ExJzRVlJMv2r/SXHea31IrG+ym5KEs9oqiuvX
7KGU4IPWlyT6ZrsZSTmnraaEft3+i5J81PqRVN9i/0Yyzmtr6E8yr23Vfic5
F7S1DCC517Zpf5CCi9o6BpLCa9u15qTkkraeQQwmpdd36C1IxWVtAyX1G/bf
lOKTNoRU+k67Jam5olXUHriPoRIbtVLaTfd/KM1nrZr21H0iXwU/Xy21tsu9
FWmoYb9yTuOq1yvZD93HBu9b98/OytRxfxs8G85ZwXvI+QVNg9+pzyvtvBU8
y85hzobOT8Gz4SzjrOX8L3gWnTOC96wzDE0IBd+f81nwbDsnBf8HBJ3q7vWc
751zgveie1iG+jvTOHdrrWng/tGZlprur53TuebjKtuP3MdRhbr2O+dsNnm9
jH3bfThlqW2/cc4kDNXt587JfB08Rz4nrbbHvQ3puK5V0R67j6cqm7Wy2h33
EZQjfCw/t+Dr6C+cU/gm+L372HTaXve2pOeGVlV74j6BamzRyml33UdSnrDB
711Pr+9zb0cGbmpbKa/fs0dRgXAM0zPo+93bk5Fb2jaGM4KRjGI0YxhLON//
OOd4JjCRSUwmo693wNfpQCZua9upoN+3R1Mx+BkE/2btpXNq8AxS3/7gnEsj
93A0Y4rP/x8VDgxy
               "]]}, 
             Annotation[#, "Charting`Private`Tag$6019#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwV1HN8XXcYwOGbKrXt1LY5q26HzlvnIqltb7Vt21ht27admuue88eT9/d+
z7lI7ucmol5U7ciwUCgU7Uf98FDoWdxQaBxVCGO9Npb08UKhDfZIcnBJa8Bz
5/FUJQYbtHFkcP9GexQ5uaw15IXzBKoRk43aeDK6f5O9Mbm4ojXipfNEqhOL
TdoEMrl/s70JubmqRfLKeRI1iM1mbSKZ3b/F3pQ8XNOieO08mZrEYYs2iSzu
32pvRl6ua4154zyFWoSzVZtMVvdvszcnHze0JvznPJXaxGWbNoUI92+3tyA/
N7WmvHWeRh3isV2bSjb377C3pAC3tGaE9On2z4nPDm0a2fWd9lYU5LbWnDB9
hv0LErBTm04OfZe9NYW4o7Ughj7T/iUJ2aXNIKe+296GwtzVWhJTn2X/ikTs
1maSS99jb0sR7mmtiKXPttclMXu0WeTW99rbUZT7Wmti63PsX5OEvdps8uj7
7O0pxgOtDXH0ufZvSMo+bQ559f32DhQnWmtLuD7P/i3J2K/NJZ9+wN6REjzU
2hFXn2//juQc0OaRXz9o70RJHmntiacvsH9PCg5q8ymgH7J3phSPtQ7E1xfa
fyAlh7QFFNQP27tQmidaRxLoi+w/korD2kIK6UfsXSnDU60TCfXF9p9IzRFt
EYX1o/ZulOWZ1plE+hL7z6ThqLaYIvoxe3fK8VzrQmJ9qb0eaTmmLaGoftze
g/K80LqSRF9m/4V0HNeW0o2kri3XfiU9J7RldCeZayu038jASW05PehJctdX
6r+TkVPaCorpJ+w9qcBLrRcp9H/tf5CJ01pZ7bxzP95npVZcO+nci4q80ipq
l50H8TG9tZTaKuc/ycy79uvmMM64Xs5+wbk/VZyjzQ/40Pl28P02R5nVzcfB
9yt4fx5Xwjxlr2X2Nj8zHwTfb7NS8D7Nm2Ydc4RZzXwUfJ/N1x5fybxir20O
NquaD81PgvfufNccQw3nJ+bfHpPKebXzX3zqfN/MwnvON8zhnHVfeftF5wHB
78FH9jvmaFa5XtJ+OnhOKge/r/2WOZI3rle2X3UeErwO/2iptTXO9cnKOa2C
dsl5YPAarNZKaWeCx/AO4cn8L9b7kMa1tVoDIjivraG0ftbeJ/h8eKv1Ja2+
zt6QbFzQ1tKP/gxgIIMYzBCGBv97vOYwczgjGMkoRpPOc673XI3IzkVtHWX0
c/a+wd+TUPD+tWvm0ODzDT4b+z1zLDWdn5p1zTEe/z/wdgqu
               "]]}, 
             Annotation[#, "Charting`Private`Tag$6019#5"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.772079, 0.431554, 0.102387], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GN4nAkUBtAvdZIqtbHuGtVa7Zpd1m1qJfV2a9u2bdu27abu1nb3fD9O
733fuTPPPDPT5I2NLxYXEQRBgn+KRwbB4aggaEN+rsjT6MJjeRx/koYduhIc
sbelAFfl6XTliTyev0jLTl1JjtrbUZBr8gy68VSewN/EsEtXimP29hTiujyT
7jyTJ1KcdOzWlea4vQOFuSHPogdBdBBM0pUgPXt0ZThh78j73JRn05MI95N1
JcnAXl1ZTto78QG35Dn0IpH7KbpSZGSfrhyn7J35kNvyXHqT2P1UXWkysV9X
ngR7Fz7ijjyPPiRxP01Xhswc0MVy2t6Vj7krz6cvSd1P15UlCwd1FThj78Yn
3JMX0I9k7mfoypGVQ7qKnLV351PuywvpT3L3M3XlycZhXSXO2XvwGQ/kRQwg
hftZuliyc0RXmfP2nnzOQ3kxA4l0P1tXgRwc1VXhgr0XX/BIXsIgotzP0VUk
J8d0Vblo782XPJaXMpho93N1lcjFcV01Ltn7UIQn8jKGkNL9PF1lcnNCV53/
7H0pylN5OUNJ5X6+rgp5OKmrwWV7P77imbyCYaR2v0BXlbyc0tXkir0/XxOw
UjecNO4XytV4jgRdLa7aB/ANEazSjSCt+0VydZ7ntC6Oa/aBfEsiVutGEuN+
sVyDFziji+e6fRDfkZg1ulGkc79ErsmLnNXV5oZ9MN+ThLW60aR3v1SuxUuc
09Xhpn0IP5CUdboxZHC/TI7jZc7r6nLLPpQfScZ63VjqcVsexk8kZ4NuHPW5
Iw/nZ1KwUTeeBjTkrm4EvxDJJt0EMnofy+V4XuGCLqduvf0f3g6n7p45kl+J
Cr9TN5vNJmz2eDZ5jb0+r9n3mm+En519u5nfbGG+aR4wC5kTPS+TuUJ+x6xt
vmruMQuY+cLv1txqvmc2C1/T3G8WNC96fi5zg/yu2ch83dwXvl74udp3mq14
y37QbOQ5981RFCOffrcZHf7u7FvMpmxxl11ea28Qvu/we5V3mC2Z5PHM8kp7
nfB9h78reZvZnEsezy1vtP8bvr9w6h6Yo/mNlGzV5XC3zt4wfJ9M1mXRrbLX
DT/P8DuL8X9T35iH8hh+JxXbdFNoQlOa0ZwWtKQVrWkT/t3yOm3NdrSnAx3p
xCOvNZY/SM123VSyei+r5Xrh58tlXR7dJnvj8LsJfzvyLrN1+JuxHzILm53d
/g+14Asb
               "]]}, Annotation[#, "Charting`Private`Tag$6019#6"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.363898, 0.618501, 0.782349], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwV02OYXGcYgOHZpAzapm1Up7YV296gjZONubFt27btpIjd2MbGttH7+3Hv
+z7f2Zlrz8zZVDGx0XWiIpFInB+pE0YifyWKRCqRlG26FzU5qjvzG9f1HNLw
t65MMrbr3tTimO7C79zQc0nLP7oKydmh+1Cb47orqbmp55GOf3VVUrBT96UO
J3Q30nBLzyc9K3Q1UrJL9yOWk7o7abmtF5CBlbo6b7Fb96cup3QP0nFHLyQj
q3QN3maPHkA94nRP0nNXLyITq3VN3mGvHkh9TuteZOCeXkxm1uhavMs+PYgG
nNG9ych9vYQsrNW1eY/9ejANOav7kIkHeilZWafr8D4H9BAacU73JTMP9TKy
sV7H8gEH9VAac173IwuP9HKys0HXJRWH9DCacEH3JyuPw3NGDjbqenzIYT2c
plzUA8jGk/CckZNNuj4fcUSPoBmX9ECy8zQ8Z+Ris27AxxzVI2nOZT2IHDwL
zxm52aIb8gnH9ChacEUPJicRVjjLw3/2RnzKcT2allzVQ8hFFCud5WWrvTGf
cUKPoRXX9FByE49VzvKxzd6Ezzmpx9Ka63oYeYjPamf52W5vyhec0uNoww09
nLw8xxpnBdhhb8aXxOnxtOWmHkE+nmets4LstDfnK07rCbTjlh5Jfl5gnbNC
7LK34GvO6Im057YeRQFeZL2zwuy2t+QbzupJdOCOHk1BXmKDs2j22FvxLef0
ZDpyV4+hEC+z0VkR9tpb8x3n9RQ6UZR9ztrwPRf0VDpTjOLsd96WH7iop9GF
e3oshUnAJmdPzSn8SRL+cHbAbMePXNLxEkciM+ylma4fm5MoTiLXFpmvhs/T
PsdMapYPZ+ZSM4XZ1evu28fxuo42E5oLzWRmwvB9m7PMN82y5ivmEjO5udnr
n9mn8oYuYSY2F4f3C5+1fZ4Zw2v2ZeGevOag2Z6fwj07X2Bedh7fPtNehhn6
iTk53H94ffiuXZ9rVqCb6w/M8RQJ9xyeNddnm+XY4npET7OXDH8fJZwdMjvw
M1f0TLrzUE+gaLiH8Dkk8f/pvCSHdUd+4aqeRQ9KUZoylKUc5alADBVJ4H0q
mZWpQlWqUZ0j3q8Tv3JNz6Ynj/REioXPm63OotzLdHup8F2E51LPNyuGZ8S+
3Exp1vC7/wNsAxLG
               "]]}, 
             Annotation[#, "Charting`Private`Tag$6019#7"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[1, 0.75, 0], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV03V8VlUcwOEXxUKGYqDSo7tLpLtjdMPo2ujuDqXTbkKUVrq7u2O0YIEg
COZz/nh2zvfc+3lrvxsdGx8TlygSiST4kzIqEnk/WSRSgYf2S4mjBhucdeBN
jupppOIDXZFH9suIpyYbnXXkLY7p6aTmQ12JP+2X04NabHLWiZQc1zNIw0e6
Mo/tV9CT2mx21plUnNAzScvHugpP7FfSizpscdaF1JzUs0jHJ7oqf9mvojd1
2eqsK2k4pWeTnk91Nf62X00fYtjmrBtpOa3nEM1nujr/2H9PX+qx3Vl30nFG
zyUDn+sa/Gv/A/2ozw5ncaTnrJ5HRr7QNfnPfg39acBOZ/FEc07PJxNf6lpE
WKsH0JBdugcZOB/mgMx8pWuTiHV6II3YrXuSkQthDsjC17oOT7FeD6Ixe3Qv
MnExzAFZWaDr8jQb9GCasFf3JjOXwhyQjYU6hsRs1ENoyj7dhyxcDnNAdhbp
ejzDJj2UZuzXfclKQpgDcrBY1+dZNuthNOeA7kc2roQ5ICff6AY8xxY9nBYc
1P3JztUwB+RiiW7I82zVI2jJIT2AHFwLc0BuvtWNeIFteiStOKwHkpPrYQ7I
w3e6MUnYrkfRmiN6ELm4EeaAvCzVTXiRHXo0bTiqB5Obm2EOyMcy3ZSk7NRj
iOWYHkIeboU5ID/LdTOi2KXH0pbjeih5+THMAQVYoZuTjN16HO04oYeRj9th
DijISt2Cl9ijx9Oek3o4+bkT5oBCrNIteZm9egIdOKVHUICfwhxQmNW6FcnZ
pyfSkSLheXbWmlfYryfRiaLh2XXWhlc5oCfTmdN6JAX5OcwPF+3H8za/62Lh
WbaP5TUO6ivWyZTkXX3eOpai4fsxi7vOr1uncJ8y/MJcHtLF9TPWUeFeCoXf
kpk8CPe6fs36XvgclA6fkTn8wRLXL1kncI/i4bdidng/125ap1GOX5kXvpPz
tda2vB7+18zgkPOr4btQKrynvmAdR7Hw+vqGdSpl6arPWkdTOLx+eDa4bD+R
d8J30MVZZ9+OFBzWU+hGVHL3WUtQklKUpgxlKUd5KpDUvRWtlahMFapSjfVe
tz1vcERPpTvn9BiK8Ft4Fkmwn0SJ8BvqW9bplA/3MJ9HVHftf6rOEfw=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$6019#8"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.647624, 0.37816, 0.614037], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwV02OYnGcUBuDZ2Bs3jTe2bds2Nm6Tja0aaWPXZtrYZu2kRmpbcXKfH/e+
53m+95rZmetMSurkXmlJiUTirD/nciUSc3InEqU4nZxILKULlbhP14b/zJtJ
47z7c3WlOSMvoyuVuV/Xlv/NW5jMBffn6crwvrycblThAV07zpm3MoWL7s/X
leUDeQXdqcqDuvacN29jKpfcX6Arx4fySnpQjYd0Hbhg3s40Lru/UFeej+RV
9KQ6D+s6ctG8g+lccX+RrgIfy6vpRQ0e0XXiknknM7jq/mJdRT6R19Cbmjyq
68xl8y5mkuAmXSU+Na+lD7V4TNeFK+bdzCKJm3WV+cy8jr7U5nFdV66a9zCb
dNyiq8Ln5vX0ow5P6LqRYK88h/TcKlflC/MG+lOXJ3XdSWKfPJcM3CZX46x5
IwOox1O6HqRjvzyPjNwuV+fL2DEGUp+ndT1JzwF5Ppm4Q67BV7FjDKIBz+h6
kYGD8gIyc6dck69jxxhMQ57V9SYjh+SFZOEuuRbfxI4xhEY8p+tDJg7Li8jK
3XJtvo0dYyiNeV7Xl8wckReTjSVyHb6LHWMYTdik60cWjsYekJ175Lp8HzvG
cJrygq4/WTkWe0AO7pXr8UPsGCNoxou6AWTjeOwBOVkq1+fH2DFG0pzNuoFk
50TsAblYJjfgp9gxUmnBFt0gcnAy9oBklssN+Tl2jFG0ZKtuMDk5FXtAblbI
jfgldozRtGKbbgi5eCn2gDyslBvza+wYY2jNdt1Qknk59oC8rJKb8FvsGGNp
ww7dMHLzSuwB+VgtN+X32DHG0Zb8rNE344/YJ8bTjgKs1Tfnz9gdJtCenbrh
5OHV2B/2m8dwHW/LBVlnbsFfsUscNk+gCDfIe52jKBCfj2m8qT/mnMg7FOc1
ZnKaDp7vco6Iu+SN75KpvBt3PT/qvDH+D4rF/8gM3mOJ5wecY3mLQvFdMT3e
z7MTzjRK8jqz4jPp1ztb8rf5lHMKm8xH4rNQNN5T3uccTcF4ffm4cxIl6Cjv
do4kX7x+/DY4aB7H9fEZ5EJsMLfin/idMJFOsY953HMWpghFKUZxSlCSFErF
rrtb2lmGspSjPBXY6LVb82/8rphEZ/boUsnPG/Fb5JB5PIXjO5RPOieTEneY
zRkqenYNqj4AFg==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$6019#9"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               Dashing[{0, Small, Small, Small}], 
               RGBColor[1, 0, 0]], 
              
              LineBox[{4341, 4348, 4346, 4349, 4327, 4333, 4310, 4322, 4311, 
               4312, 4313, 4314, 4315, 4316, 4317, 4318, 4323, 4319, 4326, 
               4324, 4347, 4345}]}, 
             Annotation[#, "Charting`Private`Tag$6019#10"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.915, 0.3325, 0.2125], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1He4znUcx+EHFVHCscte2VKU7L1CKKOQLeFI9hZll61kpFJIAyWVmU1m
KaXM0lLZs6j788d9/X7v15PrfL/nXD35OvZulpwikUgMTZlIZMiYSLyTKZF4
mK+996UGh+we3MIiOyOLvVfkoPd+1KROUiLxndaTW3lby0Q2fYldiW/s/tSi
rv691ovbeEdLIru+1K7Mt/YAalNPP6wlk5rFWmZy6O/aVThkD4yzUF//QetN
GpZoWcipL7Or8p09KM5CA/1H7VluZ6mWlbv19+xqfG8PjrPQUD+i9SEt78Zd
uUd/367OYXtInIVH9KPac6RjWdyVXPoHdg1+sIfGWWikH9P6cgfvxV3JrX9o
1+RHe1ichcb6ca0fd/J+3JU8+nK7Fkfs4XEWmugntP6k54O4K3n1FXZtjtoj
4iw8qp/UBnAXH8ZdyaevtOtwzB4ZZ6Gp/pM2kAwsj7uSX//Irstxe1SchWb6
z9ogMrIi7koB/WO7Hifs5+MsNNdPaYPJxMq4KwX1VXZ9Ttqj4yw8pv+iDSGJ
j+KuFNI/sRvwkz0mzsLj+q/aUDLzcdyVwvpquyE/2y/EWWih/6YNIwur4q4U
0T+1H+GU/WKchZb679pwsvJJ3JV79c/sRvxij42z0Er/QxtBNlbHXSmqf243
5ld7XJyF1vppbSTZ+TTuSjF9jd2E3+zxcRae0P/URpGDz+KuFNfX2o/yuz0h
zsKT+l/a8+Tk87grJfR1dlP+sCfGWWij/62N5m7WxF0pqa+3m3HanhRnoa1+
RhvDPayNu1JK32A35097cpyFdvpZ7QVysS7uSml9o/0Yf9kvxVl4Sj+nvUhu
1sddKaN/YT/O3/bLcRba6+e1seRhQ9yV+/RNdgvO2FPiLHTQL2jjyMvGuCtl
9c12S87aU+MsdNQvauPJxxdxV+7Xt9itOGdPi7PQSb+kTSA/m+KuPKBvtVtz
3p4eZ6GzflmbSAE2x10pp2+zn+CCPSPOQhf9ijaJgmyJu1Je324/yUV7ZpyF
rvpVbTKF2Bp35UF9h92GS/asOAvd9GvaSxRmW9yVh/Sddlsu27PjLDytX9de
pgjb465U0HfZ7bhivxJnobv+jzaFe9kRd+Vh/Uv7Ka7ar8ZZeEb/V5tKUXbG
Xamo77bbc82eE2ehh35Dm0YxdsVdqaTvsTtw3X4tzkJP/aY2neJ8GXelsr7X
7sg/9tw4C730/7QZlGB33JUq+j67E//a8+in3cZr2v300JLtBDPtkuyJu1NV
22935oY9n/5aauZqD9BT622nYJZdir3aIDstC+wHqahVsw9478JNe6h9J2/Y
C+wB3tMwzy5HL+1ZOyWz7dIM934Xb3nf5/PB3tPxeny/eCbxkPcRnhkYx6L4
bvDMwgQq+XfVPb+K/6c9u8Z3mWcmxsfv0ufDPNMzljfju8gzc/wcnw30vJ35
enmStT52Kl6xy7A//l7U0L62u5FgYfy+eE6/hVe1+zgQfy9qagftp0nBG/E7
iL8FtXz2jdadlLwZPzd+r9T22bfaM6TirfgZ9NVvZY5Wlq+0IfYdLLQrMNJ7
Rt6O70TPrEykuv/2f4lCUoA=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$6019#11"]& ]}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {2.302585092994046, -57.0800259820388}, 
         FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{90, 10}, {50, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{2.3025852339686432`, 
            9.210340231001586}, {-57.0800259820388, -51.21143700870421}}, {{
            2.3025852339686432`, 
            9.210340231001586}, {-57.0800259820388, -51.21143700870421}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {2.302585092994046, -57.0800259820388}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"strain sensitivity (NSR)\\n/ Hz^-0.5 (log scale)\"", 
             TraditionalForm], ""}, {
            FormBox[
            "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"", TraditionalForm], ""}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{90, 10}, {50, 1}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{
             Log[10], 
             Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
            All}], PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           RowBox[{"ASDScon", "(", 
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ")"}], 
           RowBox[{"ASDhPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.1`"}], ",", 
               RowBox[{"Rpd", "=", "0"}]}], ")"}], 
           RowBox[{"ASDhPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.1`"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], 
           RowBox[{"ASDhPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.03`"}], ",", 
               RowBox[{"Rpd", "=", "0"}]}], ")"}], 
           RowBox[{"ASDhPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.03`"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], 
           RowBox[{"ASDhPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.005`"}], ",", 
               RowBox[{"Rpd", "=", "0"}]}], ")"}], 
           RowBox[{"ASDhPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.005`"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], 
           RowBox[{"ASDhPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0"}], ",", 
               RowBox[{"Rpd", "=", "0"}]}], ")"}], 
           RowBox[{"ASDhPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], 
           RowBox[{
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["10", "3"], "<", "#1", "<", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["10", "3"]}]}], ",", 
                    FractionBox["5", 
                    SuperscriptBox["10", "25"]], ",", "Null"}], "]"}], "&"}], 
               ")"}], "\[InvisibleApplication]", 
             RowBox[{"(", "f", ")"}]}], 
           RowBox[{"ASDhPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", "0"}], ",", 
               RowBox[{"lossRatio", "=", "0"}], ",", 
               RowBox[{"Rpd", "=", "0"}]}], ")"}]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm], ",", 
                   TagBox[#3, HoldForm], ",", 
                   TagBox[#4, HoldForm], ",", 
                   TagBox[#5, HoldForm], ",", 
                   TagBox[#6, HoldForm], ",", 
                   TagBox[#7, HoldForm], ",", 
                   TagBox[#8, HoldForm], ",", 
                   TagBox[#9, HoldForm], ",", 
                   TagBox[#10, HoldForm], ",", 
                   TagBox[#11, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.8358225656757097`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"175b9f1a-1a23-48a1-929c-34067e5df77a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "sensitivity", " ", "at", " ", "2.5", " ", "kHz", " ", "versus", " ", 
     "squeezer", " ", "parameter"}], ",", " ", 
    RowBox[{"like", " ", 
     RowBox[{"deg", ".", "int", ".", "sqz", ".", " ", "plot"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"fProbe", "=", 
     RowBox[{"2.5", " ", 
      SuperscriptBox["10", "3"]}]}], 
    RowBox[{"(*", "Hz", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sensRef", " ", "=", " ", 
     RowBox[{"ASDhPDLossy", "[", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", "0", ",", 
       RowBox[{"lossRatio", "=", "0"}], ",", 
       RowBox[{"Rpd", "=", "0"}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"sensitivity", " ", 
      RowBox[{"reference", ":", " ", "lossless"}]}], ",", " ", 
     RowBox[{"no", " ", "squeezing"}], ",", " ", 
     RowBox[{"i", ".", "e", ".", " ", "conventional"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Lse", "=", "56"}], 
    RowBox[{"(*", 
     RowBox[{"m", ",", " ", 
      RowBox[{
      "using", " ", "aLIGO", " ", "value", " ", "until", " ", "figure", " ", 
       "out", " ", "LIGO", " ", "Voyager"}]}], "*)"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]SE", "=", 
     FractionBox[
      RowBox[{"2", " ", "Lse"}], "c"]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"round", "-", "trip"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"20", 
        RowBox[{"Log10", "[", 
         RowBox[{
          RowBox[{"ASDhPDLossy", "[", 
           RowBox[{
            RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
            RowBox[{
             FractionBox["2", "\[Tau]SE"], 
             RowBox[{"Log", "[", 
              SuperscriptBox["10", 
               RowBox[{"rdB", "/", "20"}]], "]"}]}], ",", 
            RowBox[{"lossRatio", "=", "0.1"}], ",", 
            RowBox[{"Rpd", "=", "0"}]}], "]"}], "/", "sensRef"}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"20", 
        RowBox[{"Log10", "[", 
         RowBox[{
          RowBox[{"ASDhPDLossy", "[", 
           RowBox[{
            RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
            RowBox[{
             FractionBox["2", "\[Tau]SE"], 
             RowBox[{"Log", "[", 
              SuperscriptBox["10", 
               RowBox[{"rdB", "/", "20"}]], "]"}]}], ",", 
            RowBox[{"lossRatio", "=", "0.1"}], ",", 
            RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "/", "sensRef"}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"20", 
        RowBox[{"Log10", "[", 
         RowBox[{
          RowBox[{"ASDhPDLossy", "[", 
           RowBox[{
            RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
            RowBox[{
             FractionBox["2", "\[Tau]SE"], 
             RowBox[{"Log", "[", 
              SuperscriptBox["10", 
               RowBox[{"rdB", "/", "20"}]], "]"}]}], ",", 
            RowBox[{"lossRatio", "=", "0.03"}], ",", 
            RowBox[{"Rpd", "=", "0"}]}], "]"}], "/", "sensRef"}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"20", 
        RowBox[{"Log10", "[", 
         RowBox[{
          RowBox[{"ASDhPDLossy", "[", 
           RowBox[{
            RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
            RowBox[{
             FractionBox["2", "\[Tau]SE"], 
             RowBox[{"Log", "[", 
              SuperscriptBox["10", 
               RowBox[{"rdB", "/", "20"}]], "]"}]}], ",", 
            RowBox[{"lossRatio", "=", "0.03"}], ",", 
            RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "/", "sensRef"}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"20", 
        RowBox[{"Log10", "[", 
         RowBox[{
          RowBox[{"ASDhPDLossy", "[", 
           RowBox[{
            RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
            RowBox[{
             FractionBox["2", "\[Tau]SE"], 
             RowBox[{"Log", "[", 
              SuperscriptBox["10", 
               RowBox[{"rdB", "/", "20"}]], "]"}]}], ",", 
            RowBox[{"lossRatio", "=", "0.005"}], ",", 
            RowBox[{"Rpd", "=", "0"}]}], "]"}], "/", "sensRef"}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"20", 
        RowBox[{"Log10", "[", 
         RowBox[{
          RowBox[{"ASDhPDLossy", "[", 
           RowBox[{
            RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
            RowBox[{
             FractionBox["2", "\[Tau]SE"], 
             RowBox[{"Log", "[", 
              SuperscriptBox["10", 
               RowBox[{"rdB", "/", "20"}]], "]"}]}], ",", 
            RowBox[{"lossRatio", "=", "0.005"}], ",", 
            RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "/", "sensRef"}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"20", 
        RowBox[{"Log10", "[", 
         RowBox[{
          RowBox[{"ASDhPDLossy", "[", 
           RowBox[{
            RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
            RowBox[{
             FractionBox["2", "\[Tau]SE"], 
             RowBox[{"Log", "[", 
              SuperscriptBox["10", 
               RowBox[{"rdB", "/", "20"}]], "]"}]}], ",", 
            RowBox[{"lossRatio", "=", "0"}], ",", 
            RowBox[{"Rpd", "=", "0"}]}], "]"}], "/", "sensRef"}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"20", 
        RowBox[{"Log10", "[", 
         RowBox[{
          RowBox[{"ASDhPDLossy", "[", 
           RowBox[{
            RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
            RowBox[{
             FractionBox["2", "\[Tau]SE"], 
             RowBox[{"Log", "[", 
              SuperscriptBox["10", 
               RowBox[{"rdB", "/", "20"}]], "]"}]}], ",", 
            RowBox[{"lossRatio", "=", "0"}], ",", 
            RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "/", "sensRef"}], "]"}]}]}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"rdB", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<lossRatio=0.1, Rpd=0\>\"", ",", 
          "\"\<lossRatio=0.1, Rpd=0.5\>\"", ",", 
          "\"\<lossRatio=0.03, Rpd=0\>\"", ",", 
          "\"\<lossRatio=0.03, Rpd=0.5\>\"", ",", 
          "\"\<lossRatio=0.005, Rpd=0\>\"", ",", 
          "\"\<lossRatio=0.005, Rpd=0.5\>\"", ",", 
          "\"\<lossRatio=0, Rpd=0\>\"", ",", "\"\<lossRatio=0, Rpd=0.5\>\""}],
          "}"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       ",", "Dashed", ",", ",", "Dashed", ",", ",", "Dashed", ",", ",", 
        "Dashed"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<strain sensitivity (NSR) in Hz^-0.5 at `` kHz\\nrelative to \
lossless, no squeezing value / dB\>\"", ",", 
            FractionBox["fProbe", 
             SuperscriptBox["10", "3"]]}], "]"}], ","}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<unitless squeezing, rdB=20 \!\(\*SubscriptBox[\(log\), \
\(10\)]\)(\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\[Chi] \*FractionBox[\(\
\[Tau]SRC\), \(2\)]\)]\))\>\"", ",", 
          "\"\<lossy optical sWLC model\\n\[Kappa]=10\!\(\*SubscriptBox[\(\
\[Gamma]\), \(R\)]\), \!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\) is SRM \
coupling rate\\nno radiation pressure effects\\nparameters of LIGO Voyager w \
56m SRC\\nconventional detector is lossless\\nwith PD loss\>\""}], "}"}]}], 
       "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "showing", " ", "that", " ", "minimum", " ", "is", " ", "indeed", " ", 
      "\[Chi]"}], "=", "kout"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"thresholdrdB", " ", "=", " ", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Minimize", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{
              RowBox[{"ASDhPDLossy", "[", 
               RowBox[{
                RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                RowBox[{
                 FractionBox["2", "\[Tau]SE"], 
                 RowBox[{"Log", "[", 
                  SuperscriptBox["10", 
                   RowBox[{"rdB", "/", "20"}]], "]"}]}], ",", 
                RowBox[{"lossRatio", "=", "0"}], ",", 
                RowBox[{"Rpd", "=", "0"}]}], "]"}], "/", "sensRef"}], "]"}]}],
            ",", 
           RowBox[{"rdB", ">", "0"}]}], "}"}], ",", 
         RowBox[{"{", "rdB", "}"}]}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"threshold\[Chi]", "=", 
     RowBox[{
      RowBox[{
       FractionBox["2", "\[Tau]SE"], 
       RowBox[{"Log", "[", 
        SuperscriptBox["10", 
         RowBox[{"rdB", "/", "20"}]], "]"}]}], "/.", "thresholdrdB"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tolerance", "=", 
     RowBox[{"N", "[", 
      SuperscriptBox["10", 
       RowBox[{"-", "5"}]], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<To a tolerance of ``, the optimum \[Chi] is on threshold: \>\"", 
       ",", "tolerance"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Abs", "[", 
       FractionBox[
        RowBox[{"threshold\[Chi]", "-", "\[Kappa]"}], "\[Kappa]"], "]"}], "<",
       "tolerance"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"threshold\[Chi]", ",", 
     RowBox[{"N", "[", "\[Kappa]", "]"}], ",", 
     FractionBox["threshold\[Chi]", 
      RowBox[{"N", "[", "\[Kappa]", "]"}]]}], "}"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{"LogLogPlot", "[", 
       RowBox[{
        RowBox[{"ASDhPDLossy", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
          RowBox[{"\[Chi]", "=", 
           RowBox[{"rat", " ", "\[Kappa]"}]}], ",", 
          RowBox[{"lossRatio", "=", "0"}], ",", 
          RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", "10", ",", 
          SuperscriptBox["10", "4"]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["10", 
            RowBox[{"-", "27"}]], ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "22"}]]}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<strain sensitivity (NSR)\\n/ Hz^-0.5 (log scale)\>\"", ","}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2 \
\[Pi]\)]\) / Hz (log scale)\>\"", ",", 
             RowBox[{"StringForm", "[", 
              RowBox[{
              "\"\<above process optimises for sensitivity at `` kHz\\nnot \
for overall bandwidth\\n\!\(\*FractionBox[\(\[Chi]\), \(\[Kappa]\)]\)=``\>\"",
                ",", 
               FractionBox["fProbe", 
                SuperscriptBox["10", "3"]], ",", 
               FractionBox["\[Chi]", "\[Kappa]"]}], "]"}]}], "}"}]}], "}"}]}],
         ",", 
        RowBox[{"GridLines", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"fProbe", ",", "Red"}], "}"}], "}"}], ",", "None"}], 
          "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"rat", ",", 
          FractionBox["threshold\[Chi]", 
           RowBox[{"N", "[", "\[Kappa]", "]"}]], ",", 
          "\"\<\!\(\*FractionBox[\(\[Chi]\), \(\[Kappa]\)]\)\>\""}], "}"}], 
        ",", "0", ",", "2"}], "}"}]}], "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ASDhPDLossy", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
         RowBox[{"\[Chi]", "=", 
          RowBox[{
           FractionBox["threshold\[Chi]", 
            RowBox[{"N", "[", "\[Kappa]", "]"}]], " ", "\[Kappa]"}]}], ",", 
         RowBox[{"lossRatio", "=", "0"}], ",", 
         RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ASDhPDLossy", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
         RowBox[{"\[Chi]", "=", " ", "\[Kappa]"}], ",", 
         RowBox[{"lossRatio", "=", "0"}], ",", 
         RowBox[{"Rpd", "=", "0"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", "10", ",", 
       SuperscriptBox["10", "4"]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "27"}]], ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "22"}]]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<strain sensitivity (NSR)\\n/ Hz^-0.5 (log scale)\>\"", ","}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ",", 
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<sWLC - lossless\\nabove process optimises for sensitivity at \
`` kHz\\nnot for overall bandwidth\>\"", ",", 
            FractionBox["fProbe", 
             SuperscriptBox["10", "3"]]}], "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"fProbe", ",", "Red"}], "}"}], "}"}], ",", "None"}], 
       "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<\[Chi]=``\[Kappa]\>\"", ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            FractionBox["threshold\[Chi]", 
             RowBox[{"N", "[", "\[Kappa]", "]"}]], ",", "4"}], "]"}]}], "]"}],
         ",", "\"\<\[Chi]=\[Kappa]\>\""}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.83539915766362*^9, 3.835399166059555*^9}, {
   3.835399213070036*^9, 3.83539921377073*^9}, {3.835400071811481*^9, 
   3.835400082936458*^9}, {3.835400173616846*^9, 3.83540018415208*^9}, {
   3.835400265908201*^9, 3.835400304260386*^9}, {3.835400405632934*^9, 
   3.835400413917365*^9}, 3.835400446047172*^9, {3.835400861787634*^9, 
   3.835400870090872*^9}, {3.835401492712303*^9, 3.83540150822963*^9}, {
   3.8354015535747223`*^9, 3.835401608169978*^9}, {3.8354016399648933`*^9, 
   3.835401653781535*^9}, {3.83540171821312*^9, 3.835401805175375*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"01e18519-0467-488e-be6c-bb44e6a8f784"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$8038#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
xDnX/v6lAWs2hfHRUxL6P05WvYE=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$8038#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVkHk41PsfxW0VudmyR5aGKE0jWym9P5myzLRcjKLFHqJCJEtyFVKMcIU0
IsvYkr2R7fsJ6ZaQKJU1NE2ikaIVv35/nOc8r+ecP85zNNz8bI8LCQgIvPuj
/zvtOK8Hf7DfKTTuaSkgFwoiVGX/ESVDSDD0Yz50PgcG2RmsaqXdoHV4kbIa
nYEJFVLUOe390FY3HyPj6w70zv6qLCUGVJ3v7nggbE6QElQLltQc4e8jTWd7
cgOI3zT3dFdtJzgf/zPWZttFYjK6r801zRXcf8auL3RgEoc8vjWlKHmA5x2S
u6ridaKNqsxpZXmCxUC2RqQLi6CsM6v4qnYCaJsn1whScwmWkEuxVp4vFHgd
YOS0sQnRsYu5B7VPw1v1oJtnakuJ+tHnna0Mfwh3nBqfvFpB+P/tQTuaFgAS
y9auVQysJoY2X6YylYKA5/CNbzl1n0jNVsRaR85Cn8fyB+0RTQRNsmRHMysY
WhTEJ1TyMXHv01MjvlooxISGOP7b1kacdHKquuwaBoKhgpXqAo8IzS4+WT0v
HEIkw4UfOzwmEstkdGy0L8BvNmVBy62L2KOan//BKxJUFbYdyL7yjLjQnin1
gPEP5CcnklQ/9xCGxnpMx7QouMlGjc7TfUSO3IHYq0rRMHXm89fTtwaI8M70
toP10fDGrQlPBQwRB2NGhdYdiYF4A+8vx+1HiL/mAiIbWLFQc+6OZTD7LRHS
lxoypXYF2CvMqAmCXMIuYeheHb4Cdjcq92Ruek+Qd2vPRbteheQf2WLObjxi
opoToJoXD/bHjpaEcycJm3/f+OzXToRtvy+5riPPEHr0dcXKjxIhmL+1Kp83
Q4gKn3zP9boGN7Cp5lLhZ8L5/mIlwUgCtQ+/0VWjL4ScbhLZIS0ZzlHODpMT
5wmhmJp9zdxk8ElXFisJ+EbMjL46STJJAdmT13WKDn8nOjI0Smf6U8BTyCo5
xewnESVavf6KUir4y246t5a2SGywTI6r8k8FMTN9LB60RDyP8fsw8CgVOM/0
eS22ApgkrFdKDr4OE+v2feFdE8TtC/nkvudpMC7NbE7YLoL9dly6tqCbDh3F
K3Y7fBbBiuGuM9pR6XBzaWVmXekyfOK7alXo5gyIfGrqzSGvwH99STNSS7gB
mYNrKmMDVuJa/bNpVuM3gLOGXvbfAXHs5G/3LcA0E6ovu15+avAXLp+WvN/G
y4SEK2Hz/asksC0vbofPHhbI3uL+M7FCGv/S9sr6l8UCDzpD/2OSNM4/vmex
8QsL0li2ZzmqMnhuTBBL5mbBoL8/GFFX44yhMGrt4i3A1olyTi1yeJeKY/6w
fTbIFTfOqpyWx5OHTZaJlmWDync3Dyk1Bbx2KtS9bFMOFLodjEhIVsRnxD+s
NnfMgeKhMTWWnRJu3+DQ9jI6Bw6ctF3PX6OM/U4YawkM5kCjWHh6EV6D2+IK
XqSuuA2T+pSXrVkqWLFINlbX4Db0utDOMS+qYsyd5dpevQ0rs5rUpzzUsIxH
eVHB1lxAXgy70k4N7HlpraOpRy5c+GadrOymiRtymWLd13LBxQfdrvutiT3e
+vp85+bCUa8uBliQcJ3AgDJTJg8mDLW4GvMk/Jc6rUNjZx6gAy9Iune1cK2T
jh79eh5k3gqrJG1bj1deSB8cwXkQ7BjfGb5KBztlLWcGTf3pf1AWb5rSwcsH
J6azqPlwaX726oHuDfjwL7tbW/zygWS2lGzftxGXK7fuf5SZD4IpNyg33uth
B8fb5TOf88FE18JFfftmzB9grMxVLoCyT9rf32+h4Fgn0eN21AIgiPK6fV0U
XO3up3wvtQBs23/kzUpvwTSu5lmvpgLQrPc4fK9mCx71ftmtyC2A3yoO80k2
Bvjcxysbnkiwwayea1E7aoAlTpvFhJuw4YeUPX36kCEumJkZ0XNhg1PVa7fC
UkO8IzDfdDiODdaDydSgHkPcO3fo+rVKNmj8W33mWKsh9gkRn0Fv2OA9kilm
dtEQC/5qps0KFULP1iGKu5whzog4U5C3sRDKxnMCui8bYLKAtoA9oxB81xFJ
UxNb8MOLrw8vjyiExuYsrxPGW/DRZcxaTkEhxAfMXg29pI9nLyOpE12FIB/Y
XLbwjILVmYUPO9SK4BjH50z5DBlzJI+oR1gVgeKP/xqJ4k14f4pEODmgCFZq
zOFffnr4fPpZSnJLEeDnzilv123Aq5V1480/FsHL2StPyqV0cQlr8N2X1cXg
fas+ebuYDu6/Tb158Hgx+OotvGhV1sZb7kgvVxEtgSPdlxOFyzTxY/JDl05K
CbT1pp+ivdPALpUhDRccS4Biz0zzI2lg5r0R/7clJVAkFhNo4quGebhsgL2v
FGiOnOiYLco4kupq7BBcCqdLD8d9/aWI5dtlk8WyS0EvtEH7cacCpnaEW5yc
KYWxrto7A3Fy+NYL60r9f+/ApVbJbXwbaWzksCA+3nAHaiJ6XRPtpPDTNxWe
qRN3QC/cWimyVgL/GFFQ+WZUBorp8iXVn1dixuS72MZXZeDNo+sWDwhj8aWo
o5Zry4GS/ug8kT1FZJw45KRnUQ5C1h69rDdcgtSn5yJ9uhwaMy7byui9JXYW
97sPNJXD35WmEU7wH3G/OK2WQ66AEPuNlfl+wzBtN9VI76qAne4nlzehX2Ao
1m+2c+wPy6OtVSkLENb8oJkyXwEJRxVUc4eWYIVuOpZbWwneNVpzqZuFkMbi
rraRU5Ug+e1HML66HNkXpXcErqqCh87siEGOBGIdu7jXU6MKindcfD9UKYnG
ZE51OhhVgcVz5euNDCnkF2HebXasCoTrYnxfWUmjK7bTz1eUVUH35/WdDetW
o6bf5m9u7q0GjcUTT3hF8kjL5hOvNb4GQh/uEflbUhUpR1qaet2uAdGwEPnE
c6pIqiwnfiWnBk4w+0jCI6rop6gd2WasBqYWqCnZpWvRM8wJHN5aC4OHdMwX
VNVRGCVq8fu7WvhPtUxxNEsDdUnKypIRB0hKT+2pHiTUanbqeI89B+7svybi
nUhCdb7t94J8OTDRcVRpfx0J5T0KcWxI+5Pr9hS5imuhkMihW1bTHAiJv8Jr
uKuFNPlsXffMOnggbq46NKmNznVtg4yv9yHs5zCVbKaLJMi17x6L1oMEjI2e
dNJF+UxKwi+VemgsWODFROqinr3rXzvtqQenGu1yqwe6aGOHbKBWWj1cfdw3
p0zdgEYe8dlVJg3g//uBiRnaiCwfFEh0hjWCneNTtRTNTUihRnpYUJAAG1aQ
wG0aBR1N+MWYkCfg+ztT70YHCsr1eNfRrkeA5Ol93CeeFKQnd/9+vAMBd8ej
4x9cpCDzYJfrchUEPJhiGCrWU5Ax6xA7dTMGcecfA5Ha+sjViX2saBjDy/Kh
pJ55fXRvjPq0e0cLZOhaCF0LNUAvraI+My1bYOPM6/yBaAM0f7dZfq9tC0yM
vEbqSQbIJHyb639eLWDpXHs9mW2A6lZvnscpLbBY1Cwg32uA7u9WVq/itQCL
Zv65fIMhamTPBKamtgKHK1ge2GeIWnyy1jhOtUEFc3HVflljNKdtJll26hHM
G2zX2UneioR+lEqt0XoCweLLwqcppsh4yeWe3d2nYBXWovtxeDt6Gm3Y1b6h
G4zpl9QsncyQWtLHH8WfnsEba02PyTc70cdvI8MvKM+h3aY+QVkaofzJhicS
ib2wYlt9QWotQhKqhfyJiT7Y9jPFqZO+CyWcqPXMIb2E92/8I3W6d6F5VDrh
HdkPUqvuz5jZm6OgLW018q2vwOFSqahnhzkaudsW36PxBg7uCg3P3U1Fv3z6
buqGDUCFwoLEhVoq2rhrxaJnwyAwR1SMOpV2I8tcDa9KhWHYKNtbeTtqNzqn
6qz59ugIVAXv03cc3o30puzF+/eNws6ejGiW0R60WnJGtO3nKCRN2QbFJe1B
IsTN8nWst8BYI12oMbYH+Ro2vBajjwH9OUOWbmKBSq3dcprnx+DCuL1V72UL
NPdRWYqbNg4+TOTr9swC1dpZCqfungDq3dq8EBVLFGkVk13DnYAZWp6Usasl
0hiivcqLeQc8yoxxWq4lMjWJTlXawgVGNCnI+70lOrq2+4dgLxekR8iihJYV
mnvCHPOPeg+80TMMTy8rlCHiFGRL4sFNZGS2lGuFVg/X5gq18eAFeZfIhwEr
tCwiirEt4APc3PXzt6iiNRIodiofk5kE3g5/K85+a3Qms5wp0zIJXz8J95+P
s0ZNG+NEpU9/hF2mSa6PCGskTTujd1FiCsxMckJIs9ZocNOz3tDGKWioz3CO
WE9DFbeANOE0DZY6IZm6DjR0rNxYWnVxGmR2rFYfiqWhf2JuRw2WfAKKOHoc
UEdDZTzVmxJ7+ZD60FS/4R0NxWXFuAzv58OpFF/bS1wa8rCd1rprw4fcC8mu
9Pc0pNLYWLHvEB+Emh5bD/Bo6Oq1I+0Jbnx41m9h/vMjDXkb3/i8MpQP2n1W
Lw1naUgzWtZqBZsPwVm8HNYiDS1uPb+qv4gPKuzfsW5LNPR6evw5u5QPOzxO
HtERoKOkQ9XHLCr5sC7Tt7takI6WNtgGxjTygTeNJh6L0NFgz7Vbwr18oF8Q
aZtdSUd1sd/ce1/woURubzJHnI5Stzvr5r3iw3JPjX3n/6IjegG5xnyYD7HX
o5KWSdBRfUjn46gPfHBrOG2hIE1HaZuMrtlM/dl3Jyxu4A8HjLEYGvw/f4hu
up8tQ0c6e0+O4K982E1P5q6XpSMRwb78pG98iGJYj3/8w6O1231cfvJBUaKm
q1yOjhp98jZTFvhgc7mvKFCejtLVxOeWlv7s6yoLMFGgo/8Bn8PmLQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$8038#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$8038#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$8038#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$8038#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+joT3i9rNWmL09D/AOzR+5I=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$8038#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$8038#8"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         InterpretationBox[
         "\"strain sensitivity (NSR) in Hz^-0.5 at \
\\!\\(\\*FormBox[\\\"2.5`\\\", TraditionalForm]\\) kHz\\nrelative to \
lossless, no squeezing value / dB\"", 
          StringForm[
          "strain sensitivity (NSR) in Hz^-0.5 at `` kHz\nrelative to \
lossless, no squeezing value / dB", 2.5], Editable -> False], 
         TraditionalForm], ""}, {
        FormBox[
        "\"unitless squeezing, rdB=20 \\!\\(\\*SubscriptBox[\\(log\\), \
\\(10\\)]\\)(\\!\\(\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\[Chi] \
\\*FractionBox[\\(\[Tau]SRC\\), \\(2\\)]\\)]\\))\"", TraditionalForm], 
        FormBox[
        "\"lossy optical sWLC model\\n\[Kappa]=10\\!\\(\\*SubscriptBox[\\(\
\[Gamma]\\), \\(R\\)]\\), \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\) \
is SRM coupling rate\\nno radiation pressure effects\\nparameters of LIGO \
Voyager w 56m SRC\\nconventional detector is lossless\\nwith PD loss\"", 
         TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"lossRatio=0.1, Rpd=0\"", "\"lossRatio=0.1, Rpd=0.5\"", 
       "\"lossRatio=0.03, Rpd=0\"", "\"lossRatio=0.03, Rpd=0.5\"", 
       "\"lossRatio=0.005, Rpd=0\"", "\"lossRatio=0.005, Rpd=0.5\"", 
       "\"lossRatio=0, Rpd=0\"", "\"lossRatio=0, Rpd=0.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.835822566377149*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"5cd84337-50ae-4b44-8a28-df6997eb7bf3"],

Cell[BoxData[
 RowBox[{"rdB", "\[Rule]", "0.04411249108932697`"}]], "Output",
 CellChangeTimes->{3.835822566476461*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"6a0124c3-324c-401e-bcdd-9749e9672b33"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   InterpretationBox["\<\"To a tolerance of \
\\!\\(\\*RowBox[{\\\"0.00001`\\\"}]\\), the optimum \[Chi] is on threshold: \
\"\>",
    StringForm[
    "To a tolerance of ``, the optimum \[Chi] is on threshold: ", 0.00001],
    Editable->False], "\[InvisibleSpace]", "False"}],
  SequenceForm[
   StringForm[
   "To a tolerance of ``, the optimum \[Chi] is on threshold: ", 0.00001], 
   False],
  Editable->False]], "Print",
 CellChangeTimes->{3.8358225664784*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"6b91dfc6-c370-46c2-99d1-c61d84d2fe6e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "27206.99046351302`", ",", "31415.926535897932`", ",", 
   "0.8660254037844307`"}], "}"}]], "Output",
 CellChangeTimes->{3.8358225664802628`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"14a3ad24-81e7-4e03-a6c2-66cc962e98f7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
NVxRHQ==
          "]]}, Annotation[#, "Charting`Private`Tag$8191#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVz3s01AkUB/BpyGEpY4SaCTM/ERUZs5Qa6+42pd/M/H4626YoNHqIdo48
t6yyREu7Gr1oF6dILz2nZqaIuoeNNm+R97KrpFK2shh12v3tH/fc8zn33HO+
X2FEzNc72CwWi2Lm/13tUdyk2c2GsozgA+EVNHJMXdSme9gQt8LLnMc47M+y
wPAENuwUG51qL6fRcFzbYrGfDUsaczQkY09DXVvkETaU3JQ+Fd+hsajmzRN7
DRs8KkRrTfU07t0kGcieYIM45pGZRkPj0vTOMWWaEfRxh2LZl2g8+vpkkeqa
Mfhe2FfnkUejv2yDy6G6mSBeZ1vwSwaNsdP5PH6vCaQPbinaHE/jqeqIAnMT
U2hOmOo9t5VG8xSPSVN7MziydFznHkhjHJU+oJR/Bmakk6dEwuSPCxYvSzCH
mKEA4Wk3GvOyRBHzsi1gy+u2Qr+5NFbrj9pv1M0Ck5+8R0Nn0rjiybtbxY2z
IefQui79ewp9yE7drkFLGPQuXRP2F4XWL4UlqzM5MNSY/T6lmULRxa6gUI4V
TH/iSRuqKCTjHrcSF6xgR21lcEYZhU7D6nSXlVw4Y/JjT1w+hWfbGs54PuAC
x87o6A+ZFDrUU5kjIdawaSQ4vimWQn9JYOf5YWsIyGZxncMpDCk/McY9MAcM
u6u52TIKlw0W+FVxbWDVPmtWkzeFFalOBlWRDQy4PC97IWTui8eSG8S2kKri
QKE58x+4MlqEjDs8+ZP/KNDfnlS3k3awIfXTVPeAAh0nf012HrCDDzrR0spa
BZ4jVY9ToudCmTkvyPmaAp0vHnyXNmMeuC1IDnA/psDIG5sDHpycB+rE1W/D
EhUYKNKaWQp4AD1rbmwIVqDo3rpjJnoeuOrP363yVWB5jSrL+Cs+qDyunvXj
K9AoXqGFej74uLGuHPwox7UeMecXbZ0PeTat30X0yFEcwTXhv5oP0gvl/aPl
cpxbYlhcnmYPxraJ20R5cjwborwfOtsBVP6lfdEJcvy78nAWnHKA3HYBj7Ve
zvSfsmt1d4RjeXdOpHjIcQF3eM6uckdwmVio8bGQ4yG2xbdBrgL4nm4jXgzL
sLclcyQ/TgDueyb2u1XL8GDv/YK+2wK48lvh0/rTMnQd5XtNsYWgdLQ8npQs
Q4Hv8n9tSSGMf9FuOLJRhoYQ7+ftOUIoKIUOyluGzenf3IzqEkJrbtoYnyPD
qWGxdoYDARe3K7yUr0nsZPknLHck4K3Ez6Z2lEQ9T/Z5jICA+FX9k4sYx9Nb
tX0EAdnhSyrHX5L4Rvez9vZCAkqDrb7MGiHxWcYzrUpEwHULUnJ9iMQ2Il/X
LSXgRuyb6Y/dJGokJYmcNQQUv9rbrmScG3TVOyCAgLtDVVdru0ikDtfotCQB
tYV7w3M7SXz4dkynpgmYhIr7Th0k3sO1+tWbCAjI1MXLWkgs6lmflBJMQI50
Nnm9mcSU8TCfWyEEWKhdHOYw9nVN1AtCCXj2Ia+uv5FErbpY/0FJgEthql1s
PYnHL11J8tpGwKBD/8uORyTG1dz2idpOwB/qj1UrGHtONuqf7CQgMjJ9m/Hv
JFpadSfN2kVAYsQL76iHTP9FT32kUQQ0JFibNtWR2CAdm0iOJqDlOavHi/Hl
sGm9ZjeTz/jm5fxaEv8D9DI4fQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$8191#2"]& ]}}, {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {{{7.824046010856292, 
         RGBColor[1, 0, 0]}}, None}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, AxesOrigin -> 
     NCache[{2.3025852339686432`, -Log[1000000000000000000000000000]}, {
       2.3025852339686432`, -62.16979751083923}], FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     GridLines -> {{{7.824046010856292, 
         RGBColor[1, 0, 0]}}, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{2.3025852339686432`, 
        9.210340231001586}, {-61.45603923197753, -51.551503621981375`}}, {{
        2.3025852339686432`, 
        9.210340231001586}, {-61.45603923197753, -51.551503621981375`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {2.3025852339686432`, -62.16979751083923}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"strain sensitivity (NSR)\\n/ Hz^-0.5 (log scale)\"", 
         TraditionalForm], ""}, {
        FormBox[
        "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"", TraditionalForm], 
        FormBox[
         InterpretationBox[
         "\"sWLC - lossless\\nabove process optimises for sensitivity at \
\\!\\(\\*FormBox[\\\"2.5`\\\", TraditionalForm]\\) kHz\\nnot for overall \
bandwidth\"", 
          StringForm[
          "sWLC - lossless\nabove process optimises for sensitivity at `` kHz\
\nnot for overall bandwidth", 2.5], Editable -> False], TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{{2500., 
         RGBColor[1, 0, 0]}}, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{2.3025852339686432`, 
        9.210340231001586}, {-Log[1000000000000000000000000000], -
         Log[10000000000000000000000]}}, {{2.3025852339686432`, 
       9.210340231001586}, {-62.16979751083923, -50.65687204586901}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"\[Chi]=\\!\\(\\*FormBox[\\\"\\\\\\\"0.866\\\\\\\"\\\", \
TraditionalForm]\\)\[Kappa]\"", 
        StringForm["\[Chi]=``\[Kappa]", 
         NumberForm[0.8660254037844307, 4]], Editable -> False], 
       "\"\[Chi]=\[Kappa]\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.83582256660942*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"8a838cd2-fbb8-4de6-b93c-6a8a7bf9b578"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"semi", "-", 
    RowBox[{"automated", " ", "plotting"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "separating", " ", "losses", " ", "and", " ", "making", " ", 
    "transmittivities", " ", "inputs"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"values", " ", 
     RowBox[{"are", ":", " ", "\[Chi]"}]}], ",", " ", "Tla", ",", " ", "Tlb", 
    ",", " ", "Tlc", ",", " ", "Rpd"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Tau]RoundTripArm", "=", 
     FractionBox[
      RowBox[{"2", " ", "Larm"}], "c"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]a", "[", "Tla_", "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"-", "1"}], 
      RowBox[{"2", " ", "\[Tau]RoundTripArm"}]], 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "Tla"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Assuming", " ", "LIGO", " ", 
     RowBox[{"Voyager", "'"}], "s", " ", 
     SubscriptBox["T", "SRM"], " ", "was", " ", "used", " ", "for", " ", 
     "\[Gamma]R", "\[IndentingNewLine]", "this", " ", "is", " ", "different", 
     " ", "to", " ", "above", " ", "for", " ", "the", " ", "threshold", " ", 
     "plots", " ", "where", " ", "I", " ", "assumed", " ", "the", " ", "LIGO",
      " ", "value", " ", "of", " ", "56", "m", " ", "was", " ", "used", " ", 
     "for", " ", 
     SubscriptBox["L", "SRC"]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tsrm", "=", "0.046"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]RoundTripSRC", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], 
       RowBox[{"2", " ", "\[Gamma]R"}]], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "Tsrm"}], "]"}]}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      SubscriptBox["\[Gamma]", "R"], "=", 
      RowBox[{
       FractionBox[
        RowBox[{"-", "1"}], 
        RowBox[{"2", " ", "\[Tau]RoundTripSRC"}]], 
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", "Tsrm"}], "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"\[Gamma]b", "[", "Tlb_", "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], 
       RowBox[{"2", " ", "\[Tau]RoundTripSRC"}]], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "Tlb"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]btot", "[", "Tlb_", "]"}], ":=", 
    RowBox[{"\[Gamma]R", "+", 
     RowBox[{"\[Gamma]b", "[", "Tlb", "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "assuming", " ", "that", " ", "c", " ", "mode", " ", "is", " ", "also", 
      " ", "in", " ", "SRC"}], ",", " ", 
     RowBox[{
      RowBox[{"e", ".", "g", ".", " ", "non"}], "-", 
      RowBox[{"degenerate", " ", "internal", " ", "squeezing"}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]c", "[", "Tlc_", "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"-", "1"}], 
      RowBox[{"2", " ", "\[Tau]RoundTripSRC"}]], 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "Tlc"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TsWLC", "[", 
     RowBox[{
     "\[CapitalOmega]_", ",", "\[Chi]_", ",", "Tla_", ",", "Tlb_", ",", 
      "Tlc_", ",", "Rpd_"}], "]"}], ":=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "Rpd"}], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"Abs", "[", 
      FractionBox[
       FractionBox[
        RowBox[{
         RowBox[{"-", "2"}], "\[Alpha]", " ", "\[Kappa]", " ", 
         SuperscriptBox["\[Gamma]R", 
          RowBox[{"1", "/", "2"}]]}], 
        RowBox[{
         RowBox[{"\[Gamma]a", "[", "Tla", "]"}], "-", 
         RowBox[{"I", " ", "\[CapitalOmega]"}]}]], 
       RowBox[{
        RowBox[{"\[Gamma]btot", "[", "Tlb", "]"}], "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
        FractionBox[
         SuperscriptBox["\[Kappa]", "2"], 
         RowBox[{
          RowBox[{"\[Gamma]a", "[", "Tla", "]"}], "-", 
          RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
        FractionBox[
         SuperscriptBox["\[Chi]", "2"], 
         RowBox[{
          RowBox[{"\[Gamma]c", "[", "Tlc", "]"}], "-", 
          RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RsWLC", "[", 
     RowBox[{
     "\[CapitalOmega]_", ",", "\[Chi]_", ",", "Tla_", ",", "Tlb_", ",", 
      "Tlc_", ",", "Rpd_"}], "]"}], ":=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "Rpd"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"\[Gamma]btot", "[", "Tlb", "]"}], "-", 
               RowBox[{"2", "\[Gamma]R"}], "-", 
               RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
               FractionBox[
                SuperscriptBox["\[Kappa]", "2"], 
                RowBox[{
                 RowBox[{"\[Gamma]a", "[", "Tla", "]"}], "-", 
                 RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
               FractionBox[
                SuperscriptBox["\[Chi]", "2"], 
                RowBox[{
                 RowBox[{"\[Gamma]c", "[", "Tlc", "]"}], "-", 
                 RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}], "]"}], "2"], 
            "\[IndentingNewLine]", "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "2"}], 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"\[Gamma]R", " ", 
                   RowBox[{"\[Gamma]a", "[", "Tla", "]"}]}], ")"}], 
                 RowBox[{"1", "/", "2"}]], "\[Kappa]"}], 
               RowBox[{
                RowBox[{"\[Gamma]a", "[", "Tla", "]"}], "-", 
                RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "]"}], "2"], 
            "\[IndentingNewLine]", "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"-", "2"}], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"\[Gamma]R", " ", 
                  RowBox[{"\[Gamma]b", "[", "Tlb", "]"}]}], ")"}], 
                RowBox[{"1", "/", "2"}]]}], "]"}], "2"], 
            "\[IndentingNewLine]", "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              FractionBox[
               RowBox[{"2", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"\[Gamma]R", " ", 
                   RowBox[{"\[Gamma]c", "[", "Tlc", "]"}]}], ")"}], 
                 RowBox[{"1", "/", "2"}]], "\[Chi]"}], 
               RowBox[{
                RowBox[{"\[Gamma]c", "[", "Tlc", "]"}], "-", 
                RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "]"}], "2"]}], 
           ")"}], "/", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"\[Gamma]btot", "[", "Tlb", "]"}], "-", 
             RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
             FractionBox[
              SuperscriptBox["\[Kappa]", "2"], 
              RowBox[{
               RowBox[{"\[Gamma]a", "[", "Tla", "]"}], "-", 
               RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
             FractionBox[
              SuperscriptBox["\[Chi]", "2"], 
              RowBox[{
               RowBox[{"\[Gamma]c", "[", "Tlc", "]"}], "-", 
               RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}], "]"}], "2"]}], 
         ")"}]}], "+", "Rpd"}], ")"}], 
     RowBox[{"1", "/", "2"}]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ASDShsWLC", "[", 
     RowBox[{
     "\[CapitalOmega]_", ",", "\[Chi]_", ",", "Tla_", ",", "Tlb_", ",", 
      "Tlc_", ",", "Rpd_"}], "]"}], ":=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[Gamma]c", "[", "Tlc", "]"}], "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "4", 
         SuperscriptBox["\[Alpha]", "2"], 
         SuperscriptBox["\[Kappa]", "2"], "\[Gamma]R"}]], 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Gamma]btot", "[", "Tlb", "]"}], "-", 
               RowBox[{"2", "\[Gamma]R"}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]a", "[", "Tla", "]"}], " ", 
                RowBox[{"\[Gamma]c", "[", "Tlc", "]"}]}], "-", 
               SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Gamma]a", "[", "Tla", "]"}], "+", 
               RowBox[{"\[Gamma]c", "[", "Tlc", "]"}]}], ")"}], 
             SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], 
             RowBox[{"\[Gamma]c", "[", "Tlc", "]"}]}], "-", 
            RowBox[{
             SuperscriptBox["\[Chi]", "2"], 
             RowBox[{"\[Gamma]a", "[", "Tla", "]"}]}]}], ")"}], "2"], 
         "\[IndentingNewLine]", "+", 
         RowBox[{
          SuperscriptBox["\[CapitalOmega]", "2"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "2"], "-", 
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Gamma]btot", "[", "Tlb", "]"}], "-", 
                RowBox[{"2", "\[Gamma]R"}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Gamma]a", "[", "Tla", "]"}], "+", 
                RowBox[{"\[Gamma]c", "[", "Tlc", "]"}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"\[Gamma]a", " ", "[", "Tla", "]"}], 
              RowBox[{"\[Gamma]c", "[", "Tlc", "]"}]}], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{"4", "\[Gamma]R", " ", 
          RowBox[{"\[Gamma]a", "[", "Tla", "]"}], " ", 
          SuperscriptBox["\[Kappa]", "2"], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]c", "[", "Tlc", "]"}], "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{"4", "\[Gamma]R", " ", 
          RowBox[{"\[Gamma]b", "[", "Tlb", "]"}], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]a", "[", "Tla", "]"}], "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]c", "[", "Tlc", "]"}], "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{"4", "\[Gamma]R", " ", 
          RowBox[{"\[Gamma]c", "[", "Tlc", "]"}], " ", 
          SuperscriptBox["\[Chi]", "2"], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]a", "[", "Tla", "]"}], "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{
          FractionBox["Rpd", 
           RowBox[{"1", "-", "Rpd"}]], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]btot", "[", "Tlb", "]"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]a", "[", "Tla", "]"}], " ", 
                   RowBox[{"\[Gamma]c", "[", "Tlc", "]"}]}], "-", 
                  SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Gamma]a", "[", "Tla", "]"}], "+", 
                  RowBox[{"\[Gamma]c", "[", "Tlc", "]"}]}], ")"}], 
                SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["\[Kappa]", "2"], 
                RowBox[{"\[Gamma]c", "[", "Tlc", "]"}]}], "-", 
               RowBox[{
                SuperscriptBox["\[Chi]", "2"], 
                RowBox[{"\[Gamma]a", "[", "Tla", "]"}]}]}], ")"}], "2"], 
            "\[IndentingNewLine]", "+", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]", "2"], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[Chi]", "2"], "-", 
                SuperscriptBox["\[Kappa]", "2"], "-", 
                RowBox[{
                 RowBox[{"\[Gamma]btot", "[", "Tlb", "]"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Gamma]a", "[", "Tla", "]"}], "+", 
                   RowBox[{"\[Gamma]c", "[", "Tlc", "]"}]}], ")"}]}], "-", 
                RowBox[{
                 RowBox[{"\[Gamma]a", " ", "[", "Tla", "]"}], 
                 RowBox[{"\[Gamma]c", "[", "Tlc", "]"}]}], "+", 
                SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}]}], 
           ")"}]}]}], ")"}]}], ")"}], 
     RowBox[{"1", "/", "2"}]]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"values", " ", 
      RowBox[{"are", ":", " ", "\[Chi]"}]}], ",", " ", "Tla", ",", " ", "Tlb",
      ",", " ", "Tlc", ",", " ", "Rpd"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"unpackRsWLC", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "vals_"}], "]"}], ":=", 
    RowBox[{"RsWLC", "[", 
     RowBox[{"\[CapitalOmega]", ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"unpackTsWLC", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "vals_"}], "]"}], ":=", 
    RowBox[{"TsWLC", "[", 
     RowBox[{"\[CapitalOmega]", ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"unpackASDShsWLC", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "vals_"}], "]"}], ":=", 
    RowBox[{"ASDShsWLC", "[", 
     RowBox[{"\[CapitalOmega]", ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labeller1", "[", "vals_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"paddedStrings", "=", 
       RowBox[{"StringPadRight", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"vals", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "/", "\[Kappa]"}], "]"}], 
            "]"}], ",", 
           RowBox[{"ToString", "[", 
            RowBox[{"vals", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
           RowBox[{"ToString", "[", 
            RowBox[{"vals", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
           RowBox[{"ToString", "[", 
            RowBox[{"vals", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", 
           RowBox[{"ToString", "[", 
            RowBox[{"vals", "[", 
             RowBox[{"[", "5", "]"}], "]"}], "]"}]}], "}"}], ",", "4"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``\>\"", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"paddedStrings", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"paddedStrings", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"paddedStrings", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"paddedStrings", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"paddedStrings", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Monospace\>\""}]}], "]"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"search", " ", "for", " ", "mono"}], "-", 
       RowBox[{"spaced", " ", "fonts", " ", 
        RowBox[{"in", ":", " ", "$FontFamilies"}]}]}], "*)"}], 
     "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "plotting", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotsWLC", "[", 
     RowBox[{"valsList_", ",", 
      RowBox[{"plotLabel_:", "\"\<optical stable WLC\>\""}], ",", 
      RowBox[{"plotStyle_:", 
       RowBox[{"{", "}"}]}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p1", "=", 
       RowBox[{"LogLinearPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Join", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"20", 
              RowBox[{"Log10", "[", 
               RowBox[{"Rcon", "[", 
                RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"20", 
               RowBox[{"Log10", "[", 
                RowBox[{"unpackRsWLC", "[", 
                 RowBox[{
                  RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
                  RowBox[{"valsList", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}]}], 
           "]"}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "10", ",", 
           SuperscriptBox["10", "4"]}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", "\"\<lossless conventional\>\"", "}"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"labeller1", "[", 
                 RowBox[{"valsList", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"90", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"TicksStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
              RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", 
              SuperscriptBox["10", "4"]}], "}"}], ",", "All"}], "}"}]}], ",", 
         
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"plotStyle", "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Directive", "[", 
                RowBox[{"Gray", ",", "DotDashed"}], "]"}], "}"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", "1", ",", 
                  RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Directive", "[", 
                RowBox[{"Gray", ",", "DotDashed"}], "]"}], "}"}], ",", 
              "plotStyle"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<shot noise transfer function,\\n|R| / dB (20log10)\>\"", 
              ","}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{",", "plotLabel"}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{"LogLogPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Join", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Tcon", "[", 
              RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"unpackTsWLC", "[", 
               RowBox[{
                RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
                RowBox[{"valsList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}]}], 
           "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "10", ",", 
           SuperscriptBox["10", "4"]}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", "\"\<lossless conventional\>\"", "}"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"labeller1", "[", 
                 RowBox[{"valsList", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"90", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"TicksStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
              RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", 
              SuperscriptBox["10", "4"]}], "}"}], ",", "All"}], "}"}]}], ",", 
         
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"plotStyle", "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Directive", "[", 
                RowBox[{"Gray", ",", "DotDashed"}], "]"}], "}"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", "1", ",", 
                  RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Directive", "[", 
                RowBox[{"Gray", ",", "DotDashed"}], "]"}], "}"}], ",", 
              "plotStyle"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<signal transfer function,\\n|T| / [?] (log scale)\>\"", 
              ","}], "}"}], ",", 
            RowBox[{"{", ",", "}"}]}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"LogLogPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Join", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ASDScon", "[", 
              RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"unpackASDShsWLC", "[", 
               RowBox[{
                RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
                RowBox[{"valsList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["10", "3"], "<", "#", "<", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["10", "3"]}]}], ",", 
                 RowBox[{"5", " ", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "25"}]]}], ",", "Null"}], "]"}], "&"}], "[", 
              "f", "]"}], "}"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"f", ",", "10", ",", 
           SuperscriptBox["10", "4"]}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"90", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50", ",", "1"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", "\"\<lossless conventional\>\"", "}"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"labeller1", "[", 
                 RowBox[{"valsList", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
              ",", 
              RowBox[{
              "{", "\"\<5\[Cross]\!\(\*SuperscriptBox[\(10\), \
\(-25\)]\)\!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) target for 1\[Dash]4 \
kHz\>\"", "}"}]}], "]"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"plotStyle", "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Directive", "[", 
                RowBox[{"Gray", ",", "DotDashed"}], "]"}], "}"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", "1", ",", 
                  RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"Directive", "[", 
                RowBox[{"Red", ",", "DotDashed"}], "]"}], "}"}]}], "]"}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Directive", "[", 
                RowBox[{"Gray", ",", "DotDashed"}], "]"}], "}"}], ",", 
              "plotStyle", ",", 
              RowBox[{"{", 
               RowBox[{"Directive", "[", 
                RowBox[{"Red", ",", "DotDashed"}], "]"}], "}"}]}], "]"}]}], 
           "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", 
              SuperscriptBox["10", "4"]}], "}"}], ",", "All"}], "}"}]}], ",", 
         
         RowBox[{"Filling", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "valsList", "]"}], "+", "2"}], "\[Rule]", 
            "Bottom"}], "}"}]}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<strain sensitivity (NSR)\\n/ \!\(\*SuperscriptBox[\(Hz\), \
\(\(-1\)/2\)]\) (log scale)\>\"", ","}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ","}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", 
        RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{"Gray", ",", "DotDashed"}], "]"}], ",", "Gray", ",", ",", 
       "Dashed", ",", ",", "Dashed", ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"DotDashed", ",", "Red"}], "]"}]}], "}"}]}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.835750124244857*^9, 3.835750158001265*^9}, {
   3.83575187784966*^9, 3.835751890488077*^9}, {3.835751921039337*^9, 
   3.8357519736156473`*^9}, {3.835752036735898*^9, 3.83575203777826*^9}, {
   3.835752075725871*^9, 3.8357523336736593`*^9}, {3.8357523685838213`*^9, 
   3.835752640492655*^9}, {3.8357526837068577`*^9, 3.8357527384042587`*^9}, {
   3.835752829272903*^9, 3.8357528691369123`*^9}, {3.835752907843602*^9, 
   3.835752971943554*^9}, {3.835753031710623*^9, 3.835753075032798*^9}, {
   3.835817432432705*^9, 3.83581745204116*^9}, {3.835817482879722*^9, 
   3.8358175298350477`*^9}, {3.835818596075221*^9, 3.835818608975668*^9}, {
   3.8358189850819073`*^9, 3.835819007378232*^9}, {3.83581919413806*^9, 
   3.83581927352654*^9}, {3.835819604049631*^9, 3.835819606275133*^9}, 
   3.835819636490397*^9, {3.835819925486471*^9, 3.8358199354612017`*^9}, {
   3.8358200053772097`*^9, 3.83582003241269*^9}, 3.835820082996682*^9, {
   3.835820324154355*^9, 3.835820359148191*^9}, {3.8358204758005543`*^9, 
   3.835820492744505*^9}, {3.8358205276331367`*^9, 3.835820529606242*^9}, {
   3.835821554758211*^9, 3.8358215618835506`*^9}, {3.835821955252779*^9, 
   3.835821959774364*^9}, {3.835822134577651*^9, 3.835822167919662*^9}, 
   3.835822430377459*^9},
 CellLabel->"In[78]:=",ExpressionUUID->"f199c58f-b00b-4e35-ab51-2a4bdb445049"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]Ratio0", "=", "0.85"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"values", " ", 
     RowBox[{"are", ":", " ", "\[Chi]"}]}], ",", " ", "Tla", ",", " ", "Tlb", 
    ",", " ", "Tlc", ",", " ", "Rpd"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valsList0", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[Kappa]"}], ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Chi]Ratio0", " ", "\[Kappa]"}], ",", "0", ",", "0", ",", 
       "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Chi]Ratio0", " ", "\[Kappa]"}], ",", "0.1", ",", "0", ",", 
       "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Chi]Ratio0", " ", "\[Kappa]"}], ",", "0", ",", "0.1", ",", 
       "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Chi]Ratio0", " ", "\[Kappa]"}], ",", "0", ",", "0", ",", 
       "0.1", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Chi]Ratio0", " ", "\[Kappa]"}], ",", "0", ",", "0", ",", 
       "0", ",", "0.5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotsWLC", "[", 
  RowBox[{
  "valsList0", ",", 
   "\"\<lossy optical sWLC \
model\\n\[Kappa]=10\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\), \
\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\) is SRM coupling rate\\nparameters \
of LIGO Voyager\\nno radiation pressure effects\>\""}], "]"}]}], "Input",
 CellChangeTimes->{
  3.83575339794003*^9, {3.835818773021297*^9, 3.83581878106182*^9}, {
   3.83581972185771*^9, 3.83581973736483*^9}, 3.835821695105036*^9, {
   3.8358222044832363`*^9, 3.835822204823942*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"272780f9-7176-40cd-b7be-8f433b7d7549"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              GrayLevel[0.5], 
              Dashing[{0, Small, Small, Small}]], 
             LineBox[CompressedData["
1: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
TwasOv6r3HaeJffbK/8h/z/2ibzV
              "]], 
             LineBox[CompressedData["
1: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
F+SdWvOr/7jCz86tVzx3Q/8/fesbdA==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$9064#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$9064#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxN1Hk0VHEfx3FJki00ZcsSiVBZsiXRjoQSsq9JIoUZLSpNtkQqW0ZkTQkR
I0pDtpFkDYmQIkqW7ETPc57znPmY45/XeX/v73fv795jk6Pn8VPMTP/9Mf/v
j6l8e3J93llmHab//3jYtkSwnYdtv2Ya2fnAc5EFjZxXYYU5evPpO3BCxUib
SB588eTunlvT8A5y+6jDjZUM3/sdneCRw8Kwtr7pliD6KoYvzMcKCXeyMvyg
3DGeg5WNYQ6/7TNsImsY9jpK7nE4wo7797JQVvPhYDgmRNFR8BYnw+WF90TM
qVwM72r7k5/8gZthVb12qmvvWoYdF3h0ePvhO9n6tcVD8Cu7gBOOI3A/L62b
fWKtjoyR+m95u6YSnsoZ1/wZ9N0kxQmrv/DOKOoeMhMPw/oezTfbmOE5leKs
i+thc3rQUsku2D0pdT+vFg9jP/KlspBT2ug5cvN83Adg1rse0nZHYerJE8Yr
7OFaxQvRpo5wL/udz0+dYc43dOfjZ2DnTZqXUr3gy/PmtBkf+G6Lz0oDX7gk
MCd88grcbPu+WfcaPKg2yJ/gDy/xrLIZJ8Prfm5KORiI5+WsmmTyCkZnSaLb
Jd6C/16m0Gpvw5OmHiIz4fCwgo6f5F2s18+xrtPoPnrb26IHT2Lg+oe3Zz4+
gOm+tmYr4uGibSwEy0cwJc4oguMJfN9HYkQtE75tNGXgnAX7rYpnf5ML214Y
CDxXDJsZFH+nvIaNpMP209/AOl8UV4iXw+pFLPYGlbBiZDvtYjUsey5TJL0G
ltC76tdUi/MQ2mzcuVi37Pz/SeySbVj2PXyeemDWtOz8qTUz5JZl5x8Rb/a8
FZ5yO0ftbIcHxAneO7vg7oWBJvtu7N/eVqwQ3oteE2Y30v8dzpzNPBP7G05p
uVpTMQrH5xhLj43DYc7T33Wn4XONe+3nl5adz5NPZjY8vAxbRla6F/HB5Gu5
5HXr4eYTITnvBGGfFeqsqpLwS8tYKrcqrMVlRiizgvW8WpokMmDJgQjyFk0+
hls72J4ZasHBH260kLT5GOej8XZ+IXEv+q8C7830/XD+TfPq0wbw/k1i7E9t
YCfrnHty/vB6Y+lXJmSsT9+f1HclAP2SmiBHWhC6nNx95boQ+Isoh/VkKBzB
FxCwMRzX72VdzDoQAU/MEVvd78Hpv0cWoyJh86+nt7yJxnprWnsN+2PRX9dY
+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
8vPf
              "]]}, Annotation[#, "Charting`Private`Tag$9064#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
4LYji6t+zvBTq43K5y7w/wKy4pkN
              "]]}, 
            Annotation[#, "Charting`Private`Tag$9064#4"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
d1v1w7my1o6bg7Cm4c1dxsNY/4vnu7LsUeRMuQfIdb/DV9i4Cm/NwjzyJqYT
83CVUeyG8iLmmXg15sUuwXPRa4bDy3g+YvPk/smsIhdp9HwYvk70PI9k6/Vt
wnbrg3/ESFgJVh67p/6KCa4JE1r1vk+U752/2C7Phvu2LaLbUmTD7+/FeWTL
qCC/OPvt3S01mJr3oX3TIfieocPvv5qwVBh3pJg25tU+HeCwPspGOI/+2O2i
2GOoH2Yw1aw9Dp/VYuidPQFvnf9wms+QjXA/Cdmx68bGyPl6jiWGm2B+6U5y
oXIz1GsqNFZOWKBeV/324tYFeMDbJGr/Jdgjk57LORSO3Y7Rag6HufYf61uO
gJ84knmIX4fVbr7esI6B21+HJt24gf3ZLR4UfhWPfFZwtWouEfcValp5gv8W
croIv9H/UuAH5fv9rqXC+ydm//cXfLiB9Un6ZDrO/5+OuzTHfXg8UKTx+APY
99G4echDrL9z4MGPohzMS6GyvzySBwsf4GJkKEB/hcenXK1C5P1t/7XnlsBu
63SO/aXwyt72P5TPYY54He4zVXDBq51PM6rhA3MNhzte4v7aeEP7t18htzE6
6CnbgP3fiupctmzE/t69OnUttAn9JH9X6PPeIleRist43wr7nOKXWGzD/Efp
5RUcH+CRLt3DGp0w267hDtcu2FDzvG1cD+ZFBpFPl/XBtSV3/T9/gpcm9u0g
GcT+pfY0xosOYZ6LmQWXwQiccWMm328M7mkMlU8fJ/p+rjE1NHyHD8s+0p+a
hMsedLoq/IRn+k8t2sxiPwJ0/0KvzsNWR+NoCn6jPukSf1rHH+Stz8uF//5F
vj2j+4z7H6wkOKx+eI3o+219vs19A59HfhK5ZeIW0fug5e63ChJ2Qs6yvc9n
iJSdkOsrNW6QksMR3hYxEpTwy9wZVuNd8OKX0OxAGliSmVnm/m7Md9Z79PIN
PTv+PNLVg7ozjHD3i85eBhb071o45aTMhn5NsX+z9hzIgx3iLkZwwaW3+Smf
8MDT7eXJXbwwP9lx/n/8sOXB4SJeIcxP8D1/4KgI8rePyd+eEYM19hxP7D0O
57ssd0voY/90//tlDjPEvMA/xja9xuyE521Ydeu+hCn6j4Q/+RpqDhe9sxLp
tYRZGCk8JGzQH2L1vCjUDh5/4LjQ44B6vandChJOcJn0y6DQUzBnoPvLHlf0
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
rFU+O4P8fwCE6bRm
              "]]}, 
            Annotation[#, "Charting`Private`Tag$9064#5"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]], 
             LineBox[CompressedData["
1:eJwVkGlQ1GUcgBfTBkggSa5ckPcF5BJm5dgwGn4/CRUKmASCpFRYkGlBwrgM
XIIhZzziCkp0OJdjSY7E/e8usBFCLLbpEnLYygJjONzSgoInOEQfnnk+PV8e
wksKObmFxWLhJv9b7tvSNSQgyI1vfGTZOgIvIz1nR/IJprpw+FHNg3BFHf3+
RgHBpupOwS7BIHiFFeQ7FhE84r1SHBM4COlBs+7fFhO0CAxSl2jvwipczbEv
Jbgi8jtzcP9d0Nq+tsisJugqiY/S7++HAqFjYp2QoMLJ/K0rgn5wsQrv/qtm
s99m96GBSz+cMrseZ1NPsKJvzK62SAXzetGM6hrBrNxnARzeHZjSKgJ3MwR1
VZXPL+79E84lPK4KkBCkaSUPQ+aVYDNnuZIiJXh0dfa8RqQE3mT6VWUbwQuW
sYtsWyU8GHaY+bqT4MtXXQ4c+z9A056XregjeI/Zuq89qA8yPDuGtLcIrgX8
4JJg0gfm4mk7CyXBpcTg3l8nFBDR5KNKvE3QJPlmhOtpBYxULJubDRAcKXpx
c095Lwzkhon59wmmmH5qPWX4O0SxvjDOGSV4Mu6ph+JhDyxnxSRf1mz+/Ocy
27StB4wzkt16xwl20L4s/egeCEsqErMnCQ7lSXR2yrtB87lKPDBPUP/QPVHI
RhfEjw4bzywQvE39qz0lXbAWPpa8/oig75ktzvf5XcAOWXBz1BJscZkcDFX/
Bif8dZncJwQXLJTd/8o7YcrDj/FcI6j9LrdNp1YOqeKP3wlcJ+hRldL4lCeH
bZzQFN5rgsIjetzvbeSwx5nnXrhBcELzTciPog7gkxxm7g2KA4Jdnywz7aA1
6GTKtlOMTF10P7Uggxcz7hIdK4p5exldn04G1CxI9dpNMUMc6at3gQHZux95
JFlTFJ0VFMeGMZASHCUZpxQ5maazCq0YtNI8SZs9xfcyvX7acBTD9LlpSeI+
imIj84Y3O1pBUbmcWudGUfNVvdw8vxVq2tc8xtwpol2Mpia6FaIWd0j9uRQN
y6dGLba3wnioj9TGm+KtqsWNMdUvMERLpaN+FM2SJjlOJ5rhxgc1aW8fomhR
bqRmmzRDUXiL5+HDFPVYFzfUd5og6FKvVBJAsZrZ+aTSuwmUj5ekhcEUh3Yf
K3SzbYSubn/Zwc8oXooZDqoy+xkqNKHpgqMUowa2NrJHG0CwepzLRFIsc+Oo
D5Q1wH6HNJn1MYoT1bX+AtIAkkKhbC2aIv9sJzfbUwQl15rT3WIo1uQ+EOqu
10NybxuXH0vxQKat2Lm3HjjP+2V/x1Gc480beoXWg9GO0XSDLylOZ4OhFbse
tE5TXD8+xSVXP/PS6TpQ+S09y4yneNr2fLHweh00HX8lu5Gw+V8eMeudWQf/
Ac2G26Q=
              "]]}, Annotation[#, "Charting`Private`Tag$9064#6"]& ], 
           
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxF0HlI0wEUB/A5bcy85jSvNZ0zTZTMudw0DSU0/Vlz0WG60Nw6vBrWPAhZ
hTNFo1pmpiSDVDI7afnbTxal4hADtbxwmoIGuaTDlYQ6+6MD4r0Hj8fnjwfv
fQMVxYdO02k0muRv/5v9Ea1v9UX0RNr/YjFDtMxz6JwPj6QnStG2BnLU+SI6
0jY4nncDrTMtT3H16AuZ8fN1q+idGrNVXmkPrv/WqFM+cwAnpB0NqRncBD6/
0eTHmWWAm/sVLU4MJthJHbHG5DqCVRLNvHz/ZrxflSUUlzqB79QKFL51zuB+
qp57zOAC3j210tU64goWEWZD/oIb2ONzYFtyNQss6JzOyGa5gwnVxBj/ATrI
otWExLHB7ePD9yIH0P5DkuolmQf+Hy81d1jQMuNtK/uSJ1i80LLnNXsL+OXl
IJtShxaHWyuGhV64L40rFPShE7iEdpLwBges3a0InkffJ5QT6kIfcHBn1Uql
nS847/nxlIFGtFRAOrrx/DCPnoO3GBTaaFLWOuzlgO1LDpCJQ+jUiOKOsNyt
YKGCzeB8Qfu02cKNlVxwu0zem+3qD/7+6mptYjNaHL7uPbYjALyNbfHMN6Jr
6M5nM0J54NnR6qUmFbpqtrdlrhsd+pUTtU4PBPNiY357EWibLPrT5HX0O82R
FwXT6HWLkLTz54PNtITSmAA05Ze2q5iHLknPJef46GXDNbJ7O3rxyiKpFKDH
+U2GmSS0Pr6tjLUPfTPjaXRKClpy1WQgCfSbH1aDNh3d05dKJWeide8Pl6uz
0OqfOaIuGTo2tIziZaNJbSv1S45uePikPOokWmXqFhWcQkeujVBTZ9Bu7jPl
Lvno5bCPoqQC9HCSdbWiEP04Z4PSF6H/AEd9/Qc=
              "]]}, 
            Annotation[#, 
             "Charting`Private`Tag$9064#7"]& ], {}}, {{}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {}, {}}, {Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> {2.302585092994046, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{90, 10}, {1, All}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{2.3025852339686432`, 
            9.210340231001586}, {-2.8929823996598612`*^-15, 
            7.001404990265194}}, {{2.3025852339686432`, 
            9.210340231001586}, {-2.8929823996598612`*^-15, 
            7.001404990265194}}}}, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {2.302585092994046, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"shot noise transfer function,\\n|R| / dB (20log10)\"", 
             TraditionalForm], ""}, {"", 
            FormBox[
            "\"lossy optical sWLC \
model\\n\[Kappa]=10\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\), \
\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\) is SRM coupling \
rate\\nparameters of LIGO Voyager\\nno radiation pressure effects\"", 
             TraditionalForm]}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{90, 10}, {1, All}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{
             Log[10], 
             Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
            All}], PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}],FormBox[
        FormBox[
         TemplateBox[{"\"lossless conventional\"", 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.  ", "0   ", "0   ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0   ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0.1 ", "0   ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0.1 ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0   ", 
              "0.1 ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.5 \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0   ", 
              "0   ", "0.5 "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False]}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #7}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                   ",", #7}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              GrayLevel[0.5], 
              Dashing[{0, Small, Small, Small}]], 
             LineBox[CompressedData["
1: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
LOw=
              "]]}, Annotation[#, "Charting`Private`Tag$9151#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$9151#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
DxB8O43hruNq9cOjNDDM4bdp7jCG/wALysMh
              "]]}, 
            Annotation[#, "Charting`Private`Tag$9151#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
o6QLdA==
              "]]}, Annotation[#, "Charting`Private`Tag$9151#4"]& ], 
           
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$9151#5"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]], 
             LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAu0KtvtJ8IUCdg52jPllKQM+CVLJp
2CFAYNStTzsiSkD45jO0AR4iQNrEbpW/+klA1wA/dDgfIkAcwJCaEvpJQLYa
SjRvICJA2T06uWX5SUBzTmC03CIiQOlXfUIM+ElA7rWMtLcnIkDEOUiAWvVJ
QOWE5bRtMSJAbngLhvvvSUDSIpe12UQiQGpj5rFO5UlAsTyidRBGIkClHdOc
pORJQJBWrTVHRyJAKfOdnPrjSUBNisO1tEkiQNoRStqm4klAyPHvtY9OIkDG
FW5KAOBJQL7ASLZFWCJAFI8z4rbaSUCd2lN2fFkiQE78BgwO2klAfPReNrNa
IkBmPcNIZdlJQDkodbYgXSJAAXqA+hPYSUC0j6G2+2EiQOsF4Tty1UlAk6ms
djJjIkAlxMz5ydRJQHLDtzZpZCJAYBe7ySHUSUAw98221mYiQAIhMJ/R0klA
DxHZdg1oIkCtpH+kKdJJQO4q5DZEaSJAGFdju4HRSUDMRO/2emoiQFIYwOPZ
0ElAq176trFrIkBE+HodMtBJQFeBtpc=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$9151#6"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
IhxH
              "]]}, 
            Annotation[#, 
             "Charting`Private`Tag$9151#7"]& ], {}}, {{}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {}, {}}, {Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {2.302585092994046, 49.81587223278461}, 
         FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{90, 10}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{2.3025852339686432`, 9.210340231001586}, {
            49.81587223278461, 55.88712328557511}}, {{2.3025852339686432`, 
            9.210340231001586}, {49.81587223278461, 55.88712328557511}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {2.302585092994046, 49.81587223278461}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"signal transfer function,\\n|T| / [?] (log scale)\"", 
             TraditionalForm], ""}, {"", ""}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{90, 10}, {1, 1}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{
             Log[10], 
             Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
            All}], PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}],FormBox[
        FormBox[
         TemplateBox[{"\"lossless conventional\"", 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.  ", "0   ", "0   ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0   ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0.1 ", "0   ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0.1 ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0   ", 
              "0.1 ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.5 \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0   ", 
              "0   ", "0.5 "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False]}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #7}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                   ",", #7}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
0ACfze3nYsh+6IoLUbteJpD90FfhV0Mc0sl+6O1Olasrr5D9ULu6Dl16FdkP
1Zm7e3BnN9kP3RooULZaimD2Q3NqhcrReRf3Q/0SLk9YCBDMfugvv+VhbFfI
fmjwxeOMMnuyH3o/38SAQ4Hsh/opGN6mj1gw+6FjE7otKN5xP7R+c0kn0rgf
6q3sMoo07oeOqe1nQfGM+6GV/oJUpHE/VNXScAPSuB+6YI2OP9K4H2p6kqhG
GvdDC8RzJVD8436o9qVrcUjjfujnlJDlKB9wP3TTqc4ppHE/dHupKQfKB9wP
pd+SPKwPNe6H/rKVszFA+fSvHxr40WFsDdS4H7o4IckQoL//Xz/UV+RSvgnU
uB/6q0sogg417oeKKQy5WEON+6Ghm6aWO0GN+6F9DW+n90GN+6HXIv5sPwk1
7ocah3oNX4Aa90O3P0gZLUX16V8/NDrUY1kP1LtobEtfLpYEUgkPoiVg/H/0
/7lrvkwSKBcpjeyC2vTGeOZlQgpMTGu/a4S642uk8ud2KdDTY1W5GeYD4xhL
M7eXNPD4WRa3EObDFHA5y/5bGkQ32Ft+hdpZxikrN0IGpD2MeEKF+VDQ4nSz
TIwCTFN9mxlBdMbaBvA2N58Cmtbc2zIZTGcosXBI7dOTBZW13VzfQ+H3B930
5WmQBR78olcEouiMRp5pxc1b5YASxcfiyFm4/zxq3MI5IAds3MJ1l16An6ec
d3KmDxX4XbHbqJkNP89wo9XhLDTAdSN0Kq6Yzij+ZK56bCMNCFzIS+d4Bj+P
twrrDC7QwJY39MqGaTrj7cDonn1dNGDjwp3MuhX6qXBh6iIledAVsDNCfRfc
fzTqfff1kgdThJvwjdd0xoexR5bUO/JAp2aXKi/8ez7omNzRnZUHa43uBqgZ
0pn95hsV6bov2cl+s4h96XMU77jfrKkr3YY07jdTWgeHkcb9Zv4Phb+Rxv3m
y/dfiaP4xv3m1zJsq5HG/Wb/0EhPpHG/2cPvVyHSuN/8bsv9eaRxv/nYWY/9
KB9wv9n07gQLin/cby6vkK75q//1m4tGh+4iv8D9ZtMbPwRQPuB+85vtj58i
v8D95hAOkZUoH3C/eSx6zt4I+dO/fvNY0bzreqhxv7mSxv/dHGrcb45qEJO1
ghr3m4nE/dr2UON+c0Wxk6kH1Ljf3DYpxe+P/v1//eY3nLXW8VDjfnPFA6kj
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
GY2Gw/qMeS/pXNqJn5oEk/eSTRBulYX1GfNeF2d9DrLA+ox5r6gh6b4VtgST
92q64xb3+SDB5L0sktVfbE0mmLzX8gS/u2c7CSbv5e0hEX63hWDyXtHXCxZV
wnzBvFd4085V60XI9zhyJzYIET8smHxWQvifbBSfmM9adn9fM9KYz/p2JIIb
xSfms1ybkmyRxnyWfdqTaqQxn2V5xNkcxSvms4ZXvliI4hXzWZvT984jjfms
aFMnY1SfMZ+ltd73G4pfzGcNxkppoPqM+az7xkKsqD5jPsvbxqYf9R8wnzVm
5jyH+g+Yz3JINu9F/QfMZ21bcd4c1WfMZw3sFtIPoJDvcWxle2wSQyHf46g+
cuvEJQr5Hofi4l8yVRTyPY4HLH82D1DI9zi4f2apicF4xHzW8Or17tuhxnzW
LCU15DbUmM+aLIo7pwDjFfNZKu7di6qhxnyWV3u07RkYv5jPerH1lWUejF/M
Z62MXvtcCdZnzGeJMSxvSsD6jPmsyPOT3jWwPmM+a167V8IO1mfMZ4XNsmez
w/qM+azKNSvTSnUJJp+1b9nofn5YnzGflTnR0l9tSTD5LE8z20jtnQSTz+La
9HIfSzDB5LPS2HZq/CgjmHyWQKhf4P4JgslnVRzO4XVPJt8vmZZdUyjZb8Fw
sFibdXSVHHisePXOVz+CsTOUxezQDiooiDEXZvtCMN77HX+8+hIVqBoEuO4d
IvmoWdd1M2nvLBih9e4ef8yooEM2qIP7I/SDio6PDWepoPFV5AJ7WN+NQLbS
wD4qeLXeXugY9IsybYn8omIqqHsdUuXURfJRV2bXpru+IvmoXinvOJQfmI/y
Dmq7gzTmoxRueX9CGvNRvlenl6H8wHxUjEb76b/nyX98VF/Jzd9IYz5qX7bd
BZQ/mI/SLj5/COUL5qPicp0T/p4f//FRJWoaUyh/MB+lnDPxHe1vMB810njs
AKr3mI8q31iTheo95qMYxlPqqN5jPso0htGG+tmYj7p+cNtv1M/GfNT2uJyr
qJ+N+aiXwz/6UD8b81G/vyi9QP1szEdldqY7XqeQ76WA3M2rnlPI91KOCgzV
zFDI91IyksoFNWXJ91JaMg8cCJYl30sZbxxQG5Al30tZe+k0jxvMF8xHGazM
viMN8wXzUZ+lH29YAPMF81E1/YoplrDeYz6q9iLvVXZY7zEfZUHPp6+A9R7z
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
Pv6KflYHqcHHG+k3hpL1CT5eY7GZJaePN1q00omsT/Dx16UHS0n/BR8v/7zr
DOm/4OMXDb/qI/dX4ONl7jPk/njfvz7+TmDaJtJ/wcc7GPsKkP4LPv5hdc5z
8jwAfLz+zKosPwr6+BDG9o4QCvr4TIO87YkU9PEiUVncVyjo43dkHrKopqCP
X5HY5dpPQR8vWR96XZnDx5cXx3z04/Dxzu33T9XOQx9/jufMIzMOH291bs7k
sAz6+BsmW41aqOjjnwYEiIvKoo9/uoD/RKoc+vhuzbsShQro4xfzHPE8qIQ+
3slghtGshejjMylKp8YWo49vlS6fEaSF/p1n1cC5XXbo31U/b8tY6obnZf2N
zVyaTnhe9vZ3/YCsLp6Xpb1aHjL3g0np9j7n/InHMnT6opvvmS7o31uijlok
uuB5Waq3jEm/G56XzQwu0Fhnh+djQt9sGBWvTEpTDfZcWp8nQ28tWjzPlt2/
4bysasO1jGz2/Vz5qOK32ZMydDMf7VsFbnhedmTKjlt95PwrxbTqZosMXU2M
mebniudn2YLRFbPZ72dlwy3MUKDSd1p95X7jhudlo5cyWSl1eF5GMz/L5PTz
iXsiTnP6+TCVx5Wcfr7WvOgXqcHPW2dmG3L6+fYC2Sucfn7PxMr5nH5+43fL
t3/243/9vMRJgSd/7gf/+nnfvLI+8vkCPz+glppM+j/4+Z0qb9NI/wc/39j1
cjXp/+DnleOO8pP+D36+jSehgPR/8PPnj/LtJv0f/LzNlWRd0v/Bzx9ov6xE
+j/4+YHCgEfk+TP4+dd9aRqk/4Of/5EzZ14BBf38l+xLz95Q0M+3taZa83P4
+emF746ZcPj5nCcJ6Wc5/Hx9xZMtPBx+/rKjsPcZGfTz1x/U0W2o6OddVilY
bqGhn5e5cKipQhb9/Pcpw87B8ujn5/5qof5URD+/91Gm3GwV9POhPBv7pRah
n/9ltLPoqwb6eetorXvk76fgPDV4lc52IyP08zXtM06MmOP5atLVd0p5Tni+
+t248cpRNzxf3bJqw7VLFni+OvfC08FmJTxfvfVFpHjZCHp5s9gf0ZxeXkNd
NIfTy1u9dX9PavDyPz7cpXB6eemZDX6cXn6hYeEnUoOXn7dIJYDTy1e/e23C
6eVV7gpYkfUJXn6ioDCX9H/w8lfmxhwm/R+8/MMZ1W9I/wcvn2ipM/XP/KK/
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
iL+mizFZb+BH5N5sfEVq8CM00QOHyHoDPzKp6OFJ+hn4kZvyjtfI+gM/suVG
hi7pZ+BH3IanhJJ+Bn7k91fbfaSfgR+JSLCUJf0M/IjEcJ8L6WfgR0p/i34g
96/gR7p2JJqSfgZ+RGW/toE7A/N1jR4NLfBjYL5u/JhnYBQD83VFbobbXWRg
vm5tG1dfJQPzdTOY1UIjDMzX3Vz8W3MpE/N1Q8LqnGOZmK9b9LKr+RcT83Xn
3NKViAnAfN1j6zfcMwvEfF3TB71Z+kGYr+uX6Ge8LxjzdWWF9bfJhGK+bpnd
yRny4ZivazxjL1fXQczXLYhLmuYUjfm6iz6omLnHYb6umHb8yK1EzLut9NfT
zfmMebdvCye9MlmYd2tsVWyUO4h5t0sddNoL2zHvVqS9dsbSSsyr3SH7zmB4
BL3HiL/5bLJ+wHsI7Ph1mNTgPe5bcimR9QTe49f26z2kBu+x0Ltxgqwv8B5L
IxZuI/0MvMfmwztNSD8D70FVi20j93/gPXz7+5RIPwPv4eMocYz0M/Ae+cbP
PUk/A+/Bs8qgitz/gfd496C2ldz/gffYfTdigRcD82q33+EWDmRgXm2UZTDz
OAPzalNpB93vMDCvNtT6TeNbBubV9s6q3TGLiXm190z23HRiYl4t19zSTQ+Z
mFd7Od6QSzcA82oXig/v/hyAebVc/iUzHwZiXm2dY9OsF0GYV+vZPfJoZQjm
1WbJ9wwJh2FerV7M4TDfCMx/DaRLHNP4hvmvq1z4yihDmP96TTjQ3aIX81/7
WlWDjrzCPNevU4LV3380+ff3ydel5+99NID5rm938ntns6+f4C1sw9R+zmG/
H/x9Mn9DWHkA++ctHFNLv76VRtfobjh6rsv0n8cY3OEe59Vs8u/vk6W/fIt8
xn4/rRb3XEMtGl234WVcC/vnHdOMz8kVodG1qC+7fdjv51Z6wc/DiUZfI2l9
jPbd9N/fK6dopS1PYK/3ZxvCZ700ptEFWozzVdifh769A2vOy9PotzYE5eiy
vx88hqnoohBNjr9fdtJ59Yn0U/AYx6VOGP3JR/7rMR6fT6wjNXiMXWKOIWS9
g8cQPH3bhax38BilD0IukH4KHuPYezU10k/BY3yoTfMm/RQ8xqHBIUfST8Fj
HE9aPkGeB4LHOBxVr076KXiMot7BTNJPwWN4us0cJc8DwWM0G3i8Ic8DwWNc
Trl1mjwPBI/hrTxaFMnAvFetdXGe6QzMe9V+Ini+goF5rxZfCz2HGJj3etR2
qHUJE/Nel/eJr49mYt6r4BuDGaNMzHtdUeNTEhGAea+n+N7OWxeIea+bSueu
1Q7CvFeBTQtTPIMx73XmlgJdkVDMe+XKDkwSDse8V+FLXmF1BzHvtTFVhq4X
jXmvPW//E1wVh3mvLjKPlCMTMX91v/imKP3PmL8qk7nmii0L81f5S5umtg5i
/mqS4MDuwM+Yv/pk53bfPY8wP3XzEE+bMce8weIuQxGyfsBPcBWciiQ1+Iks
xlFZsp7ATzh0Xu8gNfiJnxqPBsn6Aj+x+kmxA+mn4Cd27QzTJv0U/ERh4VgV
6afgJwas2gVJPwU/obrYfAfpp+An1u6frUn6KfiJMw4vDpF+Cn7iwIBnCOmn
4Cdikh7nkedp4CeqD1/eFsDA/NQvtZbnjjEwPzUm38nyNgPzU1VP0MzeMDA/
deHYQKQIE/NTV5ypHXNgYn7qEQVGfTET81ODpQ5l6wRgfqrwHL217wMwP7Xj
ocfhu4GYnxp68ubxR0GYn+qx8sI+tRDMTy0O3jo5GYr5qXbDVjs3RWAeqWCJ
2JG6bswj5dFTDPw9iHmkGUtcW2p7MY/U3tSyILYJ80XrIhWeL2o3+Tdf4GS9
yO64AcwbHetxzppk9z/wCyP8dqoP2ftNmC/woazMKITdvwoXrk92dKfR78lo
3zJi/z7gG7i/bXO4+9rk33yBnN/zuiLZ71chGJrFWkqjb/Q3vDWX/fs+3hV6
1m4mjb6/79pzV/b79fYXbxN1ZO8PRHmS89j9FOYN7L2xycKN/fUOISnTwtfS
6BUSvYHH2J8HhetfNPRlafTq8cMLbNjfD75h7tTGPeEvTUrf+9w9umExjf4x
sSv0EPv71Vq3+Z8XoNGb9rfStNlfn6E7edezh0oPj6TZjLP//fHSNTMiKTS6
5YKKtL3s113GT5eKzKbRdyR5lR9g11wlGsrKXDQ6K7IztYD9fkUrJh1+KrL/
/YNf9eXI7//XN9gcm1/+lWP+wIxTER9JPwffEOV+x5B83sA3CHksqyU1+IbU
KeaB5PMGvqHG020T+byBb4hylzpL+jn4Bvnz4fNJPwffIL8t3I30c/ANseMO
ZqSfg2+Q0DD7Rvo5+AYBTU9p0s/BN1xjzD5M+jn4hmQB8Rekn4Nv6Nu/IYv0
c/ANxQ0zLUg/B9/QW7DNifRz8A3z3V+wyPkO+Ia5VvmD5HwHfEOKEe/JQQbm
mdpOY+QtZmKe6c1TLysjmZhnqprppTLCxDxTP23BOWEBmGf6ZefaV6sDMc90
peQB6aVBmGdae7O5bksw5pmGpatrCoRinqnJnvxPvOGYZyr6usGy8iDmmbZ1
9fcujsY8U48HUdwqcZhnan+/33EPR77oW97kcP7PmC+6VzHqqyoL80VLhGv5
WIOYL5ovlj7/7WfMF2V5334y4zHmg9rpmFcNjKJHWDPv4UyyfsAjfCn0Okhq
8Ai3D76VIesJPILIM/V2UoNHMHB93EvWF3iErJlHrEg/B49AyTmrRvo5eIRq
z3X3ST8Hj1Ad7D9Onl+DRzi89Kg16efgETReuUmRfg4eIT79mQfp5+AR6rbx
mZN+Dh7hQOO6ANLPwSNc3ZYgSvo5eITab2OqpJ+DR4jYe/EJOR8Bj3DuwMnY
Fgbmhfo3C5wUZmJe6HBH00V7JuaFWrTXCxcxMS80qo0vSisA80L5goW03wZg
Xqi+VmRNbiDmhW7nVn1bGoR5oeYFrEalEMwLzX41KTwainmhlw0pfuYRmL/p
1Dkw/0I35m9+OZnQ1TOI+ZsJt5NmzOhj70fWZWUnnKTR5eQtj35rwjzNhIVB
t1+x+znMBznl9GytzwDma+qqaa9VYtfgAZ5O8hQeY/dzmA+yfMc7C9LPQ40c
jy7Zwu7Hn86uP8X+fcALLHftsHZpMfk3H+RlGpekO7ufx8onpFdp0OiyIQL1
muzf9wP/TxFlIRo91M9a1Z79fnmCT1077Wl0Sda+E+Psfg7zQnYJdSYZs7+e
euo6l8Ma9v7/bEFzJfvzoLfO9aoIjUbnfvTmxGb294MXUNDpHldqNCnNiHp0
WF6NRi9uqj94nv39xsy2bh9+Gl39ns6eBeyvf71/IEPwG5W+mueb8Uf2v/fy
3TUH7aTZ9wcpnWtJ/2acnqX9SZT9+3VUuu1j18vyHHQHJ6j08nNmLhfZ79fY
xHjxVIH9+fPtS17Cfh28wNJ9wZJH6k1KQ243NItMo9Hfu1lJzmS//qZPx/en
BI3++4L2HPI8OLuOVyFSmEbnOxjo4cmuBYV33feRo9GZ+z7HmLBrMYPvE08F
aXS/A30NhuR6FWp1Mncejf6py+f5LnZt5EY11Rej0T+/apsRyK7BCwzLSDIM
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
Nr6kSa4n4Hm+dRWPkvNL8DzjYo6G5HoCnucpH48YuZ6A51l0x/MtOb8Ez2Op
o/aOnF+C52nt+TZJzi/B87i/mpVLzi/B88xuY4qS6wl4njvvexVGWeh5nFNn
OFv0o+eZm7h+dmk/eh79FdXtDgPoeTquTpdUHETPM7SnVEuHnOf/nS9C/W/q
yXz29QTmi7wwe2OUzr6ewHwR8dc3+lexrycwX6RQz8j0Kft6AvNFwsfXte+Y
gvNF6jSydH7w43wRA8O7b9RnYX7n131B/KeomN+5MnPPvLylOH9Ex24v5Z0l
zh8pWndpiUEUzh8Zl93Vr/wI54+EzDx003EPzh+Zf9a2PP8u5ndqzGnrnzTG
+SOGxz5tXPcA543Me7Q6QaQE542Iz078sTQH84YMd5WvTcvHeSLrMs5+SK3A
+SHaztvn15RjnlDpuqRs0XycH9IV36HwMwvzO1/375jztRLnhVQvqnjuUor5
QY/4ZG+z7mF+0OvlYmlWZZgfJFXktXV3Jc4HmaXUpro5E/OCagLtD5D/PpAP
JFOgk366HPOBTD/MPlVYgXlAA/srvntUYn7nlMlcxe5KnP/hE/c+Vph9vQK/
EdMZl7l6DP0G1OA3oAa/ATX4DajBb0ANfgNq8BtQg9+AGvwG1Fz/53//+32n
/3195b/zdfh6OO+GGs67of7f9//S/1+98N95IrwO50f///eL/Pt5//v+b3+/
X7rUMewBt0mVGH17r/L9O7+MStcaaHo0t0n8qw3tlkf7vp76t9YslUqpU5Ms
+r/vz0WH3+d/7//27/tPL+1515/jbydKt/U7sM47yKC0YeT+oCLvPPqBnW+W
/AowLv1UddOX35X77+vqf38+/7+f97+fP6T/v1qhlPp4c31cOv78orjrDTFF
Yv/e/+Ln8pTXlvx/31/n7+/H+vfvPXFP4mHUSfzvVVA/XJWVge+3qaTPxpzj
9Z92a5sjLuLr+zZkFtZcxjpt8uiZWPbvU1Rku/219vp/vtBkk6xt+XHTf69H
N7t4bgtGf/hZSOHcpx9YH6HebhL/gV8/0lN2vnwxvr9Otaal1Th+/UEvec/B
71gXNMzb0N6G3/9rZ0b8hYX4/Zrf3EvmnMOvl1iYa3HvKX59xM+KOdt51pf+
P4YHi40=
          "], {{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               GrayLevel[0.5], 
               Dashing[{0, Small, Small, Small}]], 
              LineBox[CompressedData["
1:eJwV1Hl4DgQcB/BhY8ZsYwfbsM3MqpFrOkRFUgnbOhyRLEnX1q0L0UGlQhdC
932SEiWUI0cI3fdBd0g3xef3x+f9ft/v9jz77X3f5y2srq2qqZOQkHCKh8h8
D9/Jl7ieAXThMHtdNur3cx51aWn7Xi5kIgPpyuH2emzS53A+9Whl+0G+zCQq
KOcIeyKb9blcQCKtbT/KV7iBSrpxpD2Jd/V5XEgSBbaf5CJupCpup7u9Plv0
B7iI+hTafpavclO8DnE7R9kbsFV/kBoaUGT7RS7mZk6N2+lhT2ab/hC1JNPG
9qtcwmROi9vpaW/Ie/rDXExDim075WtM4fS4naPtKbyvP8IlpNDWtku+zi0M
its5xt6ID/RHuZRGlNh2y6XcyuC4nWPtjflQf4zLaEw722/yDW5jSNxOL3sq
H+mPczmplNr2yGVMZWjcTm97Ez7Wn+AKmnCQ7Xe5nNs5I27nOHsan+hPciVp
HGz7Q67gDobF7fSxp/Op/hRjSecQ25/yTe5keNzO8fYMPtOf5ioyKLP9Jd9i
GmfG7fS1N+Vz/RmupintbX/LlUxnRNzOCfZmfKE/yzU0o4PtH7mKGZwVt3Oi
PZMv9ee4lkwOtf0rV3MXI+N2TrJn8ZX+PNeRRUfbXrmGu6mO2+lnz+Zr/QXG
kU0n2z75NvdwdtzOyfYcvtFfZDw5dLb9J9dyL6PidprTxc/+l+u4j3PiTlrQ
1c/2y/XMZHTcRC7l8cXDBjGLc+Pvk0c+LWlFawoopMaHrUi2oZi2lNCO0vhc
xWcl3n9q/W5ZvFfx+sdrGq9T/O90i+893tFnM4b+wdacb/X5TGCA5y3Yri9g
oJ7LDr1C5lFJZ88PACCaj8o=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$9241#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1HfclXMYwOFTSbukQUOJEilFO6OMokV7R4O009ZOmyaiQVIkq6W9d6KU
9iTae9BUxnV//HF9nuf+vuv+nXOeN0+zDjXaJ0kkEn2SJhI13Jx07U0W5psH
kS1ZIjHDXIHj5pqcSvr/z2RlgXkww3xfdmZqz3NCq0V97bS5L3exUBvC23oO
ZmkvcFKrTQPtjLkfd7NIG8o7ek5maxU5pdWhoXbW3J9sLI5dGK7fwxytEqe1
ujTSzpnfIjtLYhdG6Ln4TqvMGa0ejbXz5gHkYGnswkg9N3O1KpyNs/KydsE8
kJwsi10Ypd/LPK0q5+KsvKJdNA/iHpbHLozW8zBfe5HzcVaaaJfMg8nFitiF
Mfp9LNBe4kKclabaH+Yh5GZl7MK7+v0s1KpxMc5KM+1P81DuZVXswnt6XhZp
1bkUZ6W5dtk8jDysjl14X8/H4vhs8UeclVe1K+a3uY81sQtj9QdYotXkzzgr
r2lXze9wP2tjFz7Q87NUq8XlOCsttGvm4eRlXezCh/qDLNNqcyXOyuvadfMI
8rE+dmGc/hDLtTpcjbPSUrthHskDbIhdGK8XYIVWl2txVlppf5lHkZ/vYxcm
6A+zUqvH9TgrrbWb5tE8yMbYhYl6QVZp9bkRZ6WNdss8hof4IXbhI70Qq7UG
/BVnpa32t/ldCvBj7MLH+iOs0RpyM85KO+0f83s8zKbYhUl6YdZqjbgVZ6W9
9q/5fQqyOXbhE70I67TG/B1npYOWYKxWiJ9iFyZrj7Jee5l/4qy8oSXhA+0R
tsQufKo9xgbtFf6Ns9JRS8qHWmG2xi5M0YryvdaEBO30TloyxpmL8HPswlSt
GBu1piQh/nl21m5jvPlRtsUufKYV5wetGUnpoHfRkjPB/BjbYxc+10rwo9ac
ZLyhd9VuZ6K5KDtiF6ZpJdmkvcptdNS7aSn4yFyMnbELX2il2Ky9RnI66d21
lHxsLs6u2IXpWml+0lrELuns4drZ197UUzHJXILdsQ9famXYor1OCrroPbTU
fGIuyZ7Yh6+0x9mqtSQlXfWeWhomm0uxN/bha+0JftZakYpuei8tLZ+aS7Mv
duEb7Um2aa1JTXe9t5aOKeYy7I9d+FZ7iu1aG9Lwpt5HS89U8+MciF2YoZVl
h9aWtPTQ+2oZ+Mz8BAdjF2Zq5dgZnzXS0VPvp93B5+Yn+SV2YZb2NLvis0Z6
eun9tYxMMz/Fr9oC8wscjNeQGdps8zPsjs8eGeitv6XdyRfmshzSFpor8ku8
pszU5pg7et+fdd0TnwHuYIm5Cr/FeenjeweYMzHdXI7l7l/iiPvffH2R+0r8
Gu8Bs7TvzM+xNz67rHRfnWPuM7LUfVV+d7/WtTY93a9yrRHPFsfN613rxrNA
X793oGvmeLb50tfXuNaKZyteT/MK12rxLHPUvM61TvwdP7vYtTKH4r1ntjbX
XJ598cxwJ/30QVoWvjI/w+F4zZinVWB/PC9kor8+WMvK1+ZnORKvQbwfDNHv
4hv9OY7G343XlaH63Xyrl+dY/A3ma89zIJ4zMrPM/CKH47PCavc1OeF+g2u9
+B/AQD//H4/lTAc=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$9241#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GWUlWUUgNFLd4OUtDQICihKt0hKt4RKp4KkdLegdKt0d0uHIqmEIg2C
0t3u98de3zznnuHcuWuGTM071ugQJRKJlIgaiRyKFonMihGJfMif0SOR/uTm
tfkvZl8Qi6VmdfnNfLYuwl96AHmI8KtZS2KzTNfjsP05uihn9UDyEoVDZq2I
w3JdnyP25+pi/K0H8TZRw22z1sRlhW7AUfvzdHHO6cHkI1q4bdaGeKzUDTlm
/wddgvN6CPmJHm6btSU+q3Qjjtv/UZfkgh7KO8QIt83akYDVujEn7P+kS3FR
D+NdYobbZu1JyBrdhN/tz9eluaSHU4BY4bZZBxKxVn/KH/YX6DJc1iMoSOxw
26wjiVmnm3LS/kJdlit6JIWIE26bdSIJ63UzTtlfpMtxVY/iPeKG22adScoG
3ZzT9hfr8lzTo3mfeOG2WReSsVG34Iz9JboC/+gxFCZ+uG32JcnZpD/jT/tL
9Udc12P5gAThttlXpGCz/py/7C/TFbmhx/EhCcNts668wRb9BWftL9cf868e
TxEShdtm3UjJVt2Sv+2v0JX4T39LURKH22Zfk4ptuhXn7K/UlbmpJ1CMJOG2
WXdSs1235rz9VboKt/REipM03DbrQRp+1m24YH+1rspt/R0lSBZum/UkLTt0
Wy7aX6OrcUd/T0mSh9tmvXiTnbodl+yv1dW5qydRihThtllv0rFLt+ey/XX6
E+7pyZTmjXDbrA/p2a07cMX+el2D+3oKZUgZbpt9Qwb26I5ctb9B1+SBnkpZ
UoXbZn3JyF7diWv2N+paPNTTKEfqcNusH5nYpzvzj/1NujaP9HTKkybcNutP
ZvbrLly3v1nX4bGeQQXShttmA8jCAf0lN+xv0XV5omfyEW+G22YDeYuD+iv+
tb9V1+OpnkVF0oXbZoPIyi+6K//Z36br80zP5mPSh9tmg8nGr7obN+1v1w14
rudQiQzhttkQsnMovP8Efr89b/men80a8kLPpTIZw32zoeTgN92d2/Z36Ea8
1POoQqZw32wYOTmse3DH/k7dmFf6B6qSOdw2G04ujuie3LW/Szfhtf6RamQJ
t81GkJujuhf37O/WnxLhJ7PqPPT1ON7hpH4rvBdfjyQPx3Rv7vv+PbopUZhv
9glZw3vRo8jLcd2HB/b36mZEZYHZU8+JFAq/+/qR53jeDT8DUzll/tzze2LG
9P9q+H7PGZ6xPbOFn8XXo4mu3w6fF1OIpU94/ZmvvyOGfi+8X8/p4e/Ka489
v6VA+BzMp3meNn/hOYnC4W/Ge9/n2ZxoLPR6TbKHz0GPIR+/677h57C/X7cI
74lFZrXIEe557YDZZ+H9sNisNjnD35LfrSdef8oznvOClxy0+3n4DFhitw65
wueqx5KfP3Q/nvh6AgU5o196TuaD8P79jDM943i+8u/+DwmQOdc=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$9241#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV0ddXyAEABeCfFw8ayCZR9i4jWckqM2Q1jSgkhWyisjJCEkqRmRUhkhHC
/+Xr4Tv38d5zbnRucVpRjyAIOunVMwgaOEUu61jKfEIIJYxwetOHvkTQj/4M
YCCDGMwQhjKMSIYTxQhGEk0MoxjNGMYyjvFMYCKHw4JgkpzMFBo5zU7Ws4wF
TOUBpewijWQSmUYsDzlDHhtIYSFPOUcB6azmFZc5wFbiaOIs+WzkLVXdG1nO
Cy5RRDt3yOY9N/nFMb5SRxLPOM8P9vGZWrrIoJUb/OQoHdzjL2t4zRU6OcgX
7vKHbXzkFr85wTfqmc4jytjNJ26ziXdc5wgreEklxeTwgWqOs4jnXKCQTFJ5
w1UOsZ0ZPKacPWxmJYuZ2d3l51kyntkkMIe5PKGCvWxhFUto5iL7yWItLVyj
hB20UcNJvnOff8zjP5HvU98=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$9241#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WW0VVUUBtBLt3SDSioS0t0IqJSgSHc3It2pIi3doWDQKI0B0t3dKt3d
OPePOfb5vrPuHeeucd54GZp2qtExSiQSKRs1EtkaMxKZFDsSycXeWJFIdzLx
RL9RV4en8lyqsk0/Wfc+++QeZOapfpOuLs/keVRju36KLjf75Z5k4Zn+b109
nsvf8wk79FN1eTgg9yIrz/WbdfV5If9AdXbqp+nyclDuzTu80G/RNeClPJ8a
7NJP1+XjkNyHd3mp36pryCt5AZ+yWz9Dl5/Dcl+y8Uq/TdeI1/KPfMYe/Uxd
AY7I/XiP1/rtusZE+ElXk736WXJBjsr9yU4k7ELXhCj8LH/OPvOz5UIckweQ
gyhhF7qmROUXuRb7zc+RC3NcHkhOooZd6JoRjYVybQ6YnysX4YQ8iFxEC7vQ
NSc6i+Q6HDQ/Ty7KSXkw7xM97ELXghgslutyyPz3cjFOyUPITYywC11LYrJE
rsdh8z/IxTktDyUPMcMudK2IxVK5PkfMz5dLcEYeRl5ihV3oWhObZXIDjppf
IJfkrPwV+YgddqFrQxyWyw05Zv5HuRTn5K/JT5ywC11b4rJCbsRx8z/JpTkv
f0MB4oZd6NoRj1/lxpww/7NchgvycAoSL+xC1574/CY34aT5X+SyXJS/pRDx
wy50HUjASrkpp8wvlMvxjzyCwiQIu9B15A1Wyc04bX6R/AH/yiMpwhthF7pO
JGS13Jwz5hfL5flPHkVREoZd6DqTiDVyC86aXyJX4JI8mmIkCrvQfUFi1sot
OWd+qVyRy/IYipM47ELXhSSsk1tx3vwy+UOuyGMpQZKwC92XJGW93JoL5pfL
H3FVHkdJkoZd6LqSjA1yGy6aXyF/zDX5O0qRLOxC143k/C635R/zv8qVuC6P
pzTJwy503UnBH3I7/jX/m1yZG/IEypAi7ELXg5T8KbfnP/Mr5SrclCdSlpRh
F7qepOIvuQOXzK+Sq3JLnkQ5UoVd6HqRmo1yjwTeD+dln1mtq8ZteTIfkDrs
Q9ebNGySO3HF/Br5E+7IUyhPmrAPXR/S8rfcmavm18rVuStPpQJpuebeOn0N
7snTqEg6rru3Xv8p9+XpfEj6sEddX9KxWf6CG+Y3yJ/xQJ7BLddfkTW8A+FZ
nIPIwA75nvNb3uPNsG9nP9LzmDFs0d9xfkMkjv8vzueMJ5rcJTyr6yG8JhNP
GUdU93e5/8D1SKLIOZwvmEB0+abn/t11TV7x0Pwj52hmur7t/Jp3eMZ34f0M
u3MOJiNPGMtO/X3nCLLzVngnnP3D72OrfNc5nGzh7yXszTmUzOwOO/M8f7j+
nEfyLCrxdnhXdAPC97JN7hqez/yfcq2wM3k2lckQ9uZed+/ZXec97vOAhzzi
L5+pHZ7f7ByqkDG8Y7qBvM12uRs3XQ8jC3vkh85R5OQlE4lhn4997/8Qg0YA

               "]]}, Annotation[#, "Charting`Private`Tag$9241#5"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.772079, 0.431554, 0.102387], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GO0VmkYgOGvpsm2XZMn27Y1k22bM9m2a2rsybZt27Zr6to/rvU+97Pf
s2qdtfdJ1bxLzc5hQqFQuLChUPhIodCyyKFQOZ6Zf6Qx+dln14mE7NfDiRDc
0eV5bv6JJhRgv11nEnFAjyBicEdX4IX5Z5pSkAN2XUjMQT2SSMEdXZGX5l9o
RiEO2nUlCYf0KCIHd3QlXpl/pTmFOWTXjaQc1qOJEtzRlXlt/o0WFOGwXXeS
cUSPIWpwR1fhjfl3WlKUI3Y9SM5RPZZowR1dlbfmP2hFMY7a9SQFx/Q4ogd3
dDXemf+kNcU5ZteLlBzX44kR3NHVeW/+izaU4Lhdb1JxQk8gZnBH1+CD+W/a
UpITdn1IzUk9kVjBHV2Tj+Z/aEcpTtr1JQ2n9CRiB3d0Lf43/0t7SnPKrh9p
Oa0nEye4o2vzyfwfHSjDabv+pOOMnkLc4I6uQ4jluiNlOaMHkJ6zeirxWK7r
EoYVuhPlOKsH8hXn9DTis0LXIywrdWfKc04PIgPn9XQSsFLX5wtW6S5U4Lwe
TEYu6BkkZJX+hnCs1l2pyAX9HZm4qGeSiNX6W75kje5GJS7q78nMJT2LxKzR
DQjPWt2dylzSQ8jCZT2bJKzVDYnAOt2DKlzWQ8nKFT2HpKzTjYjIet2TqlzR
w8jGVT2XZKzXjYnEBt2LalzVw/maa3oeydmgmxCZjbo31bmmR5Cd63o+Kdio
mxKFTboPNbiuR5KDG3oBKdmkmxGVzbovNbmhR5GTm3ohqdismxONLboftbip
R5OLW3oRqdmiWxCdrbo/tUnDVruWxGCbHkAd0rLNrhUx2a4HUpd0bLdrTSx2
6EHUI33w/4/mHXZmICOZyEwWsrLDz7QhNjv1YOpzS48hN7f1Yh6aJ1OIRzob
O81ticMu/dQ5nWLB+6rvOydSgPcs5IH9S+dsSgV/C1gSvPf2t51jg+8xSiiU
x/mOBcH7re94/tw8M/iedAnnRxYH76de4vkj85Tg+9SFnR9YFLzv+rHnr81z
g+9Ll3F+4ofgPfNsl7MdcXnLfHbbP3POoHjwTekHzkkU5KF+5ZxD6eBb1Hec
48jLXf3COYuSwb+lHzunUoQnOju7ze2Jxx49hAbc1ePJxz29lBzs0R2Iz149
lIbkJBe5yUNe9rrTkQTs08NoxD09gfzc18t4Yp5GUZ7qN855lCXkd7bUGdGZ
z7PPpu4UkA==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$9241#6"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.363898, 0.618501, 0.782349], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HfYzmUYBuCXZG8ZycjM3srem5C9ZVNW9t6rkK0QRdkqZO9VtszKyiiy
956dzx/n8TzX9d3fcf/e3/eSrmWXWp2jRCKRklEjkVhxIpHTcSORXiRns9yO
osSIF4nM05XlqjyF2JyRe5OCLXJ7ihHT/Pe6clyTpxKHs3If3mar3IHixDL/
g6481+VpxOVvuS8p2SZ/Qomw2/x8XQVuyNOJxzm5H++wXf6UkmG3+QW6ityU
vyI+5+X+pGKH3JFSYbf5hbpK3JK/JgEX5AGkZqfcidJht/lFusrclmeQkIvy
QNKwS+5MmbDb/GJdFe7IM0nEP/Ig0vKr3IWyYbf5Jbqq3JVnkZh/5cG8y29y
V8qF3eaX6qpxT/6GJFySh5CO3fJnlA+7zS/Tfch9eTZvcVkeSnr2yN2oEHab
/1FXnQfyHJLynzyMDOyVu1Mx7Db/k64GD+VvScYVeTgZ2Sf3oFLYbf5nXU0e
yd+RnKvyCDKxX+5J5bDb/HLdRzyW55KCa/JIMnNA7kWVsNv8Cl0tnsjzeJvr
8ije46Dcm6pht/mVuto8lb8nJTfk0WThkNyHamG3+V90dXgm/8A73JTHkJXf
5b58GHabX6Wry3N5Pqm4JX9ONg7L/agedptfravHC3kBqbktf0F2jsj9qRF2
m1+jq89LeSFpuCOPJQdH5QHUDLvNr9U14JW8iLTclceRk2PyQD4Ku82v0zXk
tbyYd7knjycXx+VB1Aq7za/XNSLCEl067rt/SW5OyIOpHXab36BrTBSW6tLz
wH0CefhDHkKdsNv8Rl0TorJMl4GH7hPJy5/yUOqG3eY36ZryBj/qMvLIfRL5
+EseRr2w2/xmXTOi8ZMuE4/dJ5Ofk/Jw6ofd5rfomvMmP+sy88R9CgU4JY+g
QdhtfqvuY6KzXPceT92nUpDT8kgaht3mt+laEIMVuiw8c5/G+5yRR9Eo7Da/
XdeSmKzUZeW5+3Q+4Kw8msZht/kdulbEol/4fuuz8UL+ikL8LY+hSdhvZqeu
NbFZpcvOS/evKcw5+XOahv3md+naEIfVuhy8cp9BEc7LX9As7Db/q64tcVmj
y8lr95kU5YI8luZht/nfdO2Ix1pdLiL6WXIxLsrjyKs7IHciSfg7hGfR7XZv
T3zW6XITRf+NXJx/5PG0CM+i36PrQALW6/IQVT9bLsG/ckH5sPtn4bsv55MP
uncOn8H9D+db4W/iftRZxtk9/L7zpLOcs2X4LM69cinnJ+F9OU84yzoThu+A
84iztLNbeF7nX84Nfje/+yH3LuE9uP/pTBr+pu7HnD3Cvxlzb8hz3EtySZ5A
q/Ae9Pt0n5KIjeFzEE3/bXgmLssTaR328aaffReeh//kSbQJ/yfqC4T3wvt8
QCEKE93P5oZ3wBV5Mm3De9Xv13UkMZt0BXS/u3clWfi+ycedPcPzu59ylncW
Mfs/MpAlhw==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$9241#7"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Dashing[{0, Small, Small, Small}]], 
              
              LineBox[{3429, 3436, 3434, 3437, 3415, 3421, 3398, 3410, 3399, 
               3400, 3401, 3402, 3403, 3404, 3405, 3406, 3411, 3407, 3414, 
               3412, 3435, 3433}]}, 
             Annotation[#, "Charting`Private`Tag$9241#8"]& ]}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {2.302585092994046, -55.95518941241704}, 
         FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{90, 10}, {50, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{2.3025852339686432`, 
            9.210340231001586}, {-55.95518941241704, -49.81587223278461}}, {{
            2.3025852339686432`, 
            9.210340231001586}, {-55.95518941241704, -49.81587223278461}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {2.302585092994046, -55.95518941241704}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"strain sensitivity (NSR)\\n/ \\!\\(\\*SuperscriptBox[\\(Hz\\), \
\\(\\(-1\\)/2\\)]\\) (log scale)\"", TraditionalForm], ""}, {
            FormBox[
            "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"", TraditionalForm], ""}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{90, 10}, {50, 1}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{
             Log[10], 
             Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
            All}], PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"lossless conventional\"", 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.  ", "0   ", "0   ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0   ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0.1 ", "0   ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0.1 ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0   ", 
              "0.1 ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.5 \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0   ", 
              "0   ", "0.5 "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           "\"5\[Cross]\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-25\\)]\\)\\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) target \
for 1\[Dash]4 kHz\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #8}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                   ",", #7, ",", #8}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.835822569610474*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"d643d1e8-f148-4162-b69b-db0ae9c2774c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]Ratio1", "=", "0.85"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"values", " ", 
     RowBox[{"are", ":", " ", "\[Chi]"}]}], ",", " ", "Tla", ",", " ", "Tlb", 
    ",", " ", "Tlc", ",", " ", "Rpd"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valsList1", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[Kappa]"}], ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Chi]Ratio0", " ", "\[Kappa]"}], ",", "0", ",", "0", ",", 
       "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Chi]Ratio0", " ", "\[Kappa]"}], ",", "0", ",", "0.1", ",", 
       "0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotsWLC", "[", 
  RowBox[{
  "valsList1", ",", 
   "\"\<lossy optical sWLC \
model\\n\[Kappa]=10\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\), \
\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\) is SRM coupling rate\\nparameters \
of LIGO Voyager\\nno radiation pressure effects\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.835822220577248*^9, 3.8358222893663177`*^9}, {
  3.835822644864747*^9, 
  3.8358226458036823`*^9}},ExpressionUUID->"30cdbdf9-7928-4a1e-a312-\
8e5c8c6cbcf0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              GrayLevel[0.5], 
              Dashing[{0, Small, Small, Small}]], 
             LineBox[CompressedData["
1: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
TwasOv6r3HaeJffbK/8h/z/2ibzV
              "]], 
             LineBox[CompressedData["
1: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
xwV+emGt8pkr+v8BK2AZWg==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$11235#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$11235#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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

              "]]}, Annotation[#, "Charting`Private`Tag$11235#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
zzqxXw==
              "]]}, 
            Annotation[#, 
             "Charting`Private`Tag$11235#4"]& ], {}}, {{}, {}, {}, {}, {}, \
{}}}, {}, {}}, {Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> {2.302585092994046, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{90, 10}, {1, All}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{2.3025852339686432`, 
            9.210340231001586}, {-2.8929823996598612`*^-15, 
            1.9286549331065735`*^-15}}, {{2.3025852339686432`, 
            9.210340231001586}, {-2.8929823996598612`*^-15, 
            1.9286549331065735`*^-15}}}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {2.302585092994046, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"shot noise transfer function,\\n|R| / dB (20log10)\"", 
             TraditionalForm], ""}, {"", 
            FormBox[
            "\"lossy optical sWLC \
model\\n\[Kappa]=10\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\), \
\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\) is SRM coupling \
rate\\nparameters of LIGO Voyager\\nno radiation pressure effects\"", 
             TraditionalForm]}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{90, 10}, {1, All}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{
             Log[10], 
             Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
            All}], PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}],FormBox[
        FormBox[
         TemplateBox[{"\"lossless conventional\"", 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.  ", "0   ", "0   ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0   ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0.1 ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False]}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              GrayLevel[0.5], 
              Dashing[{0, Small, Small, Small}]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$11310#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
laoHHlTwo2o/oE0awf9fVdjZ
              "]]}, 
            Annotation[#, "Charting`Private`Tag$11310#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
4bdt7jCB/wBtbL4G
              "]]}, 
            Annotation[#, "Charting`Private`Tag$11310#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
vfqROxXo7pTvZ0f+DykAuTI=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$11310#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {2.302585092994046, 51.609748683238664`}, 
         FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{90, 10}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{2.3025852339686432`, 9.210340231001586}, {
            51.609748683238664`, 55.88712328557511}}, {{2.3025852339686432`, 
            9.210340231001586}, {51.609748683238664`, 55.88712328557511}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {2.302585092994046, 51.609748683238664`}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"signal transfer function,\\n|T| / [?] (log scale)\"", 
             TraditionalForm], ""}, {"", ""}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{90, 10}, {1, 1}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{
             Log[10], 
             Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
            All}], PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}],FormBox[
        FormBox[
         TemplateBox[{"\"lossless conventional\"", 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.  ", "0   ", "0   ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0   ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0.1 ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False]}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
//I8pSG2af/yPG+PWdb/y/NMGzVPI415nse6343+5XlG91Tl/8vz2J7zlP+X
57GZGelAGvM8r3hF7qP8xzyP4TO/98i/MM/DLXEoGuU/5nn2H8iIR/0vzPNU
HvuogvIf8zxNM3rDaP6LeR55z6gYNP/FPI/b5m2anhSS5+ntEPyG5r+Y5+mK
dqxG81/M84xMbDSKopA8D8eNE/4ZFJLnObSugVZGIXmeRV0DiZ0Ukudxf16T
zPEPz5OzIGO7+T88j9v6b8/S/uF5rs27Oc/LkjxPZG26e4ocyfOE83YKbviH
5+Gzy21ypJE8j8MO368V8iTPk5Tf5eKrSPI81keNygeWkDxP2LrtDlPKJM/j
euTHiu9qJM9jVPv8VZkWyfO4uciwvFpF8jy3ifXvRteTPE/YJj39c9Ykz+NT
HiPn7EzyPIPCfW3X3UmeR/o6Iyt5E8nziDrItNmokDzPWrlZrS9T5Ptba30o
lJwnJM/TUb+mpTSD5HlGF0ym6/mRPM9dmZeb6OYkz2MgvyDxqCzJ8+z45dYa
MUXyPCwFxWt5m0ieJ6aVJfpfnmcL9da1f3melWrF3UhjnmdSLEr6X57nDMu1
ff/yPOubWt8ijXmed/viDv3L8yxkHF73L8/Tyv/FAuUD5nk+6V4oRP7I5Hlk
6EfRfg7zPOLKQw+RP2Kep4J/7SDqr2Gep3G7jqATheR5krwss9F8GfM8Bqe6
gDeF5HkM3mvNoPky5nn8W9q+HKeQPM/A2geaCRSS55GYsDMppJA8j3Qa4HhE
IXmeS4OtcaMUkufZd7UlffE/PM/I0NN23394nmH5HrEGWZLnudww5m3yD89j
ZvHb85McyfNolqeGNlBJnqe9Yur7DI3keZ6ybFkarkDyPNT7UbsTF5M8j071
tuFNS0me53lxsVqbKsnzWPfP91/QIHke3R9ZdC49kueZ8DV/g/wR8zxLO4+Z
xliSPM81znPT1+1JnofX9uTnzm0kz7Oz7/yuFS4kzyOa8637rhHJ89CWGPos
FCL/fwyK/6keKu4n+R2/8YIT//I70lwKuf/yO3KOp5v/5Xc2dF3g+pffOfPr
kMO//A7HdAPjT3/rL7/ztWOf5b/8jpdAOde//E4YRynLv/xO9tDUn34w5nc8
TNf8QvUc8zuTwpxLULxifudn4Nw8queY31GuefkN7ecwv3PAo5cNzeswv/N5
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
Ezg=
          "], {{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               GrayLevel[0.5], 
               Dashing[{0, Small, Small, Small}]], 
              LineBox[CompressedData["
1:eJwV1HeczwUcBvALxw3zBs46Z5yrrsJZiRZacrimSrbK3kQSLWW0CynaOyoU
JSOrQYOUVVYZoWggivfnj/c9zz2/e73uc9/73eV0H1g04IyEhIRrfIis5sMe
+QH3UEgBTe3FWKc/yx0Uo7ptr5zHeNrTiGb24nytz6QPxalh2yfnM4EONOZ8
ewm+0Z+jLyXItu2XC7iXjjShuT2Rb/Xn6UciNW2/yQ+5j6K4nQvsJflOn0V/
SpJjOyA/4v54DnE7LeylWK/PZgClqGU7KBfyANfG7bS0J7FBf4GBJFHbdkgu
4kGui9u50J7M9/qLDCKZOrbf5cdM5Pq4nYvsKWzUX2IwKdS1/SE/4SFuiNu5
2J7KD/rLDCGVXNthuZiHuTFu5xJ7aX7UX2EopalnOyI/ZRKd4nYutZdhk/4q
wyhDnu1PuYTJ3BS308pels36awynLGfa/pJLmcLNcTut7eXYor/OCMpxlu1v
uYyp3BK308Zenq36G4ykPGfb/pHLeYTOcTuX2SuwTX+TUVQg33ZUfsaj3Bq3
c7k9jZ/0t7iTNM6xHZMreIwucTtX2NP5WX+b0aRzru24XMnjdI3budKewXb9
HcaQwXm2f+UqnqBb3M5V9kx26O9yF5nUt52Qq3mS7nE7be0V2anPYSwVaWA7
KdfwFD3idq62V2KXPpe7qURD23/yc56mZ9xOZQq89r/8gmfoFXeSRSOvnZJf
Mo3ecRNVaBz/ePhKTOe2+P5UpRrVqUE2NclhiD+uWrI2dahLLvXIi/dVvFfi
989QX5sfv6t4/vFM4znFz06T+L/HWn0Gt9Mu2CqzW3+PcRT6PItf9Pdpr1fh
V72DrEpHGvr8NB+Qj8g=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$11388#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1HfcjXUYwOFjZUQ2IQmFKDuUWaFUslcqo0KUmZGdnV1WS7Yiq+y9NVRW
ZoVshULL7ro//XF9nuf+vo73/p1znjdvyw512ydJJBJ9kiYSdd2cce1NVpaa
B5EjWSIx31ydU+Z6nE36/2uyscw8mGH+XU4WaE9wWqtPE+1Xc1+ys1wbwtt6
LhZqT3JGa8Bz2m/mftzJCm0ow/W7WKTV4KzWkKbaOXN/crAydmGEnpvPtaf4
VWvE89p581vkZFXswkj9br7QnuY3rTEvaBfMA8jF6tiFUXoeFmvPcC7Oyova
7+aB3MWa2IXR+j0s0WpyPs5KM+0P8yByszZ2YYyel6Xas1yIs9Jcu2gezN2s
i10Yq+djmVaL3+OstNAumYeQh/WxC+/o+Vmu1eaPOCsttcvmodzDhtiFd/V7
WaHV4WKclZe0P83DyMvG2IVx+n2sjO8Wl+KsvKz9ZX6bfGyKXRivF2CVVo/L
cVZe0f42Dyc/m2MXJugFWa3V5884K620f8wjuJctsQsT9UKs0RrwV5yV1tq/
5pHcx9bYhUn6/azVGvJ3nJU22hXzKAqwLXbhPb0w67RG/BNn5VXtqnk0Bfky
duF9vQjrtcb8G2elrXbNPIZCfBW78IH+ABu0JlyJs9JOu24ey/18Hbvwof4g
G7XnuBpn5TXthvkdCvNN7MJHelE2aU25Fmflde2m+V2KsD12YbJejM3a81yP
s9Jeu2UexwN8G7vwsV6cLdoL3Iiz0kFLMF57kO9iF6ZoJdiqvcjNOCsdtSRM
0IryfezCVK0k27Rm3Iqz0klLykStGDtiF6ZppfhSa06C1/XOWjImmYuzM3Zh
ulaar7QWJCH+eHbRkvOeuQS7YhdmaA/xtdaSpHTQ39BS8L65JLtjF2ZqZfhG
e4lkdNS7arfxgbkUe2IXZmll2a69THI66d20lHxoLs0PsQuztXJ8q71CCjrr
3bVUfGR+iL2xC59oD/Od1oo3UtnDtYuf9dBTM9lchn2xD59qj/C91pqU8Tr9
TS0NH5vLsj/2YY5Wnh1aG1LRVe+p3c4UczkOxD7M1SqwU3uV1HTTe2lpmWp+
mIOxC59pFdmltSUN3fXeWjqmmR/hUOzCPK0Su7V23E4PvY92B9PN5fkxdmG+
Vpk92muk5U29r5aeGeYK/BS7sECrwg/xXSMdPfV+WgZmmivyc+zCQu1R9sZ3
jTvopffXMjLLXInD2jLzk/wU7yHztUXmx9gX3z3S01t/S8vEbHNljmjLzTX4
Od5TFmifm7v63B933R/fRzKwyvwMR+O89PFvB5gz84m5Cmvd1+K4+6N+vsL9
UxyOz4CF2hfmqhyI7y7r3dfhpPuMrHZfk1/cb3ZtQE/3G1zrxrPFKfNW10bx
LNDX/zvQNUs823zq55tc68ezFe+neZ1r7XiWOWHe4towfo/XrnR9miPx2bNI
W2yuxsF4ZshEP32QlpU55sc4Fu8ZS7TqHIrnhcz01wdr2Zhrfpzj8R7E58EQ
PTuf6VU5Eb833leG6ncyT6/GyfgdLNWe4Md4zsjCGvOzHIvvChvd1+O0+22u
jeNvAAO9/j+KP0wF
               "]]}, 
             Annotation[#, "Charting`Private`Tag$11388#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW0lGUUgNGhWwQkpDukUZCQVroRAUE6BOkUFUFpFKS7lJYQBaQEpbtT
ujul2/3+2Oub58y5nrmzLmZo1rFWhyiRSKRk1Ehkd7RIZHqMSKQoJ6JHIt+R
k9fmO81aEYtFZnXZYz5DF+Ok/p5cRNhl1prYLNb12Gv/Z/0Bp3Q/chOF3Waf
E4ffdH322f9FF+e07k8eoobbZm2IyxL9Kfvtz9QlOKMHkJdo4bZZW+Lxu27A
AfuzdEnO6oHkI3q4bfYF8flDN+Sg/dm6FOf0IPITI9w2a0cClurPOGR/ji7N
eT2YAsQMt83a8wbLdCMO25+ry3BBD+FdYoXbZh1IyHLdmCP25+myXNRDeY/Y
4bZZR97kT92Eo/bn6w+5pH+gIHHCbbNOJGKFbsox+7/qj7isf6QQccNts84k
ZqVuxr/2F+hyXNHDeJ944bZZF5KwSjfnuP2FujxX9XAKEz/cNuvKW6zWLThh
f5GuwDX9E0VIEG6bdSMpa3RLTtpfrCtyXY+gKG+E22bdScZfuhWn7P+mK3FD
j6QYCcNtsx4kZ61uzWn7S3RlbupRfMCb4bZZT1KwTn/OGfu/6yrc0qMpTqJw
2+xL3uZv3Yaz9v/QVbmtx1CCxOG2WS9S8o9uyzn7S3U17uixlCRJuG32FalY
r7/gvP1lujp39ThK8Va4bfY1qdmg23HB/nJdg3t6PKVJGm6bfUMaNur2XLT/
p67Jf3oCZUgWbpv1Ji2bdAcu2V+ha3FfT6QsycNts29Jx2bdkcv2V+raPNCT
+JAU4bZZH9KzRXfiiv1V+mMe6sl8xNvhtllfMrBVd+aq/dW6Do/0FMqRMtw2
+46MbNNduGZ/jf6Ex3oq5UkVbpt9Tya2665ct/+XrssTPY0KpA63zfqRmR26
Gzfsr9X1eKqnU5E04bZZf7KwU3fnpv11uj7P9AwqkTbcNhtAVnbpHtyy/7f+
lOf6ZyqTLtw2G0g2duuesfG87Wf+MWvAC/0LVUgf7psNIjt79Jfcsb9eN+Sl
nklVMoT7ZoPJwV7di7v2N+jPeKVnUY2M4bbZEN5hn/6Ke/Y36ka81rOpTqZw
22woOdmvv+Y/+5t0YyLMMavBQ69HkJ+jOnP4LF7/QC4O6G+47+c36yZEYa5Z
TbKEz6J/JDcHdW8e2N+imxKVeWZPPcdQMPzt60eeIykQfgcmccz8uec4Ysb0
/9Xw855TPWN7Zg2/i9fDiK7zhO+LicTSh7z/zOuxxNCFwuf1nBL+XXnvseco
3g3fg/lkz3/NX3iOp3D4N+Ozb/VsRjTme7822cL3oIeTl8O6T/g97G/TzcNn
4lezj8ke7nlvu1mL8HlYYFaHHOFv0d/WE+8/5RnPecFLdthtGb4DFtr9hHfC
96p/Ih9HdF+eeD2a9ziuX3pOoEj4/H7HaZ5xPF/57/4PBlY51Q==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$11388#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV0nfcDmQUBuAXGZmhsldmRvbeny3JnpWRPcvee1M2GamsIoUQEtll772T
vZW9up4/rt957vs7fK/jzdC8c61O0SKRSFT0SCRurEjkZOxIpAtJ+E1uTQli
xolEvtaV5JI8iXickruSlHVyG0oSy/4cXSkuy5OJz2m5G2/yu9yWUsS2/42u
NFfkKSTgjNydt1gvt6M0cex/qyvDVXkqCTkr9+BtNsjtKcPr9r/TleWaPI1E
nJN7kow/5A6UJa79uboorsvTeYPzci+Ss1HuSFS4hf15unLckL8iMRfk3qRg
k9yJcuEW9ufrynNTnkES/pb7kJLNcmfKh1vYX6CrwC15Jkm5KPclFVvkz6gQ
bmF/oa4it+VZvMk/cj9Ss1X+nIrhFva/11Xijjybt7gk9ycN2+QuVAq3sP+D
rjJ35a95m8vyANKyXe5K5XAL+4t0VbgnzyEZV+SBpONPuRtVwi3sL9ZV5b78
Dcm5Kg8iPX/J3akabmH/R937/Ct/SwquyYPJwA65B++HW9hfoqvGf/J3pOS6
PIR32Cn3pFq4hf2fdB/wQJ5LKm7IQ8nILrkXH4Rb2P9ZV52H8jxSc1MeRiZ2
y72pHm5hf6nuQx7J80nDLXk4mdkj9+HDcAv7y3Q1eCwvIC235RFkYa/clxrh
FvaX62ryRF5IOu7II8nKPrkfNcMt7P+iq8VT+XvSc1ceRTb2y/2pFW5hf4Wu
Ns/kH8jAPXk073JAHkDtcAv7K3V1eC4v4h3uy2PIzkF5IHXCLeyv0tXlhbyY
jPwrjyUHh+RB1A23sP+rrh4v5R/JxH/yOHJyWB5MvXAL+6t19XklLyEzD+Qv
yMUReQj1wy3sr9E1IMJPuiw89P6S9zgqD6VBuIX9tbqGRONnXVYeeY8nN8fk
YTQMt7D/m64R0Vmqy8Zj7wnk4bg8nEbhFvbX6RoTg2W6d3niPZG8nJBH0Djc
wv7vuo94jeW67Dz1nkQ+Tsoj+Sjcwv563cfEpHf4fuhz8EyeTH5OyaP4ONzD
zgbdJ8RihS4nz72nUIDT8mg+Cfew/4euCbFZqcvFC++pFOSMPIYmvMdL3TQK
cVYeS1Ny80o3ncKck8fRLNzR79moa0ocVunyENF/JRfhvJxP3undLnwHwmeR
t3m3JEH4nfJesxPNw73lTd7NKO59yHw9/Du9d5vlzQ5mafOYWSl8R8NnNf+U
y5mtzZLmEbOimSh8HnO/WcH8zCxjHjcrm3n9+WjmDDnKLGoWMw+aF/wsv/cu
7/aU8j4avp/hdt7bvVtRwvuwmTDcynuf2ZlPw3dC3hz+fcQN/wfyHrMjq8Pd
5L+82/BG+N7ooutmhs/B3/J4WoTvin5L+HuJx5rw+YihnxVuxkV5Ai0pQC8/
K2gWojBFKEoxXvOz2eHz8488kVbhO6bfqmtBfNbq8up2eLclMUXlA+bnlPU+
YVYxi9v9H7IbG3w=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$11388#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Dashing[{0, Small, Small, Small}]], 
              
              LineBox[{2153, 2160, 2158, 2161, 2139, 2145, 2122, 2134, 2123, 
               2124, 2125, 2126, 2127, 2128, 2129, 2130, 2135, 2131, 2138, 
               2136, 2159, 2157}]}, 
             Annotation[#, "Charting`Private`Tag$11388#5"]& ]}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {2.302585092994046, -55.95518941241704}, 
         FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{90, 10}, {50, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{2.3025852339686432`, 
            
            9.210340231001586}, {-55.95518941241704, -51.609748683238664`}}, \
{{2.3025852339686432`, 
            9.210340231001586}, {-55.95518941241704, -51.609748683238664`}}}},
          DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {2.302585092994046, -55.95518941241704}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"strain sensitivity (NSR)\\n/ \\!\\(\\*SuperscriptBox[\\(Hz\\), \
\\(\\(-1\\)/2\\)]\\) (log scale)\"", TraditionalForm], ""}, {
            FormBox[
            "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"", TraditionalForm], ""}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{90, 10}, {50, 1}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{
             Log[10], 
             Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
            All}], PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"lossless conventional\"", 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.  ", "0   ", "0   ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0   ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Kappa]=0.85; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0   , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0   , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0   \"", 
             StringForm[
             "\[Chi]/\[Kappa]=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.85", "0   ", "0.1 ", 
              "0   ", "0   "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           "\"5\[Cross]\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-25\\)]\\)\\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) target \
for 1\[Dash]4 kHz\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.835822571004856*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"a554ce93-4bc4-4ca3-a8db-c5719a33512f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"to", "-", 
    RowBox[{"do", ":", " ", 
     RowBox[{
     "manipulate", " ", "and", " ", "optimisation", " ", "need", " ", "to", 
      " ", "be", " ", "reworked", " ", "for", " ", "the", " ", "new", " ", 
      RowBox[{"plotsWLC", "[", "-", "]"}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plotsWLCPDLossy", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0", "\[Kappa]"}], ",", "0", ",", "0"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"r", " ", "\[Kappa]"}], ",", "0", ",", "0"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"r", " ", "\[Kappa]"}], ",", "0", ",", "0.5"}], "}"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"r", " ", "\[Kappa]"}], ",", "0.1", ",", "0"}], "}"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"r", " ", "\[Kappa]"}], ",", "0.1", ",", "0.5"}], "}"}]}], 
        "}"}], ",", 
       "\"\<lossy optical sWLC model\\n\[Kappa]=10\!\(\*SubscriptBox[\(\
\[Gamma]\), \(R\)]\), \!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\) is SRM \
coupling rate\\nparameters of LIGO Voyager\\nno radiation pressure \
effects\\nconventional detector is lossless\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"r", ",", "0.9"}], "}"}], ",", "0", ",", "1"}], "}"}]}], 
    "]"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.835666711002573*^9, 3.835666736766819*^9}, {
   3.835666839686819*^9, 3.835666843017729*^9}, {3.835666955197446*^9, 
   3.8356670115740643`*^9}, 3.835733855181929*^9, {3.835734413910231*^9, 
   3.835734419674673*^9}, 3.835752894040141*^9, {3.8358219804029503`*^9, 
   3.835822009584977*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"9ed71beb-f447-479b-9bbd-1134bf4c43f0"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"copying", " ", "\[Mu]tric0", " ", "code", " ", "from", " ", 
     RowBox[{"degIntSqz", ".", 
      RowBox[{"nb", " ", "--"}]}], " ", "to"}], "-", 
    RowBox[{"do", ":", " ", 
     RowBox[{"unify", " ", "workflow", " ", 
      RowBox[{"and", " ", ".", 
       RowBox[{"nb", "'"}]}], "s"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f0", ",", " ", "f1"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", " ", 
       SuperscriptBox["10", "3"]}], ",", 
      RowBox[{"4", " ", 
       SuperscriptBox["10", "3"]}]}], "}"}]}], ";", 
   RowBox[{"(*", "Hz", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ASDShCrit", " ", "=", " ", 
    RowBox[{"5", " ", 
     SuperscriptBox["10", 
      RowBox[{"-", "25"}]]}]}], ";", 
   RowBox[{"(*", 
    SuperscriptBox["Hz", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}]], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ShCrit", "=", 
    SuperscriptBox["ASDShCrit", "2"]}], ";", 
   RowBox[{"(*", 
    SuperscriptBox["Hz", 
     RowBox[{"-", "1"}]], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]tric0", "[", "fnSh_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"f1", "-", "f0"}]], 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             RowBox[{"fnSh", "[", 
              RowBox[{"2", "\[Pi]", " ", "f"}], "]"}]], "-", 
            FractionBox["1", "ShCrit"]}], ",", "0"}], "]"}], 
         FractionBox["1", "ShCrit"]], ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", "f0", ",", "f1"}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"print\[Mu]tric0", "[", "fnSh_", "]"}]}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<For \!\(\*SubscriptBox[\(S\), \(h\)]\)(\[CapitalOmega]) given \
by: ``\\n--> \[Mu]tric0=`` (unitless)\>\"", ",", "fnSh", ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{"\[Mu]tric0", "[", "fnSh", "]"}], "]"}]}], "]"}], "]"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"end", " ", "of", " ", "copied", " ", "code"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"reduSh0", "[", 
        RowBox[{
         RowBox[{"\[CapitalOmega]_", "?", "NumericQ"}], ",", 
         RowBox[{"r_", "?", "NumericQ"}]}], "]"}]}], ":=", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{"\[CapitalOmega]", ",", 
           RowBox[{"r", " ", "\[Kappa]"}], ",", "0", ",", "0"}], "]"}], "2"], 
        "\[IndentingNewLine]", 
        RowBox[{"optiFn0", "[", 
         RowBox[{"r_", "?", "NumericQ"}], "]"}]}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Mu]tric0", "[", 
          RowBox[{
           RowBox[{"reduSh0", "[", 
            RowBox[{"#", ",", "r"}], "]"}], "&"}], "]"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "because", " ", "of", " ", "zeroing", " ", "of", " ", 
            "\[Mu]tric0"}], ",", " ", 
           RowBox[{
            RowBox[{
            "optimisation", " ", "must", " ", "be", " ", "run", " ", "from", 
             " ", "a", " ", "non"}], "-", 
            RowBox[{"zero", " ", "starting", " ", "value"}]}]}], "*)"}], 
         "\[IndentingNewLine]", "optiVals0"}], "=", 
        RowBox[{
         RowBox[{"NMaximize", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"optiFn0", "[", "r", "]"}], ",", 
             RowBox[{"0.9", "<", "r", "<", "1"}]}], "}"}], ",", "r"}], "]"}], 
         "\[IndentingNewLine]", 
         RowBox[{"print\[Mu]tric0", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ASDhPDLossy", "[", 
             RowBox[{"#", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r", "/.", 
                 RowBox[{
                  RowBox[{"optiVals0", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ")"}], " ", "\[Kappa]"}], 
              ",", "0", ",", "0"}], "]"}], "^", "2"}], "&"}], "]"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "optimisation", " ", "finds", " ", "a", " ", "value", " ", "off", 
           " ", 
           RowBox[{"threshold", " ", "--"}], " ", 
           RowBox[{"interesting", "!"}]}], "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJzsnQe8FcX1x21JjInGFE23xBiTWGNMbLHFXmIvKPaOBRV77wXF3rsiIvYu
igUUFUQECxZQUREbYC8IqPPnO75z/3P37e7d3Vvf4/f9ZCNv7/adnZnzm3PO
LLjzfpvuPstMM8104OzT/2/TnQ5drUePnQ7fbO7pf2zR/cBue3Tfbdd1ux+0
2x679Vhu51mnr5xz+ranzDbTTNP/N5MTQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQIeP/9991OO+3kfvnLX7q55prLrbHGGm748OHNviwhhBBCCCGE
EEIIUUe+++47t+SSS7p5553XHXHEEe6www5zv/jFL7xGNGHChGZfnhBCCCGE
EEIIIYSoIyNGjHDvvPNO6e/rr7/ekbK0X79+TbwqIYQQQgghhBBCCNFoHnjg
Aa8LXXfddc2+FCGEEEKITsm0adPcNddc4y677DI3ZcqUZl+OEB6VSyGEELDx
xhv7WLKPPvqo2ZcihBBClDjwwAP9uMXvf//7hp/7yCOP9OcmzlqIWnD88cf7
MsXSo0ePZl+OEB6VyxkDtWlCiDQuuugiX0dcffXVzb4UIYQQooxa60Iff/yx
O/TQQ90iiyzifvSjH7m5557brbbaaq53797u22+/Ldu2mj70VVdd5ZZeemn3
4x//2I+7bLLJJu6FF16oyT00i6efftqPI/E8fvrTn/pchWeccYb76quvUvc7
++yzSzbn/fffX/bbgw8+WPqNd9PZ2WGHHUr3u9FGG9X02GPGjHFdu3b1+SNn
n312t/jii/tn/80339T0PK2GymX1qFzWjwEDBpSe7W9/+1uf5zUJngl22b//
/W/3k5/8xM0xxxxuqaWWcieffLL77LPPyra9+OKLS8dloT2bb775XJcuXdyj
jz4ae/wibdqvf/3rsvPMPPPMbp555nH/+Mc/fFs6adKksu232mqrsu35Jv/2
t7+5fffd17322muJ5+H62Z5vV4hW4K233nLbb7+9/wYon5Rjyif+lZ3xOvr2
7etmnXVWjQ0IIYRoSWqpC7333nvuT3/6U1mfNVxWWGGFMhuwqC603377lY45
yyyzlP5NH/+JJ55I3XfttdcuuyZs3FYAnYv+QtxzW2uttVL3De1vNLiQGc3+
fvHFF93yyy/vlllmmZrOAzt48GBfvuLezzrrrOOmTp1as3O1EiqXtaGVyuXI
kSPbbXvDDTfU7JoaTbdu3fw9WDl98sknY7djXGKDDTZIbJ9+97vf+WdjRHWh
6LLPPvu006BqoQtFlwUWWMC3rUZUF4pqV0k5S6QLfU+r9gFmNNCz0T/j+nKM
86Xpu82+jiJ16IUXXuiPvcceezTs3oQQQog8HHzwwTXThXbaaSd/rNlmm82d
eOKJfkz1oYce8n3lOeec04+Th+2h9aF/9atfZT7HoEGDSmOqjPuSq+Pdd991
66+/vl+/8MILp47xWJ/wX//6l1txxRXdjjvuWPGco98b606/92LX9ZLubp1e
27kNzt7R7dX7SHfniAHuO1eb9p35Kv7yl7+4008/3Y9dvf766378yvoco0aN
Stw3tL9ZnnrqqdJvM5r9XQ8+//xz/32YP0KfPn28/rjLLruUnu0JJ5zQ7Mus
CyqXrUvRcvnqq6/6uo8F/5da6EJvvPGG98GZa6653P7771/VsfJAe8K9Y2/t
ueee/l4OOuig2G2vvfba0nPZdtttfe5XdLXzzz/fLbjggn6ZOHFiaftQF8Jn
54MPPnD9+/f34xu2/rTTTis7R5E2zXQhrnvy5Mnuyy+/dGPHjnW9evUqaV17
7bVXaXvThWjDKAN8l8Sk/PGPfyy1v48//ni780gX+p5W7QPMaKy66qql94Cf
G758t9xyi/d5ZD3fa6teR946lPnprZ/Nv6kjGd9kznohhBAiZODAgb7NYDwZ
6JsecMABbv755/d9PGKxHnnkkXb73XfffX7M/mc/+5mPp8If/qyzzkr0Xbj9
9tt935327g9/+IM75phj3FFHHRWrC9HesZ4+aJRFF13U/7b33nuXrWdck/XY
jVHef/9934cNsT40/XHaYnz5F1poIffDH/7Q//fSSy9td5wtt9wy9hyffPKJ
t0n4jb57EtYnfPvttxO3MejvXT6or1uj59Zu9Z5d3Jqnb+O6XLSXW+/M7f3f
LOcMuLLicYrCNZr9MXTo0MTtzP4mfoT/brrppqXf4uxvdDNbh+0TQtmz326+
+ebSemwK7Bd0AeIb8FGgX4Mut9lmm/lYBspiXB5FfCWww37zm9/4d8v7pnxP
mDAh9n7s/Byba+X+uDfKLeelnBinnnpq4tg59l4azBuLLvr3v//dH5vys9JK
K3lf7xCOk/QezP+AbxSbrlFMmTbVrX1GV18mp337jft62hR341N3ud2vPtSX
T5Ybn7q7LudWuew85RL9vha6ELZ1eI9JcVa1Bt8gzocflo0Z0HakXSPtapSv
v/66XZsQ6kLhM6R9/c9//uPX824+/fTT0m9F2jTThYgZi2Lxh4x3GKYLLbvs
smXbcv3EVPMbtm6UIrrQ888/77beemsfo2jxNeTKirblBs8RrYxvkTg99uG+
0bWSNGT85zbffHOv79Hf+fnPf+7++9//ussvv9wfzyBO3N7HkCFD2h2Hb5Lr
5HfmAU+iI/UBQppZ59eal156qeSbE419PPbYY2PLd6teR6U6NGzXogt9dyGE
ECLEdCH6frRN9Fuj7ce4cePK9mGcIfw9jPWg3xPNLYFeFNcuWQxCLXQhdCnW
L7HEEon9xhDrQ//5z392a665Zuz14W8UYv2+e+65p93x6Fsm9a+NPH3Cqx67
0ff7trpwL/fQi4N9XwymfTPNXffEraV+4bgP36l4rCKccsop/lrpY6flCjH7
G38sxrzo44wePdr/Vkv7m3WLLbZY2ftZb731yv6OPvs77rijNO4WLaeMs2ED
R7HfsfVXX331dmWCXFVGz549/THDJYv9TbnCZk7qr4U2PjYK6/gmoqDX2j73
3ntv4vlqzajxo33Z2+bifXz52/GKHqXyyIIdM/6j9yofqAAql52nXNZKF1p3
3XXLrvOmm26q6nhZwceG8x1++OFer0EH5O/nnnuu3baM0fMbYyivvPJKxWMn
6ULAe7LfbrvtttL6Im1ami503HHH+d9o94wkXQhsnAd/2g8//LDst7y60K23
3lraJ7qgWcbpp8Qu2jbsi8Zjf/P9892HoOWhmdk1U/bDc6688spl26+xxhp+
PXpZFMbJ+I1zpmmhHakPEFKLOp9+E/fOd7LddtuV/Ubfk3qN98A26CL1gpgq
zoGeGwX90MoLvnP1pBbXUas6VAghhADThYi1QlvBhmBsk/4mOTWjdgR9butH
MS6Nrww2FX7x1g9jPmSDcXGzS4gJoW+GHyzjcTa+WAtdiHmYrT/HGDx92vHj
xyfet/WhWRh3Pffcc92wYcN8fJj1FYnvNrhP2564BfqU+Oszdks/0PrQ4T5R
svYJx016x61x+tZuw3N29v+Og3E6+mMDRj2WeqwiMCbL+0UrJE4gDbO/8Tcj
twT/JpYEam1/cz2PPfaYt/P5G5uGc5hdGNoqvCPTHRlz5m/iPiiP5Axn/Tbb
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
WP5icjPHQa4NfmfbSj5FtULlcsYkS7kkZ0xUO5JNIzoCzJ9BDiLmu2fuOOZg
zUut+wBxNKPObwStcl/Nvg7VoUIIIYSIsuWF3drlqIxbZH93XrDF0/Kj9urV
y5133nmleZgbgcqlqFQuhRD1oRl1fiNolftqlesQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYSo
F9OmTXPXXHONu+yyy9yUKVOafTlCxKJyOmPywAMPuDPPPNO99957zb4UIYQQ
QgghhOiUHH/88W6mmWbyS48ePZp9OULEonI64/Hoo4+W3vnSSy/d7MvpcBx4
4IH+2f3+979v+LmPPPJIf+5f/vKXDT+3EEIIIYQQMyrbb7+974eff/75ufbb
YYcdSrbXRhttFLvNyJEjS9skLdggteCqq67yNuCPf/xj94tf/MJtsskm7oUX
XqjJsZvF008/7TbeeGNvI/30pz91Sy65pDvjjDPcV199lbrf2WefXXq+999/
f9lvDz74YOm3jz/+uJ6X3xJkKadFGTNmjOvataubd9553eyzz+4WX3xx/+y/
+eabmp6ns1C0rsnL1VdfXXrnP/vZz2p67C+//NJrF3/605/cD3/4Q/eHP/zB
7b333m7SpEk1PU8zqbUuRD1z6KGHukUWWcT96Ec/cnPPPbdbbbXVXO/evd23
335btm01ulBnbANalVtvvdUttNBC/lkvs8wyXosVQgghhBAdl9VXX72Qrfbi
iy+65Zdf3vcJhw8fHrtNo3Sh/fbbr3S8WWaZpfTvOeaYwz3xxBOp+6699tpl
14P20gpg48w666yxz2yttdZK3TfUhbC/QmY0XShLOS3C4MGDffmKez/rrLOO
mzp1art94r6HG264oWbX1OoUrWvy8vnnn7tNN93U/fWvf/UxhLUCPZayFFfX
LLzwwm7ChAkVj9Gq9U1ILXUh4vjQ0JLq/xVWWKGsHiqqC3XGNqCW1LLuGThw
oN8fTWjllVf27RT6a1r5n9HrPiGEEEKIVgfbqV62WtgX7NOnj3v11VfbLdWO
sw8aNMgff+aZZ3YXXXSRzyHz7rvvuvXXX79kr5FjJgmzCf71r3+5FVdc0e24
445VXU+tGDFihPvLX/7iTj/9dPfWW2+5119/veRvwTJq1KjEfUNdiOWpp54q
/Taj6UL1AN0Bm5ln+Nvf/taXbWzPXXbZpfRsTzjhhHb7Ud4pYyzzzTdfTWyj
N954w/373/92c801l9t///2rOla9qWdd0wiOO+44f/2/+tWv3COPPOK+++47
/53++c9/9ut32mmnisdo1fom5OCDD66ZLsQz4VizzTabO/HEE71fyUMPPeT1
nznnnNP78PEcDdOFeMZZaXQb8OWUr1y3a49wFz3cu2z92Anjpq8/3N3xzAOZ
r71R1LLu2Wyzzfz+V1xxhf9722239X/fcccdDTm/EEIIIcSMxPPPP++23npr
H6OC7/3f/vY3nysFmzQKfS36Wbfffrvvay277LI+roW+NX3c999/v2z7VVZZ
paIfDws2p3Hqqacmbpdk54W6EGOMlTCb4JBDDvH9+JNPPtn7qhOvwX8vvfTS
dvtsueWWfh80k5BPPvnE28r81r9//8Rzmk3w9ttvV7w+mDJtqlv7jK5uzdO3
cdO+/cZ9PW2Ku/Gpu9zuVx/q1jtze7/c+NTdmY6VF67RnufQoUMTtzNdiLgm
/ovvhBGnC/Gsbd3FF19cdqyJEyeWfrv55ptL6ymTv/71r71e9Y9//MOPyzNm
j02G3UDcG35NH330Ubvrw4cHW+I3v/mNf7cLLrigO+CAAxLHm+38HJtr5f64
N8o456WcGEXKqfHOO+94m/jvf/+7PzblZ6WVVnJ9+/Yt247jJL2HDTbYwK8n
Vmby5MmJ58JGroVtxPcd3mOrxXMUqWvC/cgfDXfddZdfxzuh7K233nqlbYcM
GZJ4XMpiGvgAnXPOOd4PiGPz3hdbbDF3yimn+Jgxg3gnNECOiS9fiPlPcF3U
O2lkrW/smFwX8B3yjcw///xeY6F8oU1Fue+++/x3h/8G/hxLLbWUO+uss2L9
14A2A12R+yYm7phjjnFHHXVUrC5k7cxWW23V7jiLLrqo/42YupAFFlggtn4G
2qVoe2ZtAHUC8Zit2AaMfGuUW71nF3f14JvK1t81YoBfP+jlIZmOUy1F26Jq
6x76F+zPdwfE0vJ3NGY5iVrVfUIIIYQQnR1i97Ex4uwcbNao/Wz9dWyBuH0Y
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
ivDep9+3QZtdcU+zL6WM+19601/XCf2H5tqvFfsGrQS62doX3l5aOnI7VtJU
vqtWVWkOXPV+twzydgZ9wWpQn6TzcfHg50tjxkPfeM9N+eYb39d555MvZjh7
NA9XDXnR7dRngO8zzki0ank55I7BDdGFvpo6zR1/31C38/UPep/hWoEmRD1t
9etaQbu54/Ry9slXM44/R9F3SVwUz5Bx/TF1io1qxDnyQPuOz16RNnlGrcPq
TTXvpBLqgzWWz7+eWrJhqPcnfv6VtwVYr+cvRHFeeHdSS+pC1z/9SiFdqNX6
Bq2MvfuO2o59Nt3WYVx4174PdsixAdM+GXeulrBP8mYHfJeiPcfcO8S/z0Pv
fLzZlyI6AK1aXtBpGqEL1YvebT7Im0/vIz07foK3Lcn7ssN1D/j1vR5+ptmX
2DA6+rtsJMR/deT+VWeknu9EfbDGQh1sz3vUdFtGCFEbBo15uyV1oXMHjSyk
C4nsdHRdCG4YPtpfPzkaOxKMQW951b1+7GrC519VfbywT0J7efmTL7htrunv
463JtTHo1fGJ+w5783132HRbEo0NX4M9+z3sbn321VSt7fHX33FH3v2kt5W4
B3yzzxv0rB+zibtX8n1xDtt+2+nbMxbK2E7SfYz76LOy3x57bXzpt2js+NRv
vvWxMtwrcebrXXyHt9u4prQ+WpF7z8vYSZ+6Ux4Y5ra48l5/XbtMt63w28O/
Icqlj78Q6xcdLvhE1oJ9bx5Y8Vxx7zPPM3t2/Pc5X9DqgfeGXwvvf52Lbvdx
T9jaUYa88Z73TcAfnHOwP3FCcZ6BPNO4a09q04gH4ne+EfwN+w5/xZeVddvK
zL2j3ojdj7J65ZBR/tpDX8twufuFsckPPCOtWl7ycOBtj1W8Lpaon6TtR/5o
oBywjnLAs6DOMV5678PE41bqN1An3fbsa75ccWzqyd36PuTbE34zGH/e6qr7
/DHR8UOsbHNdX0yZGj1FQ8lTZsg3xXU/8fq7buD0/h/1APdP3XzG9LISzWdT
5F3e8MzoxO3iNKXD73rC//b6xE/ccfcN9d/8QbcP9tfP92njP2FMVd5zGOQk
v+DRZ0vfPO0F7QbPK873izIw9M333MnTny/xg+xD3q4T+j/lxyGjZHlW1CEh
eeswI089ae+d+pt6+KxHRpTKyz7Ty8ALNbCtORb9GmJaeaZc00WDn/O5Pvkm
N7z0Lt92WLtP/ZtUd3KN9httfxT6NJQR2hDaEr5T3snTb73fbtsi7yQvje6D
5SFPO1zkndi9U46A3xib514oY1YGqoX6oN7tipG1TrV26KTp2z41vZ6gjth0
+ndLTj/icfaa/u55r/R3q41syFsXFaHou6Ss0qZS1inzlKmj73kytl5pVHmB
ztLPLUrWetLuIW9/skiZtHw29KeBb+2k+5/y796u0b6zpNw30eWBwEe8SN+g
aPtIWeYd0rbFnY/2sCiUNZ4lx8FXKg7z4Y76Fk/6YrLr8/TLbp/p31XYx2Ve
lrQYq6y6kD0v6r0ou04/D7/F+bzQvvAO9mrrH3BtlM8nx76beK68UHboO3Hs
zzpQbA3vJu4bK0rYJyHnbFz5jNo1cOWTo8q2Ce1d+urfRsoP5ZT+XdI3x7sI
bSRiWLZoK9dxC+U0tMOK6kJHtNkVLHzHYZ4V4j6eaesPVHPvRRj8+juJfX7s
nKgdQl/SYjzXsutvuzZbauWfwHcdHtefM3gG9GknT/2mbJ+8z8zaGuJtKAvb
tuV2CJeoLnrZE8laB3VQtE7Driu7h6AsxmG6EGXmoNvjbd4Rb5e34eSC3a2t
ruN83W8eVFbGyDuDnfnIdDu7Glq5vPCdcrztere3n7a+ur+v4+3947vE82ex
6+e52Tpbou/e+u/0qe09hUt4Ly+//1G78mvbpelC9AF5lkllLPS3ol9jdQhl
IIQ7tTZ7WIwt2ijylhlrzy23cXTBJyisk4u8yxufGZP4btJ0od1veKjsWrDX
wr/3bbMjipwDaDfou9p29OXC/hzfdBhzSV1DvyqprLBvtO9rz4M+SXjc8FlF
86LnrcMgbz1p752xkq4x9TD3Eh2nyYuVQ6srk97jFU9+bw8U1YXCfj/PCzs8
fP/XDH2pbPsi7yQvjeqDFSFPO1yNLoQ9l5Tzh/q8WuiPxH3v0XogSRfK0q5A
njrVdCGeaVi+aBuidUc17USRuqgIRd4l7UWPhPGDtWLq40aVF+gs/dwi5Kkn
8bmzupC+nL27aDt/QWDrFy2TpvWc/cgIr43Z+WyhP23Qztu50Yz4He0pel0D
g753kb5BkfbRYn5YiPve44aHy9oXbAJshWpAI7V6JwpjeHZvYXwcdfO6CfVX
XH0XUk9diNwWaECluiHo67AkaV9FMJ+hK9v6Gh0BK3dZ5qFF17U6NImwT8J2
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
+27i3kmURulCjJvbuAL+tXH2ctFnFraXr1UYn6e/ltQfhbD/gY9YEtXoQrZv
dIyD/p7NxcRYN3WV5ULBJ7IW4wKtXl4sdjqax83a6iT/i0rtcdyxjk2Jl8uy
f1K/wXQc+i1ZoM/C9uSkMcKxZotLuLNJ83MVKTNp/Z8r2sZS6dPEkedd5tm3
UboQ8P7w74rmgMBH+bl32ts1aByWI2+ttjqOfKphPo04/4N66UJF68m0917t
d2c0ShcC7o32ynwVWBhrYkw1yR+kWbpQrfpgRcnTDtdaF8pz7jwU0YWylO+8
dWojdaGidVEe8r5L4odsXZzfR1ybUrS8kAcamzNpSfMB7mz93KwUqSfz6EJF
ymRSP7sSzdKFkuoPdDfL58lvfOcWa1pJH8wD+czs/VmZIIcSfxOrGQU9Ci3I
7pnnzP3RnzJ/jKTrq5cuFGqUaQtjtwblJsw9FaeFnBJzfsO+SxvHbWUsJiXN
t4n6lfeO35T5fbGgweITiAYS5ndOq2dpm+w300jC8ausOQXQsWyfrD74/V/8
Xvumv0jfMIytp43kt1AXGvn2hNI5ovGPabpQCHYD9xRqRNcGunyRey9C1nGn
pNi3RuhCPEezj6jPk+ZVKvrM8rSXreAvlNRe0Yeg3qeOot+IvslzQ8eula9o
K5cX+sPUQ9E5e/BVZsyEtjDJT9nasyzx8vXWhXhf/O5zF2TwF7K6k3IZ1cLZ
3/INjHy7/VwjjaBImUnr/9C28FtSLrs87zJKWr+skbpQCLH35N60XNSU8dAf
jvE2u2fGnMK4Bsas0myxML45Sx7BkEb7CzVLF+IbSmpXKulCBrY4tik5Xyyf
LH3luK+7mndSiUb0wYqSpx0u8k46ky6Ut05tlC5UTV2Uh7zvstb+QmnlJS6f
c7gk5arujP3cvOSpJy3eOslv2ChaJovqQviZsF9ans0kKvUNirSPtCc29zXP
ivshBh/7vNa5sTg313DJ49/7vph9G+enb/04yjzfWtjXte+gWl3IxkTjcsrE
+gsF8UZJuY2ifO+H9o7PT75NMF8I3w8+XJSjV1LqfmsjiFFrdSy/+H0RP5Y4
GL8MdSHiDENtxUirZ+0bZwnnbDf/B2Jds8yHSn/cjpNkd0W/f/P7itve9MxQ
FwrzSET9w85ri3FgiepCSf56PdvaJPTskLz3XoQwTj2aEyOMU0+Kra23LoQd
b3kBqc8qtUFFnlnePuHepbjrh9rVq2Y70r+oRX6hPLqQ+SNGc+vUklYuL+To
jWsX7bqS8tGAtUPknKtEvXWhAUFfJa5/QPsZrV+Zf43tGe8IYT5T1qOLxdXJ
BnUi+gaxs+QnrGV/oUiZSer/hLkgkvLH5XmXUdKee6N0Ifzn43zoeX/mvxqO
LVme6s1j6grLt5Vki4XtZVIezSQq1WFF6slW1IXAylzU1zv0O4/qQkntfWhT
vRVTT1bzTirRiD5YUfK2w3nfSWfShfLWqY3Shaqpi/KQ911yz2ajnBvJT8Y8
X5u3laWTEvIL1bu8dNZ+bhaK1pNhPyk6n2lI0TJZVBc6o82XYNeM/t4hlfoG
edtH+orkk0cPqhSXVwtoU63ttHaM8di4d2w+QdF75VuwXElJutCbgQ1O7FYS
ljNtz7bcmwZ5lyzfeagLkZ/Y9Mi8cV0868ODOcdZ0DgrwRwAbHtyik9Rq2Bz
1F8boxWHEDNoMZr0w80+ibvHsJ49YHr55m/GNhjTMD+sHpHxj9D/Ez9DfIAY
/6eepwzShkXH1E8O8vhQLtBLbT4y6n2+1zD3t5UdYm+ojzkavprhXPehLkT9
YX1L4nTIrUQOR9N3SnVVoAvRP2Hcnhwf3LPBdVlcaDTHd5F7z8v7wbwW6Hl8
Y7zT8J2k2fD11oVKc0hMX54c+66vM6JL+ASKPLO87WXY76SsoStTbqhHbL3l
ME2iHrqQnZ84JMpVPWjl8nJXmz3HGAHQ32Pcwt7JGSn9XeZoYRvaKsoZY3X4
3vBtR/sL9daFGH8wbYNxLsoCOQx4p8SMURcxL1WI1dfUMX7sxX1vk9hxmK8i
jdAmZBlcISdlHoqUGev/0KfgW+L74n4s7x9LNIeUkeddRknrlzVKF6LOw9+P
scwwHhLfEbNfwvdpeZKxe4a3jbtRVig3oV9+3L1TN9oxiVvkGfPdMH9fmHs4
jkp1WJF6slV1IWuj+b5oYxj/oy0Pn2+oQTDXEdvyneLvZW0O2t4FwbxIcfZM
Ne+kEo3qgxUhbzuc9510Jl0ob53aKF2omrooD0XepY3ZEk9De0e559u0NoXv
MZz/sZHlpbP2cytRTT35ejAHFjk/eJ/Uk1xjGNtWtEwW1YVue/b/c5mQpxf/
LnQRvv9Kel+lvkHe9pG+j/Ujufd6z3mFRvn/esD331tcDBeYro9fFf0zyjg+
7Za/miVJF6J82LvDP4vn+n7bvJohlouVhbaBNgI/KdOdWKK52ymL9hv6O7o7
pZL2Fx0xaf4Wy+tJeTb7LW4uwShmt6Tlcm4VqAO41n1TxtiB8Sz6WejX2DP4
Dln8ZvRbtnqW7U2TCxf8ZcbHfDc2NmLL2pF9h0fsA74FmysubuE7D3PFodeF
12P/xiYhZxT/DnUhsPy24cJ+lnuLJdSFuIcw3tDmprN11FlxMXt5770IvEOb
+zy68F7T5luop50fzsuUtkRzwuV9ZkXa+LBtjC7U2ZX6yfXQhfCtjHuP3D9z
MBPvWYvx51YtLxZ/xUJ+OOsfW3+Xv9GE4+JLyVEf9hHCJfpd1lsXAq4xbLui
C3mJwzyJtMehZhLWZ9iWST7pRpgrjiU6plotecuM9X/CuO1wuSBhXjnI8y6j
2HbN0oXo79i4cdhe2dgaC99yeHyeHevi3v0RwfhVki0WtlnR9iyc8yRKlvwO
eevJVtWFLLd7dGEsyHzlQw2C8h6+M8o+zylsi9LmASj6TirRqD5YEfK2w3nf
SWfShSBPndooXajauigrRd4ldWs4z3fZd3VB+7jjRpWXztzPzXLv1dSTx7TF
LUWXboG9VrRMFtWF6GuF8UThYvFVSdh2tYwjO+LuJ2KvhefO+BNjTGhXtcJi
jcy2HZowlnFd2zw50fdCv9e0obT8R1x3XPsY1nvojtHvgoU8pGbDR3WhuD5Y
eAx876NtML5YNk6BHxtfBf1x0wTSsJikWrShjcDmA+bZpoEeNibQxJhXEd02
itWz2KfoufSzecboI/St0/rSI96e4Ms7WiQaCmUHjTgp5xl2Etoe7wp/Meob
tCrq0ri5Hqhz8cnkejg2vgXct9WlUV0I/Zf2k2vHdmGMDX0JqEfYJxpHhqZJ
OadM8k1iu1B/EGeZpinmvfci0E5wTM5hzwpbsVKu+nra+eF8AHnaS8jzzIq2
8czzSf3Bu6QMEKeEbZGlpayHLjTx86+8zxllOGxro0tc3tq8tGJ5sXk46BOj
6fLtUw4YR6P/wHVSvyfFUzHmSt3Es2N//AfN3zCkEboQoKuTdxEti/LFe6WM
0c7E3QNtE3PSEUfOvZKPhn5dJU0IqBPR0q39O7EOOfDylBnr/1DHYqfzTrFl
Kd/kg6tE1ncZJa1f1sj8Qoyb0QZx3Vw/C+0x7VecLyD+rXxT5KSiXqC/y/Ux
BmfvNM0Wo96iL8Z5aC8pc4ybpfkdZs37maeebFVdCBhv5Jtif3RZy91iORWi
cWSMgZJ/Ef9F3gvtEH5AvJtKc0RDkXdSiUb2wfJSpB3O8046my4EWevURuad
rrYuykLRd4m/BD4u9MEpM5R7/G3icg41qrx05n5uFqqpJ+kHoRsRp4I9xX7Y
cdG50ouUyaK6EOC7R33qv8vp10UsFzrBgApzl9dDF7K5mND84zQSFvwfasVr
gR8X95+U05N+Od8idRZtHP1W6i7egz37NF2IcVH6t5R57ov7o+xH520l1wtj
o9Ynpg+FPmFjL1FdyK6NMo5PrekHXB9aVFIbyX3i422wXZJPu0FdzDdFuU16
Tq2G5eZOG5sVQjQf+js7ttWvUR0XjRT/E5uvEj/XzgaaCO1vUi5ikQ2r8+Pa
ykZSmkeiA8zRIIQQQgjRSliOprMjeQdQINAkLNYLfVQ0HssFl5SLvhXB1tym
bSwmmttOCNE64ItG/cKYTpyezXwc+DTi2zmmxnPctAI2Lsvco6I4Nm9rFn+G
epI2LiaEEEIIIZI5pc0HMC6/JD6FFkenfnPjwdcNfyr80aqJDW8GFsMd1RuF
EK0Dfo97tsXkouNi3+NrQfzUjm1zGOFr2Rl9hYD4Ae6RmGWRH9qos9vy7RGP
920N8shWg3QhIYQQQohiMH+6xXQRF409gF1AXKDlbiQ2v17z1IhkiJ3k+Veb
u71ZEGNHzGelPENCiOaB/n/D8NE+vnrztjht/IeIpWe8IG6uTyGAMkIbhbaY
Nudro5AuJIQQQghRHPKJkuto27a5WMi30OXq+3w+auLMyDMhGgvzzBK75+dG
1/MXQgjRYtw8cozPTxjOcSaEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEGLGZdq0ae6aa65x
l112mZsyZUqzL0d0Il588UV3xhlnuBEjRtTtHB9++KE7++yz3V133VW3c4h8
qE4RQgghhBBCiI7D8ccf72aaaSa/9OjRo2nXYdcQLptttlnTrkdUx6effup+
9rOf+ff44x//2L3//vt1Oc9qq61WKi/ShlqDVqlThBBCCCGEEGJGYvvtt/d2
2Pnnn59rvx122KFkw2200UZlv02ePNn95Cc/8b/ts88+sfv36dOntP/YsWML
X/+ss85aWmaeeea66kKDBw92a665pptrrrn8/a244orujjvuqMu5KoGviz2/
+++/v+y3Bx98sPTbxx9/XFpv72SttdYq2/7dd98tPbu99967IdefxBtvvFGm
8Y0cObIu55l//vlL5+BZitpRjzrFoDzEacHhcuCBB9biNtxVV13lll56aa9P
/uIXv3CbbLKJe+GFF2py7M7AW2+95d/1r3/9a/ejH/3I/e1vf/N+fvh91Yrr
r7/eLb/88v4dUO+uscYarn///jU7fmfjyy+/dPfee6/bYIMNfJ2Oxi6EEEII
IUQlVl999UI2HLE+9NeXWWYZN3z48Ha/b7zxxv64f/nLX2L3N9txscUWK3Td
cdi91EMXuuWWW7z2ZLan6Sgs55xzTs3PV4lQF8L3JaSSLvSDH/ygbP2ll15a
2r7ZuhAcccQRvtx07969bufgff7973936623no8pawXWXnvtMn1jySWXzLTf
7bff7svAz3/+87o+s6zUq06BRulC++23X+l4s8wyS+nfc8wxh3viiSdS9y36
HrMQd/833HBDzY6flTFjxrh55pkn9hmhn3333XdVn4MxBTsmdVZ4jtNPP70G
d9G5GDRokJttttnKykYWXYj3+Mc//tFtt9127vXXX2/AldaGVvkWhBBCCCE6
A3/9618L2XCVYKzd+mr4gET57W9/639DA6gV9dKFPvroI+8vwLF32WUXr6kw
Lnv00Uf7dT/84Q/dq6++WtNzViLUhVieeuqp0m9putCvfvUrv753796l9Wgj
tr4VdKEZFdMT/vWvf3lftB133LHiPrfddlvpXf/5z392Z555ZgOuNJ161SkQ
2oL4HPLdRZdJkyZVdQ7sa9N+L7roIp/rCJ+69ddf369feOGFU31iirzHrHB/
HJNlvvnma5otvOqqq5bu8bXXXnPffPON11pnn312v/7aa6+t6vj2Dlgo019/
/bWvc4877riSDjVkyJAa3U3nAC2VssdCGc2qC+GDZRof7fLnn3/egKutnlb5
FoQQQggh6snzzz/vtt56azfvvPOWfPTJvxHXZ6NfRJ8IvwH6Rcsuu6zvn2Pr
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
5yLi9yiffvqpvzbbBvsuzI2dRlZdyO7NcttY7m9yD5k/QxJ5dSHyUdn2SX5I
ppfwjslRHC7oK7Z/kl6QVxdC48T/h2f72WefJW7XmeqUorpQXFkyvTL09SPO
zY5FPjN86tBSyenNM8bfiN+oa5IoogsdeMbY1G3jaJYtjN7KecnhRV1CHU3s
J/Uq8Dz53cYCikDZDr+ZsB4JtTrirbKCHt6jR49SvCK+e9E8WVmo9r3V67pC
iuhC1ob06tWrqnMXoaN+C0IIIYQQ9cLmEcG2jYL9bf3h0L88zYbDhuU3bJs4
6q0LkZOHbbhGMFssGrdioB9ZHhTGhf/xj3/4cX3Tl8grnESevNPMNU1MEM/F
7gPffXxConl4OSe/kyMH8PcwDcl0LmJNGonpQsRnAdeMPYYdQMxPmi6Ez47N
Y0XOG2JBGJOP04XwkbJ8K9h+vAdyf6y88sqlcyTNX2N+BSzsk5VW04V4nhaH
RZlJGsMPtbK0JSn2JY8uxPv63e9+57cnZi2NzlSnFM0vFFeWrJyFtjNl2Y5v
OZXRr+2d2xyE5BlKooguNPLlL1K3jaNZtvCBBx7oz4u/JVB/WJ4t5m4zfYNc
Q9VAPUv+tnXXXdf7plGfELuJHs/x0eKTtPwoxLPanFV8D8TaFqXa91av6wop
oguhidKeoL0RO41m3Cg66rcghBBCCFEvso7th3N8pdlw9N35Db+YOEwXOeus
s3Jfaxb7j1gC68Mz3m73ZxpLiOUmRhe6/PLLy/yJsPFrqQsZaAvkzkGnspzC
5KcN82HbM2R8PArPjd/IbdNIoroQmA1MfFslXQh7CpvBcmnH6ULkT7LyQU6R
MO8SuZbSdCF0N56n7c9/o/l4kmglXYh8Subjtcgii/j8M0nY/OxxOVGykEcX
Mm2GhXiTNDpTnVJvXQiIyWQ92mkUm7cvmps+pLPrQlZPEy8ZxXwV0zQbfAmp
c8kNVgT0S84Rl/c6DnQky9eDj1s1eY+gVrpQra8rpIguhKYX5u7PGl9bCzrq
tyCEEEIIUS/MvwZfmXDuHghzgZAD1kiy4bDXbX6gJFvV5o7aa6+9cl9rFl2I
eAB8adju2muvLc3pFOcnv8EGGyTaojYPUJouZNuk5f4A7JI4rrzyytI9oYkY
lnuHfMb0nUMs7xHzfWeh1vmFQl0I3YY8wugXZpsn6UJR4nQh4glYF+cLZfOw
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
3XfffZe47TfffOMuuugi9+9//9v95Cc/cXPMMYdbaqml3Mknn+w+++yzsm0v
vvjiMhvrRz/6kZtvvvlcly5dvK4WRxFd6Ne//nXZeWaeeWY3zzzzuH/84x/u
0EMPbffcttpqq7Ltf/rTn7q//e1vbt9993WvvfZa4nm4frY/44wzMl+baF0o
5/iqpJX3eoKf4fvvv9+Uc9eDonXvDjvsUPoWN9poo7LfJk+e7OsZfttnn31i
9+/Tp09p/7Fjxxa+/llnnbW0UIfUs60aPHiwW3PNNd1cc83l72/FFVd0d9xx
R13OlZUvvvjCnXDCCW7RRRf19fqcc87pVl11VXfXXXc19boaDe3vvffe6zbY
YANfDurRFyoCbS/1VWfkrbfe8vUHbTntLO0x7Wyj77dZ10EbtMACC/g654gj
jsi8X62/2VtvvdUttNBC7sc//rFbZpllEvtpQgghOj+ff/6523TTTd1f//pX
79dfa0488cS660Krr756Q3Shej2rr776yi2//PIlO2eWWWYp/XvhhRd2EyZM
qHiMtddeu0z3WHLJJVO379atm98Oe4j/Pvnkk7Hbffvtt76vHDeuzvK73/3O
jRw5srR9VBeKLth5UZu8FrpQdKG/Fcb6RXWhqHZ13XXXxZ5HutD35C1frQjl
ju8M3fWNN95oyjXw3VGmnnjiiaacv9YUrXtffPFF/y6wQ4YPH97u94033tgf
9y9/+Uvs/qZHLbbYYoWuOw67l3q0VbfcckuprjUd2/59zjnnpO5b5NvLss/o
0aP9OERSvUi8dBzU99Ftb7jhhtTrKbJP3vspus+gQYPcbLPNVrZtJV2oUc/g
6KOP9tuhg3YmxowZ48dx4vo8m2yyScN0+yLXUW1ZNshJEPaj0AArUfSbTWLg
wIF+PzShlVde2ddRlP20Pmet7l8IIcSMx5577ll3XQidphG6UL047rjj/PX/
6le/co888ojvi4wYMcL9+c9/9ut32mmnisewPvC//vUvPw694447Jm7L8fER
og9k7+eggw6K3fbaa68ttf3bbrut78sw7s2zXnDBBf0yceLE0vahLoTPzgcf
fOD69+/vVlhhhdL60047rewcpgtx/1kxXYjrxr+A8V78Bnr16lWyv/baa6/S
9qYL8XzQ9xgjxP/rj3/8o1+PXfD444+3O490oe/JU77gyylfuW7XHuEuerh3
2fqxE8ZNX3+4u+OZB+p5ubFceeWV/h7ww2sGfCf0v/EFnDp1alOuodbUq+41
P1OWOA2P+ovf8oyzV6JeutBHH33kfvGLX/hj77LLLu7jjz/29ZXZ/OiUr776
auL+eb+9rPughaNPrbTSSu6ZZ57xZfKVV15xa6yxRkkvj7MPuVaOyYIvaBa7
sMg+jXgGgC7JtiyMw2TRhRr1DD799FPfLlLe+XdnAf8Wezf466KJoJ3OPvvs
fj39jla9jmrLsrHFFlv4fa1vlMXfp+g3mwR1HftdccUV/m/6ePyd5sdYq/sX
QgiRzoMPPujrWGJ0xo8f7/bYYw/fH6CuZ13fvn1j91tllVX8ftjsQPvCOvzV
2Xe99dYrbTtkyJDEsYak/rDZ7Ycccoj3rSV+CL9T+rP899JLLy3b/thjj008
R7hglxfF7rnSErUp6v2sDHyAGAdmTJxj089gbPuUU07xNoGBP47ZONhCITaW
w3V98sknqeezPvDbb79d8dnhG8S2jNUzVsq/eY9x0Jfm9/nnn7/db19//XW7
84W6EHqNQf/lP//5j1/P8wj7uFa+0Jjol1UqX2C6EDFjUSxGhT6+YbrQsssu
W7Yt1282G33EKEV0oeeff95tvfXWbt555y35pZNPBT0qDp4jWhkxcMSXsA/3
ja41atSo2H2wZTbffHNfdtC0fv7zn7v//ve/7vLLL/fHM1544YXS+6A8R+F7
5jr5/frrr0+8pzzlC0a+Ncqt3rOLu3rwTWXr7xoxwK8f9HL7a6knfI+UmR/8
4Adu3LhxsdsMHPaJm2mxwW75rs/6vyd+NNUd0HOsm3+tYW62JR93cy8/xD3y
VPp3mIbVi43QGPOUQfr3XNftt9/u+/d8I9RX2KN8/9G4tyJ176mnnpq4XZym
hG1jY/eXXHJJ2W9hmR46dGjZb9St5LJea621/PXzvqm7iBdFn0kjjy504403
utVWW81/d3x/v/nNb/z3eP/997fblhjcsH4LsWcZV48Zeb+9PPsQTxzVKNHy
7fnedNNNCXt+j/kD57ELi+xTz2cQd2154sjq/Qzs26Gd7Ay89NJL/n74vqMx
3FZHRtvpVr2OIu8eGCOgf0MfxfpjG264YaZ9q/1mQ7i/sG/QtWtX/3dcPRZH
0fsXQghRGdOF6MsSNxzXh2bMO4r1LbHrzMYOl5133rm0Lf3oMKdC6NteSRda
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
K3L9q666atTrWhfa82B+Xag16kuhHhdjfEJfnVkXmg4L2VemQW6emLYu1Nen
FK8RP9N97LHH2s/xNYaw2OtvMekmJdTqQosJr1vvZlo25EJRMo+je+DLhPSV
w+mnnz7v2lkqnStXrkzG+lx22WVt+h9++OGZz4i1eemll+acyznSf0KkC5XE
pC1fvrw9l/igEOJD8PsmWYv4xBNPJP1M4oLi+uX/2EGcz71DxqizPd33RZub
drwk1+c+XUgXYk3U2s/962blR7+jeXf9KzPf1+hCG373N9pz31m9qln/1V9r
Vv2T72rPW/PTP9Zsv/fOmfO4l2KUwuOVL//K7vu+375ePejPmxd//JPtNVb+
w7/brPvi55sdD90/Jw87t29rNv7R7zWrvv8j75/7N5o1/+5HmjevurTZ+M3/
3l73vS2vzpy7+tOfaNb81I822++8tXnpC59pVn7P325Wfd+H2+84b9M+32x/
v/Iff6C9L+dvXrZPszOwa8ZOP6x78olmzSMPJ7+LUd8gro24PWL4iP8WNX0D
XZdzaSc8IyT2kPOIi+Q+gnul4goZ/wRjOXGM6MhcAw2cmMmU/oktdtNNN7X6
MvGU9PPnnnsuaTfI33rxxRebs846q80va46B89Cq+T26OPfl/DvuuGOWrTd2
+mPQbFLXX7VqVfs9z17R8ckv8fn8Zc5jDXVcLjXryJgz1AYoR8opjuNU3ign
lTfPNBjjSu20kvJjvCGNWoPAvWhfcR67IJ133313+2yBdFIH1O2DDz446zzm
WOYYtVfqnGcbsX1f2r6Zz7gfz1xS6JnJK6/sHhvJV7jmgjaZqlPZ8ZQ3vtdR
Rx3Vnq881fSFmvummI96VH55psUzNH5PmdOv+C7OC+dSLthHqndiyGvzy/9J
JzEPiqOmP8RtB0gbz/jUb2g/lLfaT1+dda0jo43Q13mWxph0+eWXzxqfa/MF
r7/+ems30h9I8znnnNP2gVJdqHScFKX9kLTSVlTmPMMjbRr3AJtU43UI7Ywy
po2IvnLHVqbf8zn3Iy9cPzdGv/zyy62tTLo4n7KmHLds2dJ+TxvgGqn4D2x+
0sLYPVb55uYJNJfU5/SdkJLxvqRPpeBa/C7WcNB1+D3X6aOv/krzIPr6KfXO
/VifEaOyDn0XzQf4LLQDxgj+z7P6cB0GfZd78u/42Xfc9/F3uE6qH9EP4jUP
k9gZYRnTF2hf6gup8TVnO1AHzIG0VcqVa9A+Yh+3ZozqGwu0N0t8PPLII+33
uXVkY8/1UFrXOVLryFQvzN3Ms5QDZXbsscc2jz76aO81+2zIHEPuW9oHS+3W
oWMOcA59qKYcqNOcrTYt4nR2oTVZJRo/bZGyjcfXUBdi/u+yv9R30Idi6IPE
NKVskBKof/WrEmRjxhrKGHW2WH3fsWCP6Gk/Q+H63KeLUBfafvft7b83/I//
NvP9EF1o9ac+3uoraEFvXntFs/pHf6BZ+b3f2by3dZct9s4LK5vN+/3prvu+
/3fbbTe1x9vPPDlzz5d+/ieb5d/1V5r1X/nVZusJRzavHvwXzeof/lir++y4
/+5Z9133y19or/Xyr/5Cs/Wko5tNf/oHrd7z4r/5oaQuxHq5VR/7YLPliAPa
PL9xxS6N9a1HH2pWfeK7mw3f+Gqz5ZhD22PdL/2H9hqkQ4ydfjj4pz/T7PPP
f6CzrkTYN1hzG8/7Q/oGcwh2LddmbGGOxGaQT4odzVzMufxl3ONQ7CP3ZPxg
/MEPwg7EryDukvkh1skV88h8j03HvbU2N6ULYWPQb7GfybPGHHwwbBXyz3NO
DsVmkg4xdvpjiNOUH4GNp+trLSfzKeMI1yS/lLtsnDDWtEYX0niFVka5kHf+
nfJl8I34nJjPsLyZi0p0ob7yw/amzfA9saKUn9YgYKeUrGmlDpR+5jLWlZMn
rsP/Bb6ebDnywTm0deUvpLR9A34C83Nq/iQP4byN/UydYtOj6WALqUxpM2F+
ZbdhW5MP7Dc0Tq3VrukLNfddqHpUfkknZUofZR7ienxO/IGQPUnZkP7HH3+8
raPVq1dX5xefXG2Ce9AuqP/4ORzfc0/ySR/imthVXE8+ZF+d5XQh/CvaFXnl
uvhUlB33Cuf7mnyRJj6jbWJncq7sGK5RoguVjpNQ2g+xp7g/+VNb4VzaMXkR
Q3ShXLnTv/lc9YZey9zAGB3ufQDY1dKOVMb40dj2fAe0N+6X8onwA/h9SZsv
Ld/cPEG/lB9A+enzlH3aN9739akctCPaWGptDGWY0oxi+uqvZs4q6adDdSH6
Kd/jazIf0Ba1PyptGa1C94v7edz39bw/9SyZug/nlEntjLCMqS/mNfocZUma
4vE1ZTtQJ6oDyp/zmQvws8K9bGrGqJKxgD7C/6VpqY3j80JKF5rWXF9a1zm6
dCHmSfJJ26I8SSef9/W/PhsyR+19a/pgqd06dMwB0hn6KiXlwNhCP5pP4nR2
wXxC+im3PlR25DVE8wHlLS2CuY76izVRPUNkrE2lO6cZ9cH+SbIDSsHm4Tfx
WDZGnS1G33dMYhtGPP6tb80c4t33+0PN5yX3EaEuBOu+9HPNir/315p3Vu2K
UR2iC23+P38063PpTVuP220bdq3DQo/hu9cvnN2G0JVe+ORHm7Wf/4mZz7bd
eM0uLevrX5l9zztumYnjiXWh9r6Xzo2r2/l+O9iZsHs2fO03m+Uf+LZWDxo7
/WKoLgT4ldgeegY6pG/E8Xjqc2FMeVcsHeel7Gv6FnMFNofQmM/4EcIcovEv
1oX4LLWmlmdvqed0ypfKZMz055ANlop9TcXTau7os+NSn2Fj8Vnq+RbtATtK
99Qzyzhd4T5zk64jo/2k7ArZzOxd2oeemYc+pQh9FZ47Yn9iM4YodjdMX037
lq0X50HtMlxHgf1FGcfrtpkLSVt4v9COj32u2r5Qc98c065H5Zf5Nc4vPhVz
rmxK2UT4RPIPQkrzi1/CdfBFupAfiR3ctZdFV50pHyldiN/wHDoEezr+vKYe
VSfY2iGy70t0oZpxsrQfSvdIrWeJz6vVhXLlnhpHSTu+Y7h3AXWrZwmpdqVr
cx7tMbZ78UGYL2NNMUdN+ebmia51ZDXjfV+fykFeU34k46zGonhtQExX/dXk
obSfDtWFUrG3+NWxb5Yi7vvUG2Ud6xRoaOQpXMMxhp0R6u4p/TgcX1O2A/2E
dPWtnasZo0rHgq745JQuNK25vrSuc3TpQqQ5hHaAthav8UnRZUPmqLlvTR+E
Urt16JgD+OVxevrKQXvZlIC2QRvOHaXrdlLpTMFcwPhHWaTWmMWo3cb+DW2M
eQltibkf+4E0pDRR2Wc89wihDWjPn3BNWynS5nPxnDGUNXNxyiapqbMci9H3
HZM4rlGMrQvl7iNiXeitpx5vln/wL8+siRqiC739/Oz2jd6CrsK6LtGlq6z5
yX/ZvPDPvuf9322fc2z4vd9q07dz267nL8Q2tfdcOVcLZf1aShcidqkp2C+O
tWDc883rrtyV1ot3t7Wx0j+EuG+g/TF3Kq5tSN+I7T2t7w1t1K6+ga2EXcN4
Hh96Zq5njbLXGENiiOFL6ULYOiWQbu6p9bbhvD1W+nOUzunaX5E5l+uGmkCp
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
eU9XLp2AbaR3apRoQmhsQzUh0DyY0ktjsD2wHUrXggnqE9ui7/kQfZQxrU8T
gpo6y7EYfd8x6dPg5us+OV3ovc2b2nerr/nsp6aiC2275Yb23NdOnzu/bjny
oPa7jX/4tWSa33159z7n2264ete+09/46qxztNd1lS70459sv28CnwhtR+81
C3WhsdIvhr6nPoQ+qvcJT6NvqM+l4hFlj4Q2fkhoY2tOjW0V+Qk1uhD2Gd+H
MQza9y22x8dKf47cXCbfP76G5t0hupBit3nOnaq78F7Kdxg3Abm9jXN0lZ/2
xg33agM9L6/ZdzqlJ4RoL8p4bwCt607tRVljK2pvUD3TSdkmepaC/xlDWwxt
qS67rbYv1Nw3x7TrUfnFjor3RSW+hTFKz2T77MnS/HLtVCyDYsD1bgw9g8bf
6bKThupC/CbeV0l7KoW+a009Kg48jr8iVp3PS3ShmnGytB/q2XPfHjyqg/A8
0qEyqNWF4nLQvhihLqR9pzlKx27aJT4of8O9gkuoKd/cPEH71XuqYmrG+0l0
obhP0E+JySBdJc8yu+qvJg+l/ZQywyeJ99yVzlGjC6Xe+8Q6Gs4P3yuU04V4
Bq5+w/fEoMSMYWeE+06HcwN1xT3D8TVlO6TySRkTlxjajDVjVOlYoPkltR6x
a9/psef60rrOsVR1oZo+WGO3TjLmkEb2lw/pKwfaZtznc0y6v1BXOukHiusu
WTsmW6Bk7Viqj6Bhyc6Ix+PU9aQDxm2a9s/vc++el67dtUcS/VT7a3etHROp
OqP8SEepHrIYfd8xWYzvqY959YA/m9FWxtaF0J1Y/0WMzmunHNu8fsFZbVqA
tWusYeNavLuLd7y375/f55vt3j8vfeEzs6697ouf37X+69d+sd0DaNP//sNm
5T/4O7vfU79197P4Ll2I96hxPmvT2Gfo1UOXtemTNhbqQmOmHyZ5H1kIvofG
u7H7ht7RwnNRxjfmI41N2GeMdVwLO1LvtUQjxo6Kx1Ody74Fet9w13vqc7qQ
7AzsEsYwfDLSp/EhtMfHTH+K3FymMQVbEX+btfzUDf9nTB2iC4H8LZ6VUw7k
n7lJe/SHyMYjfiJ832zpe+r7yg/bW/MV+SePeu5e+n5z5jXKXm0X/5TrYIek
3lPPPKB316rucu+urdGFmO8oP+0FkdprEFuJfGnPO72bmmf9xNSEfbNPY6jp
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
McYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOM
McYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOM
McaYPY+33367PfrO2bFjxzylKJ+GvnSa3SyGOluKvPfee83WrVub9evXNxs2
bGjWrl1bffA7fs91uJ4xZv554403mksvvbQ5/PDDm3333bc5//zzq37/zjvv
tL+77rrrOj8bi+uvv769tsdtY8o59dRTmxNOOGHWZ8cdd1z7+Xxy0kkntYdZ
Wkw6T5iFI9X355Mnn3yybTMrVqzoPXeatsPY3HzzzW1at23bttBJ6YWyJ61P
P/306Nfe28aGt956qznzzDPbvF5zzTUzn6fK4cYbb2z/TR/kd4shnaabhayz
pcr27dubdevWtWPhpBokv+c6XI/rlrDjvrua5d/5l9pjy5EHzfl+5/vzCt+9
9As/M+vzFd/97c2LP/GDw9P67FPN5r/4k/bvUmQh048OSD/juO++++Z8jy7I
d+eee+6sz/fff/+JfIiNGzc2t99+e/t3KTIf6b/kkkuaAw44oLnnnntam2HN
mjVVv1/MutBSr3+zC9fj5FgXMpOQmicY5+mXJf7+tHjzzTeba6+9tjnyyCOb
/fbbr/17ww032J4PsC40HNJMGyddMdaFdjGpDbnUuP/++5tly5Y1DzzwwCyb
JFUOmzZtan0enb/Q6Xz11VebO++8sznttNOaQw89tDnooIPa+fiuu+6a489j
Yz/00EPNeeed146r5A2bAY3ptddem3O/119/vbnllluac845p7027Y0ySVF7
7Ryk+e67725OPPHENi8HH3xwmx/qINVnQ1566aW2fOJ+MWad7Q2+L9rN5s2b
p3Jt6qJEGwp1oVUf/1Dz3uuz29C0dKE3Lr+ovS5/lyILmf6wbxx22GFzbLZp
9Y1nn322vS5/lyLzkf5DDjmkueiiydoE428Y87dYdKGlXv9mF67HyXn33Xfb
I8S6kCklNU8wBtMvGZMXAvzxo48+urXfr7jiitYPuvrqq9v/067j9r63kur7
80mNLgSxPbGQdNkbpLHP91ws7Ny5s00rf8dmDBtyKXHllVc2xxxzzJzPu8oB
3YLfzSepdGKTMz4SR0RcDNrmySef3LZx5uWwPaOV8DmaMtr7rbfe2sZA8Rn6
S6w5vPDCC+13Rx11VOvLdelCtdfOcdZZZ7W/Ofvss5t77723PfRZ7E+G0Hel
JeX00jHqbE/3fUk/cT3ThOv3zQfShdZ89lPt381//sezvt8bdKFYCythMehC
p5xySvv3tttum/X9Uu8bJQx5fjnt9GMrcv2rrrpq1OtaF9rzwJ5cqDXqS6Ee
F2N8Ql+dWReaDgvZV6ZBbp6Yti7U16cUrxE/033sscfaz/ERhrDY628x6SYl
1OpCiwmvW+9mWjbkQlEyj7NWDF8mpK8cTj/99HnXzlLpXLlyZTIe57LLLmvT
//DDD898xl4vxNTEcA7ncv0Qyo74TWBNXZcuVHvtFMSocC4aVwzlzXfsU5OC
mCl0POKbcrrQGHW2p/u+lO+04yW5fq4ehXQh1kSt/dy/blZ+9Duad9e/MvN9
jS604Xd/oz33ndWrmvVf/bVm1T/5rva8NT/9Y832e++cOY97KUYpPF758q/s
vu/7feLVg/68efHHP9leY+U//LvNui9+vtnx0P1z8rBz+7Zm4x/9XrPq+z/y
/rl/o1nz736kefOqS5uN3/zv7XXf2/LqzLmrP/2JZs1P/Wiz/c5bm5e+8Jlm
5ff87WbV9324/Y7zNu3zzfb3K//xB9r7cv7mZfs0OwO7Zuz0w7onn2jWPPJw
8rsY9Q3i2s4444xWo9X40eajom8QZ6j+zjNC4hU5j7hI7iO4l3Ta8GD8E4zl
xE+iWXMNdGriGlP6J7bYTTfd1BxxxBFtzCP9/LnnnkvaDfK3XnzxxVa7Jr+s
OQbOYyzi94xL3Jfz77jjjlm23tjpj0GzSV1/1apV7fc8e0WDJ7/E5/OXOY/x
Pi6XmnVkjL9qA5Qj5fTUU3PXNpI3yknlzTMNxrhSO62k/BhvSKPWIHAv2lec
xy5Ip+JYSSd1QN0++OCDs85jHmSOUXulzpmbYvu+tH0zB3O/Cy64IJkunr9w
nVde2T02kq9wzQVtMlWnsuMpb3wvnv9wvvJU0xdq7ptiPupR+X3mmWfaZ2j8
njKnX/FdnBfOpVywYVTvof1Tml/+TzqJeeB+1DX9IW47QNqwf9RvaD+Ut9pP
X511rSOjjdDXDzzwwHZMuvzyy2eNz7X5AmLKse3oD6SZ2HL6QKkuVDpOitJ+
SFppKypznuGRNo17wHNLjdchtDPKmDYi+sr9+eefb/s9n3M/8sL1c2P0yy+/
3Fx88cVtujifsqYct2zZ0n5PG+AaqfgPbH7Swtg9Vvnm5gk0l9Tn9J2QkvG+
pE+l4Fr8LtZw0HX4Pdfpo6/+SvMg+vop9c79WEMRo7IOfVPNB8TT0w60PoPn
6VyT+f/4449v+y735N/xXiJx38ff4TqpfkQ/iNc8TGJnhGVMX6B9qS+kxtec
7UAdMAfSVilXrkH7iH3cmjGqbyzQ3izx8cgjj7Tf59aRjT3XQ2ld50itI1O9
MHczz1IOlNmxxx7bPProo73X7LMhcwy5b2kfLLVbh445wDn0oZpyoE5zttq0
iNPZhWJ9SjR+2iJl2zW+9ulCk1xbYGPkNCTmUL5L2THoSdQ19c44l9OFxqiz
xer7jgV7RE/7GQrX5z5dhLrQ9rtvb/+94X/8t5nvh+hCqz/18VZfQQt689or
mtU/+gPNyu/9zua9rbtssXdeWNls3u9Pd933/b/bbrupPd5+5smZe7708z/Z
LP+uv9Ks/8qvNltPOLJ59eC/aFb/8Mda3WfH/XfPuu+6X/5Ce62Xf/UXmq0n
Hd1s+tM/aPWeF//NDyV1IdbLrfrYB5stRxzQ5vmNKy5uv3vr0YeaVZ/47mbD
N77abDnm0PZY90v/ob0G6RBjpx8O/unPNPv88x/orCsR9g3W3Mbz/pC+wRyC
Xcu1ly9f3s6R2AzySbGjmYs5l7+MexyKT+SezB/EVOIHYQfiVxB3yZgRa9mM
D1yL+R6bjntrbW5KF8LGoN9iP5Nn6bb4YNgq5J/nnByKnyQdYuz0xzA2yo/A
xtP1tZaT+ZRxhGuSX8pdNk4Ya1qjC2m8QiujXMi7Yj5jX0bj+oUXXjirvJkv
SnShvvLD9qbN8D2xopSf1iBgp5SsaaUOlH7sSdY0kyeuw/8Fvp5sOfLBOYqz
JX8hpe0bmA+ZQ1NzH3kI51bsZ+oUmx5NhzlRZUqbCfMruw3bmnxgv6FxYu9C
TV+oue9C1aPySzopU/oo8xDX43PiD4TsHcqG9D/++ONtHa1evbo6v/jkahPc
g3ZB/cd2jp5pkU/6ENfEnuV68iH76iynC+Ff0a7IK9fFp6LsuFc439fkizTx
GW0TO5NzZcdwjRJdqHSchNJ+iD3F/cmf2grn0o7JixiiC+XKnf7N56o39Frm
BsZonSPwm6UdqYzxo7Ht+Q5ob9wv5RNhg/P7kjZfWr65eYJ+SZo0DujzlH3a
N9739akctCPaWGptDGWY0oxi+uqvZs4q6adDdSH6Kd/jazIf0Ba1PyptGa1C
94v7edz39Uw+9SyZug/nlEntjLCMqS/mNfocZUma4vE1ZTtQJ6oDyp/zmQvw
s8K9bGrGqJKxgD7C/6VpqY3jj0JKF5rWXF9a1zm6dCHmSfJJ26I8SSef9/W/
PhsyR+19a/pgqd06dMwB0hn6KiXlwNhCP5pP4nR2wXxC+im3PlR25LXvnFpd
qOTaIdQv4xX6Dto5B/2Yfs0+cyloO9LLunShMepsMfq+YxLbMOLxb31r5hDv
vt8faj4vuY8IdSFY96Wfa1b8vb/WvLNqV4zqEF1o8//5o1mfS2/aetxu27Br
HRZ6DN+9fuHsNoSu9MInP9qs/fxPzHy27cZrdmlZX//K7HvecctMHE+sC7X3
vXTuHv87328HOxN2z4av/Waz/APf1upBY6dfDNWFAL+SvqxnoEP6RhyPpz4X
xpR3xdJxXsq+pm8xV2BzCI35+EwhzCHSYmNdiM94dhjDs7fUczrlS2UyZvpz
yAZLxb6m4mk1d/TZcanPsLH4LPV8i/aAHaV76pllnC490yjRhaCr/Gg/KbtC
NnNuTgnRM/PQpxShr8JzR+YpbMYQxe6G6atp37L14jyoXYbrKLC/KON4fzjt
vRfeL7TjY5+rti/U3DfHtOtR+WV+jfOLT8WcK5tSdgs+kfyDkNL84pdwHWyY
LuRHYst07WXRVWfKR0oX4jc8hw7Bno4/r6lH1Qm2dojs+xJdqGacLO2H0j1S
61ni82p1oVy5p8ZR0o7vGO5dQN3qWUKqXenanEd7DPUuwAdhviyJv4ea8s3N
E13ryGrG+74+lYO8pvxIxlmNRfgJXXTVX00eSvvpUF0oFXuLX13iP8V9n3qj
rGOdAg2NPIXvkxrDzgh195R+HI6vKduBfkK6+tbO1YxRpWNBV3xyShea1lxf
Wtc5unSheB0O7QBtjWdzfXTZkDlq7lvTB6HUbh065gB+eZyevnKgPcexlDnY
G5o2nDtK1+2k0pmCuYDxj7Io2fNZ7Tbl34ihulDJtWOwofAnNeZLJ0qBpsr3
ij/p0oVq6izHYvR9xySOaxRj60K5+4hYF3rrqceb5R/8yzNrooboQm8/P7sN
oregq7CuS3TpKmt+8l82L/yz73n/d9vnHBt+77fa9O3ctuv5C7FN7T1XLp97
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
WvIuma76q8lDaT9l3MzVs3TsGl0oRr5SGO+V6vthmhlriF1M5XUMO2PSdWQp
tGeQYkBqxqiasUBtoEQXmo+5PiRV1zmWqi5U0wdr7NahYw79gHE7jjPqKwe0
wr45StAfaS+5I/WekdJ0AraR3qlRogmhsdXqNqW60JBrC8bQ3PM8zY/ad1Lz
Wt8RvmOxps5yLEbfd0z6Ytfm6z45Xei9zZvad6uv+eynpqILbbvlhvbc106f
O79uOfKg9ruNf/i1ZJrffXn3Oxu23XD1rn2nv/HVWedor+sqXejHP9l+3wQ+
EdqO3msW6kJjpV8MfU99CPOo3ic8jb6hPpd696XskdDGDwltbM2psa0iP6FG
F8I+4/swhkH7vsX2+Fjpz5Gby+T7x9fQvDtEF1LMJ8+5U3UX3kv5DuMmILe3
cY6u8tPeuOFebaDn5TX7Tqf0hBDtRRnvDaB13am9KGtsRe0NqucuKdtE7/rA
/4yhLYa2VJfdVtsXau6bY9r1qPxiR8X7ohLfwhilZ7J99mRpfrl2KpZBMeB6
z4+eQePvdNlNQ3UhfhPvq6Q9lULftaYe9Qwutte0F0CJLlQzTpb2Qz177tuD
R3UQnkc6VAa1ulBcDtoXI9SFtO80R+nYTbvEB+VvuFdwCTXlm5snaL96T1VM
zXg/iS4U9wn6KTEZpKvkWWZX/dXkobSfUmZosfGeu9I5anSh1Huf9Fw83Fsj
pwvxDFz9hu+JQYkZw84I950O5wbqinuG42vKdkjlkzImLjG0GWvGqNKxQPNL
aj1i177TY8/1pXWdY6nqQjV9sMZunWTMIY3sLx/SVw60zbjP55h0f6GudNIP
FNddsnZMtkDN+i4o0YVqrk37ZzwP99STXRjru+SRsuY7zQH8LrUmT2XB+Mb/
w36WqjOuzTVL9ZDF6PuOyWJ8T33Mqwf82Yy2MrYuhO7E+i9idF475djm9QvO
atMCrF1jDRvX4t1dvOO9ff/8Pt9s9/556QufmXXtdV/8/K71X7/2i+0eQJv+
9x82K//B39n9nvqtu5/Fd+lCvEeN81mbxj5Drx66rE2ftLFQFxoz/TDJ+8hC
pPlOo2/oHS08F2UMYj7SOIF9xnjEtbAj9V5LNGLsqHg81bmsZdX7hrveU5/T
hWRnYJfgu+KTkT6ND6E9Pmb6U+TmMo0p2Ir428RiUjf8H5t2iC4E8rd4Vk45
kH/mJu3RHyIbj/iJ8H2zpe+p7ys/bG/5xeSfPOq5e+n7zZnLKHu1XfxTroMd
knpPPfOA3l2rusu9u7ZGF8Iupfy0F0Rqr0FsJfKlPe/0bmqe9RNTE/bNPo2h
pi/U3DfHtOtR+eXZeOo9yuF+jH32ZGl+6WPE5JBWnmnxfIs1EvQv7htqRvI/
+Jz+ov5AWuP31NfqQnpPPWXHdemzqffU19Qj9c+5k7ynvmacLO2HxGqgxZAu
tRXOpR2Haz/IK/VAeskXYyt+CUeNLsRzXcqWg7GPfKB1Mw5Q9vFaNfxZ0sb5
1DnlxvxI3vSe+hD5QbG/WUJN+Xb5PJxPfihHyiL0yUvH+0l8NMqKmBHGIL0/
hmuF72Lsoq/f1MxZJf0UFANB2dP36SOUoWJhS3Qh6UvMxbRPxg/aCnF6zDVh
rG1OFwLFA+X8xDHsjPCdb7R72hp6k+bycHxN2Q7cF/+Mvoifw7ij2NRwvXTN
GFU6FmgdMfVNGXM/aURd76kfc66vqescS1UXgtI+WGO3TjLm0EboNyF95YBe
XBK/CJPuL9SVTrVZxiTKNT7CPRa1BxltjPE1Pjc1xuo73Yc+rs+IbR16bcW/
xPo08zufMx7QN+gX5DnV31J07S+UqjPFyMbvesmxGH3fMUFvG7ondylcP9QD
U3TpQrwza9X3f2QquhDwHndidNBX+N2s79+3Tbcee1iz5rOfblb8/b/VrPjI
32xW//DHmld+/Uvtu+njdBKbs+r7Ptzeh3VcrO9a/9v/dVd6ArugSxfiHfVo
Qy/84D9q0/TCD33v++Xyv5rt9945RxcaM/0wli6E7yFbbuy+ATybZV7Q+0nC
79F+mT+wbxifmDuYezgnHMOUTsYkbAmuxdjDWMU8wHVDvbtLF2KOZ27DfuE6
/KVcVEbxvgNjpT9F11zGOKI9GniGjV+Hn8N9hupCwHzAWI49T56wbaj3ON+U
J3MLbSMs7671/im6yo/xhjSSBuwL7oXfVhLDEuaVeYzxl3vIvo/zg97NPKV8
00b4XRwzMjS2XDoa7SkHcwXaA/dWWikbyjTcn6/PV6rpCzX37WKa9aj84gNg
b+JDaE6NYz1K7MmS/BLbTl3zOX4Z/YzzuW5qniWN6BKcSx/kXPxLtZ+huhCf
82wbG0j+DGWbKruaeiR/jBOkl4M+jz3LeF6iC9WOk6X9EN+RcldbYWxj/GEv
ihB8DGw/zlE8vtYjlOpCQBwJvnNYDviOuT2MiBuhL6NJaXykPlLrNhXvwXX6
9tGJqSnfrnmCtoPPTtvhnNinKxnvJ/HRSBM+Dv2He3Dtmney9dVfaR7C63X1
U9C7vFTH+DS0v659p1PzAbqD9gEL20rsN3bpQnqPHUduL5JJ7YxwfKWNdY2v
KdsBHUR6Ab+jzzJepfbiqhmjSscC/FbOURyHdKyULgTTmOtL6zrHUtaFoLQP
ltqtk4w56NDxHNZXDmibPOOcT1Lp1Dr13BGmUXHouUP7D4Z0nR+uN669dk4X
otyx2TTvc9Df0VxK5sQuXShVZ2PqQgvp+44FZRyuvZsG2ESl++vviRCrg1Zk
lg6MHSn73pi9jaXaF0p8Q2MWG+xDMdS3McYYUw/aT05nzcGzM/b0mU+GpNPs
ZiHqbCmCFq/9MMcGLb80BmCpk4pPamN8PvBtzSu/+Z8XIEWmj5RGKy04tb+C
MXsqe1pfsC5kliJd+/MbY4wZH9ZBEl9GXFkY25eC79l7kfilkn2gxqQmnWY3
C1lnSxW0IeKGiJ2cdL8hfk+MH3FCe4smBJv++BvNui/9XLPlqIOb1848uV1T
xrot9s1+e/ncPfPMwkNsMmtNtRcI8YyMG8Qp2y43exN7Wl+wLmSWCsRt015Z
lxK/e9kYY8x0wWdljRo2A2t7utB7p1gXVfO+yDGoSafZzULW2VIG24R9gFhH
y/pWnhXXHvyO33OdvW3t2JtXXtKs/ff/qln1sQ82Kz70V5tVH/9Q8/J/+WLz
9rNz32drFgfsp8m+AYwVWouOTV66P4oxewp7Wl+wLmSWCtrfgP0y0Ganveej
McaY2RBTwvtx+2wenpNx3kLF65Sm0+xmoevMGGOMMcYYY4wxxhhjjDHGGGOM
McYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOM
McYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGP2FN55553mzjvvbJ5++umF
TooxxhhjjDHGGGOMmWceeOCBZr/99mteeuml6t++8cYbzaWXXtocfvjhzb77
7tucf/75U0hhHU8++WSblhUrVszbPbkX99xb9TX0RfJ/3XXXLXRSklx//fVt
+nbs2LHQSdljWextwBhjjDHGLByPPvpoc9JJJzUHHHBAc9hhhzVXXHFF60tO
6xqvvfZac/nllzeHHnpoe/7JJ5/cPPHEExNf+6mnnmq/O/HEE5tly5a19u/G
jRuT11y7dm3rh3DuQQcd1F73jDPOaK+R4pZbbmm/x7fef//9myOOOKI555xz
mueee27Oua+//np7Pt+TR9JxySWXJK/Luddcc02bv0MOOaS99tFHH92Wz/r1
65O/wacmLaSZMjn22GPbvHCtFPhZN998c3se1+c+Z511VrNq1apZ5914441t
WlMHusTQPHL/hx56qDnvvPOaI488sk3zcccd1+abtpAC/4XrUxYqk9tvv715
991355xbU++1eaypm5prk5fcuRyUaczVV1/d1uHbb7+dzFsO6oUyv+eee1pN
ZM2aNVW/Hwp1QD5TdbEUdSHaJPmZzzSPyWLXBKwLjUNXO10sbaBrbDDGGGOM
MfPPXXfd1dqJp59+enP//fc3N91004zWUGqf11zjzTffbLWBAw88sNUqOP+0
005L+s611z7zzDPb77ge33fpAyeccEKbhgsvvLDVH7CT0Xr4DVpAzFFHHdXG
WeC73Hbbbc1VV101o4fgb4e88MIL7ef85txzz+3UTIj/OOaYY9rv0RVIy8UX
X9xqEByxD3/HHXe010NXYW0RZYZOgR5C+rdv3z7rfHQXrs/3pJ8yv+GGG9p0
3XfffbPOla5BGrh2eKxbt25wHvHD+Z4yv/baa5tbb721TQufHXzwwck60jXJ
G3kk3oX/X3TRRXPOran3mjzW1k3NtVevXj3nHI7LLrusvQZ/Y957771WD7zy
yiuTecuBppUqt2nz7LPPtnnhb8xC6EI7d+5s/WL+DoHxhjQzBixFFosmkMO6
0Dj0tVPaAWPJQtI1NhhjjDHGmPmFeAj821NPPXWWnfjMM8+0NhsawtjXwCfh
8zDOht8RM4ROs23btsHX3rp168x5aDtd+gAxJm+99dasz/g/egu/27RpU1He
STN6THwd9C8grqlLM8lB+aT0Ae5FfFPsO6FFcP5jjz0263PigtBeiI/qQ7pG
WAc5avK4YcOG5Pqnhx9+uP0dmk+IdCT0qxC1nVhLqKn3mjzmyNXNGNcmJohr
oLuNAfFVXA8dc2zi/hOz2HShSVlMutAQ39660G7QBrvi7vradikLocEspnaa
w7qQMcYYY8zigfgbbLPUGi7Wy8R6x6TXwBYnxoaYjhj0DK6DVjBG+vr0gRxa
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
Y+K6meTa6J7Eb6H5jf3uojF1oZL3E4YMfR8ZbSPcz1lpRVemn6UOvRuviy5d
qCQdXf52TRqH6kKpuuK6aJS0R+KPtJeMPg/7ZI0upDQSQ0K8k/LFWBLrz7V1
OZYuRHxnrqw5NL50pa+rbQ/VhVL1NFZegPIhT8yVjIXck/rXs4KhulCqDNCF
GJdiUrpQTZvp04XGLA9jjDHGGNPNQryPjGd7i+V9ZOy/K/9+6Puy8be5Ty5u
aRJdiHIKtQfs4Vg7E3pHVrgegnLjM9bcxeh96H3xYKDYolwsVWke8Vv7NCGY
5vvIcvTlMSaum0murXVFtbpLCTldSO9+qllHtlC6kLTXlI5SwzR1oZo0cn/O
rV1HltIb1Lbid48RTxH3yRpdiP3SOWKkBwzVhcZaR8a4jX7QNY6UpK+rbTM/
8F3tOrJaXagmLym0h7nmzoXShWraTNfYMHZ5GGOMMcaYbvAdeOaJPR7GXctm
i+1E9t1BmwjPrb2G/Jhw/QgxEuwpwh4s4btbaq8d0qcPcB/2JihZO4Y+kfJV
uDZrN9C6cjZsn2bCPp+pGBFpOuF+M6xVI73Y6XqnlNC7x8J3WXE+6WMdR7jO
jTRhd4fxKfgLqdgrdCO9wzz3/LVEF8JG55zc2rEQ+c3xugZpGan1KqKr3mvz
WFM3k5Sf9oFK+cqT0rfvdBhfBpRbbt/pWl1Iewyn9I8aLQHtinNZW5jyuUv3
wp5UF6It6B1JMTVpZCzR+9nDvkCf7tp3OnVd6SxxGWicHaoLEa/BvmThuEta
aReT6EJqE7G2rTXGpbqQ1s2m1j5BWB5DdSHQvtPx/jV6J1dpPY2Vl3jcB9YR
8nv2vIOudjpNXaimzXSNDWOXB5AmbBf21TfGGGOMMXPRmhHi4Vnvwl4o+Czs
mxPbXLLv4r10aq6BDYpOgQaEHUpMEHuT8vvUHrQ118a34HwOPXtGS9BnoQ+m
73lvsb4PD9YQCGxg0kscC7Yqz/T1Phbs79S+07qO9qNln2h9FupQ+Ot6zzTX
Je4AX4TfsK9D/N4rlQdlSBwQNrTia4ihistEcVjY62hGvEub35Lu0D+mXtAv
KA98BtLCdTlv0jxq31HKEP0qLmue78aQDn6Db0O9a91gan/Y0nqvzWNN3Qwp
P0D75Pv4XU5jkdOFQGVKmilj2hP6Ve499bW6EG2RMiGGAF0Q/1zrLWu0BFC7
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
Hun/ZQwIGe59I4cm7y+7nX/miqTPeNwm0oWWPZhPDtYa9eFQj0PRP6FTnUkX
6g6D2Ve6QdVzotu6UKc+Zf4a8Tvdu+66y3+OHdCEoV5/Q0k3yaFUFxpKaN16
Pd2aQw4WOc9x9A5smZBO5XDMMccMuHaWyifMnDmz5//MAep0oRRz5851u+++
u/fvCUGnR9c54ogj/DlNqEo7BbFoJk6c2Ofz22+/3dcF958D/qWcz+9C2qiz
Zd32xQes2/6SpB/7msWYLsSaqEc+t74bvdrybvGjU3q+L9GFpm7zU3/uE+PG
uEe33MKNeeur/HkTNlrHLbjx2p7zuJb5KIXHlJ98Z+l1nxpPZu7xbzd+3Xf7
NEa/4eVu0jc2do/fdnOfe1iyYL6b9pffujHvWOWpc1/oJnzig27e+We5aX/a
2qf75Kyl/Xbc2m93Ez71Ybfg2ivdxC9+3I1+3UvdmNVX9t9x3vS//8n/fvSb
V/DX5fwZO//dLQnmNW3nHybde4+bcMftye9irG/g14bfIP57+H8bJX0DH0HO
pZ2g+zIOcd7RRx/dS4/mWqbThsfZZ5/dcw5jOT6V6M2kgcaMT2JK/2Quhr7M
eIUeTj/H3zE1bzB7a/z48e7444/392tjL+ehVfN7NHuuy/nXXHNNr7le2/mP
QbNJpY/eD7x75X0C94t/Pv/yzAv9La1cStaRofFbG6AcKaf77uu7tpF7o5ys
vHnWMMblztNyyo/xhjzaGgSuRfuK77EO8nn99df7dwv2noS6vfXWW3udxzOM
Z4y1V+r82muv7TO/z23fzF+43qmnnprMF+9OSGfKlKVjI/cVrrmgTabq1Obx
lDe2F+91ON/uqaQvlFw3xUDUo93vAw884NeWm/8z/Yrv4nvhXMqFeYTVOz7k
pffL3+QTnweuR13TH+K2A+SNd1vWb2g/lLe1n051VreOjDZCX2c+xpiED3g4
PpfeFzC/Y15GfyDP+IfTB3J1odxx0sjth+SVtmJlzjs88mbjHvDOMTVXpp1R
xrQRo1O5P/zww77f8znX415Iv2qMnjx5sjvjjDN8vjifsqYcZ82a5b+nDZBG
yv9j9OjRPi+M3W2Vb9VzAs0l9Xk8n88Z73P6VArS4nexhoOuw+9JpxOd6i/3
HoxO/ZR653qsf4ixsg5tU3se4E9PO7D36bwLJ02e/6yFoO/auog4lkjc97F3
SCfVj+gH8ZqH/swzwjKmL9C+rC+kxtequQN1wDOQtkq5kgbtI14vUjJGdRoL
zJcgPu644w7/fdU6sraf9ZBb11Wk1pFZvfDs5jlLOVBmrLO58847O6bZaQ5Z
RZPr5vbB3Hlr0zEHOIc+VFIO1GnVXK1bxPlM0UQXAvofRwjtk/u2tss41sSf
LpV2CfQV6j5n/AfaHPnmfUJIG3U2VG3ftiBGdLffoZA+16kj1IUWXH+1///U
3/+y5/smutC4td7m9RW0oHn/O9eN+/A73eg3vdI9OfvpudgTY0e7Gbv84+nr
PvXv/Ksu88eiB+7tuebEr3zSjXzVc92jP9/czT50Pzdzz/+4cR94i9d9Hr/5
+l7XnfTtL/q0Jm/+NTf78APc9H/82es94z+2ZlIXYr3cmLes6Gbtu5u/58fO
PcN/t/DO29yYt7/GTf3dlm7WgSP8MelbX/BpkA+j7fzDnht93P19jXfW1pUR
9g3WeMbP/SZ9g2cI81rSHjlypH9GMmcwm5R5NM9izuXfsWPH+sN8C7kmzw98
zrGDmAdiV+B3yfMh1qEZH0iL5z1zOq5NHyd/KV2IOQb9lvkz92y6LTYY4zD3
z3tODvN9JB9G2/mPYT2o2RHM8Sx986Xkeco4QprcL+Vuc5xwrC/RhWy8Qiuj
XLh3/p+yZbCN+Py0007rVd6M9Tm6UKfy45lFm+F7fEUpP1uDwDwlZ00rdWD5
Zz6J7yv3RDr8bWDr2VyO++Ac2rrdX0hu+wbsBJ5/KRueewifi8yfqVPm9Gg6
zIWsTGkz4f3avI25ta33RuNkvgslfaHkuoNVj3a/5JMypY/yHCK9eL5g80nK
hvzffffdvo7GjRtXfL/Y5NYmuAbtgvqP33PxPdfkPulDpMl8lvTMhuxUZ1W6
EPMv2hX3SrrYVJQd1wqf9yX3RZ74jLaJTcy5No8hjRxdKHechNx+yHyK63N/
1lY4l3bMvRhNdKGqcqd/87nVG3otzwbGaDvHwG427cjKGDuauT3fAe2N66Vs
IuwAfp/T5nPLt+o5Qb8kTzYO2Oep+Wmn8b5Tn6qCdkQbS62NoQxTmlFMp/or
eWbl9NOmuhD9lO+xNXke0BYtPiptGa3Crhf387jv2/v01Ltk6j58pvR3nhGW
MfXFc40+R1mSp3h8Tc0dqBOrA8qf83kWYGeFsWxKxqicsYA+wt+maVkbN1+I
lC7UrWd9bl1XUacL8ZzkPmlblCf55PNO/a/THLKK0uuW9MHceWvTMQfIZ2ir
5JQDYwv9aCCJ85kiRxdifGW8x8+IeuJZTr+JdRTTm2lrNifjYPypKtfctEuw
uqUuUtBfuSZjPPVuc5L4WdFGnQ1F27dN4jmMcfeOO/YcxuKn+kPJ5znXMUJd
CCZt+iU36tXLuSfGPO2j2kQXmvGvv/T63PSm2Qcv7S9167DQY/hu7mm92xC6
0th3r+Ye2fijPZ/Nv/TCp7Ws3/y89zWvuaLHjyfWhfx1z+ob43/JU+1gSWLe
M3Xbn7mRKzzb60Ft599oqgsBdiVzD3sH2qRvxP541udCn/I6XzrOS82v6Vs8
K5hzGDbmYzOFMNbZ2BfrQnzGu8MY3r2l3tPZfVmZtJn/KmwOlvJ9TfnTcq2c
eVzqM+ZYfJZ6v0V7YB5l17R3lnG+GNtS5V1FXfnRflLzCpsz41vaCXtnHtqU
Rmir8N6RZx1zxhDmL3H+Stq3zfXie7B2Ga6jYP5FGcfx4ZjXk7fweuE8Pra5
SvtCyXWr6HY92v3yfI3vlzkNz1ybU9qcA5so5Sude7/YJaTTaR292ZHMg+ve
vdXVmd1HShfiN7znC2E+HX9eUo9WJ8y5Qmx+n6MLlYyTuf3QdI/Uepb4vFJd
qKrcU+Moecd2DGMXULf2LiHVrixtzqM9hnoXYIPwvMz1nS8p36rnRN06spLx
vlOfqoJ7TdmRjLM2FuFnU0dd/ZXcQ24/baoLpXxvsaurbJ+QuO9Tb5R1rFNg
F3FP4X5SbcwzQt09pR+H42tq7kA/IV+d1s6VjFG5Y0Gdf3JKF+rWsz63rquo
04XIcwjtAG2Nd3OdqJtDVlFy3ZI+CLnz1qZjDmCXx/npVA6055y1UYBGQhuu
OnLX7aTyGZOjC1lZ2UF/TcWG5tlF/fEcQkOm3Hk2cz72XuwDV5J2CdavUvZX
+L0djIOpdlNSZ1UMRdu3TVJ1Cm3rQlXXMWJdaOF9d7uRKz6nZ01UE11o0cO9
2w96C7oK67qMOl1lwic/5Ma+53VP/W5Bn2Pqb3/h87dk/tPvX/Bt8tccPbJv
Ohutk9SF8F1yGfHiWAvGNedddN7TeT1jaVtrK/9NiPsG2h/PTvNra9I34vme
re8N56h1fYO5EvMaxvP4sHfmph/bfC1cl2vgw5fShRjfciDfXBPdN35ut5X/
KnKf6RZfkbGTdENNIFcXsjkUmnWcX3tu2xzNyjsV497WDvRXF8KXhjqK55rM
CXkW5PixsraNeUmdHWC2ZMoflbLgO96RGCXt2/IaryFnHk09me+01Rv9LdVe
sBlox4bN21L7J5T0hdLrVtHterT7TWk0pi/RP8HmMbFNVXq/2Eeci31fNy+1
98Sd9nipqzOo0oWYF8ftl7K0NW2l9wXUCWNTqnyYEzVZN183Tub0Q9qklXcn
muhCVeUeQpu0++DdKjqkYT4RsUaXgjGAewnX3KOL8vtOaziqqCvfJrpQyXhf
16fqYF5BOdDHGRsYk/DrwB5i7kCa4TraFHX1V3IPuf20qS6Uug/6Ef2s0z2m
+n7Kt8x80cK6b2OeYWVs878Qyj0cX1NzB7R9roOdVxU3uWSMKhkLSnShbj7r
c+u6ijpdKI6rApRVzjjdH10o57olfTCmbt7aZMzBhw6bnLTwKQzpVA74H/Ps
w1+0k65D+qFuER+USdN8xuToQrRHxlfajvkKMnbEWrGNuXGsZrP/Ur43uWnn
YmvC6tZM0Ye4Jn536FeUE/p2rA2V1FkVQ9H2bZOhqgsBsYHQcRbedXsjXYh4
PzGcP+Wn3+35u05XYQ1YKn5PeDwx4el3WpO++Xk3auXnJ3Uefx8JXYj1ZVXM
OfoQr+uw3iu+5uwjlsaibyv/TYj7BvB8tPlOk76RsgFMpzbq+gZ2RN3Yy2Fr
17ETSDuF3UesC9U9UxmPmG9hk8XXDJ+VbeW/irpnGc8T6gP9P043fCedqwvZ
2qO6w/wLSsu7ik7lV6VJ8Pzid5327iCNTnF7zQ6o8mXgPsN3riXtG8J5E/A7
8hX2pfD9edUR7lsRxtyIKamb0utW0e16DOMLxZjvmr2Lsflkyg+p9H6ZB9kc
kPGC53o8j7N+k2t7Vc0DqnShUJsIoUzRhprcF74wVf7XvPfO1YVyx8mcfmj3
wPqSTjSNL5TCYgGgUcb3EL6LNJ8ns4/rMBszfJ6ixeX0pZDc8m2iC5WM93V9
qhP0WeoqTJcx0tYhp/TrkLr6K7mH3H7aVBdKPe8Ym2y9HP2K+8a+Svk8xn3f
9L8wjpLtTxTGrmpjnmFlnLL1TK+w8TU1dyB9W5fC/VLW5DvUtErGqJKxoEQX
6uazPreuq6jThVJjDvOHlLYf0x9dKOe6JX0QcuetTcYcW5uTWuOUUw523510
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
P+KII9w999zTStpLlixxt956qzvyyCPd7rvv7vbYYw//W+zqkOOOO87Pj6uO
008/vU/aEyZMcCeccIJPk+PEE09M2uklaS9cuLDyPMon5tJLL608P75HmD17
trcBDjrooJ7yI38p2/iuu+5yJ598sttvv/38uVz/qKOO8ukuXry4z/lTpkxx
p512mttrr73crrvu6g499FB/LnUQgp1322239Ur74IMPdhdeeKFvC52gjHfe
eedKm/6+++7zbeKwww7rOW/atGmV6ZW0v3nz5rn//e9/Pt/oMvx7ySWX+Hrr
T9pXX311bRtJ1f0FF1zg63HRokWV95bizDPP9Hm54YYbfPnRjgcC6oD7TNXF
cNSFsKm5n4HMc5sMdU1AulA71LXTodIG6sYGIYQQQggx8Fx33XV+nnjMMce4
m2++2V122WXehsT+zJ2fl6SBnY1tjWZz+eWX+/OPPvroSl2jJO0nn3zS+0Jw
PnoGc98rrrjC28X4S4Tcfffdfm1OfHAdfn/77bf3On/cuHFeF9h///19njhM
44i1oZK0TRciv/H5N954Y5/yMF2I+4rPnzRpUq9z58+f73Ug8o1uQvlec801
vuxIg3sIQa9CM0Kvueqqq7ydhn7DuWg6IWgL3Puee+7p6/Gmm27y56RsDuxw
Pkc3QmO58sore+qJ39fZBtQpeg86XJVNT57JC+3I7q0qzZL2R/kdcMABXmui
/DgXbYa/qa9YKytJm/aUaiNnn322P59/U2Vx7LHHuvPOO6+yvFKg26V0zm7z
4IMP+nvh35jB0IXQK7GLY90yF8Yb8ky/GI4MFU2gCulC7dCpndIOGEsGk7qx
QQghhBBCDCxz5871fh7YuOE88YEHHvBzNmzbttPAJuHzhx56qOczfodfBfY0
tnjTtM0HA3+hpqCDkI/YHwRNA20i9G/BF4dzyV/TtE0XyrXVTBcKy6mKO+64
w5+LxhOyYMECnw80j05Q7twf6cyYMaPncz5DH8FnKATNgnNDjWrq1KlJvyr0
Mc6NNbsQtBJ0DXSwKl2IerD2gaZVpwuVtD/aV0rTwa+Kz2PdriTtKtCdSGPs
2LEdz80B7Yr0zj///FbSC6nymTKGmi7UX4aSLtTEtpcutBS0wTq/u05tO5fB
0GCGUjutQrqQEEIIIcTQAX8G5mapdS5oBvvuu2+raTAXZ30MPh0xZmuHvjQl
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
VZ9G6+U+Qt+VTvXUxr3QJ20NK74yjEW059APqqkuFOrwBs9T1pbF0JbDMcLI
bTN1Y0Pb5SGEEEIIIepZluIL2Tv4lP+JxXyusmttDUi43iGkP/GFOqVdB/Px
nD3DwHzvw3UjZvun9Ch0gir9JIZ4HJybinuDxoR9iy6CPWLv2FP6HGBPoAlh
L6Y0IasrfKtoE3YQ+8Y0Lv5O/RbajC9koJ3hV4NvmtkjFp/WdLX+xBciDdYP
oT+1vXdRm7pQzv6EIU33I6NthOsQLa+0MXy4UkeO5lqnC+Xko87eLsljU10o
VVekiz8gfh2MTxZLxj4P4yeX6EKWR3xI8Hey+7KxEN/AJmXYpi5EDJmqsuaw
MaIuf3Vtu6kulBPLrum9AOXDPTGe4LvINal/09Gb6kKpMmAcZ1yKSelCJW2m
ky7UZnkIIYQQQoh6BmM/Mt7tdWM/Mux1zg3n6Ybty1Xl02NrG6rWotTtR2b7
slftR9Yp7SqwIfkd6zBywL+e80OfJouPmtL2zAbL8b/vVH4htmYutWYDu7VO
EwKzNzod8b40Rqf9yEraXxW2hiRcX9KftE3TLNVdcqjShWzvp5J1ZIOlC9ma
ypSOUkI3daGSPJr/Yuk6spTeYP0+jlFv42FTXYi1pql4aNY/m+pCba0jw+5H
P6gaR0Ka6kLEdov7uVG3jqxUFyq5lxQWw9zGl8HShUraTN3Y0HZ5CCGEEEKI
erAdeOfJfDz0u7Y5WzxPJAYw7+rCc0vTMDsmXD+CjwTrpYiPE+7dUpq27WES
agakTTxfzrcYxiHMk7HnWetQ53tuMXlCjYX88VnV3ls5ads6pBDmw2abhz46
pJfSeFhLZ/uMh+9IzccmXj+HHYAvUjj3Ju2UXxb+QBZjIizX1JwdW8/8XmLb
zvyqqtaOGcRKwm6OD9OxWOvA33E8bqNOF4KS9pe6T8oX7ZF2Fu5F1SRtw/S7
Km2xP3SKOx37sVFuVXGnS3Uhi72V0j9KtASL800/TtncubGw+6sLUZe2R1JM
SR7pG7Y/e9i+aNN1cadT6ZrOEpeBtcWmuhD+GsQED8ct8kq76I8uZG0i1tht
HWauLmTrSlNrnyAsj6a6EFjc6Vg/tz25cuuprXtJjXvmY2m6fV077aYuVNJm
6saGtssDyBPjNXH1hRBCCCFEX2zNCLYua3SIU4PNktoLy+Z3cQzKkjSYg6KT
YCczD8UnCJ8Yfp+KQVuSNnM+tA4O22vX0k69OwXzhSFWTh3Y0djL+Ckx30Sv
IR5xvG9uadrYEhYXAV8B7DnzhUdvCm0Myg79h72WmddzPvFSsQE44v1b8DnC
JjP7kPJFK7J4OWF5o3GRBnYAeeA8tBiL3RDbkpQHdYB9x/2Rf+qUI47PbTGY
+I50qdPwyInHXRdfiOtZWuZzQH3bZ6HtXdr+uH9itJBvysDKM5Xn0rTDcq+L
Sd0fqnQhsLWYtCf6FvXI/VbtU1+qC9E/aa9oquiC2OempZVoCWDjAG2OfLI2
hRjf+HLQL3Pory4EaHzE8aH++S1rLJvk0dbc0F5pG/xNv6/bpz6lN5h9jU1O
HbKnN/nmb+qxqS5kcf1Z98V9kD/qkfvvjy4Etkck641oF033qbf9BHg2MCbb
nveUKbHpcvLXqW3bPvXUue1Tb9et2qe+VBfKvRfOszrlHPwQeQ7ZmBPqylXt
tJu6UEmbqRsbulEe5kOVG69PCCGEEOKZCHM45uTM0/AjwcZPvYOv0oVK0gB8
QrBJOY/zSbcubmxJ2vg7MF/HvuV87CNspSostjV56gTvITmfOSd2DHPmurjc
OWkzX2cezVyW/JI25cH8NrYv8FVhPs/33B+2JnN2fD6q8kE5od2QPueTb+ba
sb5C2jbvpow5l3/RDGK9CfAtwq7D5iPf/Eu9pHxeLPZR1ZGKaxpTpwtZXPCq
I7YzS9ofegr2OvYHZY6dW7WPW2nagG5AHnPiJjehThfiHbrZbraHHG0xXlvW
VBcC2g590PZvs/hfpVoCoC/SHq1v06Y5N7Q362hDF8JvBA2Pfsrv4u9L8shn
+FeY3kyftzWH4XrQTnoD92DxrvA3Qs9FEyaPTXUhbG7sfPLFffAv/Qzbvb+6
EDotbcnGDrQwdDBb25gbt5n2y9jCmMW92vsC2lhYfv3RhQA/0/CZQp2hAcax
wJrqQiX3whiN1mzjC+2Lc2I/mKp22k1dqKTNQNXY0I3ykC4khBBCCCGEEGI4
YD4XOfHghRBCCCGEEEIIIcTwIxVjC58GfDNYnyqEEEIIIYQQQgghlk2ITc76
KdaOsSaHdUmsgcFXKLVuUwghhBBCCCGEEEIsG0yfPt3HcrIYO8T9Ih4Z8YmE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYRYlnnyySfd7Nmz3aOPPuqmTp3qHnnkkeKD3/F70iE9Ucb0v/3BjXzl
s9ziaVMHOyutcu+997r//ve/btSoUYOdFdEPHnvsMXfWWWe5ffbZx9fnKaec
MthZEssQV111lTv44IPd4sWLB+X6Rx11lDv00EMbfVaFxr5nJo8//riv94sv
vrhf6Rx++OH+6Aa0SfJ4//33dyX9NijpP0888YQ/96KLLhqAnDXn8ssv9/mc
P39+V6/TzfodLmUthBCinAULFrhJkyb559SiRYv6lRa/Jx3SI90Sljw1l5p9
+AFu4lc+6ca8bSU3aqXnudFveLmb8MkPuek7beeeGDu6X3kb6rSlC6HR8cyu
OroxT5g2bZq7+uqr/b8xzyTbiPkS5TDQ9zoQ1z3zzDPdbrvt5m644QbfhiZM
mFB7/pQpU7ydz3HXXXf1+R7tmO/OP//8Xp8fdthh7tRTT22cz5kzZ7pbbrnF
/zscGe75b4p0IbGsIF0on7bmDsNFqxguulBdvQyXshZCCFEG2s2MGTO6kvb0
6dOztaEnxo9149d/r9dFxq/3Hjftz9u4mSN2djP+8zc3ebOvutGrLe9Grfx8
98Qj47uS16FA27rQ0Ucf7a699to+R+o5318efPBBf03+jXkm2UZt2QND8bp7
7bWXO/3007PPD3Uh2mKsOXdLFxozZoxPl3+HI8M9/00ZbF2I68bXli4kmjAc
dKElS5Z4+55/B5M25w7cz1D3VR8uulBdvcBwKGshhBD5MKbj19NNSL/Ts2PJ
woVu/EfWcCNXeLabfdj+yXOenD3raZ+hccPDVnpy7pzi37StCw2ENmFzg6Gk
Cy18qj0NFsuqLoS9TPqxhlOH6UJoSfx788039/r+maALNfG/HEr5H0gGWxdK
IV1o4BnM8bsthrIuNNTs+aE0dxgIlhVdSAghxLIFcYC6/Wwifa5Tx5wjD/J6
yNTfbVmc/uIpk9zU3/7CjX3P69yoVy/nxrz9Ne7RrX7oFj86udd5c0893l9j
3nlneh+kse97oz9/3Aff6uYck57jP3bmye6Rz63/tK/SKi9yEzZc28097YQ+
1yddNB3uA5+nUa95oZv8/W/47xfed7eb+uufuHEfeocb9dqXuFGrvthN+NSH
+6QDdbrQpHvvcRPuuD2rTHJ1ITQ7zrvtttv6fId/MN+Fc/QLL7zQf4YfGHFm
RowY4f/+3//+l1yvdvbZZ/vf2dxu5MiRXhs46KCD3K677ur/vfPOO5N5mzx5
sjvttNP8Nezca665ps98FjsSO238+PHu+OOPd3vssYePf5MDbZP73G+//dwu
u+zi9t13X3+PxNEJYd0U+U/5WWEfHnnkkf7/Y8eOTZYD6QLp8jfzwltvvdUd
csgh/t64PjZxfG/E70ndC/kmnUsvvTTruv0tA2sL8dFJtzBdiDVRtIUjjjii
13hToguZZjB37lx3xRVXeP8jzmNtG9cxuJb5KIXHZZdd1uu6t99+uy9f0qD+
LrjgAh8fLQYb6vrrr3fHHnusPxeNi/K+7rrrfLph/zjppJN8fuhX55xzjr/f
Y445xn/HeTfeeKP/Pe2VtDifdhDWe9v5p82G5VP3+cMPP9yjR5GPE044wbfv
E0880T3wwAN90gBsD7tX7FfuCZ9E8ogmxme0pxSMBVzP+pXVMW2PPkI58XvS
T91bDG2Ddkn7CDn55JP95/TjEOqGccXo5joyypbxa//99/d9nt/zXQrsONob
YxnrNrnefffdl3U9yp22ydiy++67+zT4f1gHTcd96umMM87wfoPki/GWcTp1
v7QXxifGk7r77TR+oxFyP/yedPbcc09fn/H7rJz7trJl7LB7oD7os3Pm9H6P
QxvkuWbjInlinIqfDcDzlvoiPZ5XnDdr1qwiXYi2yzOV+yPv9DnafKwLtfXM
pi5TuoHV30MPPeTXEB1wwAH+/uue1YxF1CP1c+CBB/rxkvrP0RS4Rltzh6q1
Tbl1XgVtkHtirOX31BFjLmO3QV0xBlv746jqt1W6EG2LvFPm3OPee+/t20H4
nM2dE0CqftErGR/JP+XBdai7eG7VqV6qyhrfM8ZZm9twDZ7l8TgRzoWoY9o4
53Nv3MNQ0i2FEOKZAjGi+xtPqBOkz3XqmLjJp70egoZSAmvKxr7rtT4G0bS/
/NbNPuJAN33HP7rRr3upG/f+N7snZy5dH2e60Ng13+Qmb76Jm3/5RW7B9Ve7
yd/9iv98wTW9bYkZ/9nBfz7xS59ws/bdzc06cIT/P5/N2n/PnvNMF0KX4ppz
TzzaLbjxWrfg6sv997P228OviyNf5G/mXv992jfqqd/MOeawXtes04X23Ojj
7u9rvDOrXEwXOvfcc/0awfBg/mk0nWMyr+J75ivM13jmYwvyHf9iN3OYvWdz
O7PDmHMwz2I+wufjxo3rdW3mMzb3Iz3mndzLzjvv7LWiENJg/sR8F7ubmDc5
77e4L+YuXP+8887zczzmdVyDeVm4/jFXF2LOhf3HuaYfcFAfYHMhbCXmQXxH
nZBv5t7cY0juHLDTdftbBuRx9OjR/jxsMku/0xrRUBeijdj802iiC6E7UF6k
TbshP8y/rZ0y1+c+OJd/J06c6A+L1cM1KWfu2+aktC/m31w31kpo86SFfccc
/6abbvIaCO0wpQthf5AfbBbu2eb0tB3aP/d/9913+8PSJh9G2/nH1ubcmNTn
pguhB9G/6UvcA/Yxn8e2OGXB59QBdUz50FfIiz1XaKP0kVRb4TphPVsd8xn3
eM899/h0KU/KPGe9s61ZNCgv7GzaNPVjUG/0Odq70U1diP7OeEb50H75PZ/H
cbfMHqN+OI/75/98FvvbpaC8rT/fcccdvm3QTsL8Nh330UgYj9EY0HEoZ8o2
1Ozsfhnj0CFojzz/yU/qfuvGb+qONkLdoQ3SH3huoD1gn9MvSu4brcPKlnIl
L9wPmk4YK40+SP6x/9FjSQtbmnvl2mFbpizJC/dA3ybd4447ztd3ri5EWZMu
7ZHz7XlHmdizor91Fz+zeYbU6UKM/zxLOJ+yYbxLPaupMz7nGUj7tPqhv+bo
Quhnbc0dUlpFbp1XQRu0/se4Rv8lHcYN/jYYC2lrtBPqz3QkfhfrVyldiHen
1DVt3Z7FXIs6CHXu/upC9Ed+TxlxHxykyXn0sdx6qdKF0I34nH5L2ldeeaXv
R/SRsLxtLkQ7o5zQEenPnM/n4TxBCCHEwFD1DvbuHXfsOYzFT82FSj7PuY4x
5p2rulGveQEvG3p9vuQp24JY0+HBejIDfQcNaNHDvecej996oxv5que6Gf/6
S89npgs98vmP9b7GvMe8rjT5e1/v+WzhXbf7NW1Tt/1Zn7xO2vRL3n/oyTlP
+0CZLoSP0BMT+84znnxsbp/P/Lq59d/rNaqQtnWh1GH+C/5eGs4xU7EGc3zB
mcuFOiQaFfoP76AN3s0xP2JeydwjxOag4fszmx9W+TNUgQ2asrWY0/H5JZdc
0vNZri4EdesHbC7E/D9+V2lzxVDLKZkDNlm3UFIGNg9sso6M+SGgL1Bedu9N
dKE4r6Y3oSEYdeuw0GP4DtsohHaOPWfvQ4F5LOdii4TQb8yPJ9aF+Cy15oF2
nXoHStr8JmwPbeUfmuhCcRrUPW08bFuM6ZyLLVG37gv9gPPIdwg2AJ+HNpPV
MTZXGPMEPYi85rQ9xij6l9ULdWg2D+/wrQ4oPz4P3+d3UxdiTAv1BNMCeJ9u
4xz9hXNT/lX0B3SJTmussLPQ6epoOu7H+WIcokxDvc3ul/qK49ZQbuH9Qt34
zbgR1xEw1qFRYduX3Df2NmXYyRcBW5zzYh2SNovdTjs1yAPPsDBGPPeNXZw7
Hts4HPcR0wjb0IVSz+w6XYixJITnNvZ9+KymHqh/ntXhGEC7QCfL0YWgrblD
SqvIrfMqbM4R+yBC2L5T/ZIy4VlG2wxJ6UKmzaSeHeF1+qsLVT2HrJ2gBxl1
9ZIqa/NbjmMQ8qxgTA7bsc2FaFOx3xR9B01UCCHEwFLlT9C2LtTJbwGdZcxb
Vuzz+cJ77/I6SXjM2OUf/jvi96D9TPnJd9ySxxf0OfDRmbDROj1pmS6Ez06f
/H16XTf+o+/r+Xv6Dr/35y568L4+6bL+i+/mX/L0e2bThSZ/58u192iw5xrp
4D/kNaCpS32p2o4vxByCOUF48Ow2ms4xU+tScuZ2qffd2JvhfMHsNbQJ5h7h
kVonwnwRW6MU5mv8Lp4jMQfDhuP9qtG2LpSyX3gHb37VRrd1oZIyaEMXMvve
1kQ10YXCeSswz+Vz1pAYdboKdgQ2j8UYDg/eUZI/s1v5O9ZsDNYhpHQhbN8c
uHeuyfvuWEtqK/+lmC6UWvvA/YZ1Yu/s4/UBMbQlbOfYVqAPk9fQJrA6Dv1A
DDRFzu/k38oYRzvlXoB33dgY5JPP0amANsjf8+bN6/ltN3WhWFsEfAz4zjQ+
sxcZZ+KxjzqpshtDGEvRTFJjtNF03E/VCz5BaCV2vt1vvGYPTG8ONc268Zty
5l7isuCgPXBdaw85943OzW/QoKpiLXMfnIM2mrou9W7+aDYOxzoq2HMsZzxm
vCPvqbzE9nSbz+w6XYi6iuG+w7zYWrHU+jL6d5u6UM7cIaVV5NR5HWhe6Eql
YyrjMb+xcgjHmVgX4tlNHkP/oyr6qwtV5dPaa3huqS5k7S/1TOD5EepONhdi
/IixMqNchBBCDBxDRReq8hdC+3nsnNP9MeO/O/bShR6//ZY+mlF8sK7L6Ikv
dNF5fa4/8WufcWPfvVrP35O+/cWOac894Wn7z3ShaX/+dfLelsyf52b8c3s3
bu23ex0rTmfRw0vfkw503Ommc8zU8zpnbme2Wgi2dDgntvdzdQfvAA3siiZx
OZnrhetNQuxdr80j29aFUu9u0Qn4Lnz/2W1dqKQM2tCFgDkfn6GDNdGFUvNz
zg/j79TpKszzU/F7wsNiiOC3UmX/233EulC8zjGEOTf1S37ja4ZaTFv5L8V0
oXitCFBHoQ+BrYHLsZfoP5xrPhX8hvuI693qOBXzjnGB7zqtJYv7Bn5Rpkmh
D5k+Q59tqgE10YVSWpvZbdY/aPOdxr7YpySGNoPOwrn4KeAnRbsLbeKm436q
Xmzdh/kEh/GFUnkL7xfqxm/Gp07lYZptzn1zrq2btbgnrNcJ/bhMP6w78PMK
yxHtMYZ1QbnjMT43jLcpuJc2dKHUM7tOF4r9ESF+VttzMbUei/VabepCOXOH
lFaRU+d10AZztH70SfoC7RmNJ24zPO+MWBeyNhc+w6poQxdinSX3xNquOJ+h
HliqC5nPU+qZYGvS7JkWxheK4R0P34U+eEIIIbpPJ71moK6TE1+IeEC9dKHb
bvZ/T/nZZu7xm65LH3csjQvYowtd3Neu9brQu17b8/ekb33BryMjRlBV2ubn
E8adTjHpm5/3ehA+SPPOP8vHNOL3U3/z8x6fJGMo6UI2n0zNMVPP/aZ7ijC3
C+Mjmy7Eu3TuI3WE8wWLW1pKiSZieUrpQly/VBcKY5oYzCtzdSFLZzjqQuQd
XYQyaKILpdYslepClCt5qzrsGk10Id6LpuCdusUpwuai73Et5ux8HsbkbSv/
pZguZD41If3RhdByOJd+FF4ntvXa0IWA9oAtTd6wfSw+LH0L3yV7Px/3lcHW
hcyuQperGvtCv4MquD+uS/slJgtp0m7Mt6bpuB/GpjPM7yrWhcJ1nYbFQIt1
oarxm/GJcq4qC46wrXe6b2DMIVYa+ea6nINeaDEQrWzQlaquaf4QQ00XKn1m
1+lCOc/qgdSFcvJTFfOmU53XkasL0XcZU9A5iGlEmdBWbE+OcO4Q60JWpymN
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
jscff9z95z//8edSXiuuuKL78pe/7K699tpe52233Xa1ebLjtttuyyhFkaLb
bRcuuugi9/GPf9y9+MUv9u1k44037lPXxkc+8pGO9f3yl7+8z+9oz7TFv/zl
L26FFVZwb3/72yvz0/QakNt2Q2655RbfR171qlf537zzne90O+20k3vsscc6
lJwQQgghhBBCiKHOnDlz3BprrOGWW2459/3vf9/9/e9/d+uss463Lf/2t7/1
O/3p06e7tdZay6e39tpruz/96U9um222cW9605v8Zz/5yU8qf7vVVlv5c17/
+te7n/3sZ17becc73uE/+9e//tXr3LFjx/rP1113XX9efJx22ml90r/99tu9
FkSau+22m9t///29jUw62267bTJPc+fO9doU53Bf3MuPfvQjt9JKK7nnPOc5
7uqrr+4599xzz03mheNXv/qVt7Hf8pa3+DRFOd1uu3DooYe6Zz/72V6n+fOf
/+wP2u5zn/tcd8opp/Q5f6+99qqs8+985zs+b9/85jf7/O7zn/98L12nThdq
eo2Stmugy3KvL3vZy3zav/3tb90nPvEJn8anP/3pwtIUQgghhBBCCDGQPPDA
A+4HP/iB+8pXvuIWLFiQPOcPf/iDt/HOPPPMns+efPJJ9/Wvf93bivfcc0+/
8rB48WL3qU99yh1zzDG9Pic/H/jAB/y177jjjj6/wx7lu+9+97vex8HA92iP
PfbwfiIhd955pz9/zz33zM7bxz72MbfKKqt4X6OQH//4x94WnjhxYp/f/Pzn
P/fX2WeffXp9Pm3aNJ+vXPbee2/3vOc9z914443Zv2mTnLYx1Ol22508ebL3
EULPnDdvXs/n6Cvvf//7vU/OlClTstMjX294wxv6tF24+OKLvZ8aB345dbpQ
02uUtt3Ro0f7+0d7mzRpUq/vTj31VO9HlOKss87yOhdpUh85NPmNEEIIIYQQ
Qohq0GM++MEP1q5RQmN55Stf6XWbmDFjxnjbGr+W/lK1Voy1ZdipBx54YJ/v
3vWud3n7NlezuOqqq3xaRx11VHa+sOtTfhX4TZDWOeec0+tzdCK0nG984xvZ
10gxfvx495KXvMT7XgwGOW1jqDMQbXffffdNtgO48sor/XesycoBf7WqtGJo
9010obprNGm7v/jFL3w53n333cV5oY3tvPPObocddujqb4QQQgghhBBCpHnw
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
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhKjjsccec9tss41beeWV3cte
9jL3mc98xj3wwAODnS0hhBBCCCGEEEII0WW++MUvei3otttu83rQ5ptv7lZf
fXW3cOHCwc6aEEIIIYQQQgghhOgiDz/8sHviiSd6/l6wYIF78Ytf7G644YZB
zJUQQgghhBBCCCGEGAxe85rXuHPPPXewsyGEEEIIIYQQQgghBpC77rrLLbfc
cm7q1KmDnRUhhBBCCCGEEEIIMYBsvPHG7uc///lgZ0MIIYQQohLWwa+66qpu
/fXXd4sXLx7s7LTCdddd5571rGe5448/frCzMuxQ2QkxPDn11FPdS1/6Uvf7
3/9+QK970003+TEjPLbbbrsBzYMQQ5Xdd9/dvfWtb3WzZs0a7KwIIYQQRey9
99595njhwRxwKHLmmWe6ddZZx73whS/0c+MNNtjAnXzyyYOdrSHPaaed5uv1
2c9+tps+ffpgZ6cVhru2cdJJJ/n8r7feerXn3XHHHe4rX/mKe8UrXuHb/Rpr
rOF23nln9/jjj/c673vf+15P/33uc5/r98790pe+5P73v//1SbO07H7zm9/0
Gh9e8IIXuDe/+c1uk002cbfcckvjfAB7uXDu4YcfnpUXsRRint58883uH//4
h1tttdXcG97whsHOkihg/vz5bocddnBjx47N/s2vfvUr31/e97739fnuz3/+
s//uoYceSv72G9/4hlthhRUavRuYMWOGHy84jjjiiK7oQjzf11prLT/OrbLK
Ku7Xv/613wu8v4wePdqPS4xFz3/+89073/lOd8ghh7glS5a0kOs81Fd70626
HoxrnnHGGf75fM899zT6/W677eZe97rXuVe96lXuL3/5S7/zI4QQQpRguhBz
lIMPPrjPMRTXR48YMcLnmef6n/70Jz8n/ehHP+o/a/NZyvztmmuu6VcavDO6
/fbbW8pR/1m0aJHbddddvRaxrDDcdaFvfvObfk9btLqJEycmz0GfZQ772te+
1s9h//a3v7mvf/3rPoYBbT8Euwe95uijj3aHHXaYtzdJnzLafvvte53bVBc6
6qij/G8YI373u9+5lVZayb3oRS/y2lWTfMAzTRf68Y9/7MuI49JLL+1XWhdd
dFEvvW4wbc02xs1SfvGLXwzo9doGP07q7aqrrsr+DWMF48CNN97Y57vrr7/e
p7fXXnv1+Q4t6JWvfKX77ne/2688w9y5c1vXhXi/w1j4+c9/3o8zf//7393y
yy/vNtxwQ/fkk09W/o5+9J3vfMePh/zLsccee/R8f9lll/l3SO9+97u9T8cB
Bxzg9Wzyv/XWW/dKC/ve0rD0+LeTjtYpD5DbV0vzMNTmGjk0reuBvOYPfvAD
X6+f/vSnfT+t4pJLLnEvf/nLK997dOKcc85xz3ve8/zz74QTTnDPec5z+v1c
EEIIIUowXei+++4b7KxkgW8E+3/iHxS/42PvhwcffLC1a+25555+DheDnw32
8Re/+EX3ta99zc8tse1TthB5xMcj9ukQ7WHaBnOp4Qb72TIn5b37S17yErfv
vvsmz/vkJz/pbblp06b1+vyBBx5w5513Xq/PmMOSVgh6IDoS5RSeX1p2pguR
7xD6HboVtkuTfMAzTRf6zGc+U/t9yqaHE0880T3yyCO9PsOeoU44GJcGUxeq
Gje7BRoI+shw5tprry3WhergucN+SKk2dvXVV/trtfFuoG1daOHChT7fn/vc
53p9fsEFF/jrHHfccZW//fKXv9zzb7hnuIG2/sMf/rDP2PX973/f2+Px2Jqb
bum5TfpqTrrDba7Rn7oejGv+4Q9/8PGkU9BveY6jNU6aNKnnKHmv+qMf/cht
tNFGPX+/7W1v82OpEEIIMVCU6kK8c8NGxd7j3RvvXG644YbkubvssotfZw2j
Ro1ym222mfffxsfhQx/6UKP88qwlv/jQdxN85T/1qU/1+XzChAk+75RDfD7v
X7HvY4455hhfFm3C3JK6Yy0R/vDx+j/qCJh7ptYH8s40ZvLkyX5+XGVj4VOG
Jjdnzpxen2PTMM+iPfA97zSZZ8VgozAvZ26Gvwg+9LYGsGq+lYNpG7wH3G+/
/dy73vUu76fyjne8wx166KG9zt1yyy3dy172sqTPOJoFfi/4v6TAP4b3gV/4
whdai82EPzvvLil7ypB3line/va3u/e+971Zaab0GOB9MuX9iU98ouczK7vT
Tz/d+x1Y337Tm97k/Xvi96dVuhCsvfbavdpVST6gVBcaOXKk73P43KNJcf1j
jz02eS72K3mnTdBG0dgob9ZVpkDXoCywIWhLlD9xXEI9Bn8NxjLeN6fAT4Df
Vq3X7KQLhRpbCPVSN15jOw6WLlQ1boLFpWEMpf+x1ol2RhlSh3zeBJ4rA+HX
euCBB/o1W9QpzzHsuFSe+Z7nAG3oIx/5SM9aFdpPbLOvuOKKteu4P/zhD/ec
e/755yfPYUxLQf64NmvUQtBweGbE4zjPVvxt11xzTd9HWA/De48xY8ZUlkmu
LpTTnwCtmPTQrmI+8IEP+PlGFSX6TQh+GnWaXNu6UHx+W7oQdGOu0S36U9eD
cc06XYhxLNU3aee50F9t7GS+zLg40H6XQgghntmU6ELMOfBt/eAHP+jfY7Ae
CTuQ5xe+OjHMT1796le7W2+91c9/3/Oe93jbbNttt/U2QVOw+4mN0M1n5o47
7uh9jGOYJ1f59qIVoInEMSL4nNgxbb7HQ7sgZgs24sUXX+z++9//+nU83/rW
t/wcnDIH7HqLBWEH9ZDShYD3jcSLScVbeMtb3uI233zzXp/hZ4KWhJ6x//77
ex2GuStaR/w+GjuY92GUEfYOOhPrP7BRWFOPLtME0zbINwd2Ouv0aSd8zhom
A78W8sZ7vRj89uv6Anm2+R7xIdqA8sQOA/xDqNPUe2v2NiHflHEnqvQYIK4I
5W1t0cqONU1oJdQH5Ucf5/P4enW60LrrruvLvEk+oEQXIn4D+SWGOvlFD0Tn
4fepseWrX/2q7x9//etfvX6I3U4eGM+uuOKKXueij5E32intmfi+//znP739
Fut26FLomymdkHrFj7CKKl2ItXmUHW3Z1pmFB9oE/ZT/z5s3r8/vB1MXqho3
wXQh2tz73/9+/2ygXbMWGB+yJhA/p9vvCOAnP/mJzzu+ofQJ9BOeaeg98XiP
7sH7EJ5R9Jd99tmnp23G4ydrT9B70FX4nmcqf9tBWRnoNvFYTvut0oXOOuss
nya6Rwj2L2tiQtC36Ku0OeqDe2RtFboSz4oqHTxHFyrpT/Rlyi+1nof1s+hx
VTTVhfC/4x7uvffefqc72LpQ07kG2iFzh4997GN9vuNZyXiz0047FaXZif7U
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
iyJmzIhiLLMoWAbMCSwwK4qCWVEwi1lBRTFhAiOiIhZmzApGFHO2X/3XulRv
b0/anWEX/b+qLtjZnp6enu7ZuWfOOZd6CWJA1EFwXrD/1NkVmn+Yvj6M4fiM
Waivalq15qnnXOCzaV4OFuK8yfEzKjlq5PdzW4cOHcLYkXgQz5XbsvMhES/g
eXFOcB4zHiT+le2/hVrHhcrdD8S4EPk2vC9ll3RcjFx7xvnkfPHa0Rc/9lvK
jmGpN+McJW+CnELeq7iNOAbvZ+k4Me8VfG/Mtsk5YlxMX23qhcg55HwqVB/G
9+ucS6xDrLiUauULEXOI7wEsXLPE6dO3FRpLUnsaz+m8fsiVKPW+Wa24EDHr
cussUY3rlnOZ+9OLnZ5lxKCJh3D+pXtkgXOesRx/GznPyUnk/TBdm5uH65kY
PD3LOY6cq6VqW8uJC8X+f5ybhf5O8T4e30vYR+Kb/J3gWuA5FosL8T7Pey85
R1yH9GyJeWMNuZ64PjlW5ErQr4q/s7wPcXyK5YmUip1wzRAX4zjQFyp9fcS/
nw3ZbiXrNvRarWQfGvJZg3hJut9evI1jXqw/ZGPfPxryWjfFY6KW/YV69eoV
ng+xIc4BYqV87qKvGX8zievmzbMgSVI1VRIXwogRI0IfH/6O8vkq5uLkqVUd
2cSJE8NnUMbKcVxPn4DsnCJ5fafpK0OP3GL4TJv97gb0h+B7VRY+Q6TjQnwH
GX+Xl09AvU96jqTG4nkQG+PzdrY3Da8Nr1Mh5cSFwP6yvVL5VaNHjw7jJT7H
MK7hWDCOyNbr1TouNGbMmFA3yH5wDKhTKjWfCjEIxlacU6UwpuF4k6NfyTzI
WRwv9pcxVB7Op9hfICIOw/EhT4bznd+vuuqqSb9+/XLnI4vnAuM1xnWdO3eu
13sbtY4LlbsfiHGhQkt2bMp3qNT48HpzPBh/FopLEBtkXEpeGNcNc7kRHyaG
mM2RIAbK2J/rJG6bc5rXo1idVKxHpB6jHNWKC8Vck2JLoTl2+O6d+AbjpHJ6
xBRT6H0zqlZciFypSq6/aly3jBf5LoScH/L8OJeJ2eSNmTlfeO8kTsb5xs/U
LBEPKYa/k3zXwevBOco517Vr16IxxnLiQuBvHseevIhC+J6HMSj7y3iUfFji
OuQIF4sLkYPFWJ1rhTgPfaV5L44acj0NHz48vNdxHJhHkFhZqe87SsVOuC6L
XSPse0O2W8m6Db1WK9mHSj9r0HOHXGv6CmXxnsZ3UPx9z6tVr8b7R6WvdVM8
JmoZF+I64/2C/HY+Q/E9G/la5BIRSyRu1JA5VCRJ0j/y4kKMG/PmSs/is3A1
50il/wI9ZaqBejhyYbKxPD5/U8vGZ2/G3yqNfLJsnxupIYjFVpKTUiouNC0x
ziKHo7Gq/b6ZRb0k46fmjLhH9+7dm3o3/nMaMk99tbfbHPahmp81ylWt94/m
/Ji1nqdekiTVTmPiQtTMUQ9VDfRUKdTjpiGof6GnUx56H5ErX2ruXf2TT844
njib1BjEZMkJoc9YuZpLXIj8LfK5CtVbVqKa75t5yG+r1pyOtVKo77RqqznE
ZJp6H6r9WaMc1Xz/aM6PaVxIkqTpV2PiQozzqJerxmc7auCL9TOsVIxn8NyY
v4b515hfg54J9LRgruFsX279Y9KkSaGvb8+ePUMPEOrIpIaKvVLoXcT5FOdC
LEdziAtRZ0mvK3ozV0M13zenV8aFmkZTx2Sawz5U+7NGKdV+/2iujwnjQpIk
Tb8aExfC0KFDk8GDBzdqH6jJ79KlS6O2kYc5cphTg9p46tHpxU1/VfqcljP3
7n8V86vQn4f+IMyTXKiftlQO6hCJA1A/VWlPY3L66MfDkp5Pblqh/xf9NRhf
VXMMW433zemZcaGmQf1UvJ7ikp6HohL0KsxuiyXbi6w57UOtPmsUUqv3j+b2
mPTO4rgT754wYcI0eUxJkiRJmlYc50hqqKZ4//A9S5IkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkpR1//PFJixYtknvuuaepd0Wqimqe
03PNNVfyv//9b+qy4YYbVmEPJUmSJEkqzxVXXJGMGjWqZttfffXVw3j36KOP
rsr2vvnmm+TQQw9NWrVqlcwxxxzJBhtskDz22GNV2fawYcOStm3bJrPPPnuy
6KKLJsccc0zy448/Nnq7I0eOTLbffvukZcuWIZ7AY1x77bXJX3/9lbv+Dz/8
kJxyyinJcsstl8w666zJ4osvHo7f999/X2e9b7/9tk5MIb20adOm3nZ///33
pH///skqq6wSnuNiiy2W9OzZs95289x7771hu1tssUXJdT/44INkvvnmS2aa
aaaS606Pyj2ny7m2hgwZktx2221hWXbZZY0LSZIkSZKmqdatWydnnXVWzbb/
wgsvJKeffnry2WefNXpbv/76a7LOOuuE+Erfvn2TG264Idl8882TmWeeudGx
obvuuiuZYYYZkk6dOiWDBw9OzjzzzGTuuecO2y8UvynHlVdeGWIIxK8uvfTS
ZNCgQUnnzp3DbYcffni99YlD8RyJ2xD/GjBgQNKrV69kwQUXTPbcc886677/
/vthO926dUsuu+yyOsutt95ab9tsj+fUr1+/ZMSIEWF/FlpooaRjx45Fn8OH
H34Yjvk888xTMi5E7Kldu3Zh3VrFhf7444/k2Wefrcm2y1HuOV3ptcXrPr3E
haZMmZKMGzeuqXdDkiRJktRIs802W03jQtV0ySWXhNjN888/P/W2P//8M4yl
V1xxxQZv97fffksWWWSRevGRhx9+OMRd8mIs5Zo4cWKIv/z99991bt9xxx1D
3IT8p7TjjjsuvCZjxoypc/vkyZPrrTt27Niwf8R4Svniiy/Csbvooovq3P7Q
Qw+Fbbz44ou59yMG0759+2SrrbYK+1wqLkSN1cILL5yceuqpNYsLXXzxxcmj
jz5ak21XU6XX1vQUF+J83mmnnUKsVpIkSZI0fdl1110L1h/F5ZdffqlzH/qg
3HzzzeH/11xzTbLGGmuEnBbqoqiFiU488cTc7ZGPU8jnn38e4iGxbooaMXJg
Pv300zrrrbfeesmWW25Z7/733Xdf0dhGKQ8++GC4/zPPPFPvd2uvvXbIIao2
cnZ4zHfeeWfqbeQKkc9zwgknlLWNJ554ImzjlVdeKbnuhAkTwrpDhw6tczvx
Jm7nGOTp0aNHqAn7+OOPw7EvFhcaPnx4iD3xevTp06cmcSFiY3nnwEknnRSe
B7V1WZy7Bx54YJ3biNncdNNNyaRJk5J99tkn5ENx3u2999714m+VnNMNubai
cuNC5LPFesf5558/2W233ZK33347d93LL788rMvz4zhwDRFX+/nnn+utS6yN
15cYKceHWCt1hsQ28/B+QF2iJEmSJKl8P/30U/Lcc8/VZNvvvfdeiKdk0a+G
7/Yj4gjkidxxxx1hnNqlS5fwc3rJ1k4xpqRfCttnzLjXXnuFsTi1TW+88cbU
9V599dWp/VJYqLcpFhfivoxDiYccdthhycCBA5Mzzjgj9NQh9hSRt0LMiHhD
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
bHI6qF1hjmxyP+j7TLxo8uTJU9dljEtORcuWLZN+/fqFMTwxEGpdmOerMejx
TMypU6dOId5D/Q/PmWNYqIaGXJAYF8rLeSIGQ1/nWWaZJdlvv/2SAQMGhONL
Lg1xG+Z3mzJlSp37UE/I8SA3h/WJc8RtMJd4xOvLfGHU+rAfvHbUw3Hc2J/Y
Ryh6/PHHwzY4fsTEyOMhlrL++uuHGElerlRWU8eFyJlKx33SiItwvsw555zh
OuAcatu2bciV4zk3RVyo3Gsr4txnfepPqSmkBjX2WY8OOuigsA65c6zD7+kH
xbnA/SP6tHM8iE0ReyZGRF9yzhFuX2uttabGcviXPDBqzMg5pM8QOXjsL32u
6WvF9vJwbXAOSZIkSZLKw7xWjK8Zkxfr2VEp8hLoTcycRdQFkVNAnxq+7ycH
JW/uJZBv06NHj1BnRNyAfxlLE3dIq1VcCMw1361bt5Czwz4wrxK9nz/66KN6
6xJH4bm1atUq9Bui7oYYRzUwZxuxBLZL3gZzPBWbx2n8+PGh58sKK6yQu69g
zD1o0KCwn4zHOY7kA5Hrk40JReQXkUPGeJx4GfHDvJwj8juIHTB2Jx7CtlmX
Y56H/BB6D9NPiJgN//JzOf2d0NRxIXLKqCUrhDwyclc4Drwuffr0Ccef87kp
4kLlXlsR+0puH7E+XnfOk7w+QLx3cL3HOQLp+0yvrmwuGOcHc9xx/bdo0SKs
36ZNmxA3y/Zh4r70sOL1pVaN40M/cnrWF6rdA+cOPfMlSZIkSeVh7JdX29EY
jD+L9auV/i04z4mtqnno3bt3MmrUqKbeDUmSJEn6Txs7dmyd/sXSvxW1Utka
OTUNelxRZylJkiRJalrUKVH/Iv3bUe9ETyly5NS0Bg4cWLAnuyRJkiRJUi0M
HTo0t++Oph1qYbt06dLUuyFJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRpOjBy5EgXFxcXFxcXFxcX
FxcXFxcXl//gIkmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
pr3/A1ScVbg=
            "], {{0, 525}, {1158, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->{419.9999999999981, Automatic},
          ImageSizeRaw->{1158, 525},
          PlotRange->{{0, 1158}, {0, 525}}]}]}]}]}]}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"plotsWLCPDLossy", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", "\[Kappa]"}], ",", "0", ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "/.", 
            RowBox[{
             RowBox[{"optiVals0", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}], " ", "\[Kappa]"}], ",", 
         "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "/.", 
            RowBox[{
             RowBox[{"optiVals0", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}], " ", "\[Kappa]"}], ",", 
         "0", ",", "0.5"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "/.", 
            RowBox[{
             RowBox[{"optiVals0", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}], " ", "\[Kappa]"}], ",", 
         "0.1", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "/.", 
            RowBox[{
             RowBox[{"optiVals0", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}], " ", "\[Kappa]"}], ",", 
         "0.1", ",", "0.5"}], "}"}]}], "}"}], ",", 
     "\"\<lossy optical sWLC model\\n\[Kappa]=10\!\(\*SubscriptBox[\(\[Gamma]\
\), \(R\)]\), \!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\) is SRM coupling \
rate\\nparameters of LIGO Voyager\\nno radiation pressure \
effects\\nconventional detector is lossless\\nlossless model uses \[Mu]tric0 \
optimal result\>\""}], "]"}]}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.835733271517489*^9, 3.835733351578421*^9}, {
   3.835733397405357*^9, 3.835733460504774*^9}, {3.835733684295692*^9, 
   3.835733705555883*^9}, {3.83573378133998*^9, 3.8357338055909557`*^9}, {
   3.8357339805268393`*^9, 3.835733999695216*^9}, {3.835734223971726*^9, 
   3.83573422510065*^9}, 3.835752899802992*^9, {3.8357532181690407`*^9, 
   3.835753237452551*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"b4e84e68-719c-4f13-b968-6debeab3ab91"]
},
WindowSize->{1717, 910},
WindowMargins->{{Automatic, -1790}, {Automatic, 97}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 274, 8, 125, "Text",ExpressionUUID->"075d40ea-fa8d-4f2b-babd-8770a0fbd10e"],
Cell[CellGroupData[{
Cell[857, 32, 4627, 117, 474, "Input",ExpressionUUID->"17151575-c0ee-4630-b295-3e5603dfe84f"],
Cell[5487, 151, 2788, 58, 475, "Output",ExpressionUUID->"29c8d744-edc6-4ca7-9b5b-95b69c471cd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8312, 214, 9141, 226, 1582, "Input",ExpressionUUID->"178a6746-8cba-4802-b5cf-1ad1741287d6"],
Cell[17456, 442, 44489, 843, 557, "Output",ExpressionUUID->"5332203a-0052-4221-9ceb-ad5be44613e4"],
Cell[61948, 1287, 54792, 1004, 524, "Output",ExpressionUUID->"16170572-d03d-47f7-b837-386907c2c883"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116777, 2296, 6252, 155, 1026, "Input",ExpressionUUID->"0883ef2b-3c1f-4b86-94d2-5cfe699198ba"],
Cell[123032, 2453, 53402, 983, 582, "Output",ExpressionUUID->"c0c1ae48-7c49-4dc7-ab95-8cac87331a8a"]
}, Open  ]],
Cell[176449, 3439, 1547, 38, 114, "Input",ExpressionUUID->"cd9ae65f-fc2e-4d00-9185-a9ecc73b6a9c"],
Cell[177999, 3479, 288, 6, 54, "Text",ExpressionUUID->"e9937aac-b987-4462-a6d6-6a2fa2646848"],
Cell[CellGroupData[{
Cell[178312, 3489, 8455, 216, 1079, "Input",ExpressionUUID->"c56bf380-6221-4a99-8e63-f827f05573af"],
Cell[186770, 3707, 152, 2, 53, "Output",ExpressionUUID->"31f7cc20-9eca-4bfc-a150-cf98a51e310b"],
Cell[186925, 3711, 85998, 1555, 572, "Output",ExpressionUUID->"0c90bbeb-fa9c-4665-b31c-f37613bc6a84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272960, 5271, 21331, 526, 2179, "Input",ExpressionUUID->"a3269429-4f32-448a-a72d-fafb6b081f86"],
Cell[294294, 5799, 278082, 4957, 934, "Output",ExpressionUUID->"046d1568-760c-4f7f-833b-aeb669e9ef08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572413, 10761, 6743, 165, 765, "Input",ExpressionUUID->"099af43e-d730-461d-825e-0617c033dd5b"],
Cell[579159, 10928, 1593, 43, 55, "Print",ExpressionUUID->"b7a214e8-e5bf-4b71-a095-9dd601698b50"],
Cell[580755, 10973, 22466, 415, 604, "Output",ExpressionUUID->"9b8e1160-e187-45d5-9804-f62d00b70011"]
}, Open  ]],
Cell[603236, 11391, 1863, 41, 218, "Input",ExpressionUUID->"04764d18-a189-403e-985d-311924c4ee4c"],
Cell[605102, 11434, 13471, 329, 1635, "Input",ExpressionUUID->"7b650e63-8190-4f34-9e28-a2e26cf42a02"],
Cell[CellGroupData[{
Cell[618598, 11767, 16290, 396, 1816, "Input",ExpressionUUID->"27208b19-6c02-43ff-a1f2-e8b1de8161d0"],
Cell[634891, 12165, 410811, 7347, 1009, "Output",ExpressionUUID->"175b9f1a-1a23-48a1-929c-34067e5df77a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1045739, 19517, 15472, 396, 2416, "Input",ExpressionUUID->"01e18519-0467-488e-be6c-bb44e6a8f784"],
Cell[1061214, 19915, 76227, 1415, 528, "Output",ExpressionUUID->"5cd84337-50ae-4b44-8a28-df6997eb7bf3"],
Cell[1137444, 21332, 198, 3, 53, "Output",ExpressionUUID->"6a0124c3-324c-401e-bcdd-9749e9672b33"],
Cell[1137645, 21337, 614, 17, 36, "Print",ExpressionUUID->"6b91dfc6-c370-46c2-99d1-c61d84d2fe6e"],
Cell[1138262, 21356, 266, 6, 53, "Output",ExpressionUUID->"14a3ad24-81e7-4e03-a6c2-66cc962e98f7"],
Cell[1138531, 21364, 26973, 506, 441, "Output",ExpressionUUID->"8a838cd2-fbb8-4de6-b93c-6a8a7bf9b578"]
}, Open  ]],
Cell[1165519, 21873, 33611, 831, 3585, "Input",ExpressionUUID->"f199c58f-b00b-4e35-ab51-2a4bdb445049"],
Cell[CellGroupData[{
Cell[1199155, 22708, 2028, 48, 388, "Input",ExpressionUUID->"272780f9-7176-40cd-b7be-8f433b7d7549"],
Cell[1201186, 22758, 316335, 5634, 942, "Output",ExpressionUUID->"d643d1e8-f148-4162-b69b-db0ae9c2774c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1517558, 28397, 1401, 35, 286, "Input",ExpressionUUID->"30cdbdf9-7928-4a1e-a312-8e5c8c6cbcf0"],
Cell[1518962, 28434, 198438, 3546, 920, "Output",ExpressionUUID->"a554ce93-4bc4-4ca3-a8db-c5719a33512f"]
}, Open  ]],
Cell[1717415, 31983, 2150, 51, 388, "Input",ExpressionUUID->"9ed71beb-f447-479b-9bbd-1134bf4c43f0"],
Cell[1719568, 32036, 132146, 2239, 1269, "Input",ExpressionUUID->"b4e84e68-719c-4f13-b968-6debeab3ab91"]
}
]
*)

