(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1031796,      19265]
NotebookOptionsPosition[   1029239,      19217]
NotebookOutlinePosition[   1029607,      19233]
CellTagsIndexPosition[   1029564,      19230]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
sWLC from Li et at, 2020
Re-viewing calculation
Lossless first, then lossy\
\>", "Text",
 CellChangeTimes->{{3.834797040711691*^9, 3.834797069039122*^9}, {
  3.8351208439461184`*^9, 
  3.83512084812578*^9}},ExpressionUUID->"075d40ea-fa8d-4f2b-babd-\
8770a0fbd10e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"poles", " ", "of", " ", "transfer", " ", "functions"}], ",", " ", 
    RowBox[{"shared", " ", "by", " ", "signal", " ", "and", " ", "noise"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Kappa]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]R", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Re", "[", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "I"}], " ", "\[Gamma]R"}], "+", 
              RowBox[{"I", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[Gamma]R", "2"], "+", 
                  RowBox[{"4", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Chi]", "2"], "-", 
                    SuperscriptBox["\[Kappa]", "2"]}], ")"}]}]}], ")"}], 
                RowBox[{"1", "/", "2"}]]}]}], "2"], "]"}], ",", 
           RowBox[{"Im", "[", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "I"}], " ", "\[Gamma]R"}], "+", 
              RowBox[{"I", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[Gamma]R", "2"], "+", 
                  RowBox[{"4", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Chi]", "2"], "-", 
                    SuperscriptBox["\[Kappa]", "2"]}], ")"}]}]}], ")"}], 
                RowBox[{"1", "/", "2"}]]}]}], "2"], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Re", "[", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "I"}], " ", "\[Gamma]R"}], "-", 
              RowBox[{"I", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[Gamma]R", "2"], "+", 
                  RowBox[{"4", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Chi]", "2"], "-", 
                    SuperscriptBox["\[Kappa]", "2"]}], ")"}]}]}], ")"}], 
                RowBox[{"1", "/", "2"}]]}]}], "2"], "]"}], ",", 
           RowBox[{"Im", "[", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "I"}], " ", "\[Gamma]R"}], "-", 
              RowBox[{"I", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[Gamma]R", "2"], "+", 
                  RowBox[{"4", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Chi]", "2"], "-", 
                    SuperscriptBox["\[Kappa]", "2"]}], ")"}]}]}], ")"}], 
                RowBox[{"1", "/", "2"}]]}]}], "2"], "]"}]}], "}"}]}], "}"}], 
       ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<poles of lossless transfer function\\nunstable when Im[\
\[CapitalOmega]]\[GreaterEqual]0\\n\!\(\*FractionBox[\(\[Chi]\), \
\(\[Kappa]\)]\)=``\>\"", ",", 
          FractionBox["\[Chi]", "\[Kappa]"]}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Chi]", ",", "0"}], "}"}], ",", "0", ",", 
       RowBox[{"2", "\[Kappa]"}], ",", "0.1"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.834797072193462*^9, 3.8347971126938047`*^9}, {
  3.834797155053739*^9, 3.834797238999207*^9}, {3.834797426907981*^9, 
  3.834797428058433*^9}, {3.834797492169059*^9, 3.834797617490972*^9}, {
  3.834797647546322*^9, 3.834797725607292*^9}, {3.834797759469356*^9, 
  3.834797815352064*^9}, {3.835050112908222*^9, 3.835050113989367*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"17151575-c0ee-4630-b295-3e5603dfe84f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Chi]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Chi]$$], 0}, 0, 2, 0.1}}, Typeset`size$$ = {
    282., {158., 166.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Chi]$1649$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Chi]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Chi]$$, $CellContext`\[Chi]$1649$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[{{
          
          Re[((-I) $CellContext`\[Gamma]R + 
            I ($CellContext`\[Gamma]R^2 + 
               4 ($CellContext`\[Chi]$$^2 - $CellContext`\[Kappa]^2))^(1/2))/
           2], 
          
          Im[((-I) $CellContext`\[Gamma]R + 
            I ($CellContext`\[Gamma]R^2 + 
               4 ($CellContext`\[Chi]$$^2 - $CellContext`\[Kappa]^2))^(1/2))/
           2]}, {
          
          Re[((-I) $CellContext`\[Gamma]R - 
            I ($CellContext`\[Gamma]R^2 + 
              4 ($CellContext`\[Chi]$$^2 - $CellContext`\[Kappa]^2))^(1/2))/
           2], 
          
          Im[((-I) $CellContext`\[Gamma]R - 
            I ($CellContext`\[Gamma]R^2 + 
              4 ($CellContext`\[Chi]$$^2 - $CellContext`\[Kappa]^2))^(1/2))/
           2]}}, PlotRange -> {{-2, 2}, {-3, 2}}, AspectRatio -> 1, ImageSize -> 
        Small, PlotStyle -> PointSize[Medium], PlotLabel -> 
        StringForm[
         "poles of lossless transfer function\nunstable when Im[\
\[CapitalOmega]]\[GreaterEqual]0\n\!\(\*FractionBox[\(\[Chi]\), \(\[Kappa]\)]\
\)=``", $CellContext`\[Chi]$$/$CellContext`\[Kappa]]], 
      "Specifications" :> {{{$CellContext`\[Chi]$$, 0}, 0, 2, 0.1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{372., {219., 228.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.835301965212326*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"e2665dea-5630-4b36-948f-0b93abd9c7d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"sensitivity", " ", "curve"}], ",", " ", 
    RowBox[{
     RowBox[{"using", " ", "values", " ", "from", " ", "Fig", ".4"}], "-", 
     RowBox[{"5", " ", "in", " ", "Li", " ", "et", " ", "al"}]}], ",", " ", 
    RowBox[{
    "2020", "\[IndentingNewLine]", "they", " ", "choose", " ", "to", " ", 
     "plot", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"2", 
         SuperscriptBox["\[Alpha]", "2"], 
         SubscriptBox["S", "h"]}], 
        SubscriptBox["\[Gamma]", "R"]], ")"}], 
      RowBox[{"1", "/", "2"}]]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"\[Alpha]", ",", "\[Chi]", ",", "\[Kappa]", ",", "\[Gamma]R"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]R", "=", 
     RowBox[{"2", "\[Pi]", " ", "500"}]}], " ", 
    RowBox[{"(*", "Hz", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Kappa]", "=", 
     RowBox[{"10", "\[Gamma]R"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sh", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "\[Chi]_"}], "]"}], ":=", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], "+", 
         SuperscriptBox["\[Chi]", "2"], "-", 
         SuperscriptBox["\[Kappa]", "2"]}], ")"}], "2"], "+", 
      RowBox[{
       SuperscriptBox["\[CapitalOmega]", "2"], 
       SuperscriptBox["\[Gamma]R", "2"]}]}], 
     RowBox[{"4", 
      SuperscriptBox["\[Alpha]", "2"], 
      SuperscriptBox["\[Kappa]", "2"], "\[Gamma]R"}]]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ASDh", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "\[Chi]_"}], "]"}], ":=", 
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{"Sh", "[", 
       RowBox[{"\[CapitalOmega]", ",", "\[Chi]"}], "]"}], "]"}], 
     RowBox[{"1", "/", "2"}]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ASDScon", "[", "\[CapitalOmega]_", "]"}], ":=", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[CapitalOmega]", "2"], "+", 
        SuperscriptBox["\[Gamma]R", "2"]}], 
       RowBox[{"4", 
        SuperscriptBox["\[Alpha]", "2"], "\[Gamma]R"}]], " ", ")"}], 
     RowBox[{"1", "/", "2"}]]}], 
   RowBox[{"(*", "given", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["2", "\[Gamma]R"], ")"}], 
           RowBox[{"1", "/", "2"}]], 
          RowBox[{"ASDScon", "[", 
           RowBox[{"\[CapitalOmega]to\[Gamma]R", " ", "\[Gamma]R"}], "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["2", "\[Gamma]R"], ")"}], 
           RowBox[{"1", "/", "2"}]], 
          RowBox[{"ASDh", "[", 
           RowBox[{
            RowBox[{"\[CapitalOmega]to\[Gamma]R", " ", "\[Gamma]R"}], ",", 
            RowBox[{"\[Chi]", "=", "0"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["2", "\[Gamma]R"], ")"}], 
           RowBox[{"1", "/", "2"}]], 
          RowBox[{"ASDh", "[", 
           RowBox[{
            RowBox[{"\[CapitalOmega]to\[Gamma]R", " ", "\[Gamma]R"}], ",", 
            RowBox[{"\[Chi]", "=", 
             RowBox[{"0.995", "\[Kappa]"}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["2", "\[Gamma]R"], ")"}], 
           RowBox[{"1", "/", "2"}]], 
          RowBox[{"ASDh", "[", 
           RowBox[{
            RowBox[{"\[CapitalOmega]to\[Gamma]R", " ", "\[Gamma]R"}], ",", 
            RowBox[{"\[Chi]", "=", "\[Kappa]"}]}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[CapitalOmega]to\[Gamma]R", ",", "0.15", ",", "35"}], "}"}],
        ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.01", ",", "100"}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<lossless stable nondegenerate 3-mode amplification (sWLC)\\nfor \
different nondegenerate gains \[Chi]\\n\[Kappa]=10\!\(\*SubscriptBox[\(\
\[Gamma]\), \(R\)]\), \!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\) is SRM \
coupling rate\>\""}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", ",", ","}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<angular freq, \!\(\*FractionBox[\(\[CapitalOmega]\), SubscriptBox[\
\(\[Gamma]\), \(R\)]]\) / [\!\(\*FractionBox[\(1\), \
SubscriptBox[\(\[Gamma]\), \(R\)]]\)]Hz (log scale)\>\"", ",", 
       "\"\<strain sensitivity (NSR), (\!\(\*FractionBox[\(2 \
\*SuperscriptBox[\(\[Alpha]\), \(2\)] \*SubscriptBox[\(S\), \(h\)]\), \
SubscriptBox[\(\[Gamma]\), \(R\)]]\)\!\(\*SuperscriptBox[\()\), \
\(1/2\)]\)\\n/ [\!\(\*FractionBox[\(\[Alpha]\), \
SuperscriptBox[SubscriptBox[\(\[Gamma]\), \(R\)], \
\(1/2\)]]\)]\!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) (log scale)\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
     RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"y", "-", 
     RowBox[{
     "axis", " ", "looks", " ", "all", " ", "wrong", " ", "because", " ", 
      "we", " ", "have", " ", "scaled", " ", "to", " ", "\[Alpha]"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ASDScon", "[", 
          RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDh", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"ASDh", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.995", "\[Kappa]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ASDh", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", "\[Kappa]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         FractionBox["10", 
          RowBox[{"2", "\[Pi]"}]], ",", 
         FractionBox[
          SuperscriptBox["10", "5"], 
          RowBox[{"2", "\[Pi]"}]]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<lossless stable nondegenerate 3-mode amplification (sWLC)\\nfor \
different nondegenerate gains \[Chi]\\n\[Kappa]=10\!\(\*SubscriptBox[\(\
\[Gamma]\), \(R\)]\), \!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\) is SRM \
coupling rate\>\""}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", ",", ","}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ",", 
       "\"\<strain sensitivity (NSR), (\!\(\*SuperscriptBox[\(\[Alpha]\), \(2\
\)]\)\!\(\*SubscriptBox[\(S\), \(h\)]\)\!\(\*SuperscriptBox[\()\), \(1/2\)]\)\
\\n/ [\[Alpha]]\!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) (log \
scale)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
     RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQfZp5z3PvSW8cX1SlvAHRAanbPoBofQe5byBa6L49
kw+QXntPgB9Ez/hjJAyi5x2JlAHR12rjFUG08P9EML3PJkgVRF+6V6QNortN
ZgSCxT33hYLoBCbPWBB94M6hOBB9ce/vZBCd/fhqBohm6LqXC6JLev60g+g5
B752g+hU9ZiJIPp71NRpIHoJ+8w5IDpo1vlFIDpg1aYlINp2xfKVYHtObN4M
orWzGraDaI6bSbtBdMbpEydBtNtRn1MgeubVvP37gfTTRw4HQfTyis9MB4C0
3Pa9zCD6w9d0ThCdb/2CB0T/KvgidxBIu1pxy4PoExairWKT3zhWOCl0gmgp
8RtTQfRcOfmZIBoAd1K3eQ==
  "],
 CellLabel->"In[4]:=",ExpressionUUID->"178a6746-8cba-4802-b5cf-1ad1741287d6"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6], 
            Dashing[{Small, Small}]], 
           LineBox[CompressedData["
1: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
X5eodjg=
            "]]}, Annotation[#, "Charting`Private`Tag$1887#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwV13k4VV0XAPB7r3mKSyFDoUiKhAyJtUURSlJEZaj0ImSqkMoQShKNoqJC
FNJsqo00GjInZCZT5uHO9zvfX+f5Pc/e56y9zj57raN89NQ+TwqJRKohk0j/
v8rwHnZNc+FgsSbKzF9rLsx/HOutcOBgK/Mn6/7vhrCwY39tOTh28c6RYcIJ
U3e89ICDnzae/jpImNXRGFS/hoNV+Mg3+wj3vrSMp/xjY41l3wU7Cee66Rb5
XGRjV7F+nzrCW8uEKcZZLGwhe3noBWHnMwr89fdZePNx8V+FhEM3awl73Gbh
APn0rwWE3z+1l4yPY+H3KuXZzwnr3UpVafZi4evVwo5PCW/yUzM/qcnCjiSh
uIeE167efin9HRM77WhQSCQsHhPGz/rGwJOmxRPHCEemr+UVq2LgvlSjwqOE
Z1//JK8qY+BlB3P8PQi3DaqyoYCBeS1MJ1wJP9zZNBeTwsDguLvDmfBG4Q19
Ii7E/X5Qo+wIW6V0lcmP07Hwj32zRoSjMiDQWIyOZcu/rBchPJYZgU7x0/Hm
r4vZQoT3Py4Rf8Kl4c3pXUqChNWzdQuFZ2n4q8FnST7C9c/Wjf9uo+Ee8/Fh
zi4uKLwT9wzNpGGDpOt2s4Tf1fYcfKtLw6q6mnLthCfoF9EmlyVMTxGzzyCc
yoSUn/uW8HveQqsHhHewuX2nbJbw1zd+pumEH5IiY4q2LeGc3+Zr7xLeKxD5
ZfPqJfxwi9zvJMKvl0fa6g0uYrO2vqHzhMM3RR408l/E6WvlLroQFvSMDDCP
XsBvN7pbiBEWqP5d6nFuAf9U6O4VJsy/RpcvMmQBq3y3PSdImLdv6F75iQWs
abSQx0OYe9jm0xabBfzYAU3SrbiwuF9aWn35Ar62bT11mPCQRX6ZaM48XnqJ
XpcTrlrbzt/2fQ67rR1nHCXMe+lNk3vVHPalLFW7Ed45kPxwvHQOy9ylJB4m
/P3RLn1y/hzGOWJUR8INq8o8NybN4S8KWYtWhP/IPqyO3jeH3ybYaWoRpoke
j97UOYtXqTJ0Fy25oLkwxb48MYOfbhCknSN8wsQ1XX9oBkv/kWafJZwZW2s4
+GcGZzte4AQTXi6dFww/Z/DfzdaLJwkz9I+OLrycwa3fz5QcIvwltKXl6NkZ
PGe05upWwm6s4ufbKDP4x5lV5gs7uZDCE+08LTONi412bHElrJh3ZVqeOo2D
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
EkVF/wPotVYG
            "]]}, 
          Annotation[#, "Charting`Private`Tag$1887#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
sZVJ/x96C2Mz
            "]]}, 
          Annotation[#, "Charting`Private`Tag$1887#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAFwRcXppa/r9Q3Ks2/yMSwPS+6uDA
U/6/6fDNLT8iEsDQeXlj50z+vzaU1Rx/IBLAiu+WaDQ//r+O8Hri/hwSwPza
0XLOI/6/gcBiC/4VEsDgsUeHAu39v5qKu836BxLAqF8zsGp//b9HMyDk7esR
wDq7CgI7pPy/7ykRwrizEcAPg3kG/Mj6v7n0oQdMORHAgZ8/cTsN+b/lvbR4
K8YQwOz5f0AvWve/UAFEPl1UEMAIZYBwQ4L1vzqOGO9Drw/AwiTYBtbJ87/W
ZmNAiMMOwC317/2I7PG/++LQdzPADcCRA4JZ8Bfwv+oN+z/kvAzAJM3WNqzF
7L/iZ9A+/sULwIm0KXy4Eem/VYM9oc6zCsAoRSuOwZzlv4VS4aDJrAnAulEh
aTM54r+s9BikXaMIwF3/LgvMF92/8WZynM95B8C6rXjdKjvWv7AqPM82WgbA
uT2FZRaWzb+66haIphYFwJAf1mf09r2/TZNHg0XMA8ABbLhQE82Fv0kydX5W
jALAe/mmh6nRuj/VGLPkQSQBwFLb94mHMss/k1bH4waQ/78u2g2lmxHVP3Ia
JK/Cg/y/zs428yFn3D9coQ1HU235v304AVRXn+E/tNpQ2t139r8w6Obs3FTl
P2C2cPziLvO/qe4duWXL6D8wMLfzPQ3wvy95YLyFMOw/qgdngrvb6b9T4iL+
ZN/vPzQT6ktS++K/HlGbuaOn8T8xEmsDcffYv2EgZZN0hPM/KAqiKrd2xb+r
sbQIkVj1P6bsMUFy8ao/WO6sFy8N9z+AlqRgcZzQP1Qa5cWs5vg/+YeQ3x4O
3z+z8cUNrKD6P7kPFZYLTeY/GIss8fZR/D+Mbh5lGPfsP8wT03MhKP4/iHg1
MgAc8j/jRyKQzd7/P1FzD8dsgPU/pLXYpSzdAEBm1SQfvy/5PwmddFAzuwFA
CiTSZwmi/D9wZdPI35QCQNFTD44PAgBAfyXSEPyAA0DW8LIBRtgBQD87pSVZ
XQRASavgqX+PA0CmSBgKJkwFQB2IT+TLawVAEjdOvJg2BkAPJIQZrT8HQC97
WDtMEQdAqnQyclH0CEDytgKKb/4HQAUdivLuzQpAaEiBpdPbCECGiTfqOIgM
QOG6wo7dtAlADgOeyeg5DkABJaRHV6AKQAN9bp1CCBBA0uRZzRF8C0DEPJOi
3OMQQI7/NO/mfwtAsRaLQrHnEEBKGhARvIMLQJAH/+KF6xBAwU/GVGaLC0Db
VFklL/MQQLC6Mty6mgtAUsXKr4ECEUCOkAvrY7kLQIOnO9smIRFASzy9CLb2
C0DnAEGJcV4RQAZXmCqL+gtASpTeN0ZiEUDCcXNMYP4LQI9D6uYaZhFAOqcp
kAoGDECyUUpGxG0RQCoSlhdfFQxA1cUhChd9EUAI6G4mCDQMQPoc1KW8mxFA
xAJKSN03DEC6ASNbkZ8RQIAdJWqyOwxAv57ZEGajEUD3UtutXEMMQNt1fH0P
qxFA5r1HNbFSDEDv2o1bYroRQKLYIleGVgxAwcEPFDe+EUBe8/14W1oMQOpS
9swLwhFA1Si0vAViDEAo9O8/tckRQJBDj97aZQxAGkUC+onNEUBMXmoAsGkM
QBTCd7Re0RFACHlFIoVtDEBqDFBvM9URQMSTIERacQxAxMWKKgjZEUDIFUVv

            "]]}, 
          Annotation[#, "Charting`Private`Tag$1887#4"]& ]}}, {}, {}}, {
      Ticks -> {
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
       FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
       Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
       AxesOrigin -> {-1.8971198736110233`, -4.605170185988091}, 
       FrameTicks -> {{Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
       All, DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "ClippingRange" -> {{{-1.8971198736110233`, 
          3.5553479502145553`}, {-4.535153249969042, 
          4.461945214004519}}, {{-1.8971198736110233`, 
          3.5553479502145553`}, {-4.535153249969042, 4.461945214004519}}}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 400, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
       FormBox["\"lossless stable nondegenerate 3-mode amplification \
(sWLC)\\nfor different nondegenerate gains \
\[Chi]\\n\[Kappa]=10\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\), \\!\\(\
\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\) is SRM coupling rate\"", 
         TraditionalForm], PlotRange -> 
       NCache[{{-1.8971198736110233`, 
          3.5553479502145553`}, {-4.605170185988091, 
           Log[100]}}, {{-1.8971198736110233`, 
         3.5553479502145553`}, {-4.605170185988091, 4.605170185988092}}], 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {Automatic, Automatic}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         RowBox[{
           SqrtBox[
            FractionBox["2", "\[Gamma]R"]], " ", 
           RowBox[{"ASDScon", "(", 
             RowBox[{"\[CapitalOmega]to\[Gamma]R", " ", "\[Gamma]R"}], 
             ")"}]}], 
         RowBox[{
           SqrtBox[
            FractionBox["2", "\[Gamma]R"]], " ", 
           RowBox[{"ASDh", "(", 
             RowBox[{
               RowBox[{"\[CapitalOmega]to\[Gamma]R", " ", "\[Gamma]R"}], ",", 
               
               RowBox[{"\[Chi]", "=", "0"}]}], ")"}]}], 
         RowBox[{
           SqrtBox[
            FractionBox["2", "\[Gamma]R"]], " ", 
           RowBox[{"ASDh", "(", 
             RowBox[{
               RowBox[{"\[CapitalOmega]to\[Gamma]R", " ", "\[Gamma]R"}], ",", 
               
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.995`", " ", "\[Kappa]"}]}]}], ")"}]}], 
         RowBox[{
           SqrtBox[
            FractionBox["2", "\[Gamma]R"]], " ", 
           RowBox[{"ASDh", "(", 
             RowBox[{
               RowBox[{"\[CapitalOmega]to\[Gamma]R", " ", "\[Gamma]R"}], ",", 
               
               RowBox[{"\[Chi]", "=", "\[Kappa]"}]}], ")"}]}]}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 TagBox[#, HoldForm], ",", 
                 TagBox[#2, HoldForm], ",", 
                 TagBox[#3, HoldForm], ",", 
                 TagBox[#4, HoldForm]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", "10", "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"angular freq, \\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), SubscriptBox[\
\\(\[Gamma]\\), \\(R\\)]]\\) / [\\!\\(\\*FractionBox[\\(1\\), \
SubscriptBox[\\(\[Gamma]\\), \\(R\\)]]\\)]Hz (log scale)\"",
   "\"strain sensitivity (NSR), (\\!\\(\\*FractionBox[\\(2 \\*SuperscriptBox[\
\\(\[Alpha]\\), \\(2\\)] \\*SubscriptBox[\\(S\\), \\(h\\)]\\), \
SubscriptBox[\\(\[Gamma]\\), \\(R\\)]]\\)\\!\\(\\*SuperscriptBox[\\()\\), \
\\(1/2\\)]\\)\\n/ [\\!\\(\\*FractionBox[\\(\[Alpha]\\), \
SuperscriptBox[SubscriptBox[\\(\[Gamma]\\), \\(R\\)], \
\\(1/2\\)]]\\)]\\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) (log \
scale)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
       Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, BaseStyle -> Directive[10], DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.835301965690732*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"239773d5-85f0-4b3f-8790-29094cd7ddb9"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6], 
            Dashing[{Small, Small}]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$2418#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwd13c8lV8YAHB7XePua96BlIwkI5XukwqpEJGMjCjKLyMkFBItKWVEKZVI
RckeSVZKhUgysgqpRIQofuf0z72f7+dd55z3eZ/zPBw3HysPPh4eHlv0g/9d
DnyNfv6khzvhIP/6x1k6eCuv/6G0o4/rGxn8Cvvu5Rg595p+bqpKXSP2J74m
kwzdQS5fG88/s/0ZAZ+yPnGLx1RfYm/nrXLYYjDEVfmh+gI75KLnxtyXw1yZ
BKkGbGLHumKXyyPc/pwjz7EzWSQ1iuMXbqdKRz12a24pOfj7KFctO6IO++cG
g5qeu1+5h/e11f67/l3J4Y3u37jbKOx/3jZf3CbZ9Z17qSCtGvtAnH50QNIY
99uHN8+wz3CKdTt3/OAaWU5XYQ8qOTRauY9zV9urPMWeyq+XX1E1zi0f167E
FtikfYggP8FNc9R5gr3EXZRU2zrB/XqTUo6tNxXglr7iJ7fCbbwU2/hkX37Y
uZ9cledPS7D3ZxTb6m6c5I4vrirCPuT7gS4SOMk9OhZciB2wbr69M3OSm7Oh
tAA7om39rgixKa7OTbV87FSB+l2NLVPcE19aH2KnNw8zrvP/4g5ljudiZ10T
7fDV/cVNaBT+5wKd7Xb0lF/cNxXKD7Bfu7fZubpMc3uW0+5iF/FzRvriprkT
RZQs7Ou3/jvi8mSaG7VbPPPf+PqEkpxlZ7iWtl9v/1tfR4NWp7YZrrim4w3s
k/d7U9O+znDrH1Vfx56di3br4ZvlDvkv/ef+lLcTjitnuS/Tv17Dfvz+INEx
bpYrQNyTim1tfX27velvbonPUAJ2fcacS6zrb+7YR+Y/r5m2DagM+c2teLfz
8r94SpG6qpjzm1u6pjQe+9vHiJFR0hz3Pc/eOOyYA3ujQrvmuHPyq05h/y5/
mpQzNcd9w4GYf/ErIX+vV2Kem6lsFv3v+Y/amjfCPFd5YWfUv/tPb2aK35nn
TnzfFI5dFrms9NqhP9wtdSeDsN/UNi3ffeoP19HBLfDf/ISPXKOl/+EKHVgX
gC0SVxce1/KHS6377Ie9K9XNOELnL3e1nvh//+Lp8bXWvXN/ubUP09ywj+/0
Fa8WWuCqSY65/rt+euNmNmWBu9rR8J/lDL4WdastcO9XdThjGz01SLVxWuAq
hPE5YV9sbHcxqVrgLhqyd2FrfCKOLY9Z5P5yDzbD9l3z0L4gfpF7JDdvy7/1
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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$2418#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
NKU=
            "]]}, Annotation[#, "Charting`Private`Tag$2418#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwVkHk41HkcxyflHNeMMRjMj98vYypydUwH34+j2JxRlt0Viph2c5Si2Arh
iR7JNqsnU1gycq2k1FDzSw06ZBM6KUuGURQdyjFr/3g/r/9er+d5m++M9Y9U
olAo3gv7n2F7xjLabvYhQyvr7eVv6KRHUkKOzrs+FJAu67rdRydtMufyfmT1
oyCdIr++F3RyvkRHKDvYj1quKnsxeuik8LlDvarta9TQXueSdo9O/rbUaYLY
+gZ5/3LYZkc9naz4I9M44s4AsitsVmEep5Nm+wwShkRDiJc9WZlhSSef1N6g
J72Xo8tTg15dO2jkIPHzA/+IDyg1dXnIr6W6ZFRZY+Bq1ym0OTDjY/hTHbIj
ojsoPOwLCudHRbZ6aJMBARe8f/L4hkTJm3a1dGuS4lTuDWHMLErujQeBM5W0
HtIdX56pQCd4D142X1Unw9Y/0XBdtQjqLL/3J7qpkYX4fLDgrhJsFP55mtKg
Qr4tOYr7rF8Cv4+sidN3UiZXb6jrrK5QhiiyZiq2czF58BPwbNeoQkoaX57i
rES2uXFZrEtqoDx6pXymg0KqX41t5G7QgEnuTp+ZA/MSP7R7XZ+UCrofM+r6
QmYkorArq6ZXa0F/w6UjlMPTkomSsLG1Um2g7Sguk2z/LCEc67UmTHRhSODX
WB4xKXFfF5HePawL0uMp1ifCxyUxLXvHNGto0A5Z/GDNEYlpAZ43HUmHvGFP
rUT9fyV3k7PyD67UAzSwXzyn/VQyVVXwWDSqB75cceRzK6nEgq9QsiphgGJe
fXATpQj5rjHId4nWB/XoLvzOp060yPdFiCbOhNcb8xippX2oOtE7K3qMCY+J
Vl8f4TAKtjYsNbhsAL3hz84PNI+j3JW5M4f4hjDynaWcHzWFmlHD5Rg7I8gr
iX/YTJtG+4QZZcx3RpA1pDdjVD+LVmTWnqCVsiCS8fIINFPg1dGshxf4xsBV
MrN7GL8Y9KVUr9e4CST6eYirdFVgMwuW1Y+ZQM/J828PzKqBQoy58kSmcG/2
kCJp4demkUBfWigbZqv3JLVla0Mcx+lGCgeDkKElxW73daHm739CC99g0Lh0
tkiVR4d9Zer2nO1m4PO+zPlkqx7kNgZac6+bwRFm9zp/X32IifvWms4wh2vy
0/LyW0zYYpdwqiLJHKp0YmQib0OQF7h94fSag/0h3quiFiOgSqH3kR0O4ecC
VpyyNYZl3xlvkQCHRklkWudNE6D2OOVrTOKQdbK48qItG7K//iWrmMIhRfGs
zXQtG9RYqo7un3FglqnJBI5sWBLaKUufxiFuAFZkbmHD/Eio49w8DhYDN+/v
jmDDh9ljIxNUAsY70C7uWTb0Lr3j1GNBAEVKHa5WsGGbu+WZ/ZYESDWiN1qo
YNDFzxmlLSOgNC/0zHlNDDprA874WBFgqs78IdcIg3be0GibPQGOnsHSWAcM
mryUBWJEQJonVdUhCoP1sXx5kDMB8fbjB6r2YnD9dAf66kJAZb/bMJGAQUOv
QO6wmYArtm4PGKkY1IZxoMaLgDmbLeVfzmFglZ4t8PQhIKsw2yy2BIPKi+Py
UV8CDI5ZCWUiDETyawJOAAG7n+QUPGvAgKNlPHZ3GwFnX7gZbG3CoMzmKOwK
XOjlBJ69dxsD3H9QsCiIAFHTLZZLOwbFCe5jRcELPtfkC+JHGPwHMU8sAA==

            "]]}, 
          Annotation[#, "Charting`Private`Tag$2418#4"]& ]}}, {}, {}}, {Ticks -> {
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
       FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
       Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, AxesOrigin -> 
       NCache[{
          Log[5/Pi], -4.719384508974166}, {
         0.4647080265847003, -4.719384508974166}], FrameTicks -> {{Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "ClippingRange" -> {{{0.46470821455083033`, 
          9.675048210594753}, {-4.719384508974166, 7.951883770249672}}, {{
          0.46470821455083033`, 9.675048210594753}, {-4.719384508974166, 
          7.951883770249672}}}}, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0.4647080265847003, 0}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 400, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
       FormBox["\"lossless stable nondegenerate 3-mode amplification \
(sWLC)\\nfor different nondegenerate gains \
\[Chi]\\n\[Kappa]=10\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\), \\!\\(\
\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\) is SRM coupling rate\"", 
         TraditionalForm], PlotRange -> NCache[{{
           Log[5/Pi], 
           Log[50000/Pi]}, {-4.719384508974166, 7.951883770249672}}, {{
         0.4647080265847003, 9.675048398560882}, {-4.719384508974166, 
         7.951883770249672}}], PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         RowBox[{"ASDScon", "(", 
           RowBox[{"2", " ", "\[Pi]", " ", "f"}], ")"}], 
         RowBox[{"ASDh", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", "0"}]}], ")"}], 
         RowBox[{"ASDh", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
               RowBox[{"0.995`", " ", "\[Kappa]"}]}]}], ")"}], 
         RowBox[{"ASDh", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", "\[Kappa]"}]}], ")"}]}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 TagBox[#, HoldForm], ",", 
                 TagBox[#2, HoldForm], ",", 
                 TagBox[#3, HoldForm], ",", 
                 TagBox[#4, HoldForm]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", "10", "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"",
   "\"strain sensitivity (NSR), (\\!\\(\\*SuperscriptBox[\\(\[Alpha]\\), \\(2\
\\)]\\)\\!\\(\\*SubscriptBox[\\(S\\), \\(h\\)]\\)\\!\\(\\*SuperscriptBox[\\()\
\\), \\(1/2\\)]\\)\\n/ [\[Alpha]]\\!\\(\\*SuperscriptBox[\\(Hz\\), \
\\(\\(-1\\)/2\\)]\\) (log scale)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
       Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, BaseStyle -> Directive[10], DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.835301967146052*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"e0cfb816-ec3d-4b95-a08c-d65d5017c4d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"want", " ", "to", " ", "plot", " ", 
     SuperscriptBox["Sh", 
      RowBox[{"1", "/", "2"}]], " ", "against", " ", "f", " ", "using", " ", 
     "real", " ", "values"}], ",", " ", 
    RowBox[{
    "to", " ", "compare", " ", "to", " ", "sensitivity", " ", "target", 
     "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
       "recreating", " ", "Fig", ".5", " ", "in", " ", "Li", " ", "et", " ", 
        "al"}], ",", " ", 
       RowBox[{
       "2020", " ", "also", " ", "requires", " ", "radiation", " ", 
        "pressure", " ", "noise"}], ",", " ", 
       RowBox[{"not", " ", "yet", " ", "derived"}]}], ")"}], 
     "\[IndentingNewLine]", "This", " ", "requires", " ", "using", " ", "the",
      " ", "correct", " ", 
     SubscriptBox["\[Alpha]", "GW"], " ", "scale"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"\[Alpha]", ",", "\[Chi]", ",", "\[Kappa]", ",", "\[Gamma]R"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"3", " ", 
      SuperscriptBox["10", "8"]}]}], 
    RowBox[{"(*", 
     SuperscriptBox["ms", 
      RowBox[{"-", "1"}]], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[HBar]", "=", 
     RowBox[{"1", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "34"}]]}]}], 
    RowBox[{"(*", "Js", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Larm", "=", 
     RowBox[{"4", " ", 
      SuperscriptBox["10", "3"]}]}], 
    RowBox[{"(*", "m", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Pcirc", "=", 
     RowBox[{"3", " ", 
      SuperscriptBox["10", "6"]}]}], 
    RowBox[{"(*", 
     RowBox[{"J", "/", "s"}], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]0", "=", 
     RowBox[{"2", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], 
    RowBox[{"(*", "m", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]0", "=", 
     RowBox[{"2", "\[Pi]", " ", 
      FractionBox["c", "\[Lambda]0"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"value", " ", "in", " ", "Li", " ", "et", " ", "al", " ", 
      RowBox[{"doesn", "'"}], "t", " ", "make", " ", "sense", " ", 
      "dimensionally"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
       "using", " ", "Korobko", " ", "et", " ", "al", " ", "2019", " ", 
        "instead", "\[IndentingNewLine]", "\[Alpha]"}], "=", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"2", "Pcirc", " ", "\[HBar]", " ", "\[Omega]0"}], 
          RowBox[{"c", " ", "Larm"}]], ")"}], 
        RowBox[{"1", "/", "2"}]]}], ";"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]", "=", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"2", "Pcirc", " ", "Larm", " ", "\[Omega]0"}], 
        RowBox[{"\[HBar]", " ", "c"}]], ")"}], 
      RowBox[{"1", "/", "2"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]R", "=", 
     RowBox[{"2", "\[Pi]", " ", "500"}]}], " ", 
    RowBox[{"(*", "Hz", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Kappa]", "=", 
     RowBox[{"10", "\[Gamma]R"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ASDScon", "[", 
          RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDh", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"ASDh", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ASDh", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", "\[Kappa]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "10", ",", 
         SuperscriptBox["10", "4"]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<lossless stable nondegenerate 3-mode amplification (sWLC)\\nfor \
different nondegenerate gains \[Chi]\\n\[Kappa]=10\!\(\*SubscriptBox[\(\
\[Gamma]\), \(R\)]\), \!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\) is SRM \
coupling rate\\nno radiation pressure effects\\nparameters of LIGO \
Voyager\>\""}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", ",", ","}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ",", 
       "\"\<strain sensitivity (NSR), \
\!\(\*SuperscriptBox[SubscriptBox[\(S\), \(h\)], \(1/2\)]\)\\n/ \
\!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) (log scale)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
     RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.835035149895096*^9, 3.835035211208274*^9}, {
  3.835035683781434*^9, 3.835035707461011*^9}, {3.835035759597912*^9, 
  3.835035764614431*^9}, {3.835035795287764*^9, 3.835035833335251*^9}, {
  3.835037379195499*^9, 3.835037409004099*^9}, {3.835037454910521*^9, 
  3.835037586108575*^9}, {3.835037620133082*^9, 3.835037643593316*^9}, {
  3.835037675441442*^9, 3.835037755446409*^9}, {3.835038866585786*^9, 
  3.835038931356164*^9}, {3.835039117091229*^9, 3.835039141920133*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"0883ef2b-3c1f-4b86-94d2-5cfe699198ba"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6], 
            Dashing[{Small, Small}]], 
           LineBox[CompressedData["
1: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
a57P8w==
            "]]}, Annotation[#, "Charting`Private`Tag$3441#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
9HFT4n+MQBZ3
            "]]}, 
          Annotation[#, "Charting`Private`Tag$3441#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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

            "]]}, Annotation[#, "Charting`Private`Tag$3441#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwVz3s01AkUB/BpyGEpY4SaCTM/ERUZs5Qa6+42pd/M/H4626YoNHqIdo48
t6yyREu7Gr1oF6dILz2nZqaIuoeNNm+R97KrpFK2shh12v3tH/fc8zn33HO+
X2FEzNc72CwWi2Lm/13tUdyk2c2GsozgA+EVNHJMXdSme9gQt8LLnMc47M+y
wPAENuwUG51qL6fRcFzbYrGfDUsaczQkY09DXVvkETaU3JQ+Fd+hsajmzRN7
DRs8KkRrTfU07t0kGcieYIM45pGZRkPj0vTOMWWaEfRxh2LZl2g8+vpkkeqa
Mfhe2FfnkUejv2yDy6G6mSBeZ1vwSwaNsdP5PH6vCaQPbinaHE/jqeqIAnMT
U2hOmOo9t5VG8xSPSVN7MziydFznHkhjHJU+oJR/Bmakk6dEwuSPCxYvSzCH
mKEA4Wk3GvOyRBHzsi1gy+u2Qr+5NFbrj9pv1M0Ck5+8R0Nn0rjiybtbxY2z
IefQui79ewp9yE7drkFLGPQuXRP2F4XWL4UlqzM5MNSY/T6lmULRxa6gUI4V
TH/iSRuqKCTjHrcSF6xgR21lcEYZhU7D6nSXlVw4Y/JjT1w+hWfbGs54PuAC
x87o6A+ZFDrUU5kjIdawaSQ4vimWQn9JYOf5YWsIyGZxncMpDCk/McY9MAcM
u6u52TIKlw0W+FVxbWDVPmtWkzeFFalOBlWRDQy4PC97IWTui8eSG8S2kKri
QKE58x+4MlqEjDs8+ZP/KNDfnlS3k3awIfXTVPeAAh0nf012HrCDDzrR0spa
BZ4jVY9ToudCmTkvyPmaAp0vHnyXNmMeuC1IDnA/psDIG5sDHpycB+rE1W/D
EhUYKNKaWQp4AD1rbmwIVqDo3rpjJnoeuOrP363yVWB5jSrL+Cs+qDyunvXj
K9AoXqGFej74uLGuHPwox7UeMecXbZ0PeTat30X0yFEcwTXhv5oP0gvl/aPl
cpxbYlhcnmYPxraJ20R5cjwborwfOtsBVP6lfdEJcvy78nAWnHKA3HYBj7Ve
zvSfsmt1d4RjeXdOpHjIcQF3eM6uckdwmVio8bGQ4yG2xbdBrgL4nm4jXgzL
sLclcyQ/TgDueyb2u1XL8GDv/YK+2wK48lvh0/rTMnQd5XtNsYWgdLQ8npQs
Q4Hv8n9tSSGMf9FuOLJRhoYQ7+ftOUIoKIUOyluGzenf3IzqEkJrbtoYnyPD
qWGxdoYDARe3K7yUr0nsZPknLHck4K3Ez6Z2lEQ9T/Z5jICA+FX9k4sYx9Nb
tX0EAdnhSyrHX5L4Rvez9vZCAkqDrb7MGiHxWcYzrUpEwHULUnJ9iMQ2Il/X
LSXgRuyb6Y/dJGokJYmcNQQUv9rbrmScG3TVOyCAgLtDVVdru0ikDtfotCQB
tYV7w3M7SXz4dkynpgmYhIr7Th0k3sO1+tWbCAjI1MXLWkgs6lmflBJMQI50
Nnm9mcSU8TCfWyEEWKhdHOYw9nVN1AtCCXj2Ia+uv5FErbpY/0FJgEthql1s
PYnHL11J8tpGwKBD/8uORyTG1dz2idpOwB/qj1UrGHtONuqf7CQgMjJ9m/Hv
JFpadSfN2kVAYsQL76iHTP9FT32kUQQ0JFibNtWR2CAdm0iOJqDlOavHi/Hl
sGm9ZjeTz/jm5fxaEv8D9DI4fQ==
            "]]}, 
          Annotation[#, "Charting`Private`Tag$3441#4"]& ]}}, {}, {}}, {Ticks -> {
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
       FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
       Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, AxesOrigin -> 
       NCache[{
          Log[10], -61.45603923197753}, {
         2.302585092994046, -61.45603923197753}], FrameTicks -> {{Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "ClippingRange" -> {{{2.3025852339686432`, 
          9.210340231001586}, {-61.45603923197753, -51.551503621981375`}}, {{
          2.3025852339686432`, 
          9.210340231001586}, {-61.45603923197753, -51.551503621981375`}}}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {2.302585092994046, -61.45603923197753}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 400, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
       FormBox["\"lossless stable nondegenerate 3-mode amplification \
(sWLC)\\nfor different nondegenerate gains \
\[Chi]\\n\[Kappa]=10\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\), \\!\\(\
\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\) is SRM coupling rate\\nno \
radiation pressure effects\\nparameters of LIGO Voyager\"", TraditionalForm], 
       PlotRange -> NCache[{{
           Log[10], 
           Log[10000]}, {-61.45603923197753, -51.551503621981375`}}, {{
         2.302585092994046, 
         9.210340371976184}, {-61.45603923197753, -51.551503621981375`}}], 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         RowBox[{"ASDScon", "(", 
           RowBox[{"2", " ", "\[Pi]", " ", "f"}], ")"}], 
         RowBox[{"ASDh", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", "0"}]}], ")"}], 
         RowBox[{"ASDh", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
               RowBox[{"0.986`", " ", "\[Kappa]"}]}]}], ")"}], 
         RowBox[{"ASDh", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", "\[Kappa]"}]}], ")"}]}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 TagBox[#, HoldForm], ",", 
                 TagBox[#2, HoldForm], ",", 
                 TagBox[#3, HoldForm], ",", 
                 TagBox[#4, HoldForm]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", "10", "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"",
   "\"strain sensitivity (NSR), \\!\\(\\*SuperscriptBox[SubscriptBox[\\(S\\), \
\\(h\\)], \\(1/2\\)]\\)\\n/ \\!\\(\\*SuperscriptBox[\\(Hz\\), \
\\(\\(-1\\)/2\\)]\\) (log scale)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
       Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, BaseStyle -> Directive[10], DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.835301967550226*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"5217e01d-4e31-44f4-8b81-d974f60f2d66"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{"integrated", " ", "lossless", " ", "sensitivity"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   FractionBox[
    RowBox[{"4", 
     SuperscriptBox["\[Alpha]1", "2"], 
     SuperscriptBox["\[Kappa]1", "2"], "\[Gamma]R1"}], 
    RowBox[{"2", "\[Pi]"}]], 
   RowBox[{"Integrate", "[", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[CapitalOmega]", "2"], "+", 
          SuperscriptBox["\[Chi]1", "2"], "-", 
          SuperscriptBox["\[Kappa]1", "2"]}], ")"}], "2"], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]R1", "2"], 
        SuperscriptBox["\[CapitalOmega]", "2"]}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalOmega]", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Chi]1", ">", "0"}], ",", 
        RowBox[{"\[Kappa]1", ">", "0"}], ",", 
        RowBox[{"\[Gamma]R1", ">", "0"}]}], "}"}]}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.835036401456932*^9, 3.835036477906516*^9}, {
  3.835036560927867*^9, 3.8350365732602654`*^9}, {3.8350366954834623`*^9, 
  3.8350367090085773`*^9}, {3.8350369829776917`*^9, 3.8350369894316263`*^9}, {
  3.8350460686606197`*^9, 3.8350460692238073`*^9}, {3.835052726033289*^9, 
  3.835052741344212*^9}, {3.8351255901800613`*^9, 3.835125592289096*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"cd9ae65f-fc2e-4d00-9185-a9ecc73b6a9c"],

Cell["\<\
Lossy sensitivity, adding loss terms to each mode, assuming each noise is \
quantum with uncorrelated vacuum bath\
\>", "Text",
 CellChangeTimes->{{3.8350455927349243`*^9, 3.835045636929449*^9}, 
   3.835128735206914*^9},ExpressionUUID->"e9937aac-b987-4462-a6d6-\
6a2fa2646848"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Gamma]a", ",", "\[Gamma]b", ",", "\[Gamma]c", ",", "\[Gamma]btot"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShLossy", "[", 
   RowBox[{"\[CapitalOmega]_", ",", "\[Chi]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", 
     SuperscriptBox["\[Alpha]", "2"], 
     SuperscriptBox["\[Kappa]", "2"], "\[Gamma]R", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]c", "2"], "+", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]], 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Gamma]btot", "-", 
           RowBox[{"2", "\[Gamma]R"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "-", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}], 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Kappa]", "2"], "\[Gamma]c"}], "-", 
        RowBox[{
         SuperscriptBox["\[Chi]", "2"], "\[Gamma]a"}]}], ")"}], "2"], 
     "\[IndentingNewLine]", "+", 
     RowBox[{
      SuperscriptBox["\[CapitalOmega]", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Chi]", "2"], "-", 
         SuperscriptBox["\[Kappa]", "2"], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Gamma]btot", "-", 
            RowBox[{"2", "\[Gamma]R"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}]}], "-", 
         RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "+", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], 
     "\[IndentingNewLine]", "+", 
     RowBox[{"4", "\[Gamma]R", " ", "\[Gamma]a", " ", 
      SuperscriptBox["\[Kappa]", "2"], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
     "\[IndentingNewLine]", "+", 
     RowBox[{"4", "\[Gamma]R", " ", "\[Gamma]b", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
     "\[IndentingNewLine]", "+", 
     RowBox[{"4", "\[Gamma]R", " ", "\[Gamma]c", " ", 
      SuperscriptBox["\[Chi]", "2"], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ASDShLossy", "[", 
    RowBox[{"\[CapitalOmega]_", ",", "\[Chi]_", ",", "lossRatio_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     SuperscriptBox[
      RowBox[{"ShLossy", "[", 
       RowBox[{"\[CapitalOmega]", ",", "\[Chi]"}], "]"}], 
      RowBox[{"1", "/", "2"}]], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Gamma]a", "\[Rule]", 
       FractionBox[
        RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
        RowBox[{"1", "-", "lossRatio"}]]}], ",", 
      RowBox[{"\[Gamma]b", "\[Rule]", 
       FractionBox[
        RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
        RowBox[{"1", "-", "lossRatio"}]]}], ",", 
      RowBox[{"\[Gamma]c", "\[Rule]", 
       FractionBox[
        RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
        RowBox[{"1", "-", "lossRatio"}]]}], ",", 
      RowBox[{"\[Gamma]btot", "\[Rule]", 
       RowBox[{"\[Gamma]R", "+", 
        FractionBox[
         RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
         RowBox[{"1", "-", "lossRatio"}]]}]}]}], "}"}]}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Checking", " ", "that", " ", "lossy", " ", "expression", " ", "can", " ", 
    "be", " ", "recovered"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"losslessAsmps", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Gamma]a", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Gamma]b", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Gamma]c", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Gamma]btot", "\[Rule]", "\[Gamma]R"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ShLossy", "[", 
        RowBox[{"\[CapitalOmega]", ",", "\[Chi]"}], "]"}], "/.", 
       "losslessAsmps"}], ")"}], "\[Equal]", 
     RowBox[{"Sh", "[", 
      RowBox[{"\[CapitalOmega]", ",", "\[Chi]"}], "]"}]}], ")"}], "//", 
   "Simplify"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "Plotting", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ASDScon", "[", 
        RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ASDShLossy", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
         RowBox[{"\[Chi]", "=", 
          RowBox[{"0.986", "\[Kappa]"}]}], ",", 
         RowBox[{"lossRatio", "=", "0.5"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ASDShLossy", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
         RowBox[{"\[Chi]", "=", 
          RowBox[{"0.986", "\[Kappa]"}]}], ",", 
         RowBox[{"lossRatio", "=", "0.1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ASDShLossy", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
         RowBox[{"\[Chi]", "=", 
          RowBox[{"0.986", "\[Kappa]"}]}], ",", 
         RowBox[{"lossRatio", "=", "0.03"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ASDShLossy", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
         RowBox[{"\[Chi]", "=", 
          RowBox[{"0.986", "\[Kappa]"}]}], ",", 
         RowBox[{"lossRatio", "=", "0.005"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ASDShLossy", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
         RowBox[{"\[Chi]", "=", 
          RowBox[{"0.986", "\[Kappa]"}]}], ",", 
         RowBox[{"lossRatio", "=", "0"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", "10", ",", 
       SuperscriptBox["10", "4"]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{"\"\<Expressions\>\"", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<lossy stable nondegenerate 3-mode amplification \
(sWLC)\\n\[Kappa]=10\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\), \
\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\) is SRM coupling rate\\nno radiation \
pressure effects\\nparameters of LIGO Voyager\\nconventional detector is \
lossless\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", ",", ",", ",", ","}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \[Pi]\)]\) \
/ Hz (log scale)\>\"", ",", 
     "\"\<strain sensitivity (NSR), \!\(\*SuperscriptBox[SubscriptBox[\(S\), \
\(h\)], \(1/2\)]\)\\n/ \!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) (log \
scale)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.835045649418078*^9, 3.835045971653326*^9}, {
  3.835046076383677*^9, 3.835046076831917*^9}, {3.8350462580617037`*^9, 
  3.8350464223988743`*^9}, {3.8350494312121487`*^9, 3.8350494411018753`*^9}, {
  3.8350526972158833`*^9, 3.8350527198937187`*^9}, {3.835052787275949*^9, 
  3.835052795389646*^9}, {3.835052830197174*^9, 3.835052963601975*^9}, {
  3.835053029536222*^9, 3.8350530344832172`*^9}, {3.835053084937231*^9, 
  3.8350531345219193`*^9}, {3.8350533831923037`*^9, 3.835053449363131*^9}, {
  3.835148895562232*^9, 3.835148907294775*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"c56bf380-6221-4a99-8e63-f827f05573af"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.83530196770126*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"a9921ede-03d6-4c8c-9d28-ab7fe41ed9a7"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6], 
            Dashing[{Small, Small}]], 
           LineBox[CompressedData["
1:eJwd13k81N33AHD7OsPstoSxJG12suQkkVFRITuFsiRF+iIpPNZkXxMhFSpl
j8JE2clSyl6K9LSQpNSTfvf+/prX+3Xndecz555zPufKHfU/6MnFwcFxgJOD
A3+2bi3qr/Tlgu2bDuq+L7BgkwSUkgVOcUHmVg01bJc35ZauZ7hgfRBBBXs1
vWaAcJ4LRMpvSWGrrnYMHU/igpdPL6zNIee3fRmRruQCQb17rdjBdgbT8Stc
4NzZa4Ldrvb42utfXJCmfsMAmyZs6qbzlwvS2Wc0se81Wb55x88NgXKr8thz
TPe3RhLcUDaXyYVt/Tn+/Xd9bhCYYDTPIm+LfLlwJIIbitYvbMGeOJe0nhHD
DV84n8ljJwTt3tedwA35P4olsOe8qsvVM7hh5o0SL/ZVy2RP7lvcUK+QP/4O
WUDabLyklxvuPdaOwX5dX9f+XowHDB7VDr5FTqr0+563jgdafX4/xda/raBg
JccDD/ZoNGJnFaRFPFDhgecHQoqx90afNIg35IHaXqcA7AcHlapU3Hkg6EmA
KHbq58x8vwoeqMk9smMGmefjg7+DVTwgr1Cthn12fvyIdj0PPHq0ooDt9FZO
6W8LDxDHDwljK43erUgZ5AEuKY+Xb5AfPXnaUr3MAxFz/Sew5/O+v1nV4wUb
bqfE18iOueImLka80HRw4Dx2f5b+zdZdvPDjuqY/dnVqhM+lvbwQw9t3ADs8
lvhtnQsvOD3XY2DTAhXR5rwwNPYrbxrZiGWjFNPBCyG6CVemkDlslEKf9/DC
xk3bErDZrj/6mAO8YHC+NQTbOCg3qOUVLyR9q7bDNi2cfPLzAy+4k9h07L0r
nu6+BD4Y5jqROIlsV3y20OoAH7A2x/hOIEvcNVsusOGD7rsDdthj9eJ7Ptvz
AYOP3xTbsa9xIf4oH2x+py2L7fJzbUdbIB/MLhYOjyN77I+d1Mrig33DCdrY
p39lS0qN80HPN9qnUeQ0xbyJ9mk+SBGcfI5dZVVQEPCOD0R/xzdhL98sYXZ/
5gPrpdQk7LOHKlVCOPghqdJ2G3bonW69l4r8QF7O8n2F/I/LH4f0U/zgXsLX
P4JcEs8hbRTED2HzG6uxn9ZwT/8bwg9eHVtysPmEhdyNo/hhrXXkCHZ8PcP3
ayY/lJaUfXuB84+kes7yIT+EyqiTsXNaj+YJ8wlAnmaT+jA+r6+DKceFBED3
chMd20N2Z0ybiACEmRX8HML1Ei5z+pyYAGw6zNGM3b59wvSjsgCoMHaZYX+/
b7PUbSEAp7aWHBpEPnhtj3lCqgCk3nhx8Bmybn/9jrlMAfDOvaqGvf6Pkqbx
FQHgtzUiYX9w4JX5VSwAXZfE+vqRLzJal71rBCAhWWQ3dsVl/ULzlwIQdOXb
lj5k4bCtPwSkBWGxPGimG9mq55lDq5wglB3TbMDOkjzdfE5JEHiOtyZjMxuq
o79sE4QiSwsDbN0VXdpzY0EIOi6U3oX/76ldate8BMFGQEinE7nZw85Xq0YQ
Gk3dDz/F9VWz2v/lgSCk82VtwDbnzlMvbRIEsE758QT5edHkqmSHIIwkjWVh
f5w6GscxJghE5eahNmRxe78bPX8FgV8mxqgVOWBf5PQRCyH4h1PlYzM+v/JB
TV4rIRhv7K7BvsInl1BqLQRFAZvDsR+3tGguOAvBYoMaCZuk/ic+7JQQJF/V
V2tCvssI1szOFIKJncLHH+L6nfaL750WgoPZYdfqkcMMmqb83wmBZlyZGzYp
l6BJ/SAE52suy2HrHLw9Zb8kBDMnQ4vrkGOezGu85xEGcfmJwlpk+TL3KU4V
YdgmEJRcjesjwF5D54ww6Igkqt1Drh+iPUoIFgbj4tHPFXh/jQGTqTBhiF8/
VYbd+s3UNjpaGPgyheSwFYM0Q4azhKG/Z174LvKn/4m2+DcIg8to4HA5rofz
T1mla8LAYxq+4Sby8OTF4d9cBAjjExq7gbx5h4GTJT8BlNWNE7Gn1qr8VkQJ
kORet1CCvPNiYYqJHAEaTUqqruP+HHVu5PUuAjQF7FYuwvkRp3ZUIp4Acbk8
A3nIloIy9t2XCXDG5l9/bIEEgtW5NALElLuKYodcem84mUcAG9qPvVdwP03K
lyiqIAAhsLs1B1kuQ3BQ+TkBWjsv52Qi37n2xkhXhgiPJhrmk5A9ZZ9pf5An
gtWl+BDs9UWPtlxRJoLLnpeC2MnF2VL/qRHBMfVf5cs4P27s+9FiQoTx+9Nu
l/D53G6oMPMhAn9gWH0sjmddqvThWiLQ9KR/X0AG/Y9mDxqIIMIiRmE3t5gE
SDQTQe9iqBB2Y+eP9vF2InArd4uFI1eOOZ9ye0UEydatm8OQC9c2tnn/JsJ9
YpJ+MO4Hpq1eYTtFwI2euOiP/F+3VPrkbhH4U8N1HDvUMqhpB0sEtma+nTiJ
+5mdMoXzkAjEJb9p90P280l6GO0hApwpj9J9/z9eDiLJsSKgU+RMOo6sN7JU
XdQnAulmBSnOOP+9fj37NCgCxUy1FSfkoVXOTzojIlDtIOOI7SNNVuifEgG7
jcLyjrg+PLZl/FoQgaNE4m075NUl3zOHKKJw5D/pvEP4fSk6q8l7WBQ4955c
2YP7adEnKytHUWBWEk2xrTSWT+S5Ipt/zTDD9WLLfUPNSxR2r0aomuJ6LZCj
u4SIwlBEtcsu5P9tdvlelycKC503sgyRtc1f1nq9FgXGDpK/GvLR3yQgz4pC
wKPzGaq4395ldTd8EIVRwYUH25Bnyc1TQt9EQT/t1doWZJbfUNQIFwmEsm6F
q+Dn12q4E0wnwRZ5jX3yyIc7YtYe6ZFgU16ZNA35ROH1XWRDEni/YMlRkSND
2HGeRiTo9uySp+D+uOkXRcSEBGku9ookHM8Uvw2u+0hwQqdQkoBca2dtxelG
gpi1wl5uZOq/csW7o0nQUTBhspRvwSY8XeYIiCXBGzJd6ysyT2GHa0E8Ce6J
qygsIi/b+En/uEyCNvLs2mfkkccPckqzSODeEnbzA/KVXMtk4VISSLjINL1G
ZpqfDxvsJsGa64G/fciSClbjf3pJYP/mXmcvMvUvU0/lGQkOC7em9ODfq+38
ETlMAsLb3+u6kOdkaYGaEyQIFr+m+AS5/Ge5d/ZnEjg99FlpQFYrfWXrTCJD
8S2exBJkh/QnJx5QyPBhZbvwdeTI8PuRVDoZVmlVcUXIQ9ZxFV0SZDgwejS8
APkMpy6ftjwZWvqSrHOQ6x2ya0W0ySBz1aL8ErIh0ZbGdiSDP7vp0ynkYz93
qki5kGFk3ErVHznp7RY460YGD6+3p/2Qpxp4T2z2JINe/58v3sgXj9W25Zwk
w15G58BR5LYWWuDpCDJ8H7ujao1sHjA8yLxFBqtO3gNayOIeWa8Dysiw9sXV
XgN53sZ+ofU2GWjLEa5qyDHbpwnu98kgOUb13IL8hOOj2fUGMtzcq2KjiAzJ
XM3yvWTQVvzWTkPWvqNWrvCVDNkZK1Nfr6J8KFh+cOYb2p/hnreA/CK5vuPJ
dzLkRZvYfEY+E2g46/GLDFtpjo/nkSv1zGVvcFPAfigudBp5c5dbliKDAlGO
J072IsvPJUcq6VOAP/u9WQneb1Tg9n5DCjhdcxsrQo7tixg+a0QBl/sHfK4h
f6wJVOjYRQFoSY28glwddbj9+F4KhA3szEhB3iUnI1TmTIGLS1J6YcjuThWp
my5S4PZ1ofMHkOlWGxoPRVLgU6x3w37kjl2FM+f+ocDAyX+XLJA3bUrT6I2j
QOmEqbMp8rfVoBcnUimQNighqo8clW0oUVFMgXuuV9/JI18f6i1UfUoBvt2b
jL/lof4w4nIxtoMCRZufvVpAPja26DrVRYFY0WLfT8gqMzSZxH4KcEY+iZ5F
rvrqlP/+JQU2OMVfeoncSvqcW/AvBaQVT402Ir/eT0wnkKgQHNjjFo7XD14L
cKdQYeEJMygUucRW7WAjjQoJtjLRZ5G9XGzIXhJUiP76Pfsk8qJffnIbkwpz
63PiXJD/Jm5JDNWiwm7dvFRD5PU9+6LnHajgokWR+3nFgj0zkBku5kyF2cSB
z9+Qb41M/s/UlQrq5wzrFpBVZ/x8StypIB1G0XuPbLx62dLtBBXcFjWII8jH
NvRLvDpPBZpP4WQVckXU/oqOQirMj3UIeCMHxGfdWimmgpSn0C4PZJ3kqULF
G1Rw/Ogf7IrMvnIyPaqMChcTU5/bIA9VJgUbVVGh7+HdA8bIK9P9xvVtVCD3
qztKIhsZWL68OUeF0zyr8e25FmzNg/djeT5QYfS61W02srIXWffoRyoYgmF7
IzIpYzhHepEKpMaH8xXIMx8PO2SsUkE5N2c6Czkmz20ygkADDxfxZE/k3l+n
3zqp0wDOH2r/k4OejzSc3qhJgxzdIOIP5FolTRNxHRqseFnvW0QuOLhSMqxP
g+TxrfUzyKfKQ4+xdtPgSEeiegcy1SHqg44dDS6lFD1OQnZoyFighNOgPauN
KI688qI3x/MiDazN3CJJyKlLPMYPImlA6JFYEEDu3BSU4RxLg/8I7fdXs1F9
FthsL02hgUat1vMxZHIUI8rwOg2e1n7LyEPu3JvD8Oqkgd4Hzi4Gsof3QEtj
Nw0iT9aoiyD/jRbwJvbR4Co7JZ0X79cS/LBqkAazqrf0lrNQfqnZu/0Zo8FN
AT/pwSw8T0uWp32mAeW149Z4ZJ3XeYZNFDp8inthspRpwa5bi+eYp9Hh0NTX
TR+QNaWD2yhidJjzDRV6jazqYG3uJUWHr801d/uQ0axjQ1WgQ+8FYmIpsnjn
+RPeWnSQpBgVOyH/vOeaR7ejg33pRe7mDDQf9O9zAQc63Iq71l2NvPxJX87X
iQ4kW/O4MuTFjeK32G50kO+XfZ+BPH99oMrXmw7Z2jR1X+TR7J3dj0PR9z3u
rNCRGy/Ir/rl0yFERZLfIx3VT4VKYMc1Oigw3+QeRmZMqn2WLaaD8HCgrAVy
gB68Gb5Jh+1/XgioI6t8d+rafp8O59Zf3P03zYKd65OVy9tGh7f0n57ZyME2
gnr583ToM7f/25SK4rVpIbRXgwFxc2EnZpLR+TjeEVnTYgDDPK9yGNku0bt4
my4DXpz7+uEJcujnt11pBgzoGFDQvIX86N4rcfvdDPinsm2LLzJottbN2jKA
M7G9YjHJgr3HMHNpLYQBd/oZ975eRvllqe+jxmYAcThmtusSul/GPFs53MoA
fYPztAfIXU3uUeFPGPDL0FDrJrLu5sSrPZ0M+Fvyn0UkMkNwst9zkAHv22/3
bUcebg3XuDLDgAPhPlI3E9B9Wbv1Py5eMYi6ylERGI/qUdo8+bm5GBRqr2x4
E2PBvumxMrRxrxjMX+p/2IUscuc648J+MbBImjGoQp7UW8vfeEgMYjfk80Uh
n7OrvhPuJAbW6ufq5ZHr06W7lf3Revp87JFodH8UWuI5nyEGq6yyu/1RFmyZ
H1dCFafFIKI0/ZzfRQv2DXO/4TAfcYjYk3V5Zwi6H5RGLUVwSsDA5lGmyikL
9vH7jmZPMyVgxwUjnXeeaF5XqxEUlZUEwvKlrQqOaB5otkrjq5OElCN/VSz2
W7Ab2vzieIylICa0a5C104LNHbi3BnqkQNcix/WBBor3Vv+bKm7rgDP5rrem
ggVb4yiFT+rjOtgSmzC+jo7yuXh1U0OENHyY5FLS4kHvC4cjLc4i68FjrUCN
e5nFXnyUEAc562GwBTqfv2Wh/PgpNrhFBq5ua7fmHmKxFShzNK8GGSDsHbZS
fcxix3ARTtgqy0LLzFuHngoWe3wgej47QBb4gpXoV6+y2FHjLXkT9bKwzTKv
NPkSi638SUr9J5ccECtKDDhDWGzZ7bp/GeZyMPX6vm3RcRZ71UHr/fPLcvA7
ad2dZFsW+1mkdZX3KznYsFtxlcuExf45p1HDuZ4JgkvHDSrUWeyXHEZndGWY
0JXi+MwNuU6Spekvy4RW57UjVOTA/W41E0wmdPIdiglWY7G/1CbW1G9A65K7
eoxVWezZf2Zr/NSYcIkz1fTlFhZ7iJldO2rCBP7+o7wcG1nsSoPiIJIpE06J
LCZVKbPYKbZ3tczMmMDZpyPuibwvoa22xpwJvyk/N3ZvYLE7vy7UJu9ngvCg
CStDicVuZu+p223HBAlz23BlBRY7f+zQ2TB7Jrzsr+Qel2exw5ZdtKsdmNA3
3Rt3GXm7clCdrDMTMkeN05aYLHZNclHd7yNMqE3XLn4kx2Knl905q+7OhPmJ
LEV/5IC2em1vDyY40xpK5ZBVf/TVjRxjwotgk4oYWRZblDx6lujFBEe9CtXt
yF9U3mmbeDNBhTpe9VGGxe41WVgJ9WGieatHswD5tsuvukpfJoxtu1Bnhfx/
a57P8w==
            "]]}, Annotation[#, "Charting`Private`Tag$3926#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
5MOB/d3+2cdqufz/AQ9PQ/M=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$3926#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
9rUxPAAZbif5eIlSIfiGj8FpZFOlam5BKSqcs/FJO4scUTQ45UanwqYXG44F
I9cKLz9ukKHCbpv3OiHIEr90I44rUCHLiqf7HLK5t6Nj2yYqbM/cdTEUOXok
YofEVipMetIMzyPPNrf/eqZMBTn/g9fDkKXUpl/JqlGhzPw8Ixz54C2+unMa
VPgg8mkK+8GFA/5bdKgwek2AEIk8/9f/QPQOKnSOX87GlvbN2DYMVAj98ZUW
hRx36M1MogEVJEIf8kQjP2z72/HOiAr3ZBYDsT9rShXrGFNBgDftDTb9jl5M
+l4qzBLPacbgfBV3dZndTwW77ssXsROSY/X0D6B44plD2I/WlEjlHaTCyR1j
krHIX/y7Vr5ZUMEn76UttsyH+bcmVlRwYYtPwbayIv5XZEOF8qjBR9gXOlWy
f9ui+Zy4No7doGN5+qADFaIudv3BXig7Y3HHiQqXbmkIxiHLSeeqsLlQ4cZq
yzps67RHxCNuVJgmmVOwEznGPld6UOEubzMBm3matZvnGBWqmN9W8HiLn2RK
j/pQIaG6bRJ7g61RwoMTVBgmUxuxbbo9PUh+VGiu77qEnQSJhl6nqMAt+8gK
u7myTKY5kAqJ4R0i2EsyvazUIJQfhT2deD7kM7+NnQymQg3r3VPYttwijR3n
UH627CBjXwrWzJcOo4JrmdNtPN8tczbBQREo37YtqGB/dzhn3RtFhVLrriq8
fhv7rmgoxFIhcvKpPLa9frNweDwVluS6UvF6p9S++/bqArpeqvhrBK63HIXy
uEtUaDG3u4jzZTP/3qSxVCrE3JnuwPnlcP64t+ZllH/L//3C+dfmXCX/MZsK
nmlJmjg/f714wQl5VOj+AQY4f7fs+fkus4AKPRHZBji/0zfrXjMqooLXrxwp
XA9PChzOX7lBhVfjX3+dQf5NiLD7cYsK5HfGT3D9HF1qo9wqpUJTh402ri+l
BrNUzloqxOlDKK7PPcoKCer30f0tNq89juO7uSbC7QEVAlhyInF9JyRVnmxr
QM8T6mbpifuNPflATDvK333FDrif/Oyb3VPbQYWwgtgwR2QBo8fw4SmKv/J+
mj2y1rZARcPnVGCbOHkJ96u01ZeCnK9R/BavRw4gl/iXr1V/Q4VjohMXTXG+
TMWtug5TYUjix5Z9uD57tn9+PE6Fh9l5gPuj/tXc7uhpKhS7St7RxflCPtVW
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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$3926#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
B2Y2sDE=
            "]]}, Annotation[#, "Charting`Private`Tag$3926#4"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
II++5f63pGA3B5xrmZ1hDTa8/wGkX1db
            "]]}, 
          Annotation[#, "Charting`Private`Tag$3926#5"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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

            "]]}, 
          Annotation[#, "Charting`Private`Tag$3926#6"]& ]}}, {}, {}}, {Ticks -> {
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
       FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
       Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, AxesOrigin -> 
       NCache[{
          Log[10], -57.0800259820388}, {
         2.302585092994046, -57.0800259820388}], FrameTicks -> {{Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "ClippingRange" -> {{{2.3025852339686432`, 
          9.210340231001586}, {-57.0800259820388, -51.55095439350851}}, {{
          2.3025852339686432`, 
          9.210340231001586}, {-57.0800259820388, -51.55095439350851}}}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {2.302585092994046, -57.0800259820388}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 400, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
       FormBox["\"lossy stable nondegenerate 3-mode amplification (sWLC)\\n\
\[Kappa]=10\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\), \
\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\) is SRM coupling rate\\nno \
radiation pressure effects\\nparameters of LIGO Voyager\\nconventional \
detector is lossless\"", TraditionalForm], PlotRange -> NCache[{{
           Log[10], 
           Log[10000]}, {-57.0800259820388, -51.55095439350851}}, {{
         2.302585092994046, 
         9.210340371976184}, {-57.0800259820388, -51.55095439350851}}], 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         RowBox[{"ASDScon", "(", 
           RowBox[{"2", " ", "\[Pi]", " ", "f"}], ")"}], 
         RowBox[{"ASDShLossy", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
               RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.5`"}]}], ")"}], 
         RowBox[{"ASDShLossy", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
               RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.1`"}]}], ")"}], 
         RowBox[{"ASDShLossy", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
               RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.03`"}]}], ")"}], 
         RowBox[{"ASDShLossy", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
               RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.005`"}]}], ")"}], 
         RowBox[{"ASDShLossy", "(", 
           RowBox[{
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
               RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0"}]}], ")"}]}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 TagBox[#, HoldForm], ",", 
                 TagBox[#2, HoldForm], ",", 
                 TagBox[#3, HoldForm], ",", 
                 TagBox[#4, HoldForm], ",", 
                 TagBox[#5, HoldForm], ",", 
                 TagBox[#6, HoldForm]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", "10", "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"",
   "\"strain sensitivity (NSR), \\!\\(\\*SuperscriptBox[SubscriptBox[\\(S\\), \
\\(h\\)], \\(1/2\\)]\\)\\n/ \\!\\(\\*SuperscriptBox[\\(Hz\\), \
\\(\\(-1\\)/2\\)]\\) (log scale)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
       Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, BaseStyle -> Directive[10], DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.835301968598297*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"703336e5-9ba1-4189-85a8-184e8cc4bde1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "plotting", " ", "signal", " ", "and", " ", "noise", " ", "transfer", 
      " ", "functions", " ", "separetely", "\[IndentingNewLine]", 
      SubscriptBox["S", "h"]}], "=", 
     FractionBox[
      RowBox[{"|", "R", 
       SuperscriptBox["|", "2"], 
       RowBox[{
        RowBox[{"+", "..."}], "+"}], "|", "Rc", 
       SuperscriptBox["|", "2"]}], 
      RowBox[{"|", "T", 
       SuperscriptBox["|", "2"]}]]}], ",", " ", 
    RowBox[{
     RowBox[{"plot", " ", 
      SuperscriptBox[
       SubscriptBox["S", "h"], 
       RowBox[{"1", "/", "2"}]]}], "=", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"|", "R", 
          SuperscriptBox["|", "2"], 
          RowBox[{
           RowBox[{"+", "..."}], "+"}], "|", "Rc", 
          SuperscriptBox["|", "2"]}], ")"}], 
        RowBox[{"1", "/", "2"}]], 
       RowBox[{"|", "T", "|"}]], ".", " ", "Here"}]}], ",", " ", 
    RowBox[{"plot", " ", "|", "T", "|", " ", 
     RowBox[{"and", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"|", "R", 
         SuperscriptBox["|", "2"], 
         RowBox[{
          RowBox[{"+", "..."}], "+"}], "|", "Rc", 
         SuperscriptBox["|", "2"]}], ")"}], 
       RowBox[{"1", "/", "2"}]]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "\[Gamma]a", ",", "\[Gamma]b", ",", "\[Gamma]c", ",", "\[Gamma]btot"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TLossy", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "\[Chi]_", ",", "lossRatio_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Abs", "[", 
      FractionBox[
       FractionBox[
        RowBox[{
         RowBox[{"-", "2"}], "\[Alpha]", " ", "\[Kappa]", " ", 
         SuperscriptBox["\[Gamma]R", 
          RowBox[{"1", "/", "2"}]]}], 
        RowBox[{"\[Gamma]a", "-", 
         RowBox[{"I", " ", "\[CapitalOmega]"}]}]], 
       RowBox[{"\[Gamma]btot", "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
        FractionBox[
         SuperscriptBox["\[Kappa]", "2"], 
         RowBox[{"\[Gamma]a", "-", 
          RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
        FractionBox[
         SuperscriptBox["\[Chi]", "2"], 
         RowBox[{"\[Gamma]c", "-", 
          RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]a", "\[Rule]", 
        FractionBox[
         RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
         RowBox[{"1", "-", "lossRatio"}]]}], ",", 
       RowBox[{"\[Gamma]b", "\[Rule]", 
        FractionBox[
         RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
         RowBox[{"1", "-", "lossRatio"}]]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        FractionBox[
         RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
         RowBox[{"1", "-", "lossRatio"}]]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]R", "+", 
         FractionBox[
          RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
          RowBox[{"1", "-", "lossRatio"}]]}]}]}], "}"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RLossy", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "\[Chi]_", ",", "lossRatio_"}], "]"}], ":=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"\[Gamma]btot", "-", 
            RowBox[{"2", "\[Gamma]R"}], "-", 
            RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
            FractionBox[
             SuperscriptBox["\[Kappa]", "2"], 
             RowBox[{"\[Gamma]a", "-", 
              RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
            FractionBox[
             SuperscriptBox["\[Chi]", "2"], 
             RowBox[{"\[Gamma]c", "-", 
              RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"\[Gamma]R", " ", "\[Gamma]a"}], ")"}], 
              RowBox[{"1", "/", "2"}]], "\[Kappa]"}], 
            RowBox[{"\[Gamma]a", "-", 
             RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"-", "2"}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Gamma]R", " ", "\[Gamma]b"}], ")"}], 
             RowBox[{"1", "/", "2"}]]}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           FractionBox[
            RowBox[{"2", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"\[Gamma]R", " ", "\[Gamma]c"}], ")"}], 
              RowBox[{"1", "/", "2"}]], "\[Chi]"}], 
            RowBox[{"\[Gamma]c", "-", 
             RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "]"}], "2"]}], 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"\[Gamma]btot", "-", 
           RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
           FractionBox[
            SuperscriptBox["\[Kappa]", "2"], 
            RowBox[{"\[Gamma]a", "-", 
             RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
           FractionBox[
            SuperscriptBox["\[Chi]", "2"], 
            RowBox[{"\[Gamma]c", "-", 
             RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}], "]"}], "2"]], ")"}], 
      
      RowBox[{"1", "/", "2"}]], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]a", "\[Rule]", 
        FractionBox[
         RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
         RowBox[{"1", "-", "lossRatio"}]]}], ",", 
       RowBox[{"\[Gamma]b", "\[Rule]", 
        FractionBox[
         RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
         RowBox[{"1", "-", "lossRatio"}]]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        FractionBox[
         RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
         RowBox[{"1", "-", "lossRatio"}]]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]R", "+", 
         FractionBox[
          RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
          RowBox[{"1", "-", "lossRatio"}]]}]}]}], "}"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tcon", "[", "\[CapitalOmega]_", "]"}], ":=", 
    RowBox[{"Abs", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "2"}], "I", " ", "\[Alpha]", " ", 
       SuperscriptBox["\[Gamma]R", 
        RowBox[{"1", "/", "2"}]]}], 
      RowBox[{"\[CapitalOmega]", "+", 
       RowBox[{"I", " ", "\[Gamma]R"}]}]], " ", "]"}]}], 
   RowBox[{"(*", "given", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rcon", "[", "\[CapitalOmega]_", "]"}], ":=", 
    RowBox[{"Abs", "[", 
     FractionBox[
      RowBox[{"\[CapitalOmega]", "-", 
       RowBox[{"I", " ", "\[Gamma]R"}]}], 
      RowBox[{"\[CapitalOmega]", "+", 
       RowBox[{"I", " ", "\[Gamma]R"}]}]], " ", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "Plotting", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"LogLinearPlot", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{"Rcon", "[", 
              RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{"RLossy", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                RowBox[{"0.986", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.5"}]}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{"RLossy", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                RowBox[{"0.986", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.1"}]}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{"RLossy", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                RowBox[{"0.986", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.03"}]}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{"RLossy", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                RowBox[{"0.986", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.005"}]}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{"RLossy", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                RowBox[{"0.986", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0"}]}], "]"}], "]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "10", ",", 
           SuperscriptBox["10", "4"]}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{"\"\<Expressions\>\"", ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", 
          "\"\<lossy optical sWLC model\\n\[Kappa]=10\!\(\*SubscriptBox[\(\
\[Gamma]\), \(R\)]\), \!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\) is SRM \
coupling rate\\nno radiation pressure effects\\nparameters of LIGO \
Voyager\\nconventional detector is lossless\>\""}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", ",", ",", ",", ","}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"50", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"TicksStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
              RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", 
              SuperscriptBox["10", "4"]}], "}"}], ",", "All"}], "}"}]}]}], 
        "]"}], ",", 
       "\"\<shot noise transfer function,\\n|R| / dB (20log10)\>\"", ",", 
       "Left", ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"LogLogPlot", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Tcon", "[", 
            RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"TLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.5"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"TLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.1"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"TLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.03"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"TLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.005"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"TLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "10", ",", 
           SuperscriptBox["10", "4"]}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{"\"\<Expressions\>\"", ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", ",", ",", ",", ","}], "}"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"50", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "5"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"TicksStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
              RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", 
              SuperscriptBox["10", "4"]}], "}"}], ",", "All"}], "}"}]}]}], 
        "]"}], ",", 
       "\"\<signal transfer function,\\n|T| / [?] (log scale)\>\"", ",", 
       "Left", ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3", "=", 
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"LogLogPlot", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ASDScon", "[", 
            RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ASDShLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.5"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ASDShLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.1"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ASDShLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.03"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ASDShLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.005"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ASDShLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["10", "3"], "<", "#", "<", 
                RowBox[{"4", " ", 
                 SuperscriptBox["10", "3"]}]}], ",", 
               RowBox[{"5", " ", 
                SuperscriptBox["10", 
                 RowBox[{"-", "25"}]]}], ",", "Null"}], "]"}], "&"}], "[", 
            "f", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "10", ",", 
           SuperscriptBox["10", "4"]}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"50", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10", ",", "5"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<ASDScon[2\[Pi] f]\>\"", ",", 
              "\"\<ASDShLossy[2\[Pi] \
f,\[Chi]=0.986\[Kappa],lossRatio=0.5]\>\"", ",", 
              "\"\<ASDShLossy[2\[Pi] \
f,\[Chi]=0.986\[Kappa],lossRatio=0.1]\>\"", ",", 
              "\"\<ASDShLossy[2\[Pi] f,\[Chi]=0.986\[Kappa],lossRatio=0.03]\>\
\"", ",", "\"\<ASDShLossy[2\[Pi] f,\[Chi]=0.986\[Kappa],lossRatio=0.005]\>\"",
               ",", "\"\<ASDShLossy[2\[Pi] \
f,\[Chi]=0.986\[Kappa],lossRatio=0]\>\"", ",", " ", 
              "\"\<5\[Cross]\!\(\*SuperscriptBox[\(10\), \
\(-25\)]\)\!\(\*SuperscriptBox[\(Hz\), \(-0.5\)]\) target for 1\[Dash]4 kHz\>\
\""}], "}"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", ",", ",", ",", ",", ",", 
            RowBox[{"Directive", "[", 
             RowBox[{"DotDashed", ",", "Red"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", 
              SuperscriptBox["10", "4"]}], "}"}], ",", "All"}], "}"}]}], ",", 
         
         RowBox[{"Filling", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"7", "\[Rule]", "Bottom"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ",", 
         "\"\<strain sensitivity (NSR)\\n/ Hz^-0.5 (log scale)\>\""}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", 
     RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.835120879118744*^9, 3.835121247667739*^9}, {
   3.835121329705986*^9, 3.8351214256963387`*^9}, {3.83512145939685*^9, 
   3.8351214754757032`*^9}, {3.8351247999671583`*^9, 3.83512491743371*^9}, {
   3.835125002196806*^9, 3.835125125037553*^9}, {3.835125238930457*^9, 
   3.8351253139856567`*^9}, {3.835125392848321*^9, 3.835125402300335*^9}, {
   3.835125685181933*^9, 3.835125820398439*^9}, {3.8351260276810207`*^9, 
   3.835126047887781*^9}, 3.8351274463337107`*^9, 3.8351274774748287`*^9, {
   3.835128640721171*^9, 3.835128647862671*^9}, {3.8351397885449877`*^9, 
   3.835139790045581*^9}, {3.835143343959598*^9, 3.835143409528427*^9}, {
   3.83514414323567*^9, 3.83514414442521*^9}, {3.835144181007579*^9, 
   3.8351443448402452`*^9}, {3.835144417144515*^9, 3.835144445166535*^9}, {
   3.8351444787173*^9, 3.8351445256722593`*^9}, {3.835144591391017*^9, 
   3.835144605764311*^9}, {3.835144762448125*^9, 3.835144810753087*^9}, {
   3.835145190050756*^9, 3.83514530070345*^9}, 3.835145564987812*^9, {
   3.835145657435965*^9, 3.835145669228572*^9}, {3.835145860530944*^9, 
   3.835145861489225*^9}, {3.8351459055152493`*^9, 3.835145965487389*^9}, 
   3.835146013938201*^9, {3.835146143993353*^9, 3.835146181872806*^9}, {
   3.8351462588703337`*^9, 3.835146351748781*^9}, 3.83514641132631*^9, {
   3.835146446318653*^9, 3.835146449046102*^9}, {3.8351487636600122`*^9, 
   3.835148768069024*^9}, {3.835148929734826*^9, 3.835148945195519*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"a3269429-4f32-448a-a72d-fafb6b081f86"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{TemplateBox[{
         GraphicsBox[{{{{}, {}, 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6], 
                Dashing[{Small, Small}]], 
               LineBox[CompressedData["
1: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
TwasOv6r3HaeJffbK/8h/z/kbL4y
                "]], 
               LineBox[CompressedData["
1:eJxN13c4lf//B3BJkpCVyCay996VJFS2jGyyJRz6lEgZaSizZGRHVvb6ICEk
pCgZRSUkKyQj3+9vXJ6nP+p6XM/n63W/z33uc4jb3tvQiZSEhOTPf//6n3/r
Dhx/snOUWUPwjMJPEZs39fkCbw63UbJsWyyP4xwlI3zBtTWggBkuFfSIOc0O
v73ZmJbGyaIh9L8eq1+aoi+c52bRIPn/P/t1nGuPHILl8mtexvDDZpTU/V8E
4EA323EZYex/2Fk2FyaK/bVCuzcHxNFXe2osxaoIaxXMJWfqwuepjuUvncK+
SI+EquP6yDtFVPu+G8OnC6N2i1jDpkV8F8svEO0rsTzRGg+70Tt5zSZiv5ef
V/yBJOQEhWtfXFPhf5KiKGMfw0EbsZL1GXCIdcrZb1nwjaacYJpcovPzlOTI
5yG/daPmte1T+O5E89LNQvRjtLtYy4qRJ+T3Hx1+hjyJ6pPrrnI41Wvynlgl
+um9C1Vm1cizpNZHQ2rhJ3Fk5Pn16BesUIu+bUBecvaA8UYTXF7LdZnvBfpV
bEIZp1vh2qvSHQEv0W/4rDL/uAN581GtA52v4NasM2q/XqPfTm7uxNYLd7nY
3z7eh/7QfITA9Ed41PD+GYYReLw8iaDyCZ5gykpxGsO+6cDClrtf4NmPlT+q
vqG/oNJEP/Yd+VJqhyLlNLxK8tZWegb9DfvhCKtZ5Fst34rC5mHSw3P9RYvo
k99c3Xi/hJzm1F5doT/wfjqOh1c2YWbfw03ZWzBbv8T37h0Htz9PXPJKNKs7
D27vP/TwmCw3+cHtvsC6npUOBXLhc6bXfSlhsUab/GQqWIrb9U0rDSx3/eLq
LC32KX67zMnMgFwj766n2wFYc++DuFgW9LU90+vqWWG9nvzxb+zwGcnyPfu4
8HpCMwe+O/NgX+X+P60Nh9CfjmDNYjqMnGNNNdRLELmhh61tmzDysNFQNQ4x
uFo/m40ggevNNL9cey2FeS7Z6Q98sugb5VJVBcnD4Szi8f2KcO0tA19RFczP
bvoahKkh576QID6iARuPV1PLHoMjjYd+3D4O17dtdnw9Ac8pcD1R0YFN2Z0c
Z04Tvd8Ts8O6Z+GzZ+nqMi3w+m51Sj9ct8L5GlRMA4xs0F8sCjR5agfzcz+S
3ukIm8f+S2fpDN/e9Xmu1AVuCiDtpnTHfqs9TI0dQfBqkmBJ5D1YhFrv7ucY
2CbYy0MhHo5ZuKdzLxFucygTmHyI663195NrJCMX1V79mpiKPE5ENf1EJtye
ahOclo3+Om3oud+5yO2X21hyC2DJBv0Y8kpYW0owSq4a89Y5O0Kda5FH3S31
aWuAH5Pecl1pInp+CQ52/C/grmllc9NWeNya0SD8JdH96pvRruxATnOiVWPi
FdH7XZeiwNSNvpI4QUKrF7l+5mkBQh9y5wOHuXLeIb9ya+vAwAAcu/V+H/kg
npd835LdckOYb/oeueU0gv6Apd3v+E/IZ3oU51rHkJNq0n9f/gIzV0+P8k0Q
fT88ftQdNg1bMPq1Vcxg34VIvYZvs8iTL2wWHv8FL2vY3Nm1AVNVyIfJ/sU8
jyBtkBMJ63Z+mu65RysZnDPGoxdGDZuFTlDu4oS9VhpIZblZt/fdcEtcc+SF
k0a9F+P40C8x1J5uOQxT8OZ33JCAORJDn5dLwTJ7LWu+ysC2v/bmaSrChPNf
H/spw7eH6h9kqcIZZ+LvvVOHa154RpIdxfkIauyXBDWJrlfT5XpaC16QvmLh
q41+UZGw7gMd5O6CQ8r/6sECWVEi46fR/8ahxL7bAM54OEUtYoS+DePDv/om
yNmitef8zZAn3sjtbbSEjbdMn389hz79P+Sle2zhnqWKDDF7+La3U6yRI3xy
mvFGoDP2kTu1+KW4wC8++To1u8EhFrym3z0wr9rfp0XljXztTKi8pA/y6k5J
AVNf5P7Hx5gv+8NSTff2PA5Af15JY63lElxYMTc9dRl9N4m0IZqrsDXrudSM
cJg1gSr6ZSTmP9DWB89EIY+/5X6B7g5sSM5qJxeN/r5rnQaW95F3rV86GhIL
RxEEpbPj4RMLH3g7E2GJl8Z5C0/gn0fIkpiewvn1ZVHKhbiei7zDZdti5Hyl
9B5hz+CDKb1iLLXw+wMhnGr1cFyMOK1DA2xA/Ykksgn7aSLvLhQ0w69I1cbf
tKAfGfSzb6UN1lpNfsHaAe/01SvXeEX0/mwyWsW9Rj4aObJzsod1+/vvFUPO
U+U+5NWpXkbR7+BsQfn18QE4pnwrQ24Q+4PV23WihpB7dN5bHBmBzU3MkyQ/
E533M/fRsHHMS7tPT334CnOtlN4X+Y4+9bXLiiFTRM/rXs2xtz/Q/55AdfPw
LPJ33P0Sl+eRPy9I+dC9SPT5l3cO4VlG/1GzmADhN/LIU797Ov4QPf8fGgPY
N5DbO0Ry+vxFrnqJxZt5J9u2hcjGmTx2seH32ej8hsbdyBezlGnOU8E5vecK
K/bDsZb8JnuY4ZCJ2Q2rg9jn6VOVVcIGW2wE65Fxon8iQnvJjBuWoadLfsoL
c6cMHtviwzyNQMYPQwG27edhvdQtNkcI/UlVaeU1EfT729fHT4nDzUYtUemS
6BeP3pZaloaTXU0+asuhH7XEHpqsgDwgeEJwXgm5I2Xxm2OqyA3jAy4lqiNX
59Lg/nEEuchTig41TZhF7s2FGC2Y/PlD5glt+JeufZOiLvZ9HhByuXMKfm33
a9/YGfRrZ+qqZAzh3IAbNpHG6MeRnto9bApfu7O/WNwcfS/mUdPrlri/lpk5
fwfOIdcW884RsoWZ636eN7Unuv8nPARDHeHqd9PThc5whJ1rwaALrm86+91z
lzty/svO4pKeyFd2f5u38kbeFudQGukDH1s3a5gIhdXaNQYysmEak8bE7lzs
GxlTNV/Lgwu86g/yF6B/ZV1p2KAI1ousSQkqwf1g269gk1eKfCa9kqu/HK4T
kx3/73+68fzUlWWK1CC30JZyOltH9PnrL+G/8S/6a3bik8WNcOdsYd7Qc/Qf
XhZx390Cu1A8FZFuQ18hXnDWuh05Bc+T4qhO+EMRv09lF/xEOVtqvJvo+W7n
XaJ+g31M41wBTv1w5Tr7Wv0gvCTGTOIxDkvb05Oz/oCltvKu+v8kcvKR3z1z
uJ6U4qC30CJRPnBh8sYSUe5LYfdpBbkk7eNBxT/IJQrlDePWiazT0zm7ib7E
d+djJ0nYty1+429dJin7dl+MO0HmLxmRG0QLz+5GX8yyla9sDyy6apVKTYW+
SPwSkwsNchGp29HNtER5Dy8FOwMs7FEXErAfFsqZ9hE5SORjodPhbNgn9JnF
YYyDKA96NqTMDQsePGmcwIu+QNXnrnk+IhsHHtcVIPLCvoZsISLfzZUjEcU+
AWH1Ygtx5IfbBw5XSML8Tl6P98kQmZScxU0O8/xpKfdbFGA+FVlKTmX0Dw12
hV5SRX6I4Lj+Vh3mmW4eUT0Jc/YFZ9BZwRzeB1g9rLGPg6o4ts2WKNcavXHZ
CWarVTn/zYvIZu8+qftgnnXJ/WySL3zw/s43S/5EFnt08kwgzOLSqUQWBDNn
/BGuuQYr33urP54FW18t9N/bDmuwr+9W64R56rWTLnThfGSWCSKZ3fDEny8N
/b1w+wNJA4q3mM+XD/6i1A/fHujy93wPe/sfpHg8iHlDRpekviFYpqxCZNco
zGS4s1H+M+ZX5/UN3MbZt7//Pkanfkn+in692Ix/zwT6qa8VKUin4BCPiCSZ
H7D93n6R8z9hzXyexodzRM/TyQsGXQvYv2fy3y9/f8Ez4XsJkivod/OZUziu
wiUtOUkJa3CMw5JIxwbm/UiPNq7/RW6aHm0gtoNjOz/4SYgQuwveCAqkaNsN
j7K1Ja3ugZvqGESFqeBMC7vGczQcGgL/d79UREjCdcJoOfD9mZ3fX0APq+v2
2L5jxHz7/K8f60zIDRKYA3hZOHD/lVVJdVnRdxizu3ORHZ4JD2dO4oT9RZ5m
PueG/77pEZvixfkiA5ZqaPmR07GzHFcQwPWTmlV7bYSQH3Kxt4wQgQupIyaK
xGC5sqc+AxJw49nejU0pWPvvUgSfLNyXycJwSh62PKmW6qeI63+dtRdMVkbu
FRdR/kIV/q1YoP5DHQ751NtJfxTu3LvCe8YINnp2sJhgAg+bqiulmsFz6ZH6
Py3hwBOFQ4zWMOnPN84qtvCtmJUFB3ucl1GBNeiWI5wyok5R5gzzX3eM/eiC
+WKBmxyk7rBCd2GeoCf6z337ZAy8keuw/G4M9IHfNbDqPvaFzzlqDLz0h+fr
oyI1HsB5F9s7E5JgewFy6p/JRPtir91/mA7XuAUmLebDF7kqh7ULYZGBXxxp
xTjvt1uSdsvP4NQj3pm65XjezH4XfEuvRE5bOH14tRrusBdwO10HhzI7F2T9
Cyt3Z86uNcJL18ckDJrhQkVO39wW2HnOqmKzDeflzE76bdSB/IPFB8X8Vzhf
DC3TFZJu9HXbjBpMe2GyK/dJCvvgBsmeozv7YYkUnZfFg/CUYeQe8mE4g6JN
12qU6Hlv2Hm39DPM6Hekl+ILzvdaMJje5hsc/qneuOI7+urxawl7p5Gv6igM
2s0gf0ZCYK2ehd0qy87RLKB/yGMhzfEX8hFu8fHaZTjhvcchulVY/06+8/k1
eM+xySf/bsDNq3w/GLaw/3KRg6jbDs5tyzimezfthH+yfHrGRM65PZ/Tw7bk
QQHbhFnIvaCEmZUfBLJQY/7NfH+t9z7O7fcvKodhs5UO+TErA3U2Rsxv0EVf
u8iEvOJl14t2ZtgriJKckxV9eeHVA29E4b7xH75b4kT9pE89olIwpeFbYSsZ
otez52VElBzMOBn/+5g6vJgl/b5SHy7i8E5I9oV1BuwXO/2xf+KO6ek/AcjZ
N1XJTa/At4eoCPvCYIFYkj7VCPiFzpKox03YmnTyZtIt7F+rGfrWfgdO8Ok5
8jsafSnBFyl8MXD358o/RnGw64N8k9AEvB9k+qnPSh4gf7w7hvpTEqzSGOZK
nQJ/IFxqVU7D9f3EPLnd0uF9E7ZBDzLRz08xHmzLhrVMtGWXc+FxKpX7vPmY
v9oi/tOgAHmF9IHsohJY/wfljpFSeCbjr9XeCsxHWixWK1YhP0Q/wehSg7wr
TF05jJQLn1dSKg9TAbhxatMnWJBre361dy7giRAsVT0W9EYYdk97e31NhGv7
539WeOtNXjHsG/WsitYTR/+ASV68vwSsr/LoUaokHMV7J/2lFOZfUAbnzktj
/8bChUIWWfTlBu3LjsrBrAShVxNKsPE5tjf7VLDvribNewVV5C+FSUbs1Li2
nwcShsXxKHVcT2nty2SZBvq+Y/2zw0fggvaXS7uOwRPFNWtimjBn4lOSs8fh
s1dTyK9pwTFO0VT5J3C9V3rX6N9q47xkMr7MGydhNVYnDj5dzAeQmh06rQeX
TGkLBZxCf7pXSeLxaZi3WkSu4wz6VmkcKov6cEI47VFWQ/R7PEm1NY1gCpOl
U57G8FGVCaMEE/gy7wfzRlPsK6fstJk0g2cX6pzozOHDg4XuShawbVOaj4Ml
9iXl3g+4bYX87d3rQRXnYCqC//VRa1jr3Pmbu20xH6xpHi1hh7xaWDfe3B5e
pFd9FOoAC6+JpT91hB3HuHLfOcGp7fSFm87w+2KyMn4XmDZxpfqMK66vc3Wy
IdANvu70sSXdHf16va7OTg94Rbqh95cn+uKsJQNs3shdSDOGj1+AM6Zix718
4KHesMnEizB5jeF6gS8skc5J0+wHh/vUSM8QiJ4f83CtHYFE+44YmTNdIton
xOUh/A/RPvqfVzUu47wWazX3Ta4gDxsPz3ILItrfaVQVfBX+WMrVGReM+V2P
fg7nhRDtv14713ANtnCPIH0XSrTfyHj/1HVYfIDnqFI8fH2o8dFwFSwwwyq1
Ssq9bS5FhS2mk/AT0Q8rgjrcuP88gbMqusjV9laP2J+CLUfk64sM4IRr8pe0
LGCqTrlf/u5wXMPAdKQHzFpGGH/kyb39+c/IZfpY5IVcKLnyzXNv+Nk90453
F2CFsJWm7z5w06WE6rWLOP8JL7kSaj+4234gl8sfNjUjpEkTMD+iy5SoFQA7
alTeNQ+EZ2RMwz0uwb6CK0HB/8Ch9HKe2Vdgyt0DjtVB8P11f6tXV3F95vn9
xqPByB9/rdBdCIEFBk2OkYWiX/x6WenAdeRyzfFSQjeQN1TKCqmG4X5qPe3n
1g9H/3WaP4tDBGwct5+OEAkPR1ZQ3LwJOwSZkCRHwdM+y7+LbuF6F53j557f
Rv7HQvb7uzvIH7y3U9q6CysY370jeA/99721n43uw4RT36WvxsBMnQwRT2Ix
X6Gl8bEvDvmS+sOQw4lwbH3rW4MHsJTiIv+Vh5jvq+D4JycJ9pHSfd37CH3a
4gCu9WS4RDjLly8VPvOkt+1MGjx7aJPln8fYdzdd0DMrHbkoh2lTdwbyrqRQ
hj+ZyD0OFDvzZsN744ZqTuXA+bQU1IG5mNe5I2Ob8QSe2mNX1pUHC+ysNecu
gJ036EkIRTD5JXWjx8XYn73sntNZAmtefPBn6Rn6X2db9DjLkN9wX0g7WY6c
d5L9l28FnrdmRx2t1Erk9mOEh+1V8A7rzJnFaqLn/WOPOnstrGG2EXOiDv70
VmDCpx7+WH07uKUV7gk1LnX9ANuSWNGHDMLzQQ4XEz7C19bd+gqGcF76Sxel
XgzjfBkrl2IGR9CX9ru2ODcKtyxEGpJ/Rt/Y+14p2xjR+Sy7Snum4K8ymmWy
67BfqS6D3ga8S8LI136T6Puz0OJt4F+YX9heOnoL16t64hqbTcKznWvz+/yq
2wF/yAw06iPl2e67coeUTe5EPktdX/aICr566wVDKTW8b88r33YaWILso/Qy
Ley79rvs9H6YLHCLwYkJjlsm97t8AObzpXl3nxmunN8v84QF59PyYo9rOAi/
/3Fo6R0r7OIqYvyDDV6dkC7fwcGz/f69J1H3U+Ak2n9QR8abi+g8MiZL2dxE
5z9tWz7Mw7P9+66hi7sfwyGi1xtKkNHhw/X2JV9bCuEnun8Vt8urDsOvexL9
ZgXggqkMGT4h2I29pjxGBD4p3+LXIQoLGPTIkIjD5O4fl+Qk4G83vpV7SuK8
LanzfllSyDOq12WGpOFrfeTLdLKw7QxdhbYcXo86Obt/sDxyDi4B2UoFeFNR
enlGEf1hI7UKXmW4zvOkv4UK7n9ShLHsfVXMB6bbLL9UQ9+szq3irzpyuX5/
f9kjyBnnQmQ9jiLv40msGNSEn6lk+NNqwfdMC2VPnIBPRb2oKD8Ji2R1+//Q
gSkbBmV59OCp91+Xz57C9dsX5iqiT8O5e9f9286gH85HLrepj9xRnW5F2hD5
MXO2SjcjmMf3MCHdGCa5IyX3wQT+lKO6QmMGNzRpVx4/i/0pH40IV8yRX1my
liuzwPtvQeO2MmWJXFHAv5LrHMx8NIRgZo19K5a35O7aIC+PTq9ct4Nj8woI
Ug7oX3xRJefqCBuMNK+kOaEv8ft15YAz0eeDbpBA7YJ8VuirnKYr8i7NuZV/
3OCn1muVz9zR/w98TBp9
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4399#1"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1: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
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4399#2"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1: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
+w8X0unl
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4399#3"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1: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
VA6+avATOZy9HcjfToWGJyXpefw/EFCX1+t14Lrz+PhZoa7viPnI+PLxLips
3dI7mhDxHU0sjje87qZCUPJD31Ozs8gvkMJTMESFq34rINn9DYV7x11Wn6YC
P9+GT5vvTqPrtk6N9kI04J45mLv54xekzBZrGiNCg9VTH/Rmyr6gmuKy1+UE
GkzuvjImH/AFtf/4Nb0sQYMsAs8KkecLmomNJV2WoYFV9OjTUo0JpFl968SA
Cg1UJ9i1Rko+ocZD3SurqjQY7FaMXBf8CRn/m4/boEGDxGKYyTT6hA6b6OUF
/EeD7C21jmtfx1H4aHcHQZ8GFm1ycwNq46iDf4G1z5IGe4jrChuHx5DlXcqd
ICsa2KXtJ9jcHUPvrJF23kEaBPumelnEj6Hv1+LNvx2mgZzRrzAnrTFE3CYV
luRKg95yK63hSx+QvSsMPAukAZf6m1Lu0ffox6PEeLhIA0JJ/p7RymFU6t/e
kX2ZBgHzxOIBn2HkrMAt+O0KDUxneyuDNw6j/syI9EvXaBCvkL+n8uYQqvMK
uTxXhtdP3930ZdkbFElyLy96TAOzTO0Bh64BtP3l9dmlRhp81N9jq5Y5gOaj
xlT2N9PgcPXvkYu2A8j9u9391TYaINt0VdHp12h3m2WDdTcNvrMRf6USXiNi
wI5unnG8fhsSbuac7kMvFM8RHD/j/rmzVd6Y9KHY0UcH7n+hgU5MiE8WuQ/9
Nd025DRDg9uNnfQz9b1ohLHlY/1vGuyt/q9ndF0vKnklPe/NIwMHdvf+ZC/p
Rlob/0r2bJIBqT25NNOQLtT7cfrk2hYZmD2Q0krW7EK+l0dfbVKVgdG7Nb9j
5jtRCe+zuERNGZhvEtyw+WQnIk5e+LMTyUDAhsGSC8EdaK5IbbDGHLdfu3Mh
KbcdpdjJq322kAFx07yfZ5zbkRJRKlXMSgZC5Fu4fim2I6codqPjNjLQHe9q
frz+Gep26qlRdJaBDjPbr9FjbaiC5pd95aQMtKb+COI3eopMB5znOgJloLx9
Jm9A/CmaOG+9dzFYBvxX/6sW/9yKqKu63NahMrBUemfPdHQrSn4rECQcIwPS
i2lZA89bkOfFMqvIbNxfReKvZ0ebkSxhguhRJwPma3L9XcON6MfQnPzThzIw
wPPvv+NJjejhtTVtZoMM/OX0Io/oNCKLrWSnd80yQG0J2cBf2IAizM1um3fJ
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
XBQ8VVS4C/0POc51NA==
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4399#4"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1: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
                "]]},
               Annotation[#, "Charting`Private`Tag$4399#5"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1: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
0W8GIv8vx6lALQ==
                "]]}, 
              Annotation[#, 
               "Charting`Private`Tag$4399#6"]& ], {}}, {{}, {}, {}, {}, {}, \
{}, {}, {}}}, {}, {}}, {Ticks -> {
             Charting`ScaledTicks[{Log, Exp}], Automatic}, 
           GridLines -> {None, None}, 
           FrameTicks -> {{Automatic, Automatic}, {
              Charting`ScaledTicks[{Log, Exp}], 
              Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
           Identity, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None}, 
           DisplayFunction -> Identity, DisplayFunction -> Identity, 
           Ticks -> {Quiet[
              Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
           AxesOrigin -> {2.302585092994046, 0}, FrameTicks -> {{Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
               Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
              Charting`ScaledFrameTicks[{Log, Exp}]}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{0, 0}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{50, 10}, {0, 0}}, DisplayFunction -> Identity, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None, 
             "ClippingRange" -> {{{2.3025852339686432`, 
              9.210340231001586}, {-1.9286549331065747`*^-15, 
              15.459461395219229`}}, {{2.3025852339686432`, 
              9.210340231001586}, {-1.9286549331065747`*^-15, 
              15.459461395219229`}}}}, DisplayFunction -> Identity, 
           AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {True, True}, AxesLabel -> {None, None}, 
           AxesOrigin -> {2.302585092994046, 0}, 
           CoordinatesToolOptions -> {"DisplayFunction" -> ({
               Exp[
                Part[#, 1]], 
               Part[#, 2]}& ), "CopiedValueFunction" -> ({
               Exp[
                Part[#, 1]], 
               Part[#, 2]}& )}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{50, 10}, {0, 0}}, 
           ImageSize -> 300, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
           FormBox["\"lossy optical sWLC \
model\\n\[Kappa]=10\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\), \
\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\) is SRM coupling rate\\nno \
radiation pressure effects\\nparameters of LIGO Voyager\\nconventional \
detector is lossless\"", TraditionalForm], PlotRange -> NCache[{{
               Log[10], 
               Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
              All}], PlotRangeClipping -> True, 
           PlotRangePadding -> {{Automatic, Automatic}, {
             Automatic, Automatic}}, Ticks -> {Automatic, Automatic}, 
           TicksStyle -> {
             Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
         FormBox[
          FormBox[
           TemplateBox[{
             RowBox[{"20", " ", 
               RowBox[{
                 InterpretationBox[
                  SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
                 
                 RowBox[{"Rcon", "(", 
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ")"}], ")"}]}], 
             RowBox[{"20", " ", 
               RowBox[{
                 InterpretationBox[
                  SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
                 
                 RowBox[{"RLossy", "(", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                    RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                    RowBox[{"lossRatio", "=", "0.5`"}]}], ")"}], ")"}]}], 
             RowBox[{"20", " ", 
               RowBox[{
                 InterpretationBox[
                  SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
                 
                 RowBox[{"RLossy", "(", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                    RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                    RowBox[{"lossRatio", "=", "0.1`"}]}], ")"}], ")"}]}], 
             RowBox[{"20", " ", 
               RowBox[{
                 InterpretationBox[
                  SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
                 
                 RowBox[{"RLossy", "(", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                    RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                    RowBox[{"lossRatio", "=", "0.03`"}]}], ")"}], ")"}]}], 
             RowBox[{"20", " ", 
               RowBox[{
                 InterpretationBox[
                  SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
                 
                 RowBox[{"RLossy", "(", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                    RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                    RowBox[{"lossRatio", "=", "0.005`"}]}], ")"}], ")"}]}], 
             RowBox[{"20", " ", 
               RowBox[{
                 InterpretationBox[
                  SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
                 
                 RowBox[{"RLossy", "(", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                    RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                    RowBox[{"lossRatio", "=", "0"}]}], ")"}], ")"}]}]}, 
            "LineLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                Directive[10], FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm], ",", 
                    TagBox[#3, HoldForm], ",", 
                    TagBox[#4, HoldForm], ",", 
                    TagBox[#5, HoldForm], ",", 
                    TagBox[#6, HoldForm]}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"Directive", "[", "10", "]"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ), 
        InterpretationFunction -> (RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
        True],"\"shot noise transfer function,\\n|R| / dB (20log10)\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          ItemBox[
           RotationBox[#2, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
           Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 2}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", "Left", ",", 
           RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]},
    {
     TemplateBox[{TemplateBox[{
         GraphicsBox[{{{{}, {}, 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6], 
                Dashing[{Small, Small}]], 
               LineBox[CompressedData["
1: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
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4497#1"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1:eJwd13c81G8cAHB7j3Pc91bIZTeokKL6VMbvKEkqlBXKTCgVEopCaBhJRpQk
JDOliFAyQkbKbKDISEOi3/PcX/d6v+6+933G5/l8Po/CQW8LFx4uLq4/3Fxc
+LNm1c2WBx48cG1AuezQginYDeXutD/GA599Qjieu1ryWuw0D0g19HKsOdfQ
fjiWB25WXy7HTq391iX7gAc65YUrsE9a6Q9E/uSBLTLyldgyokYO6/7xwHBm
OMf3n+wc+ijICwmkCY4/s5w+bKbzQu2lp0+wLSciR37o8YKpjWcVtkZY96Rj
KC/0t87WYL8PjJUjIngheq9WLXbUccMdjVG8MKtyjOPPrsW5a+J5YX/eLMc3
dsa58N7hhZWGc8+xhWSN391q4oVmfqkG7MHysvoRKh+4m59+hR37wOtHyhI+
eDBYz7HePUVFcwU+CGwgNWEnpl0JfajOB9rXb3O8PfyIfuRGPvC372jGfmih
XKTuxAc+zze/xr48kZDqVcAHhuN2ndh8Xx/+ayvig0nfAo79R9856pTzwbD5
IscHPigo/6viAxWZ9C5s5bf5BZfa+KCo5mM3duXzuqriWT5IpIT2Yo+m/Bia
28APivu4BrH3J9MM7Dbzg/WF/Ry3JOpl12zjh1TZco6LL4e6R2/nByF/7yHs
4PPi35fY8cPpLx+HOfvlp8QHofygZPDhE/Zmkz3KEQ38MPNJcxyba49ywJtX
/LDcNYnjavtfzazX/HDDapHjrceTj1f18MN8ePMEtlFG3/PfY/xQJe8zyVmv
ny5OHmICsKOieQbbKtM/w3yXAPz9NjCHTc83nk3bIwBPlff8we4tp/03YS0A
J983cry/+dFk5EEBmKktn+fE6+/FTbV+AtB3OWkB29nsfJ92ogBczPTmPozs
8yeJwXwnACWnw4WxryilvK8fEIDiEUIEu8g8Lc33owCozOdwPJt9i9U4IQDB
Cq2i2P67H6if4hKErNBlEtgBeY0bupUEIQQmyNjn7BZsrh4VhLojIrLYtyK5
ZDcfF4TehCKO60p4B76cEoSqkP1y2AKiIk5bzwpC5O378tiR5YTHdIIgLDdw
ZGHHkjQDdz4WhJibX1Swr9UcTBEVEIJhvxtrsYOn2y4dFhGCHYO7tLCdl26J
qJUQghIpIW1sjWB5n0CqELys99fBrl//3uirqhCcv2y7HvtH4Z6ZRlMhoLnu
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
AuYV6/tHG9hwz+5P2QMPFjyjS67vrGfD/8vCb/A=
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4497#2"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1: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
NvA/5JS6SA==
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4497#3"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1:eJwd13k8VF8bAPCy72bMwlwJE6JUZI3ksYRhLBFJtixlSfWjbFEiayVbJCUR
WqSSPSFCSQqVNtKmFCmVouJ97vvXfL6fufece85zznOeo+izy9GfZ8GCBcML
Fywgf9tWnu29FswDxjfl8hxNuEARUjkmtJsHhNuWFZD2fH3R3msPDyivXHuG
9Ex29UOxWB6Ist9RTlpjpqt/ezoPfDfiqSd9uv3LE7lrPCDHFH5OOtJ17avU
aR5ga5YpOqE7NW+dGZnlgfRejgppuqiFt948D/BETC0jfeWm/et3grwwO+eo
TXqU7fvWmMUL7KQNlqQ3TqR++GnIC/IenJ2kV8UPTm49yAvaA9xW0i/3pS9m
JvFCRZZkJ+m0vettu9N4Yf+iZ/f+317A9Yurc3hhzZW4QdKn7I/585bzQtp1
9iRpITnLF+d6eOFRUIP8RvRIXW3nB2k+ENENSSKdfi3kZ8EidBzrKGnDS0pK
Dop8UFV+P5t0bmHWwfplfCBdY3uWNDdx59pUIz7I6b3cRLreUaVqmS8fZDpN
/yCdOXH8dEglH9xsmAh2RvN9rp/vq+KDJwrKYaTDP77YqlvHB78j/aJJu79V
VJlv4YMt8n9SSKs8u1yZ0ccH1YapZaSbbne0XP/BBzWHNd6S/ljw8/WMAT8o
bx33cUFvyZcx9zTmB3q+VjDp3lzDsjYzftCdSAgjfT3zYNBhLj8YSMEh0vuT
xb8v8uSHuqClZaTpYcp8cJAf9F1ufCZtbO2sktTFDw+jTfdvQi9wVol+dI8f
Qhsyk0m3ev26z37ID468nzNIm+7N39vylB80390oIW1RNHT79xg/NIs9vUua
O+3vGywmAMNVvDKuaNfi8CKHDQKwsCSyiTTrsuWPQmcB+G+1fBfp53UyVhOb
BSDLuK+P9Jb7jZOpPgKQxuf6gbTn77l17WEC0Jv3TWoz2s8ueUgnVwDW8Hnv
IP3fbB4h+0IAfAYTVd3QWcoFLztfCcDo8mYd0lUOhYWh7wRAeJbfjPSPsnPs
7gkBqLW57UE63OnasqgFgqDb8S+bdHRFt8GgsiDwu+/h3YI+5PnPLXu3IBC8
v76QPpe6QM54ryA02JnNke6o5n31KUoQuuLPirujBURFfE0TBEH5d7Y66dQ6
ZvC344IgEugUTDqdorHP/oYgNK+zHyd9os2nQFRACKZePPnrQcbrW1/GdhEh
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
cbwKWQuiujjwP7awZzA=
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4497#4"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1: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
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4497#5"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1: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
Y9Lom06z5cXebJhQTr0R3MCB/wGpTKzl
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4497#6"]& ]}}, {}, {}}, {
          Ticks -> {
             Charting`ScaledTicks[{Log, Exp}], 
             Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
           FrameTicks -> {{
              Charting`ScaledTicks[{Log, Exp}], 
              Charting`ScaledFrameTicks[{Log, Exp}]}, {
              Charting`ScaledTicks[{Log, Exp}], 
              Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
           Identity, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None}, 
           DisplayFunction -> Identity, DisplayFunction -> Identity, 
           Ticks -> {Quiet[
              Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
              Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
           AxesOrigin -> {2.302585092994046, 51.553382046101895`}, 
           FrameTicks -> {{Quiet[
               Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
              Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
               Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
              Charting`ScaledFrameTicks[{Log, Exp}]}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{0, 0}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{50, 10}, {0, 5}}, DisplayFunction -> Identity, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None, 
             "ClippingRange" -> {{{2.3025852339686432`, 9.210340231001586}, {
              51.553382046101895`, 57.0800259820388}}, {{2.3025852339686432`, 
              9.210340231001586}, {51.553382046101895`, 57.0800259820388}}}}, 
           DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, 
           AxesOrigin -> {2.302585092994046, 51.553382046101895`}, 
           CoordinatesToolOptions -> {"DisplayFunction" -> ({
               Exp[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Exp[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{50, 10}, {0, 5}}, 
           ImageSize -> 300, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
           NCache[{{
               Log[10], 
               Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
              All}], PlotRangeClipping -> True, 
           PlotRangePadding -> {{Automatic, Automatic}, {
             Automatic, Automatic}}, Ticks -> {Automatic, Automatic}, 
           TicksStyle -> {
             Directive[FontOpacity -> 0, FontSize -> 0], Null}}], 
         FormBox[
          FormBox[
           TemplateBox[{
             RowBox[{"Tcon", "(", 
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ")"}], 
             RowBox[{"TLossy", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"\[Chi]", "=", 
                   RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                 RowBox[{"lossRatio", "=", "0.5`"}]}], ")"}], 
             RowBox[{"TLossy", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"\[Chi]", "=", 
                   RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                 RowBox[{"lossRatio", "=", "0.1`"}]}], ")"}], 
             RowBox[{"TLossy", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"\[Chi]", "=", 
                   RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                 RowBox[{"lossRatio", "=", "0.03`"}]}], ")"}], 
             RowBox[{"TLossy", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"\[Chi]", "=", 
                   RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                 RowBox[{"lossRatio", "=", "0.005`"}]}], ")"}], 
             RowBox[{"TLossy", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"\[Chi]", "=", 
                   RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                 RowBox[{"lossRatio", "=", "0"}]}], ")"}]}, "LineLegend", 
            DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                Directive[10], FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm], ",", 
                    TagBox[#3, HoldForm], ",", 
                    TagBox[#4, HoldForm], ",", 
                    TagBox[#5, HoldForm], ",", 
                    TagBox[#6, HoldForm]}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"Directive", "[", "10", "]"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ), 
        InterpretationFunction -> (RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
        True],"\"signal transfer function,\\n|T| / [?] (log scale)\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          ItemBox[
           RotationBox[#2, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
           Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 2}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", "Left", ",", 
           RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]},
    {
     TemplateBox[{TemplateBox[{
         GraphicsBox[{
           GraphicsComplexBox[CompressedData["
1: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
8wGHZgl20zyH+YB/j+jdpHkO8wFWFvMv0DyH+QDJIcswmucwHxBxQLmC5jnM
B8SpSFXQPIf5gF8D6j3UX2A+wLxiXhv1F5gPqFWY8Jr6C8wHnJmul0j9BeYD
GM2yDjTPYT5A/d6W/BttOB/wd3pOQFcbzgeskwq8atCO8wEHHYUsr7bjfICw
dtJlzQ6cDxhQjU9u7cD5gO7PjtqFnfh9BpzXIimfvuK8gEyJ6/inPTgvUPZn
zTv3PpwXGCzq00jl4rzAmNSotgdcnBfYc3HGJI1enBc48Nvw5dx2nBfgDLWa
jK7DeYG5D5zt+x/hPEC47mWnPr55gPC1o+bS/oB5gIFHjwL+dzw8Mg9gHzee
S2uYBzCd7hJJ+wXmAXoKflj97/rQyDyAAiP5X5rnMA+QaPPoGe0fmAeIb/+V
T/Mc5gF2ZrZr0DyHeQA366ZQmucwD3DwqPkXmucwD3Dq9kZPmucwD5DYMGWI
+gTMAzR2Th6mPgHzAPeZC9bSPId5AHuNdck0z2EeoK/1bzX1CZgHsB5qT6c+
AfMA12ZxQ4+34TxAf3Xsi/I2nAeI2/QlW7wd5wFyYwyueLbjPMDjCs+7ne04
D9A3cUrj2V6cB2gwmX1CmovzABEKDXNpnsM8gJpK3rvOPpwHSP+2+duWLpwH
6AkzarjchPMAPy+a+ndWov8/tNsWsZXP/0VVhA+V9qH/J7VxSmu56P8bKsIG
d3LR/8Vqe/L6u9H/T9tWrlNqRe9/2WPs4sxF7+9XPvG5g4veH8zSk1nSh94f
tX/yFZ9O9P4l0/rsz/F5v617ydUiLnr/nRUte89w0fdFix3LaJ6D70ukKc5O
7EPfZ5x4Wt/KRd8P6fb0WMpFz78rNT2ijoueH67/r1o+yfMLo2PcBouk9OND
84IzuOj5vtHrf9DXA88v2m9y/iMXPV/k9c6BZi76fY99rQ/1IfD7IIu/zvR6
b6JL+/c/N6X05b5r+7zgoufbqWRprOLzfPnlzWz6ekf7jpgdOSGlX3HJ/v4X
Lnq+7Iy0z7Q/eJ5/tu0d/fwEz5e5fUeOfv6UKI1/pXpYSl/PTWof/TwBzx9c
VRJMP2/A8wNe7S8Q4/P8p4v6cncrsXmen7rvabgHqcHzZa0kr3uSGjw/6tSb
6V6kBs93ufC4Yy+pwfOLs8RjfEkNnt/yILPcn9Tg+XblG/YdIDV4fo1UxPlw
UoPnq3Ibl8WSGjz/w0e3OSdJDZ6v5WVxJZXU4PnNJtGCd0kNnp95J3S4ktTg
+awLeVXdpAbPr32qt1B6Ppvn+TFfP+yxJTV4fsKqeJ2zpAbP11cMtBJYwOZ5
/rW16x6HkRo8X3JUnLiOMpvn+XnnA7KUVdg8z4+9ln/deiGb5/mt8cVThhax
eZ4/vuSS5ZglbJ7nu4oGLD+xlM3z/GN+iqHqy9k8z3ffYlkQqMPmeb7t3x6n
+QZsnuf7KbZZOhuzeZ4/+QqjcB+bzfP8gsE10hvM2TzPrz3bO1qQxeZ5PluO
eSCNvF/w/LOWxSUuE9g8zx86oVQh14Se75EpraNwBz2/3rbBZ38sen5A6vfh
EGf0/BCm53htXfT8uZWhB8Mk0PMT00dZb+pBzz+osHlsSBl6/phngb8u8Xl+
mG+477Qg9PyOw7H+lnye38HMP+rG5/nGYbL7M/g8P1Ls3ovjfJ5v+2harT+f
5zOUvs+g6wE8/96kjEl0PYDnD24JtdlDavD8ulkSfXR9gOcfnukh50Nq8Pw7
BmdE/EgNnl9912UgkD7fiOe7T/5pFUpq8PwDt5PnR5MaPD9FsdfwKKnB85fq
y+86R2rw/NUOw8XppAbPTz5w9lQxqcHzf1gYb2wgNXi+mr6+wxjS7+D5tfs+
LVtGavD86pp13T6kBs9X2WA/voLU4Pk7FN/n6pH1AJ6/Z5R1zltSg+df1XUv
vkbWB3i+hUR7dQ5ZH+D5xVUd2jPIegDPd5sRL969mM3z/Ma1syI11dg8z3e4
uqDJWIPN8/zZLMc32lps3v0LZtzxyVJbyeZ5vtap8xYqZmye55s+jA1pJP0P
np803uSzCdkOnj/rVfJof202z/N9z+klZcxk87z+Xpahzdj36PUVQm+/0PwE
r6+x0S2l/QJeLy/VOkz7Bby+8feqYNof4PX9tZ3B3qQGrzf/pme0j9Tg9Srz
XtYEkBq8vtRi99tgUoPXj5Y2so0kNXh94N6sy3GkBq9/+6+GymlSg9cXOdgf
TaP1iNfv+n3/dD6pweuVm0O7akkNXi+VV3nnB6nB68epMjWUyP4Hr1c6GXvB
idTg9d0aKYzbpAavfyM6SmAO6Qfw+oJ02Zs3SA1eL+J+v92D9Ad4/e2v8t67
SH+A159+27HjFskj8HqfoJmHPUh/gNeXZ/kLJJH8BK9ndmS5uqqzeV7/NELL
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
78CvK31X59DrU+DXTp0zqqtIDX5dFb5tTC9dDyN+rXZc/eFM0q/g16L/+Lmt
pedTI349erTy2AukBr9WSj1TMZ70L/j10OX8e1GkBr+2L/JNMiD9DH7d0zvq
+VLSz+DXheXKCo70eHrErz/HTbGdQPIO/PpY7anQaSTvwK9nnxE/k0nyDvza
O/ywujXJO/i+/Obb1VMuk7wDvz728Oah4yTvwK9fuVj7J5H+Ab9eM298sy7Z
/+DXx4UaX0eRvAO/ruOsys8g7xd8uqjwc/pGPp++XrtWhvYD+HR2y/vptB/A
pxuzmh1p3oFPrxp7/y/tD/Dpj5P2Lad5Bz6t2XlBieYd+PSF4AYpmnfg0zE+
egdp3oFPz/uxy5nmHfi0xcCGszTvwKd/n/Sqo9dnwKeLe1UtaN6BTz+s9tzy
iNTg06/jl1p9pP0z4tPnYw48FCD7G3z69ZhDEzRJDT5dqbl6oR+pwaeV3Hr0
q0gNPn3pedodJukH8OmFTms8G0gNPr3J2NuUfp6AT5udfyTxgPy+waflHi/0
VyB5B9/Xn8eI3PSH9Ad8X/+Cp6KLzUnegVcn1k64aUvWN3j1QPbqsfT8Crw6
6NHHpX9I3oFX754weW8JyTvw6BD331HP35ny/Hnamr7Ne8jjwZ97HxfWDpE8
A38+H/MyZio5Hwdvntdf9OsQ2Q7ebBQQJfiJPB68+U5jh+AS0o/gy6ed1tWP
4/NlFWXfOFHy8+DLQhPPtdwi/Qq+/O3ssnx6vAi+rKBfl3SL5B348iO9hIz7
ZDv4coMkq3oaeT/gyyen1oy9RLaDL9eskfOW5/Plgt8JOb/J64EvK4ufEqX5
Cr4sFFdqcYrU4Mv+so0ZpaQGX1Y2OBrbS2rw5WrndrFaUoMv/468ecib1ODL
jrpSm7L5fPlP8L18mrfgy5FjC6Lp+gJffu8xMZOuL/Dl56ras+h6Al/2yqn9
RvMWfFmr0DWR5i34snlwVR3NW/DlgUfnYmnegi93uYzLo3kLvjxYztlE8xZ8
ee34GEuat+DL+c3CLdQDwJcvSuU50LwFX57BnupK8xZ82dkhx62Hnu+M+HLW
8ceD1APAl9/qXtppR2rw5TDxw+fPkRp8WUBZavI4sn7Al1NfJ+hGkBp8WaJD
znYlWU/gyz7Rx/IXk/UEvvxaXtFpPclb8OWsovOLR5P1BL78qfTntokkb8GX
U24MNaWQvAVfbjqtW80keQvfly84NtchnuQt+HLb8mqv/aS/wZfTNQT16ec1
+LJ2taslm+x/8OXGg1bvykjegi9LruMILCTvD/xYKjFR9wefH+eVKMyk/QB+
fOsJQ4z2A/hxXsfiDTRvwY+HZJ1+0P4APz7W16VC8xb8uOfACWmat+DHFRNn
CNK8BT8e/hW7g+Yt+HFo63djmrfgx5u6Yzxp3oIfjzNbdInmLfhx7xpPQZq3
4MdXIsz/0Ovh4Mey7v619Ho4+HHrDt/JNG/BjzWnZsosJzX4cdE2rUn76PXO
ET+e/0wj5QWpwY8vqi+8a0D6AfxYZGpK/HtSgx8fmlgadpP0B/jx5CUNXnmk
P8CPlwQV1c4meQvf7+9XbaA+SPoDvt9/fUVzDYPkLXhyef/+SQYkb8GTX5Xd
/ecz2b/gyX+nT+ifS7aDJ2+/s/WSjDab58Wjxcd0u9aZ8nxYR3qNuwt5PPiw
bJqSzjTSP+DDR4OGV/9L8hY8OOOXUpY/yTfwYG/xvCr6+uDB53xsdLeRfgT/
lRa1XZTC579nDsx8Mpr8PPgvayjq7BPyeuC/O0X6G2negv8Gv1D63kDyFvx3
+szsX9lkO/jv5eF2XQ3yfsB/xzXWdafT67kj/iuhMqewiM9/O7U88kXIdvBf
ydBRYlxSg/9eYGp+PUJq8N9NFUU/XpAa/Nc4y7uf/jz4b2OCtFIVqcF/z3Tq
aoSSGvxXxSXvwmo+/138cR/nK9kO/htxdVbKe1KD/46TeDOB/v/Bf3uPpPQX
kxr8dztbJ3qA1OC/e2pN47tIDf7rVHI9gj4f+G+v9+EZEnz+u1jIZlMZA/33
5d2bR54y0H81P2xhP2Og/zr/ubKngoH++8Dm2LIqBvpvwKySxdUM9N+oKAmp
dwz0X2HHyEWNDPRffd8rQe0M9N+Oh5nD/Qz03/1z4g6OZaL/rlIR+UeKif5b
IZCwTp2J/rvfX3zJBib67/rVyb/p8ST4r8iJ227Pmei/bQdWySiw0H/1Xpol
H2Wh/87PYaxVNUT/9X9yZVK/Ifpvs9/tvyLG6L8hwzdEwk3Qf1cqH/Ghx0Pg
vw6XHTcOstF/Bd0+P9CzRP/dtNKuM8wG/dc1TXRF9gb034zxYz5t3oL+a3K7
dhxzJ/rv8YeBue7+6L+ioz1Ntkag/9q6nx4ujEL/DYm7Wh3qhf7r1KSWYrAK
/bfZkWVzZAb6b+luxtvudvRf1+ubVv7MRf9NDpl7LCQO/bfkVdKh0y7ov44V
HMtKPv+1DJmV+obPf6WV9thw+Px3Z4Jp8yk+/zVLW7XmNp//pk9daTmbz38P
FJi+t+XzX/G0a13ufP4r3inEyeLz34XGt2QT+fy3VzExLYDPf3/5TPlK1wf4
72CGgUM5A/337e1r7OcM9N8cy5r8Fwz038AZM0VeMdB/70+a41/LQP9tPxz2
bz0D/Tfr0ergFgb6b2bOmrpuBvpvd+S11GEG+i+jfvfkyUz03z7Z82aKTPTf
jWMUWwyZ6L9hRaKjPJjov5GSjOVXmei/ekt8YweY6L99v1SU17HQf5XH2mS8
Z6H/Wv/96B1jiP57vN2uz8cI/TfRS3dFvjH6733rmRr2pui/R9kh8fR4Hfy3
r7TVcr8F+m9cvU6bjhX675n9ntab16L/KnzdnWDsgP7rXtTt6OvC5v19d9hD
i0unvdCDax7VTH0ejB6crvfn5p9o9OBo0ZKldiHowYWCAsyezei/k62qHcbx
+W+X8aNk2h/gv1vjs77R/AT/jQiYU0bzE/xXSG+JGO0P8N+yogLJlwz034SX
g2Y1DPRfr22WN+sY6L82ZVuYTQz035Ye9rSvDPTfmkrt9B8M9N+9GxbKCjHR
fxvXje+TYaL/ujkefL6Cif4bd+R47jYm+u8pjfZxJ5nov21OsSsamei/Tive
l+qy0H/t10hX5bDQfz06Wmw2GaL/mp2PmLjUCP3XxFTWfYsx+m+/Z6xTlwn6
b6eCmVKnGfrvKyn5rlvm6L9jWWf/qK9B/61+9Gd9iy3670rGjqydm9B/hbOb
XtdsY/P+fvvKPInFmzzQg2MmF/am7kcP/pz2W+NSFHqw9i6npvpw9GAXiZel
edvRfwcUz8ZX8PmvmliiDu0H8N+CGG4VzQ/wXwOvc3U0P8B/c2Zu8KpkoP/e
7R4Sf81A/3W2vF74hoH+azt6yrIGBvpvt5BVWysD/feD9EBVHwP9N1nNv3MU
E/1X/Z7ROnEm+q8je/G0hUz033PxTddXM9F/E//0Twlkov8K1Tuk5jLRfx3U
1/lNZKH/ugkecN3LQv+tzhj2EjBE/015Pq2/wBD912iwZnaREfrv/Wiznpkm
6L/fxV4K1pii/3Zln0zWZqP/enepHrZbjf6rc1v3ka01m3d/eknfztaf69i8
+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
pzjMBw==
            
            "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
               EdgeForm[], 
               Directive[
                RGBColor[1, 0, 0], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 
                 PolygonBox[{{2873, 2894, 2895, 2877, 2879, 2856, 2858, 2851, 
                  2855, 2850, 2849, 2848, 2847, 2846, 2845, 2844, 2843, 2854, 
                  2842, 2865, 2859, 2881, 2878, 
                  2880}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, {{}, {}, 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6], 
                 Dashing[{Small, Small}]], 
                LineBox[CompressedData["
1:eJwV1HeYDgQcB/Bz7pxx7sybbjkrpHJcRBpUlLiTSFOnkHRXSkNFi4wooyka
ZpoyirYiLWWkQrQXRclo9/n98Xm/3/d79zz3u/d9n7eooqpfZbWEhISzPEQ2
8fC9XMYt9KGEY+2JbNBncxmJ5Nl+kMu5lb50oJO9Oh/qDzOC6uTbfpQruI0y
OtLZnsRH+hwuJ4kC209yJbdTTinH2ZPZqM9lJMkU2nbLF7iDfnE7Xew12KQ/
whXUoMi2R77I+Hgd4na62lPYrD9KJSk0tf0sVzGB/nE7x9trskV/jCpqUmz7
Ra7mTs6O2+lmr8XH+uNcSS2a2fbKl5jIgLidE+y12arP4ypq09y2T77MJAbG
7Zxor8Mn+nxGUYcWtl/lK0zmnLidk+ypfKov4GpSaWn7Tb7KFAbF7Zxsr8tn
+kKuoS6tbPvla9zFuXE73e1pbNMXMZo0jrD9Ll9nKufF7fSwp7NdX8y1pNPa
dkC+wTTOj9s5xV6PHfoTXEc92tgOyjXczQVxO6fa6/O5voTrqU9b2yH5Jvdw
YdzOafYG7NSf5AYacKTtsHyL6VwUt9PT3pBd+lOMoSHtbH/ItcxgcNxOL3sj
vtCf5kYacZTtT7mOmVwct3O6vTFf6s9wE4052vaXfJtZVMTtnGHP4Cv9WW4m
g2Nsf8v13MuQuJ3e9ky+1p9jLJm0t/0j3+E+LonbyaLEz/6V73I/l8adZNPB
z/6T7/EAQ+MmcugYXzy8Lx5kWPx9cmlCHvkUUEhRvIc+zE1lMc1oTgta0io+
V/FZifc/3j+/2zbeq3j94zWN1yn+d0rje48P9IcYzpnBlsU3+lLG0cfzbL7V
n6evnsN3epnMpZz2nv8P7vePbg==
                 "]]}, 
               Annotation[#, "Charting`Private`Tag$4584#1"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1:eJwl1GW0VVUUgNFHd6N0d3eHhQKCRXeDTXcj3Q220iDd3d3d3dIlIencwx+T
vdZ37hvce895L0OTVlVaRoqIiHjlnyr0oyr9qcYAqjOQGsxlEIeoyTwGc5ha
PGA+Q0gaOSLiiLM2D1nAUN7Sjzrr8IiFDONt/ZizLuXN/zgXMZwv7ck4bq5H
BfNj52JG8JU9OSfM9alofuJcwkjW2b8mBSftDZhk/pin5qWMYr39G1Jyyt6Q
yeZKPDMvYzQb7N+SitP2RrwwT6Ey/9qXMyZ83igRERu170jNGa0xL81T+YTn
9hWMpQmvtGl8ygv7SsbRlNfadD7jpX0V42nGG20Gn0f+/56uZgLNaRG+x3Cz
vZ+Zrn/Ba/saJobvX9+kfU8azobvlUj6LHsV3tjXklM7Zu9DAX7UkmmbzS1J
y3v2O86fOed6cfsV8ygqmJ8436Wc+YHz9/C9hfvktX85q4ZngAgmsk7/wVmQ
+/wW7p+ffeb8ybXk5i3mVpQ3P3am433zXecvnPe6Evar5tFUND8N75UPzQ+d
f4RnwOsi22ebqxGJd+y3wmdlveu57MfNfSkUPqeWQttqbk16PrDfc/7KBddL
2q+Zx4T3FZ4hLYo2x1ydyOE7sd8On4kNrue2nzD3o3D4HFpKbZu5DRm4qJXS
rpvHhv83PG9aVG2uuQZR2Kjl0U6a+1MkvDctlbbd3JaMXNJKa3+bx4V7FJ4L
LZo2z1yTqGzS8mqnzAMoGu6LllrbYW5HJi5rZbQb5vHhuw7PiRZdm2+uRTQ2
a/m00+aBFAvPhZZG22luT2auaK2IoS+w1yY6W7T82hnzIIqH+6ml1XaZO5CF
q1prYuoL7XWIwVatgHbWPJgS/Kml03abO5KVa1obYumL7HWJyTatoHbOPISS
TNLSa3vMncjGda0tsfXF9nrEYrtWSDtvHkopJmsZtL3mzmQP318c90ZvRxzX
lmj1ic0OrbB2wTyM0kzRMmr7zF3IwQ2tPXH1pfYGxGGnVkS7aB5OGaZqmbT9
5q7k5KbWgXj6MntD4rJLK6pdMo+gLNO0zNoBczdycUvrSHx9ub0R8ditFdMu
m0eG3zuma1m0g+bu5Oa21okE+gp7Y+KzR5tBVv2QvQd5uKN1JqG+0t6EBOzV
ZpJNP2zvSV7ual1IpK+yNyUh+7RZZNeP2HuRj3taVxLrq+3NSMT+8PeMbiRx
bY3WnMQc0GbTnXLuaQ9nT3rRmz7hbx5J/dxar29BEg5qc8ihH7X3Jj/3tbLa
TfMEPgrsj8JzTCXzc2dlZ1+v/Q9+tARq
                 "]]}, 
               Annotation[#, "Charting`Private`Tag$4584#2"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1:eJwV02W0VAUUgNGhu7u7u7sRkxQJpRtUuhuU7gbpRpAGQbq7u1O6uwTc98de
55xvLqz35s2kadSmWuswoVAofthQqGK4UOhV+FBoHEW4555HH5JGCIXWa/WI
yX6tEq/t4ynKffd8+pLM8/9o9YnFAa0yb+wTKMYD9wL6kdzzG7QGxOagVoW3
9okU56F7If1J4fmNWkPicEiryjv7JErwyL2I30jp+U1aI+JyWKvGe/tkSvLY
/Se/k8rzm7XGxOOI9j0f7FMoxRP3YgaQ2vNbtCbE56hWnf/sf1Cap+4lDCSN
57dqTUnAMe0HPtqnUoZn7r8YRFrPb9OakZDjWg0+2adRlufupQwmnee3a81J
xAmtJp/t0ynHC/cyhpDe8zu0FiTmpFaLkD7DXZ6X7uUMJYO+U2tJEk5ptQmj
z3R/wSv3CoaRUd+ltSIpp7UfCavPclfgtXslw8mk79Z+JhlntJ8Ip892f8kb
9ypGkFnfo/1Ccs5qdQivz3F/xVv3akaSRd+r/UoKzml1iaDPdX/NO/caRpFV
36e1JiXntXpE1Oe5v+G9ey2jyabv19qQigtafSLp893f8sH9N2PIrh/Q2pKa
i1oDIusL3N/xn3sdY8mhH9TakYZLWkOi6AvdFfnoXs84cuqHtPak5bLWiKj6
InclPrn/YTy59MNaB9JxRWtMNP1Pd2U+uzcwgdz6Ea0j6bmqNSG6vthdhRAb
tYk0JYbXlmhVCcMmbRLNiOm1v7RqhGWzNpnmtKAlsTyz1GvfE44t2hTy6Efd
ncjANa0VsfVl7uqEZ6tWVDtn703O4Luq5dWO2TuTMfisuW+Zw7ju9dLuK/bf
yR/8bdz3zdHB59XrcdzL7T8E75P9kRkh+E7Yb5pDgp/Z/szc5vli9vP2Wmaf
4P0wn5h1zFzBZ8u8a/5ojgz+X/OFWdec6t/nM4+7a5pdgvfafGz+ZGYKPvvm
bbO2OTz4/c3n5g3/toz9qn1A8F7bn5oFgs+P/YE5JvhOeS6ue4W9BhGD76v7
X3Mo271e3H3B3pfcwefbfc8cxTSv53efsHclc/D9ct8xR3DT62Xd1+wDKRh8
L7V42srg9yISO7QS2kV7P/IwXSugnbR3I0vw94rmZ9PL6dfdgygUfHe1+Nqq
4L0mMju1ktole3/yMkMrqJ2ydycrt7Q2JNBXB+8lUdilldIu238jHzO1Qtpp
ew+ycVtrS0J9TfC3JCq7tVkU1s+4e5KdO1o7Eulrg78l0dijzaY9ib32d/A5
ITp7tTl0oCOd6EwXKnhPuprd6E4PetKLJP6fdcHniRjs0+ZSRD/r7kUO7mrl
tRv2wRSmkvuhOTb4bNhfmvXM3p79H2UjD3M=
                 "]]}, 
               Annotation[#, "Charting`Private`Tag$4584#3"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1:eJwV1GPcFWkYwOGTbdu27c21qLWybS6ybdu12bZt2942a6/5cPXc93/mvPV7
z0xp6raq0TJMKBT67I9aEUKh1xFDoYmU5419NSNIFikU2qI1ITnntdq8MU+i
Am/taxhJcvdv1ZqSggtaHd6aJ1ORd/a1jCKF+7dpzUjJRa0u78xTqMR7+zpG
k9L927XmpOKSVo/35qlU5oN9PWNI5f4dWgtSc1mrzwfzNKrw0b6BsaR2/06t
JWm4ojXgo3k6Vflk38g40rh/l9aKtFzVGvLJPINqfLZvYjxp3b9ba006rmmN
+GyeSXVCbNYmkM79e+xtSM91rTEhfZb9S8KwRZtIen2vvS0ZuKE1IYw+2/4V
YdmqTSKDvs/ejozc1JoSVp9j/5pwbNMmk1Hfb29PJm5pzQinz7V/Q3i2a1PI
pB+wdyAzt7XmhNfn2WsQgR3aVDLrB+0dycIdrQUR9Pn2mkRkpzaNLPoheyey
cldrSUR9gf1bIrFLm05W/bC9M9m4p7Uikr7Q/h2R2a3NIJt+xN6F7NzXWhNZ
X2T/nijs0WaSXT9q70oOHmhtiKIvtv9AVPZqs8ihH7N3IycPtbZE1ZfYfyQa
+7TZ5NSP27uTi0daO6Lp/9h/Ijr7tTnk0k/Y/yA3j7X2RNeX2n8mBge0ueTW
T9r/JA9PtA7E0JfZfyEmB7V55NFP2f8iL0+1jsTUl9t/JRaHtPl0IpZrK7Tf
iM1hbQGdie3aSu134nBEW0gX4ri2SqtFXI5qi+hKN+K6vlqvTTyOaYvJq5+2
/00+nmndiaevsdchPse1otplc3+KsUTLp50x9yA/z7VS2g3zEEoHv18tvrbW
XJcEfGG/6xzJCdeL2a+YBwTvrfm5sziVzA+DZ8M5NniHnP8F303wnfpcfufZ
4Fl29nRWdz4Lng1nAWcF5/3gWXSODt5Z54vgWXD+6/OlnTeDZ9s5NPg/IOjO
MlQxP3aOD95F88vgu/eZBOZ15npUMz91JqS8+Z5zFCfdV9x+1TyQElS2P3KO
Y6nrBeznzL0oSEX7A+cYXrhexn7LPIyywXOkJdTWm+uTiFNaCe2aeRAlWaYV
1M6be1Mo+Luj+b3pZfXb9uGUC753LZG2wdyAxJzWSmrXzYMpxXKtkHbB3IfC
vNR6kFjfaG9IEs5oKyisX7T3pQivtJ4k0TfZG5GUs9pKetGbPvSlH/0ZQCX/
/oHOQQxmCEMZRlI/b7Of05hknNNWUUS/ZO9HUV5r5bQ75hHBM0hV+xPnBGqa
XwXvsXO4e/8HglwM/A==
                 "]]}, 
               Annotation[#, "Charting`Private`Tag$4584#4"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.528488, 0.470624, 0.701351], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1:eJwV1FV0VAcUBdAXLAnB3SFQL3XB6l7q1Fs0uCW4lOLu7u5S3N3d3TW4FXfd
72Nz7zlzZ9asmSGxcQkl4iOCIEj0T8nIIDgSFQTtKMRVeTrdeCJP4E8ysFNX
iqP29hTmmjyD7gTRQTBR9xcZ2aUrzTF7B4pwXZ5JDyLcT9L9TSZ268pw3N6R
otyQZ9GTJO7/05UkM3t0ZTlh70Qxbsqz6UVS95N1pcjCXl05Eu2deY9b8hx6
k8z9FF1psrJPF8dJexfe57Y8lz4kdz9VV4Zs7NeV55S9Kx9wR55HX1K4n6Yr
S3YO6Cpw2t6ND7krz6cfke6n68qRg4O6ipyxd+cj7skL6E+U+xm6OHJySFeJ
s/YefMx9eSEDiHY/U1eeXBzWVeacvSef8EBexEBSup+lq0BujuiqcN7ei095
KC9mEDHuZ+sqkoejuqpcsPfmMx7JSxhMKvdzdJXIyzFdNS7a+/A5j+WlDCG1
+7m6yuTjuK46l+x9+YIn8jKGksb9PF0VYjmhq8Flez++JGC5bhhp3c+Xq5Kf
RF1N/rf35ysiWKEbTjr3C+RqFOCkLp4r9gF8TRJW6kaQ3v1CuTrPcEqXwFX7
QIqTlFW6kWRwv0iuwbOc1tXimn0Q35CM1bpRZHS/WK7Jc5zR1ea6fTDfkpw1
utFkcr9Ejud5zurqcMM+hO9IwVrdGDK7Xyon8ALndHW5aR/K90SyTjeWLO6X
ybV4kfO6etyyD+MHolivG0dW98vl2rzEBV19btuH8yPRbNCNpwF35BH8REo2
6ibQkLvySEoQwybdRBrRmHu6UfxMKjbrJpHN+1gh1+FlLury6TbY/+GtcOru
m6P5hdThd+pmi9mMLR7PLa+1N+RV+z7z9fCzs+8wC5mtzDfMg2bR8O+d52U3
V8pvm3XNV8y9ZmGzYPjdmtvMd80W4WuaB8wi5iXPjzU3yu+YTczXzP3h64Wf
q32X2YY37YfMJp7zwBzDrxTU7zHThL87+1azOVvd5ZHX2RuF7zv8XuWdZmsm
ezyHvMpeL3zf4e9K3m625LLH88ub7P+G7y+cuofmWH4jLdt0ed2ttzcO3ydT
dDl1q+31w88z/P3H+L+pb8ojeRy/k47tuqk0ozktaEkrWtOGtrSjuNdpb3ag
I53oTBcee63x/EF6duimkct7WSM3CD9frugK6Dbbm4bfTfjbkXebbcPfjP2w
Wczs6vYpPvgHeQ==
                 "]]}, 
               Annotation[#, "Charting`Private`Tag$4584#5"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.772079, 0.431554, 0.102387], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1:eJwV1GWAVFUYgOFZwABUbEEFxe5u6e5YWsmla5fu7u7ubulGpbu7Yenubp7z
4+H73jN3LjvDXVLHxEXHRkUikXh/pEkcifybJBKpRHK2617EckR34g9u6Nmk
5T9dmRTs0L2J46juzJ/c1HNIx/+6Cm+zU/ehFvG6C2m4peeSnqW6Ku+wS/el
Nsd0V9JyW88jA8t0Nd5lt+5HHY7rbqTjjp5PRpbr6qRkj+5PXU7o7qTnrl5A
JlboGqRirx5APU7qHmTgnl5IZlbqmrzHPj2Q+pzSPcnIfb2ILKzSsbzPfj2I
BpzWvcjEA72YrKzWcaTmgB5MQ87o3mTmoV5CNtboWnzAQT2ERpzVfcjCo/Ac
kJ21ujYfckgPpTHndF+y8jg8B+Rgna7DRxzWw2jCed2PbDwJzwE5Wa/r8jFH
9HCackH3JzsRljrLxQZ7PT7hqB5BMy7qAeQgimXOcrPRXp9Pidcjac4lPZCc
JGC5szxssjfgM47pUbTgsh5ELhKywlleNtsb8jnH9WhackUPJjeJWOksH1vs
jfiCE3oMrbiqh5CHZ1jlLD9b7Y35kpN6LK25poeSl2dZ7awA2+xN+IpTehxt
uK6HkY/nWOOsINvtTfma03o8bbmhh5Of51nrLJod9mZ8wxk9gXbc1CMoQGLW
OSvETntzvuWsnkh7bumRFCQJ650VZpe9Bd9xTk+iA7f1KKJJygZnRdhtb8n3
nNeT6cgdPZpCvMBGZ0XZY2/FD1zQU+jEXT2GwrzIJmfF2GtvzY9c1FPpTHH2
OWvDT1zS0+hCCfY7a8vPXNb/0JV7eixFeInNzp6Yk/mb1/nL2QGzHb9wRSdM
6h72MkzXj8yJlAifz2vzzVfDs2Cfab5hxpjJzEVmcrOb9923jwvX6qLhuzTn
mW+aycKzZ84IP4dZLvyM5kLzLXOL90fMKfo1s2T4rswF4e8Lz4l9tlmBl+2L
w2fynoNme34N/9bO55pXnSeyT7eXZYZ+bE4Knz/cPzynXp9llqe71x+Y4ykW
7s9WZ1GumWovFT4DJZ0dMjvwG9f0THqE31fXljJLU4aylCOG8lSgIpXC/wWu
rWxWoSrVqE4NDrtvR37nup5FTx7qCRTnFbY5S+A+0+ylw3cYfjf0HLNiuMa+
xExh1nTtUyh+DrA=
                 "]]}, 
               Annotation[#, "Charting`Private`Tag$4584#6"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 Dashing[{0, Small, Small, Small}], 
                 RGBColor[1, 0, 0]], 
                
                LineBox[{2873, 2880, 2878, 2881, 2859, 2865, 2842, 2854, 2843,
                  2844, 2845, 2846, 2847, 2848, 2849, 2850, 2855, 2851, 2858, 
                 2856, 2879, 2877}]}, 
               Annotation[#, "Charting`Private`Tag$4584#7"]& ]}}], {}, {}}, {
          Ticks -> {
             Charting`ScaledTicks[{Log, Exp}], 
             Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
           FrameTicks -> {{
              Charting`ScaledTicks[{Log, Exp}], 
              Charting`ScaledFrameTicks[{Log, Exp}]}, {
              Charting`ScaledTicks[{Log, Exp}], 
              Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
           Identity, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
             True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
           Ticks -> {Quiet[
              Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
              Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
           AxesOrigin -> {2.302585092994046, -57.0800259820388}, 
           FrameTicks -> {{Quiet[
               Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
              Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
               Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
              Charting`ScaledFrameTicks[{Log, Exp}]}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{0, 0}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{50, 10}, {10, 5}}, DisplayFunction -> Identity, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
             True, "ClippingRange" -> {{{2.3025852339686432`, 
              9.210340231001586}, {-57.0800259820388, -51.55095439350851}}, {{
              2.3025852339686432`, 
              9.210340231001586}, {-57.0800259820388, -51.55095439350851}}}}, 
           DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, 
           AxesOrigin -> {2.302585092994046, -57.0800259820388}, 
           CoordinatesToolOptions -> {"DisplayFunction" -> ({
               Exp[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Exp[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{50, 10}, {10, 5}}, 
           ImageSize -> 300, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
             True}, PlotRange -> NCache[{{
               Log[10], 
               Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
              All}], PlotRangeClipping -> True, 
           PlotRangePadding -> {{Automatic, Automatic}, {
             Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
         FormBox[
          FormBox[
           
           TemplateBox[{
            "\"ASDScon[2\[Pi] f]\"", 
             "\"ASDShLossy[2\[Pi] f,\[Chi]=0.986\[Kappa],lossRatio=0.5]\"", 
             "\"ASDShLossy[2\[Pi] f,\[Chi]=0.986\[Kappa],lossRatio=0.1]\"", 
             "\"ASDShLossy[2\[Pi] f,\[Chi]=0.986\[Kappa],lossRatio=0.03]\"", 
             "\"ASDShLossy[2\[Pi] f,\[Chi]=0.986\[Kappa],lossRatio=0.005]\"", 
             "\"ASDShLossy[2\[Pi] f,\[Chi]=0.986\[Kappa],lossRatio=0]\"", 
             "\"5\[Cross]\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-25\\)]\\)\\!\\(\\*SuperscriptBox[\\(Hz\\), \\(-0.5\\)]\\) target for 1\
\[Dash]4 kHz\""}, "LineLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                Directive[10], FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"Directive", "[", "10", "]"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ), 
        InterpretationFunction -> (RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
        True],
       "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"",
       "\"strain sensitivity (NSR)\\n/ Hz^-0.5 (log scale)\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          ItemBox[
           RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
           Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {"", 
          
          ItemBox[#2, BaseStyle -> Directive[10], DefaultBaseStyle -> 
           "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 2}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
           RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.83530197167768*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"4895e743-2eb1-4f87-9e76-9ed2d3982220"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Checking", " ", "stability"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "\[Chi]", ",", "\[Kappa]", ",", "\[Gamma]btot", ",", "\[Gamma]a", ",", 
     "\[Gamma]c"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"denominator", "=", 
     RowBox[{"\[Gamma]btot", "-", 
      RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
      FractionBox[
       SuperscriptBox["\[Kappa]", "2"], 
       RowBox[{"\[Gamma]a", "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
      FractionBox[
       SuperscriptBox["\[Chi]", "2"], 
       RowBox[{"\[Gamma]c", "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"additional", " ", "poles", " ", "at", " ", "\[Gamma]a"}], ",", 
     "\[Gamma]c"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<lossless: \>\"", ",", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"denominator", "/.", "losslessAsmps"}], ")"}], "\[Equal]", 
        "0"}], ",", "\[CapitalOmega]"}], "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"denominator", "\[Equal]", "0"}], ",", "\[CapitalOmega]"}], 
        "]"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Kappa]", ">", "0"}], ",", 
          RowBox[{"\[Chi]", ">", "0"}], ",", 
          RowBox[{"\[Gamma]a", ">", "0"}], ",", 
          RowBox[{"\[Gamma]btot", ">", "0"}], ",", 
          RowBox[{"\[Gamma]c", ">", "0"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Kappa]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]btot", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]a", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]c", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<lossy: \>\"", ",", "sol"}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Im", "[", 
          RowBox[{"\[CapitalOmega]", "/.", 
           RowBox[{"sol", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"Im", "[", 
          RowBox[{"\[CapitalOmega]", "/.", 
           RowBox[{"sol", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"Im", "[", 
          RowBox[{"\[CapitalOmega]", "/.", 
           RowBox[{"sol", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Chi]", ",", "0", ",", 
         RowBox[{"2", "\[Kappa]"}]}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*FractionBox[\(\[Chi]\), \(\[Kappa]\)]\)\>\"", ",", 
          "\"\<Im[\[CapitalOmega]]\>\""}], "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<poles of lossy transfer function\\nunstable when Im[\
\[CapitalOmega]]\[GreaterEqual]0\\n\[Gamma]a=\[Gamma]c=0.1\>\""}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{",", "Dashed", ","}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"50", ",", "20"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "0"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{"\[CapitalOmega]", "/.", 
           RowBox[{"sol", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"Re", "[", 
          RowBox[{"\[CapitalOmega]", "/.", 
           RowBox[{"sol", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"Re", "[", 
          RowBox[{"\[CapitalOmega]", "/.", 
           RowBox[{"sol", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Chi]", ",", "0", ",", 
         RowBox[{"2", "\[Kappa]"}]}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*FractionBox[\(\[Chi]\), \(\[Kappa]\)]\)\>\"", ",", 
          "\"\<Re[\[CapitalOmega]]\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{",", "Dashed", ","}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"50", ",", "20"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "20"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2"}], "}"}], ",", 
     RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.83504641704847*^9, 3.83504651011362*^9}, {
   3.835049371511012*^9, 3.835049380301217*^9}, {3.835049418434885*^9, 
   3.835049469736174*^9}, {3.835049508857883*^9, 3.835049557578328*^9}, {
   3.8350497931951036`*^9, 3.8350498562789583`*^9}, {3.8350499447238283`*^9, 
   3.8350499782220507`*^9}, {3.835050012687291*^9, 3.83505010081954*^9}, {
   3.8350501385701714`*^9, 3.8350501438812428`*^9}, {3.835050175325329*^9, 
   3.835050219451564*^9}, {3.835050308236258*^9, 3.835050388374193*^9}, {
   3.835050432386447*^9, 3.835050511999774*^9}, {3.83505056773658*^9, 
   3.8350506526832933`*^9}, {3.835050688626114*^9, 3.835050689709009*^9}, {
   3.8350507425496798`*^9, 3.835050754560383*^9}, {3.835051042014687*^9, 
   3.8350511646313143`*^9}, {3.8350512392918997`*^9, 3.835051285130447*^9}, {
   3.835051341858755*^9, 3.835051351648428*^9}, {3.835051473303735*^9, 
   3.835051486835176*^9}, {3.8350516126305943`*^9, 3.83505166725378*^9}, {
   3.835143788713299*^9, 3.835143801585413*^9}, {3.8351438402169533`*^9, 
   3.835143863663851*^9}, {3.835143978415365*^9, 3.835143979233163*^9}, 
   3.83514405083946*^9, {3.835300388984281*^9, 3.8353003942118883`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"099af43e-d730-461d-825e-0617c033dd5b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"lossless: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalOmega]", "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "500"}], " ", "\[ImaginaryI]", " ", "\[Pi]"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"250000", " ", 
            SuperscriptBox["\[Pi]", "2"]}], "-", 
           SuperscriptBox["\[Kappa]", "2"], "+", 
           SuperscriptBox["\[Chi]", "2"]}]]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalOmega]", "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "500"}], " ", "\[ImaginaryI]", " ", "\[Pi]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"250000", " ", 
            SuperscriptBox["\[Pi]", "2"]}], "-", 
           SuperscriptBox["\[Kappa]", "2"], "+", 
           SuperscriptBox["\[Chi]", "2"]}]]}]}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "lossless: ", {{$CellContext`\[CapitalOmega] -> 
     Complex[0, -500] Pi + 
      Complex[0, -1] (
         250000 Pi^2 - $CellContext`\[Kappa]^2 + $CellContext`\[Chi]^2)^
        Rational[1, 2]}, {$CellContext`\[CapitalOmega] -> 
     Complex[0, -500] Pi + 
      Complex[0, 1] (
         250000 Pi^2 - $CellContext`\[Kappa]^2 + $CellContext`\[Chi]^2)^
        Rational[1, 2]}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.83530197199549*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"1a18beb6-0eeb-4032-98e2-adf45b26c912"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
CNr2GQ==
           "]]},
         Annotation[#, "Charting`Private`Tag$5710#1"]& ], 
        TagBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
mcC/ARlWB+k=
           "]]},
         Annotation[#, "Charting`Private`Tag$5710#2"]& ], 
        TagBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJxF0Ak0VXkcB3BLhlLWZCkMMRUZr0KS/AzN2KsnKiVEZInJMhUz0sMjz1rn
VWRJtlHKcuy8ukYvSaFnlzX0sjxcrmUId+rM67rn3HPP53x/y/9/lZx/t3bl
4+Hh8fn6fvuau46yasZcDdKTvj2VSJ9mpHGsbDiUcp0udTyCJkuHB1xThIp3
RclmQTbXZ+weFaAzJfC9Xxin2JsoIES9Knlq9GU0k8ivNR2CxLk3hKVLxPt5
eZsJlw0Zv2vWbyH6GTmoP53eSuyr9Uzdbsdpg0Kui8e8vBwW2uAJ11nuetUu
PO3EPKpb51mfre1Ebuos/iBMfz1vtqPK5Mes572m3lL8Gh2E5386IvrMu5Oo
51vKE9uu+oHYr4M7lZ3M7yXqeWvNjWI5fUT9u3Ctpjq1AbjLtZ7oW77b2gNE
fW7ShYPnDAeI+4blx6VP2w4Q/Xpdo34ylHXnqqdKe3au22gstPAHo0Hi/ygm
TCw9nhok8onFgf520hAxP2u8ukEkbpg4j4j839MjIyNEf4xHqVu6CpvoXzDM
G3EP+Uw4YD+zZNvLUWLeQD4zmqU0TuRfPNuS9wRNEJbsmLSsl+MQ+9R/EVxz
q+ZALNdaW0+Qzeo4QOVa/3NiljqLQ8w/FqtmgbI5QOPar9sqMVBiEuhcV/rS
98d4TEIM1yYZSpeKpKcg7vv5HGuOmlVNEfuuyTsqf7SfBjeuSZZ+jvSn0+DM
9WgQNcVkZRpcaf97/JS6+yMeFELdebxJYZWIEyrJp8iPQk4wa7hBrRLpiFpJ
ThFAIc306MbklgrEYucnbTkhFBKSDV3SgyqQGkZj8/1NKLCKLgV+UK5AdE6V
eUhtQYFUKdxu+rYcUY6KTBWTQME1zZZWs6MceW/z7vKqKgrBL4pbfT1LkL0c
W+FOKxSySYOiceR8pMLGEqGdQEEutIh1KO0ZYvzcyN/g5FcbIkYmE0+Rs3Ga
PdlnUKCR3JbCIvKQKNLGvAAXFKp0Cp/7/JOLsAMY5hKBKBjuOSzobJqJpK8q
06yyUPjDfuLFrPptRFIUFWIuozCv23LZffA+bECSC3amzEDukXqcd6QcvLSq
uzdazIIMr8kOqy9MyDNzTn+xMAvZT6UFPe0aYX5CTox9DwO2jpCNx6UWKD1p
wk8/OgfaQQbBZMsOCDGlPixhz8GFgHqKB6sblPrMuzKp8xBactWmUqMP9A6G
02X3L0Dk9qmAEodBsFdoXuJtXQBOkqiXHv4R5htih65QFkEn4rTuzaphSNzg
EGCt8i+Mr/BHZZE/gWR/aQYf819oCInt1+lhg0AwxeaQ7xI46fe037k5CjyP
HQqGJJaBpqaooCkwDn4PCmIlapehX2n6yOvsCXiufktI3OcLSNg/LMvVmwRx
c7+9oSIrwFwzsBUomoJejfetgYwVeNVzgNyqhEJhGqiMOKyC/3W8zr4XhfMF
OuLya6vQ6R2XIXBnBm5SH1F6n6zB3I9+6v22s/BsVD5ZxBKHGxd37aMJY3Ar
lerUfwyHbS/Ju4tFMLhoPamaT8bhbILj5l5xDHYwGIVWp3HQ9YVkDRkMaPHn
6mKccYBrr9qaVTBw10ma2RSIg3tfFEPMAAPl8K2mgjk43Go8Hh1+BYM13b+2
dObi0FRnrJ7nj0H35HBLTh4Ovxp8qmBdxSDhdPH534pw8FIxS1UIxgBXs/an
MnBIvgvR5VEY9LLi0/hbcUj/coCXnYFBRcSiS2s7DiLxXTeEczCgH3bck9mF
wynz6HHSYwwssn8uMerHoZ3nQMyfBRhUXW98QxnDoejYviVRBgb3NLTjyRwc
9KQmP2shGPgOpdgoTeOgYMVm2tVisNvy8kDNHA4DlFyzzHoMNvC2ZSUs4nCF
FDzz+i0Gg6WHPZ2WcagtzonkNGHA8MzUJK3iMNuntlm8BYP7isLzOI6Dzw3R
EO12DP4DlJa8EQ==
           "]]},
         Annotation[#, "Charting`Private`Tag$5710#3"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox[
        "\"\\!\\(\\*FractionBox[\\(\[Chi]\\), \\(\[Kappa]\\)]\\)\"", 
         TraditionalForm], 
        FormBox["\"Im[\[CapitalOmega]]\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{50, 20}, {10, 0}},
      ImageSize->300,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"poles of lossy transfer function\\nunstable when \
Im[\[CapitalOmega]]\[GreaterEqual]0\\n\[Gamma]a=\[Gamma]c=0.1\"", 
        TraditionalForm],
      PlotRange->{{0, 2}, {-2.339552971201103, 1.2395529712011029`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
WwP/H58hOtc=
           "]]},
         Annotation[#, "Charting`Private`Tag$5761#1"]& ], 
        TagBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxFlAs0VHkcxyfvyNtSNlp6IKnWkS1u09FxmCFCOnYjY6SUFRHrkfea6tis
2rxWsqLE5DljInNjSChsZRQitWhSyHNGGWN2t9P9/+4598z5nO/v+/19//fe
M0b+oR7HZUgkUtl/9/+/jTVUR/vcyX2Hv1x8jGDSl6sL043vwajXJ/cxv1wN
WCjF29K1iGAm1qE9ZnLoNuHnYLFModbRGsLPw8ztFFdOcAm9Aqtm3jHp5xF6
PWal4+ZObSPyWBj2Lvem+TOCizDX9K3OMwJivhQLH3DJjdGa+poXiYn2zzV/
0Jv6qpNI58qzJ7wNCD0LS018TSabwnz25rC3MmSYvxeWaXnpFKEzcPLgbh9J
CPLjLfavGCERxPxl/LHelgG3RPAP3a9L/CaL4CSMpDzYVcAjuBB3LDIKrNH7
iPZHGdCM//GZJhjfNnlYpc9lBuVpq88otS7NoHm5pmtVG/NnUb+frbgDq53n
EN+h+hc2iuZQP+GEvoYgex7lcQ45ymbaL6DzJFIYf9UKFpDf6JVTfzFDSPgx
mx9SM9dZipDfx/DJ51V8ETGPCR+nj5xJXkTny5XzjfDY9AnlaQ9zimRageXj
kz33hH1GeaQy36oRrSXi+8HD86rStVqWkH7f/KKSZogY7bPu1ev+44wY7auO
u31F5yzS8aLuNv210cAXQ+UtNqQAe7BT3C2yxSj/nU18HrUR8v1G19A6eYRe
jb/8LX+jywNCv4V3DXHL3TrE6PmxEpYavXrEqH9cS9TocQGwMEix9N049A3R
zgk+NQH7x7lbvp+Ygv30gLvC4BmUj71c49DwcQ72eXKeJ5wRQh8HBaFixBKc
T9MpfFuK2jLqX9isrmKjuYz0nXsq3s9qL6P8pmqnjjJd0F1Nx0vo64DTFHyN
7DYto/5yD6i6JJtldD6RrREp4fgyfP8WT/kxOMrHqwv2bRrzlSCej51XpNMl
qL+11+2JV8ckqC9XXZ3dd1KC8tqShu06w5EfG/SPp7HOQ56CCTcvqRLyqLKh
CZJq4Euvjf1j2TCvmZtmFlEP+Z4RZNXZBuBst7mZ0/fBP7CtpPdDE+jrVx+p
D2xBOkZ7q5o/1gr9i5qbE+ntMG8Sa+bo3QVsOfHpuesL6BPZXn6vsx/OV1/s
d50yCHl7fToC9r8BpnTnzO/6AJxW5tzHmgTuZkgbdkwTeRxMw59dUD4Lugc5
MMVsAfZn6X97okQE/fpFf1M3fgZdn59iUSgGPlplrWmwIiH+//G7Rz6pPSWt
oP5qCg1rfpVFjAfWnFO2VlhB+3k+e5XeK62gfWuVpPL5KsBhbJ7sQTVgY2V7
aa025MVy5CWBurCP79e+pL8O5lPrnERJhsCCAPepA2bAZA3tCan5Cnq/Odze
cdZ20ClaP46ttYJ9zCbfwTEyzIfoBz+K84T9bQ8t2nd4gb4hbLp15Cfg6PU1
LVk+kP+0PZxHocHzMD1r1Simw75kQxG3MgD8lpExdTpBoKd9Z8tpD0Y6Ntq5
zIoNhfxM46TKNxHAU9125VejwO8QI8t0iAV98cn5W+WJqA/mdo5STEuB+dIt
yje0GMCrejoLHl4APhKfnh+dBudhmR7MM0+H/iq9GrnDGcD41syr9lng13lx
+MpiDvQ5nayXwcyDecP+vDSNQshPYtxIHmKCXzVK0YleAZx38rSWoAry2M57
iqdrIU+g+axVpgnYuYCkZMYHv24d7fdIMfgrxg2uqR2QovmL1xl+w65S1CfA
Y2pzpTvwehyvdvGSwvvK8G675A980vrPWeUYgjm4caoORbEE9JXdcap9pZA3
MDXaU3IH5muLnHN/qYT5y17sow41iDHpVo+zDBz6Dj3LKJDlS9F56s8vHuM/
Bz3TlmZW3A/7nG9tr90/DPMN0d2Pkt/DvmyLXRnuk6CHjeR7Gk2D3/RA8Gve
Auhyq3pvXl4E/xuObZDfEuzHg4p37JQA52xQEUql4P8XvXZHLQ==
           "]]},
         Annotation[#, "Charting`Private`Tag$5761#2"]& ], 
        TagBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
s9XsLZngsFW842w2+F/MeKTM
           "]]},
         Annotation[#, "Charting`Private`Tag$5761#3"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox[
        "\"\\!\\(\\*FractionBox[\\(\[Chi]\\), \\(\[Kappa]\\)]\\)\"", 
         TraditionalForm], 
        FormBox["\"Re[\[CapitalOmega]]\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{50, 20}, {10, 20}},
      ImageSize->300,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 2}, {-9.992007221626409*^-16, 1.0732155904709846`*^-15}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.835301974986709*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"40810abc-85e7-48c1-a974-713ffaf05c80"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{"flatuicolors", ".", "com"}], "/", "palette"}], "/", "us"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"DarkAmerican", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", "\"\<#0984e3\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#00b894\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#d63031\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#e84393\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#6c5ce7\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#e17055\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#00cec9\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#fdcb6e\>\"", "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"LightAmerican", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", "\"\<#74b9ff\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#55efc4\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#ff7675\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#fd79a8\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#a29bfe\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#fab1a0\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#81ecec\>\"", "]"}], ",", 
       RowBox[{"RGBColor", "[", "\"\<#ffeaa7\>\"", "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"American", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"DarkAmerican", ",", "LightAmerican"}], "]"}]}], ";"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.835212354017386*^9, 3.835212654467853*^9}, 
   3.835212820795138*^9, {3.835213008993103*^9, 3.835213010826685*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"04764d18-a189-403e-985d-311924c4ee4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"introducing", " ", "photodetector", " ", 
     RowBox[{"(", "PD", ")"}], " ", "loss"}], ",", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["R", "PD"], " ", "is", " ", "the", " ", "reflectivity", 
      " ", "of", " ", "the", " ", "lossless", " ", "beam"}], "-", 
     RowBox[{"splitter", " ", "before", " ", "the", " ", "PD"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Alpha]", "=", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"2", "Pcirc", " ", "Larm", " ", "\[Omega]0"}], 
        RowBox[{"\[HBar]", " ", "c"}]], ")"}], 
      RowBox[{"1", "/", "2"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]R", "=", 
     RowBox[{"2", "\[Pi]", " ", "500"}]}], " ", 
    RowBox[{"(*", "Hz", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Kappa]", "=", 
     RowBox[{"10", "\[Gamma]R"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", 
    RowBox[{
    "\[Gamma]a", ",", "\[Gamma]b", ",", "\[Gamma]c", ",", "\[Gamma]btot"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]a", "[", "lossRatio_", "]"}], ":=", 
    FractionBox[
     RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
     RowBox[{"1", "-", "lossRatio"}]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]b", "[", "lossRatio_", "]"}], ":=", 
    FractionBox[
     RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
     RowBox[{"1", "-", "lossRatio"}]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]c", "[", "lossRatio_", "]"}], ":=", 
    FractionBox[
     RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
     RowBox[{"1", "-", "lossRatio"}]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]btot", "[", "lossRatio_", "]"}], ":=", 
    RowBox[{"\[Gamma]R", "+", 
     FractionBox[
      RowBox[{"lossRatio", " ", "\[Gamma]R"}], 
      RowBox[{"1", "-", "lossRatio"}]]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TPDLossy", "[", 
     RowBox[{
     "\[CapitalOmega]_", ",", "\[Chi]_", ",", "lossRatio_", ",", "Rpd_"}], 
     "]"}], ":=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "Rpd"}], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"Abs", "[", 
      FractionBox[
       FractionBox[
        RowBox[{
         RowBox[{"-", "2"}], "\[Alpha]", " ", "\[Kappa]", " ", 
         SuperscriptBox["\[Gamma]R", 
          RowBox[{"1", "/", "2"}]]}], 
        RowBox[{
         RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "-", 
         RowBox[{"I", " ", "\[CapitalOmega]"}]}]], 
       RowBox[{
        RowBox[{"\[Gamma]btot", "[", "lossRatio", "]"}], "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
        FractionBox[
         SuperscriptBox["\[Kappa]", "2"], 
         RowBox[{
          RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "-", 
          RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
        FractionBox[
         SuperscriptBox["\[Chi]", "2"], 
         RowBox[{
          RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}], "-", 
          RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RPDLossy", "[", 
     RowBox[{
     "\[CapitalOmega]_", ",", "\[Chi]_", ",", "lossRatio_", ",", "Rpd_"}], 
     "]"}], ":=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "Rpd"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"\[Gamma]btot", "[", "lossRatio", "]"}], "-", 
               RowBox[{"2", "\[Gamma]R"}], "-", 
               RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
               FractionBox[
                SuperscriptBox["\[Kappa]", "2"], 
                RowBox[{
                 RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "-", 
                 RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
               FractionBox[
                SuperscriptBox["\[Chi]", "2"], 
                RowBox[{
                 RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}], "-", 
                 RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}], "]"}], "2"], 
            "\[IndentingNewLine]", "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "2"}], 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"\[Gamma]R", " ", 
                   RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}]}], ")"}], 
                 RowBox[{"1", "/", "2"}]], "\[Kappa]"}], 
               RowBox[{
                RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "-", 
                RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "]"}], "2"], 
            "\[IndentingNewLine]", "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"-", "2"}], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"\[Gamma]R", " ", 
                  RowBox[{"\[Gamma]b", "[", "lossRatio", "]"}]}], ")"}], 
                RowBox[{"1", "/", "2"}]]}], "]"}], "2"], 
            "\[IndentingNewLine]", "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              FractionBox[
               RowBox[{"2", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"\[Gamma]R", " ", 
                   RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], ")"}], 
                 RowBox[{"1", "/", "2"}]], "\[Chi]"}], 
               RowBox[{
                RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}], "-", 
                RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "]"}], "2"]}], 
           ")"}], "/", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"\[Gamma]btot", "[", "lossRatio", "]"}], "-", 
             RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
             FractionBox[
              SuperscriptBox["\[Kappa]", "2"], 
              RowBox[{
               RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "-", 
               RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
             FractionBox[
              SuperscriptBox["\[Chi]", "2"], 
              RowBox[{
               RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}], "-", 
               RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}], "]"}], "2"]}], 
         ")"}]}], "+", "Rpd"}], ")"}], 
     RowBox[{"1", "/", "2"}]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ASDhPDLossy", "[", 
     RowBox[{
     "\[CapitalOmega]_", ",", "\[Chi]_", ",", "lossRatio_", ",", "Rpd_"}], 
     "]"}], ":=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[Gamma]b", "[", "lossRatio", "]"}], "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "4", 
         SuperscriptBox["\[Alpha]", "2"], 
         SuperscriptBox["\[Kappa]", "2"], "\[Gamma]R"}]], 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Gamma]btot", "[", "lossRatio", "]"}], "-", 
               RowBox[{"2", "\[Gamma]R"}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], " ", 
                RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], "-", 
               SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "+", 
               RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], ")"}], 
             SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], 
             RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], "-", 
            RowBox[{
             SuperscriptBox["\[Chi]", "2"], 
             RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}]}]}], ")"}], "2"], 
         "\[IndentingNewLine]", "+", 
         RowBox[{
          SuperscriptBox["\[CapitalOmega]", "2"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "2"], "-", 
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Gamma]btot", "[", "lossRatio", "]"}], "-", 
                RowBox[{"2", "\[Gamma]R"}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "+", 
                RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], ")"}]}], "-", 
             
             RowBox[{
              RowBox[{"\[Gamma]a", " ", "[", "lossRatio", "]"}], 
              RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{"4", "\[Gamma]R", " ", 
          RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], " ", 
          SuperscriptBox["\[Kappa]", "2"], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}], "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{"4", "\[Gamma]R", " ", 
          RowBox[{"\[Gamma]b", "[", "lossRatio", "]"}], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}], "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{"4", "\[Gamma]R", " ", 
          RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}], " ", 
          SuperscriptBox["\[Chi]", "2"], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{
          FractionBox["Rpd", 
           RowBox[{"1", "-", "Rpd"}]], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Gamma]btot", "[", "lossRatio", "]"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], " ", 
                   RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], "-", 
                  SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "+", 
                  RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], ")"}], 
                SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["\[Kappa]", "2"], 
                RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], "-", 
               RowBox[{
                SuperscriptBox["\[Chi]", "2"], 
                RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}]}]}], ")"}], "2"],
             "\[IndentingNewLine]", "+", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]", "2"], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[Chi]", "2"], "-", 
                SuperscriptBox["\[Kappa]", "2"], "-", 
                RowBox[{
                 RowBox[{"\[Gamma]btot", "[", "lossRatio", "]"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Gamma]a", "[", "lossRatio", "]"}], "+", 
                   RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], ")"}]}], 
                "-", 
                RowBox[{
                 RowBox[{"\[Gamma]a", " ", "[", "lossRatio", "]"}], 
                 RowBox[{"\[Gamma]c", "[", "lossRatio", "]"}]}], "+", 
                SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}]}], 
           ")"}]}]}], ")"}]}], ")"}], 
     RowBox[{"1", "/", "2"}]]}], "\[IndentingNewLine]", 
   RowBox[{"(*", "Plotting", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"Rcon", "[", 
            RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RPDLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.1"}], ",", 
             RowBox[{"Rpd", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RPDLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.1"}], ",", 
             RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RPDLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.03"}], ",", 
             RowBox[{"Rpd", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RPDLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.03"}], ",", 
             RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RPDLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.005"}], ",", 
             RowBox[{"Rpd", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RPDLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0.005"}], ",", 
             RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RPDLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0"}], ",", 
             RowBox[{"Rpd", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RPDLossy", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"\[Chi]", "=", 
              RowBox[{"0.986", "\[Kappa]"}]}], ",", 
             RowBox[{"lossRatio", "=", "0"}], ",", 
             RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "10", ",", 
         SuperscriptBox["10", "4"]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"90", ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "115"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"TicksStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
       ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", 
            SuperscriptBox["10", "4"]}], "}"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Dashed", ",", "Gray"}], "]"}], ",", ",", "Dashed", ",", 
          ",", "Dashed", ",", ",", "Dashed", ",", ",", "Dashed"}], "}"}]}], 
       ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<shot noise transfer function,\\n|R| / dB (20log10)\>\"", 
            ","}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           ",", "\"\<lossy optical sWLC \
model\\n\[Kappa]=10\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\), \
\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\) is SRM coupling rate\\nno radiation \
pressure effects\\nparameters of LIGO Voyager\\nconventional detector is \
lossless\\nwith PD loss\>\""}], "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Tcon", "[", 
          RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.1"}], ",", 
           RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.1"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.03"}], ",", 
           RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.03"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.005"}], ",", 
           RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.005"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0"}], ",", 
           RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "10", ",", 
         SuperscriptBox["10", "4"]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"90", ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"TicksStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
       ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", 
            SuperscriptBox["10", "4"]}], "}"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Dashed", ",", "Gray"}], "]"}], ",", ",", "Dashed", ",", 
          ",", "Dashed", ",", ",", "Dashed", ",", ",", "Dashed"}], "}"}]}], 
       ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<signal transfer function,\\n|T| / [?] (log scale)\>\"", ","}],
            "}"}], ",", 
          RowBox[{"{", ",", "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ASDScon", "[", 
          RowBox[{"2", "\[Pi]", " ", "f"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.1"}], ",", 
           RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.1"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.03"}], ",", 
           RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.03"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.005"}], ",", 
           RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0.005"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0"}], ",", 
           RowBox[{"Rpd", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ASDhPDLossy", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"\[Chi]", "=", 
            RowBox[{"0.986", "\[Kappa]"}]}], ",", 
           RowBox[{"lossRatio", "=", "0"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              SuperscriptBox["10", "3"], "<", "#", "<", 
              RowBox[{"4", " ", 
               SuperscriptBox["10", "3"]}]}], ",", 
             RowBox[{"5", " ", 
              SuperscriptBox["10", 
               RowBox[{"-", "25"}]]}], ",", "Null"}], "]"}], "&"}], "[", "f", 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "10", ",", 
         SuperscriptBox["10", "4"]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"90", ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"50", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Dashed", ",", "Gray"}], "]"}], ",", ",", "Dashed", ",", 
          ",", "Dashed", ",", ",", "Dashed", ",", ",", "Dashed", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"DotDashed", ",", "Red"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", 
            SuperscriptBox["10", "4"]}], "}"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"10", "\[Rule]", "Bottom"}], "}"}]}], ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<strain sensitivity (NSR)\\n/ Hz^-0.5 (log scale)\>\"", ","}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ","}], "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", 
     RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.835299122099277*^9, 3.835299144876786*^9}, {
  3.835299175278569*^9, 3.835299228471072*^9}, {3.835299276673067*^9, 
  3.835299604250779*^9}, {3.835299801029831*^9, 3.835300001235983*^9}, {
  3.8353000339614477`*^9, 3.835300175148591*^9}, {3.835300234989298*^9, 
  3.835300244824089*^9}, {3.835300427312283*^9, 3.8353004276748953`*^9}, {
  3.835300621400079*^9, 3.8353006277529087`*^9}, {3.835301855355398*^9, 
  3.8353019502755003`*^9}, {3.83530198480434*^9, 3.835302016857963*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"7b650e63-8190-4f34-9e28-a2e26cf42a02"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}], 
              GrayLevel[0.5]], 
             LineBox[CompressedData["
1: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
TwasOv6r3HaeJffbK/8h/z/kbL4y
              "]], 
             LineBox[CompressedData["
1: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
3OCn1muVz9zR/w98TBp9
              "]]}, 
            Annotation[#, "Charting`Private`Tag$10673#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
moFtp5yf33WIDGbbZnt2pGVgu3mqRpyMyfA7cTXQbnsGZjuiVVNyhAxebLrw
xj0dSw/TCtK3QU7le+e7kIoRAgfPWNuSgS5dOyrYkIrd8zzn7mVHBqXz294I
p6ViFebPjiU7kEH878vRnbtSsR6qluaoExmuBke/4UlKwXjbNH+dPUWGTu7e
M/P7k7HU2oHpWC8ylEYfH7YmJGNS5YGfb3qTIbruzmmpP9cx+q3Knlc+KF+6
LdScB9exA6c1S/kCyFDFLZF4Vfg6Fi6s6X0vmAyWh0n98xNJ2KqNxmT/VTJ0
D9zleDl0BcscPKGzmUgGI5V6ZbfMK5i2ReJVxWto/nfssH1w7AoWaDypFppM
BnXvYeaVwXhsCcu6LJ9Bhllb5stJY3HYvNw/3IU8MhydF+YJ4orFEvMVve/m
k2GlvMOC0BODbSVY1nfeJkO4i4LFwawYzEvisZvsPTIE3N15lcqIwb5znShv
f4DWh9p73S8W0djX+UYjYjkZztMnQk/WRWKRp37mGlSQof2E2WZbYiQmOyXz
y/8pGYIT9T7lOURiTuOBWa3PyBBz7PGV3M0IbKxPYcK3hgyuY8IJb/UjsOGq
hEuNTWTY/HB4z8ZUGNYVblHm8Z4MermMmauzoZgjk53w5SEy3O5p0N7yIBT7
EeLslz5MBsfOgTucbqGYcJCf6uuPqD3xgBed4yGYhc+1MulxFH9Fyqzop2Bs
2La9rOs7GW5pGdAvLF/APIf6hCemyfBZTs/41osL2LrlB7+/M2R4uxzuhYVd
wKTNplUV58lwZJGsysp/ATt+kLM8fJEMvo8bnDy2BmFf1fXKNdbJUHjwy8nK
8HNYQNkhEaO/ZPj09aCbu8k5jE3Z3N/pHxm4fo2+iJc+h9EYTmpJm2QQGSQk
S1cFYh7ky+VTLBR4EUl3t1k6i83z1ZTf5KXAt9eWJ30vB2ArE2oVWwgUoPgU
5nOO+2KDTFiANpECy58bkuKf+mKVeEN1HxIFDtEysgPjfTH/w44VHykUuMpe
yh2n4YvNP02oeCZPgcXAY0cvXjuDfYv8VuGtQoHvQ3/bQp6cxhpzfgTcVaUA
/6+f3h/dTmO3q9bVP6hRwFx5C99P6dOY46zQ04OaFPiI+RtrXPHGPprvfiq7
kwJljV7yaz5eWC8l4+mQHgWyQ7bsZrP2xJ7sun1WUJ8C9flnPq5LemLXLB9p
HDhAATDJjEsc8sCM418/rTCgwIfPRdLhdh5Y68+Fp0mHKXA+9rxBkIc7Vlt/
sHK/FYpXP8PdK8cNyx42Dwy2poBdnE7T+ZNuWPCSg2a5DQVOFymscqu4YTsU
zlaS7CmgdOpkx4smV6wiKb9y/QRqT5Qgq/TbBUt5UByo6kyBiIYTRL0GF8zv
9TNNDxcKdGdMCrxPcsGU/3RUDrhRwIxIFvNRcsEEhIYC+dwpEDvW2O+z7ozN
079q6nlQgEMieHSyzRlr11tYvuBJAeWPw/wDN5yxhw5rlU9OUYDlIOzfccoZ
+w80d+xs
              "]]}, Annotation[#, "Charting`Private`Tag$10673#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
DyKYkqI=
              "]]}, Annotation[#, "Charting`Private`Tag$10673#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwV13k81M8fB3C5ch9rsbvs2sOdSs6+wrwruVKJKHLkDDnKWVK5SW5CFBJC
kihHBzmSkHJEKklKRakk5f7N7x8ez8fszs58PjPveQ3D2c/CjZ2Nja0B//n/
/9ZNV3tvH2MHi4+d+8t2kkCERz6F5zg7ZFCvypVjO4xX7HMMZIfSYsfF/3sh
484LgTPs0BWbUXoDW3XhSf/RZHZYt2OW9xb2lbaZIeptdjCx9F65i33ykO7Y
+Xl2GDfJyG/H7tjSUvB+kR1KijenPcYm8hse0V5jh6xHA9Ed2Lce7hv/uJ4D
Uhq0/TqxJ5kuE4jMAZ2WyeY92Ae+n//8ZxsHFBaEGA5ib44c/uEUwQH1ZfHr
P2G/PZ1Mk4jlAPORZxqT2AlBu/Z0JXDAo83BLp//359HbYVaJgfsHJlv/4p9
eV+KG8d1DnjuPpkzg81DNXpT3MMBZcJ/Y/5hv6+v6/gsyQnKS4IRggYkSL7t
8ydPmhMW23jfCWFvuyEra87ghJzfhboi2Fn56RENypygRi1fJWCbxfjqntfj
hExN6ywSdoOFfI2yCydsfTYsLoud9v3iFZ8qTkjcleWii8053bDWV8MJdXdW
3+phB39546RVzwkQxX0IYdtNMOTXmjlB0H3JYge2/MjNqtQ+TrBrqbQzxn7Q
/ri5do4ThA93PjqA/SXvz/iCDhcknWKN+GIfvkQycEBcICwpnnAcuzdrW2nr
Ti6Y05rQ9ceuTYvwumDGBdxq1LIg7LNxgr+lHbggkHPHxTBsYoAcJ0RwwROy
fE8CNjK1ko99wgUWvy7cL8Nms5IPHezmAlvu40UV2I8c/z5jvuCCkFNOFyqx
dwRdCmp+xQVfDga5VGMbFo62//vKBZ/TClQa/v+85t1cjglww8Dwomwn9qGi
4ELz/dxwvE2r6Ss2+abRXL4VN7StwPQ09ut6kvF3G274YFZMmfn//J7d+3He
mRve7w0Pn8V2+Leq3xbADfMxLz2WsF33xo1qZnFD4rJOleAuEpxYzKZIveGG
Cuo9mgZ2ulze244xbni5S7lfC7vGPD/f/yM36Pxui/8Pe660mNn1nRsmb0eu
6WMHW95WPsW2HtSjs8RMsUMru3SG5dZDp6z3yBHsaIcV24zj64G9xOVvKnbx
eTYqCloPKrvjJTOxH9/hGJs6tR7yn1hty8bm5udz2RG1HoJ8lpOuYJ+vlzj2
6+J66Kj65ViBnSyienrf/fUg9dn6Xjt2TqtzHj83D0j3//VYxj77qy/1KB8P
XFRa6VzDdqVvj20T4gGl+BoVDkO8X87KnDgtyQNZZ/XWeLE7/ntrOK3IAx07
DPsksf9UW8127eaB7dEtKhrYFgXGJglpPMDTtXPMD3trb73+5EUe+Ol/4mEA
Nm1FXmNHLg/o84/gHUmCr7ZcMotFPKCZ4HHiHHa4ROuc5x0eIDjwG6dgVyVt
KzQZ5oHczbFPbmHzh236y0PlBc8LmVvmsM27n9u2Mnhh//70tX/YWZQTTafl
eeHKLAysYDMba2NmNvOCcWf3hfVGeDzzW4mDO3ihJt16hxS26/GdWwo8eCH0
z/7undhNroeOad7hhSo/1rlL2Jx3FnpnGnihc8OMSAG2CUeeWtlDXlAZ3F9e
jD14dXSB8oQXcnU4Zm5hT79zjmd7zQsD+dNPOrBJNj4l3Wu8MD76pv0Ptv+e
yDGn3Xzg7hdJtTHG76+iT4PLnA/U0sQDHbFzuRkJZQf4QObp+n437JbmZo0f
9nzQObSh2B9bRG3lfNhxPjhLcytKxL4pcVIj+yIfHPCxFGrF/jLmc75njA8E
tFcn1ExIEKb78J3fRz4oWnqjrYMtcklAQ+wrH/TeRJnbsbUtbryzmeUDoexH
7ubYse1f1D9z8oPHxpYAX2xWucu7dcr8EHCtXKsS28HfRl07kB/cSufLN5mS
oL6f+CDhJD9cCStK1cIWUX9h8C6MH0xfvz+nj93629A6JoYfOgN0Tu7FlgvS
ODWQxQ/j+zz6fLG/hQg3+zXyQx4X36bb2KFnHpuWrfKDvq33S93dJBgYDR9Y
YheAtxF647uwVfR17fatF4BPl8fm92K/W63xmRcWgPdHWpAT9vbwwlQDhgCQ
shVNYrF5ok4Pvd8pAHd2kAz6sbPitziTzwuAvWKykr8ZCfbxyth0JQlAliO4
ncHmSRAwP50uANZnN1TFY5+68FlvNE8Asl9PHS3Atku+Qr5aJQBX/3aEPcNm
ZPL2KQ4KQGblwn8qe0hQWTCOtsoIwiXRo8Fz2G7051pfWYIgoDxyct1evP6v
PtiYqygIbdsvJwhhpxRlSy1vEYSuFvu3itj+JXv+NhsIgvVCj44DtvaNxioj
L0HQPZb3uxu7tS6NevCuIFidT3hTu48EsG3aqKFREAIbv0+3YDc1G/iTmwSh
x6uD/wX2vc6/HW86BIFwWjr0G/bt1/bHj7wShOs5umLy5iQoXFVq81wSBM/R
i4aXsc8atnqEbRcCFLO6+eJ+Eix3SWWM7hIC4x0x+0uwQ/cFPdQ3FYKKPZ3R
d7GDDykS1lkKwfukPvoQto9X8v0YVyFQlSdvIVn8/3nZCqXECUF0GE97AbbO
0Gzt1We4PxdPg4eWeP17LD7/1icE5XElR59j9y+s+6Y9JAT2RX7549heVFHZ
3ndC4HeQ3Yj7AN4frpszF38IwQPJkFhz7IXZY4GWBGEoMrnY9wW7QfiTBtdB
YciKNdVUssb19Oo3c/PDwuAgvu6PHra5+px3nqMwuGuSui2wv1hzlGzxEAa6
0NN7YdikfIa4wylhGFEYr+jDDlFx+FOXJww3Ba9NnDtIAi2T4bse74Xhsma/
18whEjgviYDoJ2HY22m4kccG19ubpl2NX4UhWOujIBP7k2jTO77fwpATqqBs
jW3q0x81xC4CNbca+5uxFzQbK0+KiwB501eOS7YkOPgkdvWBjgjsGbaZcbEj
gXfhtZ2ieiLwSPzFwwjsyFOP4t2QCOQmbakuwK7asEgQMhCB53G2q2+wuVN9
FBz3iMD9mWcG1vYkuHvogPm6IyJAt1Ao2O9AArEpRtGuGBHw7gy/73qEBAKP
59j840RgespnOhqbs/CJY/55ERCuTNQvwZ6z8qH+TcLje7SwdxJ7qKUhpyxL
BDKThqS9nPD7uLQvhb9MBOTTzFJOOuN6a3ImrK9LBKo3TH6/7UoCiqz5m5Ue
EfB49V//ELbYGlNH+bkIHCNMvVvC5rzb+TdyQARKn4v6G7rhvEUnBmi8FYE7
Fa7Ro9gV/yo8s7+LwBe5mXCxoyTYUvbK2l5EFCxQP7PQkwS2Ge3eDQRRWJd0
cekZduTZ6kgxcVF459zGt4zdfyC+6ilZFObKnJ8d8iJB4Lqt3FosUXj99u0U
8RiuX7bZd4W0REG0f3NLtjcJ9AStiY8Oi0JTbFXzUz8SuP/brizlIAolktVf
V7GTJzZC8BFROPz7lYXGcVx/Grm8VdxEAbp7Jwqww93vtuX4ioLDgyKe0BMk
aGsmBpyIEAWS/purOgH4/PAf6GNeF4V47cZdP4LxenPNeu9fLgotpAc9G0Lw
erSy+dF6QxQ22brlemDH/jcm4FItCuSYv3wT2O1s00bXGvH4Zo1M35zE+z+F
vYnVIwrbZ/cljoTi9Vm5pUL2lyjURHKcFz6H10P+XEPgb1EwrQ9MssJ+mVL/
pP2PKJQm1k3kYQcG6H1yXRSF9uWNcUrhuD7omNBLOAiQG5p+xzgC19unR7Lk
JAgg/PPzWlYUPg8mUyLltxGATdVMITge9zfCc2OvHgHMolarW7DjnkUMBCMC
BDwlJQmex+fhnQDZJzsJEO/3U68UuzbqYMdRMwKkw5bENwkk2MmQ4Su3J0D9
hSAV6yQSuNhVpW0IJwB7TBs1OZ0E4uYK9ywjCbDtr2LlR+wnOws/nI4mAJee
1KVtGSTYsCFdvSeeAF9IxqlT2L8Xgl56pxFguNZkzewiCaKy9chVRQRwlarQ
k80hwbX+nkLVxwTYW8e3UyYf14chh/C4JwTQX50ZS8B2f/3T8d1TAsxznF+e
x1b+QJRJ7CWAz16D+hcFON/9srvyeZgAb45270y4iuuxyPdL+VMEmOHetFOi
BOf/vYIZAiJisNcq5EBWJW63KPB3IYiBS+akjNhNnOest1jcI4qBl/Tdc6nY
Hg5Woh5kMTj3dttaYhUJfvpcSWljisFOv1rRpGoSrCVuTAzVFIOzt43lKu7g
86N7T8wXWzFojynVt39Igg8vLp6VtBcDuSH9gx+xrw+Nhhg6isGuSAFu7yZ8
3/rg41XsIgbXemYUzzTjPL2QtO+ItxhcDU7IKm3B81XoJb86IwYi7gnlEh24
nkTtrXpSKAYHv3lcPv4cn0fns67PF4mBo178AP8LfB6lvCuUKxGDOsMr9dex
H+X6ZkSV4/E6NJ4f78P77XbySVQjBmYrTsfsB0kwP9a7o75NDIba7g4Gj+D8
r7tvuHRSDDpqHs1qfiSBhkV1HOdXMWj6OmL0F1vRQ3Sr87QYvPXgiGv8hPNE
5kAO9acYBFfyd8JnPN/pg7aZC2LwfMN4oO0U3h95R0YjBIigefHXmfs/SdCz
eGLCTo0IE6nTzbqreHwiAxn3NIig1X7iGnUN10N5DQOSNhECREVy1rDzLeaL
B7YRgSd0vLFjHRmOV4S6m+4iQmbzXi5nLjKI2UZ91T5EhN8ZLd+eCZDBtjHz
B+EsEf4MvvwcLU2G+Zc9OW7hRNDgoLyOoZIhbZZzR0MkEXJHHq7F0cg4NwZl
2scRQUSFZzqFTgatfKv/ylKJoBZneqxKlgyiURJReteIcOjopJvCRvx5sxwJ
j04ivFw2MSQiMrh6vmi+10WEq/4Z1/SBDGsxPJ6Cz4ggRaMd9dqO+2s+eb+m
jwhbTMYUOnaSoXiLzZGV10SI/Dv5KNmYjPM0pSL9OxGCcpTG3CzIoP0+T+8h
QRwcKvQath4lQ93qebYvRHHw9aYRwjzIoEE92UaQFAfbhmvDjzzJoGp7wMRD
Shy0xlUr93qTAWcdKzFZcZB8PFx++gQZSJ1nvD01xWFxSNhfOowM/2455okf
Esf3ivRTMelkCO7d4wC24kB4I1ywkEGGuW/bGMfsxMH/3ICH30Uy/FQiXX90
RBxCS4Z+OuaQ4cu1FzXHPMVB9NlHHqt8Moxkb+9qCRWH10E3RNMqyHDvHGvB
54o4eDWndjm0k8GjSjngSYE47JQ/E7+5gwwSo1u+04vEQfsiI5K9kwz+OjA+
UCoOpFc/1G91k0H5j93T/6rFYX8s+wfWABkueWVd4moThwa9/L9hH8hw0opX
58oXcTgk/t6Kg4MC8tEid+anxIH7bbcVg4sCgzWSm8y/4+8f/PJ7+3oKqIrI
MzlmxeHnVinSBX4KfOnawee5JA5Tg1sd9YgUOARhrzWEJKBxf813WXkKaG/4
EdqjLgHy5zhVyGYU6DxcKbSqKQE97YSGo3vx5xM9izZvlYA3zY6/GswpEPp9
4mm6rgTEnEs76WJFgQe3XpFsdkmA6zN1jREHCoBGa90nawmgR1wzMPWngLHe
xdnVU7hd/Ua7bR4FXvlYxKqGSYBmKW84Vz4FPPOFKc5nJcBb1uVgbSEFEtbO
b38cKQGhNmyepFIK9LScTb1wQQJMs29H8NymwH5Dj02kKxIQLhw8GfWEArb7
tnlteSQBXEV/j3D8pUB67PP5g60SwDQcLONdpMDThy5RZ9slwGLtiKfYCgW2
qiRe7u6UgIn6L65bOKRAgne0161PAry6TBuzhaVgoPWseu4HCagvbYgSVZIC
M63WZXYuSdhrXLE27CAF0T7W55XWS8IqI67EylkK7hdPiZvzSoKlkab5sJsU
KIuJbb4iKAkbuF92THpLAe9PFydtCUkI+zz1UOu0FHSUc3UcU5CEhAuufAU5
UoCoJimDJpIw9LPkfe2QFJS6zvcrmUmCj9htR7E3UiBUeU3i3F5JiB8qsT45
JgWjOqtXlCwlYVdj9hOLL1Jw+lBt5Vk7SegL1wo2XZSC+gxql6KfJDzbwc/c
LSMNm/lmOc9kSsK5N3F/23ykIWt/gXF/liT8Ejq06b2/NKzmmCUqXJKEKUnX
dvaT0vBM4bpY/xVJkC19onI4UhqO7bJjKlyXhJkzCh022dJwPbwD9TXi8Qfe
/5LZKg0yf3ND5cbw/NqeH9ahUcELVoctxiVx3tI61s2iwp3zTprhE5IgUbI4
4axEBWNpxZ+vP0tCWf8WlRINKhzfftct9ackjKlW94XspsKjC8/Nl9aRYPRR
pOHhUCo40zkV+mRJ0GlfeNpklAqVnkejV+Vx7pjXvnxnggrzNV3jG5Rwri/y
XpSfokLCrrTLsRvxPaM3+zzjLxVqvWgEXS2cgwbVr/uK0nC+27pS+v97sH+W
t68RDUpMfAbCcA7b91zryaZGGshc+/r5Fc5dVwavSam00ODSstuyBs5Z772V
+9We0iDploPcd5ybZlpOnbMboUGQuHmI/RkSEAYXEhiLNNg1rialn0qCDMc9
kSF6MvDp5D/ntbskmCLW2wR2y4BcWdRsBK7rg5cueMZG0sGQZ3itn4MMbdbq
kcVxdPDwUBaU5SaDlHsE/UkiHSoU+xQ6+MjAPpU5TM6mw6Zymj0fkQzE9vuR
czfooFXR+CRdngzTYYbeJ4dwf5U/Ll/bjc+N0/T0oE0MOFp92OgxrmsGtS6G
xZMM8CK4+c5kkyHn5JmjxG8M8A30vSiZi+vWRpvt0b8YELw1YsIT1zmfcplc
52UGRD8qPSd0nQzJpZvFJAhMuPriV/3BBjJczVA00tZjwpufcYpTr7GTtTS2
pDHhnUXaPrFRMqQ68tNNspjw4U5usO4YGf6+dhU5nMeEqZM325MnyKD74TC/
dwkT/rENHFH/RoY/hloXtjUyQVyUdilshQx6UfHO1mNMIAUoPCpZI0Ne6uDi
jwkmSL9U/dy7jgLXnSwOnPvCBNlLOzUZ3BQoKxgXP/uLCWoMz77HQhSgTpjJ
/2Znwb4td3iF6fjzj/jv+bNYEHlt6LM7kwL19LB7GQosqBNfeNwkSwGhg9I+
RRtYQFvUi/RVosC9QVXBOHUWfGt9svhMDdeZJfFZxx0soGtOvZLTpICUUIbh
+C4WWF4XqD+jTQGOgJFgMxMW3LuwP2CjLgUmV6O93u1jQfyBN9OJuyig3i14
9MNhFjzoWHn60YgC5m/lvYodWPBjK71M1xTXcbklVTMnFlhT3Vy/4bo7E/Fn
xtSdBQkpcTsM9lNg31uV4UIPFjxcV0G/bEmB/hxHt9deLJCdnHm7+xAFEj0v
mM/7suDQIdH712wpUBfLnzd8nAUXutQvLdlRgE6qd8/1Z0GTrnWIpSMFiNwP
lPQDWTBbddLqhhMFJsZUbFuDWCDPyFPncKWAykMxX/kQFthkPBQ97E6BypKY
N54nWZDI9f5HjQcFHobVkRJPseBRCHsv3zEKePsIXk4MZcHcV9lKZx8KMF/+
99brNAsU7IwS7vlRYE+5sbl8GAtsez09CPhc2HTgnl8TdjIkGnoFUuAI16Ua
tTMsaK2pkm0NpkDyiZS0SOw/sn3slFMUyF9ei7mJrZj9+/2J0xTINpHmq8W2
45VofnoGv58NKznp2Kmnt15hhFOgfOZe1W7stu+2p09F4nNhMaZzFP/evOMZ
m75ofO48bHY1xlbuL9BWiqPA9g9iHBfweB0MWsUjzlNAsSNNtgTPJ63u4+9X
FygwJN+xOwvPt11xfb9qMgV02F8u2+Pn8S9XqTo+Ff9+QcbDpWAWqAiaJb9P
p0BNfZG4H36ejud8vbdepMB0Q3xyfQAL0n+lmqZmUyBWvKd28AQLOlxqFb9c
wv3nCYp1+LFg8eVLbrhMgdpOpu4FHxZsNP73MRufk4mCqi2sYyzIVNG7anSN
AsrO39SfubGgM9/xXEEJBcKFbC1GnVmwJBJp//c6BewvHd/U7MgC5z8d5OuV
FOBJPlAwf4gFWUe//l2tooAj5cjp3VYs6BrhH7LG52rySsu14/tZsKXJPJ27
jgIXheMSlPF6NlZTStBqoECIEn8IP17vDqXrIt3vUSAr1KClBfD6TK450dFE
AZNtHedvarOgkP2C5/wjCiTFB1/+oIb3V7CLk3wbBQxudWp+28iCDw7E/bH4
3H7F/tYgDO/Hf/3fjOue4vdRd9idncYCIaPHMNmNn7+cmLsdiQU6m4NVDV9Q
YEtd6qkLAizIWBsW5h6hwEBjxJ/+WSZUBFSv13pDAYUrH/7OTTPh0ef4NbdR
vP48j8lMfWTCt+f//Xg8ToGYroRHe4aYYFCY1xszRYFl50HdxTom/AHHJK5l
ChR3zXH99mOCwF3tGM1VCpzoseDf7c4EppLIGTc2KdDYnWQeYseEvaIt3o85
pcBLPsdmjzETSseZZjGCUqA2oG7zh8qEg5GTfFwyUpCW+3SLXwuur/NN7JoM
KfA52W+ieBfXU6/sRVeWFMzwGAvdK2NAtYXxVLuCFOyM3UDzTGEAD6viabSq
FKwbMwpkO8yAxjafeM4dUiD1OS0gcJoOwfrUU0oGUkBnOyWiMUoHjcYez72G
eDwRauWDvXSoqtqwO8dUCgbJTnX3btOh6NJXQRVL3N/47LhCMB0S/dwyLF2l
QDXdRHXmtww4SNnnF8Xi8S/LbWJ+oOI6ZnYHuqXgwvlJ7ZZAnIdXiHaZz6Rg
sxMxr2EPGd7Fj3J8eS4F2QlhT2/jc6ch39cyZVAKIs7UFN98RQLvrtTZ0VEp
mJCyPvxZlwSDjJeqp39KwbNPK/7aODeVvrC/eVdcGkzu2blplhMh47C8FS9J
GiQeFmUwookQPjmzbEeRBoI1R5OSIxFsl8+ZceIcYy/R6pYqTgQhxaJpC0Vp
GDRLHO+IEoOQc5NKP3WkIbFZnbbHnQDGm/xKlY9Ig8j+jJl2QxEg3f9+1NpZ
Gtaxq780VRSBL0beSpGu0uCkmJYxxysCcU6elSMe0jBxRqXeI08YOjJdauJP
SAObeTV98KYQ7Fw62DSJc9A/Owm1wvcCoN8JQ0Ul0hCqttki5hwvCFk1Z/de
lwZDrqV5LjNeGB3Xs1ksl4aT70bcBkm8ELak83Z/lTQYnIgrt63lgfubND+w
1UvD7QDpMIFv62HrRaUZh05pGJZ+XLp0jBvUnQncUtPS8G7gpYZFCQeorZWf
DfouDWGp7YWfQrAvb//7/Ic0zj1eui9MsYeOf4mek4bFN5cnyn+xg6rp866Z
FWl45LSlzn0nO6ioJaa0ilAh2e/y4eZ5NlB5zuKhilEhnejQVNjLBhu874eH
iFPhUNoV2mApGyiXTp1QoVCBU51gt/kQGyhRTA5k4RxX5Ui0sz2zhuTZucle
WlTgeZhk8FZjBckXXElr30qFnx9NqyNmlpGcriafzDYqRFeKOzWVLSPZYNel
AUQFx9X9mxdpy4g51TqqZ0IFgySU6kJYQjL954pE7aggXdy8pkNcQKSihQ2N
EVRY8Ly7v/vMH7QIRk3TUVQ4+13lnaLZH/R2LNOcFksF/wS9ll+UP+gqVTUo
KoEKctplJa2Nc0j5knvTngwqxEdKV5st/0bbUgfMPxTj3KifrOyUOYtomxkT
xOtU8NHh+UT1nEVsvb5BRuVUsO44Ha+jP4va+flyK29SoW++rin16y9kFgcT
wXVU0OJUCbli8As5nL0ZxN9JhY5HpWn5/D8RUJfW63dRIff4xFmhnh+I+cA4
93gPFZib+8fOR/xAkwsTTS9fUCE48b7vqZkZ5BdE4SkcwePxWwbJF99RuHdc
rsY0Ffj55D5uuj2Nrtk6NdsL0UD828G8TR8+IxW2WNMYERp8O/Ve/1vFZ1RX
UvGykkCDf7svjysEfkadP39PL0nQIIrAs0zk+Yy+xcaScmVoYBU99rhccxJp
1d44MaRKA+Yku/Zo6UfUfOjF8ooaDYZfKEWuC/mIjFfn4uQ0aZBQAt8yjD6i
wyb6+YH/0SBmc4Pj2tcJFD72oouwgwY7OuRnh9QnUBf/PGufJQ32ENcVNb8e
R5a3KbeCrWiwO3U/web2OHprjXTyD9IgzjfFyyJ+HP24Gm/+/TANtIx+n3HS
HkfErVJnLrjSYKLSSvv1pffI3hWGngTRgEvjVTn32Dv080FCPOTQYLakYM9Y
9WtU7t/ZlZVLg8A5YsmQz2vkrMgt+P0yDUxn+qtDNrxGgxkRaZeu0iBesWBP
ddkIavQ6mTtbQQPuHe6mvRWvUCTJvbL4IQ3MMnSGHHqG0LbeazOLzTT4sGOP
rXrGEJqLGlfd30qDw7V/RnNsh5D7D7u7Kx00QLZpaqLTL9HuDssm6xc0+MFG
/J1CeImIgdtf8Ezg5y93viw7dAA9UzpHcPxEg2TuLNVXJgModuzBgbufaaAb
c9InkzyA/pluHXH6RoObzd300/f60Shj84d7f2iwt/a/vrF1/aj0ufScN48M
qO/u/8Ve+gJpb/gn2bdRBl6Z5dFMT/ag/g/TAWubZcD9QHI7WasH+eaOPd+o
JgNjt+v+xMx1o1LeJ3EJWjIw1yIotymgGxG/XPy7E8lAg9xw6cWQLjRbrD5c
Z47br966eCGvEyXbKah/spCBg6b5v047dyJlolSKmJUMPFRo4/qt1ImcotiN
jtvIQGK8q/nxe0/QC6e+OiVnGegys/0aPd6Bqmh+WZcDZKA95Wcwv9FjZDrk
PNsVJAOVnd/yh8Qfo8kk670LITLgv/JfrfindkRd0eO2DpOBxfJbe6aj21Hi
G4Fg4RgZkF5IzRx62oY8cyqsIrNwf1UJv58cbUWyhEmiRyOe/5r8YM/rZvRz
ZFbh8X0ZGOJZ/e/4hWZ0/+qaDrNJBv5xepFHdZuRxRay09tWGchsPSnHX9SE
IszNbpr3yEDrYcLD8KCH6F1yza7/xmRgv1Mqmxy6jyqsmw9ljctAr8H9P8FL
91AQrefY7wkZQOwK6oEN95BA1ae0m19koOZBVZGnxj207RnpHWNWBr7df0sQ
1WhEPTFoWww7HZ6Rb7tOmtejmq+P22s56JBlbKqqIFmPcvaY7f3ASYekbZ3X
F0brkIu4jRNaTwd2WfnWPT51aLHYP26Bnw5RgaSUhPS7SKm9ZMBHnA5GrSk/
GPO1KJZdwNtakQ7JvwmMV6TbqPnryolzSnT483TEO/xHNfr34kdImTIduHcZ
+Cd3VKNjBQNRiyp0KBGNqhoOqkbmunl5+VvoQPGS0FhfcwtJBSt3T+rQQeim
tNeo0010wF66T1iXDt1MhQg2qZso2UBoeKseHh/7Zre+wUrEJjb7IQHhe+f1
3T1BppVo8lbj4iYDOkhJmafm6t1A1V+NlUP20CHNY+no9+3laOqFjmrhXjr8
nFLPUOYqR6wGFa2n+/D42OXNljvLUFasyA4pC+zhisKDFmXoNOuVTbM1HeRy
hdQ7jl1HhvZHz68/gn3qa8r+hhL05kXMl2x/OvhnbtI1uFWEuBstlioD6LD0
NToqJqYIqV6VEWoNpMOxT4MBcnZFKPZEo/o3nGuqdcwmz/DhdsL3s3Aaz89d
5NqpY1dRjOUB8a9RdJjQSHP4rFeIqrcxFFej6eC6r+xXNbkQvWbN6IjF4vmY
1PbnTBcg1bm4I3rxdBgYc9nwzb4Avc68fyMN38OjSxRs2Ezz0eYh5g6di3Ro
5/+kX6p/Gdk2/TiwL4sO/Hc2ne5Zy0PRpQ+OuuJ7+jnLgdDwljz0Otg6KfkS
HYxfyN9ONMTtkgmvPlyhg7uvFUXsYC4aOfTL90Ipzm2a13Z3peagqDfNeW/r
6fCxwekeh+NF1LGbzMfbSId1K8LUsg0XEc8D/5Oa9+hw1G71+NN/mSj5spxV
8gM61NwqlzqbmYly7C8IQQsdandd8k3uy0CVY9YR17roQM76pW7mlI5m9lX/
eN5Nh/PZ0kaamuloyyNeh+UeOvSeKT10njcd1RU+0LF6ToeLEt62vrVpqMWJ
Occ9SIfL1PCrwgJpaGjiu7sXzp1dAQVWNwpSEOmA0cusd3QIUdu18tMyBR1u
L9zZNkaH8X/7l77zpKD3xZZ06Q+4fevYHHdQMppyaxx5NonHI8hWEW2VhNY+
R5tt+UmHQ74L9tu0LiDFb1Jq/9hxDi4uutt5LA7Z2ZvfFOFkAF92g1C6dhxK
7Y1WVOJigJBHy68XHHHoX/V3mu16BnC2OyncuBKLngQ18z/gZ4AS/9uMO0Mx
yH3N+dM5IgPy2O5r69lHo9zj2UdyxHHu7v1UPLk5GvWOd7+plmCARuH7n3/Y
o5FWu0b/OIkBB49xxu+oiEJc57mbd1Jxe1LK69CVSFRMqMhZL88ANuL+6et3
I9CrqHdidAUGlD7OFDBKjkACfwgpWxUZ8Id+IFz/aAQKHD4d46nMAEMKJ1Kn
RKCdl/f4d2/Cv29TnkeLDkcf5H7tTtFmwJ13fzVv9p5F9P+2rkmYMECPvTvy
fU8oKtv4al7JlAFFikk/LqaHos3MkzO6uxnQKiZI7z4UivT5G0ad9zDgZtFh
5+rJU+jwqPaDqv34+zKDIsY8p1BWhPYpQ1sGXL5/XKLFKQTRgoeP2+B7Re0r
xoHfm0JQiVeIh7cdA9R27G3NXA5GdyzrD6Y7MCBXq9OWcSkY9clpa71zxveW
8Gya0XAQEujS+h10jAHdI1YD/9wDUWbT0FS8NwOGH97yvqUTiKRqgz/k+TCg
0uLmiw6hQKR8ua6vxY8Be61XrhEbApCRr1a1YCAD3Mi+KeLCASiSoOVTEsYA
/Y510kvPTqAFW83Pg0kMqPu0tmZI9EM5w046a8n4fT/ZZqbX7Yu2HkhOUkpl
wPzP+0bvI31R8J7P6mfTGbBUQRiXm/NBc+hSuEI2A37574yOeueNZmRXyKGF
DBhSus2h0eeFkq8q+RRfZUCf7PFA3XQvtJFm/ai3CM83ZjJzxNILeUvecmeV
MMBb2fdIzytP9JXXqbannAE1V7t1fL96oI8z7WYytQxQ+NW346zsURR97FeB
yR0GnBR43682445YX6i/A/A9j8YTcOJogztyHg++1FnPAF3Xa1Jme93R2IDi
5IkH+H1fW038cM4NvW5IPNf+mAGEK6YbjBdc0PPIAzWerxjgrF0dUKjnhI6w
2RHCRxjQSRm2/i7phH6ecfHPes0A88pC/qTZI4hwyl+t7S0DojYJCbeWHUEH
/FJrpMcZoL6h+NUM6Qh6fbin5vlXBhRy1DwIFnZAXiMDhMkpBjQ0H+x+/Mwe
LVm/8V+exvO3kOEpSbRH0hZTakozDIg9xisuLGCPHI15aiNnGdCz8vmAn6gd
+qhhUKu5xICSZZH5g5q2KLBmt5jZMn6fkpExlGUbxKVqGeC8wgAdRd082zYb
JL/BWT1lDa9f1f08+yxtkCcjvPYLBxNO/ebRmj55CM0IPqjNE8D3cgv1j3yv
rdG/SfU762jYjpt4N3y3RMNsKHCrDBN4mpaiyx9YojqKqYYfnQnFPifC8xMt
UcDeI3feMpkQWEv3+bzREs3cTbxTr8CE22UCCy+DLNCn6E93fLYwQT/sa7om
ZT9qz/8ZWKzGhMKk3qxLP81RUcOSxht1JsyWfVBxeWKOjnwTvWusxYQhpttG
VrA5emupf5e1jQnv//rdCKneh/qZ2XdHDJjA0Bnn47Tbg27rFgWJGDLh/nzc
n3ziHpRqfVPTyIgJb64br//yzAztSWi7e8eECaq3dRfO7DBDnb9+3E3ZywR3
b7ZjF9R3o6ZHxnW7DjGhXlOS0qNugq68tgwOs2HCePGYbMK8MQqbc9CqtWUC
qTYvcrTRGP2nGFRHt8fjP2carb/DGN1JuVq35MQEN3vhiFYbI5RRXhms5sKE
Q9++TXEwjJB/W72WpysT5ugcl59/MUSqf5/VDbkz4d+Vh0lsoYZIWHQkWNCD
CdvtfNRddhqiGeWPWgaeTOg8Yz9lKmiIegx+zId6MUHMhtenbngXuuGwWHf7
GBMIOYKniot2of8BKkR6lg==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$10673#4"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
xFy18juRcDRaYMGgjzMgM4qjrjwkDE25177pmcDzTU7scaXdOfTvS7Sp8hwD
qP2Frsk6IUh+WlLlNwcTPCLPKj46cQbZO5jdJ3AxQTb2w6qfzhmU0hstr8DN
BM4V56K8dWfQ77Lv0rbrmDD6YdXycH4g6ghoFKgXYEJafQVddjgAefxz+RxO
YYLDCQZj+5HTKOtkxpFMKhPKta6bv1I5jXrHnr0tE2XCXuJA7iD3aaTRqtY/
Js6EUFvqR/77/og7gadRX4oJagOP5Mhs/qiAVJy5To4JDzKCbk9Wn0JDUe/J
jI1MuM9/rzMs5RQSXCQla8kzYex+p7eP1yl0ejAkxkuRCbWpPrz76aeQ/vV9
fs+2MmHniSVRauxJNL7hx95kTSYUz+rYifUfR4ztWv9EjZnwTj9DMPC5N7q7
ZWhJwYQJBXVvDBlXvdE2VtCM7l4muKXEnDGx80Y7BWpGXPYxYWTX6B7apBey
G9GsLz3IBPrsuGoCvxdKP695do8tE27Wx+fVuB5F0oGDJw/bMfF+ZGM3rnQU
3fY+4+ljj82edSxkzQNVWFQfuuLIhM7Z3IpfWR6ob4OmxnsXJnx9SAheG3JH
gl0aPwOOMeFK16pakKcbSmt4PRXvw4T359is5HXdkGR54Hi2LxOOfn1kt53g
hhSvV/U9OcEEDtUP7cG1rsjwuEaZ0Gkm/v4NlHYjuKJIkobv7VAm9P58QpF5
7oyWbdW/vLzEhAUB6OcUdUKZg87a/5KYINbnuPqj2xFpWSZdUkhhAn/ul9WL
0Y4ocN8X1bArTGi7sUhoWXRAC+haxMYMJtjzW1lwjtqjmfWrEsF5TPiPeUw1
vN8WJeUr+BbkM4G1xpd5PtUWbZG2buq9yQQ+69pOcStb5CP2wEP2NhN2Gd1b
xzZ8GE3yOZd3FzFh+W0Tz8UpG/RpptVUppwJz+asvpzecAhFH/txw7iCCSG/
3H+tn7VGsl+lfvpXMuFAkdAmq1pr5DIWeK2zmgkyt6g7lA9Yow8D8hOn6pmg
qBPgXR1hhYZrLoa3tjHBmpny6d+yBXoeafnQa4gJNcbW1go7D6IjbPakiDdM
aH/q8dlf/CCaO+fqlz7MhIBH+mbEn2aIdNZPpeUdEy633RrRKzJDlidSHtLH
mDC7krfFQ8IMDdt1P3w+ycTnU3rvHsJ+5P1mgDQxxQSezXoWV3r3oRXrt35/
vzHBbO8i9filfYhuPqWiMIP7K/PTrk9wH3Iy4i2PnMf9Fep+tJ5kij6pGZSr
r+Dx/jIvvaRugk4/3Es2/cuE6vWha5V/jRG3koW/yyoTTCy5Tv5sMUZym1xU
k/8xYc1fsHrcwhh5MSPKv3KywKg/jx5w1gjNCNWXZwuywPj5CjNqeA/6PaFa
wS7NghuU2MDY7/pokA2d1pJh4e8yS03Ox/qoimaidoLBgrw1pYili/rIf/+R
incsFmx5uJOhu1UfzVRerKjeyALFp6Mn1wfuQp+jP1f4KrNAvFhhOoimh1pz
504XqLBAu32i6O0coJs1K2pvVVkwUMDOVtAB6Mg0sdJIgwV/M29dcQ4E9M5i
Z6WsDguOLFcYfStDqJ+VUfnGgAVTqquGR+13oP90bwYQ9rDAVNDYnI26A6VY
31c3NGRBRUfHRcNeXbQvsaWywpgFw4/6pt7s0kWdP2Yrk/ezQKwsLmtUVQc1
NBlV7bZhgcr4Bm2q2naUM2wRGHqYBWs/WB/7lrRQ6IKjRrktC7hE2z/L1mmh
7fIBVQwHFkREDxpE7tJCFcn5VSvOLGjae8CQ3VYTpRaVBKq44utpcef1mJrI
r6Vaw8uNBZxzlbyCkxpI6VdP1WsPFsxan6jWDtZAIsQ3gUKeLCC979W/rq+B
ZhQ/aRh4sSDu6ZOJSCEN1G0wuxTszYLN3ndtvw+qo3uOf6r+O8aC0cPrHIZv
qqP/AZWpR5g=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$10673#5"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
/geDbPGO
              "]]}, Annotation[#, "Charting`Private`Tag$10673#6"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
Cz1x3qh57ksFIY8s0y4yF/oflnj5cQ==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$10673#7"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$10673#8"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJxF0HlI0wEUB/A5bcy85jSvNZ0zTZTMudw0DSU0/Vlz0WG60Nw6vBrWPAhZ
hTNFo1pmpiSDVDI7afnbTxal4hADtbxwmoIGuaTDlYQ6+6MD4r0Hj8fnjwfv
fQMVxYdO02k0muRv/5v9Ea1v9UX0RNr/YjFDtMxz6JwPj6QnStG2BnLU+SI6
0jY4nncDrTMtT3H16AuZ8fN1q+idGrNVXmkPrv/WqFM+cwAnpB0NqRncBD6/
0eTHmWWAm/sVLU4MJthJHbHG5DqCVRLNvHz/ZrxflSUUlzqB79QKFL51zuB+
qp57zOAC3j210tU64goWEWZD/oIb2ONzYFtyNQss6JzOyGa5gwnVxBj/ATrI
otWExLHB7ePD9yIH0P5DkuolmQf+Hy81d1jQMuNtK/uSJ1i80LLnNXsL+OXl
IJtShxaHWyuGhV64L40rFPShE7iEdpLwBges3a0InkffJ5QT6kIfcHBn1Uql
nS847/nxlIFGtFRAOrrx/DCPnoO3GBTaaFLWOuzlgO1LDpCJQ+jUiOKOsNyt
YKGCzeB8Qfu02cKNlVxwu0zem+3qD/7+6mptYjNaHL7uPbYjALyNbfHMN6Jr
6M5nM0J54NnR6qUmFbpqtrdlrhsd+pUTtU4PBPNiY357EWibLPrT5HX0O82R
FwXT6HWLkLTz54PNtITSmAA05Ze2q5iHLknPJef46GXDNbJ7O3rxyiKpFKDH
+U2GmSS0Pr6tjLUPfTPjaXRKClpy1WQgCfSbH1aDNh3d05dKJWeide8Pl6uz
0OqfOaIuGTo2tIziZaNJbSv1S45uePikPOokWmXqFhWcQkeujVBTZ9Bu7jPl
Lvno5bCPoqQC9HCSdbWiEP04Z4PSF6H/AEd9/Qc=
              "]]}, 
            Annotation[#, 
             "Charting`Private`Tag$10673#9"]& ], {}}, {{}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, {}, {}}, {Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> {2.302585092994046, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{90, 10}, {1, 115}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{2.3025852339686432`, 
            9.210340231001586}, {-1.9286549331065747`*^-15, 
            13.777024368842447`}}, {{2.3025852339686432`, 
            9.210340231001586}, {-1.9286549331065747`*^-15, 
            13.777024368842447`}}}}, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {2.302585092994046, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"shot noise transfer function,\\n|R| / dB (20log10)\"", 
             TraditionalForm], ""}, {"", 
            FormBox[
            "\"lossy optical sWLC \
model\\n\[Kappa]=10\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\), \
\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(R\\)]\\) is SRM coupling rate\\nno \
radiation pressure effects\\nparameters of LIGO Voyager\\nconventional \
detector is lossless\\nwith PD loss\"", TraditionalForm]}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{90, 10}, {1, 115}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{
             Log[10], 
             Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
            All}], PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}],FormBox[
        FormBox[
         TemplateBox[{
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Rcon", "(", 
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ")"}], ")"}]}], 
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"RPDLossy", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                   RowBox[{"lossRatio", "=", "0.1`"}], ",", 
                   RowBox[{"Rpd", "=", "0"}]}], ")"}], ")"}]}], 
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"RPDLossy", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                   RowBox[{"lossRatio", "=", "0.1`"}], ",", 
                   RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], ")"}]}], 
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"RPDLossy", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                   RowBox[{"lossRatio", "=", "0.03`"}], ",", 
                   RowBox[{"Rpd", "=", "0"}]}], ")"}], ")"}]}], 
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"RPDLossy", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                   RowBox[{"lossRatio", "=", "0.03`"}], ",", 
                   RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], ")"}]}], 
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"RPDLossy", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                   RowBox[{"lossRatio", "=", "0.005`"}], ",", 
                   RowBox[{"Rpd", "=", "0"}]}], ")"}], ")"}]}], 
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"RPDLossy", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                   RowBox[{"lossRatio", "=", "0.005`"}], ",", 
                   RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], ")"}]}], 
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"RPDLossy", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                   RowBox[{"lossRatio", "=", "0"}], ",", 
                   RowBox[{"Rpd", "=", "0"}]}], ")"}], ")"}]}], 
           RowBox[{"20", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"RPDLossy", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"\[Chi]", "=", 
                    RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
                   RowBox[{"lossRatio", "=", "0"}], ",", 
                   RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], ")"}]}]}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm], ",", 
                   TagBox[#3, HoldForm], ",", 
                   TagBox[#4, HoldForm], ",", 
                   TagBox[#5, HoldForm], ",", 
                   TagBox[#6, HoldForm], ",", 
                   TagBox[#7, HoldForm], ",", 
                   TagBox[#8, HoldForm], ",", 
                   TagBox[#9, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}], 
              GrayLevel[0.5]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$10769#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
/A9akLpq
              "]]}, Annotation[#, "Charting`Private`Tag$10769#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$10769#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
QLdCJk9kBxf+B56vZzw=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$10769#4"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
/h/CZBOE
              "]]}, Annotation[#, "Charting`Private`Tag$10769#5"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
MBsO6K4MYaEL7OfK77ixQdWkXC+gmQP/A4CrsXc=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$10769#6"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
Wc+c1GncDhJgPyE+SjpwV+q9eF8JCDVxMTj4//VykUhLkICvNvafotBGL37e
vfRIAo5eyY47Ssa///yTr90S0HVTdoB0zxz3V4MXElCydt4oFr1LnqryuF8C
um8MTpI+77syY/67BJjsDNp1DD33c/d+B5okmDde3ZVAnpeSX3T5t0nCjrOl
NSfJenrpq53ddvQj58WpZL3QmdqT4yEJ7+uDU0gPO/Je0faXhLV10x5pZL7m
KUu7H5QEh9TtYqfQB5a5T1fkSAL9kmhUBlqf/bLc/70kSHyPvZuD9v5NAeoX
SRj32qV3gay3t2w6qkck4XXlSCXpL9S6fpFJSTB6XlqXi7YJ7Il7wUOBq4di
ey+S89ervhkhTYHXJyqJy+ht7cf/3TeiwGjiFZVb6D35heuoJhSo8PlZQzr2
YEOinykFPAW+by4m6+PSeZqEBQU0380fvU2uZ3qgmsdGCoynhI6WoMudtthx
e1LAzrqgrwItNapcsD6eAlJhk/aNaLHWKa6QBAoITmpPk+bLb/fIS6KARrzy
uSby/NoaKP/rJAVyxhnvm9EvGqvO/XeWAiE6QRFt5H5k26aJ/keBj1HJnZ1k
vWXHRHd34PMm5rleogkVu7d/uygwOPCphrTUAstI8wkFlj/MCntFvq/8wa/Y
XgpkcfuOv0YPKtFDdd9RYPb01cF36KLZooCscQrUlORwfUJr//fK0Y1ChVb5
ilff0S5nWvZU0ajQkH6rfoJcn0N3YqWkqaB0tOLaDzKetiQWP2RSoeIbd9Qk
ej+3oYD+YirwfypY8YusXy5Z5RL6VBgO0u78hzYRd6Q3bKdCXsXMRwkZDuyY
NdOUc6dC0qGSb5Lo1E/LIdyTCtrB139T0P3V/HuW+VEh5L4jUwp9ZEd587m9
VPiT+dRHBt1cTw8NPkqFKxkZ+kpodkhvN+saFRKHnfpXoWV9z74PuU6FthwB
SV308Fbn7003qNDdzTDTQx9fPSDmc4cKJ8DvugG6hWvMqrCaCpyxoWRjNKTx
1C3uokLo6OxpS7T+Te0ilR9UeEU4Nm9HC+RNVe2fpEJJ9oXFbujnaZXtLdNU
KF4TE++O3h9q8sV3ngp3AuibvNAlRmylK7w0eLL3yc8d6GUPPc8uYdDANkkt
JQS9eDAtVnUNDeyXbhU7QT7vtdCNTSY02Cm/NDEFnfDoaG+4KQ0O3M3lT0WP
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
JocNN9znK0p2s6DcuapSAf0/5zg35g==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$10769#7"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
k0bfdJotL/Zmw4Ry6o3gBg78D2GUrOA=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$10769#8"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
/a64GcKBGN3T85XR/wPcNyZW
              "]]}, 
            Annotation[#, "Charting`Private`Tag$10769#9"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {2.302585092994046, 51.21157348221172}, 
         FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{90, 10}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{2.3025852339686432`, 9.210340231001586}, {
            51.21157348221172, 57.0800259820388}}, {{2.3025852339686432`, 
            9.210340231001586}, {51.21157348221172, 57.0800259820388}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {2.302585092994046, 51.21157348221172}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"signal transfer function,\\n|T| / [?] (log scale)\"", 
             TraditionalForm], ""}, {"", ""}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{90, 10}, {1, 1}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{
             Log[10], 
             Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
            All}], PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}],FormBox[
        FormBox[
         TemplateBox[{
           RowBox[{"Tcon", "(", 
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ")"}], 
           RowBox[{"TPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.1`"}], ",", 
               RowBox[{"Rpd", "=", "0"}]}], ")"}], 
           RowBox[{"TPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.1`"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], 
           RowBox[{"TPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.03`"}], ",", 
               RowBox[{"Rpd", "=", "0"}]}], ")"}], 
           RowBox[{"TPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.03`"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], 
           RowBox[{"TPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.005`"}], ",", 
               RowBox[{"Rpd", "=", "0"}]}], ")"}], 
           RowBox[{"TPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.005`"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], 
           RowBox[{"TPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0"}], ",", 
               RowBox[{"Rpd", "=", "0"}]}], ")"}], 
           RowBox[{"TPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}]}], ")"}]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm], ",", 
                   TagBox[#3, HoldForm], ",", 
                   TagBox[#4, HoldForm], ",", 
                   TagBox[#5, HoldForm], ",", 
                   TagBox[#6, HoldForm], ",", 
                   TagBox[#7, HoldForm], ",", 
                   TagBox[#8, HoldForm], ",", 
                   TagBox[#9, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
wzNIUhJ9V36nyR0/KfRda785N7hk0HfneCbya8ii78Z+6K6Uk0ffleo29m9V
Qt9VSQutmqqKvlv4c6twnyb67q9X3xoljdB3hasc55hYo++uflufGeKKvmu4
jGv+OR/03dnSz6/9dkXftROb8eigDvruCZ+6Bs553yiXZ1KkP8B3v564uYn0
B/iuaIqCOekP8N1sO+09W+nou66vH2eF0dF35T/+erqdjr47EeKsEkdH3237
sPZREh19d8uYw759dPTd1U1L5p2go+9yrVuUc42Ovhu8ljfoCR19d3RjslUb
HX1X6kS2No2Bvqts1rfLiIG+G7Z1351EBvrud+uPZu0M9N0ebxm7FeLou+M/
Pr+ZEEffrbuSmlwngb5b6yr/eboUx7xv7L7W/dLou5GarHN756Dv+iorr3ef
i757YPnp7Q2K6Lur3nLVpMxH362036Q6UwN990hJlz35eSrwXR1ticsTTPRd
hlTpRlsn9N2ttyduWHuj71ZErffetQJ9d1j+g5nvUvTdeK3T/Fs55n1LZI7e
Jv0Bvmt7ZMSO3E/Bd6vizriS+yn4rpmK9wDJj8n3Pf/5uzeCjr47vPKawQ46
+m674KyCeDr6bjTd1Z/Mo4Lvbpj30+4wHX134dKYgPN09N3SJzbvi+nou30e
mvve0dF3F5zsUhqmo+/K8/3MkGWg7x75skrWh4G+22viNXyDgb77Y1Z8B0Mc
fXfVg38DeeLou4saGJtXS6Dvvp/ScHSNJPqu9WHWhlIp9N3dcz4kbJdB3416
nCPVIou+O+W3Fu2PPPpuxWMT49/K6LsXEgZWnVRD39WMrNf5rI2+Gzz9/c8A
D/Rd+t1lps980HdndlovrHZA392h9bCbc943Z1bkL/I8Bb6r62prRPIAfLcz
QmcqyQPwXWtVhhHJA/Dd4SniciQPwHfT5o3qkDwA353zN9orlo6+G8SlcH03
HX13ZI7/0r109N0jrxyscujou3MfWJlfpaPvPiiyXVdKR99dwlP3q4mOvvvs
7toGbgb6bvGNxw3aDPTdSj/J01EM9F2jD1J3axjouzqsaj9rcfRd/Xi5kB5x
9F1GidGWOxLou4uU+YKaJNF3i7/4VK2URt89c+bRKvM56Lt9856Ejsqh73pV
xBavVETfvT/LYFmNCvru0PTVchqL0Hc/Chp5Guqj76q3P/q7yRx9V8Vixf1r
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
kI4PPL5g6wVh4Q/jAwAJJ3Z1
          
          "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[1, 0, 0], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{4341, 4368, 4369, 4345, 4347, 4324, 4326, 4319, 
                4323, 4318, 4317, 4316, 4315, 4314, 4313, 4312, 4311, 4322, 
                4310, 4333, 4327, 4349, 4346, 
                4348}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               GrayLevel[0.5]], 
              LineBox[CompressedData["
1:eJwV1Hl4DgQcB/CFzQ7nDmxjzDFL62AoiSJJqmGVdJBcFdkqikp0KCFUQjfd
d6QoikqXcnYpoajcUeiktj6/Pz7v9/t+3z3PfnvfPW/+oPLSsqMSEhLO8xDZ
0MNO+Tq3UkIxJ9qrsFZ/hKuoQiPbLvkGt9GLtpxkr8o6/VGGU5U82265iNvp
TTs62KuxXn+MEVSjsW2PXMwd9KE9J9sT+Vx/nKtJpIltr3yTiZTG7XS0J/GF
PpeRJJFv+0W+xZ3xPsTtnGKvzpf6PMqoTlPbPrmEuzg/bqeTPZmv9CcoJ5lm
tv1yKZO4IG6nsz2Fr/UnuYYUmtt+lW9zN33jdk61p7JBf4prSaWF7Tf5DpO5
MG7nNHsa3+hPcx1pFNgOyGVMoV/cThd7Db7Vn2EUNWhpOyiXM5WL4na62muy
UX+W0dSk0HZIvss9XBy3c7q9Ft/pz3E9tTja9rt8j2lcErfTzV6bTfrz3EBt
Wtn+kO8znUvjds6w12Gz/gJjqMMxtj/lCmbQP26nu70uW/QXGUtdimx/yQ+4
lwFxO2fa0/lef4kbSedY29/yQ+7jsridHvYMftBf5iYyOM72j/yI+xkYt3OW
PZOt+ivcTCbH2w7Lj5nJ5XE7Pe1ZbNNfZRxZnGA7Ij/hAQbF7Zxtr8eP+nxu
oR6tbf/KlcxicNzOOfb6/KQvYDz1aWP7T37KbIbE7TSg2GsV8jPmMDTuJJu2
XquUq3iQYXETObSLLx5Wi4e4In4/uTSkEXk0pgn5VPhwm8pmNKcFBbSkMP6v
4n8lPn8q/WxRfFbx/sd7Gu9T/O20j+891ugPcyXnBlsDftZfYwIlnmezXV9I
Lz2HHXpvmUsf2nj+P78QkPA=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$10868#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1GWUVWUYgNHL0CEIIp3SINIh0iFgSwmC0l0GgpTSjXSXpDRSUird3d0p
IB0CAu5v+WOv93ufc2bWzJlzJ2ODtlXaRItEIkmjIpEqDk/NsZTkln0OvUgf
PRL5Q2vIa+zRqvLMeRyluG2fS28yuP9PrVHU/997r1aNf53HU5o79nn0IaP7
12qNeZ19WnWeO0+gDHft8+nLG+5fpzUhGfu1GrxwnkhZ7tkX0I9M7l+vNSU5
B7TPeOk8iXLcty+kP5ndv0FrRgoOajXDg9In28vzwL6IAWTRN2rNSckhrRbR
9Cn2Cjy0/8pAsuqbtBak4rD2OVH6z/Z3eWRfzCCy6Zu1lqTmiFab6PpUe0Ue
25cwmOz6Fq0VaTiq1SGGPs1eiX/sS/mJHPpWrTVpOaZ9QUx9ur0yT+zLGEJO
fZvWhnQc174klj7D/h5P7csZSi59u9aW9JzQ6hJbn2l/n2f23xjGm/oO7Ssy
cFKrRxx9lv0D/rWvYDi59Z3a12TklFafuPov9g95bl/JCN7Sd2nf8AantQbE
02fbP+KFfRUjyaPv1r4lE2e0hsTX59g/5qV9NaPIq+/R2pGZs1ojEuhz7Z8Q
YY02mnz6Xvt3ZOGc1phX9Hn2T4nG79oY8uv77O3JynmtCQn1+eGzTBR/aGMp
oO+3dyAbF7SmJNIX2KsSnT+1cRTUD9i/JzsXtWa8qi+0VyMGa7XxFNIP2juS
g0tacxLri+zVick6bQItSOLar1oNYrFem0hLXnNtsfYZsdmgTaIVrQn/tJK6
Z4lrNYnDRm0yhfVD9k7k5LLWltf1pfZaxGWTVko77dyTAkzRimiHnTuTK7xr
9uvmUK64XsF+0bk/b4e/jf22OSq8r64nsy9z/jw8J+d7ZrzwmXC+Zv4Ufmbn
R+Zm95d2PuP8hdkrPA/zgVnfLBjeLfNvs645Inxf8x+zQfhf4euLmkfsdcwu
4Vmb98165pvh3TdvmF+aw8Lvbz42r/rad50vOQ8Iz9r5oVksvD/Od8zR4TPl
vuT25c61iR8+r/a/zCFscb2M/axzbwqF99t+yxzJVNffth917kru8Pmy3zSH
c831ivbLzgN5J3wutRTab+H3IgFbtbLaOec+FGaaVkw75vwDb4XPSWI/m15J
v2IfRPHw2dVSaivCs+YVtmnltPPOfSnCdO0d7bjzj+ThutaOVPrK8CxJyHat
vHbBuR9FmaEV1044dyMvN7TvSK2vCn9LErFDm0kJ/aS9O/m4qbUnjb46/C15
lZ3aLDqQ1rU14T0hMbu0X/iejnSiM12IeCZdzR/4kW50pwfpfJ/fw/tEEnZr
sympn7L3ID9/a5W1q86DKUFV+11zTHg3nJ+YDc2e7v0PlMALMw==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$10868#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwV02WUVlUAhtGPGbq7G5Hu7gYRkRREsZDuTimDTmnp7pTu7k7p7m5Ewn1/
7HXO+9yZWcxwv3QN2tRsHSEUCsUIC4UahodCkSKFQrMjhkJV+WhvYCxZ9f1a
ez7hitaIyPoc+0tCbNTGkU0/YHcgI1e1xkTR59rViMAmbTzZ9YN2Rz7lmtaE
qPo8uzphbNYmkEM/ZHciE9e1pkTT59s1CGeL9hc59cN2ZzJzQ2tGdH2BXZOI
bNUmkks/YnchCze15sTQF9q1iMQ2bRK59aN2V7JyS2tBTH2RXZvIbNcmk0c/
ZncjG7e1lsTSF9tfEYUd2hTy6sft7mTnjtaK2PoSuw5R2alNJZ9+wu5BDu5q
rYmjL7XrEo1d2jTy6yftX8jJPa0NcfVl9tdEZ7c2nQL6KbsnubivtSWevtyu
Rwz2aDMoqJ+2e5GbB1o74usr7G+IyV5tJoX0M3Zv8vBQa08C/W/7W2KxT5tF
Yf0fuw95eaR1IKG+0q5PbPZrsymin7X7ko/HWkcS6avs74jDAW0ORfVz9q/k
54nWicT6avt74nJQm0sx/bz9GwV4qnUmib7G/oF4HNLmUVy/YP9OQZ5pXUiq
r7V/JD6HtfmU0C/af1CI51pXkunr7J9IwBFtASX1S3Y/CvNC60Zyfb3dgIQc
1RZSSr9s96cIL7XupNA32D+TiGPaIkrrV+wBFOWV1oOU+ka7IYk5ri3mF1J5
tklrRBJOaEvoSWrPNmuNScpJbSm9SOPZFq0JyTilLaM3fUjr+Va9Kck5rS2n
jH7VHkgxXmt9Sadvs5uRgjNaZe2u+0jKsUIrq11zH0Tx4DNqv3RO5o3nX9qP
3MfyWfBO22+dM4L3xvP09nb35sH75f7emZJa7s+dE4P/N/cIwbvs6z933gv+
Bs4/g3fG+TH4fmf54DPpfBP8ns5pwf+JM5wWwWfE95dzXg/+vs7BwTvq/BD8
ns4SzjrOV8Hf0TkleAecYfzre6s5H2vjgnfPPUTl4HPn/M85M3i3fV0Ge4d7
C1JR237hnMRZz6vY991HUYF6wc93Tmel5+XtG+5DKEld+7VzKm89r24/cR/P
58HnQ/tE2+nektSc077QHriPpiKrtAraTfehlCI8nn+7XkN/ak+gSvAZ0jJq
u9xbkYbzWlXtofsYKrFaq6jdch9Gad5p/fhU3223Ji0XtDVU0m/bwynDe60/
mfQ9dhvScVFbywAye7ZXa0t6LmnrGMggBjOEoQwjzO813DmCkfzJKEaTxc/a
52e0IwOXtfV8pt+xR1CWD1pN7Zn7X3xBffudc1bw+XWPSEvG+Nr/AemuDJQ=

               "]]}, Annotation[#, "Charting`Private`Tag$10868#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GOglmcAx+G3ZS3btm271pYx1VBty7a5tmXbtlu2bdvGcrueD1f3/f+9
55xO5zxvqRq3rNEiTCgU+uyP5uFDofARQ6F5EUKhmkRghzaVTPpBuyOZuaO1
III+365FRHZq08isH7I7kYW7Wksi6gvs2kRilzadLPphuzNZuae1IpK+0K5D
ZHZrM8iqH7G7kI37Wmsi64vsukRhjzaTbPpRuyvZeaC1IYq+2K5HVPZqs8iu
H7O7kYOHWlui6kvs+kRjnzabHPpxuzs5eaS1I5q+1G5AdPZrc8ipn7B7kIvH
Wnui68vshnzJAW0uufSTdk9y80TrwJf6cvtbYnBQm0du/ZTdizw81ToSQ19h
f0dMDmnzyaOftnuTl2daJ2LqK+3vicVhbQF59TN2H/LxXOtMLH2V/QOxOaIt
JJ9+1u5Lfl5oXYitr7Z/JA5HtUXk18/Z/SjAS60rcfQ1diPickxbTAH9vN2f
grzSuhFXX2s3Jh7HtSUU1C/YAyjEa6078fR19k/E54S2lEL6RXsghflP60F8
fb39Mwk4qS2jsH7JHkQR3mg9SaBvsH8hIae05RTRL9uDKcpbrRcJ9Y32ryTi
tLaCovoVewjFeKf1JpH+r92ExJzRVlJMv2r/SXHea31IrG+ym5KEs9oqiuvX
7KGU4IPWlyT6ZrsZSTmnraaEft3+i5J81PqRVN9i/0Yyzmtr6E8yr23Vfic5
F7S1DCC517Zpf5CCi9o6BpLCa9u15qTkkraeQQwmpdd36C1IxWVtAyX1G/bf
lOKTNoRU+k67Jam5olXUHriPoRIbtVLaTfd/KM1nrZr21H0iXwU/Xy21tsu9
FWmoYb9yTuOq1yvZD93HBu9b98/OytRxfxs8G85ZwXvI+QVNg9+pzyvtvBU8
y85hzobOT8Gz4SzjrOX8L3gWnTOC96wzDE0IBd+f81nwbDsnBf8HBJ3q7vWc
751zgveie1iG+jvTOHdrrWng/tGZlprur53TuebjKtuP3MdRhbr2O+dsNnm9
jH3bfThlqW2/cc4kDNXt587JfB08Rz4nrbbHvQ3puK5V0R67j6cqm7Wy2h33
EZQjfCw/t+Dr6C+cU/gm+L372HTaXve2pOeGVlV74j6BamzRyml33UdSnrDB
711Pr+9zb0cGbmpbKa/fs0dRgXAM0zPo+93bk5Fb2jaGM4KRjGI0YxhLON//
OOd4JjCRSUwmo693wNfpQCZua9upoN+3R1Mx+BkE/2btpXNq8AxS3/7gnEsj
93A0Y4rP/x8VDgxy
               "]]}, 
             Annotation[#, "Charting`Private`Tag$10868#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwV1HN8XXcYwOGbKrXt1LY5q26HzlvnIqltb7Vt21ht27admuue88eT9/d+
z7lI7ucmol5U7ciwUCgU7Uf98FDoWdxQaBxVCGO9Npb08UKhDfZIcnBJa8Bz
5/FUJQYbtHFkcP9GexQ5uaw15IXzBKoRk43aeDK6f5O9Mbm4ojXipfNEqhOL
TdoEMrl/s70JubmqRfLKeRI1iM1mbSKZ3b/F3pQ8XNOieO08mZrEYYs2iSzu
32pvRl6ua4154zyFWoSzVZtMVvdvszcnHze0JvznPJXaxGWbNoUI92+3tyA/
N7WmvHWeRh3isV2bSjb377C3pAC3tGaE9On2z4nPDm0a2fWd9lYU5LbWnDB9
hv0LErBTm04OfZe9NYW4o7Ughj7T/iUJ2aXNIKe+296GwtzVWhJTn2X/ikTs
1maSS99jb0sR7mmtiKXPttclMXu0WeTW99rbUZT7Wmti63PsX5OEvdps8uj7
7O0pxgOtDXH0ufZvSMo+bQ559f32DhQnWmtLuD7P/i3J2K/NJZ9+wN6REjzU
2hFXn2//juQc0OaRXz9o70RJHmntiacvsH9PCg5q8ymgH7J3phSPtQ7E1xfa
fyAlh7QFFNQP27tQmidaRxLoi+w/korD2kIK6UfsXSnDU60TCfXF9p9IzRFt
EYX1o/ZulOWZ1plE+hL7z6ThqLaYIvoxe3fK8VzrQmJ9qb0eaTmmLaGoftze
g/K80LqSRF9m/4V0HNeW0o2kri3XfiU9J7RldCeZayu038jASW05PehJctdX
6r+TkVPaCorpJ+w9qcBLrRcp9H/tf5CJ01pZ7bxzP95npVZcO+nci4q80ipq
l50H8TG9tZTaKuc/ycy79uvmMM64Xs5+wbk/VZyjzQ/40Pl28P02R5nVzcfB
9yt4fx5Xwjxlr2X2Nj8zHwTfb7NS8D7Nm2Ydc4RZzXwUfJ/N1x5fybxir20O
NquaD81PgvfufNccQw3nJ+bfHpPKebXzX3zqfN/MwnvON8zhnHVfeftF5wHB
78FH9jvmaFa5XtJ+OnhOKge/r/2WOZI3rle2X3UeErwO/2iptTXO9cnKOa2C
dsl5YPAarNZKaWeCx/AO4cn8L9b7kMa1tVoDIjivraG0ftbeJ/h8eKv1Ja2+
zt6QbFzQ1tKP/gxgIIMYzBCGBv97vOYwczgjGMkoRpPOc673XI3IzkVtHWX0
c/a+wd+TUPD+tWvm0ODzDT4b+z1zLDWdn5p1zTEe/z/wdgqu
               "]]}, 
             Annotation[#, "Charting`Private`Tag$10868#5"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.772079, 0.431554, 0.102387], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GN4nAkUBtAvdZIqtbHuGtVa7Zpd1m1qJfV2a9u2bdu27abu1nb3fD9O
733fuTPPPDPT5I2NLxYXEQRBgn+KRwbB4aggaEN+rsjT6MJjeRx/koYduhIc
sbelAFfl6XTliTyev0jLTl1JjtrbUZBr8gy68VSewN/EsEtXimP29hTiujyT
7jyTJ1KcdOzWlea4vQOFuSHPogdBdBBM0pUgPXt0ZThh78j73JRn05MI95N1
JcnAXl1ZTto78QG35Dn0IpH7KbpSZGSfrhyn7J35kNvyXHqT2P1UXWkysV9X
ngR7Fz7ijjyPPiRxP01Xhswc0MVy2t6Vj7krz6cvSd1P15UlCwd1FThj78Yn
3JMX0I9k7mfoypGVQ7qKnLV351PuywvpT3L3M3XlycZhXSXO2XvwGQ/kRQwg
hftZuliyc0RXmfP2nnzOQ3kxA4l0P1tXgRwc1VXhgr0XX/BIXsIgotzP0VUk
J8d0Vblo782XPJaXMpho93N1lcjFcV01Ltn7UIQn8jKGkNL9PF1lcnNCV53/
7H0pylN5OUNJ5X6+rgp5OKmrwWV7P77imbyCYaR2v0BXlbyc0tXkir0/XxOw
UjecNO4XytV4jgRdLa7aB/ANEazSjSCt+0VydZ7ntC6Oa/aBfEsiVutGEuN+
sVyDFziji+e6fRDfkZg1ulGkc79ErsmLnNXV5oZ9MN+ThLW60aR3v1SuxUuc
09Xhpn0IP5CUdboxZHC/TI7jZc7r6nLLPpQfScZ63VjqcVsexk8kZ4NuHPW5
Iw/nZ1KwUTeeBjTkrm4EvxDJJt0EMnofy+V4XuGCLqduvf0f3g6n7p45kl+J
Cr9TN5vNJmz2eDZ5jb0+r9n3mm+En519u5nfbGG+aR4wC5kTPS+TuUJ+x6xt
vmruMQuY+cLv1txqvmc2C1/T3G8WNC96fi5zg/yu2ch83dwXvl74udp3mq14
y37QbOQ5981RFCOffrcZHf7u7FvMpmxxl11ea28Qvu/we5V3mC2Z5PHM8kp7
nfB9h78reZvZnEsezy1vtP8bvr9w6h6Yo/mNlGzV5XC3zt4wfJ9M1mXRrbLX
DT/P8DuL8X9T35iH8hh+JxXbdFNoQlOa0ZwWtKQVrWkT/t3yOm3NdrSnAx3p
xCOvNZY/SM123VSyei+r5Xrh58tlXR7dJnvj8LsJfzvyLrN1+JuxHzILm53d
/g+14Asb
               "]]}, 
             Annotation[#, "Charting`Private`Tag$10868#6"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.363898, 0.618501, 0.782349], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwV02OYXGcYgOHZpAzapm1Up7YV296gjZONubFt27btpIjd2MbGttH7+3Hv
+z7f2Zlrz8zZVDGx0XWiIpFInB+pE0YifyWKRCqRlG26FzU5qjvzG9f1HNLw
t65MMrbr3tTimO7C79zQc0nLP7oKydmh+1Cb47orqbmp55GOf3VVUrBT96UO
J3Q30nBLzyc9K3Q1UrJL9yOWk7o7abmtF5CBlbo6b7Fb96cup3QP0nFHLyQj
q3QN3maPHkA94nRP0nNXLyITq3VN3mGvHkh9TuteZOCeXkxm1uhavMs+PYgG
nNG9ych9vYQsrNW1eY/9ejANOav7kIkHeilZWafr8D4H9BAacU73JTMP9TKy
sV7H8gEH9VAac173IwuP9HKys0HXJRWH9DCacEH3JyuPw3NGDjbqenzIYT2c
plzUA8jGk/CckZNNuj4fcUSPoBmX9ECy8zQ8Z+Ris27AxxzVI2nOZT2IHDwL
zxm52aIb8gnH9ChacEUPJicRVjjLw3/2RnzKcT2allzVQ8hFFCud5WWrvTGf
cUKPoRXX9FByE49VzvKxzd6Ezzmpx9Ka63oYeYjPamf52W5vyhec0uNoww09
nLw8xxpnBdhhb8aXxOnxtOWmHkE+nmets4LstDfnK07rCbTjlh5Jfl5gnbNC
7LK34GvO6Im057YeRQFeZL2zwuy2t+QbzupJdOCOHk1BXmKDs2j22FvxLef0
ZDpyV4+hEC+z0VkR9tpb8x3n9RQ6UZR9ztrwPRf0VDpTjOLsd96WH7iop9GF
e3oshUnAJmdPzSn8SRL+cHbAbMePXNLxEkciM+ylma4fm5MoTiLXFpmvhs/T
PsdMapYPZ+ZSM4XZ1evu28fxuo42E5oLzWRmwvB9m7PMN82y5ivmEjO5udnr
n9mn8oYuYSY2F4f3C5+1fZ4Zw2v2ZeGevOag2Z6fwj07X2Bedh7fPtNehhn6
iTk53H94ffiuXZ9rVqCb6w/M8RQJ9xyeNddnm+XY4npET7OXDH8fJZwdMjvw
M1f0TLrzUE+gaLiH8Dkk8f/pvCSHdUd+4aqeRQ9KUZoylKUc5alADBVJ4H0q
mZWpQlWqUZ0j3q8Tv3JNz6Ynj/REioXPm63OotzLdHup8F2E51LPNyuGZ8S+
3Exp1vC7/wNsAxLG
               "]]}, 
             Annotation[#, "Charting`Private`Tag$10868#7"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[1, 0.75, 0], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV03V8VlUcwOEXxUKGYqDSo7tLpLtjdMPo2ujuDqXTbkKUVrq7u2O0YIEg
COZz/nh2zvfc+3lrvxsdGx8TlygSiST4kzIqEnk/WSRSgYf2S4mjBhucdeBN
jupppOIDXZFH9suIpyYbnXXkLY7p6aTmQ12JP+2X04NabHLWiZQc1zNIw0e6
Mo/tV9CT2mx21plUnNAzScvHugpP7FfSizpscdaF1JzUs0jHJ7oqf9mvojd1
2eqsK2k4pWeTnk91Nf62X00fYtjmrBtpOa3nEM1nujr/2H9PX+qx3Vl30nFG
zyUDn+sa/Gv/A/2ozw5ncaTnrJ5HRr7QNfnPfg39acBOZ/FEc07PJxNf6lpE
WKsH0JBdugcZOB/mgMx8pWuTiHV6II3YrXuSkQthDsjC17oOT7FeD6Ixe3Qv
MnExzAFZWaDr8jQb9GCasFf3JjOXwhyQjYU6hsRs1ENoyj7dhyxcDnNAdhbp
ejzDJj2UZuzXfclKQpgDcrBY1+dZNuthNOeA7kc2roQ5ICff6AY8xxY9nBYc
1P3JztUwB+RiiW7I82zVI2jJIT2AHFwLc0BuvtWNeIFteiStOKwHkpPrYQ7I
w3e6MUnYrkfRmiN6ELm4EeaAvCzVTXiRHXo0bTiqB5Obm2EOyMcy3ZSk7NRj
iOWYHkIeboU5ID/LdTOi2KXH0pbjeih5+THMAQVYoZuTjN16HO04oYeRj9th
DijISt2Cl9ijx9Oek3o4+bkT5oBCrNIteZm9egIdOKVHUICfwhxQmNW6FcnZ
pyfSkSLheXbWmlfYryfRiaLh2XXWhlc5oCfTmdN6JAX5OcwPF+3H8za/62Lh
WbaP5TUO6ivWyZTkXX3eOpai4fsxi7vOr1uncJ8y/MJcHtLF9TPWUeFeCoXf
kpk8CPe6fs36XvgclA6fkTn8wRLXL1kncI/i4bdidng/125ap1GOX5kXvpPz
tda2vB7+18zgkPOr4btQKrynvmAdR7Hw+vqGdSpl6arPWkdTOLx+eDa4bD+R
d8J30MVZZ9+OFBzWU+hGVHL3WUtQklKUpgxlKUd5KpDUvRWtlahMFapSjfVe
tz1vcERPpTvn9BiK8Ft4Fkmwn0SJ8BvqW9bplA/3MJ9HVHftf6rOEfw=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$10868#8"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.647624, 0.37816, 0.614037], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwV02OYnGcUBuDZ2Bs3jTe2bds2Nm6Tja0aaWPXZtrYZu2kRmpbcXKfH/e+
53m+95rZmetMSurkXmlJiUTirD/nciUSc3InEqU4nZxILKULlbhP14b/zJtJ
47z7c3WlOSMvoyuVuV/Xlv/NW5jMBffn6crwvrycblThAV07zpm3MoWL7s/X
leUDeQXdqcqDuvacN29jKpfcX6Arx4fySnpQjYd0Hbhg3s40Lru/UFeej+RV
9KQ6D+s6ctG8g+lccX+RrgIfy6vpRQ0e0XXiknknM7jq/mJdRT6R19Cbmjyq
68xl8y5mkuAmXSU+Na+lD7V4TNeFK+bdzCKJm3WV+cy8jr7U5nFdV66a9zCb
dNyiq8Ln5vX0ow5P6LqRYK88h/TcKlflC/MG+lOXJ3XdSWKfPJcM3CZX46x5
IwOox1O6HqRjvzyPjNwuV+fL2DEGUp+ndT1JzwF5Ppm4Q67BV7FjDKIBz+h6
kYGD8gIyc6dck69jxxhMQ57V9SYjh+SFZOEuuRbfxI4xhEY8p+tDJg7Li8jK
3XJtvo0dYyiNeV7Xl8wckReTjSVyHb6LHWMYTdik60cWjsYekJ175Lp8HzvG
cJrygq4/WTkWe0AO7pXr8UPsGCNoxou6AWTjeOwBOVkq1+fH2DFG0pzNuoFk
50TsAblYJjfgp9gxUmnBFt0gcnAy9oBklssN+Tl2jFG0ZKtuMDk5FXtAblbI
jfgldozRtGKbbgi5eCn2gDyslBvza+wYY2jNdt1Qknk59oC8rJKb8FvsGGNp
ww7dMHLzSuwB+VgtN+X32DHG0Zb8rNE344/YJ8bTjgKs1Tfnz9gdJtCenbrh
5OHV2B/2m8dwHW/LBVlnbsFfsUscNk+gCDfIe52jKBCfj2m8qT/mnMg7FOc1
ZnKaDp7vco6Iu+SN75KpvBt3PT/qvDH+D4rF/8gM3mOJ5wecY3mLQvFdMT3e
z7MTzjRK8jqz4jPp1ztb8rf5lHMKm8xH4rNQNN5T3uccTcF4ffm4cxIl6Cjv
do4kX7x+/DY4aB7H9fEZ5EJsMLfin/idMJFOsY953HMWpghFKUZxSlCSFErF
rrtb2lmGspSjPBXY6LVb82/8rphEZ/boUsnPG/Fb5JB5PIXjO5RPOieTEneY
zRkqenYNqj4AFg==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$10868#9"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               Dashing[{0, Small, Small, Small}], 
               RGBColor[1, 0, 0]], 
              
              LineBox[{4341, 4348, 4346, 4349, 4327, 4333, 4310, 4322, 4311, 
               4312, 4313, 4314, 4315, 4316, 4317, 4318, 4323, 4319, 4326, 
               4324, 4347, 4345}]}, 
             Annotation[#, "Charting`Private`Tag$10868#10"]& ]}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {2.302585092994046, -57.0800259820388}, 
         FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{90, 10}, {50, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{2.3025852339686432`, 
            9.210340231001586}, {-57.0800259820388, -51.21143700870421}}, {{
            2.3025852339686432`, 
            9.210340231001586}, {-57.0800259820388, -51.21143700870421}}}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {2.302585092994046, -57.0800259820388}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"strain sensitivity (NSR)\\n/ Hz^-0.5 (log scale)\"", 
             TraditionalForm], ""}, {
            FormBox[
            "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"", TraditionalForm], ""}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{90, 10}, {50, 1}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{
             Log[10], 
             Log[10000]}, All}, {{2.302585092994046, 9.210340371976184}, 
            All}], PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           RowBox[{"ASDScon", "(", 
             RowBox[{"2", " ", "\[Pi]", " ", "f"}], ")"}], 
           RowBox[{"ASDhPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.1`"}], ",", 
               RowBox[{"Rpd", "=", "0"}]}], ")"}], 
           RowBox[{"ASDhPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.1`"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], 
           RowBox[{"ASDhPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.03`"}], ",", 
               RowBox[{"Rpd", "=", "0"}]}], ")"}], 
           RowBox[{"ASDhPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.03`"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], 
           RowBox[{"ASDhPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.005`"}], ",", 
               RowBox[{"Rpd", "=", "0"}]}], ")"}], 
           RowBox[{"ASDhPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0.005`"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], 
           RowBox[{"ASDhPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0"}], ",", 
               RowBox[{"Rpd", "=", "0"}]}], ")"}], 
           RowBox[{"ASDhPDLossy", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]", "=", 
                 RowBox[{"0.986`", " ", "\[Kappa]"}]}], ",", 
               RowBox[{"lossRatio", "=", "0"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], 
           RowBox[{
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["10", "3"], "<", "#1", "<", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["10", "3"]}]}], ",", 
                    FractionBox["5", 
                    SuperscriptBox["10", "25"]], ",", "Null"}], "]"}], "&"}], 
               ")"}], "\[InvisibleApplication]", 
             RowBox[{"(", "f", ")"}]}]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm], ",", 
                   TagBox[#3, HoldForm], ",", 
                   TagBox[#4, HoldForm], ",", 
                   TagBox[#5, HoldForm], ",", 
                   TagBox[#6, HoldForm], ",", 
                   TagBox[#7, HoldForm], ",", 
                   TagBox[#8, HoldForm], ",", 
                   TagBox[#9, HoldForm], ",", 
                   TagBox[#10, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.835301976976919*^9, 3.83530200629923*^9}, 
   3.835302036678173*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"f9e32392-e911-4e87-ab03-c1c1f129559a"]
}, Open  ]]
},
WindowSize->{1717, 936},
WindowMargins->{{Automatic, -1806}, {Automatic, 84}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 274, 8, 125, "Text",ExpressionUUID->"075d40ea-fa8d-4f2b-babd-8770a0fbd10e"],
Cell[CellGroupData[{
Cell[857, 32, 4627, 117, 474, "Input",ExpressionUUID->"17151575-c0ee-4630-b295-3e5603dfe84f"],
Cell[5487, 151, 2788, 58, 475, "Output",ExpressionUUID->"e2665dea-5630-4b36-948f-0b93abd9c7d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8312, 214, 9141, 226, 1582, "Input",ExpressionUUID->"178a6746-8cba-4802-b5cf-1ad1741287d6"],
Cell[17456, 442, 44489, 843, 557, "Output",ExpressionUUID->"239773d5-85f0-4b3f-8790-29094cd7ddb9"],
Cell[61948, 1287, 54792, 1004, 524, "Output",ExpressionUUID->"e0cfb816-ec3d-4b95-a08c-d65d5017c4d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116777, 2296, 6252, 155, 1026, "Input",ExpressionUUID->"0883ef2b-3c1f-4b86-94d2-5cfe699198ba"],
Cell[123032, 2453, 53402, 983, 582, "Output",ExpressionUUID->"5217e01d-4e31-44f4-8b81-d974f60f2d66"]
}, Open  ]],
Cell[176449, 3439, 1547, 38, 114, "Input",ExpressionUUID->"cd9ae65f-fc2e-4d00-9185-a9ecc73b6a9c"],
Cell[177999, 3479, 288, 6, 54, "Text",ExpressionUUID->"e9937aac-b987-4462-a6d6-6a2fa2646848"],
Cell[CellGroupData[{
Cell[178312, 3489, 8455, 216, 1079, "Input",ExpressionUUID->"c56bf380-6221-4a99-8e63-f827f05573af"],
Cell[186770, 3707, 151, 2, 53, "Output",ExpressionUUID->"a9921ede-03d6-4c8c-9d28-ab7fe41ed9a7"],
Cell[186924, 3711, 85996, 1555, 572, "Output",ExpressionUUID->"703336e5-9ba1-4189-85a8-184e8cc4bde1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272957, 5271, 21331, 526, 2179, "Input",ExpressionUUID->"a3269429-4f32-448a-a72d-fafb6b081f86"],
Cell[294291, 5799, 278081, 4957, 934, "Output",ExpressionUUID->"4895e743-2eb1-4f87-9e76-9ed2d3982220"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572409, 10761, 6743, 165, 765, "Input",ExpressionUUID->"099af43e-d730-461d-825e-0617c033dd5b"],
Cell[579155, 10928, 1592, 43, 55, "Print",ExpressionUUID->"1a18beb6-0eeb-4032-98e2-adf45b26c912"],
Cell[580750, 10973, 22466, 415, 604, "Output",ExpressionUUID->"40810abc-85e7-48c1-a974-713ffaf05c80"]
}, Open  ]],
Cell[603231, 11391, 1863, 41, 218, "Input",ExpressionUUID->"04764d18-a189-403e-985d-311924c4ee4c"],
Cell[CellGroupData[{
Cell[605119, 11436, 29100, 711, 3370, "Input",ExpressionUUID->"7b650e63-8190-4f34-9e28-a2e26cf42a02"],
Cell[634222, 12149, 395001, 7065, 1052, "Output",ExpressionUUID->"f9e32392-e911-4e87-ab03-c1c1f129559a"]
}, Open  ]]
}
]
*)

