(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    442840,       8605]
NotebookOptionsPosition[    440824,       8574]
NotebookOutlinePosition[    441188,       8590]
CellTagsIndexPosition[    441145,       8587]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Old model for degenerate internal squeezing without full freedom or plotting \
capabilities
NB: Sending \[Chi]\[Rule]-\[Chi] to flip plot the right way round\
\>", "Text",
 CellChangeTimes->{{3.8347153918173428`*^9, 3.834715418271596*^9}, {
  3.834716207171237*^9, 3.834716213950294*^9}, {3.8538019855146646`*^9, 
  3.8538020051217546`*^9}},ExpressionUUID->"060c7526-d348-4ff3-a3e4-\
38abb3b1effa"],

Cell["\<\
I have begun deleting old plot commands, see GitHub for previous commits.\
\>", "Text",
 CellChangeTimes->{{3.835830502703782*^9, 3.83583052402708*^9}, 
   3.835909892996008*^9, {3.836011610940221*^9, 
   3.836011629103138*^9}},ExpressionUUID->"3cfabacb-7484-4ef0-a878-\
2530fc4e29b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Using", " ", "the", " ", "same", " ", "values", " ", "as", " ", "Fig", 
     ".3", " ", "in", " ", "Korobko", " ", "et", " ", "al"}], ",", " ", 
    RowBox[{"2019", ":", " ", 
     RowBox[{
     "benchmark", " ", "3", "rd", " ", "generation", " ", "detector"}]}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"3.", " ", 
      SuperscriptBox["10", "8"]}]}], 
    RowBox[{"(*", 
     SuperscriptBox["ms", 
      RowBox[{"-", "1"}]], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[HBar]", "=", 
     RowBox[{"1.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "34"}]]}]}], 
    RowBox[{"(*", "Js", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]", "=", 
     RowBox[{"1550.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "9"}]]}]}], 
    RowBox[{"(*", "m", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"w0", "=", 
     RowBox[{"2", "\[Pi]", 
      FractionBox["c", "\[Lambda]"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"4.", " ", 
      SuperscriptBox["10", "6"]}]}], 
    RowBox[{"(*", "W", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Larm", "=", 
     RowBox[{"20.", " ", 
      SuperscriptBox["10", "3"]}]}], 
    RowBox[{"(*", "m", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Lse", "=", "56."}], 
    RowBox[{"(*", "m", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Titm", "=", "0.07"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tse", "=", "0.35"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ws", "=", 
     RowBox[{"c", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["Titm", 
         RowBox[{"4", " ", "Lse", " ", "Larm"}]], ")"}], 
       RowBox[{"1", "/", "2"}]]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"to", "-", 
      RowBox[{"do", ":", " ", 
       RowBox[{
       "figure", " ", "out", " ", "if", " ", "this", " ", "formula", " ", 
        "is", " ", "just", " ", "a", " ", "low", " ", "loss", " ", 
        "approximation"}]}]}], ",", " ", 
     RowBox[{
     "as", " ", "suspected", " ", "by", " ", "Min", " ", "Jet", " ", 
      "Yap"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(s\)]\)<<\!\(\*SubscriptBox[\(\
\[Omega]\), \(FSR\)]\)?: \!\(\*SubscriptBox[\(\[Omega]\), \(s\)]\)=``, \
\!\(\*SubscriptBox[\(\[Omega]\), \(FSR\)]\)=``\>\"", ",", "ws", ",", 
      FractionBox["c", 
       RowBox[{"2", " ", "Larm"}]]}], "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]RoundTripSE", "=", 
     FractionBox[
      RowBox[{"2", "Lse"}], "c"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], 
       RowBox[{"2", " ", "\[Tau]RoundTripSE"}]], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "Tse"}], "]"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Gamma]", "R"], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"-", "1"}], 
          RowBox[{"2", " ", "\[Tau]RoundTripSE"}]], 
         RowBox[{"Log", "[", 
          RowBox[{"1", "-", "Tse"}], "]"}]}], "\[TildeEqual]", 
        FractionBox["Tse", 
         RowBox[{"2", " ", "\[Tau]RoundTripSE"}]]}], "=", 
       FractionBox[
        RowBox[{"c", " ", "Tse"}], 
        RowBox[{"4", " ", "Lse"}]]}]}], ","}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"kout", "=", "\[Gamma]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G", "=", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"2", "P", " ", "Larm", " ", "w0"}], 
        RowBox[{"\[HBar]", " ", "c"}]], ")"}], 
      RowBox[{"1", "/", "2"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"the", " ", "authors", " ", 
      RowBox[{"don", "'"}], "t", " ", "say", " ", "what", " ", "value", " ", 
      "they", " ", "use", " ", "for", " ", "\[Chi]"}], ",", " ", 
     RowBox[{"threshold", "?"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sh", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "\[Chi]_"}], "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"\[HBar]", " ", "c"}], 
      RowBox[{"8", " ", "P", " ", "Larm", " ", "w0"}]], 
     FractionBox[
      RowBox[{
       RowBox[{
        SuperscriptBox["\[CapitalOmega]", "2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Gamma]", "-", "\[Chi]"}], ")"}], "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["ws", "2"], "-", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], 
      RowBox[{
       SuperscriptBox["ws", "2"], "\[Gamma]"}]]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ASDh", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "\[Chi]_"}], "]"}], ":=", 
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{"Sh", "[", 
       RowBox[{"\[CapitalOmega]", ",", "\[Chi]"}], "]"}], "]"}], 
     RowBox[{"1", "/", "2"}]]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"LogLogPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ASDh", "[", 
         RowBox[{"\[CapitalOmega]", ",", 
          RowBox[{"\[Chi]", "=", "0"}]}], "]"}], ",", 
        RowBox[{"ASDh", "[", 
         RowBox[{"\[CapitalOmega]", ",", 
          RowBox[{"\[Chi]", "=", 
           RowBox[{"0.5", "\[Gamma]"}]}]}], "]"}], ",", 
        RowBox[{"ASDh", "[", 
         RowBox[{"\[CapitalOmega]", ",", 
          RowBox[{"\[Chi]", "=", 
           RowBox[{"0.7", "\[Gamma]"}]}]}], "]"}], ",", 
        RowBox[{"ASDh", "[", 
         RowBox[{"\[CapitalOmega]", ",", 
          RowBox[{"\[Chi]", "=", 
           RowBox[{"0.9", "\[Gamma]"}]}]}], "]"}], ",", 
        RowBox[{"ASDh", "[", 
         RowBox[{"\[CapitalOmega]", ",", 
          RowBox[{"\[Chi]", "=", 
           RowBox[{"0.95", "\[Gamma]"}]}]}], "]"}], ",", 
        RowBox[{"ASDh", "[", 
         RowBox[{"\[CapitalOmega]", ",", 
          RowBox[{"\[Chi]", "=", "\[Gamma]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalOmega]", ",", "10", ",", 
        SuperscriptBox["10", "5"]}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<angular freq / Hz (log scale)\>\"", ",", " ", 
         "\"\<strain sensitivity (NSR) / \!\(\*SuperscriptBox[\(Hz\), \
\(\(-1\)/2\)]\) (log scale)\>\""}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{"\"\<Expressions\>\"", ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<lossless degenerate internal squeezing - different parametric \
gains\\nNB: factor of two corrected using \!\(\*SubscriptBox[\(S\), \
\(vac\)]\)=2 for single-sided PSD w quadrature normalisation\>\""}]}], "]"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
   "Print", "[", "\"\<[old plot commented out]\>\"", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8347152193428802`*^9, 3.834715222602828*^9}, {
   3.834715274762727*^9, 3.834715364022998*^9}, {3.834715423446809*^9, 
   3.834715794169718*^9}, {3.834716046716888*^9, 3.8347160748756933`*^9}, {
   3.834716357192196*^9, 3.8347165217413683`*^9}, {3.8347165554247026`*^9, 
   3.8347165827610292`*^9}, {3.83471663307222*^9, 3.834716669206868*^9}, {
   3.834716719843215*^9, 3.834716775060669*^9}, 3.83471686334798*^9, {
   3.834786035485634*^9, 3.834786113691505*^9}, {3.83478617190939*^9, 
   3.834786176573242*^9}, 3.834787438237124*^9, {3.834788080024794*^9, 
   3.834788082054063*^9}, {3.834788292981701*^9, 3.834788295481683*^9}, {
   3.834788332652314*^9, 3.8347884037411137`*^9}, {3.8347884608728323`*^9, 
   3.8347884774052343`*^9}, {3.834788576042261*^9, 3.834788610562056*^9}, {
   3.8350375712798862`*^9, 3.835037572030271*^9}, {3.8351371503104486`*^9, 
   3.835137161504345*^9}, 3.8351431461061*^9, 3.835148875124618*^9, {
   3.83521336056633*^9, 3.83521336499242*^9}, {3.835226156655137*^9, 
   3.835226178418543*^9}, {3.835751536618164*^9, 3.835751557079547*^9}, {
   3.83581711925324*^9, 3.8358171615577383`*^9}, {3.835817210661049*^9, 
   3.8358172579068117`*^9}, {3.835830533548123*^9, 3.8358305562358837`*^9}, {
   3.835902335353345*^9, 3.8359023360200653`*^9}, {3.835915379999249*^9, 
   3.835915398692655*^9}, {3.835920630808052*^9, 3.835920681372693*^9}, {
   3.8360115629065723`*^9, 3.836011589880727*^9}, {3.837124352178684*^9, 
   3.837124357214838*^9}, {3.837124406892045*^9, 3.837124409585814*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"a3b2b86d-0ec0-49d0-9ace-ed0bf55edb0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"checking", " ", "other", " ", "quadrature"}], ",", " ", 
    RowBox[{
    "noise", " ", "transfer", " ", "function", " ", "is", " ", "the", " ", 
     "same", " ", "as", " ", "before"}], ",", " ", 
    RowBox[{
     RowBox[{"just", " ", "with", " ", "\[Chi]"}], "\[Rule]", 
     RowBox[{"-", "\[Chi]"}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"R2Lossy", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "\[Chi]_", ",", "lossRatio_"}], "]"}], ":=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"4", 
         SuperscriptBox["\[CapitalOmega]", "2"], "kout", " ", "\[Chi]"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[CapitalOmega]", "2"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"kout", "+", 
             FractionBox[
              RowBox[{"kout", "*", "lossRatio"}], 
              RowBox[{"1", "-", "lossRatio"}]], "-", "\[Chi]"}], ")"}], 
           "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ws", "2"], "-", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}]]}], ")"}], 
     RowBox[{"1", "/", "2"}]]}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"LogLinearPlot", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"20", 
           RowBox[{"Log10", "[", 
            RowBox[{"RLossy", "[", 
             RowBox[{
              RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
              RowBox[{"\[Chi]", "=", "kout"}], ",", 
              RowBox[{"lossRatio", "=", "0.1"}]}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"20", 
           RowBox[{"Log10", "[", 
            RowBox[{"RLossy", "[", 
             RowBox[{
              RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
              RowBox[{"\[Chi]", "=", "kout"}], ",", 
              RowBox[{"lossRatio", "=", "0.03"}]}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"20", 
           RowBox[{"Log10", "[", 
            RowBox[{"RLossy", "[", 
             RowBox[{
              RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
              RowBox[{"\[Chi]", "=", "kout"}], ",", 
              RowBox[{"lossRatio", "=", "0.005"}]}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"20", 
           RowBox[{"Log10", "[", 
            RowBox[{"RLossy", "[", 
             RowBox[{
              RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
              RowBox[{"\[Chi]", "=", "kout"}], ",", 
              RowBox[{"lossRatio", "=", "0"}]}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"20", 
           RowBox[{"Log10", "[", 
            RowBox[{"R2Lossy", "[", 
             RowBox[{
              RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
              RowBox[{"\[Chi]", "=", "kout"}], ",", 
              RowBox[{"lossRatio", "=", "0.1"}]}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"20", 
           RowBox[{"Log10", "[", 
            RowBox[{"R2Lossy", "[", 
             RowBox[{
              RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
              RowBox[{"\[Chi]", "=", "kout"}], ",", 
              RowBox[{"lossRatio", "=", "0.03"}]}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"20", 
           RowBox[{"Log10", "[", 
            RowBox[{"R2Lossy", "[", 
             RowBox[{
              RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
              RowBox[{"\[Chi]", "=", "kout"}], ",", 
              RowBox[{"lossRatio", "=", "0.005"}]}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"20", 
           RowBox[{"Log10", "[", 
            RowBox[{"R2Lossy", "[", 
             RowBox[{
              RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
              RowBox[{"\[Chi]", "=", "kout"}], ",", 
              RowBox[{"lossRatio", "=", "0"}]}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", "10", ",", 
          SuperscriptBox["10", "5"]}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{"\"\<Expressions\>\"", ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<lossy degenerate internal squeezing\\ndifferent optical \
losses\\nno radiation pressure effects\\nparameters of benchmark 3rd gen. \
detector\\nshowing both quadratures\\nsee that optical loss affects the \
squeezed quadrature more,\\njust like a degenerate OPO\>\""}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          ",", ",", ",", ",", "Dashed", ",", "Dashed", ",", "Dashed", ",", 
           "Dashed"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"10", ",", 
             SuperscriptBox["10", "5"]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "60"}], ",", "60"}], "}"}]}], "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2 \
\[Pi]\)]\) / Hz (log scale)\>\"", ",", 
        "\"\<strain sensitivity (NSR)\\n/ Hz^-0.5 (log scale)\>\""}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
      RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\<[old plot omitted]\>\"", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.835147658723456*^9, 3.8351476719724417`*^9}, {
   3.8351477279236107`*^9, 3.835147735793404*^9}, {3.8351478700795393`*^9, 
   3.8351478916309013`*^9}, {3.835147942213572*^9, 3.835147950960075*^9}, {
   3.835148002101078*^9, 3.8351480602700653`*^9}, {3.835148172877399*^9, 
   3.835148256223028*^9}, {3.835148289788023*^9, 3.8351483462985487`*^9}, 
   3.835148496491537*^9, {3.835148715130034*^9, 3.835148721226355*^9}, {
   3.835148794442246*^9, 3.835148813854991*^9}, {3.835916151319375*^9, 
   3.835916162800103*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"bd23a451-cc39-4c20-8e6f-bca201441b13"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "external", " ", "squeezing", " ", "injected", " ", "into", " ", 
    "conventional", " ", "detector"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "pulling", " ", "values", " ", "from", " ", "Wade", " ", "et", " ", 
     "al"}], ",", " ", 
    RowBox[{
     RowBox[{"2016", " ", "-", " ", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"aip", ".", "scitation", ".", "org"}], "/", "doi"}], "/", 
        "pdf"}], "/", "10.1063"}], "/", "1.4953326"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "Rpd", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TExt", "=", "0.155"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LExt", "=", "0.18"}], ";"}], 
   RowBox[{"(*", "m", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]RoundTripExt", "=", 
     FractionBox[
      RowBox[{"2", " ", "LExt"}], "c"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Kappa]afExt", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], 
       RowBox[{"2", " ", "\[Tau]RoundTripExt"}]], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "TExt"}], "]"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"aka", ".", " ", "\[Kappa]aoutExt"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"now", " ", "quoting", " ", "losses", " ", "as", " ", 
      SubscriptBox["T", "l"]}], ",", " ", 
     RowBox[{"transmitivity", " ", 
      RowBox[{"(", 
       RowBox[{"of", " ", 
        RowBox[{"power", "/", "energy"}]}], ")"}], " ", "of", " ", "loss", 
      " ", "port", " ", "mirror"}], ",", " ", 
     RowBox[{
      RowBox[{"instead", " ", "of", " ", "using", " ", "loss", " ", "ratio"}],
       "=", 
      RowBox[{"1", "-", "\[Eta]esc"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Kappa]aExt", "[", "TlExt_", "]"}], ":=", 
    RowBox[{"\[Kappa]afExt", "+", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], 
       RowBox[{"2", " ", "\[Tau]RoundTripExt"}]], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "TlExt"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"VExt", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "gExt_", ",", "Rinj_", ",", "TlExt_"}], 
     "]"}], ":=", 
    RowBox[{"1", "-", 
     RowBox[{
      FractionBox[
       RowBox[{"4", " ", "\[Kappa]afExt", " ", "gExt"}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]aExt", "[", "TlExt", "]"}], "+", "gExt"}], ")"}], 
         "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}]], 
      RowBox[{"(", 
       RowBox[{"1", "-", "Rinj"}], ")"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]RoundTripArm", "=", 
     FractionBox[
      RowBox[{"2", " ", "Larm"}], "c"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]RoundTripSE", "=", 
     FractionBox[
      RowBox[{"2", " ", "Lse"}], "c"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Kappa]a", "[", "Tla_", "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], 
       RowBox[{"2", " ", "\[Tau]RoundTripArm"}]], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "Tla"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Kappa]aqout", "=", "kout"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Kappa]aq", "[", "Tlaq_", "]"}], ":=", 
     RowBox[{"\[Kappa]aqout", "+", 
      RowBox[{
       FractionBox[
        RowBox[{"-", "1"}], 
        RowBox[{"2", " ", "\[Tau]RoundTripSE"}]], 
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", "Tlaq"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RIntExtSqz", "[", 
     RowBox[{
     "\[CapitalOmega]_", ",", "\[Chi]_", ",", "gExt_", ",", "Tla_", ",", 
      "Tlaq_", ",", "Rpd_", ",", "Rinj_", ",", "TlExt_"}], "]"}], ":=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "Rpd"}], ")"}], 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"VExt", "[", 
            RowBox[{
            "\[CapitalOmega]", ",", "gExt", ",", "Rinj", ",", "TlExt"}], 
            "]"}], 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"2", "\[Kappa]aqout"}], "-", 
               RowBox[{"\[Kappa]aq", "[", "Tlaq", "]"}], "-", "\[Chi]", "+", 
               RowBox[{"I", " ", "\[CapitalOmega]"}], "-", 
               FractionBox[
                SuperscriptBox["ws", "2"], 
                RowBox[{
                 RowBox[{"\[Kappa]a", "[", "Tla", "]"}], "-", 
                 RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}], 
              RowBox[{
               RowBox[{"\[Kappa]aq", "[", "Tlaq", "]"}], "+", "\[Chi]", "-", 
               RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
               FractionBox[
                SuperscriptBox["ws", "2"], 
                RowBox[{
                 RowBox[{"\[Kappa]a", "[", "Tla", "]"}], "-", 
                 RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]], "]"}], "2"]}], 
          "\[IndentingNewLine]", "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            FractionBox[
             RowBox[{"2", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"\[Kappa]aqout", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Kappa]aq", "[", "Tlaq", "]"}], "-", 
                   "\[Kappa]aqout"}], ")"}]}], ")"}], 
               RowBox[{"1", "/", "2"}]]}], 
             RowBox[{
              RowBox[{"\[Kappa]aq", "[", "Tlaq", "]"}], "+", "\[Chi]", "-", 
              RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
              FractionBox[
               SuperscriptBox["ws", "2"], 
               RowBox[{
                RowBox[{"\[Kappa]a", "[", "Tla", "]"}], "-", 
                RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]], "]"}], "2"], 
          "\[IndentingNewLine]", "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            FractionBox[
             RowBox[{"2", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"\[Kappa]aqout", " ", 
                 RowBox[{"\[Kappa]a", "[", "Tla", "]"}]}], ")"}], 
               RowBox[{"1", "/", "2"}]], "ws"}], 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Kappa]aq", "[", "Tlaq", "]"}], "+", "\[Chi]", "-", 
                 RowBox[{"I", " ", "\[CapitalOmega]"}]}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Kappa]a", "[", "Tla", "]"}], "-", 
                 RowBox[{"I", " ", "\[CapitalOmega]"}]}], ")"}]}], "+", 
              SuperscriptBox["ws", "2"]}]], "]"}], "2"]}], ")"}]}], "+", 
       "Rpd"}], ")"}], 
     RowBox[{"1", "/", "2"}]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TIntExtSqz", "[", 
     RowBox[{
     "\[CapitalOmega]_", ",", "\[Chi]_", ",", "gExt_", ",", "Tla_", ",", 
      "Tlaq_", ",", "Rpd_", ",", "Rinj_", ",", "TlExt_"}], "]"}], ":=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "Rpd"}], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"Abs", "[", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", "\[Kappa]aqout", ")"}], 
         RowBox[{"1", "/", "2"}]], "ws", " ", "G", " "}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]aq", "[", "Tlaq", "]"}], "+", "\[Chi]", "-", 
           RowBox[{"I", " ", "\[CapitalOmega]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]a", "[", "Tla", "]"}], "-", 
           RowBox[{"I", " ", "\[CapitalOmega]"}]}], ")"}]}], "+", 
        SuperscriptBox["ws", "2"]}]], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ASDShIntExtSqz", "[", 
     RowBox[{
     "\[CapitalOmega]_", ",", "\[Chi]_", ",", "gExt_", ",", "Tla_", ",", 
      "Tlaq_", ",", "Rpd_", ",", "Rinj_", ",", "TlExt_"}], "]"}], ":=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", " ", "\[Kappa]aqout", " ", 
         SuperscriptBox["ws", "2"], " ", 
         SuperscriptBox["G", "2"], " "}]], 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"VExt", "[", 
           RowBox[{
           "\[CapitalOmega]", ",", "gExt", ",", "Rinj", ",", "TlExt"}], "]"}], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", "\[Kappa]aqout"}], "-", 
                  RowBox[{"\[Kappa]aq", "[", "Tlaq", "]"}], "-", "\[Chi]"}], 
                 ")"}], 
                RowBox[{"\[Kappa]a", "[", "Tla", "]"}]}], "+", 
               SuperscriptBox["\[CapitalOmega]", "2"], "-", 
               SuperscriptBox["ws", "2"]}], ")"}], "2"], 
            "\[IndentingNewLine]", "\t\t\t\t\t\t", "+", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]", "2"], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Kappa]a", "[", "Tla", "]"}], "-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", "\[Kappa]aqout"}], "-", 
                  RowBox[{"\[Kappa]aq", "[", "Tlaq", "]"}], "-", "\[Chi]"}], 
                 ")"}]}], ")"}], "2"]}]}], ")"}]}], "\[IndentingNewLine]", 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Kappa]a", "[", "Tla", "]"}], "2"], "+", " ", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "4", 
          "\[Kappa]aqout", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Kappa]aq", "[", "Tlaq", "]"}], "-", "\[Kappa]aqout"}], 
           ")"}]}], "\[IndentingNewLine]", "+", 
         RowBox[{"4", "\[Kappa]aqout", " ", 
          RowBox[{"\[Kappa]a", "[", "Tla", "]"}], 
          SuperscriptBox["ws", "2"]}], "\[IndentingNewLine]", "+", " ", 
         RowBox[{
          FractionBox["Rpd", 
           RowBox[{"1", "-", "Rpd"}]], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Kappa]aq", "[", "Tlaq", "]"}]}], "-", 
                  "\[Chi]"}], ")"}], 
                RowBox[{"\[Kappa]a", "[", "Tla", "]"}]}], "+", 
               SuperscriptBox["\[CapitalOmega]", "2"], "-", 
               SuperscriptBox["ws", "2"]}], ")"}], "2"], 
            "\[IndentingNewLine]", "\t\t", "+", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]", "2"], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Kappa]a", "[", "Tla", "]"}], "-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"\[Kappa]aq", "[", "Tlaq", "]"}]}], "-", 
                  "\[Chi]"}], ")"}]}], ")"}], "2"]}]}], ")"}]}]}], ")"}]}], 
      ")"}], 
     RowBox[{"1", "/", "2"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.835406840750008*^9, 3.8354069936172657`*^9}, {
   3.8354070269941597`*^9, 3.835407083702146*^9}, {3.8354071259090652`*^9, 
   3.8354071707965384`*^9}, {3.83540721531103*^9, 3.835407446894923*^9}, {
   3.835407485461862*^9, 3.835407515475545*^9}, {3.835641251584876*^9, 
   3.835641257389127*^9}, {3.8356413961396427`*^9, 3.835641417674168*^9}, {
   3.8356414572300367`*^9, 3.8356414758791237`*^9}, {3.835641727667642*^9, 
   3.8356417327086277`*^9}, {3.8356455039229593`*^9, 3.835645568532054*^9}, {
   3.8356457057384987`*^9, 3.835645748627863*^9}, {3.83564579921297*^9, 
   3.835645806338377*^9}, {3.835646802237541*^9, 3.835646859455471*^9}, {
   3.835646934822733*^9, 3.835647003967149*^9}, 3.835647043783868*^9, {
   3.835647568565283*^9, 3.835647585628269*^9}, {3.835647690378028*^9, 
   3.835647699305192*^9}, {3.835647820851828*^9, 3.835647870638578*^9}, {
   3.835652533286696*^9, 3.835652604638504*^9}, {3.835652669585252*^9, 
   3.8356526907076597`*^9}, {3.835652784171569*^9, 3.835652822713541*^9}, {
   3.835652861820095*^9, 3.835652946569703*^9}, {3.835652989640326*^9, 
   3.8356530692883377`*^9}, {3.835653110893196*^9, 3.835653116992839*^9}, {
   3.835653168289382*^9, 3.8356531909692793`*^9}, 3.835653716653431*^9, 
   3.83565482610786*^9, {3.835746371983675*^9, 3.835746393131332*^9}, {
   3.835746478230461*^9, 3.835746650890122*^9}, {3.835746731763523*^9, 
   3.835746918469612*^9}, {3.835746999766143*^9, 3.8357470062692842`*^9}, {
   3.835747043505197*^9, 3.835747107307337*^9}, {3.8357472536368923`*^9, 
   3.835747319564251*^9}, {3.83574748674857*^9, 3.835747495765113*^9}, {
   3.8358168710312366`*^9, 3.8358169210603943`*^9}, {3.836248758366881*^9, 
   3.8362487586235237`*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"dc3b2be4-a545-4473-a626-60c529d53abf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"automated", " ", "plotting"}], ",", " ", 
    RowBox[{
    "just", " ", "enter", " ", "values", " ", "into", " ", "valsList"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"unpackRIntExtSqz", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "vals_"}], "]"}], ":=", 
    RowBox[{"RIntExtSqz", "[", 
     RowBox[{"\[CapitalOmega]", ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "6", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "7", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"unpackTIntExtSqz", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "vals_"}], "]"}], ":=", 
    RowBox[{"TIntExtSqz", "[", 
     RowBox[{"\[CapitalOmega]", ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "6", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "7", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"unpackASDShIntExtSqz", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "vals_"}], "]"}], ":=", 
    RowBox[{"ASDShIntExtSqz", "[", 
     RowBox[{"\[CapitalOmega]", ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "6", "]"}], "]"}], ",", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "7", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"each", " ", "vals", " ", 
     RowBox[{"contains", ":", " ", 
      RowBox[{"{", 
       RowBox[{
       "\[Chi]_", ",", "gExt_", ",", "Tla_", ",", "Tlaq_", ",", "Rpd_", ",", 
        "Rinj_", ",", "TlExt_"}], "}"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labeller", "[", "vals_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"paddedStrings", "=", 
       RowBox[{"StringPadRight", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"vals", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "/", "\[Kappa]aqout"}], "]"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"vals", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "/", "\[Kappa]afExt"}], "]"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"vals", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"vals", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"vals", "[", 
              RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"vals", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"vals", "[", 
              RowBox[{"[", "7", "]"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
         "4"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"vals", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<\[Chi]/\!\(\*SubscriptBox[\(\[Kappa]\), \
\(\*SubscriptBox[\(a\), \(q\)], out\)]\)=``; \!\(\*SubscriptBox[\(T\), \(l, a\
\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, \*SubscriptBox[\(a\), \
\(q\)]\)]\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``\>\"", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"paddedStrings", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"paddedStrings", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"paddedStrings", "[", 
             RowBox[{"[", "4", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"paddedStrings", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<\[Chi]/\!\(\*SubscriptBox[\(\[Kappa]\), \
\(\*SubscriptBox[\(a\), \(q\)], out\)]\)=`1`; \!\(\*SubscriptBox[\(T\), \(l, \
a\)]\)=`3`, \!\(\*SubscriptBox[\(T\), \(l, \*SubscriptBox[\(a\), \
\(q\)]\)]\)=`4`, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=`5`; \!\(\*SubscriptBox[\
\(g\), \(ext\)]\)/\!\(\*SubscriptBox[\(\[Kappa]\), \(af, ext\)]\)=`2`, \
\!\(\*SubscriptBox[\(T\), \(l, ext\)]\)=`7`, \!\(\*SubscriptBox[\(R\), \
\(inj\)]\)=`6`\>\"", ",", "\[IndentingNewLine]", 
            RowBox[{"paddedStrings", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"paddedStrings", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"paddedStrings", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"paddedStrings", "[", 
             RowBox[{"[", "4", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"paddedStrings", "[", 
             RowBox[{"[", "5", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"paddedStrings", "[", 
             RowBox[{"[", "6", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"paddedStrings", "[", 
             RowBox[{"[", "7", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Monospace\>\""}]}], "]"}]}], 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotIntExtSqz", "[", 
     RowBox[{"valsList_", ",", 
      RowBox[{"plotLabel_:", "\"\<internal/external squeezing\>\""}], ",", 
      RowBox[{"plotStyle_:", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"legendLabel_:", "None"}], ",", 
      RowBox[{"fplotMin_:", "10"}], ",", 
      RowBox[{"fplotMax_:", 
       SuperscriptBox["10", "5"]}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p1", "=", 
       RowBox[{"LogLinearPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"20", 
             RowBox[{"Log10", "[", 
              RowBox[{"unpackRIntExtSqz", "[", 
               RowBox[{
                RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
                RowBox[{"valsList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"f", ",", "fplotMin", ",", "fplotMax"}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"labeller", "[", 
               RowBox[{"valsList", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
            ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"25", ",", "15"}], "}"}], "}"}]}], ",", 
            RowBox[{"LegendLabel", "\[Rule]", "legendLabel"}]}], "]"}]}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"100", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"TicksStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
              RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"fplotMin", ",", "fplotMax"}], "}"}], ",", "All"}], 
           "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "plotStyle"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<shot noise transfer function,\\n|R| / dB (20log10)\>\"", 
              ","}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{",", "plotLabel"}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{"LogLogPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"unpackTIntExtSqz", "[", 
             RowBox[{
              RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
              RowBox[{"valsList", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"f", ",", "fplotMin", ",", "fplotMax"}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"fplotMin", ",", "fplotMax"}], "}"}], ",", "All"}], 
           "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"labeller", "[", 
               RowBox[{"valsList", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
            ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"100", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"TicksStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
              RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
         ",", 
         RowBox[{"PlotStyle", "\[Rule]", "plotStyle"}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<signal transfer function,\\n|T| / [?] (log scale)\>\"", 
              ","}], "}"}], ",", 
            RowBox[{"{", ",", "}"}]}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"LogLogPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"unpackASDShIntExtSqz", "[", 
               RowBox[{
                RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
                RowBox[{"valsList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["10", "3"], "<", "#", "<", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["10", "3"]}]}], ",", 
                 RowBox[{"5", " ", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "25"}]]}], ",", "Null"}], "]"}], "&"}], "[", 
              "f", "]"}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "fplotMin", ",", "fplotMax"}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"fplotMin", ",", "fplotMax"}], "}"}], ",", "All"}], 
           "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"labeller", "[", 
                 RowBox[{"valsList", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
              ",", 
              RowBox[{
              "{", "\"\<5\[Cross]\!\(\*SuperscriptBox[\(10\), \
\(-25\)]\)\!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) target for 1\[Dash]4 \
kHz\>\"", "}"}]}], "]"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"100", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50", ",", "1"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Filling", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "valsList", "]"}], "+", "1"}], "\[Rule]", 
            "Bottom"}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"plotStyle", "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", "1", ",", 
                  RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"Directive", "[", 
                RowBox[{"DotDashed", ",", "Red"}], "]"}], "}"}]}], "]"}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{"plotStyle", ",", 
              RowBox[{"{", 
               RowBox[{"Directive", "[", 
                RowBox[{"DotDashed", ",", "Red"}], "]"}], "}"}]}], "]"}]}], 
           "]"}]}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<strain sensitivity (NSR)\\n/ \!\(\*SuperscriptBox[\(Hz\), \
\(\(-1\)/2\)]\) (log scale)\>\"", ","}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ","}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", 
        RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}], ")"}]}]}]}]], "Input",\

 CellChangeTimes->{{3.8356471099393578`*^9, 3.835647277456245*^9}, 
   3.835649313003146*^9, {3.8356493483223343`*^9, 3.835649416493726*^9}, {
   3.8356497349681892`*^9, 3.8356499145321693`*^9}, {3.835652989678034*^9, 
   3.8356529897092876`*^9}, {3.83565305153786*^9, 3.8356530515642653`*^9}, {
   3.835653269896306*^9, 3.8356533274737597`*^9}, {3.835653699023753*^9, 
   3.835653712705724*^9}, {3.8356537871171*^9, 3.835653794664453*^9}, {
   3.835653892503729*^9, 3.835653989222068*^9}, {3.835654068594097*^9, 
   3.835654110155428*^9}, {3.8356541500842333`*^9, 3.835654150466535*^9}, {
   3.835654816483906*^9, 3.835654974477511*^9}, {3.835655067355238*^9, 
   3.835655211249153*^9}, {3.8356552427351*^9, 3.835655324736829*^9}, {
   3.8356553571018467`*^9, 3.835655372440608*^9}, {3.83565554923446*^9, 
   3.835655565939169*^9}, {3.8356559978468246`*^9, 3.835656038725284*^9}, 
   3.835656317451243*^9, {3.835656625759766*^9, 3.835656670310163*^9}, {
   3.83565675193943*^9, 3.835656788445281*^9}, {3.835656828341035*^9, 
   3.835656835015175*^9}, 3.835656877406969*^9, {3.835657010179955*^9, 
   3.835657143791263*^9}, {3.835657224969235*^9, 3.8356572261578074`*^9}, 
   3.835657259202916*^9, {3.8356580158260736`*^9, 3.835658202184977*^9}, {
   3.8356583605587397`*^9, 3.835658460594108*^9}, {3.835658539246327*^9, 
   3.835658557032468*^9}, {3.835658793114275*^9, 3.835658801436393*^9}, {
   3.835746931661543*^9, 3.835746947410429*^9}, {3.83574739847147*^9, 
   3.835747404101342*^9}, {3.835747448239531*^9, 3.8357476676401253`*^9}, {
   3.835747858256138*^9, 3.835747918095729*^9}, {3.835747954963525*^9, 
   3.835747958707863*^9}, 3.835748008657593*^9, {3.835748405687792*^9, 
   3.835748409130493*^9}, {3.835748913567584*^9, 3.8357489616365213`*^9}, {
   3.8357492416864347`*^9, 3.835749256957913*^9}, 3.835749368104289*^9, {
   3.83581787919506*^9, 3.835817897228188*^9}, {3.835818006611314*^9, 
   3.8358180069966993`*^9}, {3.835818200571863*^9, 3.8358182036702347`*^9}, {
   3.835820586161305*^9, 3.835820779771591*^9}, {3.835820994063593*^9, 
   3.835821033368758*^9}, 3.835821537439651*^9, {3.835826420751519*^9, 
   3.835826493271985*^9}, {3.8360083557019567`*^9, 3.836008367675445*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"737363c0-73e8-4b0a-a889-8811f5bc3aea"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"external", " ", "squeezing", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "specify", " ", "dB", " ", "of", " ", "injected", " ", "squeezing"}], 
      "*)"}], "\[IndentingNewLine]", "injdB"}], "=", "15"}], 
   RowBox[{"(*", "dB", "*)"}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "r", "]"}], "\[IndentingNewLine]", 
    RowBox[{"gExtRatio0", "=", 
     RowBox[{"(", 
      RowBox[{"r", "/.", 
       RowBox[{
        RowBox[{"Minimize", "[", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"20", 
             RowBox[{"Log10", "[", 
              RowBox[{"unpackRIntExtSqz", "[", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"0", "kout"}], ",", 
                  RowBox[{"r", " ", "\[Kappa]afExt"}], ",", "0", ",", "0", 
                  ",", "0", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}]}], 
            "-", 
            RowBox[{"(", 
             RowBox[{"-", "injdB"}], ")"}]}], "]"}], ",", "r"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ")"}]}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"each", " ", "vals", " ", 
     RowBox[{"contains", ":", " ", 
      RowBox[{"{", 
       RowBox[{
       "\[Chi]_", ",", "gExt_", ",", "Tla_", ",", "Tlaq_", ",", "Rpd_", ",", 
        "Rinj_", ",", "TlExt_"}], "}"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"valsList0", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "kout"}], ",", 
        RowBox[{"0", "\[Kappa]afExt"}], ",", "0", ",", "0", ",", "0", ",", 
        "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "kout"}], ",", 
        RowBox[{"gExtRatio0", " ", "\[Kappa]afExt"}], ",", "0", ",", "0", ",",
         "0", ",", "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "kout"}], ",", 
        RowBox[{"gExtRatio0", " ", "\[Kappa]afExt"}], ",", "0", ",", "0", ",",
         "0", ",", "0", ",", "0.1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "kout"}], ",", 
        RowBox[{"gExtRatio0", " ", "\[Kappa]afExt"}], ",", "0", ",", "0", ",",
         "0", ",", "0.5", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "kout"}], ",", 
        RowBox[{"gExtRatio0", " ", "\[Kappa]afExt"}], ",", "0.1", ",", "0.1", 
        ",", "0.5", ",", "0.5", ",", "0.1"}], "}"}]}], "}"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"plotIntExtSqz", "[", 
    RowBox[{
    "valsList0", ",", 
     "\"\<lossy external squeezing\\nno radiation pressure \
effects\\nparameters of benchmark 3rd gen. detector\>\""}], "]"}]}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.835658209610948*^9, 3.8356582897859173`*^9}, {
  3.835658652815958*^9, 3.8356586772175417`*^9}, {3.835659865012272*^9, 
  3.835659892210791*^9}, {3.835660344356874*^9, 3.8356603607113457`*^9}, {
  3.8356603933575087`*^9, 3.83566041074588*^9}, {3.835660617565749*^9, 
  3.835660671439633*^9}, {3.835660733546681*^9, 3.835660767129671*^9}, {
  3.835660880045808*^9, 3.83566091901904*^9}, {3.835662284478945*^9, 
  3.83566228955861*^9}, {3.835728743270812*^9, 3.835728756060142*^9}, {
  3.835748026681329*^9, 3.8357480289907312`*^9}, {3.835748220715723*^9, 
  3.835748268761505*^9}, {3.83574859149691*^9, 3.835748592246004*^9}, {
  3.835916124461062*^9, 3.835916128800432*^9}, {3.836011655326186*^9, 
  3.836011660048808*^9}, {3.836184856367872*^9, 3.836184858828472*^9}, {
  3.8365062050374823`*^9, 3.83650621307018*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"b2f309c3-9795-419e-8ec4-5a78804103c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"setting", " ", "SRC", " ", "to", " ", "be", " ", "lossless"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"each", " ", "vals", " ", 
    RowBox[{"contains", ":", " ", 
     RowBox[{"{", 
      RowBox[{
      "\[Chi]_", ",", "gExt_", ",", "Tla_", ",", "Tlaq_", ",", "Rpd_", ",", 
       "Rinj_", ",", "TlExt_"}], "}"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Chi]Ratio0", "=", "0.85"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsList1", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", "kout"}], ",", 
         RowBox[{"0", "\[Kappa]afExt"}], ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", 
         RowBox[{"0", "\[Kappa]afExt"}], ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", 
         RowBox[{"0", "\[Kappa]afExt"}], ",", "0.02", ",", "0", ",", "0", ",",
          "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", 
         RowBox[{"0", "\[Kappa]afExt"}], ",", "0.1", ",", "0", ",", "0", ",", 
         "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", 
         RowBox[{"0", "\[Kappa]afExt"}], ",", "0.5", ",", "0", ",", "0", ",", 
         "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", 
         RowBox[{"0", "\[Kappa]afExt"}], ",", "0.8", ",", "0", ",", "0", ",", 
         "0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"plotIntExtSqz", "[", 
    RowBox[{
    "valsList1", ",", 
     "\"\<lossy degenerate internal squeezing\\nno radiation pressure effects\
\\nparameters of benchmark 3rd gen. detector\>\"", ",", 
     RowBox[{"{", "}"}], ",", 
     "\"\<changing arm cavity intra-cavity loss\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plotIntExtSqz", "[", 
    RowBox[{
    "valsList1", ",", 
     "\"\<lossy degenerate internal squeezing\\nno radiation pressure effects\
\\nparameters of benchmark 3rd gen. detector\>\"", ",", 
     RowBox[{"{", "}"}], ",", "\"\<changing arm cavity intra-cavity loss\>\"",
      ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "20"}]], ",", 
     SuperscriptBox["10", "5"]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsList1", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", "kout"}], ",", 
         RowBox[{"0", "\[Kappa]afExt"}], ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", 
         RowBox[{"0", "\[Kappa]afExt"}], ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", 
         RowBox[{"0", "\[Kappa]afExt"}], ",", "0", ",", "0.02", ",", "0", ",",
          "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", 
         RowBox[{"0", "\[Kappa]afExt"}], ",", "0", ",", "0.1", ",", "0", ",", 
         "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", 
         RowBox[{"0", "\[Kappa]afExt"}], ",", "0", ",", "0.5", ",", "0", ",", 
         "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", 
         RowBox[{"0", "\[Kappa]afExt"}], ",", "0", ",", "0.8", ",", "0", ",", 
         "0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"plotIntExtSqz", "[", 
    RowBox[{
    "valsList1", ",", 
     "\"\<lossy degenerate internal squeezing\\nno radiation pressure effects\
\\nparameters of benchmark 3rd gen. detector\>\"", ",", 
     RowBox[{"{", "}"}], ",", "\"\<changing SRC intra-cavity loss\>\""}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8357419871721582`*^9, 3.835742010373308*^9}, {
   3.835742166228709*^9, 3.835742168421859*^9}, {3.8357422237495413`*^9, 
   3.8357422516424627`*^9}, {3.835742498754799*^9, 3.83574252575289*^9}, {
   3.835742573412856*^9, 3.835742577782399*^9}, {3.835748338869234*^9, 
   3.835748362631422*^9}, 3.835749319684367*^9, {3.83574941201665*^9, 
   3.835749413900901*^9}, {3.835749455351873*^9, 3.835749482037112*^9}, {
   3.8358176796916857`*^9, 3.835817723316373*^9}, {3.835817842610183*^9, 
   3.835817847060569*^9}, {3.8358179146527643`*^9, 3.835817925611001*^9}, {
   3.835818037817231*^9, 3.835818038772725*^9}, {3.835818090993937*^9, 
   3.8358180930426683`*^9}, {3.835818179268774*^9, 3.835818186493136*^9}, 
   3.8358182182173557`*^9, {3.8358265596882772`*^9, 3.835826563797579*^9}, {
   3.8358266045864277`*^9, 3.835826656040565*^9}, {3.8359180434359417`*^9, 
   3.835918043604697*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"083bb4dc-efb5-454c-bd7e-5e3cfe4d61b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "plotting", " ", "peak", " ", "shot", " ", "noise", " ", "vs", " ", "arm",
      " ", "cavity", " ", "intra"}], "-", 
    RowBox[{"cavity", " ", "loss"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<(raw) sloshing frequency, \
\!\(\*FractionBox[SubscriptBox[\(\[Omega]\), \(s\)], \(2 \[Pi]\)]\)=`` \
Hz\>\"", ",", 
       RowBox[{"NumberForm", "[", 
        FractionBox["ws", 
         RowBox[{"2", "\[Pi]"}]], "]"}]}], "]"}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"f", "/.", 
         RowBox[{
          RowBox[{"FindMinimum", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"20", 
               RowBox[{"Log10", "[", 
                RowBox[{"unpackRIntExtSqz", "[", 
                 RowBox[{
                  RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", 
                    RowBox[{"0", "\[Kappa]afExt"}], ",", "Tla0", ",", "0", 
                    ",", "0", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}]}], 
              ",", 
              RowBox[{"f", ">", "0"}]}], "}"}], ",", "f"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        FractionBox["ws", 
         RowBox[{"2", "\[Pi]"}]], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"Tla0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<shot noise peak frequency error, \!\(\*FractionBox[\(f\), \
\(\*SubscriptBox[\(\[Omega]\), \(s\)]/\((2 \[Pi])\)\)]\) \>\"", ","}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<arm cavity intra-cavity loss, \!\(\*SubscriptBox[\(T\), \(l, a\
\)]\)\>\"", ",", 
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<degenerate internal squeezing, \[Chi]=``\\nshot noise peak \
frequency vs arm cavity loss\\nall other losses zero\>\"", ",", 
             "\[Chi]Ratio0"}], "]"}]}], "}"}]}], "}"}]}]}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzsvcdfHMn29nln3lnMcvazmv/i3c5ytu98Zvte8+vbci1vkDfIIYuQ90JC
ppFFDiEHEgKBcAIJbwQIgfDegzqmn9M3SkmSVZUUVZVF5vP9fLJbVKWJjMiK
8+SJEyf+r3+t/B+//q9/+9vf1v7vf/7nf/wz7v9es+afm/7f/+PPP/6/FWuX
LFrx71/+nxXr/r3o32v++7/+258fHvtf/va3//PP/f+3P/+tCFmgdHR0qF9/
/VV9/frV6aJEnStXrqgTJ07M6xyPHj2SbS5s2rRJPX/+fF7XDSeXLl2adz0s
FE6dOqVKSkqcLsa8GB4eVqtWrVJ79+5V2dnZ6urVq/IbLigo8HvMH3/8oY4e
PapWr14tz15ubq5KSEhQK1asUN3d3b798P358+dlH+M2OjoajVsjhLgUao3o
21hqDTIfMjIy1MqVK9XQ0JD8DR0BDQXtgX9b0dXVJb/z/Px832fQD0uXLlUv
XryQv0dGRmSfqqqqyN8EIcS1oB969eqV2rFjh7wXwb5UV1fP0hpNTU3yDoT+
LC4uTj148EBNTU3NOBfei+Lj4+U96Ny5c6qxsVHOMzAw4NsnLy9P+r/ffvtN
7dy5U/42smXLFjnPy5cvpUx4xzp79qyvDwW4Lq6/bds2tXz5cnX48GHV0NDg
+x7vZLhue3u7vI9t3LhRPh8bG1O3b99WW7dulf4U9j0tLc3XFx84cECO05u+
pp17N4Jrosx27unHjx8zrok6sVvn0EV4fy0tLZV7evv2rdgN3Bfq4Pjx43Is
vjO+3+J+37x5I221bNkytW7dOnXhwgU1ODjo2yeQ1sA7NK67fv16acf9+/er
mpqaGefHuzXOj2cK5ejs7JzxTMEO4hpGUMbFixfP+MxO3Qd6pr5//z6jfo1b
b2+v7IP7z8zMlH/bqT9g51kPxvj4uNT/wYMH1eTkpO9zPBN4FnHf/nSCGdw/
ymGksLBQymT0URjRdVNRUeH7DNdDmz19+lT+Rv3rc+A7lI0QQubKs2fPpC+B
7UA/m5ycLP2r0S40NzeLbU5KSlIfPnxQjx8/lj7SaCvQ9+KYW7duSb8M24U+
29j/ZmVlyd83b96UfhDXwt/v3r3znQd2Gf3syZMn1efPn+UYXCslJcW3D+w0
7DXe5VDmQ4cOyT4tLS3yvdYaiYmJ8l16erp8jjKhH8X4BsqIcmA/lB3A9pw5
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
6PxamFuCHFxc44xEG9qe2AM+FztaA2NGaD+Mo6xdu1bWfdm9e7f6/Pmz32PY
3oS4h47eEZX+vkHWT/27SVtg23DyjUp9Va2+tDJ/J3EW2p7Yw67WaGhokPaD
vsjPz5f1XhITE+Wz2tpay2PY3oQsXKAXmr4PqPtZtWrL2exZ2gLb9vM56mF2
nfrWOUR9QWIG2p7Yw67W6O/vVx8/fpR4Ug3GUbZv3y6awwrzfBVCSGyDfJyV
jd2S+2L1scxZ2gL+jD1X3quMvC+qq2/U6eISIljNjySxhV2t4Y/bt2/7ne/L
9iYk9hk3zB1ZcuDFLH3xrz3P1JGbhepNyVfVPzwe/ISEOAxtT+xhV2u0tbWp
5ubmWZ/fuXNHbd261fIYtjchsQliO7OKv4qGgJawyn1x5v5HVVDxXY1NTDld
XELmhJdtT6yuRWhXazx9+lTm9Q4MDPg+wzpzyC9y+fJly2O83N6ExBLofVq7
htTjnHq161KuZWznyqOvJa8n1zYjCx232h7EMhjjGIxAY5SVlank5OQol8oe
/rRGdXW15CDTcZ/QGFjXZceOHSo7O1u2hIQEmQerc7WbcWt7E7IQgF7AnNNb
LyrV+hNvLGM7t559p+5l1ajGNs4dIe7BrbYHOcqRpwI5soxg3CEpKUnu+9Kl
Sw6VLjD+tAbWpUW5Md9EA72B+9i4caNavXq1OnnypGpvb/d7bre2NyGxCsY7
MO6B3N9LDs6OvfhHfLpKuJavXnxoZGwncS1utT3QGLDXO3fuFB/HyMiIxEwi
BwV8AbDbsTqGEknc2t6ExBLd/aPqZUGT5NWyir3Auqkn75So959a1fDYpNPF
JSTiuNn2QF8cOHBAbdq0SXJdYa0U5PP2N7biBdzc3oQ4Bd5bGr71qbuZNTIG
YjU2gvmqiL343MC84MR7uN32QFccO3ZMLVq0SMZVvI7b25uQaIF5qcXV7erS
o09qucWa7DqvVtrbOtXcPsDYC+Jp3GR7RkdHVU1NzawNa7RjbsbmzZslf7f+
/OvXr04XOeq4qb0JiTY9A2PqdVGzOnKzQP3X3tljI7/szVCJtwpl7mrf4JjT
xSUkZnCT7YHfwipXmb8N4ytew03tTUikwdgI1hJBTvBt56zHRlYcfS1rpmJN
dqzfTgiZjZtsD3JLDA0N2dpKS0vVmzdvnC5y1HFTexMSCTA2UvKfsZEVAcZG
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
SZIkSZIk/6cvBD2mtw==
       "], {{0, 400}, {539, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{315.33333333333314`, Automatic},
     ImageSizeRaw->{539, 400},
     PlotRange->{{0, 539}, {0, 400}}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "result", " ", "found", " ", "using", " ", "NMinimize", " ", "which", " ",
      "is", " ", 
     RowBox[{"better", "/", "slower"}], " ", "than", " ", "FindMinimum"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"f", "/.", 
         RowBox[{
          RowBox[{"NMinimize", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"20", 
               RowBox[{"Log10", "[", 
                RowBox[{"unpackRIntExtSqz", "[", 
                 RowBox[{
                  RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", 
                    RowBox[{"0", "\[Kappa]afExt"}], ",", "0", ",", "Tlaq0", 
                    ",", "0", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}]}], 
              ",", 
              RowBox[{"10", "<", "f", "<", 
               SuperscriptBox["10", "5"]}]}], "}"}], ",", "f"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        FractionBox["ws", 
         RowBox[{"2", "\[Pi]"}]], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"Tlaq0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<shot noise peak frequency, \!\(\*FractionBox[\(f\), \
\(\*SubscriptBox[\(\[Omega]\), \(s\)]/\((2 \[Pi])\)\)]\)\>\"", ","}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<SRC intra-cavity loss, \!\(\*SubscriptBox[\(T\), \(l, \
aq\)]\)\>\"", ",", 
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<degenerate internal squeezing, \[Chi]=``\\nshot noise peak \
frequency vs SRC loss\\nall other losses zero\>\"", ",", "\[Chi]Ratio0"}], 
            "]"}]}], "}"}]}], "}"}]}]}], "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztvVd7Gzm7rrkmHMzhnMwPmH8xp3M4p3uuOZ2115r9tXOSc2rnnN12O6d2
tpyzLTlny9luZ1sO7ZxtOUr+MH1jbXCBpSJZoiiJRD33dZUtFlFFFAjiffDi
BfC//3uv//LL//gv//Ivff+Xv//5L/828P+sqvq3wf/3//r3i/+nZ98unXr+
47/9Xz37/aPTP6r+j3//n/4+Oep/+Jd/+d/+Tv8///23EUIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCE8BgwYYGprazs6G+3OxYsXzZkzZ1p1j4MHD5o+ffq06BrK+u7du6363FKy
ZMkS89tvv3V0NtoFviu+s0rn69evZvny5aZfv35m8ODBZuPGjaapqSnvNZ8/
fzarV682AwcONL169TIzZswwDx48yEozfvx488svvzQ7Xr9+3ZaPI4QIiLRq
imXLlrXall64cMHMnTu3RddgA/bt29eqzy0ladIUfFd8Z5XOlClTrJ6oqakx
O3fuNF27djWrVq3Kmf6f//ynmT59utVU1L0TJ06YiRMnmp49e2bpBd5fuHCh
TeMfX758aY/HEkIEgDRF+yJNIVrD/fv3re/g+vXrmXP8ftEVHz9+jL3m1atX
9prTp09nzqETuGb//v32NX4M0ty4caNtH0AIEQy0F65/wv83b95spinwh9Kn
wT+Kn3TLli2msbEx6z70c0aPHm37NQsWLDD19fW2Pfrw4UMmzalTp8y4ceNM
9+7dzciRI+1rn6FDh9r70NcaMWKEzdP8+fPNp0+fMmn4XD5/+PDhpkePHmbq
1Knm3r17mffpY/G5z58/t/2rQYMG2fP4hjds2GCGDRtm203s+NatW21/DSZN
mpTl23WfmeTZfY4cOZI19pHvmX7+/Jn1mZRJ0jJH/6xYscJcunTJPhOfi33g
uSiD2bNn22t57+zZs5nreN7Dhw/b76pbt262b7to0aIs25NPU3D9rl277HNx
vftsH8ZxJk+enKlTV69etd+Tq1P4BvgMH/LYuXPnrHNJyj5fnXr27Fms357j
7du3Ng3P78Y+kpQfULfxC/A+/z969Mj+ZqLpCkGdGzJkiHny5EnW+U2bNpm+
fftm/XbywTgH6V1dBq7lOal7cbiy+fPPPzPnuL537972+wXK341z8B71VQgh
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
Qog0ElI7XqymYA3uVatWZZ07deqUvd+5c+cy56Qp2paQ6qIQQqSRkNrxYjVF
r169zMmTJ5udX7hwoV0708VXSFO0LSHVRSGESCMhtePFagr29Fi+fHmz8+/f
vzd9+vSxa2cyBiJN0baEVBeFECIEzt98bgbNPWL+MX6v+bcxu82//30MmXfU
NDbF28GQ2vFiNQV7hnEtuqKuri5r3seFCxdsrAXvrVmzRpqiDQmpLgohRAhU
zTxo/t9Ru5odHz/Hz48MqR1vzbyPHTt22DEQ7vHkyZOs99EV/fr1y6xlLk3R
NoRUF4UQIgSkKYpfn4K5o6xPwV5hUZqamsyNGzfMsWPHtD5FGxFSXRRCiBCo
BE2xc+dOG6tQaorVFLt3747VEfkg/d69e6UvSog0hRBClBeVoCl69+5tzpw5
Y/8ePXq0effuXUnuW6ymWL16tRk4cKDZs2eP+fjxY960rKOJBhk0aJBZuXKl
NEUJCW2fXCGEqHSSaoqO3OucWMcuXbqYefPm2c8nLvLr16+tvm9rxj5u3bpl
Jk6caOMxx4wZY9erIMaCuR7bt2+3+mHUqFH2/fHjx5vr16+3Or8iG+kJIYQo
LyrBT0FswtGjRzOawh3Dhw+3a1fu27fPxi58/vy5RfctxR5id+/eNdXV1VZX
4E/hnj179jQjR46063WjPUTbIE0hhBDlRSVoCh/21rh9+7a5fPmy9QvMmTPH
DBgwIKMzhgwZknieRVvsS6qxjfajo+uiEEKIbCpNUxDriN8iCnEN165ds3t7
daSmEO1HR9dFIYQQ2VSapigl0hSVTUh1UQghQkCaouWa4tKlS+bLly9tkCPR
EkKqi0IIEQLSFC3XFMRjMg+FfT9YO6O+vl5xFB1ASHVRCCFCQJqiuLEP1sg4
ceKEnXdSVVVl9w5jX9Ljx4+bt2/fljinIo6Q6qIQQoRA1SxpitaCj+LBgwd2
baspU6ZYH8aIESPMhg0bbNyoaBtCqotCCBEC0hSlj9FkPS5iLlira+jQodpD
rI0IqS4KIUQISFNo3kelElJdFEKIEJCmkKaoVEKqi0IIEQLSFNIUlUpIdVEI
IUJA8z6kKSoV7UsqhBDlRSXsS9pWtJWmePTokZkxY4bdlwSePHliLly4YBoa
Gkr+WWkmpLoohBAhID9F6TUFe6CzL+njx4/tHBD2KWXP8379+pmnT5+W/PPS
Skh1UQghQkCaovSaokePHubmzZv2b/ZoHzx4sN2HffHixXa/dlEaQqqLQggR
AtIUpdcU7Lfuxj1YW3Pjxo32b9bw7tu3b8k/L62EVBeFECIEpClKrynWr19v
xz+IoejevXtGX9y9e9d07txZe4OUiJDqohBChIDmkpZeUzDOMWvWLHv/cePG
WQ3x8OFDM23aNLtmtygNIdVFIYQIAWmKtptL+vHjR/Pjxw/7N76Lrl27mnPn
zrXZ56WNkOqiEEKEgDRF6zTF2bNnzbp162zs5fz5823sBPuGRcc3mpqaTGNj
Y6s+68uXL1aX4AcpBJ/PnmbDhw+3e6aSNzSOD3NSli9fbuejEEdK3slnW6R5
9uyZmTlzpunVq5cZPXq0OXnyZLM8J0njE1JdFEKIEJCmaJ2mwMZjt6dPn26m
Tp1qBgwYYO9LnGYp9yRFI2CruXcSTbF9+3Y7f3XLli3m4MGD1tYz7uLvZ8Ye
quiAmpoas3PnTvssq1atyrpPKdKwLkfv3r3tOBDzYFasWGGfAz3WkjRRQqqL
QggRAtIUrdMU3783L6cXL16YtWvX2njMy5cvt+r+sHr1ajNo0KDMmmOFNAV5
wj5v3bo1c451uLjW5ef+/fv29fXr1zNpamtrrR5w/oxSpdm7d6/1PXz69Mm+
Rh/NnTs3E2uSNE2UkOqiEEKEgDRF28VT7Nu3zwwbNqzV9zl27Ji9F+tbJNEU
V65csemi62vhp1i2bJn9G58H81p9e/3hwwd73YkTJ0qaBl2wYMGCrLzU1dXZ
NK9fv06cJkpIdVEIIUJAmqI0moKYgij37t2z/fVSwThAEk3B2AHjHtH+PTEV
rBkOixYtsvNQolRVVdk4jFKm6d+/v9mxY0fW+6xXzrMwvzZpmigh1UUhhAgB
aYrSaArWo8AngS9h27Zt9uA1NrdUJNUUxFIQlxll5cqVZtSoUfZvYj/i1vQk
NoRxm1KlIX4DfUNMh8/79+/ts7CGR5I0cYRUF4UQIgSkKUqjKW7cuGF1xOzZ
s20sA/fetGlTVkxkaymFpnDrYxBXid8iCjqI+I1SpcmlF969e2efhfGNJGni
8Pe1C6leCiFEpVJIU0Tb7ZDa7raKp8BGYv+ZA5LLb18MSTXFoUOHYtfrxPYz
PwWIXXB/+zBmwdyNUqYh3sL97XDjGm6N0SRpooRUF4UQIgTkp2idpmDOY3Td
Bwf3Hjt2bKvu75NUUzC3g3TMP/Fh3IN1JGDDhg1W8/i6gzkX+AvcuhClSkMZ
MCbkw3iGH3+ZJE2UkOqiEEKEgDRF6zQF8YnsQ7p582bz8uXLrPfOnDljunXr
1qr7+yTVFKzdybxMFyMJ6AuuZU4IED/Ka/53ML+EmFLWiihlGvLBWIwfx7pk
yRI718ORJE2UkOqiEEKEgDRF6zQF/fPjx4/bNa64H3EEzK2YPHmyHX9gjYVS
kUtTsK864w/+GAGxHdh1YhTOnz9vRo4cademdPEd5JtYCPJNvAJzRXr27GnW
rFmT9WylSEOsJWMbrJGJD4V1uPBj+OuUJ0kTJaS6KIQQISBNUZp4Cmw1cZrV
1dV2HsRvv/1m50bGzTEtllyawp1HOziw9cQnMP+C2Ab2XHd+Awd5W7p0qV0D
E00QF1NaqjSsleHW3Wac49SpU82eL0kan5DqohBChIA0RduteSXalpDqohBC
hECaNQX9e+YrisokpLoohBAhkGZNISob1UUhhCgvpClEpaK6KIQQ5YU0hahU
VBeFEKK8kKYQlYrqohBClBfSFKJSUV0UIfGh4bvZeeKeOXT+YUdnRYii6TNT
msLny5cvdm1p1oCI7pchyovQ66JIB98bm/7WEY/MsPnHbNvbaeK+js6SEEUj
TZHNrFmz7DOybhX7eDPfVJQnoe1pJ9LHmT+fmn8fuyer7ZWmEJVMUk0R4r6k
cdTU1Nh9wVgHEj/FkSNHOjpLIgeh10URNj8af8a2vdIUopKRn0JUKqqLohK5
Xv/aLN522ew/Ux/b9nIIUamkUVPs2bOn2T7govIIoS6K9EB01pdvjdYPkUtL
SFOISqfPzAOp0xTsqc1zjBkzxu6xLX1RmYRQF0V6KKQjpClECKRRUzQ2Nppr
166ZlStX2v21eSb2wcR/8fLly47OnkhICHVRhM+3H00t0hPSFKKSSaOm8CEW
8/bt22bdunVm4MCB9vnGjRtn9u7da169etXR2RN5CK0uivB4/f6LOXzhkTSF
SA25NAXrr8QRYjv+4cMHc/z4cfP777+bTp062aNXr172WZlP+uzZs47Ooogh
xLoowoH4iZZqCWkKUemkUVMwR/TRo0dm586dZvz48faZunXrZubMmWOOHj1q
NQb+C8ZHRowYYaZMmdLRWRYxhFAXRbgcPPdQmkKkjjRqCjfGUVVVZZYvX24u
Xrxovn37Fpv20KFDpnfv3lpTswwJoS6KMKG9KFZPSFOISibXXNKQNcWmTZvM
nTt3rC+iEKzR/ebNm3bIlWgpIdRFESanrj6RphCpJI2aAt6+fWsOHjxovn79
al8/f/7c7N+/354XlUEodVGEBWtQtEZPSFOISiaNmuLp06emR48epnv37na/
MCC+gjEOYjPr6+s7NoMiESHURREOP//5T7unaPepNTm1wn8dvTvr9b9KU4jA
SKOmmD17to27dD4KBzEV06dPV0xmhRBCXRRhcO3eKzNk3tG8vod/jN9rth65
k3Xu38bslqYQQZFGTUFs5pkzZ2Lfq6urs/4LxWSWPyHURVH+vP/0zcZHxPH0
dYOZvrYuq+0cufiEuf3ordlw4GbW+VV7/2w2LiJNIUIjjZqC+aGsyR0Ha10N
Hjy4nXMkiiEN++SKjoNexct3nzNt4tfvjZn33jd8Myv3/JmlCXpNP2BOXPkr
0x+pu/7Mnu82pcZqCZCmEKGTVFOEtNc561Lgizh16pRdpxuampqsj4I4i+rq
6g7OoUhCCHVRlC/ERvhtIr4K1hfeUHvT/LfxezPn+XvLkdvm+4+mrOvffPhq
qmYdNDcf/ue8MXSJNIUImTT6KZhDunr1atO5c2e7ZiZ7ivE3z7Zw4cKMzhDl
TQh1UZQPtHmPnn/MvB4090jB+RkLtlwybz9+zXPXbKKa4t/H7pGmEEGRRk3h
YD8P4ioY7zhx4oR58iR+zFSUJyHVRdHxHL342Ez843TmdS4dwVyNuRsvmL9e
fmrxZ0hTiNBJs6YQlY3qoigl1QduWhvPGAbjFrk0RTFawvH1e5M0hQiaNGoK
1sZcs2aNmTBhgt2DNO5Issam6FhCqIuiYyGakjiJxqafZkZk/kbcwRyQ1iBN
IUInjZqCmImuXbuaZcuW2XW64w5pivInhLoo2ofjl/8yWw7fzrzGtkPP6fH7
HcUdpZhdLk0hQieNmoL1Mmtrazs6G6KVhFAXRfuwaNtluyYVbD921/x/4/aY
ky3Yk+PuX+9Kko9vP6QpRNikUVOMHDnSXL58uaOzIVpJCHVRtA+uXas5+6Cg
ftjxt+aAC7de2NcTVpwucPfkRDUF2kaaQoREGjVFTU2NmTNnjsY3KpwQ6qJo
W743Npn7T94n8kW8i8wJbfj6w+w8cc/8aCxdOyFNIUInjZri9OnTdk+P4cOH
m/Xr19s1Nffs2ZN1aG3u8ieEuijajv1n6gvqiN4zDrSrHf8uTSECJ42aYsiQ
IXb97XyHfBjlTwh1UZQG1p16/uaz3Wtj+a6rOeMU/OPIxcfWF8Ha2dv/+3hH
WxPVFP9t3F5pChEUadQUIgxUFwX+xNkbzica20Br8D9zQGj36p++t/d4+OyD
ef3+S7vkl7EYaQoRMmnWFLRH7969s+tn/vjxQ+MdFUZIdVFkw15brBkRR8OX
H+bUtSd2XezuU2ti26+Bcw6bcctOmYVbL2fNAf114XF7Pba96Wf7/96lKUTo
pFVTsH/YwIEDM/uioSvmzZtnYyukLSqDUPa0E81hnue+0/VWD1y4+dz6FrYd
vWPGLD1p/nV0/L5b7nj84mPO+16996r9HiKGZppivDSFCIs07kt69uxZ+xxL
liyxc0q7detmNQX7fnCeeSGi/AmhLor/5J///fj5t6bHx1BoLKPq77Zr+c6r
5uSVJ3YPjk2HbpkRi4539GPkhTkk/jP8Q5pCBEYa/RSjR482S5cuzbxmf3O3
f9jatWvNsGHDOiprogWEUBfTjvMIsoe4a3ty+SHYF5w9vvacum+evPqUNaaB
tnj57nOr185ua6QpROikUVP07NnT7kfq8DUFPgzW7db4R/kTQl1MG/yuiJO4
Uf/azFx3LlFspTvcetpxtGS/8Y5EmkKETi5N8b4hXu+H0I6PHz/e7iHm8DXF
5s2b7TqbovwJoS6GDrGWNx+8sWtF4GP4ZcK+gtqBGIMVu67Z2AniKJmTgQ8i
BNBT0hQiZNKoKYjP5Dk2btxotUT37t3N7du3zcmTJ03nzp21F0iFEEJdDAX8
D9j98zefm61H7tj5nX1nH0rsgzhx5S9Td/2Zjc0Mmaim+GWCNIUIizRqCjh4
8KDdS8yPPUVbbN++XeMeFUIodbHSePPhq7X/62puWO3A3ly5+tvu+K+jd9t0
v2+8aNb/fR1+C9Z/4l6lXPu63JGmEKHTe0Y6NQV8+/bN1NfXm/Pnz5u7d++a
z5/D8K+mhZDqYrnx6ct3uxbUqatP7B7hrAUxeslJ03dWYd8DdpJxiz92XzOH
Lzyya0ulSTfkQ5pChE6aNUWl8eXLFxs/mkT74GthrQ32NOnTp4+ZP3+++fgx
e97+169fzfLly02/fv3seuSMBTU1NbVJmmfPnpmZM2eaXr162Xk3jDNFSZLG
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
2p/bwZ6kaApYu3at3adblD+h7JMr0oU0hQiZpJoitL3Oz5w5k3ntawp8GOyT
Id9j+RNCXRTpQ5pChEwa/RTjx4/P2uPK1xSbN2+2+22J8ieEuijSh9/Odp8a
rymafkpTiMokjZqC+Eyeg33D0BLdu3e3e3qePHnSdO7c2dTW1nZ0FkUCQqiL
In1IU4iQSaOmAPYAZw9Sf0wHbcGa3Rr3qAxCqYsiXfjtbI+ptdIUIijSqCle
vHhh9/3+9u2bqa+vt3uE3717V+tnVhgh1EWRPuSnECGTcw+xgDVFVVWVWb9+
fUdnQ7SSEOqiSB/yU4iQ+WXivtRpip07d9q9ST99+tTRWRGtIIS6KNJHlqaY
Jk0hwiKNmqKurs7MnDnT9O/f36xatcrs2bPH7Nu3L+tQTEX5E0JdFOkjiaZo
bPrZ0dkUoijSqCkGDRpkBgwYkPf4+VO/6XInhLoo0oc0hQiZf0zYmwpN8ebN
G7tPGLx+/do0NTV1cI5Ea6nUuijSjd/O9pSmEIERV59D1BTME7106ZL9mzUo
nj171sE5Eq2lUuuiSDfSFCJk0qIpxowZY/r27WumT59un2HixIn271yHxj7K
n0qtiyLdSFOIkEmLpmBNiurqahuTyTMsXLjQ/p3rkKYofyq1Lop0k6Upph+I
bX9/NKr9EZVJWjSFz+zZs83bt287OhuilYSyp51IF9IUImSSaoqQ9iUVYaC6
KCoRv53tJU0hAiONfgoRBqqLohJJoim+N2pemqhMpClEpaK6KCoRaQoRMtIU
olJRXRSViN/O9p4hTSHCQppCVCqqi6ISSeSn+CFNISoTaYrmsNeH9vsof9JQ
F0V4JPJTSFOICiWNmoK1KnLx5MkTrXlVIYRQF0X6kKYQIZNGTcF+pI8ePco6
19DQYNauXWvX7WaPMWmK8ieEuijSRxJN8U2aQlQoadQUS5cuNT179jR37tyx
2uHw4cOmT58+plu3bmbHjh2ZvcZEeRNCXRTpw29n+8w8KE0hgiKNmoJYiTVr
1lgNMXLkyMxa3exdKiqHEOqiSB9JNMWs9efMvM0XdeiouCONmgLQFVu3brXP
s3v37o7OjiiCUOqiSBd+Oztz3bmcbbAOHSEd7wLTFLdu3Yo9fv/9d+uvOHHi
RNZ5zfsofyq1Lop047eze0/fj21/xyw9qUNHRR69csQIhaYpiL309ywpdChG
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
5ZSX9rpPCJqCdZTWr1+ftZcm//OadSDzrbMkygdpio67R6j3Kae8hHqfcspL
ud2nnPLSXvcJQVM43r17Z65evWr3z2AuCK9F5RC3v50OHTp06KisQwghhBBC
/Me+pGvXrrXrabL3Vdyh8Q8hhBBCFII1KIidYH+P6urq2EOaQgghhBCFYN/L
bdu2dXQ2hBBCCFHhsP6E1t8WQgghRGvZvXu3mTt3rsY3hBBCCNFi9u/fb9e4
csfAgQPNiBEjzMaNG7POu0NrcwshhBAijiFDhpjBgwcnPuTDKF+ePXtm95Rl
35bRo0fbvWUL8fXrV7N8+XLTr18/+/2iJZuamtoht+1LMWXDPKh169bZNet7
9Ohhxo8fb9drCY1iysanoaHB1p8jR460UQ47jmJ/H5cvXzbTpk2z9Yb6c+7c
uXbIbftSTNnwm1q9erXtu1LfZsyYYR48eNBOOW5/vnz5Yrp27WqfuxD01xkr
IAahT58+Zv78+ebjx4/tkEshmkO7Towte8cePXrUrFixwq6Zwt5v+ZgyZYpt
E1h/fefOnbb+r1q1qp1y3T4UUzb8vqdPn273zdu+fbs5deqUmT17tr3uxo0b
7Zj7tqXYeuOzePFie02ImqKY38f58+czaw+zbiD1hjWJb9++3U65bh9aWjbu
N4W9xOd94sQJuxd2z549zevXr9sx5+0Dz4vO4reRRFPQzlBP2Fvr4MGDVqcx
ZhBCP94f33jx4oVdU5O2R5Qve/futbr/06dP9jXfIbEx2Ipc41X379+39f36
9euZc7W1tbZtCEkfF1M2Dx8+tGVDu+fgt801tIuhUEzZ+Fy8eNHahBA1RTG/
D8ps2LBhWXsxNjY2Wl2xa9euNs9ze1FM2bx69cpe4+997frxjMGHBL6YQYMG
ZdbDLKQpvn//brX91q1bM+cePXpkr8XnVam8ffvW+qJWrlxpX6Ml3N4faEva
WVGeYAMWLFiQda6urs5+d7n6AGjovn37ZtkO9oyL2tJKp5iywS/B+9F16dkP
Z8CAAW2W1/ammLJxuDEP/Bshaopifh937961779588a+DqGPGUcxZcMYG+//
+eefmXNcjy0NSW8B/il8Mc6HV0hTMKZKuqdPn2adx0+xbNmyNsxp28L4De2l
00X4pebMmWP1JWtrzpo1q4NzKHLRv3//ZvvGPnnyxNZT2rk4Fi1aZMd8o1RV
VdlxvVAopmywl7SBPrR/2GB+F6FQTNk4qD/4bCiXEDVFMb8P7CnjZbShxFHQ
J8MuXLhwoa2z264UUzbUE2KS+P08f/7c/sbw8xNzQp0LEcYQk2gKdDnjHlHf
IDaZfn6lgu5EWwHfN2XhxgAPHz5s9aQoP+gLUR8Zg/Nhv3q+w1zt2dSpU828
efOanSdGiDXaQ6DYsom7D+PjXMN4eQi0pmx4D1vgfBkhaopifh/YU3QEfl3i
DNAWrq8aUhxOsW0Hfj/siL9PVktidyqNpJqCWArqTBTGDEaNGtVW2WtzeCa0
A+D/pM1gLBAYA0N/ay5p+ZHLNvD7pT7zXcZBjBU6OArjwYwHhkCxZeNTX19v
xo4da20FdiIUii0b+hv0P3wNEaKmKOb3Qb87qjtpM6k/IcXhFFM22NVff/3V
jBkzxpYPsRh//PGHjae4efNmW2e5QyiFpsDPVakwtoFvCp8nvwFXZ4izoA5x
TpQntPHEXvs4H3aueHPG0ePaOfyX0XtVMsWUDWBzXSw29Z+YqdAopmyYP4j/
Gm1BW8lBevQWf4fS7yjm90EZUBbE3Pls2rTJlnUoFFM2+HDol/oxnNQV5jFj
d0IkqaY4dOiQ7bPEjX1UshZ9/PixrfeUAbHcvAZiLNCSIc7NDwX0Hj5WH/zT
+WLtNmzYYL9bvx4T/48NbekaBeVMMWUDxGPyOz9w4EAwdjJKMWXD/sS+7zp6
uDkklU4xvw9nQ6Lz5LjX0KFD2zS/7UkxZUOfm7GRKPh24vroIZBUUzBGRjrm
Wfow7oGGr2TQ16xB4v8mWK+FOE1RvtAH4HfJOjQO9pclpjAX9+7ds/WY/x3E
K6MfQ5o7XEzZuL56SPNf4iimbJj/devWrayDssLO8Hcoa6YV8/vgPH1xfzyJ
8WP0RFS7VTLFlA1zTbt06ZKlVdEkxP9Pnjy5zfPcESTVFD9+/LBzuv34VvQF
16ovLzoC4urwMeFHRPOi/ekz+Ov3MWaJH835tPk949NnLVXGzok9xj9FLGJI
FFM2zIUgDb/x6Pr0tJ2hUEzZxBFiPEWS30dc2aCt8G8x3oEmxV6iM6J90Eqm
mLJhLQrWbGAtJ3x/lI1bR85f5yIkcmmKuHrDnuBoMvQo8SbMG2Jd21DnI4vy
h7nNbo1lfNqsseDj6rcfP0b/dOnSpXadAdoH2sEQ63BLy4YyyeXbD8mHDcXU
myghagoo9PuIKxvsLZqU2DrsLLbDjSOHRDFlQ/wvfjDGTSgb9FZI82Gi5NIU
ueoNsSiMDxGXsnDhwqD8xUIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEKE/u3r1rfvvtNzNgwADTrVs3M2LECLNp0ybz+fPn
rHS//PJLs6NLly5m2LBhZtu2baaxsbHZvS9dumRmzJhh792zZ08zduxYc+TI
EfPz58+8eerTp485ePBg4md49OiR2b17d+L05c6TJ09s+fI/lOL5+A727dtX
iuyVjKtXr8bWK/8YOHBgR2dTCCFEAm7fvm06d+5sJkyYYA4dOmROnz5ttmzZ
Ym36uHHjsnQC7fu8efPMiRMnMgfXzJ8/375XXV2dSfvPf/7TrF271p5HU+zZ
s8fs3bvXzJ49255bs2ZN3nzNnTvXXLhwIfFzkJcePXq0vADKlFevXpmpU6fa
/6EUz1eOmuLp06dZ9Wn8+PGmX79+WefQHUIIIcofbDd+iaiP4cGDB9b2nzt3
LnOO17t27Wp2D/QDtmDo0KGZc+fPn7fp0RG878M53qPvXSpC0xRRQtUUUaiL
aFQhhBCVx+jRo82cOXNi39uwYYO5cuVK5nUuTQFoE8ZAHJMmTTJjxoxppifg
27dv9n3sZC7oq7qxD3wngwcPNq9fv7Z+jl69etnPOnv2rH1/69atWb5y9Axp
+fv58+dm4cKFZtCgQTbt169f7XNxfdeuXe19uT4un/lg7Gbnzp1m+PDhpnfv
3tYX8/jx48z7+T6Ha3k+/Dg++CTI86lTp8yzZ88yYx9xz0f5LViwIOv6hw8f
2vfxPcUR1RR8BuWJT4ryWbFiRdZ4V0NDgz3Xv39/0717d+vLunXrVuL3Wwpl
1qlTJ6s5hRBCVB6MQdCOr1+/3rx8+TJvWuzV5s2bzadPnzIHthttQFzF4cOH
bTpsJnEZjHcUS1RTuLEYzl27ds3acMZs3rx5Y20bdojPfPHihdUsTlOQbsqU
KZlYhEWLFlkNsH37dqtJeH7S5dM3cXCde8a6ujozffp0a1f53CSfs3r1amvH
fS2Dveee2FZfU8Q9H6+JT/H9S2gP7HsufeRrinfv3lm/B2VKnihXyhyN6a5H
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
ESxqYg==
       "], {{0, 385}, {533, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{349.33333333333326`, Automatic},
     ImageSizeRaw->{533, 385},
     PlotRange->{{0, 533}, {0, 385}}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "result", " ", "found", " ", "using", " ", "NMinimize", " ", "which", " ",
      "is", " ", 
     RowBox[{"better", "/", "slower"}], " ", "than", " ", "FindMinimum"}], 
    "*)"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"a", " ", "strange", " ", 
      RowBox[{"result", " ", "--"}], " ", "is", " ", "any", " ", "of", " ", 
      "this", " ", 
      RowBox[{"physical", "?", " ", "behaviour"}], " ", "appears", " ", "to", 
      " ", "change", " ", "around", " ", "T"}], "=", 
     RowBox[{"0.5", "?"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.835825350906526*^9, 3.835825423931772*^9}, {
  3.835825462686274*^9, 3.8358255788904057`*^9}, {3.835825624818696*^9, 
  3.835825651289522*^9}, {3.835825681423667*^9, 3.83582577096245*^9}, {
  3.835825891785246*^9, 3.835826015675394*^9}, {3.8358265455709953`*^9, 
  3.8358265459328547`*^9}, {3.8358282958576097`*^9, 3.835828305800078*^9}, {
  3.83582835960767*^9, 3.835828386775895*^9}, {3.835828421175988*^9, 
  3.835828423135406*^9}, {3.8358284661558867`*^9, 3.835828470715337*^9}, {
  3.835829817996174*^9, 3.835829819722694*^9}, {3.835832988455262*^9, 
  3.835833001942541*^9}, {3.8359110515086107`*^9, 3.835911091893127*^9}, {
  3.8359111364090033`*^9, 3.835911164916185*^9}, {3.8359160993057203`*^9, 
  3.835916101739846*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"d0d0e2fd-f5bc-439a-8e94-481a54534f11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"the", " ", "\"\<threshold finding plot\>\""}], ":", 
     "\[IndentingNewLine]", 
     RowBox[{
     "sensitivity", " ", "improvement", " ", "at", " ", "fProbe", " ", "vs", 
      " ", "\[Chi]", " ", "plot"}]}], ",", " ", 
    RowBox[{
    "but", " ", "with", " ", "no", " ", "loss", " ", "in", " ", "the", " ", 
     "arms"}], ",", "\[IndentingNewLine]", 
    RowBox[{"the", " ", 
     RowBox[{"message", ":", " ", 
      RowBox[{
      "the", " ", "optimum", " ", "sensitivity", " ", "moves", " ", "off", 
       " ", "the", " ", "lossless", " ", 
       RowBox[{"threshold", " ", "--"}], " ", 
       RowBox[{"i", ".", "e", ".", " ", "threshold"}], " ", "changes", " ", 
       "with", " ", "loss"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"fProbe", "=", 
     RowBox[{"2.5", " ", 
      SuperscriptBox["10", "3"]}]}], 
    RowBox[{"(*", "Hz", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"probeSensRef", "=", 
     RowBox[{"unpackASDShIntExtSqz", "[", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
        "}"}]}], "]"}]}], " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"everything", " ", "turned", " ", "off"}], " ", "\[Rule]", " ", 
      
      RowBox[{"conventional", "?"}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"armLossList", "=", 
      RowBox[{"{", "0", "}"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "0.5", ",", "0.25"}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"srcLossList", "=", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "0.5", ",", "0.25"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{
              RowBox[{"unpackASDShIntExtSqz", "[", 
               RowBox[{
                RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   FractionBox["2", "\[Tau]RoundTripSE"], 
                   RowBox[{"Log", "[", 
                    SuperscriptBox["10", 
                    RowBox[{"rdB", "/", "20"}]], "]"}]}], ",", "0", ",", 
                  RowBox[{"armLossList", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"srcLossList", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", "0", ",", "0", ",", 
                  "0"}], "}"}]}], "]"}], "/", "probeSensRef"}], "]"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "armLossList", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "srcLossList", "]"}]}], "}"}]}], "]"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"rdB", ",", "0", ",", "5"}], "}"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, aq\)]\)=``\>\"", ",", 
                RowBox[{"armLossList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"srcLossList", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "armLossList", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"Length", "[", "srcLossList", "]"}]}], "}"}]}], "]"}],
             "]"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
        RowBox[{"Frame", "->", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"StringForm", "[", 
              RowBox[{
              "\"\<strain sensitivity (NSR) in \!\(\*SuperscriptBox[\(Hz\), \
\(\(-1\)/2\)]\) at `` kHz\\nrelative to lossless, no squeezing value / \
dB\>\"", ",", 
               FractionBox["fProbe", 
                SuperscriptBox["10", "3"]]}], "]"}], ","}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<unitless squeezing, rdB=20 \!\(\*SubscriptBox[\(log\), \
\(10\)]\)(\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\[Chi]\*FractionBox[\(\
\[Tau]SRC\), \(2\)]\)]\))\>\"", ",", 
             "\"\<degenerate internal squeezing\\nno radiation pressure \
effects\\nparameters of benchmark 3rd gen. detector\>\""}], "}"}]}], "}"}]}], 
        ",", 
        RowBox[{"GridLines", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"1", ",", "Red"}], "}"}], "}"}], ",", "None"}], 
          "}"}]}]}], "]"}], "\[IndentingNewLine]", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"thresholdrdB", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Minimize", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"20", 
              RowBox[{"Log10", "[", 
               RowBox[{
                RowBox[{"unpackASDShIntExtSqz", "[", 
                 RowBox[{
                  RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    FractionBox["2", "\[Tau]RoundTripSE"], 
                    RowBox[{"Log", "[", 
                    SuperscriptBox["10", 
                    RowBox[{"rdB", "/", "20"}]], "]"}]}], ",", "0", ",", "0", 
                    ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "]"}], 
                "/", "probeSensRef"}], "]"}]}], ",", 
             RowBox[{"rdB", ">", "0"}]}], "}"}], ",", 
           RowBox[{"{", "rdB", "}"}]}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
       RowBox[{"threshold\[Chi]", "=", 
        RowBox[{
         RowBox[{
          FractionBox["2", "\[Tau]RoundTripSE"], 
          RowBox[{"Log", "[", 
           SuperscriptBox["10", 
            RowBox[{"rdB", "/", "20"}]], "]"}]}], "/.", 
         "thresholdrdB"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tolerance", "=", 
      RowBox[{"N", "[", 
       SuperscriptBox["10", 
        RowBox[{"-", "5"}]], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<To a tolerance of ``, the optimum \[Chi] is on threshold: \
\>\"", ",", 
           RowBox[{"ScientificForm", "[", "tolerance", "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"Abs", "[", 
           FractionBox[
            RowBox[{"threshold\[Chi]", "-", "kout"}], "kout"], "]"}], "<", 
          "tolerance"}]}], "]"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"threshold", " ", "finding", " ", "plot", " ", "against", " ", 
         RowBox[{"\[Chi]", "/", "kout"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"20", 
             RowBox[{"Log10", "[", 
              RowBox[{
               RowBox[{"unpackASDShIntExtSqz", "[", 
                RowBox[{
                 RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Chi]Ratio", " ", "kout"}], ",", "0", ",", 
                   RowBox[{"armLossList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                   RowBox[{"srcLossList", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "0", ",", "0", ",", 
                   "0"}], "}"}]}], "]"}], "/", "probeSensRef"}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "armLossList", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", "srcLossList", "]"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Chi]Ratio", ",", "0", ",", "2"}], "}"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"StringForm", "[", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, aq\)]\)=``\>\"", ",", 
                 RowBox[{"armLossList", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"srcLossList", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "armLossList", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", 
                 RowBox[{"Length", "[", "srcLossList", "]"}]}], "}"}]}], 
              "]"}], "]"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<strain sensitivity (NSR) in \!\(\*SuperscriptBox[\(Hz\), \
\(\(-1\)/2\)]\) at `` kHz\\nrelative to lossless, no squeezing value / \
dB\>\"", ",", 
                FractionBox["fProbe", 
                 SuperscriptBox["10", "3"]]}], "]"}], ","}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<squeezing parameter, \!\(\*FractionBox[\(\[Chi]\), \
\(kout\)]\)\>\"", ",", 
              "\"\<degenerate internal squeezing\\nno radiation pressure \
effects\\nparameters of benchmark 3rd gen. detector\>\""}], "}"}]}], "}"}]}], 
         ",", 
         RowBox[{"GridLines", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"1", ",", "Red"}], "}"}], "}"}], ",", "None"}], 
           "}"}]}]}], "]"}], "\[IndentingNewLine]", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1: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
efp+icWxXLS1nenzYQv/ZutlU9H3fus69bvm28O7rKauqWvrbVft7uu2Hprg
9p1YaDE2iclz/SZrfks4ro4QQryENLwQFQc0+ZQpU8ynhmf/2LGCmg4dzztD
/Xr3TGn4RYsW2XtIq1ev7nr16uVGjRpl62hr1qzpGjdubLFx+vbt6+rVq2ex
cg4fPpyR65Y30mmvmVdp0G2RafjGPZekpEBvZO91p2Y+XMC/5tioH9laWGz2
pRHs6vjeHzi11G06MMb874lbP255ZYt12XVi4vW18bbOU77t+s7+pRu68K95
53zCTV/bwM3f1Not39Hd1uISe5PxBbr/3MUD7vK1szbuEEKIVGA9P+/Puxln
DlQaXoiKB7EkiQ9/48bd2iI3N9ft2LHD3p+aqfjwkydPds8+++xd8eGvXr3q
WrVq5RYuXGifGTN0797dtW/fPiPXLW+k214v3XQ03xaPj3xq3HZXjyx2Jyb+
voCWPz7mZ+7y3il5P5cxf6u8MeT1Pl1N5x88vdxtPzLV4tdjz5++tqEbs+wx
0/rdp3+/UFo/vPHe296zfm7+/iMX/8tNWFHF3nU7e0Nzu/bynT3c2r2D3eaD
4/LGAdPNjwi//pPZW/PSut9duHLSXbuRo/GAqODctnUuN3Ov2bwYz8SV6+fs
3RM8I+cvH7V5Op7v0zm73Kns7bbmhhi2PE+8p4IxNvNre47PdbuOzrJx97bD
k9yWvGdv04HRNr9HvFzaBebjWGeDLWDp9s5u8dYOtraed2Tg40fsLeLq0nYw
hzd5VS1bfz9++ZO2Tmf00kfynveH3PBF/2fj/sHzH3QD89oX5v3wDcTXr9fM
n9gcYrdp95mNIPzejZ4zfhwzN6ThhRBFDTZ43s0aBXFxGjVqlP95165dNk+Q
qfFDeSLd9jr31m1Xp9MC0/AtB6xI8+q33ZVDc92J8Q8U1PLj7neX902190eV
CVJY05p767q7ePWUO3V+h+l9+nr6dvryORtb2Brc0UsftX6596yfJRVDMxMb
1+k+/QfW/w+c978Wv5NxAZoB/cDYYOb6Jhanc8HmNm7Jtk5uxc6ebvXu/jZX
gE7BT4ixwp7j82y8gLY5cmataR10T1bObtNB+BBduHLCXbp2xl29fj5PM100
uyA6KuNxP0UByF/yOfclW+wdzXrBysHr1ot5ujXn8jErJ+Z9KDPKjjrL+I/5
INOveWV7OGu1lfOBU8uszPeeWHBHxx6bbXWB8ezWQ2jZ8TaHtXH/SKsvjC3X
7BngVu3qa/WIOSfWoC/e9qKNP6lj8za1ynsmXtK0eXXvjqatZ8/IpFU18sas
VW3e6mVd+6+Arv1ThK79qelaxtL4uqFtU10LU1428iEW0vBCiKIGDT9z5szI
32bNmuVq166dr9k3bdpkn8XdFOadHvPWHMq3xe86dC79ROTpisv7Z7jjY39R
0Mdm9E/cxe1D3e2bpfxdvEUal+a2+fIQ1/70+Z1m99tzfL7pIrQ/2ge9g90O
ex16hvfdDpj7O9Ms2OpLWi+kuqGrGFN0mXqv2RHRG9gVGdPgc0TcILQZ98j8
BnptyIIHbf0C9z580T9Mz41c8m+zV6LveE8AG/nDWmY29N/4FU8W2CaurGZj
FjY0ov878VbtrnOx+Wvd2R63jXQwTiNtrJfw6WSdNGnnHrifIQv+bGM55lm4
T+7XNOmcB0yXkhdoU/KFssa2ekej/o/lGzq1CzbYKfdUWK1aWjbs4JRF12nf
s7EyZXWnPt/v+ueVJ+Nm6jFjZ8Yh1F/qLfUF+zv1i+d7yuqnzNeOd1UTN4sx
Dn53rK1ftLW9ja2x76/c1TtvfN0vb6w0yNoJxk6MsxlLEWdr97E5d7U0eseT
EKK4GDt2rKtWrZqto/U+9vyP/z0+8sOGDTMfnp07d5p/PPFxxN0Upr2+cfOW
q9Zurmn49sNXFz4xt3Pdpb2T87T7TwtoeWLaZK9p73Ivp+qzU0yU8tiS2F2x
s+IXgA8NtlTsp/tOLHI7j860fh3bKHP8y7Z3NTvovE0t3az1z5jdE/2AlkBr
YuNEb6Ahe+fpRvTInXFC4rj82rRFjc9Mz+bVpTvjswfujM3m/8HGL9Q3xjRo
WsY7+KWxDoXxFbZ4bPL4m2CjZxyLzX7uS7oW/5SXdW1Xs/ev2tXH5o7QttR5
tC3vdmYOiXi0zB3sPjbbxsnMKzC/cDhrlc05HD+70XxomI/IytljzxJxqJiz
YO6CeaUr17NtXoNxN745t2wusWzN/0rDCyGKGvQ5upy4N6xZ9WtXaX+6du3q
rl275k6cOGGfO3To4C5cuFDSSS6VFLa9nrJ0b74t/tDJnMwkKq/fu3Jwtjs5
5a8FtPzh/p91ZxbVczfO7sjMdTJFKdfwxcNt86tHuzBewCcDbYMvBj7EJ7O3
mQ8GWujQ6ZXmP4zfBfbAnUdnmG0QHYWe4p1b3t8CvYW/BXZFNBhjDDSZ97m4
40f8vGk2/HzwR2I9AFqOMQj2SjZsl9PW1jefIGyZL2+1zb4ZtSWyvaMhYx3L
O8eC10Fn2vVf2ny60J34iWBTJd3YVdGg3Asb94WfNHZWr0m5d9OleXmBzZV8
wb+afML2is81eYf9dcO+4Zaf+LGwLoI8xk/7jl6dZmO4O5p1bl55zLdxHWXD
O88oJ8Z6xEz1+pVyfFnD7rPyvaNjj9oYkXJnzbX3keJ9DayhvPNehbKlZSsq
0vBCVEwuX74cM+4Mmju8/jQToNOXLl1qa1yJVXPw4MH834hzefbsWfnBx6Gw
7fWVazddpednmYbvPnZDhlL1MrzbNWt+jQIxKe29r1P+bDb727nXMn7NlJGG
F0KUE6ThhaiYVK5c2TR1FKwrrVKlivR0KSMT7fXoeTtNwz/UYro7ebZo3m90
8+JRd25lK3dk0FcK+tkM/ro7t7yZu35mW5FcNymk4YUQpZLbZue4dfWctaE3
sve461mb3fXTG2MeIQ0vRMUBf/Ru3brZ5v1W/Ofg1qRJE9egQYOMaXhs/rw3
qnXr1q5ly5aRm94Jm5hMtNfnL11zj7acYTq+/5QtGUhVbG7duOgubOl3l888
24kJv7V3wvI+qWJFGl4IUShu29r93Cun3c2cg+76me3u2sm1FoP38oGZ9v4M
1vfnbOrtzq/raPaMs0sbuzMLarvTc55wp6b/y52c/KA7Pu7XeW3jj93RYd9x
RwZ99a75S78dHXZvzJRIwwtRcdiwYYPr16+fbd4X3X8ObviuEx8mU/Tu3dv8
3wcMGODGjRsXuUnDJyZT7fWgaVtNwz/y3AyXfSH2+0Myx+28Pm6NO7O4vjs8
8EsF+6h+n3ZZc6uYT/3tOO8yyRjS8EJUILzezsrT24fc9bM7Curt3ePchW2D
Xc7Gni57bQd7P/XZxQ1c1rzq7vTMR93JqX91Jyb8xuJuoaUPD/pyXrv1qUit
XVQb+j4W0vBCVEzatGnjzpw5UyzX4n2sc+fOLZZrlWcy1V5nZV9x/24x3XT8
iNnFu+b01o1L7uKu0eYjH+6r6B+z5td0lw/OKroYldLwQpRubuXa/Jz5k5zb
lae5193R3Pun57UdY9yFrQNdzoZuLnv1C+7ssqbuzMKnXNacJ82+fWLSH93x
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
s7nmaU1svsS+PrvsmZfsrf3cxR0j7P00V48suvPeFlvvd8B8qdG1JeZ3nKc1
zaZ945LZtXMvnzTbNv7dvFvG3md5bJm7cmiexTpBa3Mv3NP59V1tPeOd91o2
tPgirHXMf8+OxR38ga2HxC+kqHV3/tbvpbiDo35occcZf5kNfGHdl2zgHW29
qMU+oUzyxhEFfcA1Jqto0P6dzbnq9h7Jdmu2n3CzVx1wo+bscD3Gb3CtBq00
Tf1Yq5lp63J0fZ1OC0zndxqVp8un5enyRbvdgnWH3NodJ+26vHfv+s3U/Z+k
4YUQRQ12/caNG7sjR+72tz548KC1Q/KlSUxRttf0W77P2Xs0u8iuU+IkWNOK
jz2x7PBxwHZ/bsWz5g+NPsc2W5TvWcefn3WI6F7e607sbWKQYINmXSK6mHjY
+PWzZvfExP+9s+VpVb6z78f92nxGsCFzHP5EnAcfEvyr8fGw9+gUU0zB5LX3
p+29mvaenbz7ZEzFeAgfJ+zf9j7L9Z1f9kEh3nee/saefyN7j40/7sQjki1A
vAy14cLl627/sfNu9bYTbuaK/W74rO2u65j1rnm/ZbaW/6GX3lmdjs28frdF
Fhegx7gNbsTs7eY3s3zLMbf9wBl3POui2e6LskZKwwshiho0/DPPPGPrZIlj
GUQaPnmK8p0eV6/nuifazLa+if6t3FLYuDS3ci0eN3Zq1sWiJ3M29TIfC4sB
SAzuKX99yff63pJ572SRbp+ye7Jxxoj78u7z5zaOsHjfMx81nxPWgWLzfvk9
O4Ne0t3T77xDnpjfrL/MOXTH/1vaW6QJNvTT5y6bZl688YjZt/tN3uxeGLLK
1e+60P2nZer284efne5qvTjfPdt/ubWFw2ahzfe5FXnafMfBs+7k2UvWXpYk
eseTEKK4QMMT64Z3O1WqVMnWzhKHHqThk6eo2+sx83ZaH4Zdin6xXFICsSXN
X8V8wY+aL7i9i+fY8pd9VPaMv+OjsnVQ3nigt/lb44eTvaadxdzBBo0mPre8
mfmKs1Yz1sY+vNOH+QPGFRzPWt3z6zq5nLzzoqmJo8+6X3tn/K6xFg8Rv3TG
JGbbJsZJ1mZLq70/Pm/Mcut6Tpl9p6Uou5hGz75s60MXrj/sxs7fZWtD8RdP
x4aOPsdvEJ/B7uM2mM/MnNUHzaeF+DDnL14rU36d0vBCiKIGDb9nzx77e+fO
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
vK7mbzkVUrOjrilyQMJHAz8NIfFADU8IsRov1XiyEjtrenR2Pdbn2SG26Fqo
4YkJPGztVMfO16olO8+oQUG8MS89WZD/EXllTly4o5ofMU8MMQfWeCKEJAov
1XiyErvb6y15le7PM0kNT2Lg8ZP2qaqmUW3Lv6QmLDui52oKFGdfs++8Onnx
DueeEsuxu08ghCSOgwcPqvnz58e0xKOx7ajxhFpLFRUVMkY4f/68rLsdu9tr
PPvX8mdscmueSWp4EiFNLe3q8Oka8av3ebfWmf+C+amot1RSfkveT0gisbtP
IIQkjhMnTqitW7fGtMSj4RNV4wl1T+HNMc6dNS4jR45UmZmZqqGhwZTjJRon
tNfQM9AufWfkuDPPJDU8CYI2F3VnwWU1YemRgJq915RslbqhVOUcvyYeeELs
xAl9gtdBXo73vOc9IZdPf/rTCT8vzH/89re/rZ577jn1gx/8QJWWlka9D6de
WzjMuHbii5U1ntra2tSaNWtkPICYP+bjIl8mxgtNTU2qtrZWairh9zh79myp
hYrnAvicm3BCe115/VmeScQoXQc1PDGAPDDnrzaI/2Xw3MC+dvhjkOsR72Pe
GOIknNAneB0871+xYoW+QDt+8pOf9NkG7ZFIEBd973vfq37729+qJUuWiI79
0Ic+pK5cuRLVfpx4beEw69pJT6yq8TR69Gi1atUq3Z8Tjrq6OrVu3To1ZswY
V/nwndBe426NXVQo2mbswkL35Zmkhvc80OFll+rU4h1n1OsBPDKvTMpS09cc
k9yQdxtdOu+DeAIn9AnEl6985Svq17/+ta3n8OKLL6rvf//7em7BlpYW9fzz
z6shQ4bEtV8nXFs4rLp2Yh2Is8cCPPLU8NFTcNqQZ/K6y/JMUsN7Euj2U5V1
UmOp97T9PXQ7/O4Ltp2WXDOt7V12ny4hEeGUPoE8pbm5WWLA06ZNs+0coFnh
ccE8RiPwH3zuc5+Leb9OuLZwWHXtXic9PV3NnTs35GJmPalkxSntNXzw8MND
+8zb7LI8k9TwnqH78d9Ety/cFli3vzk7V63OOiceGbyXELfhlD6BPOXQoUOi
IZE/xC4qKyvlHA4fPuyzPSMjQ33gAx+IOW7phGsLh1XX7nXgVYfXxbjgng4Y
MECNGzdO7d2717J7i1g7vk/47uGf2b59u3jzb9++bcnxrMRJ7fWmgxf1PJOu
qlVDDZ/UoBW5crNRtLlWz8C4DEg9KN53zOt4zPacuBwn9QlW0djcpq7eakro
gmPGwowZM0RDYh6ePz/84Q/F9xsP0EmNjY1BF/iVNa199uxZn89iDiC237sX
27Nzq68tHHZeOwlMa2urmj59uiooKDB93/g+8TwFbRzm0iJ/JY41YcIENXjw
YNmO+D/e5xacVNPDJ8/kQRflmaSGT0rgW0c+meEZ+T10O+qmos7S5Zr7jMOQ
pMBLNZ5QkyFY3WOrFhwzFn7zm9+oL3/5yz22d3d3qw9/+MOSLyUeEHsMlSNm
0qRJEqPE3+Xl5T6fRQwT2zEfMBasvrZw2HntTgTzSTE2mTp1qkpJSQm4JMLf
cubMGUvywyPW/9Zbb8ncWf9+G+s3btyQa1y2bJnpx7YKp7XXqNfqujyT1PBJ
Q0dntyosq1EpK0p69MF/nZotc1bhk2G8nSQrTusTrMBNGh6e6z/96U89tkNT
QkPGOndPo6OjQ2LNwZZr165JPRwcyz82Cu/D+9///ph1ndXXFg47r92JLF68
WOqjIjdQsJzwibhe5O20ok7r0KFDe4zF/MF3PmjQINfE5pzWXl+8dk9v8wrK
XJJnkhre9Vy//UCt2nuuh8cdz4Vmry9VJeduib4nJNlxWp9gBW7x0iDGC/2I
5/v+IFb4mc98Juw+4Dv+1re+JXHtj370o+pXv/qVqq+v11+PxE8CrwvmnkLj
GUFtzc9//vNRX1e814acjriOT3ziE5Lj8Zvf/Kbas2eP/jrOGd6Iz372s5K3
Er9p+HZ++ctf+uzHrmt3KvCXmFVbKRyo5XTkyJEey/79+0Vrz5w50/RjIgaP
2lKhQA55qz1cZuK09hojH+TOhn6auKzY7tOJDGp4V9LW0aUOnbyhxi0p6hEz
G72gQPJAPnjYYfdpEpJQnNYneBnoUuhc6B1/evfuHTYnI2pgQuMuetI/nT59
WnKbv+997xOvhEYkfhLw05/+VP3sZz/T45PQt1/4whdEbyX62qDZf/SjH6l9
+/apwsJC9fLLL8sYpbOzU15/5ZVX1Mc//nG1du1aVVRUpH73u9+pD37wgz00
vF3X7lTgX4GPJRH0799fxkH+C7ZjvGXF/NLs7GypIYXfTU1NjXr48KH4tuAh
Qh75nJwcGcfs3r3b9GNbhRPb69zSa7qWulnfYvfphIca3lXcutuiVu4pF2+M
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
GZZ5WEpLS9X8+fNlQTuTmpqqrxsX1JIaOXIkNXwEsL2Oj+ZHHar/pF0++h21
n67earL71AghJGrYJxDiTZDrcebMmaKhkSc+KytL6j4Zl3h0NeazLlu2TBa0
MxgvaOvGZfny5Ql7HuB2WNMjfm7OX65Gp+wQ/T4w7aAqv3LX7lMihJCoYI0n
QrzN6NGj1ahRo0IuZsXop0+frhoaGkzZl5dhe20Cixapvz1ZEJPnsx9CiJth
n0AIsRPUlNqxY4fdp+EK2F6bQIAaT4QQ4kbYJxBCrAbxTnh3tmzZojZv3uyz
pKWlqQEDBiRdTBRzeJG/E15/5ACaN2+eqq2t1V9vb2/3eR6qLXj+EQy21yZA
DU8ISRLYJxBCrGb37t3S1kyYMEFy0g8bNkxqSw0dOlT1799f9H0y0dLSIjnx
4VdC/s6CggL19ttvSx785uZmec/Nmzflnmzfvl3t379fX/DeYLC9NgFqeEJI
ksA+gRBiNWPGjFFr1qyRv48cOSLxadDR0aGmTJmizp07Z+fpmQ5y/qBtvXv3
2XzJpqYmyaG5d+9eWcec3969e6uurq6I98v22gSo4QkhSQL7BEKI1bz55puq
pKRE/oauhb9EA1oWOj6ZWLlypRo7dmyP7RMnTlRLlz6tEXrgwAHdN4O5w5F4
idhemwA1PCEkSWCfQIh3gK8jmsUsjzryV+7cuVP+xj7hn9G84ZcuXUq6Gk/3
799X9+7d89mGWrWodQXvDFi3bp14bWbNmiXb4b3Bs4pQNWvDtddszyPgiX7n
fYoc3qvI4b2KHN6ryGCbTwjRGD58uHjQI13Myi25adMmmddZVFQk69CtiFVD
6yI/PLw2yczDhw/VtGnT5HmElmNzzpw54qWBpi8vL1fZ2dnyOmphBRvPsD03
AWr4qOC9ihzeq8jhvYoMtvmEELtpa2sTDzzqsoKrV6/K3Fa0P4hBHz9+3OYz
jIzOzk6JpwdaAsXPocWPHTsm46HBgwerCxcu6K9dvHhRXbt2zef9eC/uSVVV
VcDj++ewCfR6rHjms3FqeH6Wn+Vn7fus287X7M8GymVGCCFGEpGzHbr3/Pnz
rqr9tHbt2oBtqDYWMYLY+4IFCyTWvmrVKvXgwYOw+8dYB/s6fPhwwNetjMl4
5rPU8PwsP+vaz7rtfK3+LDU8Id7Eiznb4+XOnTuqsrIy6KKBeD28M/C4G7cb
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

          "], {{0, 485}, {753, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSize->{344.66666666666595`, Automatic},
        ImageSizeRaw->{753, 485},
        PlotRange->{{0, 753}, {0, 485}}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"I", "'"}], "m", " ", "assuming", " ", "that", " ", 
         "divergence", " ", "from", " ", "1", " ", "is", " ", "numerical", 
         " ", "error", " ", 
         RowBox[{"here", "?"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"replicating", " ", 
         RowBox[{"Fig", ".", " ", "7.4"}], " ", "in", " ", 
         RowBox[{"M", ".", " ", 
          RowBox[{"Korobko", "'"}]}], "s", " ", "thesis"}], "*)"}], 
       "\[IndentingNewLine]", "probeNoiseRef"}], "=", 
      RowBox[{"unpackRIntExtSqz", "[", 
       RowBox[{
        RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
         "}"}]}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"\"\<minimum of sensitivity: \>\"", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Minimize", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"20", 
               RowBox[{"Log10", "[", 
                RowBox[{
                 RowBox[{"unpackASDShIntExtSqz", "[", 
                  RowBox[{
                   RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Chi]Ratio", " ", "kout"}], ",", "0", ",", "0", 
                    ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "]"}], 
                 "/", "probeSensRef"}], "]"}]}], ",", 
              RowBox[{"\[Chi]Ratio", ">", "0"}]}], "}"}], ",", 
            RowBox[{"{", "\[Chi]Ratio", "}"}]}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        "\"\<\\nminimum of noise transfer function: \>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Minimize", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"20", 
               RowBox[{"Log10", "[", 
                RowBox[{
                 RowBox[{"unpackRIntExtSqz", "[", 
                  RowBox[{
                   RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Chi]Ratio", " ", "kout"}], ",", "0", ",", "0", 
                    ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "]"}], 
                 "/", "probeNoiseRef"}], "]"}]}], ",", 
              RowBox[{"\[Chi]Ratio", ">", "0"}]}], "}"}], ",", 
            RowBox[{"{", "\[Chi]Ratio", "}"}]}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{
              RowBox[{"unpackRIntExtSqz", "[", 
               RowBox[{
                RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Chi]Ratio", " ", "kout"}], ",", "0", ",", 
                  RowBox[{"armLossList", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"srcLossList", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", "0", ",", "0", ",", 
                  "0"}], "}"}]}], "]"}], "/", "probeNoiseRef"}], "]"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "armLossList", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "srcLossList", "]"}]}], "}"}]}], "]"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Chi]Ratio", ",", "0", ",", "5"}], "}"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, aq\)]\)=``\>\"", ",", 
                RowBox[{"armLossList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"srcLossList", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "armLossList", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"Length", "[", "srcLossList", "]"}]}], "}"}]}], "]"}],
             "]"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
        RowBox[{"Frame", "->", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"StringForm", "[", 
              RowBox[{
              "\"\<total noise transfer function |R| at `` kHz\\nrelative to \
lossless, no squeezing value\\n/ dB (20 \!\(\*SubscriptBox[\(log\), \
\(10\)]\))\>\"", ",", 
               FractionBox["fProbe", 
                SuperscriptBox["10", "3"]]}], "]"}], ","}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<squeezing parameter, \!\(\*FractionBox[\(\[Chi]\), \(kout\)]\
\)\>\"", ",", 
             "\"\<degenerate internal squeezing\\nno radiation pressure \
effects\\nparameters of benchmark 3rd gen. detector\>\""}], "}"}]}], "}"}]}], 
        ",", " ", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"GridLines", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"1", ",", "Red"}], "}"}], "}"}], ",", 
           RowBox[{"{", "0", "}"}]}], "}"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Korobko", " ", "says", " ", "detection", " ", "losses"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"does", " ", "this", " ", "mean", " ", 
       RowBox[{"Rpd", "?", " ", "--"}]}], ">", " ", 
      RowBox[{"yes", "?"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"each", " ", "vals", " ", 
     RowBox[{"contains", ":", " ", 
      RowBox[{"{", 
       RowBox[{
       "\[Chi]_", ",", "gExt_", ",", "Tla_", ",", "Tlaq_", ",", "Rpd_", ",", 
        "Rinj_", ",", "TlExt_"}], "}"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "plotThresholdFinderIntSqz", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotThresholdFinderIntSqz", "[", 
     RowBox[{"fProbe_", ",", 
      RowBox[{"pastThreshold_:", "False"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"probeNoiseRef", "=", 
       RowBox[{"unpackRIntExtSqz", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"probeSigRef", "=", 
       RowBox[{"unpackTIntExtSqz", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"probeSensRef", "=", 
       RowBox[{"unpackASDShIntExtSqz", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}]}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"rpdList", "=", 
       RowBox[{"Subdivide", "[", 
        RowBox[{"0", ",", "0.5", ",", "5"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "20"}], 
               RowBox[{"Log10", "[", 
                RowBox[{
                 RowBox[{"unpackRIntExtSqz", "[", 
                  RowBox[{
                   RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Chi]Ratio", " ", "kout"}], ",", "0", ",", "0", 
                    ",", "0", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "0"}], 
                    "}"}]}], "]"}], "/", "probeNoiseRef"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"-", "20"}], 
               RowBox[{"Log10", "[", 
                RowBox[{
                 RowBox[{"unpackASDShIntExtSqz", "[", 
                  RowBox[{
                   RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Chi]Ratio", " ", "kout"}], ",", "0", ",", "0", 
                    ",", "0", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "0"}], 
                    "}"}]}], "]"}], "/", "probeSensRef"}], "]"}]}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Chi]Ratio", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<SNR (\!\(\*SuperscriptBox[\(Hz\), \(1/2\)]\)) gain at `` \
kHz\\nrelative to no loss/sqz. / dB (20 \!\(\*SubscriptBox[\(log\), \
\(10\)]\))\>\"", ",", 
                FractionBox["fProbe", 
                 SuperscriptBox["10", "3"]]}], "]"}], ","}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             ",", "\"\<degenerate internal squeezing\\nno radiation pressure \
effects\\nparameters of benchmark 3rd gen. detector\>\""}], "}"}]}], "}"}]}], 
         ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Blend", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Blue", ",", "Green"}], "}"}], ",", 
              FractionBox[
               RowBox[{"i", "-", "1"}], 
               RowBox[{"Length", "[", "rpdList", "]"}]]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}]}], 
         ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"StringForm", "[", 
                RowBox[{
                "\"\<\[Chi]/\!\(\*SubscriptBox[\(\[Kappa]\), \
\(\*SubscriptBox[\(a\), \(q\)], out\)]\)\[Element](0,1), \
\!\(\*SubscriptBox[\(R\), \(PD\)]\)=``\>\"", ",", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"N", "[", 
                   RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}], 
             "}"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"80", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "20"}], 
            RowBox[{"Log10", "[", 
             RowBox[{
              RowBox[{"unpackRIntExtSqz", "[", 
               RowBox[{
                RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", " ", "kout"}], ",", "0", ",", "0", ",", "0", 
                  ",", "Rpd", ",", "0", ",", "0"}], "}"}]}], "]"}], "/", 
              "probeNoiseRef"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"-", "20"}], 
            RowBox[{"Log10", "[", 
             RowBox[{
              RowBox[{"unpackASDShIntExtSqz", "[", 
               RowBox[{
                RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", " ", "kout"}], ",", "0", ",", "0", ",", "0", 
                  ",", "Rpd", ",", "0", ",", "0"}], "}"}]}], "]"}], "/", 
              "probeSensRef"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Rpd", ",", 
           RowBox[{"rpdList", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"rpdList", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", "Dashed"}], "]"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"StringForm", "[", 
              RowBox[{
              "\"\<\[Chi]/\!\(\*SubscriptBox[\(\[Kappa]\), \
\(\*SubscriptBox[\(a\), \(q\)], out\)]\)=1, varying \!\(\*SubscriptBox[\(R\), \
\(PD\)]\)\[Element](``,``)\>\"", ",", 
               RowBox[{"NumberForm", "[", 
                RowBox[{"N", "[", 
                 RowBox[{"rpdList", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"NumberForm", "[", 
                RowBox[{"N", "[", 
                 RowBox[{"rpdList", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "]"}]}], "]"}], 
             "}"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"80", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"pastThreshold", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p1b", "=", 
          RowBox[{"ParametricPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "20"}], 
                  RowBox[{"Log10", "[", 
                   RowBox[{
                    RowBox[{"unpackRIntExtSqz", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Chi]Ratio", " ", "kout"}], ",", "0", ",", "0", 
                    ",", "0", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "0"}], 
                    "}"}]}], "]"}], "/", "probeNoiseRef"}], "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"-", "20"}], 
                  RowBox[{"Log10", "[", 
                   RowBox[{
                    RowBox[{"unpackASDShIntExtSqz", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Chi]Ratio", " ", "kout"}], ",", "0", ",", "0", 
                    ",", "0", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "0"}], 
                    "}"}]}], "]"}], "/", "probeSensRef"}], "]"}]}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Chi]Ratio", ",", "1", ",", "2"}], "}"}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Blend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Red", ",", "Yellow"}], "}"}], ",", 
                 FractionBox[
                  RowBox[{"i", "-", "1"}], 
                  RowBox[{"Length", "[", "rpdList", "]"}]]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}]}], 
            ",", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"LineLegend", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"StringForm", "[", 
                   RowBox[{
                   "\"\<\[Chi]/\!\(\*SubscriptBox[\(\[Kappa]\), \
\(\*SubscriptBox[\(a\), \(q\)], out\)]\)\[Element](1,2), \
\!\(\*SubscriptBox[\(R\), \(PD\)]\)=``\>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}],
                 "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"80", ",", "10"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p1and2", "=", 
          RowBox[{"Show", "[", 
           RowBox[{"p1", ",", "p1b", ",", "p2"}], "]"}]}], ";"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p1and2", "=", 
          RowBox[{"Show", "[", 
           RowBox[{"p1", ",", "p2"}], "]"}]}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "20"}], 
               RowBox[{"Log10", "[", 
                RowBox[{
                 RowBox[{"unpackRIntExtSqz", "[", 
                  RowBox[{
                   RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Chi]Ratio", " ", "kout"}], ",", "0", ",", "0", 
                    ",", "0", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "0"}], 
                    "}"}]}], "]"}], "/", "probeNoiseRef"}], "]"}]}], ",", 
              RowBox[{"20", 
               RowBox[{"Log10", "[", 
                RowBox[{
                 RowBox[{"unpackTIntExtSqz", "[", 
                  RowBox[{
                   RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Chi]Ratio", " ", "kout"}], ",", "0", ",", "0", 
                    ",", "0", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "0"}], 
                    "}"}]}], "]"}], "/", "probeSigRef"}], "]"}]}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Chi]Ratio", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<signal transfer function |T| at `` kHz\\nrelative to no \
loss/sqz. / dB (20 \!\(\*SubscriptBox[\(log\), \(10\)]\))\>\"", ",", 
                FractionBox["fProbe", 
                 SuperscriptBox["10", "3"]]}], "]"}], ","}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<noise transfer function |R| at `` kHz\\nrelative to no \
loss/sqz. / dB (-20 \!\(\*SubscriptBox[\(log\), \(10\)]\))\>\"", ",", 
                FractionBox["fProbe", 
                 SuperscriptBox["10", "3"]]}], "]"}], ","}], "}"}]}], "}"}]}],
          ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Blend", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Blue", ",", "Green"}], "}"}], ",", 
              FractionBox[
               RowBox[{"i", "-", "1"}], 
               RowBox[{"Length", "[", "rpdList", "]"}]]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"80", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"All", ",", "1"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          FractionBox["3", "4"]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p4", "=", 
       RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "20"}], 
            RowBox[{"Log10", "[", 
             RowBox[{
              RowBox[{"unpackRIntExtSqz", "[", 
               RowBox[{
                RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", " ", "kout"}], ",", "0", ",", "0", ",", "0", 
                  ",", "Rpd", ",", "0", ",", "0"}], "}"}]}], "]"}], "/", 
              "probeNoiseRef"}], "]"}]}], ",", 
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{
              RowBox[{"unpackTIntExtSqz", "[", 
               RowBox[{
                RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", " ", "kout"}], ",", "0", ",", "0", ",", "0", 
                  ",", "Rpd", ",", "0", ",", "0"}], "}"}]}], "]"}], "/", 
              "probeSigRef"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Rpd", ",", 
           RowBox[{"rpdList", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"rpdList", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", "Dashed"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"80", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"All", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"pastThreshold", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p3b", "=", 
          RowBox[{"ParametricPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "20"}], 
                  RowBox[{"Log10", "[", 
                   RowBox[{
                    RowBox[{"unpackRIntExtSqz", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Chi]Ratio", " ", "kout"}], ",", "0", ",", "0", 
                    ",", "0", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "0"}], 
                    "}"}]}], "]"}], "/", "probeNoiseRef"}], "]"}]}], ",", 
                 RowBox[{"20", 
                  RowBox[{"Log10", "[", 
                   RowBox[{
                    RowBox[{"unpackTIntExtSqz", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Chi]Ratio", " ", "kout"}], ",", "0", ",", "0", 
                    ",", "0", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "0"}], 
                    "}"}]}], "]"}], "/", "probeSigRef"}], "]"}]}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Chi]Ratio", ",", "1", ",", "2"}], "}"}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Blend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Red", ",", "Yellow"}], "}"}], ",", 
                 FractionBox[
                  RowBox[{"i", "-", "1"}], 
                  RowBox[{"Length", "[", "rpdList", "]"}]]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}]}], 
            ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"80", ",", "10"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p3and4", "=", 
          RowBox[{"Show", "[", 
           RowBox[{"p3", ",", "p3b", ",", "p4"}], "]"}]}], ";"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p3and4", "=", 
          RowBox[{"Show", "[", 
           RowBox[{"p3", ",", "p4"}], "]"}]}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"p1and2", ",", "p3and4"}], "}"}], ",", 
        RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"plotThresholdFinderIntSqz", "[", 
    RowBox[{"2.5", " ", 
     SuperscriptBox["10", "3"]}], 
    RowBox[{"(*", "kHz", "*)"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plotThresholdFinderIntSqz", "[", 
     RowBox[{
      RowBox[{"2.5", " ", 
       SuperscriptBox["10", "3"]}], 
      RowBox[{"(*", "kHz", "*)"}], ",", "True"}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"cf", ".", " ", "Korobko"}], " ", 
      RowBox[{"thesis", " ", "--"}], " ", 
      RowBox[{"Fig", ".", " ", "7.4"}]}], ",", " ", 
     RowBox[{
     "I", " ", "suspect", " ", "that", " ", "the", " ", "\"\<unstable\>\"", 
      " ", "region", " ", "is", " ", "just", " ", "where", " ", "\[Chi]", " ",
       "has", " ", "passed", " ", "threshold"}], ",", " ", 
     RowBox[{"even", " ", "though", " ", "this", " ", 
      RowBox[{"doesn", "'"}], "t", " ", "appear", " ", "to", " ", "be", " ", 
      "unstable", " ", 
      RowBox[{"(", 
       RowBox[{
       "looking", " ", "at", " ", "the", " ", "poles", " ", "of", " ", "the", 
        " ", "transfer", " ", "functions"}], ")"}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.835826713306123*^9, 3.8358267363084583`*^9}, {
   3.835826776271091*^9, 3.835826786827098*^9}, {3.835826822641658*^9, 
   3.835826929208394*^9}, {3.835826960096567*^9, 3.835827004896442*^9}, {
   3.835827043183599*^9, 3.835827116413558*^9}, {3.835827177182394*^9, 
   3.835827180033064*^9}, {3.83582723871488*^9, 3.8358272504424686`*^9}, {
   3.8358278670693617`*^9, 3.835827872289839*^9}, {3.835828560191032*^9, 
   3.835828645135395*^9}, {3.835828676034905*^9, 3.835828833541567*^9}, {
   3.835828878664803*^9, 3.8358289068410873`*^9}, {3.835828938514132*^9, 
   3.835828946600335*^9}, {3.835828978024658*^9, 3.83582901516619*^9}, {
   3.835829162187191*^9, 3.835829162327578*^9}, {3.835829312065268*^9, 
   3.835829317945981*^9}, {3.835830138744141*^9, 3.835830138886846*^9}, {
   3.835830433396319*^9, 3.835830434012622*^9}, {3.835910192008666*^9, 
   3.8359101936301823`*^9}, 3.836180103035973*^9, {3.8361802657546988`*^9, 
   3.836180283362606*^9}, {3.836184569734859*^9, 3.8361845725124207`*^9}, {
   3.836184694370226*^9, 3.836184702803391*^9}, {3.836186437370242*^9, 
   3.836186437769246*^9}, {3.836246933211589*^9, 3.8362469614140987`*^9}, {
   3.836247086799917*^9, 3.8362472506553793`*^9}, {3.836247384306141*^9, 
   3.836247397940179*^9}, {3.8362474482639933`*^9, 3.836247568919132*^9}, {
   3.8362477616530247`*^9, 3.836247773733657*^9}, {3.836247844076351*^9, 
   3.836247889205545*^9}, {3.836248007073222*^9, 3.8362480395895967`*^9}, {
   3.836248489108633*^9, 3.836248513139892*^9}, {3.83624855101075*^9, 
   3.8362485533072357`*^9}, {3.836338803406822*^9, 3.8363388746200314`*^9}, {
   3.836338938722455*^9, 3.8363389978932247`*^9}, {3.8363390554740973`*^9, 
   3.836339069719809*^9}, {3.836339102995687*^9, 3.836339158130683*^9}, {
   3.8363392194489927`*^9, 3.8363392232288733`*^9}, {3.836339965840851*^9, 
   3.836340025615182*^9}, {3.836340080660529*^9, 3.83634020771029*^9}, {
   3.836506337902573*^9, 3.836506374815778*^9}, {3.836509415597516*^9, 
   3.836509431225069*^9}, {3.83650958676927*^9, 3.8365095969322968`*^9}, {
   3.8365096666078*^9, 3.836509705923071*^9}, {3.8365103825244837`*^9, 
   3.8365104056747026`*^9}, 3.836511235818644*^9, {3.836512049709972*^9, 
   3.836512132077057*^9}, {3.8366047976728573`*^9, 3.8366048869655457`*^9}, {
   3.836604926266478*^9, 3.836605005192375*^9}, {3.836605036609068*^9, 
   3.8366050826691008`*^9}, {3.836605124511176*^9, 3.836605133742633*^9}, {
   3.836605168183964*^9, 3.836605174437069*^9}, {3.836605217828001*^9, 
   3.836605244123188*^9}, {3.836605297174451*^9, 3.836605317259301*^9}, 
   3.8366053475865*^9, {3.836605381781644*^9, 3.8366054107453203`*^9}, {
   3.8366054498789253`*^9, 3.836605506785183*^9}, {3.836605538083932*^9, 
   3.836605631828589*^9}, {3.836605702719323*^9, 3.836605805580357*^9}, {
   3.8366058390174103`*^9, 3.836605863078318*^9}, {3.8371198892350492`*^9, 
   3.837119891120308*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"fd583cc5-b91d-45fb-883c-72687b8a7ca5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "implementing", " ", "a", " ", "simple", " ", "metric", " ", "to", " ", 
    "quantify", " ", "how", " ", "well", " ", "the", " ", "target", " ", 
    "sensitivity", " ", "is", " ", "achieved"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f0", ",", " ", "f1"}], "}"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"4", " ", 
        SuperscriptBox["10", "3"]}]}], "}"}]}], ";"}], 
   RowBox[{"(*", "Hz", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ASDShCrit", " ", "=", " ", 
     RowBox[{"5", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "25"}]]}]}], ";"}], 
   RowBox[{"(*", 
    SuperscriptBox["Hz", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}]], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ShCrit", "=", 
     SuperscriptBox["ASDShCrit", "2"]}], ";"}], 
   RowBox[{"(*", 
    SuperscriptBox["Hz", 
     RowBox[{"-", "1"}]], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"f0", "<", "#", "<", "f1"}], ",", "0", ",", "Null"}], 
           "]"}], "&"}], "[", "f", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            RowBox[{
             RowBox[{"ASDShIntExtSqz", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"0", "kout"}], ",", 
               RowBox[{"gExtRatio0", " ", "\[Kappa]afExt"}], ",", "0", ",", 
               "0", ",", "0", ",", "0", ",", "0"}], "]"}], "^", "2"}]], "-", 
           FractionBox["1", "ShCrit"]}], ")"}], "/", 
         RowBox[{"(", 
          FractionBox["1", "ShCrit"], ")"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            RowBox[{
             RowBox[{"ASDShIntExtSqz", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", 
               RowBox[{"0", "\[Kappa]afExt"}], ",", "0", ",", "0", ",", "0", 
               ",", "0", ",", "0"}], "]"}], "^", "2"}]], "-", 
           FractionBox["1", "ShCrit"]}], ")"}], "/", 
         RowBox[{"(", 
          FractionBox["1", "ShCrit"], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", "10", ",", 
        SuperscriptBox["10", "5"]}], "}"}], ",", 
      RowBox[{"Filling", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", "\[Rule]", "Top"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<SNR, (\!\(\*FractionBox[\(1\), SubscriptBox[\(S\), \
\(h\)]]\)-\!\(\*FractionBox[\(1\), \(Scrit\)]\))/(\!\(\*FractionBox[\(1\), \
\(Scrit\)]\))\\nwhere \!\(\*SubscriptBox[\(S\), \(crit\)]\)=``\\nNB: PSD not \
ASD\>\"", ",", 
             RowBox[{"N", "[", "ShCrit", "]"}]}], "]"}], ","}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<frequency, f / Hz\>\"", ",", " ", 
           "\"\<SNR used to calculate \[Mu]tric\>\""}], "}"}]}], "}"}]}]}], 
     "]"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "using", " ", "reciprocals", " ", "by", " ", "precedent", " ", "set", " ",
      "by", " ", "Li", " ", "et", " ", "al", " ", "comparison", " ", "of", 
     " ", 
     RowBox[{"bandwidth", "--"}], "peak", " ", "sensitivity", " ", 
     "product"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]tric0", "[", "fnSh_", "]"}], ":=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"f1", "-", "f0"}]], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{"fnSh", "[", 
             RowBox[{"2", "\[Pi]", " ", "f"}], "]"}]], "-", 
           FractionBox["1", "ShCrit"]}], ",", "0"}], "]"}], 
        FractionBox["1", "ShCrit"]], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "f0", ",", "f1"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"print\[Mu]tric0", "[", "fnSh_", "]"}], ":=", 
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<For \!\(\*SubscriptBox[\(S\), \(h\)]\)(\[CapitalOmega]) given by: \
``\\n--> \[Mu]tric0=`` (unitless)\>\"", ",", "fnSh", ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"\[Mu]tric0", "[", "fnSh", "]"}], "]"}]}], "]"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.835728305776557*^9, 3.8357284711674757`*^9}, {
   3.83572850392657*^9, 3.835728507694141*^9}, {3.8357285893826847`*^9, 
   3.835728645438423*^9}, {3.83572869558976*^9, 3.835728697307652*^9}, {
   3.83572883675732*^9, 3.8357288402700663`*^9}, {3.835729557066634*^9, 
   3.8357295797160883`*^9}, {3.835729820928381*^9, 3.8357298312954903`*^9}, {
   3.835730180590508*^9, 3.8357302185551*^9}, {3.8357302876539087`*^9, 
   3.835730440465742*^9}, {3.8357308625817823`*^9, 3.835730879490631*^9}, {
   3.8357309445736523`*^9, 3.8357309510099077`*^9}, {3.835731266254953*^9, 
   3.8357312984987993`*^9}, {3.835731526574141*^9, 3.835731556812798*^9}, 
   3.8357316366961823`*^9, {3.835733085914104*^9, 3.835733127486918*^9}, {
   3.835748284853456*^9, 3.835748300521689*^9}, {3.8358323112074003`*^9, 
   3.835832312180415*^9}, {3.835833511650421*^9, 3.8358335981398497`*^9}, {
   3.8358336546696787`*^9, 3.835833656241271*^9}, {3.8359160770023403`*^9, 
   3.835916082888239*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"611c8b54-86fd-4918-b9b7-180b1cf7c050"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "generalising", " ", "to", " ", "an", " ", "integral", " ", "kernel", " ",
      "K"}], ",", " ", 
    RowBox[{"watch", " ", "out"}], ",", " ", 
    RowBox[{
     RowBox[{
     "K", " ", "is", " ", "function", " ", "of", " ", "f", " ", "not", " ", 
      "\[CapitalOmega]"}], "=", 
     RowBox[{"2", "\[Pi]f"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Mu]tricK", "[", 
     RowBox[{"fnSh_", ",", "K_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"f1", "-", "f0"}]], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{
          FractionBox["1", 
           RowBox[{"fnSh", "[", 
            RowBox[{"2", "\[Pi]", " ", "f"}], "]"}]], "-", 
          FractionBox["1", "ShCrit"]}], 
         FractionBox["1", "ShCrit"]], 
        RowBox[{"K", "[", "f", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "f0", ",", "f1"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"print\[Mu]tricK", "[", 
     RowBox[{"fnSh_", ",", "K_"}], "]"}], ":=", 
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<For \!\(\*SubscriptBox[\(S\), \(h\)]\)(\[CapitalOmega]) given by: \
``\\nK=``\\n--> \[Mu]tricK=`` (unitless)\>\"", ",", "fnSh", ",", "K", ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"\[Mu]tricK", "[", 
         RowBox[{"fnSh", ",", "K"}], "]"}], "]"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]tric1", "[", "fnSh_", "]"}], ":=", 
    RowBox[{"\[Mu]tricK", "[", 
     RowBox[{"fnSh", ",", 
      RowBox[{"1", "&"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"use", " ", "k1"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "9"}], " ", "in", " ", "order", " ", "for", " ", 
       "Z"}], "=", 
      RowBox[{
       RowBox[{"10", " ", 
        SubscriptBox["Z", "0"], " ", "to", " ", "correspond", " ", "to", " ", 
        "K"}], "=", 
       RowBox[{"1", "/", "\[ExponentialE]"}]}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KExpk1", "[", 
     RowBox[{"fnSh_", ",", "f_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Z", "=", 
       FractionBox[
        RowBox[{
         FractionBox["1", 
          RowBox[{"fnSh", "[", 
           RowBox[{"2", "\[Pi]", " ", "f"}], "]"}]], "-", 
         FractionBox["1", "ShCrit"]}], 
        FractionBox["1", "ShCrit"]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Z", ">", "0"}], ",", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "9"]}], " ", "Z"}], "]"}], ",", "1"}], "]"}]}], 
     ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]tricExpk1", "[", "fnSh_", "]"}], ":=", 
    RowBox[{"\[Mu]tricK", "[", 
     RowBox[{"fnSh", ",", 
      RowBox[{
       RowBox[{"KExpk1", "[", 
        RowBox[{"fnSh", ",", "#"}], "]"}], "&"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
   "(*", "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"fnShList", "=", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ASDShIntExtSqz", "[", 
           RowBox[{"#", ",", 
            RowBox[{"0", "kout"}], ",", 
            RowBox[{"0", "\[Kappa]afExt"}], ",", "0", ",", "0", ",", "0", ",",
             "0", ",", "0"}], "]"}], "^", "2"}], "&"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"ASDShIntExtSqz", "[", 
           RowBox[{"#", ",", 
            RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", 
            RowBox[{"0", "\[Kappa]afExt"}], ",", "0", ",", "0", ",", "0", ",",
             "0", ",", "0"}], "]"}], "^", "2"}], "&"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"ASDShIntExtSqz", "[", 
           RowBox[{"#", ",", 
            RowBox[{"0", "kout"}], ",", 
            RowBox[{"gExtRatio0", " ", "\[Kappa]afExt"}], ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "]"}], "^", "2"}], "&"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", 
         RowBox[{
          RowBox[{"Length", "[", "fnShList", "]"}], "+", "1"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"print\[Mu]tric0", "[", 
         RowBox[{"fnShList", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", 
         RowBox[{
          RowBox[{"Length", "[", "fnShList", "]"}], "+", "1"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"print\[Mu]tricK", "[", 
         RowBox[{
          RowBox[{"fnShList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"1", "&"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", 
         RowBox[{
          RowBox[{"Length", "[", "fnShList", "]"}], "+", "1"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"print\[Mu]tricK", "[", 
         RowBox[{
          RowBox[{"fnShList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"KExpk1", "[", 
            RowBox[{
             RowBox[{"fnShList", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "#"}], "]"}], "&"}]}], 
         "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.835832319737211*^9, 3.835832451242504*^9}, {
  3.835832487251713*^9, 3.8358325498744907`*^9}, {3.835832584158889*^9, 
  3.835832730837887*^9}, {3.835832770891151*^9, 3.8358328299412413`*^9}, {
  3.835832875828854*^9, 3.835832926172759*^9}, {3.835833015000808*^9, 
  3.8358330158249083`*^9}, {3.835833152263788*^9, 3.8358331720959787`*^9}, {
  3.835833228258581*^9, 3.835833332188093*^9}, {3.835833821094657*^9, 
  3.8358338257383432`*^9}, {3.835833950206862*^9, 3.8358339818271437`*^9}, {
  3.835834017929502*^9, 3.835834126258589*^9}, {3.835834220381164*^9, 
  3.8358343001661167`*^9}, {3.835834362704238*^9, 3.8358343920154552`*^9}, {
  3.835916061743306*^9, 3.835916065456593*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"3d75b660-7b02-48a9-93f1-f089b2def791"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"optimisation", ":", " ", 
      RowBox[{
       RowBox[{"tutorial", " ", "--"}], " ", "https"}], ":"}], "//", 
     RowBox[{
      RowBox[{"support", ".", "wolfram", ".", "com"}], "/", "12502"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Mathematica", " ", "gets", " ", "upset", " ", "passing", " ", "pure", 
     " ", "functions", " ", "to", " ", 
     RowBox[{"NMaximize", "?"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"to", "-", 
     RowBox[{"do", ":", " ", 
      RowBox[{
      "try", " ", "optimising", " ", "internal", " ", "squeezing", " ", 
       "against", " ", "\[Mu]1", " ", "and", " ", "\[Mu]ExpK1"}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"reduSh1", "[", 
     RowBox[{
      RowBox[{"\[CapitalOmega]_", "?", "NumericQ"}], ",", 
      RowBox[{"r_", "?", "NumericQ"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"ASDShIntExtSqz", "[", 
        RowBox[{"\[CapitalOmega]", ",", 
         RowBox[{"r", " ", "kout"}], ",", 
         RowBox[{"0", " ", "\[Kappa]afExt"}], ",", "0", ",", "0", ",", "0", 
         ",", "0", ",", "0"}], "]"}], "2"], "\[IndentingNewLine]", 
      RowBox[{"opti0Fn", "[", 
       RowBox[{"r_", "?", "NumericQ"}], "]"}]}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Mu]tric0", "[", 
        RowBox[{
         RowBox[{"reduSh1", "[", 
          RowBox[{"#", ",", "r"}], "]"}], "&"}], "]"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "because", " ", "of", " ", "zeroing", " ", "of", " ", "\[Mu]tric0"}],
          ",", " ", 
         RowBox[{
          RowBox[{
          "optimisation", " ", "must", " ", "be", " ", "run", " ", "from", 
           " ", "a", " ", "non"}], "-", 
          RowBox[{"zero", " ", "starting", " ", "value"}]}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "FindMaximum", " ", "is", " ", "far", " ", "faster", " ", "than", 
          " ", "NMaximize"}], ",", " ", 
         RowBox[{
         "but", " ", "will", " ", "not", " ", "look", " ", "for", " ", "a", 
          " ", "global", " ", "maximum"}]}], "*)"}], "\[IndentingNewLine]", 
       "opti0Vals"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"opti0Fn", "[", "r", "]"}], ",", 
            RowBox[{"0.4", "<", "r", "<", "1"}]}], "}"}], ",", "r"}], "]"}], 
        "\[IndentingNewLine]", 
        RowBox[{"print\[Mu]tric0", "[", 
         RowBox[{
          RowBox[{"reduSh1", "[", 
           RowBox[{"#", ",", 
            RowBox[{"r", "/.", 
             RowBox[{
              RowBox[{"opti0Vals", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "&"}], "]"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"opti1Fn", "[", 
         RowBox[{"r_", "?", "NumericQ"}], "]"}]}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Mu]tric1", "[", 
          RowBox[{
           RowBox[{"reduSh1", "[", 
            RowBox[{"#", ",", "r"}], "]"}], "&"}], "]"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "should", " ", "be", " ", "able", " ", "to", " ", "handle", " ", 
           "negative", " ", "starting", " ", "values"}], "*)"}], 
         "\[IndentingNewLine]", "opti1Vals"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"FindMaximum", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"opti1Fn", "[", "r", "]"}], ",", 
              RowBox[{"0", "<", "r", "<", "1"}]}], "}"}], ",", "r"}], "]"}], 
          "\[IndentingNewLine]", 
          RowBox[{"print\[Mu]tricK", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"reduSh1", "[", 
              RowBox[{"#", ",", 
               RowBox[{"r", "/.", 
                RowBox[{
                 RowBox[{"opti1Vals", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "&"}], ",", 
            RowBox[{"1", "&"}]}], "]"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"optiExpk1Fn", "[", 
           RowBox[{"r_", "?", "NumericQ"}], "]"}]}], ":=", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Mu]tricExpk1", "[", 
            RowBox[{
             RowBox[{"reduSh1", "[", 
              RowBox[{"#", ",", "r"}], "]"}], "&"}], "]"}], 
           "\[IndentingNewLine]", "optiExpk1Vals"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"FindMaximum", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"optiExpk1Fn", "[", "r", "]"}], ",", 
                RowBox[{"0", "<", "r", "<", "1"}]}], "}"}], ",", "r"}], "]"}],
             "\[IndentingNewLine]", "reduSh1Opti"}], "=", 
           RowBox[{
            RowBox[{
             RowBox[{"reduSh1", "[", 
              RowBox[{"#", ",", 
               RowBox[{"r", "/.", 
                RowBox[{
                 RowBox[{"optiExpk1Vals", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "&"}], 
            "\[IndentingNewLine]", 
            RowBox[{"print\[Mu]tricK", "[", 
             RowBox[{"reduSh1Opti", ",", 
              RowBox[{
               RowBox[{"KExpk1", "[", 
                RowBox[{"reduSh1Opti", ",", "#"}], "]"}], "&"}]}], 
             "]"}]}]}]}]}]}]}]}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzsnQn8FdP//9tXJSpbiiRClmSJRN9kDaUkWSuUhNIqZCdZy74nyZq9ry07
WUP2bIWQpWhTaXH+3+f5Pc7nP3fuzNyZe+d+Pp/0ej4eI59Zz505c87rvJcz
TfsM7Nq3UoUKFYbU+N9/uvYe8Z/Bg3uP7Fbvf390P2NI/35nnHzSQWcMPbnf
yYPb9Kn8v5UN/rfv6P8tVf73/0YIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCiHLA6tWrzY033mh23nln
U7t2bVOnTh2z3377mVdffTX1a73//vuma9eupkGDBqZGjRpmm222MZdccolZ
smRJ1r5//vmnGT58uGnWrJmpXr262WCDDcxxxx1nZs+eHXmNuXPnmgEDBpgm
TZqYatWqmU033dSccsop5ocffshZvjlz5ph1113XMJ142HUWLlxohg0bZho3
bmzPv9VWW5kLLrjA/PXXX3FugYhgxYoV5o033jC9evUyVatWNf369SvrIgkh
hBBrFeic9u3bWy3UsWNHM2rUKNO3b19Tr149U7lyZfPYY4+ldq0HH3zQnrNu
3brmmGOOMUOHDjX/+c9/7LX333//jH0//fRTq73QhOxLuY488kh7PLpy1qxZ
gdf4/PPPzYYbbmgqVapkOnXqZK/RvXt3q+E4jt8bxUEHHWSqVKkSqg05fvvt
t7fnp1yXXXaZ6dGjh6lYsaLZY489zNKlS/O+P8LYsQn33i3ShkIIIUS6fPnl
l6ZPnz6mS5cuZtmyZVnbsdGss8465t57781Yj40NfYjt7Z9//im4HOisWrVq
WV2FXc/LI488Yu2JXq644gqzySabmA8//DBj/ZNPPmk1A/ZDPytXrjQ77LCD
1Z5vvvlmxraPP/7YPPDAA5FlvOuuu6ytChtjmDYcPHiw3fbwww9nrOf+sf6s
s86KvEaxyPWc1xQmTZpkJk6caK699tqiaUPqEOMGroHNvFjHCCGEEOWNVatW
mdatW2fpKz/z588PXH/GGWfY/hlbXKGceuqp1taGPTAuYeVC/+Ff9vPQQw/Z
8t50002Jy/fTTz9ZLTxo0CAzevToUG3YsGFDs8suuwSeo0OHDvYcpa3N4j7n
NQnufTHthtwzxh/nn39+UY8RQgghyhNfffVVoH0tLvSD9M9vvfVWQeXA7rj+
+uvbGMY0OPjgg62v2c/hhx9ubYb5+HUPOeQQs/HGG5sFCxaYCy+8MFAbLlq0
yK4/8cQTA89x88032+2vvPJK4usXQpLnXL9+fRsrCV9//bWN62vUqJH1o+Nz
T6Ldi0mxtSGg9fbee++iHyOEEEKUF7AjFdK3ooGIo/v1118LKgf+Tvp5YvMc
y5cvzxn7Fwa5Kdttt13WerSdN26Rfpx8llw+8QkTJtjyPfroo/Zv7EJB2vDv
v/+294O4xyDQ0Bx3ww03JPxFhZHkOaMN+/fvb1588UWro9dbbz3rKyVmsnnz
5va5FEpaMQilEW+4++67l8oxQgghRHmgEG34xx9/2Hxd/KSF8vTTT9t+fvLk
yTb3eZ999rEai3XokfHjx8c+10svvWSPu+iiizLWYytk/WmnnWZ1xdFHH23z
oFmHHhoxYkSg7vn555+tPurWrVvJujBtCC1btrT+bH9eNbrxsMMOs8ddfPHF
sX9PGiTVhu3atbO/mWMWL16cennGjh1rl0KQNhRCCCHSpxBtiG0J/TZt2rSC
y3H//ffbfh7tRB7qmWeeaXUiPlhiB9nGHDq5QH/tuOOOVpvh+/VCfgvnIe8Z
TXvEEUfYvAZsguRnsI18ZT+UiRhBb35MlDZ0Nkau8/rrr9ucnccff9zstNNO
pkWLFnYbc/KUJkm1IWUkb6VYYK9Fm48bNy7vc0gbCiGEEOnz3nvvWTtaUpi3
hn6ZXJQ0uO++++z5iGubOXNmxjbyNpo2bWr1Xq78z4EDB2b4fr1g/2MbecZB
23v27Gm3f/LJJyXrXG7xnXfembFvlDaEK6+8MmOuFfK8R44caXU0f19//fWR
vyNtkjxntCFz/BA7WUzQh9zz6667Lq/jS0sbtmnTplSOEUIIIcoa/Kfoheee
ey7Rccwlg+6h/8NOlwbPPPOM7edvu+22wO3oKrZ/8cUXoee49dZb7T7MIROE
8yljrwqC+8B2bJXwyy+/2PyYVq1aWR3iXZwGxS7I30H3gXmu3377bbu4Oa+Z
v5Hj8KGXFkmfM9qQnObSAH141FFH5aWVS0sbElPLPE7FPkYIIYQoS+iTiSdj
vugkYNNjjhZyPQrNP/HCt0bo5/ElB3HVVVfZ7e+++27gduamYf6bzp07R9oW
KTdaL4jp06fba5B7DeSLeOdYjlqwy8XBzdPz+++/x9q/UPJ5zoVqw++//960
bds29rLtttvanJek9am0tCG6njk3iaEo5jFCCCFEWcM80Ni/4tqwmM+Euabx
+4Z9cyQI9CQ5rtj+uGYY5HCg3YL26d27d2g+NLF8+InJick1byD2M76bwpwu
flycoJuzmt+I7zxo4fewL7ZK/ibXORfMxYhOO+CAAyL3++2336yNLy2fbtLn
XJp2QzTynnvumVfMalJtGLce+qHuYddOQj7HCCGEEOUBbGVx4tC++eYb+83h
jTbaKCseMBfM9ebsa1H5xmzzz2MDM2bMsN+zO/DAA7OO4VsUbCOvNuh7y36Y
K4f9mf8Qm5oDbcc3j5m/L05eblS8IfrV/w0Z7EjMA5Mrd4f8GeIqOTc5NWnM
9QJxnzOUljZ0ujBf32tSbRi3HvpRLooQQoi1iTj5q04X0qcSG4Yu8i/MBR0G
9kDXJ+MbDgMdxPnZD+3Gt0fwyfEdPfQS5fDidCFzMg8ZMiSwXNgC/fBNFK5B
/jPlHj58uP3uH+cJylEJIkobMm802/h2MufmN2Br9fqrw+B5eH3V77zzTqzy
5CJpnnKxteG8efOsLnzttdcSHTdmzJiSZ+tiPimr95mHzYkZtx76kTYUQgix
NhFHM5BzmyveDj9tGMxFQ04HfXiumDJseeQloNv4rgl2vOOPP97OA+MHO1yu
cu27776B13n22WdN+/btbf4wC99jSeLXjNKGaFx8zcxZU7NmTTtfDvNtT506
Ned58XXy/RV0Kud/6qmnYpcpivKmDbHbMY9lUtz8OlELsatBJKmHXqQNhRBC
rE0U+l0UURymTJlidU5a3z/Wc84faUMhhBBrE+SXHHvssWVdDOFjwIAB1kaW
z3efg9Bzzg/suMSyFvsYIYQQorzAfC+77rqr/c6vKB+Qo0wcJfGWaaHnnBw0
3qWXXmrzmot5jBBCCFHeIMeD76ORB5xrDhhRXPiWHrGGvXr1yvkNmKToOceH
eZGIQUXnxZ3fPZ9jhBBCCCGi4Nt85EwIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEKJwvvnmG7PJ
JpuYvfbay6xataqsi5MKb731lqlQoYK5//77y7oo5ZovvvjC3qebb765VK43
evRoe725c+eWyvWE8PLII4+YOnXqmOHDh5d1USKpXbu2fU/c0rZt27IukhDm
+uuvz6iX/uW9994r6yIG8sQTT5g2bdqYGjVq2Pd/n332MQ8//HBZF6vc8+ij
j9rnWrFiRTN//vyyLk4qSBvGIy1t+Ouvv5rTTjvNbLzxxqZq1apms802M2ec
cUaWBsxHG3711VfmtttuM7vssos9dvbs2QWVNR9Wrlxppk+fbi6++GKz6aab
2t8nypalS5ea888/33z//fexj6FOUod23HHH0H3++OMPc8opp5gNNtjA1KxZ
0+y5557mhRdeyNjn+eeft+e5/fbbA89x00032e0ffPBB7LJ5mTx5sm27WLbY
Yosy1Ya8byeccILZcMMNTbVq1cw222xj7rjjDvPPP/+UWhnK+/t39dVXm8aN
G5sGDRqYUaNGlXVxiobThjwH6r5/+f3338u6iFlcd911tsz0HyNHjjTnnHOO
adeunV2X5rOijk6bNq2gcyxYsMDMmDEjpRIVzooVK8xVV11lHnroobIuSmpI
G8YjDW1IX7rllltaW0fv3r3NhRdeaE466SRTv35921b+8ssvJfsm1Ya8b/6x
aVxtePLJJ9s+jeWll17K56eVMHXq1IwylLe+KR9OPfXUsi5CQeDv4Fm8/vrr
sY/5+eefzQUXXGDefffdwO3Lly83rVu3Nuutt56tq3fffbfp0KGDqVKlSoY+
pM2sW7euOfzwwwPPc+ihh1qtkAaUp1jakHfjmGOOsX0l/7Jce+21Jdtffvll
a2fZbrvtzDXXXGNuueUW07VrV3vfBw4cmHGuxx9/vOQc7nz8m8sXlasMEPf9
y6cMffr0sWXYf//9bZ1KypQpU2z9GD9+vHnggQdMpUqVCm5vyitOG9JvrAnw
PteqVcvaCf1jmf/+97/W7pAWY8eOtfXUD/a2IUOG2DahW7du9v3p0aNHoI6k
jF26dLHlFsXBaUPeVRHOzJkzC9aGjCE5x4svvpixfuHCheauu+7KWOe0oVcv
5mLZsmV2ufLKKxNpwwMOOCBy+7hx4wLXP/jgg+ann37KWLd69eqScvCOr+na
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
5oQTTjAbbrihqVatmtlmm23MHXfcYf75558USv1/5+/Vq5c9f/Xq1e35r7vu
uqzz51OO1157zRx44IGmbt26VpdwT55//vnI8qxYscLstttu9tm8/vrrgfs8
/PDDZrvttrPlaNKkiRk6dKhZuHBh8h+/BhC3nsZ5XyZPnmzuv/9+u2yxxRbS
hkIIIdYoNt10U3PxxRcX7fzvvPOOueCCC8zcuXMLPtfy5ctN69atzXrrrWdG
jx5t7r77btOhQwdTpUqVgvThyy+/bG1G6KBrrrnG3HLLLaZr166padpPP/3U
1K9f32yyySbm7LPPNjfeeKM56aSTTNWqVe21CinHpEmTTKVKlczOO+9s78m4
ceOsTqxcubK9bhhnnnmm1ZJh2nDMmDF2W58+fcw999xjzj33XLPOOuvY+79s
2bKC74mflStXmmnTpqV+3rjEradJ3xfu15qiDRcsWGBmzJhR1sUQQghRxmDD
KqY2TBN0T8WKFc1bb71Vsm7VqlW27916663zPu97771nTjzxxCzN07t3b6s7
582bl/e5AX2w1VZbZZ1n1qxZGfbApOX4+eefrV7r3r27Wb16dca2b775JrQ8
Tz31lNWO119/faA2xHaJrXD48OEZ699++217/y+55JLcPzohY8eONVOnTk39
vGmT9H1Zk7QhdbFLly52DCaEEGLtolu3bhnxUEGLX5/gq7z33nvt/+Pj3HHH
HU2NGjWsnQsfmmPEiBGB58M/GcYvv/xiBg8ebLbcckurSfAXY6/68ccfM/bD
B9qxY8es45988kl7DbRVmkyZMiXS5xoH/I+cg3OlXY4LL7zQPoPff/899rl+
+OEHs/7669v4ujfeeCPwvLfddptdH6Qv0Q74SdOEOIGg53rOOefYcvz5559Z
26iP6Ggv6LaJEydazXzMMcdY+zJ16eijj7bX8JKknubzvjjiakNss7vssot9
njyfI444wnz55ZeB+95www12X34f94H3Am29dOnSrH3R2/vuu6/ZaKON7P1h
DIXm/+mnnwLPzTt+5ZVX5iyvEEKI9Pjrr7/Mm2++WZRzf/vtt1ZT+Vm8eLHt
0x0ffviheeaZZ8yDDz5o+7Xjjz/e/u1d/HYo+iBirTg/fUzPnj1t333UUUeZ
zz//vGS/jz76qCTWigU/XZQ25Fj6Lexfp556qvWjonkaNWpk9acDnyO6Mchm
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
zJZbbmltHb179zYXXnihOemkk0z9+vVtW0lf60iqDXnf/GPTuNrw5JNPtn0a
y0svvZTPTyth6tSpGWUob31TPpx66qllXYSCwN/Bs3j99ddjH/Pzzz+bCy64
wLz77ruh+6DDvM86SBvSZtatW9ccfvjhgec49NBDrVZIg9atWxdNG/JuHHPM
Mbav5F+Wa6+9tmT7yy+/bO0s2223nbnmmmvMLbfcYrp27Wrvy8CBAzPO9fjj
j5ecw52Pf3P5onKVAeK+f/mUoU+fPrYM+++/v61TSZkyZYqpUqWKrScPPPCA
HU8U2t6UV5w2pN9YE1i+fLmpVauWtRP6xzL//e9/rd0hLcaOHWvrqR/sbUOG
DLFtQrdu3ez706NHj0AdSRkZk1JuURycNuRdFeHMnDmzYG3IGJJzvPjiixnr
Fy5caO66666MdU4bevViLpYtW2aXK6+8MpE2POCAAyK3jxs3LnD9gw8+aH76
6aeMdatXry4pB+/4mq4N3377bauR1mTefPPNxNowDn///bd9zu+8806oNoQj
jzzS6iZ0ohfadcZJaWnvYmrDzp07l/zLOMwPPsITTzzR3g8vjAHRQ/Pmzcvr
vEn3zef9S1IGGDFihPnkk09y7ueHcfB+++1X8nfz5s2tTvg3klQbMrbYd999
7fvAu9KpUyf7XgVB+46NAWbNmmWOO+44a6vGD7XbbrvlVV5sEJQXf0ExwT7S
sWPHrPU//vijLTv3wb//sccea+6+++6sY+699157L9KE94dnt/3221vbv9/e
wjMC3q+gWAHGhn7ow2kDwvoRdAG6fNGiRRnrabcPOuggWx/Yztjt2WefzTqe
/pu2h/b43HPPtf4CFw+Qz3vqcNqQmAL8O9tuu62pXr26adGihbnzzjsz9h0w
YIC1ASxZsiTrPLT7DRs2NMOGDQu8DnbJdddd1xxyyCGpxGrSFlNu6hTlOfvs
s03Tpk3t+4ENjvVefvjhBzvudf4efieaJ8jfQzvet29fex7eVfo21796tSE2
d9b9+eefWefgOJ6Xl379+tn9qe+5cNqQc9933322rtasWdO0bNnS+vGiwJaQ
pjbEphAEfsqoto++prS0YdL6EBfa3dLw/9x6663Wf8u7Rx2lHw0qM9tpJxl3
o4OICyI+gbhA/xgae3RUzNPuu+9esu8zzzwTuA/vfC4+/PDDSG1IG852v43I
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
RDpEacN58+bZuQU7dOiQ93mjlsWLF0eeg7hCvoHStGlT60tu0qSJjT/Epoj2
RDsec8wxicsmhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghxL+dIUOGmDp16pjHHnusrIsiRChp
1tPatWubChUqlCxt27ZNoYRCCCFE6XDTTTeZV199tWjn32GHHWz/OHDgwILP
dcIJJ5jq1atnrf/000/NOuusY4488si8zz179mx7/g033NBUq1bNbLPNNuaO
O+4w//zzTyFFzjh/r1697Pn5DZz/uuuuyzp/PuV47bXXzIEHHmjq1q1rdcme
e+5pnn/++cjyrFixwuy222722bz++uuB+zz88MNmu+22s+Vo0qSJGTp0qFm4
cGHyH78GELeexnlfJk+ebO6//367bLHFFtKGQggh1ig23XRTc/HFFxft/O+8
84654IILzNy5cws+V5A2/OOPP0yzZs3M9ttvb5YsWZLXeV9++WVrM0IHXXPN
NeaWW24xXbt2TU3Tol3r169vNtlkE3P22WebG2+80Zx00kmmatWq9lqFlGPS
pEmmUqVKZueddzajR48248aNszqxcuXK9rphnHnmmVZLhmnDMWPG2G19+vQx
99xzjzn33HOt/m7durVZtmxZwffEz8qVK820adNSP29c4tbTpO8L92tN0YYL
FiwwM2bMKOtiCCGEKGPQWsXUhmni14arV682BxxwgKlXr5755ptv8j7ve++9
Z0488cQszdO7d29TpUoVM2/evLzPDeiDrbbaKus8s2bNyrAHJi3Hzz//bPVa
9+7d7b3wEnU/nnrqKasdr7/++kBtiO0SW+Hw4cMz1r/99tumYsWK5pJLLsn9
oxMyduxYM3Xq1NTPmzZJ35c1SRtSF7t06WKWL19e1kURQghRynTr1i0jHipo
8esTfJX33nuv/X98nDvuuKOpUaOGtXPhQ3OMGDEi8Hz4J8P45ZdfzODBg82W
W25pNckGG2xg7VU//vhjxn5+bThs2DBrM3v66afTuC1ZTJkyJdLnGgf8j5yD
c6VdjgsvvNA+g99//z32uX744Qez/vrr2/i6N954I/C8t912m10fpC/RDvhJ
0wTbb8eOHbPWn3POObYcf/75Z9Y26iM62gt1Y+LEiVYzH3PMMWa99dazdeno
o4+21/CSpJ7m87444mpDbLO77LKLfZ48nyOOOMJ8+eWXgfvecMMNdl9+H/eB
2AC09dKlS7P2RW/vu+++ZqONNrL3Z+utt7aa/6effgo8N+/4lVdembO8Qggh
0uOvv/4yb775ZlHO/e2331pN5Wfx4sW2T3d8+OGH5plnnjEPPvig7deOP/54
+7d38duh6IOIteL89DE9e/a0ffdRRx1lPv/885L9Pvroo5JYKxb8dFHakGPp
t7B/nXrqqdaPiuZp1KiR1Z9evNrwvvvus+ctps3T3R/v70sKvth111034376
722+5dhrr73MoYceWvJ3rthI/LbolF133dX8/fff1ocdpA3xZ4dpMrft119/
TfQbouB5o4385KMN+/fvb333aKtLL73U1nvO0aNHj4x9k9TTfN4XRxxteNpp
p1k7LvGoEyZMsPZc4h+xh3/99dcZ+xIzQBmwJRNPQJkGDRpk35+LLrooY993
333XjrXatWtn7rzzTvPII4/Ye7LZZpuZDh06BJZl1apVNl5VtkMhhCg96JP7
9u1rbRGffPJJqud+4IEHzM0335y1/pVXXrH9rx/sTXH1FX0xNgdse2jQuKA7
wvpc+lP6QM79xRdfZGxDD9B/e3HakL66Zs2a9rz0o8Wic+fO9jcXAvGCaIPv
v//eHHfccdbOiq2zVatW5oknniioHNiX0E/cY/p6dAD3h3jDzz77LGv/s846
y+oNfMYQpg3xObM+KJ+Fusu2tOLS0CLNmzcP1CL5aEPuwaOPPpqx/rDDDrP3
PMiu5oiqp44k74sjlzZ88skn7TkZ63jBDsm7duyxx2as51zkJwWVjbbFi7t/
fh3PflG25quvvtraX4UQQpQu+OuwP2ArcH11oeAnnD59etb6q666KtCnmVQb
osfC/FxhRPW5zt8at69FGxJ3h90DPdG+fXvTsGFDs2jRoqx9WYemCluwuUSB
LYiy+XVGUtBs9PHYRrHv4OPDfkPZ0SsvvfRS3uXA1oRvkXPjB+Rc2IeaNm1q
74u3/3/uuefs9bxztIRpQ7QD56DcL774ovXHEgvJfdt4443tMejzNKAM+H+D
yEcb+teBs7VF1d2y0oaHHHJIoNYD4iywn3shJ4l3AB8yPogoqDOUl3uCnz0u
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
PNjue8IJJ0Tu9+CDD5p27dqZddZZxy577rmnmThxovnnn3+y9t1pp51Cy7Tj
jjvGuhcimNKoh0IIIYTITe3atTM0Ttp98uLFi03z5s3NeuutZ/XgHXfcYU47
7TTb/++2225m5cqVWcf07t3bVKxY0erJoCVMUzrefPNNU7lyZVOpUqVIbXj6
6afb34xWPeWUU+y5W7RoYddddtllWfs3bdrUNG7cOLBMV1xxReJ7I/4/xa6H
QgghxNrOl19+afr06WO6dOlili1bFrrfpEmTrJ3s2muvLUqffN5559nzvvvu
u1nXZT12Oz9du3Y19erVy+t6/Natt97aHHvssfYcYdqQ63J99lu+fHnJerQq
9yLINrn++uvb+1meiPucyzvFrofw5JNPmk6dOtlrrF69umjHCCGEEOWNVatW
mdatW5sPP/ww9jGzZ88uSp/cuXNns+GGG2atp4w1atQwQ4cOzdq27777mi22
2CKv6w0bNszaoH788UdTvXr1UG247bbbms022yyRnqpSpYrVYeWFfJ5zeadY
9dDBPcPGe/755xf1GCGEEKI88dVXX5njjjsu0THF6pNPPvlkU7NmTbNw4cKM
9cSXVatWzYwePTrrmF122cUuSXn77betL3nMmDH2b/zSQdrwo48+sr/10ksv
jX3uJUuW2GOCtGxZkeQ5169f3+pm+Prrr21cX6NGjazebdCggfn000+LWdTY
FFsbAlpv7733LvoxQgghRHkBO1LSvrVYffJbb71l4/72339/88cff5Ssv/XW
W602/O6777KOIT6R/QEfLzGLucAvvM0225idd97Z9uMQlovCtdlGXKJj0aJF
kTbEn376KSMOkX3L2oeb5DmjDfv3729efPFFU7duXRv/ia+0R48e9n57/er5
EpS/k5TS0Iaw++67l8oxQgghRHmgPGlDuP322619ing98lHuu+8+mxN81113
Be6/wQYbmGbNmtm8YOyAlIt15HwsWLAg8JgRI0bYa3zwwQcl68K04fDhw+22
3377zebGEJ/I32jYvfbay0ybNi3rmM8//9zugz4gd8XlTHDsuHHjyiQWLak2
JB8bTcgxcfR2UsaOHWuXQpA2FEIIIdKnvGnDxx57zMYctmzZskRTtWrVyvz+
+++B+++xxx7WBojm+u9//2v1W8eOHUuO89u43nvvPashzzrrrIz1YdqQ38g2
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
cHnppZdaXPLi2vDnn3+218R7Tdl5t2OstdZa9ve33347+jttxVhjjWXmnHPO
3GXwueSSS8zRRx9tlz59+nSUNvz333/N2Wefbeabbz4zxhhj2OtdccUVzSOP
PNLuolm6Ypv17rvv2ro76qijmrnnnts88cQT7S6SEMMcZWpD2vplllnGHm/6
6ae3x1xnnXXMRBNNZNetvvrqVfqwqDY88cQTa2xrJ2hD2n6/TF2hnS3KTz/9
1O4ilMr5559vnxnvQx7++OMPs9lmm1kd9M0330S3cdpw2WWXNfvss090+eyz
z8q4jFwU0YbPPPOMGWGEEarqeZI2vPDCC+3vZ5xxRvT3xx57zP5+4IEH5i57
ErfddlvHaEPeEdcerrDCCubQQw8122+/vRl33HHNiCOOaOtFu+lqbdaff/5p
pptuOqu1L7vsMts/mWyyyczvv//e7qIJMUxRpja86KKL7LFo//7555/Ket7n
fv36mb59+1ZtX1Qbvvbaa+aKK66wy5JLLplLG7755pu2XVl55ZXtgq0ri6uu
usqWievpCu1sUX755Rfr+xiW6N+/fyFtmAWnDTstd6KINvz6668r7x7veZo2
RO/y+2qrrRb9/bDDDrO/P/roo7nLnkQrtOF7771nJp98ctt+oPNWWmkl+/8N
Ntigajv8cWOOOaa58sorq9Z//PHHdr+pp566JpYydOjQSttE2+afh753WWVz
5GmzGinbscceW9l31VVXrXsdSdx55522nM8995z9+6mnnrJ/v/jii4WPKYSo
hb5tWdoQ/wnHQrtlwWnD008/vfA5t9hii1zakNhdFs02YMCAxOsgdvXVV18l
7vvBBx8M09rwlFNOSdQDXZW99tpL2jAnxHLTtCHMO++8Vh8RuwxZZJFFbM6J
349slFZpQ9od4B6m6SLyUWPsvvvutpz0Vcs4TyP7QN42q+h5gPzQojj/vvPR
33333XXvoxBdmQkmmMDst99+9v+8d+R/TDHFFGakkUYyE044oXn99ddr9qFf
SpyW9pXcC9rh8847r6Yv6nj22WdNr169bFvNPptvvnmlTQi1odNc/B6CLeA3
bIMP7Qrrr7322kzX7LQhZf7222/NzjvvbCaddFJrr/Dt3XPPPXWP0SxtiP6j
Txpjm222MZ988knivu3WhkXqUlawAUsvvXSp9jyNt956y+aQTTzxxLZezDrr
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
zoHPv951cM+SYCwT29Sb14/2izHZPAf8xrwbbr4X2q162pA4BfcHXzw6Ey0S
tlXUUdpDzkPd4t2jjUNP1qsrWXURce1694t73Oh5iu7TSJvVrjlsyD+mbSHm
z8J8nm5+ePQgfme+/SWEEHnIqg3bAd+uScoZawfE3pZffvl2FyMzTh+98sor
7S5Ky+nO195qyvguSrPO08llczQ697UQQpRNJ2tD/CH05WPfCm4HzD3kzx/W
6dSbx2VYpjtfe6vpZP3VyWVzSBsKITqNTtWGjFEmZuqP4xb56M76qDtfe6vp
ZP3VyWVzSBsKIToNxugwjoG8IpZGx32UAfn25DuRp5k0NlLUpzvro+587a0G
fzrfaKH9cOP5WMj1bpShQ4dWjkeutX+epDl1ukLZ6PO6ffOObRNCiO7IgAED
7Nhe0RjdWR9152sXQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEJ0LQYPHmwmn3xys8QSS5h//vmn3cUp
haeeesoMN9xw5pprrml3UTqat956y96nc889tyXnO/bYY+35vvjii5acTwif
G2+80Yw11lhm//33b3dRUumK78lzzz1ny+wvhxxySLuLJUrkzDPPrHnG/kId
6ERuueUWs8gii5hRRx3Vvv9LL720uf7669tdrI7npptuss91+OGHN9999127
i1MK0obZKEsbfvXVV2bXXXc1k002menRo4eZZpppzO67715j24rYvHfffddc
cMEFZoEFFrD7fvDBBw2VtQh///23ef75583RRx9tppxySnt9or389ttv5vDD
DzcfffRR5n2ok9ShueeeO/r7bbfdlmr7LrzwwrKKn0re9yRr/Tz44IPtcd97
773o7xtssIEZf/zxC/kIvv/+e9veslx66aVt1Ya0EVtssYWZZJJJzMgjj2xm
nXVWc9FFF5n//vuvZWXo9Dbj5JNPNlNNNZWZcMIJzaGHHpppH6cNuSbehXD5
5ptvmlzq/Jxxxhm2zNiPgw46yNbJJZdc0q7Let1Z4Hk/8cQTDR3jxx9/NC+/
/HJJJWqcv/76y5x00klm4MCB7S5KaUgbZqMMbYhNmGGGGcwYY4xhttpqK3Pk
kUeabbfd1kwwwQS23fnyyy8r2xaxeaF9zqoNt9tuO2sfWB588MEil1bhvvvu
qypDp7XzRdh5553bXYSGIN7Bs3jssccy7/P555+bI444wjz77LPR35023G23
3aK27+233y6r+KnkfU+y1s+nn37a/n766afX/IYeHG+88UyfPn0aKbrll19+
aZo25H3edNNNrX3nX5ZTTz218vtDDz1kfUOzzz67OeWUU8x5551n1llnHVue
PfbYo+pYgwYNqhzDHY9/62njemWArM+kSBm23nprW4aVVlrJvgd5uf32281I
I41kLrnkEnPttdeaEUYYIVMb6bQhdqMr8Mcff5jRRx/d+gnDfsEdd9xh/Q5l
cdppp9lnHoK/bZ999jGrr766WXfddW1d3HDDDaM6kjKutdZattyiOThtSL0X
yWDrGtWG9CE5xgMPPFC1/qeffjIXX3xx1Tpn83y9WI/ff//dLieeeGIubbjy
yiun/h6zj3DdddeZzz77rGrdv//+WykH73hX14ZoBDRSV+bJJ5/MrQ3r4bQh
/7aTvNowa/3E9kw66aTRd+Pxxx+35yzDR9BMbbjmmmtW/qXvGEJcc5tttrH3
wod+K3ro22+/LXTcvNsWaTPylAEOOOAA89prr9XdLoS++4orrlj5e8YZZ7Ta
ph55tSE6ffnll7d+A/T6qquuap555pnotrTv+Bjg/fffN5tttpn1+xKHWmih
hTKdL4T3h/ISL2gm+EdWWGGFmvWffvqpLTv3IdyePhj+9ZArr7zS3osyoS7y
7Oacc07rRw/9LTwjoK7G4iX0s0Kw4bxPSXYEXYAu//nnn6vW02737t3b1gd+
px9099131+xPG8V7/Oeff5q+ffta37vLByhS5x1OG5JTcM4555jZZpvNjDLK
KGaWWWYxAwYMqNp2l112MWOPPbYZOnRozXHwqU400URmv/32i54Hv+Q444xj
VltttVJyNV3ODnWK8hAD6tmzp30/8MGx3ufjjz+2fUgXO+E60Tyx2Alt4vbb
b2+Pw7tK/MjZV18b0p6z7ocffqg5BvvxvHx22GEHuz31vR7O5nHsq6++2tbV
0UYbzcwxxxw2FywN+uVlakP65zGIU6a1fbTbrdKGeetDVmh3WxH/Of/88238
lnePOopNipWZ32kn6XcvvvjiNi+I/ATyAsM+NP7otLjvwgsvXNn2rrvuim7D
Ox8jjzY8++yz7bY333xz1Xr8Eay/6qqrCl9jkjakvcHHc8IJJySWq1795Blw
bmLyPrz3tCFhW04ZiL3NM888ti0fd9xxrf/jww8/TDxHVm3IvcAuoVe5PzPP
PLO9H2HfLLw+928W/eTAV5bWlyhbG4bbd5o2dFoGHUZ7kiUemkcbonGoq/PP
P7/VncQm0Rici3ckBD008cQTmxdffNG+49gE/G177723bfeKgk0kT6LReG8a
xMouv/zymvW8J0n+WPQCuijMiWH9YostVqrvEP0y4ogjWtt2//33m+OPP97a
3Y022si+g9xzQEO6vBC38Bxi2hDwcU433XRRvTH99NObzTffvGodvjr05HLL
LWc1B1qMuk4+Y9gnxX7Tf+Ee0aajNYl10UaRC4E2K4LThpSb5aijjrL5FdQT
1vv+LPzKlI3YQwj+/rR3gTI7e0NuSaM4LUD55513Xvuu7LTTTjZPYr311qva
ljKhW+lr8V5dccUVNhbGu0funw/tPTk3vKs77rijOeuss2xMghhSo9oQPxvb
0y8P7U2Is3nYZp4v7zwLtoFn8MYbbyTuW5Y2JDbItVMvXMzZX9Ay1Hn+/+uv
v9bs3w5tmKU+ZIVcs2b3o4F+CGUnhkL9Ql/Q5qOHwvYQXUA9pg3HHlA/6Vuy
f9i+4J9G87l6is3hb7dwrxzomrCt4x2opw3RcJ988knVgt7xoT1E16B5XZ42
7xn12tn4otcY04aUjXb1wAMPTL3v9ernrbfeao+NVvKZb775bIzSBx3PO8+7
Qp3jORKXRVtiL5L6w1m0IXF92nnafmwEfcP+/fvbsmM70q7P/ZtHG7p26s03
32z4uF1dG2Lr8IfQ3uIvoX+fBacN0dfUTX/Bv+PADzHmmGNa++jbcOwDNph3
JmxbsWHUB/q+6ICyckPJ32OsLfYFrcF7VGbeKe8AftdQy3F96OI00CHokhDW
Yc/LgOfCfQ2fMTqRvl7oXw+hjUvShq6/9cgjj1Stf/TRR+36hx9+uLKOOkJb
gl0IwU8z9dRTVz0X7DfHoK/orydPhPUxX2MWnDbExvvXTpyTthv/pH8+/H6x
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
DLPVVltZ7bTtttuaCSaYwGqAL7/8srJt3vuMhgn7C0na8KOPPjKTTz65GX30
0c32229v+vbta2affXa7z5lnnln4+nwuuugiM+KII+ba55lnnjFHHHFER/lK
77vvvqp7mkUbbr311rberrTSSmbw4MG5z3n77bebkUYayVxyySXm2muvNSOM
MEJHvANCCCH+PzEN99BDD9m2e7fddmvZcZ02xA/XTopolt9//90u44wzTmZt
uPLKKzdQyvJ5++23G9aG+J44xgMPPFC1Hl1/8cUXV61z99nXi/Vw9/nEE09M
1YarrrqqGWWUUcyzzz5bWffnn3+a5ZZbzow88siF9EzIMccck1sbtgr6XzGu
u+4689lnn1Wt+/fffyv3dfXVV8/lNzzggAPMa6+9lrt89BdWXHHFyt8zzjij
Oe2003IfRwghRHMINdyHH35o43BLLrmk+euvv1p23Dza8Oyzz7bbhnlbd9xx
h11/1VVXVdY99dRTdt37779vfZKzzDKL1Qf8O2DAgJpjJ2nDa665xvo3Tjjh
hMRylakNn3vuOVsOYqNDhw41Bx98sOnZs6eN0+KDY73Pxx9/bP05k0wyib2+
2WabzWqE//77r+bY3377rfWncRx8fBtssIF58skna7Sh84n+8MMPNcdgv222
2aZq3Q477GC3x39YD3efOfbVV19t5pxzThv7nWOOOcyNN96Yuu+pp56aqA3R
ffy244471vz2+uuv29/233//yro89QMdlJb3wIJecvD/2DbXX3993fvTCJtu
uml0/eGHH279w0msueaaLdOGK6ywgv0/9506/cQTT+Q+jhBCiObga7jffvvN
zDvvvGaKKabI5c8p47hOG77zzjvmk08+qVpCLYneWX755a0O+u677+y6n3/+
2eYvYd98nO3HNzHTTDNZ3xa5Tmgn1if5s3xteNttt1l/54EHHph6zc3QhpSf
ezfxxBObnXbayRx00EFmvfXWq9oWe4/uJp6LT+2KK66wvllsLrl/PtynWWed
1epc9BN6iDKPN954DWtD/FJsTzyZZ56Gu8/kafLc0L4sk046qRl++OHNG2+8
kbhvmjYk/4Df7rrrrui+008/vc1XdOSpH/RbOC4LPjbuofvbLdRfxyuvvGL7
FG4hntxMbci18yynm266Sr6Cv8w999xmrbXWsv//9ddfa/ZvlTY877zzzNhj
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
kUiZ9XSMMcYwww03XGVZfPHFSyihEEII0RrOOecc88gjjzTt+HPNNZe1j3vs
sUfDx9piiy3MKKOMUrP+9ddfN2OOOabZYIMNCh/777//Ns8//7w5+uijzZRT
TmmmmWaaBkpazV9//WVOPPFEM9tss5lRRx3VTD755Gb//fc3P//8c8223Cdf
V/jL9ddfn3qeDz74wIw77rhmxBFHTN1myy23NJNMMom9l7POOqs544wzzH//
/Ve1HRopqRy77LJLsRvRwWStp1nelxtuuMFcc801dpluuumkDYUQQnQp0EHo
oWbxzDPPmCOOOMJ88cUXDR8rpg2///57M/3005s555zTDB06tPCx77vvvir9
U6Y23HHHHa12PeGEE8y9995rtdhEE01kevfuXbPt5ptvbiaddFJz5pln1iyD
Bw9OPAf6c+GFFzZjjz12ojZEQ08wwQRWmx588MHm7LPPNttuu63p0aOHOe+8
86q2vfjii+19OPbYY2vK0Yy+BNr8iSeeKP24WclaT/O+L/PPP3+X0YY//vij
efnll9tdDCGEEG0GrdVMbVgmoTb8999/zcorr2x9ZWm6KQsc6/fff7fL6quv
Xpo2/Oqrr8zwww9vTj311Kr1d911l9Vezz33XNX6NdZYwyy22GK5z0NMFF/g
YYcdlqgN0SkzzTST+fbbb6vWv//++zV+w1NOOcWW788//8xdliKcdtppVp93
Onnfl66kDakDa621lvnjjz/aXRQhhBAtZt11102MF7oFjeRDDtWVV15p/3/R
RReZueee28ZHydEihuY44IADcsdDv/zyS7P33nubGWaYwYw88shm4oknNltv
vbX59NNPq7YLteF+++1nRhhhBHPnnXeWcVsqrLnmmqVpw/fee89e/4033li1
/rvvvrPrw7IvtdRS9vx5uP32263+vPXWW02/fv2i2hBfH+dj2yygMccZZ5xc
5SgKvt8VVlihZv0hhxxiy/zDDz/U/EZ93GabbarWUTeuuOIK8/nnn5tNN93U
jDfeeLYubbLJJvYcPnnqaZH3xZFVG15++eVmgQUWsO/U+OOPb9Zbbz3zzjvv
RLc966yz7LZcH/dhoYUWstr6t99+q9kWvb388stbXzT3Z+aZZ7b5DJ999ln0
2Lzj5D8IIYRoHb/++qt58sknm3LsIUOGWE0V8ssvv1h/gOOll16yfqvrrrvO
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

       "], {{0, 532}, {647, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{329.3333333333329, Automatic},
     ImageSizeRaw->{647, 532},
     PlotRange->{{0, 647}, {0, 532}}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"conclusion", ":", " ", 
      RowBox[{"for", " ", "internal", " ", "squeezing"}]}], ",", " ", 
     RowBox[{
     "integral", " ", "metrics", " ", "just", " ", "find", " ", 
      "threshold"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8358344274906387`*^9, 3.835834455709652*^9}, {
  3.8358350275160103`*^9, 3.835835131021284*^9}, {3.835835189308689*^9, 
  3.835835278441032*^9}, {3.835835397413754*^9, 3.83583547725815*^9}, {
  3.835835641585037*^9, 3.835835648560878*^9}, {3.835835695740513*^9, 
  3.835835702035677*^9}, {3.835835746969179*^9, 3.8358358217504473`*^9}, {
  3.8358359546153803`*^9, 3.835836021626905*^9}, {3.8358361541734867`*^9, 
  3.835836154674821*^9}, {3.835836227698412*^9, 3.835836260286251*^9}, {
  3.835838217347251*^9, 3.835838241376951*^9}, {3.835911719615432*^9, 
  3.83591175028258*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"bc23707d-ef93-4040-bfe9-74265c1e8568"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"external", " ", 
     RowBox[{"squeezing", "'"}], "s", " ", "improvement", " ", "is", " ", 
     "unbounded", " ", "at", " ", "threshold"}], ",", " ", 
    RowBox[{
     RowBox[{
     "so", " ", "optimisation", " ", "is", " ", "very", " ", "slow", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "in", " ", "order", " ", "for", " ", "numerical", " ", "optimisation",
          " ", "to", " ", "work"}], ",", " ", 
        RowBox[{
        "need", " ", "to", " ", "have", " ", "\[Mu]tric0", " ", "only", " ", 
         "evaluate", " ", "if", " ", "fed", " ", "a", " ", "numerical", " ", 
         "argument", " ", "by", " ", 
         RowBox[{"using", " ", "?", "NumericQ"}]}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"reduSh0", "[", 
       RowBox[{
        RowBox[{"\[CapitalOmega]_", "?", "NumericQ"}], ",", 
        RowBox[{"r_", "?", "NumericQ"}]}], "]"}]}], ":=", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"ASDShIntExtSqz", "[", 
         RowBox[{"\[CapitalOmega]", ",", 
          RowBox[{"0", " ", "kout"}], ",", 
          RowBox[{"r", " ", "\[Kappa]afExt"}], ",", "0", ",", "0", ",", "0", 
          ",", "0", ",", "0"}], "]"}], "2"], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Mathematica", " ", "gets", " ", "upset", " ", "passing", " ", "pure",
          " ", "functions", " ", "to", " ", 
         RowBox[{"NMaximize", "?"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"optiFn0", "[", 
        RowBox[{"r_", "?", "NumericQ"}], "]"}]}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Mu]tric0", "[", 
         RowBox[{
          RowBox[{"reduSh0", "[", 
           RowBox[{"#", ",", "r"}], "]"}], "&"}], "]"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"NMaximize", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Mu]tric0", "[", 
              RowBox[{
               RowBox[{"reduSh", "[", 
                RowBox[{"#", ",", "r"}], "]"}], "&"}], "]"}], ",", 
             RowBox[{"0.4", "<", "r", "<", "0.7"}]}], "}"}], ",", "r"}], 
          "]"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "because", " ", "of", " ", "zeroing", " ", "of", " ", 
           "\[Mu]tric0"}], ",", " ", 
          RowBox[{
           RowBox[{
           "optimisation", " ", "must", " ", "be", " ", "run", " ", "from", 
            " ", "a", " ", "non"}], "-", 
           RowBox[{"zero", " ", "starting", " ", 
            RowBox[{"value", " ", "--"}], " ", "to"}], "-", 
           RowBox[{"do", ":", " ", 
            RowBox[{"fix", " ", "this"}]}]}]}], "*)"}], "\[IndentingNewLine]",
         "optiVals0"}], "=", 
       RowBox[{
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"optiFn0", "[", "r", "]"}], ",", 
            RowBox[{"0.4", "<", "r", "<", "1"}]}], "}"}], ",", "r"}], "]"}], 
        "\[IndentingNewLine]", 
        RowBox[{"print\[Mu]tric0", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ASDShIntExtSqz", "[", 
            RowBox[{"#", ",", 
             RowBox[{"0", "kout"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r", "/.", 
                RowBox[{
                 RowBox[{"optiVals0", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}], " ", 
              "\[Kappa]afExt"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0"}], "]"}], "^", "2"}], "&"}], "]"}]}]}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"NB", ":", " ", "gExtRatio0"}], "=", "0.698"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"given", " ", "external", " ", "squeezing"}], ",", " ", 
     RowBox[{"the", " ", "optimiser", " ", "finds", " ", "threshold"}]}], 
    "*)"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzsnQe8FcXZh03vvfdqeu8mn+ma3qsaE9M0amJiSTFGjaYYxF6wF1CxK6Io
AlIVEBCwgaL0Jr33sh/PyHuYM3d2z+45e+49997/88sG754ts7OzM/P+5513
3vKrP37/wKfutttuRz57x/99/5d//cIRR/zy6B+8eMcfPzrsyIMPOuy3v/na
YUf99qDfHvGpXz1tx87eT9ltt/c+fbfddvxvt0QIIYQQQgghhBBCCCGEEEII
IYQQQnRJtmzZklx++eXJhRdemGzatKmjkyNamIcffjjp2bNnMnHixKbdY9my
Zcnpp5+e9O/fv2n3EMVQHSGEEEIIIYRob0444YSEqSxsRxxxRIelw9Lgbz/4
wQ86LD2imlWrViUvetGL3Ht5znOekzzxxBNNuc8XvvCFyvuXXtEatEodIYQQ
QgghhOh8/PznP3e2xNlnn13ovF/84hcVO+Q73/lO1W8bNmxInve857nffv/7
30fPv/LKKyvnz5gxo+70P+1pT6tsT3nKUzqtVoFPgOXHwIEDq34bPHhw5bcV
K1ZU9lse77333lXHL1iwoJIXhx56aLukP42ZM2dW6UiTJk1qyn3e9KY3Ve5B
XoryaEYdYVAeYnqjvx155JFlPEa3Y/bs2e7dvepVr0qe9axnJe9+97udfxP+
Ls3g1FNPrbyzr3zlK025R2dn3bp1yYABA5JvfvObro5GxxVCCCGEEHG+9KUv
1WWH4Ne/xx57JB/72MeSCRMmtPn9u9/9rrvuO97xjuj5Zv+8733vqyvdMexZ
OrtWgY+ATy2t4hnPeEbV/gsuuKByfEdrFfD3v//dlYPDDjusafe44YYbkve8
5z3J17/+dTcfpBXAXvNt7g9+8IO5zrv55ptdGXjJS17S1DzLS7PqCOgIraLe
95KH2PNcffXVpV0/L9OmTUte8YpXVNLw1Kc+tfLf3/ve95Lt27eXer9x48a5
ekhaRTrDhw9Pnv70p1eVjTxaBe/xDW94Q7L//vsn06dPb4eUlkOrfAtCCCGE
6Ly8613vqssOqcWll15a6Z8wth7ymte8xv2GHVsWXUWrYLv33nsrv2VpFS9/
+cvd/j59+lT2Y6/b/lbQKrorZhN//OMfTz7zmc8kBxxwQM1zbrrppsq7fvvb
3+7GqjuaZtUR4Nsz+Fo99thjbbalS5eWes963kteSC/XZHvjG9/YYfbZ5z//
+cozPv7448nWrVudnvfsZz/b7e/du3dp92Ke11vf+taKziqtIg56HfnCtvvu
u+fWKr785S9XdCfazTVr1rRDahunVb4FIYQQQpTPAw88kOyzzz7JK1/5yor/
LvO/Y/0U+gL0AxiPpS/wyU9+0vVJsVfph4cxAj73uc/VHMsMNYaTTjop9biY
DbN48eLKWN75559f9duDDz5YOXfs2LFVv+EjSyw+5jWQfsbq8O//wx/+kCxf
vjwzz4poFddee21l7Jqxrle/+tXJD3/4wzbzL9oL0yre//73u3+///3vV37L
0ioYs8bHGz8WoHxQXr797W9HtYpt27Ylt912W/LTn/40ef3rX58885nPdP1g
np1x8BDOtz71/PnzK/sZl8UO4re99tqr6hzuHysnL3vZy9pcf8yYMe63n/zk
J843mjS99KUvTa666io3N+ijH/2ouzf+Bf5YcDg27m+Urxh8F7XK/Ny5c9uc
R7787Gc/c2WE/HrLW96SHH744a6MZ2FpjF0zjR/96EfunGuuuabmsZ29jgBf
qxg2bFjNZz7mmGPcsX/5y1/cXIb//Oc/ydve9jb3XvgXn6Ja5H0vw8atTHZ7
36hkj/0mu7+XLN+cHN5jRvKmvcclT//g3cmL9xiTDL13Zer5//rXvzrEPpsy
ZUrFlwKdwuf44493v/H+y+LHP/6xuybfiMUoKVurWLJkSe5jG31vzUqXj5WN
vHNAqLfxh+Ec6sn2prN+C0IIIYQonxtvvDHV3sPPPbSRzA6xGIbhxrgoGoCB
HYvdyGbHYPfaPtvmzJlTOadHjx5VsSHYatkhli76WD42rxnbz7c/6Vdjd6XZ
O8wX8Z8jJK9W4dtUPAe2sf88xx57bOb5zcC0Cub1owFgZzz66KPutyytAvuM
uADErSRvGDvluP/9739ttAr6u6YvxLbnP//5bfQK7N43v/nN7nfTQ+Diiy92
+7hv6JdMumJxRLK0CvSoF77whZW0oJ+Eab3jjjsq5+E74t/D93FP0yooj2EZ
9s/Dz3rt2rVV5/Tr168yFm3lxf6bsUJfvwmpR6vIe05XqSPq1Sq++tWvVnwH
wm3IkCGZ1yiqVez+jQnJ43M2OLuMv/1tzsKNqed3lH127rnnuvuiY4Y89NBD
FR0jqy7Ni803o46gbvrrX/9aqlYxb948p9v+4x//yH1Oo++tWenyKapV+Od0
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
mlZUVKuIvWuLm5PmT5S3TNarVcDpp59edSz+KFnUY0Pmfe/mXxqbe5NHq+A+
9N04Dr0itLViFOm/Ll2z3PlNnHjLGVX7J856MobFFffcWPMajYCvrJV76gXi
2FDG8VcE6k/fLsvC1yqoF0xPog3Gngvx44L4Pl2GratA3Byjq2gVjMuRjlo+
Db5WcWTP+tfBDDGtPWv+SVnYHFXaqBC0YHsn/vygrDrOYtfRVsYo0u7Wc67p
9uaDd9ddd1Xa1jQdE78G6ivKNN8YeovNccyao5x3Doj5F9v3wrdAmxX77mK0
p1ZhbTE+NXnG5KRVtF8eWIyyRuaEMZ7JNd75zndW1hOlX5LmvwD0ya6//no3
xoIPKnOj/PUS0myXZmsV5MMb3vCGynHYWffee2/mvTpaqyizTVc6Wisd9XzT
dt8wxpK1y7G+VxZF62+D78baPDbGLohLaJgPNnVqGo1oFdQh9huxLX3sm80a
N8iiEa3CYpWktQd56xNsdY7DdzN2Pr6paRTpMzU7r0xbyLuemsVDJNaR4cdA
s7kqtda7yNuWo1VzXDjv0PKQMfpaUO6Zd2HnHHHEEZXfsrQKfGVN6/v3v/+d
eQ/0SOJEmL+WPwZRa81S+w1bPkYZWkWtclSPVpE3XoVB/Dp/LaasORrQqA2Z
9d5tzZrYvI08WsW+++7rjmH8Oa/uXqT/OmraOKdJXDfutqr9fcf0c/vHz0iv
X8rA8oDxWECXM60H/yb7BplPWQtfq/DfP1vM/wqfX/udsh/y17/+tZL3RlfR
KvDfIh3+mscxfK1i0tS1mccWgbmL7ZUPtu7BT37ykza/pfUfsuq4WLnwabZW
YXGVTK+1cZG0WGVoGjYPiv4Zvln4fZrmgR2VRpHYmqxRRQxu81ViY07x3/72
t2j8Up/2stPxO7G2s1bZN6RVtF8eWP+hiA0SYrFbbKN/nuUnjF+4+S3S/+O7
ILayH8corfwW1SryxqvwsfFKNtJVi47WKsps05WO1kpHPd80azjaHCYfvnH2
F5mDUU/9Dfj+WT+AeZK2TjL6DD6maDcWS5F+YRqNaBX+2HcYN62VtQrGyLP6
F0A/ivcSxogn35l7h66U5QtmfYbQ3yRGs/OKdQv4nTHOPH4V9l5pO/x1qoHz
TQNkTCmLPG05PhN+2xbbfP+lWpjPIbq+kaVVWDwoNluHpRb0q+0ci0/TGbSK
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
uhLDhw9PevTokaxfv75l7jNjxgx37COPPNLUNHVGtmzZ4vJm8ODBHZ0UUYP2
+ra6Gh1ZxlX3iPZi7dq1Sf/+/ZNzzjnHlbkbbrih7mtNmTLFXYPy2540+gyx
b13ff2O0eh+hT58+ySWXXNKUa3eF91eLZuZfs+jsdV0zy9WGDRuShQsXun7i
5s2bG7oW53Mdrsd187Bx/Jhk+kt2c9vKXqe3+X37jvqE3xb84CtV+2e8+lnJ
3D0/WH9ap01Nlv/vePdvZ6Qj0482RXlkGz9+fJvf0ar47brrrmv3tDWLrqhV
0Fbffffd7d5vK4us9Ld6P0TsolW0iqVLl7ryxL+dAdkq3YNJkya5rbtyyy23
JKeeempy7733uvI2b968zOOzvuOO0iqKPkOItIryafU+QntrFZ2t/atFZ9Qq
Ontd16x6AT1h+fLlpV7TWLZsWS69wtcqZu3+imTbmtVVvzdLq1h7283uuvzb
GenI9Ptaxdlnn51s2rSp6veuqFXwTLRtzaaI3bZ9+3aXJv6th40bN7p7DRky
pK7zO5pa6Sdv5OPV+rTXt1WLadOmufLEv50B2Srdg8suu8xt3ZUzzzwzufnm
/P2crO+4o7SKos8Q0mpaRaN9j1ahlfsIzbS1Y++vs7V/teiMWkVnr+uaUS/w
feL/0Ey4fq16wLSKeV/8mPt3+UnHVf3eHbSKUJ/JQytoFb1793b/jho1qur3
rqRVhDpMs2nPMeZW0irq6TO0UvrFk+1Uo755HUln66tJq+gedGetYuvWra6c
3XHHHbnPabX+ez3PENJqWoVoPs2wtbP6s52t/atFZ9MqukJd1wyIK9Fse4jr
c58sTKtgPsP8r/1fMvP1z0+2Ll5U+b2IVrHk8IPcsVvmzEoWH3pAMuvtL3fH
zdvrU8mGcaMrx3Ev8+Xwt0UH7rfrvju+6RWnn5TM3eO97hoz3/SiZOGPv55s
nDShzTNs37A+WXrsUcmsd71mx7HPTuZ94aPJujv6J0uP/qO77raVKyrHzvn4
O5N5X/5ksmH0yGTBtz6fzHzDC5JZ73iV+43jlp14tDt/5ltf6u7L8ctPPjHZ
7tkAZacfFk55OJl3/+TMd2WYVoHv0VVXXZWcfvrpybp16yq/x7QKdCv2xXxZ
aWv5za9H77zzTreP+VsDBw50/hvch/lba9asccc88MADycUXX5yccsopyUUX
XZQ8+uij0fTSn7Z04l9FHTZ1avXcGe7D/dAKJk+enFx66aXuWHyyIE1D4DzS
f/7557t0kM5rr702mTVrVuWYxx9/3Gml5513njsG7ZTniGmFjc4Bsfrpscce
c++HdPXs2TO58MILXX4Zs2fPrvjG+Nu5555bOO8M8o33wDNecMEFydixY907
CetSe7f4XjE376yzznJ/mx/bhAkTkmuuucalhbTzL/U3eZ03/Wn9OOxp/Ous
3PAubrzxxuSJJ56oOs4vD+QptgLHM49w6NChhXQV2iDywsrUGWec4XS+iRMn
Vh1HzB/KCflhZXr06NFt7mX5R906YMCAyvFXXHGF+zYNvifux/PFGDlypLvO
okW76luee9CgQUmvXr1c3vO8Yd6DlTPeK3lE2eZ4eybyf9iwYe59kAaelzKJ
rsR56ExGrMznfUaD4/r16+fKKRt1D+Upr53HtxIrT7feemvlGNJHebK84dlI
Z5g3RY+NwTsfM2aMK6ennXaaeyb+m2sYjZZx6oQrr7yyah/ncc3rr7++av+I
ESPcfqt7w7rHvkfOj8F9KEt+WSY9CxYsKC0/irYxvAvOt7qbMkb95n+XVs6p
x/jueY8cSx+Y32LwXDfddFOlzJLP99xzT7TO4FjKLe0Gx1JeqBNXrlzpfo+V
SbY8/rB5y2DeNsOnSLtQb9rsnYWb37aG1PqO7VmnT5/u2hme0d5RM5611jPk
/VaLaBUd8f1D0XJUpI2AsuuLWP7V0+7PnTvX5SPPwHdMf5X2KBxHsbyN+etT
n/D8PjFbu0hfkv4D1yB9V199tcsDngPC95f13dRTt+dl5syZ7trjxo2L/s53
Rz1q1y7y/LH8oyxYn96HfCAdXN+HvhvliOtwP/pufBtFxvm7S10HjdokMYiD
2ewxMK7PfbLwtYoNY+92/73kL7+v/F6PVjHnY7s7mx99Yt2gAcmcT747mfmW
lyTbVj3Z/m+ZPTNZ3vNfT953x7/rRw1z2+ZHp1TuueC7X0qmv/xpyeKDf56s
uqRXsuKM/yVzPvI2p0VsnDC26r4L9/mWu9YTP/9Bsuqy85Nl//q70yDmfvZD
Ua2CuS6z3vayZOW5p7pnXjugn/tt0wOTklnvfHWy5M+HJisvOMttC3/6TXcN
0mGUnX44Y6/PJye+/92Z78rwtQrmU4X1fZlaBd8K16Euw4Y6+eSTk8svv9zF
yaC+wqcDO5D/5rcVK1ZUXdu+Z+pqrnHfffe5/2Yf369hbRT1CXb2Qw895J5z
zpw57veYPUV7RL3DfW+//XbXx6U+py6lbTfot6JfkBbseWxE2jTqAuxTn7K0
CuoD0kFdxzsiDey356EfQL3MPo6jnmDz7cC8eQf8zn7aW37jnZCPvKs0rYJ3
xrsnjdSn9szkKfUt16C8cLzZ7jZXoFb60/pxXJf9aCE8D++C9od34c8NtPJA
PqIxYKvQTzL7HtsjD3wLlmeUAcoH96U/w98G/TDrU1F2OIZyz3m8Ox/LP+p6
juWZyT/6YrTdfh8Pu4d2wdcSDXs2Y/Xq1S7vyQ/6kJRVrk+aeJf+nD4rZ3wv
PAftEH0iK8/0je3d8A7tOvT9imgVeZ6RdJlWctddd7l0o2/wjZG+PFoFtiG6
EPfkXytP1q+kbuLe/G7fOu+Qb5989POmyLFp0C+28++//373TOST3/dqtIyT
JvLMr3cpc6STd+X3PdGI+P6MWN3Du+K5Q8hDjqVM+VidnYc8+VG0jaGusu/t
wQcfdHlFueObMayc812wH12PPg3pYD/n+ZAv1h+kHFlZ5DnD75j6y/rb9r1R
r9D3tz4zZZBvj83KJFutOVNFymDeNsMo0i40kjb0GLNlsA/s2bO+n1rfsT0r
ecw74lloZyjbzXjWWs+Q91stolV01PdftBwVaSOg7PoiS6vI2+7TLpmWQXmj
LFM+rN9TtlZRpC/J++I3bH3KLu/C+mHh+6v13RSt2/OCrkbdGmujSVP4foo8
f6NaBeWfb4gyd9ttt7l3a/1a7pdHN+tOdR00apPECN+r8dAJJ1Q2Y+uO/Cqy
P899DF+rgIX7fjuZ8cpnJFtmPem3Uo9Wsfy/x1btNw1k1UXnVPZlzaFAI+C3
NTddU7UfrWP2e1+fzP/6npV964fe+aS+cuTB1fe8Z0TF3yHUKtx9+7eN77p9
x7vaHtGPlhzxu2T6S5/iNIqy02/Uq1UAbQ5tno0FlalV0M/zsTaItsG3beg/
hnUm/Ur2+Vq6QZppF+2e1kZRB9nYgU/MnkLPZV/Mx8qfrxXzuyOvqDepv2rd
J42seqFv375Vx6Ib0l9hDM/ImkNRJO+4Ds9C+4wObfAMtCNpWkWa72osv9B2
Q9sgK/2xfoiND4TzAamjKL9+e2nlgTwL3wXtF+1/HkzD8bUrwy8jvC/ar3Ds
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
02tjsXRJb6tqFUXyzp6x6ByQWH8K3zp+C2PVo4WxvxGtwuKLF5kD0qhWQd8I
/5CsOSD0E7le0TkgebUKoB+Efk27SDkI56WYTzzfYh6yypmNYVte+hSdA5Ln
GbviHJAY1tc1X8pGy7j/zNji5KvVq1buqLcoF6G/WdaapdRrvGf6mZwbmwNb
BmF+FG1jQuh3Mp7McTb3yMo5MdxCTKM1vcHmdWAT1qIV54DkaTOKtAtlpK0j
++9lPCukPUORbzWvVtGR33+RvC3aRpRBnvqzSLtfdA4I/aNYeeI7sHVQfEJb
u2hfsmytwu7TjLqd/gflD79Z6mH6TGHfuujzx7QK6pZYn910PF+rsPm7tfSI
LLpbXdcMraJWzMuyKBpb09i2fJlbZ3PeFz/WFK1i/Yi73LGrr2w7H2plr9Pd
b0uPOSKa5q1P7Ir/uv6ugU/G1vzzoVXHWDzPQlrFHu91vydeuUZvsPVEfK2i
rPQb9a5Z6kN9Y+sxhlqF1cdhfBWL29cMrcL82tkXs3l8zbaoVgGmRWatK2T1
azguZ3PAOlKr4J1YjOOQInlHn4J3G8bWpDxkxdaMXdf6MOEcctMwfK0iK/1Z
ccfCWD70y9JiazaqVVj/KGbr+FhszXB+rcU5y5t/aVqFjVvgx8d9Yu2hxWXG
jgqhbfX1o6xyZuUyjJ1qfp1laxWmh4V2s/U/8tp5prHGNDeLkRXOPWOMif2x
2Jp5jk0jFv/b6j7zi220jINprhar3C/T1BW2PywTWVqFfR9WdtPWd7P1f/KQ
Jz+KtDH8G1tjz8qMxXi3ck49Ha71gs8O7Z0/Tstx9E1ja7VznN3fYmuyZcXL
AHyqavnJhhQpg0XajCLtQhlpq6f/nvUdt/ezZj1DkW+1aGzNjvj+i+Rt0TYC
iqxZWm/9WbTdt9ia/lwA2krs4VCrsGcL40X7a6j5pGkVefuSRbWKrO8mzIMy
63YDnZi8NE0nfM6izx/TKtCs0R/8smWxMkOtAv849sVi44HqurY0Q6toxTVL
Q1ac+p+KvV+2VoEWwtwNfBlW974wWXPj1S4twLwT5p9wLdbMYL1PtxbpiUe7
WBILvvX5qmsv/PHXn5y7ccCPXEyJZf8+Jpn5xhfuWrN01S7tOEurYP0Sjmde
CXErVpx1skuf6TW+VlFm+qGRdUB8rC4LtQow7Q4bn3gv1OP09ahTmqFVgPU9
+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
16D8tieNPkPsW9f33xit3kfo06dPcskllzTl2l3h/dWimfnXLDp7XdfMcrVh
w4Zk4cKFrp+4efPmhq7F+VyH63HdPGwcPyaZ/pLd3Lay1+ltft++oz7htwU/
+ErV/hmvflYyd88P1p/WaVOT5f873v3bGenI9KNNUR7Zxo8f3+Z3tCp+u+66
69o9bc2iK2oVtNV33313u/fbyiIr/a3eDxG7aBWtYunSpa488W9nQLZK92DS
pElu667ccsstyamnnprce++9rrzNmzcv8/is77ijtIqizxAiraJ8Wr2P0N5a
RWdr/2rRGbWKzl7XNateQE9Yvnx5qdc0li1blkuv8LWKWbu/Itm2ZnXV783S
KtbedrO7Lv92Rjoy/b5WcfbZZyebNm2q+r0rahU8E21bsylit23fvt2liX/r
YePGje5eQ4YMqev8jqZW+skb+Xi1Pu31bdVi2rRprjzxb2dAtkr34LLLLnNb
d+XMM89Mbr45fz8n6zvuKK2i6DOEtJpW0Wjfo1Vo5T5CM23t2PvrbO1fLTqj
VtHZ67pm1At8n/g/NBOuX6seMK1i3hc/5v5dftJxVb93B60i1Gfy0ApaRe/e
vd2/o0aNqvq9K2kVoQ7TbNpzjLmVtIp6+gytlH7xZDvVqG9eR9LZ+mrSKroH
3Vmr2Lp1qytnd9xxR+5zWq3/Xs8zhLSaViGaTzNs7az+bGdr/2rR2bSKrlDX
NQPiSjTbHuL63CcL0yqYzzD/a/+XzHz985OtixdVfi+iVSw5/CB37JY5s5LF
hx6QzHr7y91x8/b6VLJh3OjKcdzLfDn8bdGB++26745vesXpJyVz93ivu8bM
N70oWfjjrycbJ01o8wzbN6xPlh57VDLrXa/Zceyzk3lf+Giy7o7+ydKj/+iu
u23lisqxcz7+zmTelz+ZbBg9Mlnwrc8nM9/wgmTWO17lfuO4ZSce7c6f+daX
uvty/PKTT0y2ezZA2emHhVMeTubdPznzXRmmVeB7dNVVVyWnn356sm7dusrv
Ma0C3Yp9MV9W2lp+8+vRO++80+1j/tbAgQOd/wb3Yf7WmjVr3DEPPPBAcvHF
FyennHJKctFFFyWPPvpoNL30py2d+FdRh02dWj13hvtwP7SCyZMnJ5deeqk7
Fp8sSNMQOI/0n3/++S4dpPPaa69NZs2aVTnm8ccfd1rpeeed545BO+U5Ylph
o3NArH567LHH3PshXT179kwuvPBCl1/G7NmzK74x/nbuuecWzjuDfOM98IwX
XHBBMnbsWPdOwrrU3i2+V8zNO+uss9zf5sc2YcKE5JprrnFpIe38S/1NXudN
f1o/Dnsa/zorN7yLG2+8MXniiSeqjvPLA3mKrcDxzCMcOnRoIV2FNoi8sDJ1
xhlnOJ1v4sSJVccR84dyQn5YmR49enSbe1n+UbcOGDCgcvwVV1zhvk2D74n7
8XwxRo4c6a6zaNGu+pbnHjRoUNKrVy+X9zxvmPdg5Yz3Sh5Rtjnenon8HzZs
mHsfpIHnpUyiK3EeOpMRK/N5n9HguH79+rlyykbdQ3nKa+fxrcTK06233lo5
hvRRnixveDbSGeZN0WNj8M7H/D975wFmSVG2bVFBQUABCQKKgAiIKEkkfBgI
fmTEBIICJiQofpIM5CQ55wxLWGDJOcMCS0YWWDIb2AhsXtgc6ueu/d+hpqa6
T/c5febM7Dz3dZ1rdvv06a6urvQ+9dZbTz3ly+lpp53mn4l/cw2j0TJOm3D1
1Ve3O8bvuGafPn3aHe/bt68/bm1v3PZYfeT3KbgPZSksy6Rn5MiRleVH2T6G
d8Hvre2mjNG+hfXSyjntGPWe98i5jIH5LgXPdfPNN7eVWfK5X79+yTaDcym3
9BucS3mhTZwwYYL/PlUm+RTxhy1aBov2GSFl+oV602bvLP6EfWtMrXpszzpw
4EDfz/CM9o6a8ay1nqFoXS2jVbSi/kPZclSmj4Cq24tU/tXT7w8bNsznI89A
PWa8Sn8Uz6NY3qb89WlPeP6QlK1dZizJ+IFrkL7evXv7POA5IH5/efWmnra9
KIMHD/bXfvbZZ5PfU+9oR+3aZZ4/lX+UBRvTh5APpIPrhzB2oxxxHe7H2I26
UWaev6e0ddCoTZKCOJjNngPj+twnj1CrmPr0E/7fow/+S9v39WgVQ9dbxdv8
6BOT77/LDf3+6m7wiou52RPn9v8z3x3sxp18zNz7fvx3yuOP+M+MN19ru+fI
n27mBn75M+6DvXdzEy89z40/4wQ3dJ2VvRYx7fmn29131K+389d6b7efu4mX
X+DGHvNvr0EM+8FaSa2CtS5DVl7CTTj3VP/MH911q/9u+ssvuiGrLuNGH7Sv
m3DhWf4zaudt/TVIh1F1+uGMLX7kjl5z9dx3ZYRaBeup4va+Sq2CusJ1aMuw
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
8vTXQ6xVALaU9XNVahWxlmf9aTivatC2he2m+RjmfVjrAdZHZc15xvYUY4Gw
n8/D1tzTNsX3j+NDVKVV2Pg5hPdB22vk2fpl8s764NT+SvhBZGkVWWMR3jFp
RXON7xmOIcpqFeYHk9INzJfO5j3Ddasx2BdZ46wYdAr6vDysbmT5XqCBh+Xa
8i/1HJwbj53Cfgj4ncV0MKw8532oX0YYryKGfCYdKaydKKpVFHlGxh9ZmiHz
a1VoFeRXqNWE2ByazYWXOTcLyiFjHM7lGXhe6nn4u0bLODCWQ08DbBPGnsC8
LP6fYL5s4fvJiq1pMUOs3bY8jddKlKVIfpTtY5grZLzJccoI7QhtT0gYryKV
prAvMt+JvI+N9e3cVDsdU49WUaYMlukzyvQLVaStWeP3eF16s5417xnK1NWi
WkUr63+ZclS2jyhLve1nmX7f2puU3tiseBVlxpJoFVntRlmtAprVtgPPSvrt
/Zj/JG10SJnnb1Sr4Flr1X/WzebR09q6RtuFFLU0hKqoR6vAjkZbGPXLrerT
KqZ1XOPjtYog9mSurb/8wj4mJWnL+sz5/+1oPVoFsTVTTDj75La4Fx/dcr1f
R8K9JvW6eK5WcdknGlxV6a+HlFZBnaXvwe+urFaR0iWybBXTKlLXwZYKY0VZ
v41fIWlOfWwdf14fBbE9Zc+Tdb7BM9GGMgZgfIrvI+0w96YttVhHWffJI69d
SGmgvI+wPc+z9cvkXb1aRWo8xXXR7xk/4adhMSjseNjPtFqrKBLfrhVaRRgP
EvB7Cp/FykgYG9DSwJgu632Hc3V55awztIrwGedFrQLII/KZ9a2sN+V31Aub
y6nCVqHuYK/jZ4CPpvljYn+Tz1yHe4ZxTSBLqzD7nTXilh7yo4rYWLXyo2wf
A4x9eVbaFYvxy/UNK+evvvpqh2tavJxYq8DXKKsOmZ3TFbWKIn1GmX6hirQ1
a/zeWc+a9wxdQauosv6XzdtmahVQT/tZpt8vq1VYnU9pFegKtbSKsmNJi62Z
oh6topltu623sLJjMR1Cn7eyz5/SKkhvSqtI2fWcy++z6j6fcM1zip7W1jXa
LqToyloFjDn0AH98yqMPNkeruOvW7DUUP1zb2/tF7HniYHo/hSEd30PWGpAs
rWLYBt/ycUBjPryuV0etoqL010NKqwDT361NC7UKi5OTatetzlatVeAjkWVD
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
pWnqylrFKaec4tNmH/5/4YUXugcffLDl9mJ31irGjBnjnnjiCf9XpJFWIYQQ
QgghhOgpzJw509vb2LkxzzzzjNcpUrrBnDlz3Omnn+4uueSSytNURquYNWuW
/3QW5NW5557rnnvuOf/Bvr7qqqt8esmLzkxLTL15wbukHPC3Vbz11ls+D/kr
0kirEEIIIYQQQvQkrrnmmqTvRJ8+fdz111/vzjvvvA5+FyNHjvQ20v33319Z
OrCXZ8+eXUqr6GzQKi6//PIOx8kr0vz666/n/j7lnyKkVRRBWoUQQgghhBCi
J/H44497e2fgwIFtx8xv4sknn3R33HFHB78LfC5S6wZGjx7tbrnlFnfWWWd5
u/7iiy/210CDCLnvvvv878eOHetuv/12fz7/Zw1AllZh97z33nvbfABS6x64
J8dZw4LWctppp/lnIV0ffvhhh+efOHGiu/XWW/05fG644QafDjSJWJfI0ipe
fPFFn7annnrK/591Mba2pn///u6yyy5zp556qrvtttvafvPee++5m2++uS2v
LrroItevX78OeWXnksazzz7bn4t+RL5NmDCh7ZxUXvC7m266yfuCmE8IefLu
u++2nZO1BgT794EHHvD3Qsvit7y3eM2Pva+3337b+5lccMEF/nye5+WXX+7w
LDH8JlxXYx/KXdm0lD03BfnPe8RPxsoO/+YaRvh+ee4rrrjCv1+enfcNlDXe
95lnnumvwfuaNm1au3tRXyjPdi8+vMeU5iWtQgghhBBCCNGTwG6NY1aY38Sw
YcO87RX7XZgfQWgjYRebbde3b1/3wgsveLuf87DJQ0yrOP/8871dSdwMtBKu
l9IqiAfBMezakCyt4pxzzvG2KhoCmgU2M+nq3bt3u3OnTp3q08DzPfTQQ/5Z
77rrLq8J8PuiWsXDDz/s08f9wGxZrkE8iwEDBrgRI0a4oUOH+u95NtMn0HLs
vieddFKHvHrnnXf8udi8jzzyiD8XTePqq6/232XlxaRJk9wZZ5zh7/H000+7
V155xes9aB7PPvts23kprYJ3jf3M8bvvvtv997//9TY16cMeJ98Me18cRw/i
XQ4fPtw/B8ftmbNAbyEPOJe/lEc+FruiTFrKnJuFvUt+/9JLL/n8pm6EeWvv
lzxHa+J78hZNiuPkNfdDq2Ct0J133umP845D+I7rUl+4D+/JrhHrPNIqhBBC
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
rz9lypSmXL8zue+++/yzkGedxUcffeRuv/12d8455/h733jjjZ1273oZNGiQ
T+sbb7zR6qR0O1577TWfd+Rhd6cV9aWZXH755f5TNW+99ZbPJ/4KIYQoxtSp
U92oUaP8+HLGjBkNXYvfcx2ux3WLMO25p7wdzmfCead3+H7Ox30f3438+f+2
Oz5omc/540PX/UbmtYf/aJ22a8+ZViw9jdATtQp0KvrerE89Y9iurFWMGTPG
PfHEE/6v6L70xPdYRR3CriLfUjZJV9Uq7LmLfmgHWmF73Xbbbe7UU091zzzz
jG83hw8f3mn3ziOvrkirqB9pFV0XaRVCCNE1QE8YN25cU649duzYQnpFqFUM
WWVJN/vDSe2+z9MqBi3zef/d1Ccf63Dd6QNe8t/ZOZ2hVcyZPt1/Kmf27Lnp
74L+KqZVXHXVVe7JJ5/s8KnXFmTME/rndBWtQmONeYOe+B6rqEN5dYX62hVt
lTlz5nRol2655Rb/HDfddFOH72bNmtUS2+vMM8/06epq5NUV8pY84q8oh7SK
rou0CiGEaD2MK/F/aCZcv9Z6ENMqhm+6nv877vjD232fp1WM2HoT9+4ay7sP
/vK7Dtcd8+//c4NXXMyN+sWWnaZV9ERMq8CGaSbSKuY9sG8a9eWql574Hput
VXQnXnnlFf8cL774YvL7zra90Ee43z333NMp9ytDT6wrnYG0iq6LtAohhGg9
xJVotq8u1+c+eZhWMe6EI9yIrf7HDV5+YTfrg/fbvs/VKrb9oRt7zL/9b+ZM
/uiT33xs/+CjMfqgfd17u+7QQauY/voAN/r/9nRD11/NDVruC27Qsgv59Rsf
3nxdu3vMGjXCDfnGl93Q76/u5kyZ3O679/f6rRu4+HxuykP3th1LrQEZ+r1V
/fEZb73udRPSyjXH/HM/n078MMYe+Q/37reWm/tMH+cB6QtJrQEZ+OXPtPmj
xB+euV0e93/BvffbHd2QlZdwg5ZewA1dbxU37sSj/P1TjHrtVTf8pf7J72LK
aBXPP/+8u+6669y5557rTj75ZP+XsTnrtEPKrgHB//iaa65xp59+uveh7tWr
l3v99dc7nIc90LdvX39fzrviiiv8mKGo/YUfdMpn/I477mg7hzJPGs8777y2
Z2QcFz9jHqTz6aefdpdddplP5xlnnOGuvPJK99///rfdecSIYR72rLPOcqec
coq7+OKL/bxwrA/aOJK6eNddd7Wdjy8M78+Y/nFZ5H7MNad47LHH/HXef/+T
+slz3X///W3Py1r71Du1cTn5zVqB888/359vz8T7feSRR9reDc/79ttvZ76b
ovdN0RnvkfRS1ngO5svt/fTr169wPB/Oe+qpp9wll1ziTjvtNF+++TfpCEHz
Yd0A33Ef7sc7fO+999qdl6pD6MlZNjvn8d30/+8rdu211ybz7aWXXvLfZ60B
qbqcVkFRrcLKwdlnn10zLUXboRjL5/gzZMiQUu8HyFvuy++uv/76tnJD/n/4
4YcdrlGrralVV7LWgBStP9YuUNe51wUXXODPv+iii9zLL79cM+/CawwcONDX
A65hbciwYcP8OaynofySH7QV3CvmnXfe8flE22T1iJgh8ZwO1+E78i5m8ODB
Pi30dUXTzX1pF+y+l156qf8uRb1lDMgb7pfydeSe5JfBe+Jc6jRpwW4nbeTd
ww8/nFl3J02a1FZ3SV/v3r07tENQtHyUSTOULf8cI0YM5Z7z+A3tVZZWUSb/
aWOsTaZM0pa/+eab0iqEEKIgxMFs9pwm1+c+eYRaxdSnn/D/Hn3wX9q+r6VV
zHjnLf/9pKsva/vuo9tv8semvfh8UqsgLsawjb7txh71Tzfxigvd+DNPdMM2
XrPDdWDyfXd6TeKDv/y+7dik3lf6c8ceflC7c7O0iqFrr+SGrLqM++Cvf/D3
HrXztv73Y/79d68hjPjJhj4NaBasWRm6zsoMIj9JQ0KrmPLwff54+Bl9wN5z
r/vP/T4576F7fV4R12P8Kcf65/1g3z3cwCU+7e+d4owtfuSOXnP15HcxplUw
PmE9UfiJxwaMRxjjMjZm7M3YxGyXcD6mjFZhY2nGRM8++6x74YUX/L9T48Vb
b73VH7/55pv9/bElGXMwTi+iVUyYMMHbWJzL33fffdd/bByFzcDYhO/vvvtu
P96/99573UknneTHKkXWRDEGtPQzbmKsxjNxHf5vMP6zcRjPwTk33HBD2/OF
2DiS8T/n8s4Y15NWxtzhczNuY+w4eXJ7bQ54BvLKYFzKO2Wch87Qv3//tjy9
8MIL2z2vjcsZm/Ic2CbYEYwLAdua7xlThu+G8WL8bsrct1XvET2HcT3llXfD
B7uHa9555501fw/YBJYG9ACeE9uBMXoIdYrz0AG5D5oSecNYOox50KhWwTPZ
2gnsK8s3q+cpraJZ5bRRimoVV199ta+P1EMrY6m0lGmHYmgrzcbt06dPW75a
LKmyWgXljnrGb/g9Nj/pJj0hRdqaWnUlpVWUqT/WLnCcsoU+Q5mlbHB86NCh
uXkXXgO7kfuSTt4H74myh11IfUD3fO6557ytyfmUgRDuyXPzW+oa9QiNinpk
7RQMGDDA/z5loxJzhD6tSBth6aaNo8yT/5Qd6ncqfY2UMahHq7A2Hxt75MiR
bXo12kqI1ReehXaId27vgLIX5l+Z8lGPVlG0/JMO+gv6O8oG79x0FvqXWKso
k/98x3HmQyhzjHm4l/Vn0iqEEKI2Yd8RMuCoo9o+xqyP+44yx4vcxwi1Chi1
y/Zu0FLzu5lD5vpF1tIqAF8E1oMYaAHD/uc7/t8prWL2Rx31dfwb+M27a63Y
4Ts0Ba7x4U29vTaCbwS6ROyXkKVVeA3k2ivan/vjdb0GMnLHLdrFoZhw4Vn+
fDQSo0hszekvv+h9RIZvtn7bs875eDw9ZLWvuOE/XLvDGpgJ557qrzml70Md
rlWPVpH6MM5vl8ZELA/Ge/G4rKhWge3EsXieGbB9GZ/YPRkDp3ysGXdbehtd
A/L4448nxy2MgTj+0EMd8zqGMRDnYhfFhGvCmdtjbBfPWZndGqbPxpGkLwSb
gOOMqwyzPeJnwGbgOOkzsC3I4zjmDWNa0hbeLxyXx2vbzU7DTyJ1z/jdlLlv
Fs1+j8y5pvwn7F1gA9aCcTu2ax5WfuM4B7S7jMHD8XajWgXk+SCltIpmldNG
KapVxLqSlZswLWXaoSzs3cTtUz1ahflkhJjeEPbHRduavLqS0irK1B9rFygn
IcxzoC+gL9fCroH9G2re6KEcp/yFmgd1E1s0tnNT74h6it6BTW1wD2zwUDsG
bGx0CvTeIli6SUton5sNzT3seaooY/VoFbyD2E8KLQJ7PsTqC+1VWHYob+Q/
+qRRpnzUo1UULf+WDrSnENMkwrazTP7zl/+TvrA8ko/km7QKIYQoRpYfa9Va
RS3f3VirYP0Dc/7v77mr/38RrQJfCM6ZMfBtN+v9UW7Qkp9t21MkpVXEYNPz
PX4WnDtrdHtfEHQMtIXBX1vU+2Pw17SUkCytgrUXLrLPTP+YfE/7cY3FBA33
RKmlVfDMxO1499tf9f9u+90Dd/vf4UvB84Uf1rd435CPn7kRTKtgzpjxavjB
jsrC4vDRrzOWCe3UolqF2UaMY/g+/JgGYmuBbVyfiiXLfFwVWgXzT4wvYxuV
sRvjUXx8a8E8DOOcvHW/jHlIQ2qtBnnBd8wPGTaOJN5tiK2RD9fvWFrjMSBj
dd6T+ejae8PmjPOeD+M0/OUNG5czxxRj72b8+PEdvuMa4bspe98smv0eY8hr
0oefQGzbZcFYmfnBcM1NjOVdys+aOd5QF+lsraKZ5bRRimoVsV8gNnScljLt
UBZVahWU0RjTA8PyXqStgbJaRZn6Y+0CdmoM9bhIzAC7RqxlkS82tx2DDwV2
eBak1eosmjs6SAjvn3YoXOOK7Z2yk2ulO7UehXaS72gvoIoyVo9WkdJd0Lbi
NsDqS6rPp/6TV1ZOy5SPerSKouWfdNC+xpDOWOctk/+2zsPWxoXYdaRVCCFE
bbqqVgF+jcLi87npr/QvpFXgJ4FPwdhjD3HjzzrJ+2WY3pDSKog9Me64Q+f6
PCTiPsx4580O6UQHQQPx/hU3XN3he8iMV/HjdTucO+7kY/y1pr/W3s9z5ohh
c/Pj4/QZeVrFnKlT3PBNv+efH9+KEPOdyPuEa1vqoUy8Cnz+mV9hjBj7YIRj
oqJaha0byPvYnAlaCnNeKbCXqtAqGPdn2cnMRfG7WvHyuQbaSR5mv2TNh/Kc
+DkbeXHPODeeOw7HZcDvSFc4N4ZtXCvvmRs0wngVMWXeTdn7ZtHs9wiMVXmX
+JDHaUzZZjHYPIzpOR8fC94TNmF4b1tXknq3NpdotlNnaxXNLqeNUFSrSM1V
x2kp0w5lUaVWkWo/rJ0O7acibQ2U1SrK1J8w1kQM7U3KlowJ4z7EYCOn9lYh
n+N6bHFSsHXj9xfbv6a1hToDtm+RtidOd2otieWr6S9VlLF641XEEHeB70Jt
2epLKp6PaRvm01CmfNQbryImVf7xl+F+KWhvQ62iTP5bmlN7Dlu7I61CCCFq
U3Wssnrvk9IqZg4f6rWIUb/cqpBWAegb+BYQBzOMw5DSKkbttI3XKMYecbD3
ayBOBumweA/EwYyZcMGZbfb9mMMOTD5LXmzNGNMq4nuZVoHuYmRqFR/35+//
fiev63x0Z8fx2IRzTmnz0eD5Up8ZgzqO78pQVKvgPOYqmONi/SjzLxyz48wB
t+VBQa3C7DT8e+1a8cfiLkiryLYBw5iSwJgyHKfamDqM92ZpwGbLyvtwrj8v
5n2Zd1P2vlk0+z3aeBU7CVvEyihj5TwbOYbnJu9Yz82adn5LHbJYQ83UKlL2
eiu1iricNkIj+4DEaSnTDmVRj1aRej/dVatItQtoFak58pi8a6BVhH2LYVqF
ze2Th9yL+BSsjWEeHluTfCOPiIEQg78FPgA8i70n6lxRymgVVZQxW/OTsvsp
N2W1itBHsVlaRZk027FmaBVl8l9ahRBCVENX1ipgzKEHzI2n8OiDhbSKqU8+
1qYlTL73k3FkrFXM+uD9ufE7D9i7Q1rwMUjpBz4WxMf3G7nDpsn9P4zO1irI
M46PP+OEDtf3v7v7trnfn3Js8vsqKKpVsMYjNZYhTiLH69EqWNeaNSaI6U5r
QPA7yfPLZm0zaSjrW1/GBmQMyJwmacdmiH3FSQN2QNZYLybPnrB3k4rhEK8B
KXvfLJr9HvEZj/3GweLyFdUqYmzsbn4Zph3UuwaE7ziG/RFjdkNoC1udK6JV
dEY5rZcqtYoy7VAWWVpF2fdTxlYr0tZAZ6wBabVWQfqzdAN8JVJahZUhdA3K
C/dK7TVRK91F1oBUUcaYI0hdgzywfVOMerWK1BoQ1tvUuwakTJqhTPkvswak
TP5rDYgQQlRDrZiXnXWfLK1i9rixbvAKX3TDN12vkFYB40/7jxt30tHeF8Po
oFWMGT137cPf/tTutzMGD/TrKGL9gL1QfcyJVZZ0s94b6debsOfnkG8u7WZ9
0N4+6Eytgv1V/XPss3uHa7elfeoUv//I4BUXczOHdlxDy1qY2ZM67inbjD1L
zR6Nx3KmYdSjVdh6AOa3UuPt8F4WW5P56ZCs+I1Z2HVS++lZrK543bTNpZeJ
rUm89TwsZmEcywB/g3gsVI8NaHHMsa25T2xDgcXqJ4ZdDOPOUJfKsyfM3on3
eLGYivG7KXPfLJr9HvFPZtwc+l+w/t3iwBfRKlJ7CbCOit8TVx4stmYcgxAt
oEhsTRvzx7ENLU5pbAtb3qRii+TF1qy6nJKvtD319mNVahVl2qEssrSKsu+n
jK1WtK3Jqyt5sTWL1J+uplW8+uqr7c6zWAQprYJ3htaDFsdf5t7LEMbWDNs3
fKbwoeKa5j9VRRmz9jSOXWvloAqtIs4D2iHeQRiHtEz5KJNmKFP+bU+T+J2z
xwnHw7azTP5TH/HZQAspEluz0bZMCCHmVbrinqUx4089rs1XoohWkSK1BoQ9
Q4jfyd6oxOUkNgT2vN+bI9IPLHbG5Ps/mf+b1v8FN2jpBdzIn/2kXczMztIq
Zg571+9til6C70S8d+m0l/7b9tspjz7gBn1lQTf4q4u4Mf/6m5t4+QU+pgfP
RYzQKY8/0iFt9ewDUkursPEuNhxjFPYpYyzK/xmL16NVgPm5M/fFeIaxCGMN
xo/YaiFm4+KXH+5zWXTPUrBY78yZcw3Gm+Y7xBjF4pAzFuYZbb6t6F6X2LO2
px75w5iM66DppPYsZTxre0ESg53fZe0FWUarYFxF/pE//BYbOYbxGc9lsS5t
b07KAnNj4Xxhnj0BlnZsbtsvMGvP0jL3zaLZ79HG44zdKZP4BXMvxtZFtAqz
UakX6BLY1tgIzAPy3kM7wfbUoHyQD9ybecsie5aCzRmSVuIDko+UK/M3Cm1h
YgKYrwRpIt9Mt8jbs7Tqckp5SNkqRalSq4Ay7VCKLK0CyryfMrZa0bYmr65k
7VlatP50Fa0C/33qDB/eJfmErk0+2z6YKUyDr2euPNwbiXvQRuBPYf1RPC/f
aBkDfGksljX3Ik4UbSbtShVaRbhnKWnDNqf+h+PAsu1r0TRDmfJPG8L9iu5Z
Wib/Lc4qaeffeXuWNtqWCSHEvApxpOK9qKqG64dxslPkaRXM+7PnZtVaBXtl
vP/n33xs6y/lbX729GQ/0glnn9xOP/iwzzVz41Mcsn+H604477S56yvOPLHt
WGdpFdP++1xuvEyeOWT6G6/Ofd7Vl/VxR3nu4Vts4H1Q8F+JaYZWAYzNGIdh
Q7EumHEBY0TGMvVqFYCfLGNrxpmMqRnDMM6N7RDG5oy9GIdwHuMIxgx5a/BT
MNeGxsI1+F1ot1DmSSNpYPzCvRjzFpnrD5+VcRG2AfcwuyR+HsZ/2Hv23IzT
+F3sW1uvb71pO4znsmBc+cgjj/h7W1rJG/I0XGNcS6tA13z44Ye9TRC+G7Mp
eHf13DePZr5H3gHjWfKO6/MXDcXqSxG/Cmx71sAwdrZyTRrj+Tfm5UwLsbzA
ro3XhWTVIY5jB9h9uCf+GqnYjYCORFpsXt/G/ymtAppRTruaVgFF26EUeVpF
mfdTxlazaxdpa7LqSkqrgKL1p6toFUDMid69e3uNlA/vkjpEXcrSKijb5neR
2qO4SLrR/2gbsL9NE4rn+o1Gyhiwpojnoc/lGamXjNHqia2Z0ipY04nPlGml
5Cc+QDFl2teiaYay5Z/0Uj7Cd077iqaQ2oOmTP5zL6tXtP/km60PkVYhhBC1
oV+lb24m9FFF4uULIUQK5n2z7AQhhGgl7K+bZdMLIYQQojGYm4z3sq8K5jaL
zlMLIXo2qflrmwurcq9KIYSoiryYzUIIIYRoHPQK/CvwyWs0fgW/x6cffwrp
FEKIorCeg3W/rO3FP5/1IPgQ45MuO0AI0VXAJ5X1G6ydiffbFkIIIUT10Pey
/o+1l6zVy9o/Ou/D7/g919G6DyFEGdjTgxjrrMln/E88E2yAorEnhBCiM7D4
AsRPQF9tdtwvIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEM2hX79+bsMN
N3QLL7ywW3XVVV2vXr1anSQhhBBCCCGEEEL0UEaPHu0WX3xx16dPHzdz5kz3
9NNPuyWWWML/FUIIIYQQQgghhOhsbr/9dved73yn3bH99tvPHXnkkS1KkRBC
CCGEEEKIeYXJkye7o48+2v34xz92119/fauTI7oJ+E8suuiibsyYMW3Hdt99
d3f22We3MFWiWfz2t791W221lbvjjjtanRQhhBBCCCFED2C77bbzcQbmzJnT
6qSIbsYf/vAHH6cCH4u+ffu69ddf33344YetTpZoEh988IHbcccdpVcIIYQQ
Qgghmgq2x7bbbtvqZIhuypVXXulWWWUVt9RSS7lPfepT7pxzzml1kkSTGTdu
nPfBEkIIIYQQQohm0b9/f/fnP/+55nm33nqrt0WzPrfcckvDaZk9e7Y799xz
3TrrrOO+8IUvuEUWWcRtscUWfr4+i7Fjx7p///vfbrXVVnOf//zn3Ze+9CXv
J/Lcc89l/uaee+5x22yzjY8DucACC7hvfvOb7oQTTnBTpkxJnj9+/Hh38MEH
u5VXXtl97nOf83Y5/vCDBw/ucC4xJvPyyT477LBD6fyphxkzZrgnnnjC7bHH
Hm7++ecv9K6ZM2dvj4UWWsh9+ctf9s86YsSIDuedf/75buONN/b5w3NfccUV
fk0Ix0X91PPOOpsNNtig1UkQQgghhBBCzMO8+OKLhWwh5s+xsX/5y1+6v/3t
bx0+L7/8ckPpmDhxovvRj37k77H55pu7ww47zO25555ee/jMZz6T1ELQI9AN
+B594vDDD/e/QeOYb7753DXXXNPhN7/73e/8Pb72ta/5dKNzbLTRRv7YWmut
1UGvGDBggPvqV7/qNYpdd93Vp+tXv/qVvyd2/KBBg9qdj96Syh/7/PCHP/T3
6ix7Hs0n1EhqvevLL7/cn/etb33LHXHEEW7ffff1+5Eut9xyHfSKlVZayT36
6KPtjl1yySVuhRVWqPoxehRl31kr+P73v9/qJAghhBBCCCHmYYpqFWeddZa3
m/DDaAbMI2MTX3311e2ODx061OsVaAtxPA1s53XXXde98MIL7Y6/8847fn5/
ySWX9PP9If/617/cAQcc4KZPn97uODY5z3fmmWe2O37SSSe5ZZdd1udTCPEZ
OB+fg6IQx2HFFVfsNJ8KQK+56qqr3Omnn17T7mU9EO8An4pp06a1HUcTwv9k
5513bnc++fvAAw+0O3bvvfd6/agVvPnmm+73v/+9++lPf+qmTp3akjRUQZl3
Vi+UX3yLuAf6WlmkVQghhBBCCCGaSVGt4phjjvF2E9pBs2A9Rwr2weTer732
WofvsuKB4vvAb7Bfi5zPtTn/17/+deF0sV9nGbuc50BDGTlyZOHfVAXrVWrZ
vaeccoo/B90oBg0AX5LRo0e3HTvkkEN8HlCGsHfRiFgb8Ne//rUpz5DHrFmz
vG4Va0rdmSLvrBHIM7Q4/GfKIq1CCCGEEEII0UyKahUHHnigt5s++uijTkhV
e7CnuPdTTz1V+Df4APAbfAWK8MYbb/jz99lnn8L32Hrrrf3akCKwluSzn/2s
O/nkkwtfv0qK2L1bbrml115Ses5tt93mf3/ddde1HcNn5bjjjvOxNYltgc8I
+kXok9FZvPXWW4V9XIhTctBBB/l/v/322z4uBGtceD+s6+FddQWarVUAesUP
fvCD0r+TViGEEEIIIYRoJkW1ij/96U9tdjm2LPElOmuPU/bFJP7E+++/X+j8
gQMH+pgVZWwwNArswocffrjwb4i1ucYaaxQ6lzgf6ABZ8TtjxowZk/t96N9Q
hCJ2L+tssvZ3sN8feeSRpe7bWRQtx4BWsffee7uHHnrI+7kstthifj3ETjvt
5HWXKrSWKupGZ2gVUI/uIK1CCCGEEEII0UyK2nisqVhwwQXdT37yE69ZYEMR
2+BnP/uZ90loFuyP+MUvftFtuummueexNuWZZ57x8/zYomgI7777bub5xI5g
fchNN93k/SM+/elPe/+NoqBpkAdHH310zXOxObn+oYceWujaw4cPd9/73veS
+4zApZde6n7zm98UTquloZbdi28E9jq88sorbplllvG+FtjdkydP9r8nrkdX
pKxWsckmm3iNgt9QFqrmjDPO8J9GkFYhhBBCCCGE6Kk8//zzhexPYlLiH4+9
zZ6WxP/74x//6GMYEPsyjgtRFcx/41PRr1+/3PNMP+HDXhtZMSaM448/vu18
4kZee+21hdNEXM7vfve73k9iwoQJNc/HF4H7sN6gKOyrktIr0CmIHRnHBq1F
EbsXPcXWUZx66qlt+cM6GuJR8G98XLoiZbUKnoUYHM2CtRW77LJLh1itZZBW
IYQQQgghhOipYKOfdtpphc6dMWNGh2O9evXy9lS8R0QVsE8p1yYmZS3uuusu
n5aDDz7Yff3rX3eLL76495nIgnUifM/cN7Y/djp/x48fX/Ne7D1Kum6++eZC
z0G8yW984xuFzg2J9Yp6dQooYveyVyb+M0D8h9VWW63tvRKnhN//5S9/KX3v
zoC9SoqmDa1i6aWXdpMmTWpqmtAriNXKHjr10FlaBeWzLPil4GsjhBBCCCGE
EFXCmvz777/fbbbZZjV9EGqB3cenStiHFNsZO6qsbc75O+64o5t//vkL7wvx
+OOPe98M4krkceGFF3r7cf/99y90XeJTkI7f/e53hc6PMb3iP//5T906BRSx
e1daaaXMGB/s8cHv2Q+mq0FZRqe47777Cp2PVsGeIZ0BegV6z9lnn136t52l
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
IYQQQgghhBBCCCGEEEIIIYQQQgghhPiEfv36uQ033NAtvPDCbtVVV3W9evVq
dZKEEEIIIYQQQgjRQxk9erRbfPHFXZ8+fdzMmTPd008/7ZZYYgn/VwghhBBC
CCGEEKKzuf322913vvOddsf2228/d+SRR7YoRUIIIYQQQgghhOjJ4D+x6KKL
ujFjxrQd23333d3ZZ5/dwlQJIYQQQgghhBCiJ/OHP/zBx6nAx6Jv375u/fXX
dx9++GGrkyWEEEIIIYQQQogeypVXXulWWWUVt9RSS7lPfepT7pxzzml1koQQ
QgghhBBCtIgDDjjALbLIIu6WW25pdVJED+X88893G2+8sRs/fryPrXnFFVf4
NSEcn9eosr594Qtf8LqOfchDIYQQQgghhOgMzjvvPO8T3yyIaYid87e//a2S
640bN87ttddefn58wQUXdBtttJF78MEHG74u6QvtsvDD/hGN8Oijj7qf/OQn
7ktf+pJP8yabbOIee+yx5LkDBw706xWWW2459/nPf96tttpq7tBDD3UTJ07s
cO7s2bPdZZdd5jbYYANvVy655JL+PtyvkXRgw2flhX0uv/zyhvIkBTrC888/
74455hi3/PLLuxVWWCH3/FdffdVts8023jb/4he/6H72s5+5QYMGdThvpZVW
6pAnl1xySc3rd0eK1rci9f7GG290vXv39h/yUFqFEEIIIYQQorPAJsQ2bBbP
PPOM329h1KhRDV9r2rRpbt1113WLLbaYO/744/38+Kabbuo++9nPNqxX7Lbb
bm6ZZZbx8RbjzzvvvFP3dU8++WQ333zzuS233NJddNFF7vTTT3frrLOOtydv
vvnmdue+8MILbqGFFnJf//rX/TtBh9h3333dAgss4NZee203Y8aMdufvtNNO
/to777yzt73POOMMt+aaa/pj119/fd3pGDBgQDIf+KCLLL300m7kyJF150kW
DzzwQDs9JE9LeOutt3w5WGONNdwFF1zg13SsvPLK7itf+UqHtKHhcO2Qe++9
1+tdVYPe0q9fv8qvW5Si9a1svafedRetYsKECa5///6tToYQQgghhBCiAT73
uc81VauokjPPPNPb20899VTbsVmzZnkbiriJjbD99tt7H42qufDCC90pp5zS
7tj06dN9etdaa612x3kWNJg45iO6Arb7bbfd1u44+sx9993X7hi/xScDbaPe
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
SZIkSZIkSZIkSZIkabD+AXRt8wo=
      "], {{0, 417}, {1067, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{365.4666666666633, Automatic},
    ImageSizeRaw->{1067, 417},
    PlotRange->{{0, 1067}, {0, 417}}], ";"}]}]], "Input",
 CellChangeTimes->{{3.835731204014729*^9, 3.835731239313732*^9}, {
   3.8357313307494907`*^9, 3.835731337678431*^9}, 3.8357314010276623`*^9, 
   3.83573161438871*^9, {3.8357316457351637`*^9, 3.8357317482279463`*^9}, {
   3.835731819423854*^9, 3.835731819642088*^9}, {3.835731873802947*^9, 
   3.835731874241192*^9}, 3.835731911630464*^9, {3.835732050750784*^9, 
   3.835732125069566*^9}, {3.835732197544395*^9, 3.835732218162986*^9}, {
   3.835732328794058*^9, 3.835732354158601*^9}, {3.835732429434926*^9, 
   3.835732485448241*^9}, {3.835732677124516*^9, 3.835732726717814*^9}, {
   3.835732974851969*^9, 3.835732975002356*^9}, {3.835733813406351*^9, 
   3.835733824138135*^9}, {3.8357483130281887`*^9, 3.8357483149616613`*^9}, {
   3.835817762330295*^9, 3.83581779889575*^9}, {3.835818322258939*^9, 
   3.8358183232929792`*^9}, 3.835820807416415*^9, 3.835821478203231*^9, {
   3.8358215303771563`*^9, 3.8358215447347727`*^9}, {3.835832314856015*^9, 
   3.83583231786871*^9}, {3.83583498670467*^9, 3.8358349894041367`*^9}, 
   3.835836224904766*^9, {3.835838249932722*^9, 3.8358382829028788`*^9}, {
   3.835838585724386*^9, 3.8358386284913816`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"066d442d-bf3c-4b19-90ef-942379c6bd8c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"stability", " ", "of", " ", 
     RowBox[{"deg", ".", " ", "int", ".", " ", "sqz", "."}]}], ",", " ", 
    RowBox[{"looks", " ", "stable", " ", "for", " ", "all", " ", "\[Chi]"}], 
    ",", " ", 
    RowBox[{"even", " ", "passed", " ", "threshold"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "\[Chi]", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"denom", "[", 
      RowBox[{"Tla_", ",", "Tlaq_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"\[Kappa]aq", "[", "Tlaq", "]"}], "+", "\[Chi]", "-", 
      RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
      FractionBox[
       SuperscriptBox["ws", "2"], 
       RowBox[{
        RowBox[{"\[Kappa]a", "[", "Tla", "]"}], "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stabilityIntSqz", "[", 
     RowBox[{"Tla_", ",", "Tlaq_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sol", "=", 
       RowBox[{"NSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"denom", "[", 
           RowBox[{"Tla", ",", "Tlaq"}], "]"}], "\[Equal]", "0"}], ",", 
         "\[CapitalOmega]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Im", "[", 
                RowBox[{"\[CapitalOmega]", "/.", 
                 RowBox[{"sol", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"\[Chi]", "\[Rule]", 
                 RowBox[{"ratio", " ", "\[Kappa]aqout"}]}], "}"}]}], ")"}], 
             "/", "\[Kappa]aqout"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "sol", "]"}]}], "}"}]}], "]"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"ratio", ",", "0", ",", "2"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{",", "Dashed", ",", "DotDashed"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"50", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<Im[\[CapitalOmega]]/\[Kappa]aqout\>\"", ","}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             ",", "\"\<poles of transfer function\\nunstable when Im[\
\[CapitalOmega]]\[GreaterEqual]0\>\""}], "}"}]}], "}"}]}], ",", 
         RowBox[{"GridLines", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"1", ",", "Red"}], "}"}], "}"}], ",", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Re", "[", 
                RowBox[{"\[CapitalOmega]", "/.", 
                 RowBox[{"sol", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"\[Chi]", "\[Rule]", 
                 RowBox[{"ratio", " ", "\[Kappa]aqout"}]}], "}"}]}], ")"}], 
             "/", "\[Kappa]aqout"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "sol", "]"}]}], "}"}]}], "]"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"ratio", ",", "0", ",", "2"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{",", "Dashed", ",", "DotDashed"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"50", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"All", ",", "1"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<Re[\[CapitalOmega]]/\[Kappa]aqout\>\"", ","}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\!\(\*FractionBox[\(\[Chi]\), \(\[Kappa]aqout\)]\)\>\"", 
              ","}], "}"}]}], "}"}]}], ",", 
         RowBox[{"GridLines", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"1", ",", "Red"}], "}"}], "}"}], ",", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2"}], "}"}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"stabilityIntSqz", "[", 
    RowBox[{"0", ",", "0"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"RegionPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Im", "[", 
                 RowBox[{"\[CapitalOmega]", "/.", 
                  RowBox[{"sol", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{"\[Chi]", "\[Rule]", 
                  RowBox[{"ratio", " ", "\[Kappa]aqout"}]}], "}"}]}], ")"}], 
              "/", "\[Kappa]aqout"}], ">", "0"}], ")"}], "/.", 
           RowBox[{"{", 
            RowBox[{"ratio", "\[Rule]", "ratio0"}], "}"}]}], ")"}], 
         "\[Equal]", "True"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "imPoles", "]"}]}], "}"}]}], "]"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"ratio0", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<is deg. int. sqz. unstable?\\ncolour-in if true\\n(this plot \
should be blank)\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<(non-axis)\>\"", ","}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<\[Chi]/kout\>\"", ","}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{"stabilityIntSqz", "[", 
       RowBox[{"Tla", ",", "Tlaq"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Tla", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Tlaq", ",", "0", ",", "1"}], "}"}]}], "]"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.835907129235997*^9, 3.835907163713623*^9}, {
  3.835907206581633*^9, 3.835907263656395*^9}, {3.8359072998822403`*^9, 
  3.8359073128969603`*^9}, {3.8359117024072*^9, 3.835911704564066*^9}, {
  3.836248067260544*^9, 3.836248084854229*^9}, {3.836248183241066*^9, 
  3.836248183872196*^9}, {3.836249081811996*^9, 3.8362491303313103`*^9}, {
  3.836249558267275*^9, 3.836249652004941*^9}, {3.836249692387677*^9, 
  3.836249751318397*^9}, {3.836249808512434*^9, 3.8362498615790777`*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"81b5a0df-5919-496b-83f4-49da62b081a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "comparing", " ", "shot", " ", "noise", " ", "DC", " ", "to", " ", 
      "degenerate", " ", "OPO", " ", "variance", " ", "in", " ", "limit", " ",
       "of", " ", "arm", " ", "cavity", " ", "loss"}], " ", "\[Rule]", " ", 
     "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{
    "does", " ", "the", " ", "three", " ", "mirror", " ", "system", " ", 
     "reduce", " ", "to", " ", "a", " ", "two", " ", "mirror", " ", "system", 
     " ", "of", " ", "the", " ", "SRM", " ", "and", " ", 
     RowBox[{"ITM", "?"}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"from", " ", 
     RowBox[{"OPO", " ", ".", "nb"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "lossy", " ", "degenerate", " ", "OPO", " ", "at", " ", "either", " ", 
      "\[Theta]b"}], "=", "0"}], ",", 
    RowBox[{"\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{"see", " ", 
       RowBox[{"that", " ", ".", "nb"}], " ", "for", " ", "general", " ", 
       "angle", " ", "covariance", " ", "matrix"}], ")"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"degenVforSRC", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "g_", ",", 
      RowBox[{"Tloss_:", "0"}], ",", 
      RowBox[{"Rpd_:", "0"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
        "looking", " ", "at", " ", "formal", " ", "limit", " ", "of", " ", 
         "Tla"}], "\[Rule]", "1"}], ",", " ", 
       RowBox[{"noise", " ", "in", " ", "the", " ", 
        OverscriptBox["a", "^"], " ", "mode", " ", "also", " ", "shuts", " ", 
        
        RowBox[{"off", "\[IndentingNewLine]", "--"}], " ", "the", " ", 
        "equivalent", " ", "of", " ", "making", " ", "Titm", " ", "perfect"}],
        ",", " ", 
       RowBox[{"not", " ", "a", " ", "vacuum", " ", 
        RowBox[{"port", "\[IndentingNewLine]", "--"}], " ", "why", " ", 
        RowBox[{"isn", "'"}], "t", " ", "power", " ", "still", " ", "lost", 
        " ", "through", " ", 
        RowBox[{"Titm", "?"}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"koutOPO", "=", "kout"}], ";", 
      RowBox[{"(*", 
       RowBox[{"uses", " ", "Tse", " ", "and", " ", "Lse"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"kinOPO", "=", "0"}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"-", "1"}], 
          RowBox[{"2", " ", "\[Tau]RoundTripSE"}]], 
         RowBox[{"Log", "[", 
          RowBox[{"1", "-", "Titm"}], "]"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"klossOPO", "=", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "1"}], 
         RowBox[{"2", " ", "\[Tau]RoundTripSE"}]], 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "Tloss"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ktotOPO", "=", 
       RowBox[{"koutOPO", "+", "kinOPO", "+", "klossOPO"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"4", " ", "koutOPO", " ", "g", 
         RowBox[{"(", 
          RowBox[{"1", "-", "Rpd"}], ")"}]}], 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"g", "-", "ktotOPO"}], ")"}], "2"]}]]}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "100"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"armLossList", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "-", "\[Epsilon]"}], ",", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[Epsilon]", "10"]}], ",", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[Epsilon]", "100"]}], ",", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[Epsilon]", "1000"]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dIStodOPO", "[", "\[Chi]Ratio0_", "]"}], ":=", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"10", 
            RowBox[{"Log10", "[", "1", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"10", 
            RowBox[{"Log10", "[", 
             RowBox[{"degenVforSRC", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
               RowBox[{
                RowBox[{"-", "\[Chi]Ratio0"}], " ", "kout"}]}], "]"}], 
             "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{"RIntExtSqz", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", "0", ",", "0", ",",
                "0", ",", "0", ",", "0", ",", "0"}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{"RIntExtSqz", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", "0", ",", "0.8", 
               ",", "0", ",", "0", ",", "0", ",", "0"}], "]"}], "]"}]}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"20", 
            RowBox[{"Log10", "[", 
             RowBox[{"RIntExtSqz", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", "0", ",", 
               RowBox[{"armLossList", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "0", ",", "0", 
               ",", "0"}], "]"}], "]"}]}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "armLossList", "]"}]}], "}"}]}], "]"}]}], 
        "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"f", ",", "10", ",", 
        SuperscriptBox["10", "7"]}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
            "\"\<vacuum\>\"", ",", "\[IndentingNewLine]", 
             "\"\<10Log10[degenVforSRC[2\[Pi] f,-\[Chi]Ratio0 kout]]\>\"", 
             ",", "\[IndentingNewLine]", 
             "\"\<\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=0\>\"", ",", 
             "\[IndentingNewLine]", 
             "\"\<\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=0.8\>\""}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"StringForm", "[", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(log\), \
\(10\)]\)(1-\!\(\*SubscriptBox[\(T\), \(l, a\)]\))=``\>\"", ",", 
               RowBox[{"Log10", "[", 
                RowBox[{"1", "-", 
                 RowBox[{"armLossList", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"armLossList", "-", "1"}], "]"}]}], "}"}]}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", "10", "]"}]}], ",", 
         RowBox[{"LegendLabel", "\[Rule]", 
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<\[Epsilon]=``, \[Chi]/kout=``\>\"", ",", 
            RowBox[{"ScientificForm", "[", 
             RowBox[{"N", "[", "\[Epsilon]", "]"}], "]"}], ",", 
            "\[Chi]Ratio0"}], "]"}]}]}], "]"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "Dashed", ",", "Dashed", ",", ",", ",", ",", ",", ",", ",", ","}], 
        "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{
          "\"\<(dashed) variance / dB (10\!\(\*SubscriptBox[\(log\), \
\(10\)]\))\\n(solid) shot noise transfer function\\n|R| / dB \
(20\!\(\*SubscriptBox[\(log\), \(10\)]\))\>\"", ","}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \[Pi]\
\)]\) / (log scale)\>\"", ",", 
           "\"\<deg. int. sqz. reducing to degenerate OPO\\nsqueezed \
quadrature\\nusing parameters of reduced two-mirror system (SRM and \
ITM)\\nbut with \!\(\*SubscriptBox[\(T\), \(ITM\)]\)=0 as entire \
\!\(\*OverscriptBox[\(a\), \(^\)]\) mode vanishes (this is confusing)\>\""}], 
          "}"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<variance DC=`` dB, shot noise DC=`` dB\>\"", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"NumberForm", "[", 
       RowBox[{"10", 
        RowBox[{"Log10", "[", 
         RowBox[{"degenVforSRC", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", "\[Chi]Ratio0"}], " ", "kout"}]}], "]"}], "]"}]}], 
       "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"NumberForm", "[", 
       RowBox[{"20", 
        RowBox[{"Log10", "[", 
         RowBox[{"RIntExtSqz", "[", 
          RowBox[{"0", ",", 
           RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", "0", ",", 
           RowBox[{"1", "-", 
            SuperscriptBox["\[Epsilon]", "1000"]}], ",", "0", ",", "0", ",", 
           "0", ",", "0"}], "]"}], "]"}]}], "]"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"dIStodOPO", "[", "0.95", "]"}], "\[IndentingNewLine]", 
   RowBox[{"dIStodOPO", "[", "1", "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"lossless", " ", "except", " ", "for", " ", "arms"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.835918925242923*^9, 3.835918936889638*^9}, {
   3.8359189731073227`*^9, 3.8359189979512777`*^9}, {3.8359190550793667`*^9, 
   3.835919075435026*^9}, {3.835919123217176*^9, 3.835919128776133*^9}, {
   3.8359192380448923`*^9, 3.83591926371459*^9}, {3.835919299858807*^9, 
   3.83591932999671*^9}, {3.835919383765891*^9, 3.835919394316208*^9}, {
   3.835919446785564*^9, 3.835919479248214*^9}, {3.835919512234002*^9, 
   3.8359195286474257`*^9}, {3.83592026399232*^9, 3.835920298628364*^9}, {
   3.8359205891934633`*^9, 3.835920611852207*^9}, {3.835920718857235*^9, 
   3.8359208074910183`*^9}, {3.8359209843187237`*^9, 3.83592100772864*^9}, {
   3.835921148519147*^9, 3.8359212124514112`*^9}, 3.835921270370215*^9, {
   3.835921319549947*^9, 3.8359213684001713`*^9}, {3.835921426708989*^9, 
   3.835921434213406*^9}, {3.835921640141265*^9, 3.835921677604437*^9}, {
   3.835921811438552*^9, 3.835921934126554*^9}, {3.8359220039035587`*^9, 
   3.835922012702909*^9}, {3.835922084636529*^9, 3.835922113048852*^9}, {
   3.835922158388204*^9, 3.835922208497426*^9}, {3.835922268738345*^9, 
   3.835922342416321*^9}, {3.835922392522085*^9, 3.8359224627583923`*^9}, {
   3.835922922027041*^9, 3.835922941233639*^9}, {3.835923035547208*^9, 
   3.83592305587503*^9}, {3.8359234323287687`*^9, 3.835923460471836*^9}, {
   3.8359235489554987`*^9, 3.835923567283463*^9}, {3.8359881818385983`*^9, 
   3.835988226996415*^9}, {3.8359883024539127`*^9, 3.8359883097644253`*^9}, {
   3.835990674953974*^9, 3.8359907674216623`*^9}, {3.835990924537266*^9, 
   3.8359913622417297`*^9}, {3.835991446205247*^9, 3.835991696790949*^9}, {
   3.835991853305797*^9, 3.835991925239595*^9}, {3.8359993834657097`*^9, 
   3.8359993839041*^9}, {3.83600140882579*^9, 3.836001414372847*^9}, {
   3.836180152212467*^9, 3.836180162005851*^9}, {3.837132206959078*^9, 
   3.837132216972403*^9}, 3.837132252260009*^9, {3.838322421289486*^9, 
   3.838322439189561*^9}, {3.838322523262636*^9, 3.8383225492775097`*^9}, {
   3.8383225799911222`*^9, 3.838322659420309*^9}, {3.838322699944483*^9, 
   3.838322813764772*^9}, {3.8383228582125177`*^9, 3.838322865487755*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"c721de5e-36b2-49f6-8b5e-92136d05a131"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "split", " ", "the", " ", "noise", " ", "budget", "\[IndentingNewLine]", 
     "Xpd"}], " ", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "Rpd"}], ")"}], 
       RowBox[{"1", "/", "2"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"T", " ", "h"}], " ", "+", " ", 
        RowBox[{"Rla", " ", "Xla"}], " ", "+", " ", 
        RowBox[{"Rlaq", " ", "Xlaq"}], " ", "+", " ", 
        RowBox[{"Rin", " ", "Xin"}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["Rpd", 
       RowBox[{"1", "/", "2"}]], " ", "Xlpd"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"let", " ", 
     RowBox[{"Internal", "/", "External"}], " ", "Squeezing", " ", "be", " ", 
     "IESqz"}], ",", " ", 
    RowBox[{
    "these", " ", "are", " ", "Abs", " ", "of", " ", "fns", " ", "above"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"RinIESqz", "[", 
     RowBox[{
     "\[CapitalOmega]_", ",", "\[Chi]_", ",", "gExt_", ",", "Tla_", ",", 
      "Tlaq_", ",", "Rpd_", ",", "Rinj_", ",", "TlExt_"}], "]"}], ":=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "Rpd"}], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     SuperscriptBox[
      RowBox[{"VExt", "[", 
       RowBox[{"\[CapitalOmega]", ",", "gExt", ",", "Rinj", ",", "TlExt"}], 
       "]"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"Abs", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"2", "\[Kappa]aqout"}], "-", 
        RowBox[{"\[Kappa]aq", "[", "Tlaq", "]"}], "-", "\[Chi]", "+", 
        RowBox[{"I", " ", "\[CapitalOmega]"}], "-", 
        FractionBox[
         SuperscriptBox["ws", "2"], 
         RowBox[{
          RowBox[{"\[Kappa]a", "[", "Tla", "]"}], "-", 
          RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}], 
       RowBox[{
        RowBox[{"\[Kappa]aq", "[", "Tlaq", "]"}], "+", "\[Chi]", "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
        FractionBox[
         SuperscriptBox["ws", "2"], 
         RowBox[{
          RowBox[{"\[Kappa]a", "[", "Tla", "]"}], "-", 
          RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RlaIESqz", "[", 
     RowBox[{
     "\[CapitalOmega]_", ",", "\[Chi]_", ",", "gExt_", ",", "Tla_", ",", 
      "Tlaq_", ",", "Rpd_", ",", "Rinj_", ",", "TlExt_"}], "]"}], ":=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "Rpd"}], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"Abs", "[", 
      FractionBox[
       RowBox[{"2", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Kappa]aqout", " ", 
           RowBox[{"\[Kappa]a", "[", "Tla", "]"}]}], ")"}], 
         RowBox[{"1", "/", "2"}]], "ws"}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]aq", "[", "Tlaq", "]"}], "+", "\[Chi]", "-", 
           RowBox[{"I", " ", "\[CapitalOmega]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]a", "[", "Tla", "]"}], "-", 
           RowBox[{"I", " ", "\[CapitalOmega]"}]}], ")"}]}], "+", 
        SuperscriptBox["ws", "2"]}]], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RlaqIESqz", "[", 
     RowBox[{
     "\[CapitalOmega]_", ",", "\[Chi]_", ",", "gExt_", ",", "Tla_", ",", 
      "Tlaq_", ",", "Rpd_", ",", "Rinj_", ",", "TlExt_"}], "]"}], ":=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "Rpd"}], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"Abs", "[", 
      FractionBox[
       RowBox[{"2", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Kappa]aqout", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Kappa]aq", "[", "Tlaq", "]"}], "-", "\[Kappa]aqout"}],
             ")"}]}], ")"}], 
         RowBox[{"1", "/", "2"}]]}], 
       RowBox[{
        RowBox[{"\[Kappa]aq", "[", "Tlaq", "]"}], "+", "\[Chi]", "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
        FractionBox[
         SuperscriptBox["ws", "2"], 
         RowBox[{
          RowBox[{"\[Kappa]a", "[", "Tla", "]"}], "-", 
          RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RlpdExtSqz", "[", 
     RowBox[{
     "\[CapitalOmega]_", ",", "\[Chi]_", ",", "gExt_", ",", "Tla_", ",", 
      "Tlaq_", ",", "Rpd_", ",", "Rinj_", ",", "TlExt_"}], "]"}], ":=", 
    SuperscriptBox["Rpd", 
     RowBox[{"1", "/", "2"}]]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"RIntExtSqz", "=", 
     RowBox[{
     "sum", " ", "of", " ", "above", " ", "four", " ", "in", " ", 
      "quadrature"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"https", ":"}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
         "questions"}], "/", "10833"}], "/", "how"}], "-", "do", "-", "i", 
      "-", "convert", "-", "an", "-", "argument", "-", "list", "-", "to", "-",
       "a", "-", "sequence", "-", "of", "-", 
      RowBox[{
       RowBox[{"arguments", "\[IndentingNewLine]", "@@", " ", "is"}], " ", 
       "infix", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}]}]}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noiseBudgetIESqz", "[", "params_", "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"20", 
         RowBox[{"Log10", "[", "1", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"20", 
         RowBox[{"Log10", "[", 
          RowBox[{"RinIESqz", "@@", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
            "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"20", 
         RowBox[{"Log10", "[", 
          RowBox[{"RlaIESqz", "@@", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
            "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"20", 
         RowBox[{"Log10", "[", 
          RowBox[{"RlaqIESqz", "@@", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
            "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"20", 
         RowBox[{"Log10", "[", 
          RowBox[{"RlpdExtSqz", "@@", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
            "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"20", 
         RowBox[{"Log10", "[", 
          RowBox[{"RIntExtSqz", "@@", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
            "]"}]}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", "10", ",", 
        SuperscriptBox["10", "5"]}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<vacuum\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[\(R\), \(in\)]\), behind SRM\>\"", ",", 
           
           "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(R\), \((L)\)], \(a\)]\), \
arm intra-cav.\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(R\), \((L)\)], \(aq\)]\), \
SRC intra-cav.\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(R\), \((L)\)], \(PD\)]\), \
PD loss\>\"", ",", "\"\<total shot noise\>\""}], "}"}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", "10", "]"}]}], ",", 
         RowBox[{"LegendLabel", "\[Rule]", 
          RowBox[{"labeller", "[", "params", "]"}]}]}], "]"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Directive", "[", 
          RowBox[{"Gray", ",", "Dashed"}], "]"}], ",", ",", ",", ",", ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "Dashed"}], "]"}]}], "}"}]}], ",", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<shot noise transfer function,\\n|R| / dB (20log10)\>\"", ","}],
           "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \[Pi]\
\)]\) / Hz\>\"", ",", 
           "\"\<degenerate internal squeezing\\nno radiation pressure effects\
\\nparameters of benchmark 3rd gen. detector\>\""}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.836004907688905*^9, 3.836004928472711*^9}, {
   3.836004975270904*^9, 3.836005154163018*^9}, {3.836005594966873*^9, 
   3.836005649260113*^9}, {3.836005680956114*^9, 3.836005712779912*^9}, {
   3.836005769974051*^9, 3.836005855380151*^9}, {3.83600590186987*^9, 
   3.836005905410492*^9}, 3.8360059405722723`*^9, 3.8360085727732763`*^9, {
   3.836009902526225*^9, 3.836009915770287*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"39c12dfe-25d6-4c57-aef5-a1ded8147a28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"understanding", " ", 
    SubscriptBox["T", 
     RowBox[{"l", ",", "a"}]], " ", "and", " ", 
    SubscriptBox["T", 
     RowBox[{"l", ",", "aq"}]], " ", "behaviour"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Chi]Ratio0", "=", "0.85"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"noiseBudgetIESqz", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", "0", ",", "0.9", ",", "0", 
      ",", "0", ",", "0", ",", "0"}], "}"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"noiseBudgetIESqz", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", "0", ",", 
      RowBox[{"1", "-", 
       SuperscriptBox["10", 
        RowBox[{"-", "1000"}]]}], ",", "0", ",", "0", ",", "0", ",", "0"}], 
     "}"}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"noiseBudgetIESqz", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", "0", ",", "0", ",", "0.1", 
      ",", "0", ",", "0", ",", "0"}], "}"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"noiseBudgetIESqz", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", "0", ",", "0", ",", "0.8", 
      ",", "0", ",", "0", ",", "0"}], "}"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"noiseBudgetIESqz", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Chi]Ratio0", " ", "kout"}], ",", "0", ",", "0", ",", 
      RowBox[{"1", "-", 
       SuperscriptBox["10", 
        RowBox[{"-", "1000"}]]}], ",", "0", ",", "0", ",", "0"}], "}"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.836007669572487*^9, 3.83600767000002*^9}, {
  3.836007703399295*^9, 3.836007793925312*^9}, {3.836008103027875*^9, 
  3.836008116442552*^9}, {3.836008187725696*^9, 3.836008231009058*^9}, {
  3.836008316671569*^9, 3.836008323026321*^9}, {3.836008375437117*^9, 
  3.836008377001916*^9}, {3.836008418574709*^9, 3.836008426323167*^9}, {
  3.836008747713772*^9, 3.836008748203615*^9}, {3.836248695111216*^9, 
  3.836248709861558*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"19801278-93e8-4152-97e8-24abeee95c42"]
},
WindowSize->{1853, 1025},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 408, 8, 90, "Text",ExpressionUUID->"060c7526-d348-4ff3-a3e4-38abb3b1effa"],
Cell[969, 30, 295, 6, 54, "Text",ExpressionUUID->"3cfabacb-7484-4ef0-a878-2530fc4e29b0"],
Cell[1267, 38, 9085, 227, 1211, "Input",ExpressionUUID->"a3b2b86d-0ec0-49d0-9ace-ed0bf55edb0e"],
Cell[10355, 267, 6666, 159, 2027, "Input",ExpressionUUID->"bd23a451-cc39-4c20-8e6f-bca201441b13"],
Cell[17024, 428, 13450, 335, 4212, "Input",ExpressionUUID->"dc3b2be4-a545-4473-a626-60c529d53abf"],
Cell[30477, 765, 20204, 471, 4335, "Input",ExpressionUUID->"737363c0-73e8-4b0a-a889-8811f5bc3aea"],
Cell[50684, 1238, 3938, 90, 1102, "Input",ExpressionUUID->"b2f309c3-9795-419e-8ec4-5a78804103c3"],
Cell[54625, 1330, 5561, 122, 2043, "Input",ExpressionUUID->"083bb4dc-efb5-454c-bd7e-5e3cfe4d61b6"],
Cell[60189, 1454, 74060, 1274, 3273, "Input",ExpressionUUID->"d0d0e2fd-f5bc-439a-8e94-481a54534f11"],
Cell[134252, 2730, 112614, 2161, 11702, "Input",ExpressionUUID->"fd583cc5-b91d-45fb-883c-72687b8a7ca5"],
Cell[246869, 4893, 6116, 150, 1545, "Input",ExpressionUUID->"611c8b54-86fd-4918-b9b7-180b1cf7c050"],
Cell[252988, 5045, 6695, 177, 2661, "Input",ExpressionUUID->"3d75b660-7b02-48a9-93f1-f089b2def791"],
Cell[259686, 5224, 63996, 1113, 2981, "Input",ExpressionUUID->"bc23707d-ef93-4040-bfe9-74265c1e8568"],
Cell[323685, 6339, 84427, 1424, 1424, "Input",ExpressionUUID->"066d442d-bf3c-4b19-90ef-942379c6bd8c"],
Cell[408115, 7765, 8244, 213, 1912, "Input",ExpressionUUID->"81b5a0df-5919-496b-83f4-49da62b081a9"],
Cell[416362, 7980, 12531, 280, 3982, "Input",ExpressionUUID->"c721de5e-36b2-49f6-8b5e-92136d05a131"],
Cell[428896, 8262, 9745, 257, 2686, "Input",ExpressionUUID->"39c12dfe-25d6-4c57-aef5-a1ded8147a28"],
Cell[438644, 8521, 2176, 51, 668, "Input",ExpressionUUID->"19801278-93e8-4152-97e8-24abeee95c42"]
}
]
*)

