(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    531018,      10629]
NotebookOptionsPosition[    526402,      10548]
NotebookOutlinePosition[    526770,      10564]
CellTagsIndexPosition[    526727,      10561]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
James Gardner
Working from Yap thesis, 2020
Deriving eq. 7.12 from eq. 7.8 and eq. 7.17 from 7.16.\
\>", "Text",
 CellChangeTimes->{{3.8226797038197737`*^9, 3.822679706522724*^9}, {
  3.822679745530943*^9, 3.8226798004321527`*^9}, {3.822684345497816*^9, 
  3.822684368206997*^9}},ExpressionUUID->"a05200c5-c521-4b6e-b424-\
86e07dabe570"],

Cell[TextData[{
 "Watch out, Yap thesis uses ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["X", "2"], "=", 
    RowBox[{"-", 
     RowBox[{"i", "(", 
      RowBox[{"a", "+", 
       RowBox[{"a", "\[ConjugateTranspose]"}]}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"271c34ff-0824-4cdc-8ba3-3846c0f32ff6"],
 " which gives a different sign in the 2nd and 4th rows of \[CapitalGamma]"
}], "Text",
 CellChangeTimes->{{3.834451710671981*^9, 
  3.834451785840048*^9}},ExpressionUUID->"ca20a264-25e2-4796-9056-\
19bee610b50e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "I", " ", "is", " ", "reserved", " ", "for", " ", "\[ImaginaryI]"}], ",", 
    " ", 
    RowBox[{
    "be", " ", "careful", " ", "not", " ", "to", " ", "confuse", " ", "I", 
     " ", "and", " ", 
     RowBox[{"Id", "!"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Id", "=", 
     RowBox[{"IdentityMatrix", "[", "4", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"eq", ".", " ", "7.6"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M", "=", 
     RowBox[{"\[Kappa]a", 
      RowBox[{"(", GridBox[{
         {
          RowBox[{"-", "1"}], "0", "0", 
          RowBox[{"x", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Theta]b"}]]}]},
         {"0", 
          RowBox[{"-", "1"}], 
          RowBox[{"x", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Theta]b"}]]}], "0"},
         {"0", 
          RowBox[{"x", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Theta]b"}]]}], 
          RowBox[{"-", "1"}], "0"},
         {
          RowBox[{"x", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Theta]b"}]]}], "0", "0", 
          
          RowBox[{"-", "1"}]}
        }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"eq", " ", "7.11"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalGamma]", "=", 
     RowBox[{"(", GridBox[{
        {"1", "1", "0", "0"},
        {
         RowBox[{"-", "\[ImaginaryI]"}], "\[ImaginaryI]", "0", "0"},
        {"0", "0", "1", "1"},
        {"0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "\[ImaginaryI]"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Xfin", "=", 
     RowBox[{"(", GridBox[{
        {"Xfins1"},
        {"Xfins2"},
        {"Xfini1"},
        {"Xfini2"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Xlin", "=", 
     RowBox[{"(", GridBox[{
        {"Xlins1"},
        {"Xlins2"},
        {"Xlini1"},
        {"Xlini2"}
       }], ")"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8225998302323427`*^9, 3.822599840400818*^9}, {
  3.822599884048806*^9, 3.822599959576777*^9}, {3.8226001256082478`*^9, 
  3.822600249764122*^9}, {3.822683060551339*^9, 3.822683081260954*^9}, {
  3.8226842348802567`*^9, 3.822684250189427*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"42d83666-4f6c-4e2b-990a-a38e3d9a22ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"eqs", ".", " ", "7.9"}], ",", " ", "7.10"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"T", " ", "=", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"2", "\[Kappa]af", " ", 
        RowBox[{"\[CapitalGamma]", ".", 
         RowBox[{"Inverse", "[", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "Id"}], "-", "M"}], 
          "]"}], ".", 
         RowBox[{"Inverse", "[", "\[CapitalGamma]", "]"}]}]}], "-", "Id"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tl", " ", "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"2", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}], ")"}], 
        RowBox[{"1", "/", "2"}]], 
       RowBox[{"\[CapitalGamma]", ".", " ", 
        RowBox[{"Inverse", "[", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "Id"}], "-", "M"}], 
         "]"}], ".", 
        RowBox[{"Inverse", "[", "\[CapitalGamma]", "]"}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.822680977897625*^9, 3.82268101078553*^9}, {
   3.822683043681621*^9, 3.822683053149667*^9}, 3.822683437488249*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"7b8d66d9-74b8-4ae3-8d54-04d1f52a2d1b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Xfout", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"T", ".", "Xfin"}], "+", 
     RowBox[{"Tl", ".", "Xlin"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Xfout", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8225999637524*^9, 3.8226000963480873`*^9}, {
   3.822600393237418*^9, 3.822600432692031*^9}, {3.822605096211028*^9, 
   3.82260510210367*^9}, {3.8226057543236113`*^9, 3.822605757603195*^9}, 
   3.82268097646586*^9, {3.822681014791987*^9, 3.822681020480567*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"ce9cfe77-5588-42f5-86fc-f43f3f3aae83"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "Xlins1", " ", 
          SqrtBox[
           RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]a", "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], ")"}]}], "+", 
         RowBox[{"Xfins1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Kappa]a", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["x", "2"]}], ")"}], " ", "\[Kappa]a"}], "+", 
               
               RowBox[{"2", " ", "\[Kappa]af"}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}], ")"}], " ", 
             "\[Omega]"}], "+", 
            SuperscriptBox["\[Omega]", "2"]}], ")"}]}], "+", 
         RowBox[{"2", " ", "x", " ", "\[Kappa]a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Xfini1", " ", "\[Kappa]af"}], "+", 
               RowBox[{"Xlini1", " ", 
                SqrtBox[
                 RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}]}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Xfini2", " ", "\[Kappa]af"}], "+", 
               RowBox[{"Xlini2", " ", 
                SqrtBox[
                 RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]b", "]"}]}]}], ")"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"]}], "-", 
         RowBox[{
         "2", " ", "\[ImaginaryI]", " ", "\[Kappa]a", " ", "\[Omega]"}], "+", 
         
         SuperscriptBox["\[Omega]", "2"]}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "Xlins2", " ", 
          SqrtBox[
           RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]a", "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], ")"}]}], "+", 
         RowBox[{"Xfins2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Kappa]a", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["x", "2"]}], ")"}], " ", "\[Kappa]a"}], "+", 
               
               RowBox[{"2", " ", "\[Kappa]af"}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}], ")"}], " ", 
             "\[Omega]"}], "+", 
            SuperscriptBox["\[Omega]", "2"]}], ")"}]}], "-", 
         RowBox[{"2", " ", "x", " ", "\[Kappa]a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Xfini2", " ", "\[Kappa]af"}], "+", 
            RowBox[{"Xlini2", " ", 
             SqrtBox[
              RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "+", 
         RowBox[{"2", " ", "x", " ", "\[Kappa]a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Xfini1", " ", "\[Kappa]af"}], "+", 
            RowBox[{"Xlini1", " ", 
             SqrtBox[
              RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]b", "]"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"]}], "-", 
         RowBox[{
         "2", " ", "\[ImaginaryI]", " ", "\[Kappa]a", " ", "\[Omega]"}], "+", 
         
         SuperscriptBox["\[Omega]", "2"]}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "Xlini1", " ", 
          SqrtBox[
           RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]a", "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], ")"}]}], "+", 
         RowBox[{"Xfini1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Kappa]a", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["x", "2"]}], ")"}], " ", "\[Kappa]a"}], "+", 
               
               RowBox[{"2", " ", "\[Kappa]af"}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}], ")"}], " ", 
             "\[Omega]"}], "+", 
            SuperscriptBox["\[Omega]", "2"]}], ")"}]}], "+", 
         RowBox[{"2", " ", "x", " ", "\[Kappa]a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Xfins1", " ", "\[Kappa]af"}], "+", 
               RowBox[{"Xlins1", " ", 
                SqrtBox[
                 RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}]}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Xfins2", " ", "\[Kappa]af"}], "+", 
               RowBox[{"Xlins2", " ", 
                SqrtBox[
                 RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]b", "]"}]}]}], ")"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"]}], "-", 
         RowBox[{
         "2", " ", "\[ImaginaryI]", " ", "\[Kappa]a", " ", "\[Omega]"}], "+", 
         
         SuperscriptBox["\[Omega]", "2"]}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "Xlini2", " ", 
          SqrtBox[
           RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]a", "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], ")"}]}], "+", 
         RowBox[{"Xfini2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Kappa]a", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["x", "2"]}], ")"}], " ", "\[Kappa]a"}], "+", 
               
               RowBox[{"2", " ", "\[Kappa]af"}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}], ")"}], " ", 
             "\[Omega]"}], "+", 
            SuperscriptBox["\[Omega]", "2"]}], ")"}]}], "-", 
         RowBox[{"2", " ", "x", " ", "\[Kappa]a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Xfins2", " ", "\[Kappa]af"}], "+", 
            RowBox[{"Xlins2", " ", 
             SqrtBox[
              RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "+", 
         RowBox[{"2", " ", "x", " ", "\[Kappa]a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Xfins1", " ", "\[Kappa]af"}], "+", 
            RowBox[{"Xlins1", " ", 
             SqrtBox[
              RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]b", "]"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"]}], "-", 
         RowBox[{
         "2", " ", "\[ImaginaryI]", " ", "\[Kappa]a", " ", "\[Omega]"}], "+", 
         
         SuperscriptBox["\[Omega]", "2"]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.835311761429265*^9},
 CellLabel->
  "Out[9]//MatrixForm=",ExpressionUUID->"2b2d854d-3a4e-4083-98a0-\
d852ddd8d8f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Xfout", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"\[Theta]b", "\[Rule]", "0"}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
    "Xlins1", ",", "Xlins2", ",", "Xlini1", ",", "Xlini2", ",", "Xfins1", ",",
      "Xfins2", ",", "Xfini1", ",", "Xfini2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.822600603323969*^9, 3.822600695815763*^9}, {
   3.822600745149304*^9, 3.822600753227276*^9}, {3.822601018707245*^9, 
   3.822601028253872*^9}, 3.8226051377176247`*^9, 3.82260598515656*^9, {
   3.822606022777628*^9, 3.8226060599038057`*^9}, {3.822606339434466*^9, 
   3.822606354442327*^9}, 3.822683603122847*^9, 3.835311313845462*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"b6612c5d-4f15-43b0-bd96-236375be9071"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
    "2", " ", "x", " ", "Xfini1", " ", "\[Kappa]a", " ", "\[Kappa]af"}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["x", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Kappa]a", "2"]}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Kappa]a", " ", "\[Omega]"}], 
     "+", 
     SuperscriptBox["\[Omega]", "2"]}]]}], "-", 
  FractionBox[
   RowBox[{"2", " ", "x", " ", "Xlini1", " ", "\[Kappa]a", " ", 
    SqrtBox[
     RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}], 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}], ")"}], " ", 
     SuperscriptBox["\[Kappa]a", "2"]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Kappa]a", " ", "\[Omega]"}], 
    "+", 
    SuperscriptBox["\[Omega]", "2"]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", "Xlins1", " ", 
    SqrtBox[
     RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]], " ", 
    RowBox[{"(", 
     RowBox[{"\[Kappa]a", "+", 
      RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], ")"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}], ")"}], " ", 
     SuperscriptBox["\[Kappa]a", "2"]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Kappa]a", " ", "\[Omega]"}], 
    "+", 
    SuperscriptBox["\[Omega]", "2"]}]], "-", 
  FractionBox[
   RowBox[{"Xfins1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Kappa]a", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", "\[Kappa]a"}], "+", 
         RowBox[{"2", " ", "\[Kappa]af"}]}], ")"}]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}], ")"}], " ", "\[Omega]"}], 
      "+", 
      SuperscriptBox["\[Omega]", "2"]}], ")"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}], ")"}], " ", 
     SuperscriptBox["\[Kappa]a", "2"]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Kappa]a", " ", "\[Omega]"}], 
    "+", 
    SuperscriptBox["\[Omega]", "2"]}]]}]], "Output",
 CellChangeTimes->{3.835311761461369*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"9eeebcab-dfdd-427d-8117-92313658886a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"the", " ", "variance", " ", "of", " ", 
     RowBox[{"Xfouts1", ":", " ", 
      RowBox[{
      "if", " ", "assuming", " ", "all", " ", "inputs", " ", "are", " ", 
       "vacuum"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "then", " ", "just", " ", "sum", " ", "the", " ", "abs", " ", "sq", " ", 
      "of", " ", "the", " ", "co"}], "-", 
     RowBox[{"efficients", " ", "of", " ", "each", " ", "input", " ", 
      RowBox[{"fluctuation", "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Vout", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["x", "2"]}], ")"}], " ", 
              SuperscriptBox["\[Kappa]a", "2"]}], "+", 
             SuperscriptBox["\[Omega]", "2"]}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "  ", "\[Kappa]a", " ", "\[Omega]"}], ")"}], 
           "2"]}], ")"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "x", " ", "\[Kappa]a", " ", 
           "\[Kappa]af"}], ")"}], "2"], "+", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "x", " ", "\[Kappa]a", " ", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}], ")"}]}]}], ")"}], 
         "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Kappa]a", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}], ")"}]}]}], ")"}], 
         "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}], ")"}]}], "\[Omega]"}],
           ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]a", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["x", "2"]}], ")"}], " ", "\[Kappa]a"}], "+", 
              RowBox[{"2", " ", "\[Kappa]af"}]}], ")"}]}], "+", 
           SuperscriptBox["\[Omega]", "2"]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}], ")"}], " ", 
           "\[Omega]"}], ")"}], "2"]}], ")"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Kappa]al", "\[Rule]", 
       RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.822602061499239*^9, 3.8226023510262823`*^9}, {
   3.822602405984487*^9, 3.8226024104725323`*^9}, {3.8226034425528173`*^9, 
   3.8226034618208437`*^9}, 3.822605002240943*^9, {3.822606204416477*^9, 
   3.822606204803467*^9}, {3.822678784565789*^9, 3.822679091399884*^9}, {
   3.822679161577652*^9, 3.8226791629691353`*^9}, {3.8226796483378267`*^9, 
   3.8226796868710203`*^9}, {3.822681471788505*^9, 3.8226814719326687`*^9}, {
   3.8226838049271812`*^9, 3.822683915809548*^9}, {3.8226842661448183`*^9, 
   3.8226842897377357`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"60245e0a-b18c-4dbd-aeb4-35bfcf2d1ace"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"8", " ", 
    SuperscriptBox["x", "2"], " ", 
    SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
     SuperscriptBox["\[Kappa]a", "4"]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "2"]}], ")"}], " ", 
     SuperscriptBox["\[Kappa]a", "2"], " ", 
     SuperscriptBox["\[Omega]", "2"]}], "+", 
    SuperscriptBox["\[Omega]", "4"]}]]}]], "Output",
 CellChangeTimes->{3.835311761614348*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"e2140cf7-a9ca-4f5b-acdd-c55e93d8c1a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"for", " ", "reference"}], ",", " ", 
    RowBox[{"the", " ", "desired", " ", "value", " ", "is", " ", 
     RowBox[{"(", 
      RowBox[{"7.12", ",", " ", "7.18"}], ")"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Goal", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"8", " ", 
          SuperscriptBox["x", "2"], 
          RowBox[{"(", 
           FractionBox["\[Kappa]af", "\[Kappa]a"], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "4"], "+", 
          RowBox[{"2", 
           SuperscriptBox["x", "2"], 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["\[Omega]", "\[Kappa]a"], ")"}], "2"], "-", "1"}], 
            ")"}]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["\[Omega]", "\[Kappa]a"], ")"}], "2"], "+", "1"}], 
            ")"}], "2"]}], ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Goal", "\[Equal]", "Vout"}]}]}]], "Input",
 CellChangeTimes->{{3.82268280007688*^9, 3.822682951416771*^9}, {
  3.8226841908327093`*^9, 3.822684227844426*^9}, {3.822684315600874*^9, 
  3.82268432136008*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"3bbf1121-7a7a-465b-a9b8-efd82437aa9a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.835311761634631*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"4f8f0e7b-9450-4d15-affd-170615aea7c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Attempting", " ", "to", " ", "recover", " ", "7.17"}], ",", " ", 
    
    RowBox[{"the", " ", "covariance", " ", "matrix"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Assumps", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", ">", "0"}], ",", 
       RowBox[{"\[Kappa]a", ">", "0"}], ",", 
       RowBox[{"\[Kappa]af", ">", "0"}], ",", 
       RowBox[{"\[Kappa]al", ">", "0"}], ",", 
       RowBox[{"\[Theta]b", ">", "0"}], ",", 
       RowBox[{"\[Omega]", ">", "0"}], ",", 
       RowBox[{"\[Kappa]a", "\[GreaterEqual]", "\[Kappa]af"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V", " ", "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"T", ".", 
           RowBox[{"ConjugateTranspose", "[", "T", "]"}]}], "+", 
          RowBox[{"Tl", ".", 
           RowBox[{"ConjugateTranspose", "[", "Tl", "]"}]}]}], ")"}], "/.", 
        RowBox[{"{", 
         RowBox[{"\[Kappa]al", "\[Rule]", 
          RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}]}], "}"}]}], ",", 
       RowBox[{"Assumptions", "\[Rule]", "Assumps"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"V", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.822681036360671*^9, 3.822681048271264*^9}, {
  3.822681085600061*^9, 3.822681085791026*^9}, {3.82268142797054*^9, 
  3.8226815684785*^9}, {3.8226816411537867`*^9, 3.822681697648925*^9}, {
  3.822681733487762*^9, 3.822681770599683*^9}, {3.822682177694689*^9, 
  3.822682185525467*^9}, {3.822682695722245*^9, 3.822682704889517*^9}, {
  3.822682751149374*^9, 3.8226827768436337`*^9}, {3.835311423844221*^9, 
  3.835311424310237*^9}, {3.83531170841926*^9, 3.835311710239997*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"876a3012-4db6-4a05-bd4a-b69a0f88b998"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}], "+", 
         SuperscriptBox["\[Omega]", "4"]}]]}], "0", 
      FractionBox[
       RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Kappa]a", "2"]}], "+", 
          SuperscriptBox["\[Omega]", "2"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         SuperscriptBox["\[Kappa]a", "4"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Kappa]a", "2"], " ", 
         SuperscriptBox["\[Omega]", "2"]}], "+", 
        SuperscriptBox["\[Omega]", "4"]}]], 
      FractionBox[
       RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Kappa]a", "2"]}], "+", 
          SuperscriptBox["\[Omega]", "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         SuperscriptBox["\[Kappa]a", "4"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Kappa]a", "2"], " ", 
         SuperscriptBox["\[Omega]", "2"]}], "+", 
        SuperscriptBox["\[Omega]", "4"]}]]},
     {"0", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}], "+", 
         SuperscriptBox["\[Omega]", "4"]}]]}], 
      FractionBox[
       RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Kappa]a", "2"]}], "+", 
          SuperscriptBox["\[Omega]", "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         SuperscriptBox["\[Kappa]a", "4"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Kappa]a", "2"], " ", 
         SuperscriptBox["\[Omega]", "2"]}], "+", 
        SuperscriptBox["\[Omega]", "4"]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["x", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Kappa]a", "2"]}], "+", 
           SuperscriptBox["\[Omega]", "2"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}], "+", 
         SuperscriptBox["\[Omega]", "4"]}]]}]},
     {
      FractionBox[
       RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Kappa]a", "2"]}], "+", 
          SuperscriptBox["\[Omega]", "2"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         SuperscriptBox["\[Kappa]a", "4"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Kappa]a", "2"], " ", 
         SuperscriptBox["\[Omega]", "2"]}], "+", 
        SuperscriptBox["\[Omega]", "4"]}]], 
      FractionBox[
       RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Kappa]a", "2"]}], "+", 
          SuperscriptBox["\[Omega]", "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         SuperscriptBox["\[Kappa]a", "4"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Kappa]a", "2"], " ", 
         SuperscriptBox["\[Omega]", "2"]}], "+", 
        SuperscriptBox["\[Omega]", "4"]}]], 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}], "+", 
         SuperscriptBox["\[Omega]", "4"]}]]}], "0"},
     {
      FractionBox[
       RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Kappa]a", "2"]}], "+", 
          SuperscriptBox["\[Omega]", "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         SuperscriptBox["\[Kappa]a", "4"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Kappa]a", "2"], " ", 
         SuperscriptBox["\[Omega]", "2"]}], "+", 
        SuperscriptBox["\[Omega]", "4"]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["x", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Kappa]a", "2"]}], "+", 
           SuperscriptBox["\[Omega]", "2"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}], "+", 
         SuperscriptBox["\[Omega]", "4"]}]]}], "0", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}], "+", 
         SuperscriptBox["\[Omega]", "4"]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8353117632549562`*^9},
 CellLabel->
  "Out[16]//MatrixForm=",ExpressionUUID->"76da479b-290a-4e55-b844-\
13f034dd3e96"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"V", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.822682454207037*^9, 3.822682457470179*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"6c2ea06b-f9e4-4101-a6e9-2bed25faaa62"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"8", " ", 
    SuperscriptBox["x", "2"], " ", 
    SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
     SuperscriptBox["\[Kappa]a", "4"]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "2"]}], ")"}], " ", 
     SuperscriptBox["\[Kappa]a", "2"], " ", 
     SuperscriptBox["\[Omega]", "2"]}], "+", 
    SuperscriptBox["\[Omega]", "4"]}]]}]], "Output",
 CellChangeTimes->{3.8353117633100863`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"2f9b001f-124c-4333-8e30-5102489d1c1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "diagonal", " ", "elements", " ", "of", " ", "the", " ", 
    "covariance", " ", "matrix", " ", "are", " ", "the", " ", "output", " ", 
    "variances"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"V", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", "Vout", "\[Equal]", 
   "Goal"}]}]], "Input",
 CellChangeTimes->{{3.822682740789555*^9, 3.822682774454265*^9}, {
  3.822684301802327*^9, 3.822684312798724*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"6109cbb5-78f3-42a3-be5f-088eaa742d11"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.83531176332228*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"009e23b5-6d31-43ea-a8ac-6fd45b94b232"]
}, Open  ]],

Cell["Repeating calculation using other convention for \[CapitalGamma]", \
"Text",
 CellChangeTimes->{{3.834451796860199*^9, 
  3.834451809053789*^9}},ExpressionUUID->"9f769486-c43a-425b-9f57-\
c6852615a46c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalGamma]sgn", "=", 
   RowBox[{"(", GridBox[{
      {"1", "1", "0", "0"},
      {"\[ImaginaryI]", 
       RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
      {"0", "0", "1", "1"},
      {"0", "0", "\[ImaginaryI]", 
       RowBox[{"-", "\[ImaginaryI]"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tfsgn", " ", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"2", "\[Kappa]af", " ", 
      RowBox[{"\[CapitalGamma]sgn", ".", 
       RowBox[{"Inverse", "[", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]", " ", "Id"}], "-", 
         "M"}], "]"}], ".", 
       RowBox[{"Inverse", "[", "\[CapitalGamma]sgn", "]"}]}]}], "-", "Id"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tlsgn", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"\[CapitalGamma]sgn", ".", " ", 
      RowBox[{"Inverse", "[", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]", " ", "Id"}], "-", 
        "M"}], "]"}], ".", 
      RowBox[{"Inverse", "[", "\[CapitalGamma]sgn", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vsgn", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Tfsgn", ".", 
         RowBox[{"Tfsgn", "\[ConjugateTranspose]"}]}], "+", 
        RowBox[{"Tlsgn", ".", 
         RowBox[{"Tlsgn", "\[ConjugateTranspose]"}]}]}], ")"}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Kappa]al", "\[Rule]", 
        RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}]}], "}"}]}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", ">", "0"}], ",", 
        RowBox[{"\[Theta]b", ">", "0"}], ",", 
        RowBox[{"\[Kappa]af", ">", "0"}], ",", 
        RowBox[{"\[CapitalOmega]", ">", "0"}], ",", 
        RowBox[{"\[Kappa]a", "\[GreaterEqual]", "\[Kappa]af"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vsgn", "//", "MatrixForm"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "opposite", " ", "convention", " ", "flips", " ", "the", " ", "sign", " ", 
    "of", " ", "\[Theta]b"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"V", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Omega]", "\[Rule]", "\[CapitalOmega]"}], ",", 
      RowBox[{"\[Theta]b", "\[Rule]", 
       RowBox[{"-", "\[Theta]b"}]}]}], "}"}]}], ")"}], "\[Equal]", 
  "Vsgn"}]}], "Input",
 CellChangeTimes->{{3.834451812295288*^9, 3.834451837046207*^9}, {
   3.834451923830192*^9, 3.834452032172666*^9}, {3.8344520789479837`*^9, 
   3.834452093742694*^9}, {3.834452185775103*^9, 3.834452192153179*^9}, {
   3.834452478270042*^9, 3.834452483217395*^9}, {3.834452529001001*^9, 
   3.834452620112172*^9}, {3.834452651834365*^9, 3.834452670216186*^9}, {
   3.8344527489506817`*^9, 3.8344527742777233`*^9}, {3.835311433501525*^9, 
   3.8353114342305527`*^9}, {3.835311493641423*^9, 3.835311498876031*^9}, {
   3.835311726441742*^9, 3.835311743585685*^9}, 3.835311837790333*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"baf790ca-fe34-42d6-97bb-71db0f768986"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}]]}], "0", 
      FractionBox[
       RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Kappa]a", "2"]}], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         SuperscriptBox["\[Kappa]a", "4"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Kappa]a", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "4"]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["x", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Kappa]a", "2"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}]]}]},
     {"0", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["x", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Kappa]a", "2"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["x", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Kappa]a", "2"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}]]}]},
     {
      FractionBox[
       RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Kappa]a", "2"]}], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         SuperscriptBox["\[Kappa]a", "4"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Kappa]a", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "4"]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["x", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Kappa]a", "2"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}]]}], 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}]]}], "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["x", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Kappa]a", "2"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["x", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Kappa]a", "2"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}]]}], "0", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.835311765268013*^9},
 CellLabel->
  "Out[23]//MatrixForm=",ExpressionUUID->"a8df74eb-89f9-4ff0-9329-\
7d72de2340a0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.835311765271819*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"e662f5ed-1b70-465d-8f98-f23aba8f31db"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"print", " ", "the", " ", "notebook", " ", "to", " ", 
     RowBox[{"a", " ", ".", "pdf"}]}], ",", " ", 
    RowBox[{
    "the", " ", "notebook", " ", "needs", " ", "to", " ", "be", " ", "saved", 
     " ", "for", " ", "this", " ", "to", " ", "function"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"NotebookPrint", "[", 
  RowBox[{
   RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<NOPO_matrices.pdf\>\""}]}], "]"}]}], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"524336a8-c033-4272-a92d-2bb29f74dd17"],

Cell["\<\
Plotting the (co)variances from degenerate and nondegenerate OPO\
\[CloseCurlyQuote]s against frequency\
\>", "Text",
 CellChangeTimes->{{3.83469099403804*^9, 
  3.83469101769831*^9}},ExpressionUUID->"8e3464c1-b9c0-4855-ab8e-\
d6e4dec1a3d3"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQVsFMEax3F3d3i4uwUJboFSUihQIEihJTiBhzwIUtwhQIDiToMTPDiB
4MHdiktw93n8h2y5trvt7nG3t3f3/yWD3M7tzd3Mfjv76X8C+/gFx4sTJ07/
JL//8Os0qFa/fp3+1zzN7//49+7frWvvoC6Nev83qGtQv8qB8X+/2OB3Gx43
TpwEv/8WhBBCCCGEWJBfv365egiEEEJMxM/PTxQpUkTUqFHDtPb161dXf21C
CPFKrly5IlKkSCFWrFghtmzZYlr7+fOnq786IYR4Je3atRP9+vVz9TAIIYSY
wO3bt0Xy5MnFo0ePXD0UQixNeHi4WL9+vauHQZyIt8xxcHCw6Natm+bx+fPn
S71/6tSpRYIECWTLlCmTKFasmChRooQoVKiQKFCggKhVq5aYNGmSePPmjYmj
J8T5PH78WEybNk2kSZNG1K1b19XDIU7Am+b44cOHcq9/9+7dWPvu27dPwD0d
doB3795FOvblyxexdetWkTt3bnl/OHbsmJNGTIh5DBgwQBQsWFD4+/uLIUOG
yPXv6TLB2/DGOe7Tp4/o2LGjrr5TpkyRv0mTJk00+5w5c0b2wT3z9evXjhom
IS7n9OnTXiETvBlvmOPnz5/Lvfu1a9d09Ye8x28C+a8F9v3og+YNOjLiPXiD
TPB2vGGOBw8eLFq3bq2r748fP6T+Br8Jfhstzp8/HyH3ly5d6qihEuJyvEEm
eDuePsfQwUCOX7hwQVd/5fdIlSqVvAdoMX36dNkvWbJk4tmzZ44aLiEux9Nl
AvH8OQ4JCRG+vr66++vR7eNekjNnTunvAxsvIZ6Ep8sE4tlz/P79e5E+fXpx
8uRJ3e+JTbd/6dIlUaFCBenPs337dkcNlRDL4MkygfzBHef48+fPuvrBx75+
/fq6z2ur258wYYLYtm2bbOvWrRMzZ84ULVu2lLl2ZsyYIT59+mTv8AmxNO4o
E4gx3GmO4ZcDOe7j4xNrX9wbsmTJIg4fPqz7/MpvAd/MXbt2RbQ1a9aIvn37
irRp04rJkyeL79+/x3qu8ePHi8WLF+v+bEKsgjvJBGIf/zrH2PciJsqeZsQe
CvndqlUrkSRJEhE3blypb4mJ2bNni+rVqxv6Lopuv2nTpqrHV61aJY/36NEj
xvPguSFr1qwyJo4Qd4Ny3/P51zkOCgqS+2N7WsaMGcWDBw9i/Qzkyw8NDZXy
FJ+H8QYGBmr2//btm8iVK5fYvXu3oe+i6PanTp2qevzDhw/yeOLEiZlXmXgs
lPuej7vNMWKvsN+H7H3y5Ilqn0WLFknbqxGQJ1nR7SMWVw3kcFZ89pnbjXgq
7iYTiHHccY6hh8GYhw4dGu0YngmQO23z5s2Gzqn8DpD9WrnyV65cGSH3tfb7
x48fF8uWLRNv37419PmEWAV3lAnEGO44x9D1Y8zp0qUTHz9+jHRs9erVMnem
0VqKevz2+/fvL/vAvqsGfH7mzp0rbbrlypUz9PmEWIVTp07JdV6nTh1XD4U4
CXed40qVKslxw36rAFlfvHhxERYWZvh8enLywJcIfQoXLhzpdcTuvnr1SuaD
AMh1lyNHDsNjIMQKYO+krHNn+CsjtxX0pIihv3r1qsPPT2LH2XPsLOBTj3Hn
y5cvQi+zadMmqeMxWtMQfkXI24bzHThwQLMfcvygT9myZSNeg15n2LBh8u+b
N2/K1/Lnzx9jnn9CrMa8efPkczLiHFOmTCmfpeF7gesiT548okyZMg7xZYC8
x2co+lK9ebMcgbfX1zBrjp0JZHvevHnl2tmwYYN8rXz58mLJkiW6z9GmTRv5
ffEbQHeD9ZAtWzZRsmRJMWfOnGj9sT/Jnj27/J3gh7p37155DsQFKxw8eFCO
CfcBQog6iq7WTLmvwPoa7g10PJi/KlWqSJ9NzBV8OJ3Jy5cv5b4BNXrhzx/V
voD6vdhTEEK0QQymq+Q+62u4N5C5yjMjZL7aHt1M4MOTNGlSmeMBQN8fU05P
QryVFy9euEzus76G+wPdOuYG8bGYK1eyf/9+ORb4+d+5c0fW+CKERMdVcp/1
NTwD2GSRu8EKORHg0wN/ItiEevbsGU13SAj5g6vkvhXqa0BXjDxfsA126NBB
LFiwQLesQAwR+cPFixd15UozC604YvJv4PrQWvc3btyQuVOj2luINVGT+5B9
mONx48ZJ+xnyIYLw8HAxevRomRcLuhk8T9uLq+trHDlyRGTOnFnuVeE/Av8h
5B9ADsnly5fHGncEnxtCvAXYAePHjx8tZ96tW7dEp06dpE8armfs04j1UZP7
eA26UcQ84hhy4CLufsCAAdL/E3rcsWPHikSJEkmfHHtwZX0N2P9wP8H3sbUV
379/X97TsL6rVq0qdUxq4L7QsGFDh46JECujxGtAh6YA/13YdxB30r59e7l/
un37tsM+89ChQyIgIEDKJnvboEGDHDYeTyImPQ9ycOGYn5+fjIG0BboZ+Fwb
zbWrvNeV9TXwOdijaAF5j+8F+Y/8k/AJR95K+IT36tVL6py0cocR4olgP6TE
ReD6HTFihNz/GMFoTQRcc8jxt3DhQrsb6jeQ6MQk9xEbg2PY19vGxihA1wHf
e6O4ur7GyJEjxZ49e2Ltt2LFCvlcoNiV0RA3hHsUId4EYipxrWNPhL3P5cuX
Db3fXWoimFXPwtXokfuYczUqV64s4sWLZ/gzXV1f4969e7r9uhGXevToUTkm
xI7prTFIiKegxPjgORf5t7t27SprJEAPYzQnh9VxRj0L3CebN29uSoPuWg96
5H6DBg1U3wu5j+NG/batUl8DsaXIKTN8+HBpr4b/t948kuhrhB07dpg292zR
m7PjiD2ZtWvXyutx4sSJ8nqEPwf0scitUrp0aU07GPkD4o6grzKjbdmyRdeY
9Mh9LRumPXLfKvU1kIcOOXIUX1LcY/DvUqVKSV+f2DBaVwTfyay5Z4veGLdr
P927d5fXxokTJyK9jmsIr1erVi3G99tbEwHyAf6E0P3a26yuV3IVZst9K9TX
wHgR3wP7sZKHFPt8yPvGjRtLf074Jzx9+lT1/bAN2GPPJsQdKVq0qGacDfw3
bfNi49lg586dEf//l5oIsCGEhIRIe5y9Dfd8Eh2z5b4V6mvgWQi2BS2dDuy2
yC+MexNiGGAPALgPQDeF/JFGa8cS4o7AVolrEfuhqMAGimO+vr4Rr7Vo0SIi
9pE1EayL2XLfCvU1Ro0aFaseDPZb7BeQ5wtjQeyYYttydf4xQsxC0e1rXa/I
y9elSxf577t374revXtHHGNNBOuC+CjMa+3ataMdU3QytnUuFGzzrz9+/FjX
Z1mlvsa5c+d0++XgPgN9Ep43oX/CvZAQb2HMmDFS74m4XDVwbSDWHb7ybdu2
Vc2Zy5oI1gH20oIFC8r7NfQp0N9h7xwcHCzv25hL22PwW0duc4BnPvhPQg+C
48htAB2gVp5k1tcgxD2B/ezs2bMx9oHvInyctWznrIkQGfh4oD4RdMjwJ+Re
8i+sr0GI+8OaCH/BvhWxD4GBgTJGFXbKmjVryrjYgQMHSv91og3XEiHuAWsi
/MXf3z9arjHoy5EzBr8RbOJEG64lQtwD1kT4A3xbsc9XA741yZMnlzINdnSi
DtcSIe6Ft9dEQP4EyHUfHx/V4/Xq1ZPHkSeCxIy3ryVCiHvQuXNnKdeR41ct
ZwieBXAcvvGEEELcn+vXr8uafsjxq0ajRo2k3IcNICqwZyJHQFhYmGZDLQTq
Pci/wrVGiDkg7hU+85D7yENgC/LTw/fdNhe8VkNdEULshWuNEPNYunSpvJZg
s7StOYL40ly5csnccsgFjxhb+APh2QD/tm1KLhlC7IFrjRDzQM4v5O3PkCFD
pFo2sAEg9yNiaG2ZNWuWzEtGiKPgWiPEXLCfQv6CqDnpEQONPVhU6taty5yQ
xKFwrRFiHqglixw3seXBUHjz5o1ImDChrH9GiDPhWiPE8cAvAvnREHeqF+R2
QL1vQpwN1xohjgX5BipWrKi6lwoNDdV8X0BAgGjWrJkzh0aIhGuNEMeBWsR1
6tSROQeiAj0r8g6rAdsbarejdgghzoRrjRDHER4eLmuToQ4JfPaVhrplyD+M
vDOod6AGctHD1xO1AAlxJlxrhDgGyHXUD4wtHmbjxo2q70cdMyM1rgixF641
QhwDalHqiYO8evWq6vthD0B9QUKcDdcaIdbgxo0bjJMkpsC1RgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEI8gf8DDfFvug==
    "], {{0, 71}, {
    382, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{382, 71},
  PlotRange->{{0, 382}, {0, 71}}]], "Input",
 CellChangeTimes->{{3.834694895943326*^9, 3.834694897665792*^9}, {
  3.834696764936166*^9, 3.834696766326467*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"a87c3ed5-bcdb-4424-adc8-8c7944ecb967"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 71}, {
    382, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{382, 71},
  PlotRange->{{0, 382}, {0, 71}}]], "Output",
 CellChangeTimes->{3.835311765675294*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"480f7035-6157-47c4-bc6a-2623a75d8f40"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"above", ":", " ", 
    RowBox[{"eq3", ".5", " ", "from", " ", "Min", " ", 
     RowBox[{"Jet", "'"}], "s", " ", "thesis"}]}], ",", " ", 
   RowBox[{
   "the", " ", "\[Kappa]", " ", "formula", " ", "is", " ", "only", " ", "an", 
    " ", 
    RowBox[{"approximation", "?"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8346949005009317`*^9, 3.8346949286655397`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"367c6a75-dff7-4d73-acfc-4b4ec1008503"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"degenerate", " ", "OPO"}], ",", " ", 
    RowBox[{"using", " ", "values", " ", "from", " ", "Sheon", " ", 
     RowBox[{"Chua", "'"}], "s", " ", "thesis"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"3", " ", 
      SuperscriptBox["10", "8"]}]}], 
    RowBox[{"(*", 
     RowBox[{"m", " ", 
      SuperscriptBox["s", 
       RowBox[{"-", "1"}]]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L", " ", "=", "1"}], 
    RowBox[{"(*", "m", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tRoundTrip", "=", 
     FractionBox[
      RowBox[{"2", "L"}], "c"]}], 
    RowBox[{"(*", 
     RowBox[{"=", 
      FractionBox["1", "FSR"]}], "*)"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"assumes", " ", "linear", " ", "cavity"}], ",", " ", 
     RowBox[{
     "unclear", " ", "if", " ", "factor", " ", "of", " ", "2", " ", "req"}]}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tout", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kout", "=", 
     FractionBox[
      SuperscriptBox["Tout", 
       RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", "0.45"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"degenV1", "[", 
     RowBox[{"w_", ",", "Tin_", ",", "Tloss_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kin", "=", 
       FractionBox[
        SuperscriptBox["Tin", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kloss", "=", 
       FractionBox[
        SuperscriptBox["Tloss", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ktot", "=", 
       RowBox[{"kout", "+", "kin", "+", "kloss"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{"x", " ", "ktot"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"4", " ", "kout", " ", "g"}], 
        RowBox[{
         SuperscriptBox["w", "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"g", "-", "ktot"}], ")"}], "2"]}]]}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"degenV2", "[", 
     RowBox[{"w_", ",", "Tin_", ",", "Tloss_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"just", " ", "send", " ", "g"}], "\[Rule]", 
       RowBox[{"-", "g"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kin", "=", 
       FractionBox[
        SuperscriptBox["Tin", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kloss", "=", 
       FractionBox[
        SuperscriptBox["Tloss", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ktot", "=", 
       RowBox[{"kout", "+", "kin", "+", "kloss"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{"x", " ", "ktot"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"4", " ", "kout", " ", "g"}], 
        RowBox[{
         SuperscriptBox["w", "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"g", "+", "ktot"}], ")"}], "2"]}]]}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"\[Lambda]", "=", 
       RowBox[{
        RowBox[{"1", "\[Mu]m"}], "=", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]], "m"}]}]}], ",", " ", 
      RowBox[{
      "want", " ", "to", " ", "consider", " ", "sidebands", " ", "of", " ", 
       "carrier"}], ",", " ", 
      RowBox[{
       RowBox[{
       "so", " ", "look", " ", "at", " ", "frequencies", " ", "around", " ", 
        "w"}], "=", 
       RowBox[{"2", "\[Pi]", 
        FractionBox["c", "\[Lambda]"]}]}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"because", " ", "of", " ", "rotating", " ", "frame"}], ",", " ", 
      RowBox[{
       RowBox[{"aren", "'"}], "t", " ", "all", " ", "frequencies", " ", 
       "already", " ", "relative", " ", "to", " ", 
       RowBox[{
        FractionBox["\[Omega]", "2"], "?"}]}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lambda", "=", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}], 
     RowBox[{"(*", "m", "*)"}], ";", "\[IndentingNewLine]", 
     RowBox[{"wCarrier", "=", 
      RowBox[{"N", "[", 
       RowBox[{"2", "\[Pi]", 
        FractionBox["c", "lambda"]}], "]"}]}], ";"}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"~", "1.9"}], "*", 
      SuperscriptBox["10", "15"], "Hz"}], "*)"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"LogLogPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"degenV1", "[", 
           RowBox[{"w", ",", 
            RowBox[{"Tin", "=", "0"}], ",", 
            RowBox[{"Tloss", "=", "0"}]}], "]"}], ",", 
          RowBox[{"degenV1", "[", 
           RowBox[{"w", ",", 
            RowBox[{"Tin", "=", "0.01"}], ",", 
            RowBox[{"Tloss", "=", "0.1"}]}], "]"}], ",", 
          RowBox[{"degenV2", "[", 
           RowBox[{"w", ",", 
            RowBox[{"Tin", "=", "0"}], ",", 
            RowBox[{"Tloss", "=", "0"}]}], "]"}], ",", 
          RowBox[{"degenV2", "[", 
           RowBox[{"w", ",", 
            RowBox[{"Tin", "=", "0.01"}], ",", 
            RowBox[{"Tloss", "=", "0.1"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"w", ",", 
          SuperscriptBox["10", "5"], ",", 
          SuperscriptBox["10", "9"]}], "}"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{"\"\<Expressions\>\"", ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<degenerate OPO\>\""}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Dashed", ",", "Gray"}], "}"}], ",", ",", ",", ","}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<angular frequency / (log scale)\>\"", ",", " ", 
        "\"\<variance / (log scale)\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
      RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "plotting", " ", "quantum", " ", "noise", " ", "in", " ", "dB", " ", 
      "is", " ", "a", " ", "matter", " ", 
      RowBox[{"of", ":", " ", 
       RowBox[{
        RowBox[{"(", "1", ")"}], " ", "understanding", " ", "what", " ", 
        "kind", " ", "of", " ", "quantity", " ", "you", " ", "are", " ", 
        "plotting", " ", "and", " ", 
        RowBox[{"(", "2", ")"}], " ", "plotting", " ", "relative", " ", "to", 
        " ", "vacuum"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"e", ".", "g"}], ".1", " ", "for", " ", "variance", " ", 
      "which", " ", "is", " ", "a", " ", "squared", " ", 
      RowBox[{"(", "power", ")"}], " ", "quantity"}], ",", " ", 
     RowBox[{"plot", " ", "10", 
      SubscriptBox["log", "10"], 
      RowBox[{"(", 
       RowBox[{"V", "=", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", "since", " ", "vacuum",
       " ", "is", " ", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"e", ".", "g"}], ".2", " ", "for", " ", "shot", " ", "noise", 
      " ", "transfer", " ", "fn"}], ",", " ", 
     RowBox[{"|", "R", "|", " ", 
      RowBox[{"is", " ", "amplitude"}]}], ",", "  ", 
     RowBox[{
      RowBox[{"plot", " ", "20", 
       SubscriptBox["log", "10"], 
       RowBox[{"(", 
        RowBox[{"|", "R", "|"}], ")"}], " ", "since"}], " ", "|", "R", 
      SubscriptBox["|", "vac"], " ", 
      RowBox[{"is", " ", "1"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"10", 
          RowBox[{"Log10", "[", "1", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"degenV1", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0"}], ",", 
             RowBox[{"Tloss", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"degenV1", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0.1"}], ",", 
             RowBox[{"Tloss", "=", "0.1"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"degenV2", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0"}], ",", 
             RowBox[{"Tloss", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"degenV2", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0.1"}], ",", 
             RowBox[{"Tloss", "=", "0.1"}]}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         SuperscriptBox["10", "5"], ",", 
         SuperscriptBox["10", "9"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<degenerate OPO\>\""}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Gray"}], "}"}], ",", ",", ",", ","}], 
         "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / (log scale)\>\"", ",", " ", 
       "\"\<variance / dB (10\!\(\*SubscriptBox[\(log\), \(10\)]\))\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
     RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzltIU3EABvCT2EPgBYrlOfMSo8K8zkBCUdy0HgTBxFKH6NSxdD7M6fIh
84IcRa3WKp0OxQdF2VBBV15mCwq8UOFEzQtqKiHJDI6pQ9NNwc73f/j4wffw
8YkUmvQnHhRFhfCBVXN1Nr9mLlEx3zgL39ybXYWybeYn3Fq3HEA2e8YNg2pl
FM07fLvgCkzoEV2D3+7HM9BVuBABzdmBd2F+RH4qHHR0yqDtdCoHzo8a5DA8
LkUJ7YKmIugo+KyGzlu5WrhLG55BqWmjBk6Jw17A1O1QHSz192mDmoG8DmgM
tS5DL7nJAQ3vVRzU6i2H8Pxp1zF8PjlD3Px77M+gtwbcgE16ewX8cqehHr6l
wl7Bq/QjPbx8vt8Ko1eERhjFSDZg0NnRJizyTndBuaCbqAy/CBTy9kS6RfB6
V3syVNGRKTDJ/C6NaKQew6olTw1kR2xaOJYrroGZiiSil2d8PZxQNRN3zGwL
jC2t7YTB0pN+aFePD8DeTzet0MBME3tz1r7CEJfvd+jHLi6SX9W/if84U98e
L9fqtkB1lqD7AHtCFdFZrHtwxBujPHsIbR9/ZMBiaov4+mVyHhwL0BL/6D4o
oVOwSpT+kpRBtqSSWN4mGaRbuMRLFeIh+B91MErY
  "],
 CellLabel->"In[29]:=",ExpressionUUID->"6271967f-9ebc-4495-a23a-a5002fd3c14d"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            Dashing[{Small, Small}], 
            GrayLevel[0.5]], 
           LineBox[CompressedData["
1:eJxN0Hss1AEAB/Aj5GJxTK08kuZ+l1ec61K7kXMNKdUp80cscSgtozt5pLij
E2lpPdyVR1e0wrkSRyplnsujMSKsjK6t0121FZv02trve9/tu+8+/343Hk3h
C4wpFMrev/23ASFfvSvMiJ2U/1Fedky1NoedJkIfiqnwz2MKn0RLuKU4gult
AzOHmnw7HGF6ZBZbw4JXx6/geMXBE9LPImkPnHTAM3yHK4N0xkxZ5Zo8uCBz
asPTOThSLfJvC9xMetOyplhSA6dS8/kiqhtpSVu6+oUALhUFho32wXGjsTlB
hDtp9VI9Y1IMr3QbNuZoYPtfYdk/uB6k3d+Wu2Tdg5+dsQ8iVnmStu3SGXkl
wAI7uX65D862uJlNEF6kS6hC9vqLsPNgxnG2Hj7tN8KpC9tC+tUDU39tA5w2
0617aeZN+vlr5yUFC6Z2aiqSEmB20Rva5FU49iDLgdkD9xsRs+WL8DoxL7OZ
7kM63mywpjEKLo0W34mWwr9v9B92aIKTx8T17Rq49WPcgJUdk7TpsiqfFwz7
fmBY0NNhhYod7nAXtspVMRZG4RiXQ8NnTXxJ1/YKbLVseDvfknYiCb6vnJ6W
XYfXWtlz63rhRK5ElLwAL0blCQJcWaSlp7TzC5Hw4pHcoOgCeFsa86THeThd
Mle2ZODv1SE6WSH87ZO1bKwYnhfe1u27Ar8r7JBxK2EnubCTVgXH1NL17w08
NVDEO6eAx20i9G3V8PCtWd7WOpimvJZiUg/vbw+Wjxh4aKZWn9oA99OFcuUj
2MKP3pXTCO8OHdfveQz3JXN2aZtg8xxdypNmOORSlfyC2uDfSn5XVAvcrTL5
QrTCfwATqQeX
            "]]}, 
          Annotation[#, "Charting`Private`Tag$11754#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$11754#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$11754#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
VtGJXaiuiGeS/IwDHNl1vPtZu9D/ACU1jTo=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$11754#4"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
ZF2qYEK1ZUGRMXGTGc9jlOZuYpt1nAWZAV+MDTofIaUftf7x9iz4+Gj8bOC5
R4j4LbrgtDMLTmRqU9JSEGJ/Igpt9WWBRs49yU0i9chWVmWkDzurKF/ryec6
dMV4d/11PxakUTLexTfUoa+PLdz5zrJgjcHyqBrfOpSeGt05EsCC8T4rZfpQ
LVpjPp6SFcKCoTr/uPCHD9DXlhKqYiy+frH0v/vJ1UhyeR3fe+xl51VvvPKv
Rnu3PeuPu8KCbP1TG0XNq1FG3mAcTxwLKncm7BXaUI3Mw8SmBxJYUNAZ6fgp
8T5q2nmmPjWJBdtHqcK8qVUos1TVUDabBT7d8dLPn1WgwRvpNR+xX+/zKDO4
U4HkggS3FOaw4FLoR6u/MRUo2aB/flseC3gJK4hdBytQ3NfwgiN3WJBY90Yi
8P09FLj5Le/VUhY4eCROWU+VI/OkM7Wr6llwxzN1B3FfGUoM6tv6GpvZ158f
RytDb07uS0h6iO9vwoK4UaIMHVSRcSI8YkGQhENhxlAp2tvRsH7PE7w/25I7
jS+UIo6wuFfwcxYMDnDCXc6XIJHgUuLMWxasj/2bGVpchJLEj+wre8eCth5K
a0R4EVLKWXBw6WLBDVfk13CsCHFaDmQNdON4sr3Mu9YUIXOJTxuf9bDgULm1
nP+ZQpSZL7U2eYgF4v7v6o7tvYNUX4cuaHxnQccPjii/WD5CJ0iy09ge30zz
dv/MQ7rcVxolP/D+Vl8VLnyRh47KbPTfNMEC0Vv3LPlj8lCww/1Jod8s6K/s
etItkIda/nwb653F6/+3OqR2VS6yVjLtuMDLBnIjI2KOmo1m7C0u6vKxoWql
fM3mNdkoLu8YR5yfDTnLKurP/8xCT6gnE3ME2LD9aapmZXkWIqr5WbYJsqH4
1lrG7u1Z6Jde8rCUGBvSds1oXTHJRGE+fZMVG9kwtb7KyTw3HW2sHsq6IMcG
ZbA903Q5HVXNfTLRlWcDX1dVn+WZdPQl6EdVjwIbem1V/0xDOjKMXjy3fDMb
qHsfV/fXpiHJNMUVh8hsMDw5dDZ4ZyoqfOaw9psqG4Tc+teOeaegDjurDWVq
bJCS91k01UtBs3+NZPzU2bAhZaZwuVIK0lGGTSs02JBp7ji2tv0m6k2WZsvs
ZIN/aaa1MOMmWuPyykhPmw2Xo777Cc4mIa/V2xIKD7JhbWHP/vl7iSgpj5Ho
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
B/o5vheceM1QUynvBKGGAw93TDDHB03R/1t/Vzs=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$11754#5"]& ]}}, {}, {}}, {Ticks -> {
         Charting`ScaledTicks[{Log, Exp}], Automatic}, 
       GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
       Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
       AxesOrigin -> {11.512925652936358`, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "ClippingRange" -> {{{11.512925652936358`, 
          20.72326564898028}, {-8.4179503540145, 8.417950354014497}}, {{
          11.512925652936358`, 20.72326564898028}, {-8.4179503540145, 
          8.417950354014497}}}}, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {11.512925652936358`, 0}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 300, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
       FormBox["\"degenerate OPO\"", TraditionalForm], 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", "1",
              ")"}]}], 
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
             RowBox[{"degenV1", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"Tin", "=", "0"}], ",", 
                 RowBox[{"Tloss", "=", "0"}]}], ")"}], ")"}]}], 
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
             RowBox[{"degenV1", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"Tin", "=", "0.1`"}], ",", 
                 RowBox[{"Tloss", "=", "0.1`"}]}], ")"}], ")"}]}], 
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
             RowBox[{"degenV2", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"Tin", "=", "0"}], ",", 
                 RowBox[{"Tloss", "=", "0"}]}], ")"}], ")"}]}], 
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
             RowBox[{"degenV2", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"Tin", "=", "0.1`"}], ",", 
                 RowBox[{"Tloss", "=", "0.1`"}]}], ")"}], ")"}]}]}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                    "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 TagBox[#, HoldForm], ",", 
                 TagBox[#2, HoldForm], ",", 
                 TagBox[#3, HoldForm], ",", 
                 TagBox[#4, HoldForm], ",", 
                 TagBox[#5, HoldForm]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", "10", "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / (log scale)\"",
   "\"variance / dB (10\\!\\(\\*SubscriptBox[\\(log\\), \\(10\\)]\\))\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
       Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, BaseStyle -> Directive[10], DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.835311766043346*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"872f9c55-7d17-4c5f-8da8-deeab9e0e356"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"introducing", " ", "PD", " ", "loss", " ", "as", " ", "well"}], 
    ",", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["R", "PD"], " ", "is", " ", "the", " ", "reflectivity", 
      " ", "of", " ", "the", " ", "lossless", " ", "beam"}], "-", 
     RowBox[{"splitter", " ", "between", " ", 
      RowBox[{"(", "trans", ")"}], " ", "and", " ", 
      RowBox[{"(", "PD", ")"}], " ", "fields"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"degenVPDloss", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "Tin_", ",", "Tloss_", ",", "Rpd_", ",", 
      RowBox[{"gsgn_:", "1"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kin", "=", 
       FractionBox[
        SuperscriptBox["Tin", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kloss", "=", 
       FractionBox[
        SuperscriptBox["Tloss", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ktot", "=", 
       RowBox[{"kout", "+", "kin", "+", "kloss"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{"gsgn", " ", "x", " ", "ktot"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"4", " ", "kout", " ", "g", 
         RowBox[{"(", 
          RowBox[{"1", "-", "Rpd"}], ")"}]}], 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"g", "-", "ktot"}], ")"}], "2"]}]]}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"10", 
        RowBox[{"Log10", "[", "1", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"10", 
        RowBox[{"Log10", "[", 
         RowBox[{"degenVPDloss", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"Tin", "=", "0"}], ",", 
           RowBox[{"Tloss", "=", "0"}], ",", 
           RowBox[{"Rpd", "=", "0"}], ",", 
           RowBox[{"gsgn", "=", "1"}]}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"10", 
        RowBox[{"Log10", "[", 
         RowBox[{"degenVPDloss", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"Tin", "=", "0"}], ",", 
           RowBox[{"Tloss", "=", "0"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}], ",", 
           RowBox[{"gsgn", "=", "1"}]}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"10", 
        RowBox[{"Log10", "[", 
         RowBox[{"degenVPDloss", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"Tin", "=", "0.1"}], ",", 
           RowBox[{"Tloss", "=", "0.1"}], ",", 
           RowBox[{"Rpd", "=", "0"}], ",", 
           RowBox[{"gsgn", "=", "1"}]}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"10", 
        RowBox[{"Log10", "[", 
         RowBox[{"degenVPDloss", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"Tin", "=", "0.1"}], ",", 
           RowBox[{"Tloss", "=", "0.1"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}], ",", 
           RowBox[{"gsgn", "=", "1"}]}], "]"}], "]"}]}], ",", 
       RowBox[{"10", 
        RowBox[{"Log10", "[", 
         RowBox[{"degenVPDloss", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"Tin", "=", "0"}], ",", 
           RowBox[{"Tloss", "=", "0"}], ",", 
           RowBox[{"Rpd", "=", "0"}], ",", 
           RowBox[{"gsgn", "=", 
            RowBox[{"-", "1"}]}]}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"10", 
        RowBox[{"Log10", "[", 
         RowBox[{"degenVPDloss", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"Tin", "=", "0"}], ",", 
           RowBox[{"Tloss", "=", "0"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}], ",", 
           RowBox[{"gsgn", "=", 
            RowBox[{"-", "1"}]}]}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"10", 
        RowBox[{"Log10", "[", 
         RowBox[{"degenVPDloss", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"Tin", "=", "0.1"}], ",", 
           RowBox[{"Tloss", "=", "0.1"}], ",", 
           RowBox[{"Rpd", "=", "0"}], ",", 
           RowBox[{"gsgn", "=", 
            RowBox[{"-", "1"}]}]}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"10", 
        RowBox[{"Log10", "[", 
         RowBox[{"degenVPDloss", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"Tin", "=", "0.1"}], ",", 
           RowBox[{"Tloss", "=", "0.1"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}], ",", 
           RowBox[{"gsgn", "=", 
            RowBox[{"-", "1"}]}]}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", 
       SuperscriptBox["10", "5"], ",", 
       SuperscriptBox["10", "9"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{"\"\<Expressions\>\"", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Gray"}], "}"}], ",", ",", "Dashed", ",", ",",
         "Dashed", ",", ",", "Dashed", ",", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{
         "\"\<variance / dB (10\!\(\*SubscriptBox[\(log\), \(10\)]\))\>\"", 
          ","}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / (log scale)\>\"", ",", 
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<degenerate OPO\\nintracavity and PD loss\\nsqueezing param. \
x=``\>\"", ",", "x"}], "]"}]}], "}"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.835217320959587*^9, 3.835217672939373*^9}, {
   3.835217707258046*^9, 3.835217775251295*^9}, {3.835217826701436*^9, 
   3.835217969465468*^9}, {3.83521800272217*^9, 3.835218003099522*^9}, {
   3.8352180662011557`*^9, 3.835218070475966*^9}, 3.83523296949238*^9, {
   3.835301105742421*^9, 3.835301109905553*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"b60d38f1-f753-4f86-ac1c-3ef626e3fc30"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          GrayLevel[0.5]], 
         LineBox[CompressedData["
1:eJxN0Hss1AEAB/Aj5GJxTK08kuZ+l1ec61K7kXMNKdUp80cscSgtozt5pLij
E2lpPdyVR1e0wrkSRyplnsujMSKsjK6t0121FZv02trve9/tu+8+/343Hk3h
C4wpFMrev/23ASFfvSvMiJ2U/1Fedky1NoedJkIfiqnwz2MKn0RLuKU4gult
AzOHmnw7HGF6ZBZbw4JXx6/geMXBE9LPImkPnHTAM3yHK4N0xkxZ5Zo8uCBz
asPTOThSLfJvC9xMetOyplhSA6dS8/kiqhtpSVu6+oUALhUFho32wXGjsTlB
hDtp9VI9Y1IMr3QbNuZoYPtfYdk/uB6k3d+Wu2Tdg5+dsQ8iVnmStu3SGXkl
wAI7uX65D862uJlNEF6kS6hC9vqLsPNgxnG2Hj7tN8KpC9tC+tUDU39tA5w2
0617aeZN+vlr5yUFC6Z2aiqSEmB20Rva5FU49iDLgdkD9xsRs+WL8DoxL7OZ
7kM63mywpjEKLo0W34mWwr9v9B92aIKTx8T17Rq49WPcgJUdk7TpsiqfFwz7
fmBY0NNhhYod7nAXtspVMRZG4RiXQ8NnTXxJ1/YKbLVseDvfknYiCb6vnJ6W
XYfXWtlz63rhRK5ElLwAL0blCQJcWaSlp7TzC5Hw4pHcoOgCeFsa86THeThd
Mle2ZODv1SE6WSH87ZO1bKwYnhfe1u27Ar8r7JBxK2EnubCTVgXH1NL17w08
NVDEO6eAx20i9G3V8PCtWd7WOpimvJZiUg/vbw+Wjxh4aKZWn9oA99OFcuUj
2MKP3pXTCO8OHdfveQz3JXN2aZtg8xxdypNmOORSlfyC2uDfSn5XVAvcrTL5
QrTCfwATqQeX
          "]]}, Annotation[#, "Charting`Private`Tag$12249#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12249#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$12249#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12249#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
9A==
          "]]}, Annotation[#, "Charting`Private`Tag$12249#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1nc8ld8fAHCJlERUyr5U7nXvxV2EpE8oWlYo8qWMBhIiIpuIEiqjyErI
ng1xnlQyI0qKrFApkqwIv/P7597X+/WMcz7jnPPI2p43ceDm4uISwD///9+t
/5txbxUZNhZXxS++JxGFMVJu61eTIbSJd3EBW/rj/pLgNWSoF1o6MY/972wG
87QAGWxSfsjOYj+OOsJiiJBBKOx4+AQ2q7WCXStFhtSpkM+D2PLmPqojHDLM
Kt1KeYV9+96Di8dUybBUVVP6Apvna3tl4w4yKE7LvnqO/cWLtqNIgwz8BsED
1dhpST07vIEMRoFqcxXY4p+11PkPkcEkpjMpC1vQfqWmkh0ZPra53wjGThH4
kYbsyeCv/V44EJte0c5rfIoMWp8Ox/hhH1yV0XrhLBn6+84EeWNH5IDdk/Nk
cOpPYLtgrxjzi9S9TIYplX3tx7CnPOe6LG+T4eFzxUYqdoh0/66f8WQgFh/W
krFFXr/O8Eskw9dph8pt2IwtCc5pd8kQzfC6IY197qkK10g6GQo/sPhEsEeW
3MluhWR4/EFv1dw7EvExfMwz/DUZAqTl+AlsrnCDPUv1ZFBdnZ70DFv+SpGA
ZyMZrJc2bnuC7R7qlmnbguPxq1EoxeYPmm7b1UGGrbb7ZjOxNX0WaVO9ZFj0
9rl1BTvNed3giRkyTG5OT9XDrnNyKfgwS4bkuSR/Heyfjq3eBn/JEBEednQ3
tvrZWCHNf2TYv0N4VhW73WHTrs3cFDB4svxjOzaPjVRiyzoKtDzlZHFjnzFW
NNDYToE0rbUijzpIRM6yO8qVp4DzLTnVUuxvBY8ZYhQK3CTvPlKAfZZfd8Mc
lQKtkzbemdiOLyy7KhgUiHTfdu4GtrNKhC1TE9/fkjfrgO0q9uUi5QgF8h2U
967DLn5N+ZZgSoF1Q06efNgTni4WfOYUcFcxSlmB7db+d+fIMfx+t/6O6Xac
r6j1K+5bU2C3Z/Onz9gei7uiZBwpEJjIvTcf23sgMVU0iALLjWUMbeyuX0kq
WcEUOChHfqCBrbZ0p4kdSoHTpj1CbOy/4imzRuEUOAAv0FZsH9N0w6jrFPiv
3u8GD7bv69zl5SQKiARI9L54SyL8C57afC+lAG1tWIEadm9V1bRXOQWeFmSH
KWNrNT6LWlVJgQ99kYby2MsjNY+2PqGAjbvG4w3YgaQXQtaIArnGTZ/G2khE
8M0m1N5EgZyUXKNU7LBLPTLPhijwJv7O0ZlWEnG511ySMUKBH7rP5n5ge+i8
3XL/KwXaZ99GDmDbrqsTvjaKx7MMDmrGhvSilVYTFIh/FV2Zjj1fH/x1YYEC
r2h5tP3YLlsUinZuUIDazV0pUW9IhINfZl7RRgU46/KdEYBtNSiVs1VUAbQv
z5a4Yx/MF0lfK6YA20vS/SywKfAvrltaAZ5zG6jJYw+ebr3oS1UA14mwrc9a
SIT5I0+tqj0KoMnlsO5jM14vl/NsDHQUYHlb82g9duiegcABXQUASl/hY+yy
pkMv+PQVoCfYcTQBe33/Vn1TAwUYY1RQzbAbVrcbj1kqwNHNOvmNTXg9WCo5
yHgowOhunfC0RhJxRMb+SqmnApjfbvx2DdtxKCl7r5cC9J6MoV3CTnLhHXXy
UQDxis2mxtgzwT0ujwMVQM3rNY0Luzgv0tv4ugIwi/c1Hm0gEVsXR6JCHijA
8eWcY2OvSYSp24ojQjk43hvKv95jXxmWEL+bqwDn7apP1mB/azHKKc1XgKiA
DZ+isfPvPX05UKoAdTsThZWwVSF6cTdSAKOiU44OdSTiQIjK+X8fFEDs79lt
lS9xf80aqkZ8xOOZGTclYec7OS5u6FaAw7rEPj9sIdPUKFqvAph9oj/VwX63
bU2O5ZAClLn+iXrzgkRY1/X0P55QANZIcGp3LV4va0JNPNdQ4WpS3823BInQ
eLc5cISfCnrSxrdKsLlT8wqOClBhKFLidCx2HKdjtYYQFfJbnwQbYZfbyKGl
jVRouL8c2YxwvioIWgSJCjLS2VlVNXh92C7y3N1BBY9YWZLHMxKhrRjLElCn
QvEv02+Hsfnntp3w06BCQLq8Dxn77vVDVTa7qHCX7vH3YxWJePb4rts2HSrw
+R+01sReEtToLTCgAslf+fLME7wfV118RDhQIVqTaN71CO8fI6/WGJ+mgonq
kpEAtqnwJquBM1TQWJS4+qmSRGw7XcbF7UwFdWnahovYL0Um9uu44/na9wfl
VpCIVY5ne175U4HlTZxcUU4iIrdYrWhKoIKt6556t2K8n+jkHTmeRIWX33g/
q2Bbusxn/bhDhZ1mS7f/FpEI2svEAwL3qBB7yGEyALv5/Pubh+9TQbqya29E
IT6vXhvItxVTIfQos/tKPomI9dxz8H0DFTSjIsp35OB+nl3Dc7CJCmW2smun
sklEjHf7M6KZCv4LniuKsaN97ZTyW6kgu7irSR77WlCYcMh7Kpjr3Xop9AD3
2/WGD4wBKgjbXOh8k4nzn2Vsf22OCj97huIW7+H9S15cinueCr3Kk2/zsb1z
Bt97LVChfcvze8exvfIu6NktUYGjxe57lIL3j5LbVA0eGnx9SB11TMb7QfXH
ia9CNLhHGb77NIlE2L0/6adDpsHcUnj/wk38fcAr1FNCoUGaY2RgCna86jMN
EpUGw9XX72lh1yeIzv2j02CT/zfjgDgSoWTZ5F7JosGY5ELwfAyJmOvlnFHQ
ogGvupHHh+sk4vo3viNCZjSwDeCJlw/H56FYRYmfOQ3K9q69U3mFRBD7bdf/
PEoDS9c1vPuwJx8+a6m3pAFD5a2AXRiJOHbOTT/4BA3CjNNbboeQCLnJT7um
nWgQbDN88nMAiXi0UEDpDqbBU6GPwr+88HlzTTT/TCge//g/ERtsqlSA8kwY
DfrX3IY3F0lEspaRqvBVGlyyi5d86EkigoImdfRu0GCSK/nR0Qt4/+PbYVN2
lwanRI0vXHUhEX0ixO2ochpwPb8XpmVPIhIzKWJilTSgTqe+irUjESac2OQH
j2jgOvibf8gW96OZbebzpzR4cVw3LewkichN5CmZJWhwOvVS2zNrEnFBen+z
XQsNYpvWiM0fIxF81HZuzREaGAlFXXtwCMcrXP6z8CsNHKtXFAwfxOfx3O1O
2e80yPJkNm/F1n9t8ZDvJw166rtXpOzH/W0/YNzxmwZ/XOfJIftIhEDqRJrj
Ig1G2m7qSwGJEN4otDtpIx22R7Z/C2Dh82NhgiIgSoepK2ouyUwSUTrYLhKw
mQ4SeykNjxg4npL4EXtxOvx+zZofVSIRtwykoxkkOujP3ZLToZEI0auKn1/T
6PD84bDZk60kQmLpoO+MNh1K33AfLduA+3nv96sRunSIlw40jBXB/XTtSqL4
PjrMuHqXnRMmET0Szyu09tPB21G1UlYIf++pq05cMaRDaKuk20V+EiHjSXLY
bEWH6C/X17zlwvvzzykDNU867FhpV3+pS4a4xY77r/EiHbTfhf2rfy9D8Pgq
O1t502GIJh2xsUOGGFrjeDXQlw5ir4Vvp7XIEFnkvhf1QXQ4QWcKX6uVIch2
DWoW0XTQM1Ybys+TIWifUuR8sunQepa0ac5Hhqhsk/nAk0uHFsno8S4vGQJe
p0fdeEiH3hj36goPGcK0PGvqfgEdIs/+pdq5yBD+0QV1rWV04JOktF07KUO0
aVc7bidwvnYbJW7WkyE88npK27ro8NDK/faYoAyxlG59+vgnOtQWH5zTXStD
RCT2S4x000GQP7AhgU+GSAkbCl3opYPk3/EsZS4Zos7mp7n8MB3SGPGt5N/S
xJaN/+Z9f9PBx7mDptouTVRfltAh8yvCLtGxAwUx0kRvg6h1wlpFYAnm/iy7
Jk1wbRa5xLdOEV6m2ctURkgT2iWri74KKYKskgG1IFCaqB+eFs/ZpAhm/1l4
ObhKE+0GbZMUWUUQLNNbWjCQJr6RwjKoaorwqVMuPne1NMHvElh9R10RJOsS
hiR4pAlalW8X/05FcH3ZYnl1WYpwMXMX/LFLEdK2D5eYzUgRf67a+OTpKAL3
BKes7IsUsTSpbkI3VIRf68MMg6uliA2vxlconVKEp7T73GbnpAhT96w91acV
4QdhNlFxWoqIl7EKOnRWEYqJ0Kr1tlLEFp8GLidnRfjpc6OnzFyKkFa+v5zt
rgiijttHi3ZLEZQki0XZAEXws1c2vLxeitA893JuU6IiCFWY3zQqkCQcNt35
tdigCHbX7l0y7ZAgtMQab7s3KcK3uQHRuGYJQlRqfufXZkWISDzQ3vBKgqjb
ZhnR1qoIfBOpqeTHEgSFIy6b+V4RmtjDPsnJEsSoyR0T/QFF6Fe7fMXRXoJw
jblTETenCC0db/xv/RInfNfe9SWTlUBcP0hIfkqM8Dh/ZV8VRQl8vHjV1H+I
Ec4dbsKGVCVg+f+L2jsoRljd1c++qKgEB10Ha/a3iRFatJn2V2wlQGIxMVz5
YgTXQWOqPSiBTVeVONVWjAiN5PuYZqEERm91eIIbthDX13ioil9TAl3tmhly
2GaC9AavtF9K0L6yZ/Bm/UbCS61DM/+gMnyp5gqaXyVCND3k1fpRpAxvm9aJ
q/9ZR7gP1I0/X8WA0Fy9sgq31URNG2khg8OAYz4ONVx+K4mob0XCjioMkB54
frj2zEriGNduClOVAb3XX2fcMF1J/FH+zwztYEDG5Pn6w/SVBOVGUlG3BgNY
zSe2W/RwE7GHRew37mGAP9OivVyLm7BvXNkSdpgBuzxlomsEVhBrXo7cO3OK
AQ8eb57WS11EcuGlZ+ROM6B5yaTaPWARaRzwZ/VgE32jo+U2i8i5bVOd4VkG
vDw0eyWAtIje9OiOqTozQHlqQVEp8x+6NZ2xk9edASbU2uU/+QuIRLbpSvdj
QOu0yYRS+1+kPkrNOO7PgKfFM5oHK/4ik4IZp00BDDhw1kk2IPEvCmFHL0cE
MqBrnXSBos1fNLK7Wt41hAHzC3YPssbmUN4xCU+tqwxINd93dFlwDqlGfhDu
vsUA5+N6tTp2M8hmkcvl/m0GvEnOWCmnN4MiXKmN5+IZYF9U7CtBm0Efzf2C
uRIZMEEfm7T5M40ub936Z/tdBkSGBisohU2j589c3rmmM2DGsTK8q2AKHfrF
m7CqkAHblVbpbN3wB3nYKv9pxb61UlT76PwkSnl/zDCpiAGFol+0swYm0XhV
Hh+9hAGlA1fFbhRPotgIY2/jcgaoLQ/UJhpOok7ZFIvkpwzgND7t8477jU6a
ciRZrxkwRDbRWkebQKIyRk2z2DcU+YaaN02g5u9OPtX1DPhivOlPJtcEUgvI
7NJvxM/v1pNnFPxCgg9Fbtu0MEDX+UygIt8v9Gx5Yt31DgasWu936fmLMSSa
V7D8tY8B2S5q7y9a/0DNng2FBf0MsJK1Kryt/gMFw/B/FwYYMOtM8u3b+AON
vZd8tjTIAOD55PynaRS95LrmvWmEAZ5n+cTFNEeRm7njb+2fDPj5wSlXa9t3
1LyC/CVljgFFwqlbVm/4ilq8Avaa/2XAts7PxKnpEfRm7EO24DwDKsxYW79+
GEFvP0Y4BywwIHq3ZvahlBHUWTI6fWKJAbJyK+9nK4ygvpOFq7fxMOHZ9gdy
YfrDaPK5itJDISZMbPQrkLj3Bf3ZER1ju54JoewVTb6hX9BUwcikuDATrrhf
ps47fkGzSQmPokSY4MD7FYzVvqB/bn/h3CYmPlZiXju8G0Sr5KqPMCSYcE3o
sPJ6kUEkFqx7qVKeCVYJ9u55Gf2ImjN/zp/MBEbvOcMXkf1I802x7T4KE0aG
PqN5935kLS51qFOBCa0UtY7XOv0oo3RaeobOhDdaCnKFLX2I/uXBSxU2E8jq
1kIWDr1IS3fN+ordTLCOaS9OILqRoSPi8QMm3F9F0aAldqMTMZ5/dfcwwXJr
Q9H0+W4U0jMw+E6bCeNcN2yVSN2o3uNpxdReJkhXFK6ghHxCxllOxzmHmPBI
Y+I675GPyH7Vmwdlx5jgfIhbqmbLB/T8A2HgYsGEYycpUX/nOpF0btkMxZIJ
7prkndYfO9GHg0n77h1ngt3+mvsZdzrRgVj7kQhrJkSoZQSLyHQiZcmF7db2
OF4HmZWnlN+jeSYla7UrExrR4Pk05w50dKXE4RfYd9+te5Fn3IHK362b9nNj
ArdMSM0n1Q50zuuP7h93Jqi/7+TJXNGB+p/VDH32ZMKZTlmVrsR2VKdntq3M
lwn9D91ai1veotj/gjP/C2eC8gf7mWXDNuRz5fS9jRFM0E7rKs9Ub0P2RYeS
mrDvyzFH7Le2IbUVm2+oR+L4FgTI/uOtqPd+ns+m60zYuHXcNwVaEf3nO+OW
OCaUX4jrvPSrBdX7kLl23WPCwxkx1ObZhEozBRb+YPeW77eaMGxCyc2/px+m
4vy9PhmgTW1C56Wf/diSzoRUtTIrv75GJFpr9GEqE7+v61f2vkONyH6NT2F+
LhMcCb/p30oNaDmh2UqyAs//Xvt2gc2v0Zyr0Ogg9scj382NpurQ5H4Tr9xK
JgzWSJu/fluHRhY+xKo+ZkJaAin70PU61Gzzpc6oigmX+ByW81fVoTvkeUbY
c9wvTWg2gvsVUnlE5h1vYcLkUIf8oOQLpBTjGFf+hgkPsmvvLy3XIsrZAhnf
Vib4Pb/dsvdLLZKUYGusfsuEy3xCjCMPaxF3gNZ5uXdMWGvT/sROoxa17TP7
aP6JCRUfNg9QbJ8jp87gAjTChJfg3u+RglCxJfe491cm7GzkiyxyRWimN0iJ
9Y0J7Z1vT1N0EQr8Glh0/zuuD/92j44fNejWnH/J1Z9M2CDV0c6rVYNqxH0r
jkwyYbVQ9OrbY8+QiM2F6q+LTNjrc8NS0+spOvplcjFtiQn8d5M33Dd+ipJP
u2tZLjPBuEXKCuhPEdnVDTVzsUBzx5mATYNPkGbQ+eclK1nwNHi9NdXoCTqV
6fTKdw0LeiKWN9SqPEZPvtq1CG1iwZT4k6cftlUiQck9aV3Yp8REbuZyVyJ7
I+kL6aIsSL8e41vUX4EEn3RtYW9hQfxAlb55SgWyjTxsby6B7//Px49PrAIJ
KO5YSJbF1/Xm5irFypGNO78CVYkFin354aZapaj8wdeFSWxWz7sX4nKliL/7
5ZsqZRZ8vbOCJbAKX9cJ8DjMZAFZVznj/JsStHrTFHLlsIDf3bKTebIElT76
bP5IgwUvHp3+5BxdjHgXi0N19ViwWznenC1QiB70NPJz6bOA11KJKO0vQPue
DcVUYftebrvlWlGAIny3pLAOsKBAZVTmgU0B4p8PqCAdZoF9vbPmr8p8tH7W
YOSfCQsu9NfxFrnmIcnfP/UqrFlwZOlJW7ZgLqpuW/XG1QbnY6XSb5PRHGRd
TDKln2CBqclrS1ZdDko9b3oi8yQLrghaDVzzz0Fy41XesfYsgPD3T3J+ZyPK
j8jcc44siBY3aNEceIDYw5S18hdZEGXSPvfny310QlJl6DP2z7J1n3bU3UfR
R/ZU3/ZiwerOpsasnPto9LnFed5LON//ZCaWzt1HafciO4Z8WfBo67OJ1PlM
JHjs593MIBx/ks6yo0QmGm0sosteZ8GvVfLXH1xKR1u4n/F+xI6PuXuCOJGO
9qnX98ZEsyBcdMJ/US8dpWf3x3DF4H5Y9u7sF01Hx0KFp/viWOAFOQn7KtNQ
3a4L1fcScf3U93ypn0lFGcWqBpL3WRB4xuuUwc4U1J+Q9uQLtn991GMxwRQk
HcC/PS+LBY6jD7KoA8ko6XDvgno2Cz7m3smRiEhGMaNhuUcfsuCTYM1HpY93
kd+29zw3i1lQKhypQITfQccSL1StqWbBm/Fa474NiSg+4LP8W2xyzBxxdzwB
vTulF5dYg/sj+3h2bEMCMlSROEsmWDCjAj6UwAS0r71WdO8LFnD7XH4y9yse
cQRE3AMbWEB3bjH4+PE2Egospsy+Z4GwsieP7bubKFHkqF5JJwsmPzdYPHp0
E8llLTo4fWCBR+4Cl+rdm4jTeCCzr4sFxp5exwptb6JjG4el6rtxPYri6kL/
xKGMHLENSQMs+NJnEBwvGYdU3wYvaoyxQE3Yoq05MgYhOwXJaWy9rAuv+txj
kP5Mq0bROAu6HzTs3nQ8Bh2XkPLeOsGCM2PKSyO0GBTo8Ghy7R8W5CoNRsO9
G6jx74+vPXMs6NqwjRO4IxpZy5m1+/Ow4VTB6rLhxCg0a28Ros/LBg3fHZcy
zkWhmOz/OCKr2HA2qm0sQzsKvaCfis/iY0P91y27zo1FIsoOL8tmfjZU7DDb
ILkvEv0+mDQoJsyGhfmrGVdXXkWhnp8ny6XYkGGs8mEh7wqSejyQ6S/Nht/n
XMbORVxBlfPDpvoybIjLcirY7HAFfQ8Yr+wmsUG6vK11vcwVZBC57MO9jQ2z
Eta7Y26HoS2psiuNqGwoseIJ8rkWivLqHTb8UGXDiaNKms2pwajd1mpzyQ42
xAd4jEuGBKO5fyYSXmpsOOxFQUmngpEuE7au1GDDbdGbBaJKwagnSZwtsYsN
3zbNuIqiICTo1GpyUIcNiRHurlPfApH7OvW4PEM2CKgdtxkt90eJ2crxbkZs
/L27RjY5zB/V7JG/s8OYDWckhQrjzf3R2osbMl6Y4HzdIJzs//qh+71jJd1m
bOD2VT9lru2HOosy3q61YsP6ZoUllQFfpG4iIOx8Bs+f8O8XNrqEHibsrt92
Fo+v8PhhAe0SkvzsHvAZG4UtP/Hju4S4znwcM3Biw7mHDpefIG/02u9BI9OF
DXPB8d4JLG9klguhsxfYQD3UM1wg64XcuDxngwNwfRWC+Ky3eqLBvTmFOwPZ
EKwSLvCXxxOZRnU7TGFnc6+oRiMeSE1U+51DMBuiFTbJtz70QMs0oRL9MDx/
+3TTXxwPdP1orqNgFBv6pEJkuYwvoNzCz5+T4tmw9HL1y+YHboh634Vsm8CG
rjd2HP0oN5SftOxKTWSDlWBmyPh5N1QcKstTlcQG5aFT5U/V3VClpQO1J5kN
N56W0g+0uqKXq8YuSmeyQddilrGO2xX1W/8Tyixig6aJl+/o6nPI1vS6hVMx
Gz7Jat/L6nZGQ/vx3SW431rfH8wudEZfOaD6spQNW1TqYy6bOaNx/lCr4Qo2
HF9c8d32gRP6V7k2l/yMDaliJYq1po5os5CEdn49G4jwqCerBk6joaJvWqcb
cD1Dxuf21JxGpUaVO+Ua8XzazduL7p5Gh+KMVRKbcP1vGinKHT2NgjZFUELf
sMGN8i7Wou0U+iExLWj1jg331pR9etfkgBCltXttP37+8FkgDduhaw3JXXXY
02nCU+R6O2Tp6Pg+aIANjNjhdos8OzSVx9s6O4jXy09hqZ3udkhBWbP2yzCu
5/BXnbEVduimSm5O1Q82WFDN/3VTbNFp7RBPp1kcr/LgMbObJ1Cths4ruTk2
VHJFq+X5nkCS7JWbPmGvSszolbM/gdq2hpTrz7NBjSuh+qLKCaTBG/Jn+yIb
OoTkth8ts0EC9cFu/dwcOCHSm73HyBoVHw4+ZybIgfm8bwUrHh9H/Pu0qwWE
OLDt5pKpS8xxZK/Fve4ldpyU86UNZ48jMeXgfJYwB9aP2M3xShxHweuDfwht
xPeHWYiHBFki046gs41iHJjppVQlHbNAc8eCHHZv58DKhGkRRcWjyHZFqt4q
eQ4cTPSi6K85ippznym0YPePSLTfGTZH6fOzY5YUDui3akQO3zNHB5JdLl6k
ceB9ScNevo3mKLnveHgBkwM+Qv5H2KvNEJxSzZXQ4sDd+M3l3KJH0ENB06hB
7Hf8NXoX5kzQxkdu53J3c8DasDRduNsEfecrYO7YwwGyXsj1zjQTFJe79amJ
LgfWcOJTLymZoKGf65uuHsDxhqQPfjM2RuEXfvycNecAfDhktve8IdJ8vTe4
5CgHHHXSQ9/tMUST4mmbnY5xwG/J9WTWRkNkXWuq3WvBgYwc9xz+KgOkKlyT
8NIKu9iK/pHfAA0VxmjH2nJAdnL0lUrlIQSjKolUFw7MHt96M0z9AJrZFaM4
hB1e0Hw1ecMBlB87WptyngPixw0PjY7tR5vVU8fWu3HgsED8HCVzPxoPX60z
e4EDHqlcJ6nr96Pk7d1jLy5x4NKrqxfn/+ihuROBOv+FceB50pvFlv69aIc7
y4V+hQOvyK05wdV70cWQocQF7JTLRtqud/ai6Sz98aQIDujmybdPme5Fk6Pr
kzqjOGAhGOaf1KyLfnqkjxvG4foArXBlnQ7qi6hN0k7lQOD5qb8CfXuQ9B2P
l8JpHFg1vnqfWu0eZJ0n/6sf23bduo1xWXtQT0ukbkAGBx7sO8Lf5rwHdYkc
+VWVhfO7rLD/3CKg9uQvuir5HChlb/w8Jg9IuPD2eZ4CDkTvY8r1CQAyQnp3
OrBfKR7onxrejVoH8n65FXHgYsJdZauA3ahZ3uNOYSkHdshLX+ep1EJr1eRf
+ZVxgEf4xrJ3qBY6sL/r16FyDgz9C7fedUQLNThp7v1RwYGN7F19Zb93odV+
4+efVnJgdOjWCofnu5B+dNqdq484YBmQK2wfuwuFp5q8OvaYA+Pshtjik7tQ
XTHPBPkJBzhy63gPsHah/wEOio4M
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12249#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwV1nk8VN8bB3Bm7GQLFZJKzZhFsyEqPSgp+1IkS8lORLaSSIpC0WYJKRTZ
hcrSuZVdUYo2fCMhlaRCJL/z+2fm9X7dufec8zyfOeeudg2wdifx8fEp44//
f281/sHKFqLA8nOxR757kYnS5JWB0iIU0Dprkj+BrfJ2Z0WMKAX+ixrt+Yb9
1/sm21OCAmYJqdyv2PcTbDgsWQoMyRV8GMPmdFVzH6+kwLUzJL4h7PV7jmmN
8ChQ+f650UvsK9m3Qu21KCBr2WDRjS0w2l3Trk2BpzGGdi+wP4bRtct0KSBA
lnftws5J79MOBwokjF706MBW7NfTETOlwHaqmvoTbEk38maNgxTIXmF8ugI7
S+JLDnKjwPFp423l2IzqbkErDwo8VLPiL8M2EbrZdcSbAuXiviHF2PEFcPBB
AAUklxzafhub/1vkuW3HKaDU9vZkJvavkNk3DlcoQKY02Z7GPqXyYcvXq/h5
1aadp7BlW1puRqZRINzDf3sMNmt5ql/ONQrskQ9kRGEfqtXkG7lBgRelIv3h
2CP/giiBpRT4LC/f5Iv9Nu5bSFwLBaLQn0sW2Hxx5vr/WinQ4ZHyxuz/9TtT
JhHSTgHa3mxFU+yg2MBc12cUGNggmmqMLXby9/MtLymQM3L/sD725mML9F8D
FJilquZx/l8/vyVD+6cpsFbm/YQsdrOvf8nrGQrciQh+J4391acr3PwPBVqK
+J5IYut4p0ht/kuBoID/zolhd7vLb1lGosKHq9q/+f/fL5eVac+WUCH1+zbW
pCeZ8LJimuuuo8KB3rmV7dgFi0GocD0VYgYsilqwx0rus1ZQqbAiYZVmE7a3
2LalszQq7EpU1COwfZ44vKlmUWGh7LtaDbafZrwrezMVWKtj9G9gH17xMZRq
QwW7DOnkYOzyFupYqi0VNp3YezMQezLEf6/wHipYsP3K/bEDu/9sGrGnwo6W
XuSFHZQgzZ/nTIWUFfJFjtjBC1sSVvlQIdyzvsQQO3ww7brCSSp0LCNrSWK/
+Z6umR9DhYjffV5i2Bv/ZXRwY6lw8nLrFSHsP4pZM5ZxVFCTKu//50Emjtne
sEhIooJ5+gO179gRLYWLi+lUMK20ievEPlFS6/K5El/PdLePxx6oq/sdVkWF
ufe+taew9drrE4RqqJAXpicfhb048vDe2ge4Hs+VqkOwo1WfSDkjKjSmhme6
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
AQ/cuOt+Lucw0f8AXXWQQA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12249#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
oI/jfcmR1xQ1FPGOE6o48HjHOHNswAT9D87lVps=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12249#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
7IpMDw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12249#9"]& ]}}, {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
     AxesOrigin -> {11.512925652936358`, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{11.512925652936358`, 
        20.72326564898028}, {-8.4179503540145, 8.417950354014497}}, {{
        11.512925652936358`, 20.72326564898028}, {-8.4179503540145, 
        8.417950354014497}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {11.512925652936358`, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"variance / dB (10\\!\\(\\*SubscriptBox[\\(log\\), \\(10\\)]\\))\"",
          TraditionalForm], ""}, {
        FormBox[
        "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / (log scale)\"", TraditionalForm], 
        FormBox[
         InterpretationBox[
         "\"degenerate OPO\\nintracavity and PD loss\\nsqueezing param. x=\\!\
\\(\\*FormBox[\\\"0.45`\\\", TraditionalForm]\\)\"", 
          StringForm[
          "degenerate OPO\nintracavity and PD loss\nsqueezing param. x=``", 
           0.45], Editable -> False], TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", "1", 
           ")"}]}], 
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
           RowBox[{"degenVPDloss", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"Tin", "=", "0"}], ",", 
               RowBox[{"Tloss", "=", "0"}], ",", 
               RowBox[{"Rpd", "=", "0"}], ",", 
               RowBox[{"gsgn", "=", "1"}]}], ")"}], ")"}]}], 
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
           RowBox[{"degenVPDloss", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"Tin", "=", "0"}], ",", 
               RowBox[{"Tloss", "=", "0"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}], ",", 
               RowBox[{"gsgn", "=", "1"}]}], ")"}], ")"}]}], 
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
           RowBox[{"degenVPDloss", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"Tin", "=", "0.1`"}], ",", 
               RowBox[{"Tloss", "=", "0.1`"}], ",", 
               RowBox[{"Rpd", "=", "0"}], ",", 
               RowBox[{"gsgn", "=", "1"}]}], ")"}], ")"}]}], 
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
           RowBox[{"degenVPDloss", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"Tin", "=", "0.1`"}], ",", 
               RowBox[{"Tloss", "=", "0.1`"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}], ",", 
               RowBox[{"gsgn", "=", "1"}]}], ")"}], ")"}]}], 
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
           RowBox[{"degenVPDloss", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"Tin", "=", "0"}], ",", 
               RowBox[{"Tloss", "=", "0"}], ",", 
               RowBox[{"Rpd", "=", "0"}], ",", 
               RowBox[{"gsgn", "=", 
                 RowBox[{"-", "1"}]}]}], ")"}], ")"}]}], 
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
           RowBox[{"degenVPDloss", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"Tin", "=", "0"}], ",", 
               RowBox[{"Tloss", "=", "0"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}], ",", 
               RowBox[{"gsgn", "=", 
                 RowBox[{"-", "1"}]}]}], ")"}], ")"}]}], 
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
           RowBox[{"degenVPDloss", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"Tin", "=", "0.1`"}], ",", 
               RowBox[{"Tloss", "=", "0.1`"}], ",", 
               RowBox[{"Rpd", "=", "0"}], ",", 
               RowBox[{"gsgn", "=", 
                 RowBox[{"-", "1"}]}]}], ")"}], ")"}]}], 
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
           RowBox[{"degenVPDloss", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"Tin", "=", "0.1`"}], ",", 
               RowBox[{"Tloss", "=", "0.1`"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}], ",", 
               RowBox[{"gsgn", "=", 
                 RowBox[{"-", "1"}]}]}], ")"}], ")"}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                  "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm], ",", 
               TagBox[#8, HoldForm], ",", 
               TagBox[#9, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.835311766310601*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"c9354752-9b9d-4290-8be6-5b23d3f22ef8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"nondegenerate", " ", "OPO"}], ",", " ", 
    RowBox[{"from", " ", "above", " ", 
     RowBox[{"calculation", ":", " ", 
      RowBox[{
       RowBox[{"V", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"V", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Vs1s1", "[", 
     RowBox[{"w_", ",", "Tin_", ",", "Tloss_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kin", "=", 
       FractionBox[
        SuperscriptBox["Tin", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kloss", "=", 
       FractionBox[
        SuperscriptBox["Tloss", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ktot", "=", 
       RowBox[{"kout", "+", "kin", "+", "kloss"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{"x", " ", "ktot"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"8", " ", 
          SuperscriptBox["x", "2"], " ", 
          SuperscriptBox["ktot", "3"], " ", "kout"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
           SuperscriptBox["ktot", "4"]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}], ")"}], " ", 
           SuperscriptBox["ktot", "2"], " ", 
           SuperscriptBox["w", "2"]}], "+", 
          SuperscriptBox["w", "4"]}], ")"}]}]}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vs1i2", "[", 
     RowBox[{"w_", ",", "Tin_", ",", "Tloss_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kin", "=", 
       FractionBox[
        SuperscriptBox["Tin", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kloss", "=", 
       FractionBox[
        SuperscriptBox["Tloss", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ktot", "=", 
       RowBox[{"kout", "+", "kin", "+", "kloss"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{"x", " ", "ktot"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"4", " ", "x", " ", "ktot", " ", "kout", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["x", "2"]}], ")"}], " ", 
            SuperscriptBox["ktot", "2"]}], "+", 
           SuperscriptBox["w", "2"]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["ktot", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["ktot", "2"], " ", 
          SuperscriptBox["w", "2"]}], "+", 
         SuperscriptBox["w", "4"]}], ")"}]}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"10", 
          RowBox[{"Log10", "[", "1", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1s1", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0"}], ",", 
             RowBox[{"Tloss", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1s1", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0.1"}], ",", 
             RowBox[{"Tloss", "=", "0.1"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1i2", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0"}], ",", 
             RowBox[{"Tloss", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1i2", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0.1"}], ",", 
             RowBox[{"Tloss", "=", "0.1"}]}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         SuperscriptBox["10", "5"], ",", 
         SuperscriptBox["10", "9"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<nondegenerate OPO\\n\!\(\*SubscriptBox[\(V\), \(s1, s1\)]\) is \
on-diagonal, \!\(\*SubscriptBox[\(V\), \(s1, i2\)]\) is off-diagonal\>\""}], 
       ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Gray"}], "}"}], ",", ",", ",", ","}], 
         "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / (log scale)\>\"", ",", " ", 
       "\"\<covariance / dB (10\!\(\*SubscriptBox[\(log\), \(10\)]\))\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
     RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8346928734187813`*^9, 3.834693199941409*^9}, {
   3.834693619692971*^9, 3.834693740360461*^9}, 3.834693777616811*^9, {
   3.834697161424477*^9, 3.8346971673177567`*^9}, {3.834697298929451*^9, 
   3.8346974603004713`*^9}, 3.834697559333034*^9, 3.835129156180674*^9, {
   3.8351292374617043`*^9, 3.8351292579049883`*^9}, {3.835142835871221*^9, 
   3.8351428837988358`*^9}, {3.8351429579331617`*^9, 
   3.8351429662695837`*^9}, {3.835142998929871*^9, 3.835143096501708*^9}, {
   3.835143502958074*^9, 3.835143506615409*^9}, {3.835222075505953*^9, 
   3.835222113388472*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"f2455dc5-ea52-4213-a106-86ca368c0212"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            Dashing[{Small, Small}], 
            GrayLevel[0.5]], 
           LineBox[CompressedData["
1:eJxN0Hss1AEAB/Aj5GJxTK08kuZ+l1ec61K7kXMNKdUp80cscSgtozt5pLij
E2lpPdyVR1e0wrkSRyplnsujMSKsjK6t0121FZv02trve9/tu+8+/343Hk3h
C4wpFMrev/23ASFfvSvMiJ2U/1Fedky1NoedJkIfiqnwz2MKn0RLuKU4gult
AzOHmnw7HGF6ZBZbw4JXx6/geMXBE9LPImkPnHTAM3yHK4N0xkxZ5Zo8uCBz
asPTOThSLfJvC9xMetOyplhSA6dS8/kiqhtpSVu6+oUALhUFho32wXGjsTlB
hDtp9VI9Y1IMr3QbNuZoYPtfYdk/uB6k3d+Wu2Tdg5+dsQ8iVnmStu3SGXkl
wAI7uX65D862uJlNEF6kS6hC9vqLsPNgxnG2Hj7tN8KpC9tC+tUDU39tA5w2
0617aeZN+vlr5yUFC6Z2aiqSEmB20Rva5FU49iDLgdkD9xsRs+WL8DoxL7OZ
7kM63mywpjEKLo0W34mWwr9v9B92aIKTx8T17Rq49WPcgJUdk7TpsiqfFwz7
fmBY0NNhhYod7nAXtspVMRZG4RiXQ8NnTXxJ1/YKbLVseDvfknYiCb6vnJ6W
XYfXWtlz63rhRK5ElLwAL0blCQJcWaSlp7TzC5Hw4pHcoOgCeFsa86THeThd
Mle2ZODv1SE6WSH87ZO1bKwYnhfe1u27Ar8r7JBxK2EnubCTVgXH1NL17w08
NVDEO6eAx20i9G3V8PCtWd7WOpimvJZiUg/vbw+Wjxh4aKZWn9oA99OFcuUj
2MKP3pXTCO8OHdfveQz3JXN2aZtg8xxdypNmOORSlfyC2uDfSn5XVAvcrTL5
QrTCfwATqQeX
            "]]}, 
          Annotation[#, "Charting`Private`Tag$12993#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwV1nk4lF8bB3AJCWWdyJa1GTNkNrL1nNtSliQkScpeoWSXJLskJL9kqShS
yZ4shUpkpxJZkuwKyZLI1vu8/3B9rrnmPOfc53vfz0g7XDB3ZmVhYanG//z/
PzKYo6ZzEOHoiws2D9cIUJAg4cnHSYT8TgOjB7glew2Lw7YSwTiqgJGOe80l
k3aGhwiSfex/k3FXXD9CpwoQQcdf6dB13PT3pYy3EkTwb48heOLebXlJdZxJ
hFjxpkU13Enpj/ysVIkge2FVXwU320RHWfNeIgjM9dyi4R7xp+wt1CCCSbKf
JBn3/dT+vReBCHuu2s+K4hb9iqlzGRPhnf7fq6urBNjutFlrjyMRtr3+erAC
9z2eqfuvnYggVeMeUYJbsbSD3ew0EQpvBJUW4D7Ikfne24UIv0+MsWTjjn4C
ji8uEKFW7obmTdybfgbF6F0mgsdcispZ3L99l3usk4gg+vD7MC/ucMnBfdO3
iXCgd0KAC7dAQ0NmUAoRDIvfqbPhpookn7t/hwgPJkbcllcIcP6lCsv4AyJs
fS9oN4h7fMOL6FlABEUp7cAC3L1Xf/pebSDCeOF3Xl3cLFdNtDca8fXlL/lp
4d4dVcjj20yExv5Tn1Rwe0V4Zjm0EeHDsR8XSLi5Qhc/7PtEBEqvB30bbq1L
65TfA0QQ8vT/0PkXr9+5bcN2f4gwp3GY3QZ3vZt7fvcSEYIN9+60wD3t+v6i
yV8iPGILlzbGre5yk1drjQi7/TfxauHucCbsE2YlgWFyxQkx3Gy2Eilt20jw
7HtBXvcyAc6aKZloyJPgrYt53gHcT/55vc7ZTQL6etnxfbi/51dQd5JIcKa/
/C8DtwuXnuAymQRymdr80rhda617SqkkUNQ+endliQDnVKIdaFokaL4hxZ+L
22PniB/pCAluiHqPsuAuaiB9T7YggXEk96vFPwSY9XU/vsWSBLd2ZV6dxO3Z
8Vdz3IoErkLuk59we13n2/TwFAk8FZemsnH7rO+7vsuVBD7D/M0HcF8cSsnY
EUoCvwGP/YGLBOj5laqSHUYCtXsZbedwq22ktTAiSJDAaYBO4f4rem/J9CoJ
EvsCBgD3JYsHh6/HkaBlfygnO+7Ahpx//1JJsJZ3dir6NwGu5L+0/fGMBEZW
MiNBCwQYqKxc9H9OAs4X0ebncGPNVdc5ykjAonLnkTXuf+OvymVfkCCoQ3RN
FXeIVC3vqdf4+VI7js3MEyDsv5bXHS34ej8rco/hjgzo31U1ivvyh3DBOQJc
HrAUp47j55tsT/83i59X96PIwwkSxH6euzuF22FbPX/sJAlG9Ta0a3HDg8LN
NrMkeCp/i+yJe6UxbGJ1lQQBsMm04RcB3EUUCjUFFSBm14niEzMEcA7Kyi0U
UoCl3Ve+6OK2GZZ4IrtDAc/JjhEK7oN5Ag+4dypAldy3a6s/CYBXIvGLpAIU
GJpQU3EPn3nvF0hWgPMKaSVt0wSwLPfFKrUVgO+RprjoFN4vl3NtTXQV4Osr
isLqJAEitIdChvQU4JH6dfZ+3CUtxrVbDBTARtiFcg8336CsgYWJAtgRtWQl
cDdxdpj9tFYA79GkK4I/8H6w3uO8y0cBhofPZ3ePE+DILqeoZ74KEOt/ge0Z
btfR1Mf7/RVgbvESKRZ3qjv7pNslBbiVBq8Q7j9h/e4VIQqASZ7a8XAMz19u
zEWzOAXQJzXK248SQHZ9/Hr4IwVwV+TmejpEAAvPTUd4nyiAq2G/bBDuqDEx
0Ts5ClB9sHL5MO7vbaZPnuUpQI7Ev4+/BwmQl/6ybuiZAsSfY9mriVsV4tfR
awWY4Z9zezlAAKNwlQtr3QpgW9F7JvgLnq+lw6rRvQpgsmczjyHuPDfXdcEv
CsDlOmgjgJvXIuM6ZUABJnmrWR/2EaBTbusT61EFIClzmNX2EuBUff9gxawC
7E/JiJzrxvtla4S571YyLDs23OLsJIBGp3DIOBcZSJiTZssnArBm5OYf4yHD
ikhcTBzuROYnTg1eMlS+vy3Fj/u5rczrDSEybPedkxDqwOtV+oYSLUUGizet
M5wf8P5wWGe7s5cMEtj+Q09bCKCjdJPOo06GlJ06XPa4uZbl7II0yJDlJWYr
jPtOnHGl7T4yKMlLtIc1E6Cq4o6nnC4ZnujoFVs0EWBju8ZAvgkZFAkfOEfr
8Xlc6Vf+xpkMBhRiRV4NPj/G3201O0MGquLdoUO4LfgJNkNnyWBvdjxg5g0B
5M6UsLCeI4OoPDarhLtOYNZQ14sMwoFuI9mvCMDh6tL/7goZFnI37QyoJECM
iM2mlmQycBj6GT16js8T3dwjJ1LJEGVyK5CB29p9JXsqjQyszoLrr0sIQKlL
MeJJJ4OUh/jPz88I0Hqh679DD8lQ/fiU01oR/r5qMNn9oQj/ft+ft3L5BLjp
q32wq4kMEXJZ10ce4nle2sp2sIUM3OaOc/a4Ey52VL1pJcOH0h0Z37IIEB/o
uCfvPRlK9tq392QSIDY0kj+8iwybgiLs3t7H8xbX1E0dIkPIn7funnfx+meb
OcUukyFzV2rL3v/w+bVbVIJ1hQz36b8o9xLx+fdkuMt/Fa9/1+Znm3D753rr
O26QQa/iHbkxAZ8fxUlkDTYKlFqP5RvF4/Ogund2gpcC0ZUJv+SuEcCxyz5I
l0gBAY7aF/JX8N8H7Lz9xSQKxKWd2OkZRIDbqlUaUmQKJDzqDKm8TIDG5B3L
a4oUuBdj5nAokAB7rFu8yugUGEQRB50vEmB5gHlWAaPA1EntRCcvAsR933KE
9ygFRueDA5Od8ffhztLiIEsKXHbX1q1xIsAbQwe+6WMU4FPQmvjhSID5p1Vt
jdYUEDq9Xr3XgQBW5z0NwuwosPM/etC7UwSQme/bt+hGAck9W+ceHyNA+Wo+
6UsYBbZ5HGwOMsDfN7E78s5GUODPYfFQV30CkCWClf9EUmCpSzr76AEC3MVM
VfmvUYC8S1mRqEeA0NB5Xf0bFCi6Efm3DOHzb8te25I7FKg1Ds+8qkqAbwJv
kq4/p8DEy9eMrzIESMki7dxZRoHkNXnV/6QJYM68efdROQUoebw2+lJ4Ho86
ZNW8pMCvfTGcTyUIkJPCVrz0hgIFx4+kW4kQwFvSsNWxjQIz1vpRVtsIsIXc
wao1ToGaMn72j4tCYMX/fLpgAq/PprkFu99C8GQ56bP0D3w9rq8rM/NCYNBw
/OmWaQo0Tr7WZ58VghinIbNPcxRoLw6+JzopBDwZs/dd1ylglf+aOv5VCPiF
eFGqkCKYHM4+OFsrBA6rsySeHYqQot+Vh70VgmfDHQLBwoqQPubYG/NGCMyL
b487iSqC3OuwGPFqIbhlIhlPlVIEx8OZ7PJlQrDjmtLXBooiLPj83dX4WAjE
Ng4G/tFRBM4bPVF614Qgdv+Pa9F6ikDhnXATvyoEa7FRKaIHFGFy9w7LuQgh
6BerKcUMFcFOoYWSGCIE99RVZ6MOK0KjcE1Aob8Q7PKVcha2UYQPC6OhR52F
QHb6t4maL76fyxeHVDB8P4zEk81+ivBG5IT3Y00hYAtUPmdzURGOnhxLIqgL
wehW12shgYqwHPMtaIIhBNnEb7WNobi/3bpgryAERMcmtePxihD4SiPqqaAQ
UPruyVx6rAjTZYFpfmOCUPZhVzdbjiI431P6FzIsCNDw4PqNp4qQ87Hh3tVv
gmDxPPv3w3xFMHIbC7jWKwhX4vPr35coAo/r6n7bNkH4oFPtKv9GET5bcM0c
fi4IPrn9zz70KAIb8V4gJVgQNh6cOnOiTxGEtCynSwMFITplUGz8iyLEF+pI
aV0UhHuRoxGrA4pQy7X8VtNTEOptpy13jymCR+WX2C2OgiAitLYSOKcIHH3R
G237BaH6spgukUsJVL60c65vEYSBph2nkrmV4Njmzv0YmyCwCAsEbNmmBE0z
fhcCWQRBp5izcIJXCVZLbYN+LAtA49ii6BOCEvCRqlVu/RCADpMP8yRpJWhz
CyySbhaA71KRmWQ1JdA59J8oV7QAcLmHVKepK8HX+L35teECQKkM7OHSVALW
isnui8EC4H7Ua/vUPiXwX6mf6vITgIVrtpdydZWg0kSl2dpZADbm1c0VDyuB
lbW3ZZy2AAi+m9m057QS5L+SwaL+8IOFV7Z29Rkl8MauWeyf44fbu2xCjV2U
4Nf8f5MbU/wgcqmJxe2cEiRRD8faD/GDpPLDf4+9lOD3da0zoy38QEo9vi4d
rATWReLpAxn8oHW+bpmQogQRFcM8Kbr84ExI+7XehD+fKqnWG8AH2M7mJK8W
/Dyv0yTSvflgh8SK5kSrEnzuaVw7eZ4P6uWsoz+8V4Iz69M57XZ8QGKKSmd1
KUEwo6DNW58PJs3TzA2GlIDzltanNkE+8EhIK01cVoK9Yps4Esx4IZD7TiCR
uAf2l7/nuhC9DeK2+qiKxu6BywXi96wZW0Gq/aKr6q890NpDuVkbyQb+ap+0
8g4qA8eAtMYZIRZoecqOTRUqw/ylHz+vyC4hxZbw+/bFynBNfewwK9sSip3a
tLnnmTKQ9206mjr6BxkrbjTUlSpDs35jK+ujP6g9/49ZeqUy3K28x9Kg8Ad1
FE04mzUow+87p/8pqyyinrKmuPIBZVjhNlMxs1lAat36s0qDyhCz8+3dcLSA
UpfemT8cUgaj180abTILyFrtrfDNUWU49w1dfPRjHn158fKB66Qy1P6N9/W+
OI8GqnJLJf4og/a0s0FM2hzyGqqfqeGgwnSx2Xfb4V9I2XDZK2ALFYb63N4M
F/5C00UKS1ROKpA7yKm3g36hMyGx/zK2UiG3J/HpzZ2/kM0uc74rPFT49K3p
ZfeRGbT/5FeahgAV0n4fGHr+cRqJ9C74PJOgwhHOUBnxhR+oC+T/ukhS4e2d
Za/B+h8o8YllkPQuKgQZ3A/sTvuBtl18EZkgRQWtvKNvT+r+QKzCwbfdZanw
S1P6ZMvt72jKgquCrECFirlvcWT9CfTqg9RqJpMKDh5XTvS0jaLr3wv5XVWo
sNAhfuXFw1FkxYJINFUqDJd+COgKHEULyiePvt5LBdr1xsJq8igi3Ugt/KKB
n+9RQZfx9RF085CAk5A2FVa0p+rNjg0jp+bNbZGHqMA3lK1EFx1EtOHEEWMT
KixHevoFzH5DG3+lVwQPU+H+oizLet43lKIAxExTKni5KCqYEL+htujLoa+O
UCFkl7IUn/QAUtVfVFk6ToXYl4N/m0j9aGvdePrZ01TwXFLZkhXVg2SuPjsr
c4YKwa5JRhFHepCG0RV6P27rKZuhSqkedO4Dof6wCxWexa1VKlZ1o/Z+vZ+q
56hw7KD1PPfSZ3RrMVOT3YsKRgGBMb6Xu5AU0bbnQRAVbMZDSuJqO5D6JDnz
xBUq1F1QdL6Z1oHM8/+4EYKpEFeg4zDo2YHCGfH/okOoEEM93X5KugONo+rd
HuFUmKx6dPRT+EeUayXmi12jwvgdtMXI8gNSjenm/3KLClUrx4nvTrYi23UW
94dJVEi43JzaKdyKoj3Izedv4/elWZEc0NGCei2DwlhSqGBLN4sOMWxBl2Vl
F+TvUGFfZWLsWawZ1VS5d3o8oMKVV5K1nTqNaFI5haqRSYUR2QZ4z96IBLJq
Yjdn4fXV5qwybWpATteE9t9+SIUUhpbwmFkD4rB8WVr5GM+Py3YvDZd6ZPyL
PZmjgAqtqjPUjsI65OOgvPAe9xNd0smOS3XoXpfV4dRCKqTfJQcePFCHZipz
tygW4/ZKkMoeqEU3o80umj2nQoSXwoEBoVr0Wfre8bsvqfDAspeUd7sG2Vsw
xekNVJB2HGKyd1ajHbtMW5Zwf8hfuH0lqhq1/nC7VN1IBZL6NetC9WqkFpzV
Y9BMBXX9x9a0zCq0/alAkm0bfj/9/bM3AitR1b/ZbXGfqNAr8+xHmMkL5NXM
U23eSQUuwxNrLdwvEDGJdE6kiwrYv7TEsqYKlEi2a876TIUJAW0BN/0K5HL0
fdTLXipQDsSDklE52pGb/2/iGxVudbZFrrqVolbfpoL8QbweK8nydfRSFAZj
J72HqLDlDUVHdOU5+tklXrUxTAXNigM015jnqI4l9iJhnAozPlM8F4tLkKel
65zONBWELe03HxR5hlo3EUfuLVNhY/LILfOwAtTmH7zf8i8VXC8w6BHMAtT+
s/vx9hV8XnhyC3tM5KOPvdHnglfxfrFcCfA4nI8+F08u2m1QYa+KZMp3Yh76
Zl/AKcdGg9yfWj6n/+agwW4Ot37cM/NtK1FlOWj4kG3bLXYaaB+J5jLyyUGj
6nyJ7FtosFvelvps7gn6zu8lNrGVBoOtI9tHFx6j+RqVPU95aRDoZsOVKfQI
LeyNT3Dgo8F6BXQafMlGv/PH50X5aWCcHz9/OTMbLaUml18XoMFOwR3MaHo2
WvP8C+cJNDAPNo/gPP4QcchUH6GK0eDr47evs19lop1hegFlu2kQHyWXPtGY
gchPVs5fIdKg05Z9ns09A2m1FzkcINHA40oEn5hQBjolKmH8WYEGihtRrUTH
dJT5bFHyjyINLIq7DgXz3EOKI4/qVBg0eMkwChaJSUP7tp58sY7b8cSGafa+
NGSiLFjwjonvV/nKZ/b5VOQRGJx8VJUGAzN9buonU1GpoJWrrzoNJmcf9yvv
S0GY3la+UkSDUXLX1UTp2+iw62u2IKCBiMTxe45DScguwfevnjYNDK7cMfn+
IAmF9w8Nd+rQQIpSs4tdPgk1+rws/b2fBn3jtcXHGbeQWbbbCaYxDbzCrfTH
3RORQ4u06RrufAP5veLqichnrluv7hANTrfLSU5uTkS39+ntsThMA7XJRH/9
OzdRX5f4Jh9zGuRdLXnR/yEBOXG0PyqxosHsXYk27bx4VNP9xsT9OA1kvNBH
hlU8kswp+UOypsFi6YUIdvZ41H0w9UD6CRokjR+XQPZxyOim03j0KRqc/duG
2mVjkbL4qvwpJxr4sTqvRb6/hmJ//mwTcaZBcvJSq3f0NfT91aDvJ9z5P+t3
S+lcQ5n29e8MztDg+f5rnXnl0Ujo8U1nhisNFrak59rnXkUrNFI2pwcNIvPi
bB+WRKJjm8UO1eL2otzcmuEfiZ53blsM8qSBp1nEc02tSHTef0FvwYsG7S+P
XbFoiECDVa9Gv/rSQIijrvvzaDiq1z8qVxJIg602IRtvNcPQzZNhWSev0gAF
nnmsln4FXYo6ky4UTYMz0aTuOKMryKnQOLUF97hoIH/tUhBS2yR8Qz2GBqJb
6m/XWQShgYe5lwhxNGAOjhSNiVxGitOdZm2JeB6Lbqu9aQhAOwgvjSP+o0FL
L881/tAAxIJl6GveosHb5BiCtGYA+nTDZV9OEg3WhvqkvYsvokuMDVJkCg00
Oq+9z3/kjxovEVn2pdNgu2zHtpFiX/Qsi2d1AbdT8HlddT9fdLd1bvFpBg1M
YhJaqZq+6IJk1ZTIAxqMRe3QWK/3QTvemnb/zsLzKLCPd2DMGzltvVSQl4Pn
Q3BZzx55IRO6bY7jUxoU2Hx2377NC6md0HsomkuDH7emkd4XT8Sdvz0tOo8G
U6sqdL0AT/TMNCvSqRDPS0ltinulB/qX3GojXkqDii7rqsgCd7TswTs5jDs2
qW1vuLk7mjc0988powFb7pWahKXzaHy1+6ZqBb6/cwuV7/XOo1bbkXrTShpM
7351+NqUG0ojrlAja2jAe92R4/QZF3SLZd+rg29p0K24msUu5oLie4MPCtTS
wDKtdPHq+7Mo9Dr76Yw6PG+xtefJmmfR2V98d1400OB9RbDxffEzSKWcyD7T
hs+r5MuXGBzOaE+Ca+Lzdrx/SyZ9e+qdEMklf1fgexqcSDtI0oh2QuJiDA3O
jzTQ7TMTpmxzQqzB2AWZTny/sefUonc5og8HjvZa9uHzofhOipuTPWrelXJa
4gsN4HjC7nFle1S33LcwgjusoCB7fdUOlT+12+75FT9faNWBtSQ7lL79nO71
QRqkjflXbsu0RW6fw/Jfj9NAb1qxtrDWBhVZs85cnMDniWGOu4+XDfozELqH
/p0GPTtqzcRlbFDIREjhwx80OKArtMYdcQLdWr5SfG0an7+LIatEc2v0SjSw
9Mg8DSK0ztJNCVZoc8bKIs8Cvr7My+fUj8eQgewl1Xrch8cktT7EHUOfKAHl
aot4fXtuS+htPYa+a/m/kFjG549jxot6TkskYOtdPbFOg6Yt+20jSRbo2Mj8
+v0NGpwS2W/k+usIunvGC7P+RwO+NtKzX2VHENHD83UrCx0OFnJs6dI/grRC
L9QUb6bD4/xxap+HOTqd5fYucCsdhB03NdsNmKJc4hS7Chcd6r7rFkQVmKLZ
XNcDM7jLqrItGMGmKPC5S4MdDx0+74/cLiZjihLenWnaz0uHBJZKg+UvJujF
hGMbL4EOkse83j5QN0bbxbXv9+AevzasVDd8EDmZSno/2EGHn7mXybOxB9H2
Fz0iDBE6mL+7bmY1aoQcYg45WYrR4VR3ZqlghiHiUdq7eleaDgWTw9sfa+sj
e3uhdmcZOpht545a/3sAlSXN3d8jSwepvkeByiUHkP1G7oE3cnRQ2XUoVIyE
f/5eKnGESAeRKO5/rWL7ka0XlwJ5Dx289DWd/Ui66PmjidV53KYpdT9sfuog
ri917ZXKdPBtP/Fm+ZkOeq4b7HOIhj8v06BFH3QQJ+H3aw8mHc79fPwfp6M2
elb+1bJcgw4Dr9cFHsUjtGX6pUKIJh0ixkLOMZQQspFKWTPQosPmvnjmdCuG
tlwzz+zbRwfXGqXPH3kxZGPd8HMd6HCrlEOcJ0sLsa8XRejp0+Gmh4iKxZo6
etTfzMViQAcNrgahQ8Xq6EDVaEIlbp5477sSZ9RRdKDIPboRHYZne7i1utQQ
10pwqdQh/P7uv6lUrNyL+JZMxtfM8fOd41IZy1VBxZ/Pnqs4QodEf9OjB86r
IPOysHlvCzpMVlOfnlBWQf/5lm1MHqXDkY2xH2mlTLTjt4RwrxV+n9sU65nN
DCQ+N61feooOqztIq8oCdFT9gaPdw5YOM0LWfTNfaehUkZSFoh0dnr+p0dF7
SkMZFyzssuzpoCi9bSlXj4ZkZiov3nTC6zmf8hNCqIg0FZNz3pUOtt1t0iCz
BzU1P1RWcKMD1WRhYXuLEnJ9+qp0FPfZ7Hxmr48SynWZrzlxng7un27VWbQo
oj3fj/cZetDhXp+b0p1wCmKMkbh3++H1+V71ascuBWQnrjL6Fff+e/w69d0k
FH9EuzrJnw5TF8tvo5skNFlz/AJ7AB3IYNwTxUFC99NjPo0G0qHk6hZByspu
tN1q+k5WKB22lsf8t7xZHmndWPY5EUaHvAe3OvQb5ZBrPZuJYDgd4h44SUGc
HHrHlGAJj6BDkmbQJbmdcugyv4mTw1U65BsXGVxTk0WTzYWK0nF0eKh99qnW
LWkkwlrF3ovb/OgTWwMHaXRAvXEgIZ4OhYb/ng5RpdGDx4MJLAl04HY/3YRn
GVlF8C9+S6RDmORi0BtBKVS/z7s6PYUOjr3qt4TOSqDfPsG3LVPpMK9UGXFJ
SALJ5F2/sD2NDhXn9yS21YijINGH0lfu0CG6oiuRukscMZc6I0+m00H3tnZu
5qgoyixSNRF/SAer3SmGAikiaDD5/osR3BpVs1OaxiJIMphLPjebDn9cKOMm
m0RQ6qGBVfXHdIg5pl0l7y6MEiYjc449xefL6ZUqI/MdKEiui+2/Ijos23yW
pegIoZfcyMO6mA6HV+vq8zYLoeX5J1+kn9HhMk/5h5l3gsin5vKzohI6IBM0
/tRYELmekrNrL6PDR2FD1ToHAWSV4l25tRrvP4WddmmFfOh28NfdH3G7L0h6
iV/mQ52n9RNTXuH3T7eS2WfIhw6riLkQ39CBhXXtenYzLzrQ8XbH/lo6jPFT
PFUNtyMmj4BXSBMd7Gd2fSFe5kZeC4Ff9ZvpoHA42uswkRsV9Y0Z8Lbg/VLf
evXyJy5EyXmxK72VDt8XCrL79nAhmQP2bZXv6fCg8aOw2Rwn4g0pIi110eH9
g0+yKZkcKEXgmH7xZzoMzkalHbXnQDLZ685u3XTYQg6da5fiQMxmo6xvPXTg
573TPf2AHVkJjUk0fqFDg0zT4p08NpT5ZKdg6hAdLrE8mdo2zIoomm9oR4bx
+yj+oJCay4qet5023TZChxpdk301vqyoYb4kLnSUDi+P6QwMcrOiaS0TTtcJ
/H4cVBeV0Cak+jFsXeMnHSKvX7aWCP2HvXZUEF/EvbLnJHPf7n+YwZ/3GoUz
+H3xeA84tG5gJ8QkLsrO0mF7J8f3ErENLMS5fJ57Ad/PnvZI8fo1rPnv1ET/
Mh0OiJ5fzdBfwY7EJnIk/8Vt8aqibfUv1i+pLm+2Qgc/Hem/XUV/sV+6UQ7v
VunQbGi595zEX0woXupr/gb+flFUSD/HsoydkjnacYWNAZWVy80vpxaxJafj
4QbsDLiYWm6h+ngRS3h8kinAwQDBLpcPVx0XsVrF07eztzDgKjlLPXPgN0ba
62/dysWA72ZsPecHFrC5g6nDO/kZ8OhsQKE26zwWE3/vvxHcgQ8GXv5umsPk
Pj7QyxdgQDRLcsaxxDnM0vLpIxBiAFXnsYuc/Bz20q7S9YwwA0R6r2RmmM9i
Eb5f559LMKA0pYqj+vZPTKJiKOuKJAPSrYxk1DR+YmUrYxYGuxjQP2Jj1Dkw
jf0Inin7IsUAWRuPEnvKNGYS8+8SqxwDDgx6/vL4OImJZEhvNiUzIF6iyT/c
5DtWPCT/fCeFAWVi0rnBrN8xIzmy8whumW/WLi7lE1hQDr3BT4kBOsdj//6V
ncCGS3Sv36MyYG3kVtibLeNYbqOz4JQqA7wvniRGL41gHQ42wsV7GTC4v1lY
9eUItrxmLuavxgCft+Hq94NGMD0ayG7WYACrdJ3gfY4RrD9VlCG2jwF3rS6X
8UkPY9vd3psf1GVAWo9g1zffQYzJXm/Jr8eAeqHEKVPdQcw6o8q6GzePjwPj
JP8g9vhTjoPjAQa4b/ncG3zqGwZaEV6Bhgz895Paiz8jXzGvbeqJuYcZkGe5
TI+T/YKlPFa+7WmKfz7wxVz5Qx/2Snt32l4zBvw2qnP6GNSHcfsJZtaaM+D+
JT/Zrf292MOBn8VfjjIAKWz2X8jqwT4XZn7ktmHAY+llcabtZ2zNMLXrI+4b
SEQyQPQzJjN6ozf5JANiiMfINz93YRdEgoZkbfG8MNYOUc26MM7QY3OaDgyQ
VBHsGDvciamb8/CfO8sAhSlSqKRnB/Y0GTXKuTBgt+OL5n1aHZj4V6/gr7hp
UdEZv7d0YCxne3+auDGAUllIlHnwEWsIetRMc2dAsLrEWZO+D9jRHIhY8mbA
hu+YMH9bO1Y/461Z5MOA+SzTJ6982jE15uP5s74MsHa4b+ci0Y6Jv95m3+eH
5zXpy+pTzzZspLNvX3UAAzr+uEbdlG/FPFl8l8KCGTAT7pCWVtGEDe9/UqAZ
woDFg/3d3e5NmMX1L86/cRMHQ6K+yzdhajt0Op3D8O93rNdfut2I/aPwFhtE
MuBdyz0NmdAGLO5Yjuv26wxIpXMbxl16h23c7ZduwH1GhmduQesd5jHM2xsc
i/eLWBeNm+UdZnHeT38ujgGHH2bd0Y2uw8TCdeU6E/B615jvfHS/Fssp+Po1
9TYD/l2tqPjvVw1GfuhOdEhmwFvxdP1P5TVYXuo/D3IKXv/CDKE3ITVYUYQ0
W2UqAy4FpXGkCtVgZdbO5P67eF4bWrfw6r3B6jh++klmMUBuiCUgN6QaO7AW
9GYc99lpWatFuWqscW47V+FDvF9uhKrbNFdhLf3Ue+gRA27eeaLmLVKFdTzz
qbXLYYBGKfHXmZqX2OCpNd6sQgb4l6mt3tGtwBws4o67FTEgeSY8SWm5HBs1
xJ9WzICPt6bTc/LLsQkmqNY9Y0DYr87HR8XKsRmuCJuxUnz+vMrjoW4qw9bK
uHOIVQz4ZdySfu93CXYl7+78L9xHWgNO/ldWgrFkKmlVVDNg9krNrGFACbY5
7vB7g9cM/PdrAZplKcG4HP9bdHnLAAPb09VDIs8wYV4xnbxGfH4VaLZ4uBRh
o4XfsTNNeH98qapqVC/CnpmWaco0M2DZs5szl6sIM040U0lpYYBipPxXPptC
LJQQTYpox+9nYt/+pcV8bEpscbtNJwOU6LODf6xysYqqt9zCXfh69Nyu2K25
WNTJBM4O3LykVuutlU8xqQwKq0E3fh/Sy09ypZ5iR2UcFhl9DLBKebh66M8T
7DXp/RfuQTwPPcU+442PsNimuz31uNXGnV9VRj3CrF1du0KH8P23q8mb7X+E
/c5lf780jPc7kS21pC4bU1DWejsyhq+XfuGRWOtD7D+VnCeVUwzwOPkprGg1
E7P77JftN43npzsq5kZdJrbHXy+T9pMB33JI2dvjM7HGim93Hs8wYDiz+NOY
TCa2rrnjxn9z+PyzIsTXH3mAndEJ93VbYoBAm6Ne7oMM7K2G7juZZXx+n9+0
lKqfgYkzNhP6cO/u2Uu4NpOOfZANf26wwoDqpCDmSZSOabCHL8ivMwA+XZa5
MX0X42kM8xxkZYKGnvnJOq807PQbnZrkzUyQ0Dau9yGmYW8qWPkPszFBO+hV
6mp/KuabE1ZUzc6E5dDqtTCjVGwgJuxXGicTtLZ43durnIIVHQo7f3Q7E9jE
fUr0JG5jXAd0qnl4mcBl/H3t4EAS5oSxbqvDrabed5PjfhK2Uzksj87PhGh1
5uM4+SQsjC9sileICfJ73fjz1W5hFp9CXZp3MoFnIEHyRlAiVtCi/SJUlAmm
uyPbJgwSMc66TVvVxZgwd4d09rNQIlb9PPTJY3EmeLAvV7gX3MR23w6diNjF
hH8PInRPfU/Alq1CnZE8E05p7NErn4rHHDZl6HPsZkJfkF21Rmw81ppTpdCG
W0B7fvuYUjz2YGXppzWJCbr/SJz3feIwo7vufn4UJihH9vqZ8MZid7+duJpP
YwIpOObEE79rGEd0gIsPnQkbWVFF7KRrmAc1+aAmgwnTuwQ/H+2LxvaHdvA2
MZlwV+H16FvtaGxGxjBldC8T0lK+HgwRu4rBadUcMYwJdtfzuHcvR2BPt1tc
H8btyozldCqPwITKPc/nICaQ1YbWXfwjsB9b8ml7tZkQa2dMq/sbjiXmyL40
18Ofxy661WNLODY6zddyzYgJ3D2DiwV6oZhJ0p5804NMSJjtKLXmDcUq9hnf
EDZmgl/WDancvhAsLv7qkexDTIg4dl+M7h2CqVI3vrwxZcLvcp9uvWPB2FXv
qeklS3y91aAzXz0uY1oN+8OKjzEhpnh2aUDyMjYvel/YzYoJOVdWJlvbArFT
by10Bo4zYdTwnYHjnkBMlf9Vcp0NE4zGdprSVgKw0YIEnZsOTEjmqzst/9If
S2Od6jZyZMLNtbMF1b7+mKnl/vNsTnjebu2UE6P7Y5Xrf5P9nZkgc9a0Uzzf
D0s0dvx58iwTirj+Xd3I9cVgUiWF7M6E8lV7D9cWb+zPvgSlUdx2jQZzVone
WN7Nybf3LjDhnUvFwtRxb0xYPeMnnycTxjFuheVJL2zmKqfukjcTLErai/2E
vLC78l9+1gbgeblgaxkd7oGZB6iEB11iwsPZbZLTRzwwzrYbInsDmVB/LoTU
K+eBefvo6T69jPdP6vH7NxMuYEa1+SkJwUx4m/a74gnZHVu2C9E9GcmE7A63
iOI4N2yvF91dMYoJNxbfjwiouGF+4aMpq7jVj9gcuvnVFVvMNphJjWaCe5J4
/2eaKzY/yZf6+ToTZgW4g2UnzmLTPg9mDicygXnEzflL6GmMEnVk567/mNAp
yBnmr34ac01m15vBbZKz13Ntzhn78cIlNTYJr/+tfIFSZ2dsfIOm15TChP9E
06ZuHnPCvkW/TdXJwPN+bMAszcEBk0zzqeO/z4Tws5kmF4kO2Knc3b8GcXvS
gkOEftpj/W0xesGZTMDOc/YEXbLHegSO/KrMZoKZO3fup3t2WMfdET2VPLz/
ifGeqltPYfwFSRfY8pnwt3G37J0nJzHT1/ppn3CnTF/JUDU8ib0fyv3lWciE
hlBeDtZ4G6x1t09awTMmDH7oGg6RP4Fxq+1+F1SC18NpUwm13RozMuz5Zfyc
CTq/Uw7/9bfGmty09k+V4vkQ6mJraD+OcQbNXHhZxoTj/+2Rehd4HDOIv592
rZwJrPri1HaF49jVDPN3VhVMmLl9emigxwqrL2KbJb5gwvfJrsGFaCvsfw/r
e90=
            "]]}, Annotation[#, "Charting`Private`Tag$12993#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$12993#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$12993#4"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
ACsNAi8=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$12993#5"]& ]}}, {}, {}}, {Ticks -> {
         Charting`ScaledTicks[{Log, Exp}], Automatic}, 
       GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
       Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
       AxesOrigin -> NCache[{
          Log[100000], 0}, {11.512925464970229`, 0}], 
       FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "ClippingRange" -> {{{11.512925652936358`, 
          20.72326564898028}, {-39.88934312145501, 5.496720737761582}}, {{
          11.512925652936358`, 20.72326564898028}, {-16.57364457616554, 
          5.496720737761582}}}}, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {11.512925464970229`, 0}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 350, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
       FormBox["\"nondegenerate OPO\\n\\!\\(\\*SubscriptBox[\\(V\\), \\(s1, \
s1\\)]\\) is on-diagonal, \\!\\(\\*SubscriptBox[\\(V\\), \\(s1, i2\\)]\\) is \
off-diagonal\"", TraditionalForm], PlotRange -> NCache[{{
           Log[100000], 
           Log[1000000000]}, {-16.57364457616554, 5.496720737761582}}, {{
         11.512925464970229`, 20.72326583694641}, {-16.57364457616554, 
         5.496720737761582}}], PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", "1",
              ")"}]}], 
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
             RowBox[{"Vs1s1", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"Tin", "=", "0"}], ",", 
                 RowBox[{"Tloss", "=", "0"}]}], ")"}], ")"}]}], 
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
             RowBox[{"Vs1s1", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"Tin", "=", "0.1`"}], ",", 
                 RowBox[{"Tloss", "=", "0.1`"}]}], ")"}], ")"}]}], 
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
             RowBox[{"Vs1i2", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"Tin", "=", "0"}], ",", 
                 RowBox[{"Tloss", "=", "0"}]}], ")"}], ")"}]}], 
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
             RowBox[{"Vs1i2", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"Tin", "=", "0.1`"}], ",", 
                 RowBox[{"Tloss", "=", "0.1`"}]}], ")"}], ")"}]}]}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                    "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 TagBox[#, HoldForm], ",", 
                 TagBox[#2, HoldForm], ",", 
                 TagBox[#3, HoldForm], ",", 
                 TagBox[#4, HoldForm], ",", 
                 TagBox[#5, HoldForm]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", "10", "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / (log scale)\"",
   "\"covariance / dB (10\\!\\(\\*SubscriptBox[\\(log\\), \\(10\\)]\\))\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
       Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, BaseStyle -> Directive[10], DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.835311766785433*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"b1adb083-79aa-4b0e-8eed-e1f18e079872"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"adding", " ", "PD", " ", "loss"}], ",", " ", 
    RowBox[{
    "see", " ", "degenerate", " ", "OPO", " ", "case", " ", "for", " ", 
     "description", " ", "of", " ", "Rpd"}]}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"Vs1s1PDloss", "[", 
     RowBox[{"w_", ",", "Tin_", ",", "Tloss_", ",", "Rpd_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kin", "=", 
       FractionBox[
        SuperscriptBox["Tin", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kloss", "=", 
       FractionBox[
        SuperscriptBox["Tloss", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ktot", "=", 
       RowBox[{"kout", "+", "kin", "+", "kloss"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{"x", " ", "ktot"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"8", " ", 
          SuperscriptBox["x", "2"], " ", 
          SuperscriptBox["ktot", "3"], " ", "kout", 
          RowBox[{"(", 
           RowBox[{"1", "-", "Rpd"}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
           SuperscriptBox["ktot", "4"]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}], ")"}], " ", 
           SuperscriptBox["ktot", "2"], " ", 
           SuperscriptBox["w", "2"]}], "+", 
          SuperscriptBox["w", "4"]}], ")"}]}]}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vs1i2PDloss", "[", 
     RowBox[{"w_", ",", "Tin_", ",", "Tloss_", ",", "Rpd_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kin", "=", 
       FractionBox[
        SuperscriptBox["Tin", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kloss", "=", 
       FractionBox[
        SuperscriptBox["Tloss", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ktot", "=", 
       RowBox[{"kout", "+", "kin", "+", "kloss"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{"x", " ", "ktot"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"4", " ", "x", " ", "ktot", " ", "kout", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["x", "2"]}], ")"}], " ", 
            SuperscriptBox["ktot", "2"]}], "+", 
           SuperscriptBox["w", "2"]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "Rpd"}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["ktot", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["ktot", "2"], " ", 
          SuperscriptBox["w", "2"]}], "+", 
         SuperscriptBox["w", "4"]}], ")"}]}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "plotting", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1s1PDloss", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0"}], ",", 
             RowBox[{"Tloss", "=", "0"}], ",", 
             RowBox[{"Rpd", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1s1PDloss", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0"}], ",", 
             RowBox[{"Tloss", "=", "0"}], ",", 
             RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1s1PDloss", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0.1"}], ",", 
             RowBox[{"Tloss", "=", "0.1"}], ",", 
             RowBox[{"Rpd", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1s1PDloss", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0.1"}], ",", 
             RowBox[{"Tloss", "=", "0.1"}], ",", 
             RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", "1", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         SuperscriptBox["10", "5"], ",", 
         SuperscriptBox["10", "9"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{",", "Dashed", ",", ",", "Dashed", ",", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Gray"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<variance / dB (10\!\(\*SubscriptBox[\(log\), \(10\)]\))\>\"", 
            ","}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           ",", "\"\<nondegenerate OPO\\n\!\(\*SubscriptBox[\(V\), \(s1, \
s1\)]\) on-diagonal (top), \!\(\*SubscriptBox[\(V\), \(s1, i2\)]\) \
off-diagonal terms (bottom)\\nPD and intracavity loss\>\""}], "}"}]}], 
         "}"}]}], ",", 
       RowBox[{"TicksStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
       ",", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"40", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "60"}], "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1i2PDloss", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0"}], ",", 
             RowBox[{"Tloss", "=", "0"}], ",", 
             RowBox[{"Rpd", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1i2PDloss", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0"}], ",", 
             RowBox[{"Tloss", "=", "0"}], ",", 
             RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1i2PDloss", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0.1"}], ",", 
             RowBox[{"Tloss", "=", "0.1"}], ",", 
             RowBox[{"Rpd", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1i2PDloss", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0.1"}], ",", 
             RowBox[{"Tloss", "=", "0.1"}], ",", 
             RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         SuperscriptBox["10", "5"], ",", 
         SuperscriptBox["10", "9"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{",", "Dashed"}], "}"}]}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<covariance / dB (10\!\(\*SubscriptBox[\(log\), \
\(10\)]\))\>\"", ","}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / (log scale)\>\"", ","}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"40", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"50", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2"}], "}"}], ",", 
     RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8352221452215242`*^9, 3.835222197944674*^9}, {
  3.835222277592185*^9, 3.835222477888588*^9}, {3.8352225265039682`*^9, 
  3.835222889301949*^9}, {3.835223142665238*^9, 3.8352231428392267`*^9}, {
  3.835223328102748*^9, 3.83522336853197*^9}, {3.835223414686117*^9, 
  3.835223425749075*^9}, {3.835301129865756*^9, 3.835301146350882*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"9078f2fd-8f04-4df4-a0b7-27d6d2095637"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwV1nc8Vf8fB3CVFcq8JSv7XveSu8jqfN5GGUlIkpQyKpRsSfZIQvJNRkUp
STYZhUpkU4mMJFshGYmsfuf3D4/n4zzu53zO+/N6v8+Rsrtk7riZhYWlGv/z
///IYI6axk6Eoy8u2TxeI0B+vLg7HycR8jsNjB7ilug1LArdSgTjyHxGGu41
pwzaOR4iSPax/U3CXXHjCJ0qQARdX6VDN3DT35cy3ooT4XJ7NMEdt7zlFdVx
JhFixJoW1XAnpj3xsVIlgsylVX0V3KwTHWXNe4kgONdzm4Z7xJeyt0CDCCZJ
PhJk3A9S+vdeBiLsuXZmVgS3yFdMncuYCO/0/15bXSXAdoctWnvsibDt9deD
Fbjv80w9eO2A76/GNbwEt2JpB5vZWSIU3Awozcd9kD3jvacTEf6cGGPJxB31
FOxfXCJCrexNzVu4N/0MiNa7SgS3uWSV87h/ey/3WCcSQfTx92Fe3GESg/um
7xDhQO+EABdugYaGjIBkIhgWvVNnxU0VTrrw4C4RHk6MuCyvEODiSxWW8YdE
4HoveHoQ9/iGB9E9nwiKktr++bh7r/30vtZAhPGC77y6uFmumWhvNOLry13x
0cItH1nA491MhKb+U59UcHuEuz+yayPCx2M/LpFwc4Usftj3CV+v142+DbfW
lXXK7wEi7HD3/dD5F6/fhW3Dp/8QYU7jMJsN7noX17zuJSIEGe7dZYF72vn9
ZZO/RMhiDZMyxq3udItXa40I8r6beLVwdzgS9u3cTAKjpIoTorhZbcWT27aR
oPh7fm73MgHOmymZaMiR4K2Tee4B3E//ebzOlicBfb3s+D7c3/MqqLtIJDjX
X/6XgduJS09wmUwC2QxtfinczrXWPaVUEihqH723skSACypRdjQtEjTflOTP
we22a8SHdIQEN0U8R1lwFzaQvidZkMA4gvvV4h8CzHq7HuewJMHt3RnXJnG7
d/zVHLcigbOQ6+Qn3B43+DY9PkUCD8WlqUzcXuv7bux2JoHXMH/zAdyXh5LT
d4SQwGfAbb//IgF6fqWoZIaSQON+etsF3GobqS2McBIkcBqgU7j/itxfMr2G
u89vAHBfsXh4+EYsCVr2h3Cy4fZvyP73L4UE67nnp6J+EyAw76Xtj2K8flbS
IwELBBiorFz0fU4CzhdR5hdwY81VN9jLSMCicveJNe5/46/KZV6QILBDZE0V
d7BkLe+p1yRITOk4NjNPgND/Wl53tODr/azIOYY7wq9/d9Uo7qsfwgTnCHB1
wFKMOk4C78n2tH+z+PPqfhR+PEGCmM9z96Zw222r54+ZJMGo3oZ2LW54WLDF
ZpYEuXK3ye64VxpDJ1ZXSeAHm0wbfhHAVVihQFNQAWJ2nyg6MUMAx4BHOQVC
CrAkH/hFF7fNsPhTmR0KeE52jFBwH8wVeMi9SwGqZL9dX/1JABKsJXyRUIB8
QxNqCu7hc+99/MkKcFEhtaRtmgCW5d5YpbYC8D3RFBOZwvvlao6tia4CDLyi
KKxOEiBceyh4SE8BnqjfYOvHXdJiXMthoAA2O50o93HzDcoYWJgowGmilow4
7ibODrOf1grgOZoYKPgD7wfrPY67vRRgePhiZvc4AY7sdogs9safx/cSazFu
59GUrP2+CjC3eIUUgzvFlW3S5YoC3E6FVwj3n9B+14pgBcAkTu14PIbnLyf6
slmsAuiTGuXOjBJAZn38RtgTBXBT5OZ6NkQAC/dNR3ifKoCLYb9MAO7IMVGR
u9kK8Opg5fJh3N/bTJ8W5ypAtvi/j78HCZCb9rJuqFgBbl5g2auJWxXi1tFr
BZjhn3N5OUAAozCVS2vdCmBb0Xsu6Auer6XDqlG9CmCyZwuPIe5cF+d1wS8K
wOU8aCOAm9ci/QZlQAEmeas3P+4jQKfs1qfWowpAVmY3q+0lwKn6/sGKWQXY
n5weMdeN98vWcHPvrWRYtm+4zdlJAI3OncHjXGQgYQ6aLZ8IsDk9J+8YDxnW
hGOjY3EnMD9xavCSofL9HUl+3M9tpV9vCJFhu/ecuFAHXq/SN5QoSTJYvGmd
4fyA94fdOuvdvWQQx/YfetZCAB2lW3QedTIk79LhOoOba1n2dIAGGR57iNru
xH031rjSdh8ZlOTE20ObCVBVcdddVpcMT3X0iiyaCLCxXWMgz4QMioQPnKP1
+Dyu9Cl/40gGQwqxIrcGnx/j77aanSMDVfHe0CHcFvwEm6HzZDhjdtxv5g0B
ZM+VsGy+QAYROWxWCXedwKyhrgcZdvq7jGS+IgC7s1P/u0AyLORs2uVXSYBo
YZtNLUlk4DD0MXryHJ8nujlHTqSQIdLktj8Dt7XrSuZUKhk2Owquvy4hAKUu
2YgnjQySbmI/PxcToPVS13+HHpOhOuuUw1oh/r5qMJH/UIj/vu/PW9k8Atzy
1j7Y1YRb9tGNkcd4npe2sh5sIQOPuf3cGdzxlzuq3rSS4UPpjvRvjwgQ52+/
J/c9GUr2nmnvySBATEgEf1gXfv+A8NNvH+B5i23qpg6RIeTPW1f3e3j9M80c
Ypbx+u5Oadn7Hz6/5EXEN6+Q4QH9F+V+Aj7/ng53+a7i17u2FG/C7ZvjqW+/
QYYDFe/IjfH4/ChKJGuwUqDUeizPKA6fB9W9sxO8FIiqjP8le50A9l1nAnSJ
FBBgr30hF4h/H7Dx9heRKBCbemKXewAB7qhWaUiSKRD/pDO48ioBGpN2LK8p
UuB+tJndIX8C7LFu8SijU2AQhR90vEyA5QHmeQWMAtMntRMcPAgQ+53jCO9R
CozOB/knOeLvw12lRQGWFLjqqq1b40CAN4Z2fNPHKMCnoDXxw54A88+q2hqt
KSB0dr16rx0BrC66G4SepoDIf/SAd6cIID3ft2/RhQISe7bOZR0jQPlqHulL
KAW2uR1sDjDA3zcxO3LPh1Pgz2GxEGd9ApDFg5T/RFBguUsq8+gBAtzDTFX5
r1OAvFtZkahHgJCQeV39mxQovhnxtwzh849jr23JXQrUGodlXFMlwDeBN4k3
nlPg+8vXjK/SBEh+RNq1q4wCSWtyqv9JEcCceevek3IKKOby2uhL4nk8aveo
5iUFfu2L5nwmToDsZNaipTcUyD9+JM1KmACeEoat9m0UmLHWj7TaRgAOcsdm
rXEK1JTxs31cFAIr/ufT+RN4fTbNLZz+LQRPlxM/S/2gwCzX15WZeSEwaDj+
jGOaAo2Tr/XZZoUg2mHI7NMcBT4UBd0XmRQCnvTZB87rFLDKe00d/yoE/EK8
KEVIEUwOZx6crRUCu9VZEs8ORUjR78rF3gpB8XCHQNBORXgwZt8b/UYIzIvu
jDuIKIL869BosWohuG0iEUeVVAT7wxlscmVCsOO60tcGiiIseP3d3ZglBKIb
B/3/6CgC182eSL3rQhCz/8f1KD1FoPBOuIhdE4K1mMhkkQOKMCm/w3IuXAj6
RWtKMUNFsFNooSQEC8F9ddXZyMOK0Lizxq/AVwh2e0s67rRRhA8LoyFHHYVA
Zvq3iZq3IshevTykguH7YSScbPZRhBrhE55ZmkLA6q98weayIlieHEskqAvB
6Fbn68H+irAc/S1ggiEEmcRvtY0huL/dvnRGQQiI9k1qx+MUwf+VRuQzQSGg
9N2XvpKlCDNl/qk+Y4JQ9mF3N2u2IjjeV/oXPCwI0PDwxs1nipD9seH+tW+C
YPE88/fjPEUwchnzu94rCIFxefXvSxRhm/Pqfts2QfigU+0s90YRui24Zg4/
FwSvnP7iDz2KwE68708JEoSNh6fOnehTBIKW5XSpvyBEJQ+Kjn9RhJsFOpJa
lwXhfsRo+OqAItRxLb/VdBeEettpS/kxRXCr/BLDYS8IwkJrK/5z+Hp9URtt
+wWh+qqoLpFLCVS+tHOucwjCQNOOU0ncSnBsS+d+jFUQWHYK+HFsU4LmGZ9L
/iyCoFPEWTDBqwSrpbYBP5YFoHFsUeQpQQn4SNUqt38IQIfJh3mSlBK0ufgX
SjULwHfJiAyymhLoHPpPhCtKALhcg6tT1ZVgIG5vXm2YAFAq/Xu4NJVgS8Vk
9+UgAXA96rF9ap8S+K7UT3X5CMDCddsrObpKUGWi0mztKAAb8+rmioeVwMra
0zJWWwAE381s2nNWCfJfSWORf/jBwiNTu/qcEnhh1y32z/HDnd02IcZOSvBr
/r/JjSl+EL7SxOJyQQkSqYdjzgzxg4Ty439ZHkrw+4bWudEWfiClHF+XClKC
E4ViaQPp/KB1sW6ZkKwEERXDPMm6/OBISP213oTfnyqh1uvHB9iu5kSPFiX4
+jpVPM2TD3aIr2hOtCpBd0/j2smLfFAvax314b0SnFufzm4/zQckpojUoy4l
CGbkt3nq88Gkeaq5wZAScN7W+tQmyAdu8amlCctKsFd0E3u8GS/4c9/1JxL3
gEH5e65LUdsgdquXqkjMHriaL3bfmrEVJNsvO6v+2gOtPZRbtRGs4Kv2SSv3
oDJwDEhpnBNigZZnbNhUgTLMX/nxM1BmCSm2hD04U6QM19XHDm9mXUIxU5u2
9BQrA3nfpqMpo3+QseJGQ12pMjTrN7ZufvIHtef9MUurVIZ7lfdZGhT+oI7C
CUezBmX4fffsP2WVRdRT1hRbPqAMK9xmKmY2C0itW39WaVAZone9vReGFlDK
0jvzx0PKYPS6WaNNegFZq73deWtUGS58Q5ef/JhHX168fOg8qQy1f+O8PS/P
o4GqnFLxP8qgPe1oEJ06hzyG6mdq2KkwXWT23Xb4F1I2XPbw46DCZJ/Lm+GC
X2i6UGGJykkFcgc55U7AL3QuOOZf+lYq5PQkPLu16xey2W3OF8hDhU/fml52
H5lB+09+pWkIUCH194Gh5x+nkXDvglexOBWOcIZIiy38QF0g99dJggpv7y57
DNb/QAlPLQOkdlMhwOCBf3fqD7Tt8ouIeEkqaOUefXtS9wfavDPojqsMFX5p
Sp1sufMdTVlwVZAVqFAx9y2WrD+BXn2QXM1gUsHOLfBET9souvG9gN9ZhQoL
HWKBLx6PIisWRKKp4s9T+sGvy38ULSifPPp6LxVoNxoLqsmjiHQzpeCLBv58
T/K7jG+MoFuHBByEtKmwoj1Vb3ZsGDk0b2mLOEQFvqFMJbrIIKINJ4wYm1Bh
OcLdx2/2G9r4K7UieJgKDxZlWNZzv6FkBSBmmFLBw0lRwYT4DbVFXQ15dYQK
wbuVJfmkBpCq/qLK0nEqxLwc/NtE6kdb68bTzp+lgvuSCsejyB4kfa34vPQ5
KgQ5JxqFH+lBGkaB9H7c1lM2Q5WSPejCB0L9YScqFMeuVSpWdaP2fr2fqheo
cOyg9Tz30md0ezFDk82DCkZ+/tHeV7uQJNG252EAFWzGg0tiazuQ+iQ540Qg
FeouKTreSu1A5nl/XAhBVIjN17EbdO9AYYy4f1HBVIimnm0/JdWBxlG1vFsY
Xr+qJ0c/hX1EOVai3th1KozfRRxGlh+QanQ3/5fbVKhaOU58d7IV2a6zuD5O
pEL81eaUzp2tKMqN3HzxDn5emhVJfh0tqNcyIJQlmQq2dLOoYMMWdFVGZkHu
LhX2VSbEnMeaUU2Va6fbQyoEvpKo7dRpRJPKyVSNDCqMyDTAe7ZGJPCoJmbL
I7y+2pxVpk0NyOG60P47j6mQzNDaOWbWgNgtX5ZWZuH5cdruoeFUj4x/sSWx
51OhVXWG2lFQh7zslBfe436qSzrZcaUO3e+yOpxSQIW0e2T/gwfq0ExlDodi
EW6PeMnMgVp0K8rsstlzKoR7KBwYEKpFn6XuH7/3kgoPLXtJuXdq0BkLphi9
gQpS9kNMts5qtGO3acsS7g95C3cCI6tR6w+XK9WNVCCpX7cuUK9GakGPegya
qaCun2VNy6hC258JJNq24efT3z97078SVf2b3Rb7iQq90sU/Qk1eII9mnmrz
TipwGZ5Ya+F+gYiJpAvCXVTA/qUmlDVVoATy6eZHn6kwIaAt4KJfgZyOvo98
2UsFyoE4UDIqRzty8v5NfKPC7c62iFWXUtTq3ZSfN4jXYyVJro5eikJh7KTn
EBU43lB0RFaeo59dYlUbw1TQrDhAc45+jupYYi4Txqkw4zXFc7moBLlbOs/p
TFNhp+WZLQeFi1HrJuLI/WUqbEweuW0emo/afIP2W/6lgvMlBj2cmY/af3Zn
bV/B54U79063iTz0sTfqQtAq3i+WK35uh/PQ56LJxdMbVNirIpH8nZiLvp3J
55RlpUHOTy2vs3+z0WA3u0s/7pn5tpXIsmw0fMi27TYbDbSPRHEZeWWjUXW+
BDYOGsjL2VKL556i7/weohNbaTDYOrJ9dCELzdeo7HnGSwN/FxuuDKEnaGFv
XLwdHw3WK6DT4Esm+p03Pi/CTwPjvLj5qxmZaCklqfyGAA12Ce5gRtEz0Zr7
X7hIoIF5kHk45/HHiF26+ghVlAZfs96+znyVgXaF6vmVydMgLlI2baIxHZGf
rlwMJNKg05ZtntU1HWm1F9odINHALTCcT1QoHZ0SETf+rEADxY3IVqJ9Gsoo
XpT4o0gDi6KuQ0E895HiyJM6FQYNXjKMgoSjU9G+rSdfrOO2P7FhmrkvFZko
C+a/Y+L7VQ78zDafgtz8g5KOqtJgYKbPRf1kCioVtHL2VqfB5GxWv/K+ZITp
beUrRTQYJXddS5C6gw47v2YNABoIix+/bz+UiE7He//V06aBQeBdk+8PE1FY
/9Bwpw4NJCk1u9nkElGj18vS3/tp0DdeW3SccRuZZbqcYBrTwCPMSn/cNQHZ
tUiZruHOM5DbK6aegLzmuvXqDtHgbLusxOSWBHRnn94ei8M0UJtM8NW/ewv1
dYlt8jKnQe61khf9H+KRA3v7kxIrGszeE2/Tzo1DNd1vTFyP00DaA31kWMUh
ieySPyRrGiyWXgpnY4tD3QdTDqSdoEHi+HFxdCYWGd1yGI86RYPzf9tQu0wM
UhZblTvlQAOfzY5rEe+vo5ifP9uEHWmQlLTU6hl1HX1/Nej9CXfez3p5SZ3r
KONM/TuDczR4vv96Z255FBLKuuXIcKbBAkdazpmca2iFRsrkdKNBRG6s7eOS
CHRsi+ihWtwelFtb030j0PPObYsB7jRwNwt/rqkVgS76LugteNCg/eWxQIuG
cDRY9Wr0qzcNhNjruj+PhqF6/aOyJf402GoTvPFWMxTdOhn66OQ1GiD/c1lq
aYHoSuS5NKEoGpyLInXHGgUihwLjlBbc4yL+/LVLAUht086b6tE0EOGov1Nn
EYAGHudcIcTSgDk4UjgmfBUpTneatSXgeSy8o/amwQ/tILw0Dv+PBi29PNf5
Q/wQC5aur3mbBm+ToglSmn7o002nfdmJNFgb6pPyLLqMrjA2SBHJNNDovP4+
74kvarxCZNmXRoPtMh3bRoq8UfEjntUF3A5BF3XVfbzRvda5xWfpNDCJjm+l
anqjSxJVU8IPaTAWuUNjvd4L7Xhr2v37EZ5HgX28A2OeyGHrlfzcbDwfgst6
Z5AHMqHbZts/o0G+zWfX7ds8kNoJvcciOTT4cXsa6X1xR9x521OjcmkwtapC
1/NzR8WmjyIcCvC8lNQmu1a6oX9JrTZipTSo6LKuish3RctuvJPDuGMS2/aG
mbuieUNz3+wyGrDmBNbEL11E46vdt1Qr8P1dWKh8r3cRtdqO1JtW0mBa/tXh
61MuKJW4Qo2ooQHvDXv2s+ec0G2Wfa8OvqVBt+LqIzZRJxTXG3RQoJYGlqml
i9fen0chN9jOptfheYupvUjWPI/O/+K7+6KBBu8rgowfiJ1DKuVEtpk2fF4l
Xb3CYHdEe+KdE5634/1bMundU++ASE55u/3f0+BE6kGSRpQDEhNlaHB+pIFu
n9lOyjYHtDkIuyTdie835oJa1G579OHA0V7LPnw+FN1NdnE4g5p3J58V/0ID
OB4vP658BtUt9y2M4A7Nz89cXz2Nyp+d3u7+FX++kKoDa4mnUdr2C7o3BmmQ
OuZbuS3DFrl8Ds17PU4DvWnF2oJaG1RovXnm8gQ+TwyzXb08bNCfgZA99O80
6NlRayYmbYOCJ4ILHv+gwQFdoTXu8BPo9nJg0fVpfP4uBq8Sza3RKxH/0iPz
NAjXOk83JVihLekrizwL+PrSL59TPx5DBjJXVOtxHx6T0PoQewx9oviVqy3i
9e25I6639Rj6ruX7QnwZnz/26S/qOS2RgK1n9cQ6DZo49ttGkCzQsZH59Qcb
NDglvN/I+dcRdO+cB2b9jwZ8baTiX2VHENHN/XUrCx0OFrBzdOkfQVohl2qK
ttAhK2+c2udmjs4+cnnnv5UOO+03NZ8eMEU5xCk2FS461H3XzY/MN0WzOc4H
ZnCXVWVaMIJMkf9zp4bTPHT4vD9iu6i0KYp/d65pPy8d4lkqDZa/mKAXE/Zt
vAQ6SBzzePtQ3RhtF9N+0IN7/PqwUt3wQeRgKuH5cAcdfuZcJc/GHETbX/QI
M4TpYP7uhpnVqBGyiz7kYClKh1PdGaWC6YaIR2nv6j0pOuRPDm/P0tZHZ84I
tTtK08FsO3fk+t8DqCxx7sEeGTpI9j3xVy45gM5s5Bx4I0sHld2HQkRJ+PX3
kgkjRDoIR3L/axXdj2w9uBTIe+jgoa/p6EPSRc+fTKzO4zZNrvth81MHcX2p
a69UpoN3+4k3y8U66LlukNchGn6/DIMWfdBBnITfr92YdLjwM+s/TnttVFz+
1bJcgw4Dr9cFnsQhxDH9UiFYkw7hY8EXGEoI2Ugmrxlo0WFLXxxzuhVDHNfN
M/r20cG5RunzR14M2Vg3/FwHOtwuZRfjeaSF2NYLw/X06XDLTVjFYk0dPelv
5mIxoIMGV4PQoSJ1dKBqNL4SN0+c5z3xc+ooyl/4Pt2IDsOzPdxaXWqIayWo
VPIQfn4P3lQqVu5FfEsm42vm+PNd4FIZy1FBRZ/PX6g4QocEX9OjBy6qIPOy
0HlPCzpMVlOfnVBWQf95l21MHqXDkY2xH6mlTLTjt/jOXiv8PLcp1jObGUhs
blq/9BQdVneQVpUF6Kj6A3u7my0dZoSs+2a+0tCpQkkLxdN0eP6mRkfvGQ2l
X7I4/egMHRSlti3l6NGQ9Ezl5VsOeD3nk39CMBWRpqKzLzrTwba7TQqk96Cm
5sfKCi50oJosLGxvUULOz16VjuI+n5nH7PVSQjlO8zUnLtLB9dPtOosWRbTn
+/E+Qzc63O9zUbobRkGMMRK3vA9en+9Vr3bsVkCnxVRGv+Lef59fp76bhOKO
aFcn+tJh6nL5HXSLhCZrjl9i86MDGYx7ItlJ6EFa9KdRfzqUXOMQpKzIo+1W
03cfhdBha3n0f8tb5JDWzWWvE6F0yH14u0O/URY517OaCIbRIfahgyTEyqJ3
THGWsHA6JGoGXJHdJYuu8ps42F2jQ55xocF1NRk02VygKBVLh8fa559p3ZZC
wpur2Hpxmx99amtgJ4UOqDcOxMfRocDw37MhqhR6mDUYzxJPB27Xs014lpFV
OP/itwQ6hEosBrwRlET1+zyr05LpYN+rflvovDj67RV0xzKFDvNKleFXhMSR
dO6NS9tT6VBxcU9CW40YChB5LBV4lw5RFV0J1N1iiLnUGXEyjQ66d7RzMkZF
UEahqonYYzpYyScbCiQLo8GkBy9GcGtUzU5pGgsjiSAuuZxMOvxxooybbBJG
KYcGVtWz6BB9TLtKznUnip+MyD72DJ8vZ1eqjMx3oADZLtb/CumwbPNZhqIj
hF5yIzfrIjocXq2rz90ihJbnn36RKqbDVZ7yDzPvBJFXzdXiwhI6IBM0/sxY
EDmfkj3dXkaHjzsNVevsBJBVsmfl1mq8/xR2nU4t4EN3gr7Kf8TtuiDhIXaV
D3We1U9IfoWfP91Kep8hHzqsIupEfEMHls1rNzKbedGBjrc79tfSYYyf4q5q
uB0xeQQ8gpvocGZm9xfiVW7kseD/Vb+ZDgqHozwOE7lRYd+YAW8L3i/1rdeu
fuJClOwXu9Na6fB9IT+zbw8Xkj5wpq3yPR0eNn7caTbHiXiDC0lLXXR4//CT
THIGO0oWOKZf9JkOg7ORqUfPsCPpzHVHl246cJBD5tol2RGz2ejRtx468PPe
7Z5+yIashMbEG7/QoUG6afFuLivKeLpLMGWIDldYnk5tG96MKJpvaEeG8fMo
+qCQkrMZPW87a7pthA41uib7arw3o4b5ktiQUTq8PKYzMMi9GU1rmXA6T+Dn
Y6e6qIQ2IdWPoesaP+kQceOqtXjIP+y1vYLYIu6VPSeZ++T/YQZ/3msUzODn
xeM5YNe6gZ0QFb8sM0uH7Z3s30tEN7Bgx/J57gV8P3vaI8Tq17Dmv1MT/ct0
OCBycTVdfwU7EpPAnvQXt8WrirbVv1i/hLqc2QodfHSk/nYV/sV+6UbavVul
Q7Oh5d4L4n8xoTjJr3kb+PtFUSHtAssydkr6aEcgKwMqK5ebX04tYksOx8MM
2BhwOaXcQjVrEYvPOskUYGeAYJfTh2v2i1it4tk7mRwMuEZ+pJ4x8Bsj7fW1
buViwHcz1p6LAwvY3MGU4V38DHhy3q9Ae/M8Fh13/78R3P4PB17+bprDZD8+
1MsTYEAUS1L6sYQ5zNLy2RMQYgBVJ8tJVm4Oe3m60vncTgYI9wZmpJvPYuHe
X+efizOgNLmKvfrOT0y8YuhRoAQD0qyMpNU0fmJlK2MWBrsZ0D9iY9Q5MI39
CJop+yLJABkbt5IzlGnMJPrflc2yDDgw6P7L7eMkJpwutcWUzIA48SbfMJPv
WNGQ3PNdFAaUiUrlBG3+jhnJkh1HcEt/s3ZyKp/AArLpDT5KDNA5HvP3r8wE
Nlyie+M+lQFrI7dD33CMYzmNjoJTqgzwvHySGLU0gnXY2ews2suAwf3NO1Vf
jmDLa+aivmoM8Hobpv4gYATTo4HMFg0GbJaqE3zAPoL1p4gwRPcx4J7V1TI+
qWFsu8t784O6DEjtEez65j2IMdnqLfn1GFAvlDBlqjuIWadXWXfj5vGyY5zk
H8SyPmXb2R9ggCvH596gU98w0Ar38Ddk4N9Pai/+jHzFPLapJ+QcZkCu5TI9
VuYLlpylfMfdFL8+8MVc+UMf9kpbPnWvGQN+G9U5fAzow7h9BDNqzRnw4IqP
zNb+XuzxwM+iL0cZgBS2+C486sE+F2R85LZhQJbUshjT9jO2ZpjS9RH3TSQs
4SfyGZMevdmbdJIB0cRj5Fufu7BLwgFDMrZ4Xhhrh6hmXRhnyLE5TTsGSKgI
dowd7sTUzXn4L5xngMIUKUTCvQN7loQaZZ0YIG//onmfVgcm9tUj6CtuWmRU
+m+ODozlfO9PExcGUCoLiNIPP2INAU+aaa4MCFIXP2/S9wE7mg3hS54M2PAe
28nf1o7Vz3hqFnoxYP6R6dNXXu2YGjNr/rw3A6ztHpx2Em/HxF5vO9Png+c1
8cvqM/c2bKSzb1+1HwM6/jhH3pJrxdxZvJdCgxgwE2aXmlrRhA3vf5qvGcyA
xYP93d2uTZjFjS+Ov3ETB4Mjv8s1YWo7dDodQ/Hfd6zXX7nTiP2j8BYZRDDg
Xct9DemQBiz2WLbz9hsMSKFzG8ZeeYdt3OuXasB9TppnbkHrHeY2zNsbFIP3
i2gXjZvlHWZx0Ud/LpYBhx8/uqsbVYeJhunKdsbj9a4x3/XkQS2Wnf/1a8od
Bvy7VlHx368ajPzYlWiXxIC3Ymn6n8prsNyUf27kZLz+BelCb4JrsMJwKdbK
FAZcCUhlTxGqwcqsHcn99/C8NrRy8Oq9werYf/pIPGKA7BCLX05wNXZgLeDN
OO7z0zJWi7LVWOPcdq6Cx3i/3AxRt2muwlr6qffREwbcuvtUzVO4Cuso9qo9
nc0AjVLir3M1L7HBU2u8jwoY4FumtnpXtwKzs4g97lLIgKSZsESl5XJs1BC/
WxEDPt6eTsvOK8cmmKBaV8yA0F+dWUdFy7EZrnCbsVJ8/rzK5aFuKsPWyriz
iVUM+GXcknb/dwkWmHtv/hfuI61+J/8rK8FYMpS0KqoZMBtYM2voV4JtiT38
3uA1A/9+zUezLCUYl/1/i05vGWBge7Z6SLgY28krqpPbiM+vfM0WN6dCbLTg
O3auCe+PL1VVjeqFWLFpmaZ0MwOW3bs5c7gKMeMEM5XkFgYoRsh95bMpwEII
UaTwdvx8JvbtX1rMw6ZEF7fbdDJAiT47+McqB6uoesu9swtfj57TFbM1B4s8
Gc/ZgZuX1Gq9tfIZJplO2WzQjZ+H1PLTHMln2FFpu0VGHwOskh+vHvrzFHtN
ev+FexDPQ0+R13jjEyym6V5PPW61ccdXlZFPMGtn566QIXz/7WpyZvufYL9z
2N4vDeP9TmRNKanLxBSUtd6OjOHrpV16Itr6GPtPJftp5RQD3E5+Ci1czcBO
f/bJ9JnG89MdGX2zLgPb46uXQfvJgG/ZpMztcRlYY8W3u1kzDBjOKPo0Jp2B
rWvuuPnfHD7/rAhx9UceYud0wrxdlhgg0Gavl/MwHXuroftOehmf3xc3LaXo
p2NijC2EPtzyPXsJ12fSsA8yYc8NVhhQnRjAPInSMA22sAW5dQbAp6vSN6fv
YTyNoe6Dm5mgoWd+ss4jFTv7RqcmaQsTxLWN672Iqdibis38h1mZoB3wKmW1
PwXzzg4trGZjwnJI9VqoUQo2EB36K5WTCVocHvf3KidjhYdCLx7dzgRWMa8S
PfE7GNcBnWoeXiZwGX9fOziQiDlgm7fV4VZT77vF/iAR26UcmkvnZ0KUOjMr
Vi4RC+ULneIVYoLcXhf+PLXbmMWnEKfmXUzgGYiXuBmQgOW3aL8IEWGCqXxE
24RBAsZZt2mruigT5u6Szn8WSsCqn4c8zRJjghvbcoVr/i1M/k7IRPhuJvx7
GK576ns8tmwV4ojkmHBKY49e+VQcZrcpXZ9dngl9AaerNWLisNbsKoU23ALa
89vHlOKwhytLP61JTND9R+J84BWLGd1z9fGhMEE5otfHhDcGu/ftxLU8GhNI
QdEnnvpcx9ij/Jy86EzYeBRZyEa6jrlRkw5qMpgwvVvw89G+KGx/SAdvE5MJ
9xRej77VjsJmpA2TR/cyITX568Fg0WsYnFXNFsWYcPpGLrf8cjj2bLvFjWHc
zswYTofycEyo3P1iNmICWW1o3ck3HPvBkUfbq82EmNPGtLq/YVhCtsxLcz38
fmwiW904wrDRab6W60ZM4O4ZXMzXC8FMEvfkmR5kQvxsR6k1bwhWsc/45k5j
Jvg8uimZ0xeMxcZdO5J5iAnhxx6I0j2DMVXqxpc3pkz4Xe7VrXcsCLvmOTW9
ZImvtxpw7qvbVUyrYX9o0TEmRBfNLg1IXMXmRR7sdLFiQnbgymRrmz926q2F
zsBxJowavjOw3+OPqfK/SqqzYYLR2C5T2oofNpofr3PLjglJfHVn5V76Yqmb
p7qN7Jlwa+18frW3L2Zquf8iqwOet9u7ZEXpvljl+t8kX0cmSJ837RTL88ES
jO1/njzPhEKuf9c2crwxmFRJJrsyoXz1jJtziyf2Z1+80iju040Gc1YJnlju
rcm39y8x4Z1TxcLUcU9sp3r6Tz53Joxj3ArLkx7YzDVO3SVPJliUtBf5CHlg
9+S+/Kz1w/NyydYyKswNM/dTCQu4woTHs9skpo+4YZxtN4X3+jOh/kIwqVfW
DfP00tN9dhXvn5TjD27FX8KMavOS44OY8Db1d8VTsiu2fDpY92QEEzI7XMKL
Yl2wvR50V8VIJtxcfD8ioOKC+YSNJq/iVj9ic+jWV2dsMdNgJiWKCa6JYv2f
ac7Y/CRfyucbTJgV4A6SmTiPTXs9nDmcwATmERfHLyFnMUrkkV27/2NCpyBn
qK/6Wcw5iU1vBrdJ9l73tTlH7McLp5SYRLz+t/MESh0dsfENml5TMhP+E0md
unXMAfsW9TZFJx3P+7EBs1Q7O0wi1auO/wETws5nmFwm2mGncuR/DeJ2pwUF
C/08g/W3ResFZTABu8jZE3DlDNYjcORXZSYTzFy5cz7dP4113BvRU8nF+58Y
56669RTGn594iTWPCX8b5WXuPj2Jmb7WT/2EO3k6MF3V8CT2fijnl3sBExpC
eNk3x9lgrfJeqfnFTBj80DUcLHcC41aTfxdQgtfDYVMJtd0aMzLs+WX8nAk6
v5MP//W1xppctPZPleL5EOpibWg/jnEGzFx6WcaE4//tkXznfxwziHuQer2c
CZv1xajtCsexa+nm76wqmDBz5+zQQI8VVl/IOkt8wYTvk12DC1FW2P8AxSx8
Tw==
              "]]}, Annotation[#, "Charting`Private`Tag$13306#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
fAM=
              "]]}, Annotation[#, "Charting`Private`Tag$13306#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$13306#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
YomGIu5J0jPcPzL9CmryY4n/AVhIDbM=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$13306#4"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}], 
              GrayLevel[0.5]], 
             LineBox[CompressedData["
1:eJxN0Hss1AEAB/Aj5GJxTK08kuZ+l1ec61K7kXMNKdUp80cscSgtozt5pLij
E2lpPdyVR1e0wrkSRyplnsujMSKsjK6t0121FZv02trve9/tu+8+/343Hk3h
C4wpFMrev/23ASFfvSvMiJ2U/1Fedky1NoedJkIfiqnwz2MKn0RLuKU4gult
AzOHmnw7HGF6ZBZbw4JXx6/geMXBE9LPImkPnHTAM3yHK4N0xkxZ5Zo8uCBz
asPTOThSLfJvC9xMetOyplhSA6dS8/kiqhtpSVu6+oUALhUFho32wXGjsTlB
hDtp9VI9Y1IMr3QbNuZoYPtfYdk/uB6k3d+Wu2Tdg5+dsQ8iVnmStu3SGXkl
wAI7uX65D862uJlNEF6kS6hC9vqLsPNgxnG2Hj7tN8KpC9tC+tUDU39tA5w2
0617aeZN+vlr5yUFC6Z2aiqSEmB20Rva5FU49iDLgdkD9xsRs+WL8DoxL7OZ
7kM63mywpjEKLo0W34mWwr9v9B92aIKTx8T17Rq49WPcgJUdk7TpsiqfFwz7
fmBY0NNhhYod7nAXtspVMRZG4RiXQ8NnTXxJ1/YKbLVseDvfknYiCb6vnJ6W
XYfXWtlz63rhRK5ElLwAL0blCQJcWaSlp7TzC5Hw4pHcoOgCeFsa86THeThd
Mle2ZODv1SE6WSH87ZO1bKwYnhfe1u27Ar8r7JBxK2EnubCTVgXH1NL17w08
NVDEO6eAx20i9G3V8PCtWd7WOpimvJZiUg/vbw+Wjxh4aKZWn9oA99OFcuUj
2MKP3pXTCO8OHdfveQz3JXN2aZtg8xxdypNmOORSlfyC2uDfSn5XVAvcrTL5
QrTCfwATqQeX
              "]]}, 
            Annotation[#, "Charting`Private`Tag$13306#5"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> NCache[{
            Log[100000], 0}, {11.512925464970229`, 0}], 
         FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{40, 1}, {1, 60}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{11.512925652936358`, 20.72326564898028}, {0.,
             5.496720737761582}}, {{11.512925652936358`, 20.72326564898028}, {
            0., 5.496720737761582}}}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {11.512925464970229`, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"variance / dB (10\\!\\(\\*SubscriptBox[\\(log\\), \
\\(10\\)]\\))\"", TraditionalForm], ""}, {"", 
            FormBox[
            "\"nondegenerate OPO\\n\\!\\(\\*SubscriptBox[\\(V\\), \\(s1, \
s1\\)]\\) on-diagonal (top), \\!\\(\\*SubscriptBox[\\(V\\), \\(s1, i2\\)]\\) \
off-diagonal terms (bottom)\\nPD and intracavity loss\"", TraditionalForm]}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 1}, {1, 60}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{
             Log[100000], 
             Log[1000000000]}, {0., 5.496720737761582}}, {{
           11.512925464970229`, 20.72326583694641}, {0., 5.496720737761582}}],
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}],FormBox[
        FormBox[
         TemplateBox[{
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Vs1s1PDloss", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"Tin", "=", "0"}], ",", 
                   RowBox[{"Tloss", "=", "0"}], ",", 
                   RowBox[{"Rpd", "=", "0"}]}], ")"}], ")"}]}], 
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Vs1s1PDloss", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"Tin", "=", "0"}], ",", 
                   RowBox[{"Tloss", "=", "0"}], ",", 
                   RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], ")"}]}], 
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Vs1s1PDloss", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"Tin", "=", "0.1`"}], ",", 
                   RowBox[{"Tloss", "=", "0.1`"}], ",", 
                   RowBox[{"Rpd", "=", "0"}]}], ")"}], ")"}]}], 
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Vs1s1PDloss", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"Tin", "=", "0.1`"}], ",", 
                   RowBox[{"Tloss", "=", "0.1`"}], ",", 
                   RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], ")"}]}], 
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               "1", ")"}]}]}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm], ",", 
                   TagBox[#3, HoldForm], ",", 
                   TagBox[#4, HoldForm], ",", 
                   TagBox[#5, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwV1nk01dv7B3CVEpnOOZ9juoZSObPxJGR4c9wo3ULqllQylClThiJCkkLd
dMvUqIlQkSKUT98GY5d0m66hUDQQjZTpt39/7fVae61n7/3s/Txrz/MKcfWd
LiUlpTFNSur/RxvHz4anZnHQc8jtk7M9G1f+0gpTns3Biogl2X8Qa79cVpok
y8GyDSuslhOP++cbbZPn4JR2604JcWXaamNDJgf+/2aXLyI2brlh8j8tDkZq
npupE+utjTHtE3Mw3V7LpkPCxrFTF6PWmXKw2+CtzQti6f62m42LOaC5PRb/
EvdGCxZfteCAeXm9TjPxmZyOxTvBwZwZLmeriTU6rc3lVnCQv7AhMYdY0WeG
pb43B7Mzdkc6E5+U/3im1ocDvw8Seydi4Y22mS5bOWCc7pFbSuw0K79lhz8H
8nfC9ywhTi2A960QDhpNw6X1iKcNxh20383B8fw/wn/asfEtcvSF+zEOUj4o
7c4h3qv92mrgOAe5fu6Co8TMurr8uGwSb6qyNZ3YUC0r6EweB4bsiIk9xNur
Fkn1neXg8XtOpy9x32Q4J+wKBzetfC4ZEL/cPxi5v47kR7F5uMqWDan9K20n
6zmoGRA9uE6sl3JVPrKRg7n28oeLicOTw855PeIgplRqxiliucTvrVZPOFj0
hhWQQGwZMyH41sXBH3Jf9STEZ4IUejx/cKCrJeivBRsPA4NLno+Q+K2JThXE
AwEtO1f+5CDb2OLcFWJz/yNKluMcpMukCE8St/myrVSnc2FhGn9+F7H0Zq3s
RwpcBOuYqRsS+7mIVlos5CLkhNHBTBs2CqbCawv1uNib/covlfhdSaWhOpcL
Ozkp83hifzl71iifC5Uq+xJ/4oB77i9uGHLxuiij14Y4aFGql5ElF2iwjHhv
zUaoem8UdzUXG8YyUg2Jr9Vx32W5caFefy9gAfFwZPB6mbVcLLU7ukSNOKzt
55K+dVzM8ckrmLIi+UpTnnZ+ExfZhzNKHhFHTFil6QRwsbgicMVW4p3d2adV
Erkonuyfd8CSjRdDOYsuJHEx1vLCbxex2WRuk0kyWa9nRZY/8U+NkyPO+7m4
t13v8jLiGLezq9IyuPhWue3cbOLYusKpqRwuDI3y7yYuYSO+pGrz+zIuBju0
0jdbsNFVXf09upwLZwfdyBXE1o01abNukngKoTAnnuq7UzH/Fhcasw3imMQJ
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
ofHPqNnJz0y4lV/4dr5EiGt7/sz8/IGJ+EMlD1uuC3Huu3e6bycTrXa3AxbS
QoyEdcZF3WUioqijrPWFECGnjg5qpDAxeXbTtg3/CdG+Sd7FMomJ1OzXv/W1
C3H/ycu6dfFMnNz3JnmsSwid/7rak6KYeLh5YK3eWyGa6q2ovK1MqFHjv2I/
C7E9rD/6+e9M3N79m4QjJ8LF7q/bNkox0dWgsilrjghyc5a/XDjOgJQqc5eM
ggj3k6/vfD/CgF3p7Kv9SiLEDGUbeQ0xUP/2u0YBW4RytZMa6l0MtK1s/cKd
J0KI2UnbnCoG3s3dl883E2GTlfWthyEMyAUn3M41F0FQv0dnMIABQXXsC7kl
IoS7bjBR3MpA8JpwxY9WIvi0z3KDBwNfD2yOKZKIYF6QLOfjyMDkF3NX4SoR
rjJ92y/oMMB68Gma/lYRbjR/6xppUIZb+AXb29tEeLb9T/lv95RxXMcjcYW/
CB6R8H1/WxlqMQ1SgUEiHNt1MaW2VBnaBuenLoWLkLoqa4Z6jjK4Oesn5u0R
4cXIsce7tyrDcvv9UXa2CEFLYiZaRpTgy84dmmgQ4S99ua21cxVhrd54LLxJ
BIeaGi02UxEqWr+W9DeLoPk5S3fjDEU8XOCe2toiguUHh8l7bxXAFWvMO/dU
hAedxf4DhQr44Jrr6tgtwu3axznnDBQQ+lfujcxREYKP/HQ4aCiP2Dl5sRyO
Plwyax57yMghIiRlaTVXHz795H/+VRZBT8IYq/j6QOXrdc2vZOGR53gpSqSP
+MVtmiMVsrAW/Gh7YKKP6R0OVPw2WUg5ufB9oI/PpZ2azvdmI/mgzMsz6/Vx
Z4tNx9h2GWTIRphqpOtjS9D6wvDD0jijaX/pYoY+zlfz89qipVFmQKmZHNZH
jlBDXtdTGs/WlP90ytSH2uwFUYcNpTE3/1tNXLY+Rk/4VJ1vnYEyi0hJ93l9
eHokVlQrzMCzwCjngtv68HDfGFseOw1z/9kZYDqkD7OD53uOrBq3iTZ7Ylns
ZADT6fU74jFo03R5pvXHqwbgviqLVz19pza8++Gnu7MM4fQuPz+68Uvtnda5
Y/liQxwezcInx+m07P2+U35bDaFXtaOz7Kg8bXrwOaP9b0MMr7ALdfFk0Vvc
xJrGdYZoa4DbBqE63TyN03ty1BAej4JGGzR1aPUk+1039YzQ0LU1sC1Al/aZ
9c/F6+uMkH9i6Cs/ZyF9ZGPSuY37jRC2xNm64jSXnspq9tC8YQRd3SfxU2cE
dOCzpJLaPiPMEdcr937Up2/1ez9SYhtj44Wa62+nGdEzJ64l2zsY4y4r9qVF
qTFt8pY7Ry/KGJduawZ7/i6m86+ZrtQ8b4yjL3uLEtoW0UoJ17gjT43h1imb
PZK4mN6ku6YtXtoEUSkrTbTY5nRRvS/ro6kJQke2qaxptKDNXeUZQX4m6DT/
fOtxtCVdeKWzM+e4CWaPfS/NnW1Nqyr9ZldcbwJHO5M6x2obepvd3sjAERPE
iubfP1YAenRdoq/NQjHsosqzD4fY0vt3fBwYWSuG6dGBwQgHO3rUM0GycZ8Y
GkuDBYPKEnpxuHGwMEWM86/zGkMpCR219032GPG+vUP+31Ql9PcLjp9yUsXY
MChTOKYtob98UM55liYGu/wHV04koQcizn5alSmGt2e2AWeZhH6V+r8cu9Ni
JNdtWbslUUJr50bcZ5wRQ+XO659vkiX0piK9odfE6x7Gn/RLldAdjw7a78kX
o1yi+jbksIR+wVw9VH1BjNKD5ZHxJyV024le+0XFYlQyok7k3ZLQjCvHQqRL
xFBd3WKrc1tCO9c65D4hFhTa9+fTErqlu2go7KoYWV1JxpfrJHSzXkTulTIx
dNIdGyufSug5ZnoP4q6L0XkoLtTypYRevuzF0IpyMbokj1ToDgndEGj5+8cb
YtxRq/Gu65XQs+M+hVTdFGNZr7ucU7+Edjx0JvdAhRgJN1il/3yQ0PtPuz5Y
VymGp2/fn66fJPTDa9LDnFtiGDe0TT79LKH/DzGjcdM=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$13384#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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

              "]]}, Annotation[#, "Charting`Private`Tag$13384#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
7WW951+ja1K+OsoxTIjonsaZPUfpq00eZV5jQrGDQtQy/ypUxFquqH2dCUuj
tvXnNVWiNtunf81vMkGWamSx9WoFUr//syo4gQlr4jNulg2XoSJ9P2PBQybk
VKpf2xBehNrc/S2znjNhyGj+t7bUXTR4YftLDoHzVdPNUpRIRNM3Vmq95DGh
fn9N8k+heKT2rHTZ59dMUJ+VMBD6dB25iP1pW1zHhI62iBVMbQ80czfgsFcb
zv8/pVvJ4vGE+sdAN50xJvjrhySuVyom6nRfcbPGmVAuql01NFJMnMG3ceVJ
JtyVqWAUv3xKvPVNrZn7yQS5Ifthc89Swl2lesObaSZkCtFcnjWXE6Uusr02
4ixwsa29z3DhEbtEM228VVnAIrl+76uvIX57jFH71rBgICOD0ry9lkhr0xOx
VWfBrqzMVTavaonJ7PoneutZ0KSUuSBe+Y64YzmxRIjCgorZz7C7uJ74mmJQ
G8thAVM7vO4N0UAE6DUb5JmzIHws5+HcxhYCRDr0tu5mgYnizNisTwsh/b6b
89GCBV1s7oAdr4W46zBAH7digdJW2bUc+1biVcTf1ZwDLIiMVRl2TGgjZFrV
5iodWeBBO3RRcn0ncc/b43l9MAsGN9ftT7zcQ7ht8S63D2HBFh8J86VfegjO
Iv+SH6EsmD96kj2i00u8TQjJlw1jQeZotcK34V5ihLiZYhPFgpW0V+dO5vMJ
naXlwV3xLBg66LXbUeMrUZ+zyHC4gAVrZESEqrn9BL3+cvqxQha0qka2DHv3
EzHDwqIdRSz4LqGStO1+P7GLPl9TXcKCiS53r+uiA8TH/N9WqZUsWKEbEBxS
O0A0PfnuZFXDgjbqlsShQ4NER+m7a2U9LGjcX5dWmD1M+Ajejr4UZ4OYR9Kr
fWcmCJbZlM9ZCTa4SxsYBN6YIEaeUP6wJdmw65zii6cFE4RzaMxCmhQbnNS2
L1wYmSDs1azlLsiwITTywpmDzpPEtsNfNPUV2NAidqiIcfw/QrHzP98iVTZo
uaW+ivL4RbxoVJ+5z2HDgw2P4gNb/xLRgwXybpvYMBThGFo595c4IITImjps
MDJ7OK2mMU38xzpsS+iy4buIc97ugGmCfD2xoEufDRnNTAsDlRnixm4Fx+Vc
Noz7OFq4uM4SjnWiH8J3s0HDuFJEWG2BkKoeSHU5yYaV0i4ipwNEeDpR7fJd
t9lwsjhPY9MtSd6xvZzVWjVs+OS682auvBzvvTCpL2WKDfs9sytTNy3nKV0y
OVuqoQnmB82aRd0UeY7iHzOLD2jCgaq6EmcrVd6Nw5ceHL6iCXtK1MnXlNby
Fu68t19dogk/42KeaKav57m3XconBjSho+hzyelQDV759xMfZFdoQWUCRcjL
nMJbNPckzGSHFpyyEdTEu9N52v3kxRr+WmDysV9hmyuLd/+JjsXqh1pwi754
8rqWJk829An5T6sWhF+5dWVXmxbvyDrbpgti2kA+mSv1+hiHl1vrtGxYRxtW
m/74xZDX4W22lpH3cNGGCzJKEdUVurzsx1++JMZrQ0eczzFJs828VbIqRnm1
2sCr3shs/qvPcza67Of+RxuMSu+PhsQa8KYOXHRCGzmQ3V/ilaZiyLtyZnjk
zz4OyNxarl1fh3hTR0OND4dzQPSHY1/OY+Dp+mh50iM48CbA8i2jCHj+l78l
zGD/XXMj50kJ8H5lmI4mRnJg5yapgNIq4E0OySW2RXNA/3ii2qs64I343hvd
c5MDI8/c8zsHgNcb+SrRKI0DU3/lHkupcXlrknyr5dM5kHq6vCxmHZd3JFdj
jI9tXBX4SlaDy+v+EGUScp8Dl5s5XSsYXF6Hgs1YZQYHQjN8lNZt4fKa7vaZ
bMrjwPrRqBr9/Vye/OM4L7F8DlSGtQie23F5lsSOpGbsB2zlOTjC5TUIcse8
Czjw0veWzg4nLu+9hm/S4yKc/6R8ic0ZLm+xnsab4GIOSDvJtbf5c3k7zTrG
dj3lAFyZ/3vwHJf3zt1g23AJ3q/1gdHRi1yeZPCoV0UpByrEDrj0hXF5prHp
SVfLOHB0+FfsyUgu70qa9ZsDzzgwLXe+9N9oLu/tE7FxUjkHWhYGezyuc3n/
A3eh+FQ=
              "]]}, Annotation[#, "Charting`Private`Tag$13384#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$13384#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> NCache[{
            Log[100000], 0}, {11.512925464970229`, 0}], 
         FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{40, 1}, {50, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{11.512925652936358`, 
            20.72326564898028}, {-42.899643078094826`, 5.316714977179545}}, {{
            11.512925652936358`, 20.72326564898028}, {-42.899643078094826`, 
            5.316714977179545}}}}, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {11.512925464970229`, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"covariance / dB (10\\!\\(\\*SubscriptBox[\\(log\\), \
\\(10\\)]\\))\"", TraditionalForm], ""}, {
            FormBox[
            "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / (log scale)\"", TraditionalForm], ""}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 1}, {50, 1}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{
             Log[100000], 
             Log[1000000000]}, {-42.899643078094826`, 5.316714977179545}}, {{
           11.512925464970229`, 20.72326583694641}, {-42.899643078094826`, 
           5.316714977179545}}], PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Vs1i2PDloss", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"Tin", "=", "0"}], ",", 
                   RowBox[{"Tloss", "=", "0"}], ",", 
                   RowBox[{"Rpd", "=", "0"}]}], ")"}], ")"}]}], 
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Vs1i2PDloss", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"Tin", "=", "0"}], ",", 
                   RowBox[{"Tloss", "=", "0"}], ",", 
                   RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], ")"}]}], 
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Vs1i2PDloss", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"Tin", "=", "0.1`"}], ",", 
                   RowBox[{"Tloss", "=", "0.1`"}], ",", 
                   RowBox[{"Rpd", "=", "0"}]}], ")"}], ")"}]}], 
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Vs1i2PDloss", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"Tin", "=", "0.1`"}], ",", 
                   RowBox[{"Tloss", "=", "0.1`"}], ",", 
                   RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], ")"}]}]}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm], ",", 
                   TagBox[#3, HoldForm], ",", 
                   TagBox[#4, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.8353117670564737`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"dcc69de8-61e8-4089-8a1c-b876f048f67a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"demonstrating", " ", "squeezing"}], ",", " ", 
    RowBox[{"linear", " ", "combinations", " ", "of", " ", "quadratures"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "x", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vcom", "[", 
     RowBox[{"\[Psi]_", ",", "Rpd_"}], "]"}], ":=", 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "Rpd"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "x", " ", 
             SuperscriptBox["\[Kappa]a", "2"]}], " ", "+", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"2", "\[Psi]"}], "]"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["x", "2"]}], ")"}], " ", 
                SuperscriptBox["\[Kappa]a", "2"]}], "+", 
               SuperscriptBox["\[Omega]", "2"]}], ")"}]}]}], ")"}]}], ")"}], 
        "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
           SuperscriptBox["\[Kappa]a", "4"]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Kappa]a", "2"], " ", 
           SuperscriptBox["\[Omega]", "2"]}], "+", 
          SuperscriptBox["\[Omega]", "4"]}], ")"}]}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"2", 
    RowBox[{"Vcom", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], ",", "0"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "need", " ", "to", " ", "show", " ", "for", " ", "degenerate", " ", 
       "OPO", " ", "that", " ", "\[Theta]b"}], "\[NotEqual]", 
      RowBox[{
      "0", " ", "results", " ", "are", " ", "given", " ", "by", " ", "a", " ",
        "linear", " ", "combination", " ", "of", " ", "\[Theta]b"}]}], "=", 
     RowBox[{"0", " ", "quadratures"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "g", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Idd", "=", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalGamma]d", "=", 
     RowBox[{"(", GridBox[{
        {"1", "1"},
        {
         RowBox[{"-", "I"}], "I"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Md", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "\[Theta]b"}], "]"}]},
        {
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[Theta]b"}], "]"}], "0"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Asumpsd", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Kappa]af", ">", "0"}], ",", 
       RowBox[{"\[Kappa]a", ">", "\[Kappa]af"}], ",", 
       RowBox[{"g", ">", "0"}], ",", 
       RowBox[{"\[CapitalOmega]", ">", "0"}], ",", 
       RowBox[{"Element", "[", 
        RowBox[{"\[Theta]b", ",", "Reals"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Td", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", "\[Kappa]af", " ", 
         RowBox[{"\[CapitalGamma]d", ".", 
          RowBox[{"Inverse", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Kappa]a", "-", 
               RowBox[{"I", " ", "\[CapitalOmega]"}]}], ")"}], "Idd"}], "-", 
            RowBox[{"g", " ", "Md"}]}], "]"}], ".", 
          RowBox[{"Inverse", "[", "\[CapitalGamma]d", "]"}]}]}], "-", "Idd"}],
        ",", 
       RowBox[{"Assumptions", "\[Rule]", "Asumpsd"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rd", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Kappa]af", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}], ")"}]}], ")"}], 
         RowBox[{"1", "/", "2"}]], " ", 
        RowBox[{"\[CapitalGamma]d", ".", 
         RowBox[{"Inverse", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Kappa]a", "-", 
              RowBox[{"I", " ", "\[CapitalOmega]"}]}], ")"}], "Idd"}], "-", 
           RowBox[{"g", " ", "Md"}]}], "]"}], ".", 
         RowBox[{"Inverse", "[", "\[CapitalGamma]d", "]"}]}]}], ",", 
       RowBox[{"Assumptions", "\[Rule]", "Asumpsd"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vd", "=", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Td", ".", 
         RowBox[{"ConjugateTranspose", "[", "Td", "]"}]}], "+", 
        RowBox[{"Rd", ".", 
         RowBox[{"ConjugateTranspose", "[", "Rd", "]"}]}]}], ",", 
       RowBox[{"Assumptions", "\[Rule]", "Asumpsd"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Vd", "//", "MatrixForm"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Vd", "/.", 
      RowBox[{"{", 
       RowBox[{"\[Theta]b", "\[Rule]", "0"}], "}"}]}], "]"}], "//", 
    "MatrixForm"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Vd", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ")"}], "/.", 
       RowBox[{"{", 
        RowBox[{"g", "\[Rule]", 
         RowBox[{"x", " ", "\[Kappa]a"}]}], "}"}]}], ")"}], "==", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "x", " ", 
           SuperscriptBox["\[Kappa]a", "2"]}], " ", "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]b", "]"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["x", "2"]}], ")"}], " ", 
              SuperscriptBox["\[Kappa]a", "2"]}], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         SuperscriptBox["\[Kappa]a", "4"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Kappa]a", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "4"]}]]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"to", "-", 
      RowBox[{"do", ":", " ", 
       RowBox[{
        RowBox[{"check", " ", "this", " ", "covariance", " ", "matrix"}], " ",
         "-", " ", 
        RowBox[{"rows", " ", "are", " ", 
         SubscriptBox[
          OverscriptBox["X", "^"], "1"], " ", "and", " ", 
         SubscriptBox[
          OverscriptBox["X", "^"], "2"]}]}]}]}], ",", " ", 
     RowBox[{
     "surely", " ", "covariances", " ", "should", " ", "be", " ", "zero", " ",
       "for", " ", "degenerate", " ", "OPO", " ", "given", " ", "vacuum", " ", 
      RowBox[{"inputs", "?"}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.835308593742786*^9, 3.835308718773211*^9}, {
  3.8353088820736313`*^9, 3.835308912364955*^9}, {3.835311774929598*^9, 
  3.8353117764158*^9}, {3.835319450987887*^9, 3.8353194518559933`*^9}, {
  3.835403468216269*^9, 3.835403488980576*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"a0d8d83d-95cc-4f9b-8224-a99d4af539bf"],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    FractionBox[
     RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "x", " ", 
         SuperscriptBox["\[Kappa]a", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Kappa]a", "2"]}], "+", 
        SuperscriptBox["\[Omega]", "2"]}], ")"}]}], 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
       SuperscriptBox["\[Kappa]a", "4"]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["x", "2"]}], ")"}], " ", 
       SuperscriptBox["\[Kappa]a", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}], "+", 
      SuperscriptBox["\[Omega]", "4"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.835311767274596*^9, 3.835311776789311*^9}, 
   3.8353194623977823`*^9, {3.835403472775064*^9, 3.8354034894293118`*^9}},
 CellLabel->
  "Out[102]=",ExpressionUUID->"693d11c7-d73e-4bd3-a123-8cfbf90c362b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        SuperscriptBox["g", "4"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]a", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["g", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Kappa]a", "2"]}], "+", 
           RowBox[{"4", " ", "\[Kappa]a", " ", "\[Kappa]af"}], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        RowBox[{"4", " ", "g", " ", "\[Kappa]af", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["g", "2"], "+", 
           SuperscriptBox["\[Kappa]a", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]b", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"g", "-", "\[Kappa]a"}], ")"}], "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"g", "+", "\[Kappa]a"}], ")"}], "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", "g", " ", "\[Kappa]af", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["g", "2"], "+", 
          SuperscriptBox["\[Kappa]a", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"g", "-", "\[Kappa]a"}], ")"}], "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"g", "+", "\[Kappa]a"}], ")"}], "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]]},
     {
      FractionBox[
       RowBox[{"4", " ", "g", " ", "\[Kappa]af", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["g", "2"], "+", 
          SuperscriptBox["\[Kappa]a", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], 
       RowBox[{
        SuperscriptBox["g", "4"], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["g", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Kappa]a", "2"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]a", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["g", "4"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]a", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["g", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Kappa]a", "2"]}], "+", 
           RowBox[{"4", " ", "\[Kappa]a", " ", "\[Kappa]af"}], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
        RowBox[{"4", " ", "g", " ", "\[Kappa]af", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["g", "2"], "+", 
           SuperscriptBox["\[Kappa]a", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]b", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"g", "-", "\[Kappa]a"}], ")"}], "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"g", "+", "\[Kappa]a"}], ")"}], "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.835311767274596*^9, 3.835311776789311*^9}, 
   3.8353194623977823`*^9, {3.835403472775064*^9, 3.835403489452116*^9}},
 CellLabel->
  "Out[111]//MatrixForm=",ExpressionUUID->"5b4d16c8-44d4-4f7a-ad7f-\
f6b305fb5119"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"4", " ", "g", " ", "\[Kappa]af"}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"g", "-", "\[Kappa]a"}], ")"}], "2"], "+", 
         SuperscriptBox["\[CapitalOmega]", "2"]}]]}], "0"},
     {"0", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"4", " ", "g", " ", "\[Kappa]af"}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"g", "+", "\[Kappa]a"}], ")"}], "2"], "+", 
         SuperscriptBox["\[CapitalOmega]", "2"]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.835311767274596*^9, 3.835311776789311*^9}, 
   3.8353194623977823`*^9, {3.835403472775064*^9, 3.835403489455145*^9}},
 CellLabel->
  "Out[112]//MatrixForm=",ExpressionUUID->"3fea24c3-d062-4d79-9b0a-\
0615ee4048ed"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.835311767274596*^9, 3.835311776789311*^9}, 
   3.8353194623977823`*^9, {3.835403472775064*^9, 3.835403489456827*^9}},
 CellLabel->
  "Out[113]=",ExpressionUUID->"bf9e2436-98bb-4177-95bc-b5a4164c9643"]
}, Open  ]]
},
WindowSize->{1441, 866},
WindowMargins->{{Automatic, -1691}, {Automatic, 65}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 347, 8, 125, "Text",ExpressionUUID->"a05200c5-c521-4b6e-b424-86e07dabe570"],
Cell[908, 30, 538, 15, 54, "Text",ExpressionUUID->"ca20a264-25e2-4796-9056-19bee610b50e"],
Cell[1449, 47, 2665, 78, 677, "Input",ExpressionUUID->"42d83666-4f6c-4e2b-990a-a38e3d9a22ec"],
Cell[4117, 127, 1354, 36, 120, "Input",ExpressionUUID->"7b8d66d9-74b8-4ae3-8d54-04d1f52a2d1b"],
Cell[CellGroupData[{
Cell[5496, 167, 623, 12, 184, "Input",ExpressionUUID->"ce9cfe77-5588-42f5-86fc-f43f3f3aae83"],
Cell[6122, 181, 9202, 245, 699, "Output",ExpressionUUID->"2b2d854d-3a4e-4083-98a0-d852ddd8d8f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15361, 431, 887, 19, 105, "Input",ExpressionUUID->"b6612c5d-4f15-43b0-bd96-236375be9071"],
Cell[16251, 452, 2525, 76, 391, "Output",ExpressionUUID->"9eeebcab-dfdd-427d-8117-92313658886a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18813, 533, 3829, 101, 603, "Input",ExpressionUUID->"60245e0a-b18c-4dbd-aeb4-35bfcf2d1ace"],
Cell[22645, 636, 764, 22, 207, "Output",ExpressionUUID->"e2140cf7-a9ca-4f5b-acdd-c55e93d8c1a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23446, 663, 1517, 42, 353, "Input",ExpressionUUID->"3bbf1121-7a7a-465b-a9b8-efd82437aa9a"],
Cell[24966, 707, 152, 2, 119, "Output",ExpressionUUID->"4f8f0e7b-9450-4d15-affd-170615aea7c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25155, 714, 1919, 45, 414, "Input",ExpressionUUID->"876a3012-4db6-4a05-bd4a-b69a0f88b998"],
Cell[27077, 761, 11299, 313, 699, "Output",ExpressionUUID->"76da479b-290a-4e55-b844-13f034dd3e96"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38413, 1079, 274, 6, 105, "Input",ExpressionUUID->"6c2ea06b-f9e4-4101-a6e9-2bed25faaa62"],
Cell[38690, 1087, 766, 22, 207, "Output",ExpressionUUID->"2f9b001f-124c-4333-8e30-5102489d1c1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39493, 1114, 641, 15, 184, "Input",ExpressionUUID->"6109cbb5-78f3-42a3-be5f-088eaa742d11"],
Cell[40137, 1131, 151, 2, 119, "Output",ExpressionUUID->"009e23b5-6d31-43ea-a8ac-6fd45b94b232"]
}, Open  ]],
Cell[40303, 1136, 208, 4, 121, "Text",ExpressionUUID->"9f769486-c43a-425b-9f57-c6852615a46c"],
Cell[CellGroupData[{
Cell[40536, 1144, 3337, 84, 375, "Input",ExpressionUUID->"baf790ca-fe34-42d6-97bb-71db0f768986"],
Cell[43876, 1230, 11713, 317, 311, "Output",ExpressionUUID->"a8df74eb-89f9-4ff0-9329-7d72de2340a0"],
Cell[55592, 1549, 152, 2, 53, "Output",ExpressionUUID->"e662f5ed-1b70-465d-8f98-f23aba8f31db"]
}, Open  ]],
Cell[55759, 1554, 784, 20, 116, "Input",ExpressionUUID->"524336a8-c033-4272-a92d-2bb29f74dd17"],
Cell[56546, 1576, 251, 6, 54, "Text",ExpressionUUID->"8e3464c1-b9c0-4855-ab8e-d6e4dec1a3d3"],
Cell[CellGroupData[{
Cell[56822, 1586, 4888, 85, 127, "Input",ExpressionUUID->"a87c3ed5-bcdb-4424-adc8-8c7944ecb967"],
Cell[61713, 1673, 4792, 83, 133, "Output",ExpressionUUID->"480f7035-6157-47c4-bc6a-2623a75d8f40"]
}, Open  ]],
Cell[66520, 1759, 497, 11, 47, "Input",ExpressionUUID->"367c6a75-dff7-4d73-acfc-4b4ec1008503"],
Cell[CellGroupData[{
Cell[67042, 1774, 11893, 311, 2115, "Input",ExpressionUUID->"6271967f-9ebc-4495-a23a-a5002fd3c14d"],
Cell[78938, 2087, 71368, 1294, 362, "Output",ExpressionUUID->"872f9c55-7d17-4c5f-8da8-deeab9e0e356"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150343, 3386, 6848, 174, 1098, "Input",ExpressionUUID->"b60d38f1-f753-4f86-ac1c-3ef626e3fc30"],
Cell[157194, 3562, 132061, 2380, 514, "Output",ExpressionUUID->"c9354752-9b9d-4290-8be6-5b23d3f22ef8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289292, 5947, 7147, 187, 1278, "Input",ExpressionUUID->"f2455dc5-ea52-4213-a106-86ca368c0212"],
Cell[296442, 6136, 68281, 1247, 437, "Output",ExpressionUUID->"b1adb083-79aa-4b0e-8eed-e1f18e079872"]
}, Open  ]],
Cell[CellGroupData[{
Cell[364760, 7388, 10650, 279, 1711, "Input",ExpressionUUID->"9078f2fd-8f04-4df4-a0b7-27d6d2095637"],
Cell[375413, 7669, 134719, 2425, 769, "Output",ExpressionUUID->"dcc69de8-61e8-4089-8a1c-b876f048f67a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510169, 10099, 8214, 225, 852, "Input",ExpressionUUID->"a0d8d83d-95cc-4f9b-8224-a99d4af539bf"],
Cell[518386, 10326, 1249, 34, 94, "Output",ExpressionUUID->"693d11c7-d73e-4bd3-a123-8cfbf90c362b"],
Cell[519638, 10362, 5112, 137, 177, "Output",ExpressionUUID->"5b4d16c8-44d4-4f7a-ad7f-f6b305fb5119"],
Cell[524753, 10501, 1376, 38, 135, "Output",ExpressionUUID->"3fea24c3-d062-4d79-9b0a-0615ee4048ed"],
Cell[526132, 10541, 254, 4, 53, "Output",ExpressionUUID->"bf9e2436-98bb-4177-95bc-b5a4164c9643"]
}, Open  ]]
}
]
*)

