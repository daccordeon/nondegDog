(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    503862,       9902]
NotebookOptionsPosition[    499699,       9827]
NotebookOutlinePosition[    500068,       9843]
CellTagsIndexPosition[    500025,       9840]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
James Gardner
Working from Yap thesis, 2020
Deriving eq. 7.12 from eq. 7.8 and eq. 7.17 from 7.16.\
\>", "Text",
 CellChangeTimes->{{3.8226797038197737`*^9, 3.822679706522724*^9}, {
  3.822679745530943*^9, 3.8226798004321527`*^9}, {3.822684345497816*^9, 
  3.822684368206997*^9}},ExpressionUUID->"a05200c5-c521-4b6e-b424-\
86e07dabe570"],

Cell[TextData[{
 "Watch out, Yap thesis uses ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["X", "2"], "=", 
    RowBox[{"-", 
     RowBox[{"i", "(", 
      RowBox[{"a", "+", 
       RowBox[{"a", "\[ConjugateTranspose]"}]}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"271c34ff-0824-4cdc-8ba3-3846c0f32ff6"],
 " which gives a different sign in the 2nd and 4th rows of \[CapitalGamma]"
}], "Text",
 CellChangeTimes->{{3.834451710671981*^9, 
  3.834451785840048*^9}},ExpressionUUID->"ca20a264-25e2-4796-9056-\
19bee610b50e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "I", " ", "is", " ", "reserved", " ", "for", " ", "\[ImaginaryI]"}], ",", 
    " ", 
    RowBox[{
    "be", " ", "careful", " ", "not", " ", "to", " ", "confuse", " ", "I", 
     " ", "and", " ", 
     RowBox[{"Id", "!"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Id", "=", 
     RowBox[{"IdentityMatrix", "[", "4", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"eq", ".", " ", "7.6"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M", "=", 
     RowBox[{"\[Kappa]a", 
      RowBox[{"(", GridBox[{
         {
          RowBox[{"-", "1"}], "0", "0", 
          RowBox[{"x", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Theta]b"}]]}]},
         {"0", 
          RowBox[{"-", "1"}], 
          RowBox[{"x", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Theta]b"}]]}], "0"},
         {"0", 
          RowBox[{"x", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Theta]b"}]]}], 
          RowBox[{"-", "1"}], "0"},
         {
          RowBox[{"x", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Theta]b"}]]}], "0", "0", 
          
          RowBox[{"-", "1"}]}
        }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"eq", " ", "7.11"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalGamma]", "=", 
     RowBox[{"(", GridBox[{
        {"1", "1", "0", "0"},
        {
         RowBox[{"-", "\[ImaginaryI]"}], "\[ImaginaryI]", "0", "0"},
        {"0", "0", "1", "1"},
        {"0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "\[ImaginaryI]"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Xfin", "=", 
     RowBox[{"(", GridBox[{
        {"Xfins1"},
        {"Xfins2"},
        {"Xfini1"},
        {"Xfini2"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Xlin", "=", 
     RowBox[{"(", GridBox[{
        {"Xlins1"},
        {"Xlins2"},
        {"Xlini1"},
        {"Xlini2"}
       }], ")"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8225998302323427`*^9, 3.822599840400818*^9}, {
  3.822599884048806*^9, 3.822599959576777*^9}, {3.8226001256082478`*^9, 
  3.822600249764122*^9}, {3.822683060551339*^9, 3.822683081260954*^9}, {
  3.8226842348802567`*^9, 3.822684250189427*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"42d83666-4f6c-4e2b-990a-a38e3d9a22ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"eqs", ".", " ", "7.9"}], ",", " ", "7.10"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"T", " ", "=", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"2", "\[Kappa]af", " ", 
        RowBox[{"\[CapitalGamma]", ".", 
         RowBox[{"Inverse", "[", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "Id"}], "-", "M"}], 
          "]"}], ".", 
         RowBox[{"Inverse", "[", "\[CapitalGamma]", "]"}]}]}], "-", "Id"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tl", " ", "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"2", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}], ")"}], 
        RowBox[{"1", "/", "2"}]], 
       RowBox[{"\[CapitalGamma]", ".", " ", 
        RowBox[{"Inverse", "[", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "Id"}], "-", "M"}], 
         "]"}], ".", 
        RowBox[{"Inverse", "[", "\[CapitalGamma]", "]"}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.822680977897625*^9, 3.82268101078553*^9}, {
   3.822683043681621*^9, 3.822683053149667*^9}, 3.822683437488249*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"7b8d66d9-74b8-4ae3-8d54-04d1f52a2d1b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Xfout", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"T", ".", "Xfin"}], "+", 
     RowBox[{"Tl", ".", "Xlin"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Xfout", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8225999637524*^9, 3.8226000963480873`*^9}, {
   3.822600393237418*^9, 3.822600432692031*^9}, {3.822605096211028*^9, 
   3.82260510210367*^9}, {3.8226057543236113`*^9, 3.822605757603195*^9}, 
   3.82268097646586*^9, {3.822681014791987*^9, 3.822681020480567*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"ce9cfe77-5588-42f5-86fc-f43f3f3aae83"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "Xlins1", " ", 
          SqrtBox[
           RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]a", "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], ")"}]}], "+", 
         RowBox[{"Xfins1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Kappa]a", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["x", "2"]}], ")"}], " ", "\[Kappa]a"}], "+", 
               
               RowBox[{"2", " ", "\[Kappa]af"}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}], ")"}], " ", 
             "\[Omega]"}], "+", 
            SuperscriptBox["\[Omega]", "2"]}], ")"}]}], "+", 
         RowBox[{"2", " ", "x", " ", "\[Kappa]a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Xfini1", " ", "\[Kappa]af"}], "+", 
               RowBox[{"Xlini1", " ", 
                SqrtBox[
                 RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}]}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Xfini2", " ", "\[Kappa]af"}], "+", 
               RowBox[{"Xlini2", " ", 
                SqrtBox[
                 RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]b", "]"}]}]}], ")"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"]}], "-", 
         RowBox[{
         "2", " ", "\[ImaginaryI]", " ", "\[Kappa]a", " ", "\[Omega]"}], "+", 
         
         SuperscriptBox["\[Omega]", "2"]}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "Xlins2", " ", 
          SqrtBox[
           RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]a", "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], ")"}]}], "+", 
         RowBox[{"Xfins2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Kappa]a", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["x", "2"]}], ")"}], " ", "\[Kappa]a"}], "+", 
               
               RowBox[{"2", " ", "\[Kappa]af"}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}], ")"}], " ", 
             "\[Omega]"}], "+", 
            SuperscriptBox["\[Omega]", "2"]}], ")"}]}], "-", 
         RowBox[{"2", " ", "x", " ", "\[Kappa]a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Xfini2", " ", "\[Kappa]af"}], "+", 
            RowBox[{"Xlini2", " ", 
             SqrtBox[
              RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "+", 
         RowBox[{"2", " ", "x", " ", "\[Kappa]a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Xfini1", " ", "\[Kappa]af"}], "+", 
            RowBox[{"Xlini1", " ", 
             SqrtBox[
              RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]b", "]"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"]}], "-", 
         RowBox[{
         "2", " ", "\[ImaginaryI]", " ", "\[Kappa]a", " ", "\[Omega]"}], "+", 
         
         SuperscriptBox["\[Omega]", "2"]}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "Xlini1", " ", 
          SqrtBox[
           RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]a", "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], ")"}]}], "+", 
         RowBox[{"Xfini1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Kappa]a", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["x", "2"]}], ")"}], " ", "\[Kappa]a"}], "+", 
               
               RowBox[{"2", " ", "\[Kappa]af"}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}], ")"}], " ", 
             "\[Omega]"}], "+", 
            SuperscriptBox["\[Omega]", "2"]}], ")"}]}], "+", 
         RowBox[{"2", " ", "x", " ", "\[Kappa]a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Xfins1", " ", "\[Kappa]af"}], "+", 
               RowBox[{"Xlins1", " ", 
                SqrtBox[
                 RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}]}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Xfins2", " ", "\[Kappa]af"}], "+", 
               RowBox[{"Xlins2", " ", 
                SqrtBox[
                 RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]b", "]"}]}]}], ")"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"]}], "-", 
         RowBox[{
         "2", " ", "\[ImaginaryI]", " ", "\[Kappa]a", " ", "\[Omega]"}], "+", 
         
         SuperscriptBox["\[Omega]", "2"]}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "Xlini2", " ", 
          SqrtBox[
           RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]a", "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], ")"}]}], "+", 
         RowBox[{"Xfini2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Kappa]a", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["x", "2"]}], ")"}], " ", "\[Kappa]a"}], "+", 
               
               RowBox[{"2", " ", "\[Kappa]af"}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}], ")"}], " ", 
             "\[Omega]"}], "+", 
            SuperscriptBox["\[Omega]", "2"]}], ")"}]}], "-", 
         RowBox[{"2", " ", "x", " ", "\[Kappa]a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Xfins2", " ", "\[Kappa]af"}], "+", 
            RowBox[{"Xlins2", " ", 
             SqrtBox[
              RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "+", 
         RowBox[{"2", " ", "x", " ", "\[Kappa]a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Xfins1", " ", "\[Kappa]af"}], "+", 
            RowBox[{"Xlins1", " ", 
             SqrtBox[
              RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]b", "]"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"]}], "-", 
         RowBox[{
         "2", " ", "\[ImaginaryI]", " ", "\[Kappa]a", " ", "\[Omega]"}], "+", 
         
         SuperscriptBox["\[Omega]", "2"]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8351437152294693`*^9, 3.835217300403728*^9},
 CellLabel->
  "Out[9]//MatrixForm=",ExpressionUUID->"dbb1db64-945f-4301-aca3-\
4965202e8613"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Xfout", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"\[Theta]b", "\[Rule]", "0"}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
    "Xlins1", ",", "Xlins2", ",", "Xlini1", ",", "Xlini2", ",", "Xfins1", ",",
      "Xfins2", ",", "Xfini1", ",", "Xfini2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.822600603323969*^9, 3.822600695815763*^9}, {
   3.822600745149304*^9, 3.822600753227276*^9}, {3.822601018707245*^9, 
   3.822601028253872*^9}, 3.8226051377176247`*^9, 3.82260598515656*^9, {
   3.822606022777628*^9, 3.8226060599038057`*^9}, {3.822606339434466*^9, 
   3.822606354442327*^9}, 3.822683603122847*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"b6612c5d-4f15-43b0-bd96-236375be9071"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
    "2", " ", "x", " ", "Xfini1", " ", "\[Kappa]a", " ", "\[Kappa]af"}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["x", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Kappa]a", "2"]}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Kappa]a", " ", "\[Omega]"}], 
     "+", 
     SuperscriptBox["\[Omega]", "2"]}]]}], "-", 
  FractionBox[
   RowBox[{"2", " ", "x", " ", "Xlini1", " ", "\[Kappa]a", " ", 
    SqrtBox[
     RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]]}], 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}], ")"}], " ", 
     SuperscriptBox["\[Kappa]a", "2"]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Kappa]a", " ", "\[Omega]"}], 
    "+", 
    SuperscriptBox["\[Omega]", "2"]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", "Xlins1", " ", 
    SqrtBox[
     RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}]], " ", 
    RowBox[{"(", 
     RowBox[{"\[Kappa]a", "+", 
      RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], ")"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}], ")"}], " ", 
     SuperscriptBox["\[Kappa]a", "2"]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Kappa]a", " ", "\[Omega]"}], 
    "+", 
    SuperscriptBox["\[Omega]", "2"]}]], "-", 
  FractionBox[
   RowBox[{"Xfins1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Kappa]a", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", "\[Kappa]a"}], "+", 
         RowBox[{"2", " ", "\[Kappa]af"}]}], ")"}]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}], ")"}], " ", "\[Omega]"}], 
      "+", 
      SuperscriptBox["\[Omega]", "2"]}], ")"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}], ")"}], " ", 
     SuperscriptBox["\[Kappa]a", "2"]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Kappa]a", " ", "\[Omega]"}], 
    "+", 
    SuperscriptBox["\[Omega]", "2"]}]]}]], "Output",
 CellChangeTimes->{3.8351437152835083`*^9, 3.8352173004354486`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"be42a79d-8031-4da2-9831-81bfeae740f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"the", " ", "variance", " ", "of", " ", 
     RowBox[{"Xfouts1", ":", " ", 
      RowBox[{
      "if", " ", "assuming", " ", "all", " ", "inputs", " ", "are", " ", 
       "vacuum"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "then", " ", "just", " ", "sum", " ", "the", " ", "abs", " ", "sq", " ", 
      "of", " ", "the", " ", "co"}], "-", 
     RowBox[{"efficients", " ", "of", " ", "each", " ", "input", " ", 
      RowBox[{"fluctuation", "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Vout", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["x", "2"]}], ")"}], " ", 
              SuperscriptBox["\[Kappa]a", "2"]}], "+", 
             SuperscriptBox["\[Omega]", "2"]}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "  ", "\[Kappa]a", " ", "\[Omega]"}], ")"}], 
           "2"]}], ")"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "x", " ", "\[Kappa]a", " ", 
           "\[Kappa]af"}], ")"}], "2"], "+", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "x", " ", "\[Kappa]a", " ", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}], ")"}]}]}], ")"}], 
         "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Kappa]a", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}], ")"}]}]}], ")"}], 
         "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}], ")"}]}], "\[Omega]"}],
           ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]a", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["x", "2"]}], ")"}], " ", "\[Kappa]a"}], "+", 
              RowBox[{"2", " ", "\[Kappa]af"}]}], ")"}]}], "+", 
           SuperscriptBox["\[Omega]", "2"]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}], ")"}], " ", 
           "\[Omega]"}], ")"}], "2"]}], ")"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Kappa]al", "\[Rule]", 
       RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.822602061499239*^9, 3.8226023510262823`*^9}, {
   3.822602405984487*^9, 3.8226024104725323`*^9}, {3.8226034425528173`*^9, 
   3.8226034618208437`*^9}, 3.822605002240943*^9, {3.822606204416477*^9, 
   3.822606204803467*^9}, {3.822678784565789*^9, 3.822679091399884*^9}, {
   3.822679161577652*^9, 3.8226791629691353`*^9}, {3.8226796483378267`*^9, 
   3.8226796868710203`*^9}, {3.822681471788505*^9, 3.8226814719326687`*^9}, {
   3.8226838049271812`*^9, 3.822683915809548*^9}, {3.8226842661448183`*^9, 
   3.8226842897377357`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"60245e0a-b18c-4dbd-aeb4-35bfcf2d1ace"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"8", " ", 
    SuperscriptBox["x", "2"], " ", 
    SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
     SuperscriptBox["\[Kappa]a", "4"]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "2"]}], ")"}], " ", 
     SuperscriptBox["\[Kappa]a", "2"], " ", 
     SuperscriptBox["\[Omega]", "2"]}], "+", 
    SuperscriptBox["\[Omega]", "4"]}]]}]], "Output",
 CellChangeTimes->{3.8351437154359903`*^9, 3.8352173005907793`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"716c7b72-29d7-4d14-a5c1-1abe4da46e21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"for", " ", "reference"}], ",", " ", 
    RowBox[{"the", " ", "desired", " ", "value", " ", "is", " ", 
     RowBox[{"(", 
      RowBox[{"7.12", ",", " ", "7.18"}], ")"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Goal", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"8", " ", 
          SuperscriptBox["x", "2"], 
          RowBox[{"(", 
           FractionBox["\[Kappa]af", "\[Kappa]a"], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "4"], "+", 
          RowBox[{"2", 
           SuperscriptBox["x", "2"], 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["\[Omega]", "\[Kappa]a"], ")"}], "2"], "-", "1"}], 
            ")"}]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["\[Omega]", "\[Kappa]a"], ")"}], "2"], "+", "1"}], 
            ")"}], "2"]}], ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Goal", "\[Equal]", "Vout"}]}]}]], "Input",
 CellChangeTimes->{{3.82268280007688*^9, 3.822682951416771*^9}, {
  3.8226841908327093`*^9, 3.822684227844426*^9}, {3.822684315600874*^9, 
  3.82268432136008*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"3bbf1121-7a7a-465b-a9b8-efd82437aa9a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8351437154651737`*^9, 3.835217300610518*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"88b6b29c-a0f2-480d-a64b-628b4b8ddba0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Attempting", " ", "to", " ", "recover", " ", "7.17"}], ",", " ", 
    
    RowBox[{"the", " ", "covariance", " ", "matrix"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Assumps", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", ">", "0"}], ",", 
       RowBox[{"\[Kappa]a", ">", "0"}], ",", 
       RowBox[{"\[Kappa]af", ">", "0"}], ",", 
       RowBox[{"\[Kappa]al", ">", "0"}], ",", 
       RowBox[{"\[Theta]b", ">", "0"}], ",", 
       RowBox[{"\[Omega]", ">", "0"}], ",", 
       RowBox[{"\[Kappa]a", "\[GreaterEqual]", "\[Kappa]af"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V", " ", "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"T", ".", 
           RowBox[{"ConjugateTranspose", "[", "T", "]"}]}], "+", 
          RowBox[{"Tl", ".", 
           RowBox[{"ConjugateTranspose", "[", "Tl", "]"}]}]}], ")"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Theta]b", "\[Rule]", "0"}], ",", 
          RowBox[{"\[Kappa]al", "\[Rule]", 
           RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}]}]}], "}"}]}], ",", 
       RowBox[{"Assumptions", "\[Rule]", "Assumps"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"V", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.822681036360671*^9, 3.822681048271264*^9}, {
  3.822681085600061*^9, 3.822681085791026*^9}, {3.82268142797054*^9, 
  3.8226815684785*^9}, {3.8226816411537867`*^9, 3.822681697648925*^9}, {
  3.822681733487762*^9, 3.822681770599683*^9}, {3.822682177694689*^9, 
  3.822682185525467*^9}, {3.822682695722245*^9, 3.822682704889517*^9}, {
  3.822682751149374*^9, 3.8226827768436337`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"876a3012-4db6-4a05-bd4a-b69a0f88b998"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}], "+", 
         SuperscriptBox["\[Omega]", "4"]}]]}], "0", 
      FractionBox[
       RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Kappa]a", "2"]}], "+", 
          SuperscriptBox["\[Omega]", "2"]}], ")"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         SuperscriptBox["\[Kappa]a", "4"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Kappa]a", "2"], " ", 
         SuperscriptBox["\[Omega]", "2"]}], "+", 
        SuperscriptBox["\[Omega]", "4"]}]], "0"},
     {"0", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}], "+", 
         SuperscriptBox["\[Omega]", "4"]}]]}], "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["x", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Kappa]a", "2"]}], "+", 
           SuperscriptBox["\[Omega]", "2"]}], ")"}]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}], "+", 
         SuperscriptBox["\[Omega]", "4"]}]]}]},
     {
      FractionBox[
       RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Kappa]a", "2"]}], "+", 
          SuperscriptBox["\[Omega]", "2"]}], ")"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         SuperscriptBox["\[Kappa]a", "4"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Kappa]a", "2"], " ", 
         SuperscriptBox["\[Omega]", "2"]}], "+", 
        SuperscriptBox["\[Omega]", "4"]}]], "0", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}], "+", 
         SuperscriptBox["\[Omega]", "4"]}]]}], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["x", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Kappa]a", "2"]}], "+", 
           SuperscriptBox["\[Omega]", "2"]}], ")"}]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}], "+", 
         SuperscriptBox["\[Omega]", "4"]}]]}], "0", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}], "+", 
         SuperscriptBox["\[Omega]", "4"]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.835143716224049*^9, 3.835217301333393*^9},
 CellLabel->
  "Out[16]//MatrixForm=",ExpressionUUID->"73934a93-ddb3-4aae-b095-\
02cdcf080152"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"V", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.822682454207037*^9, 3.822682457470179*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"6c2ea06b-f9e4-4101-a6e9-2bed25faaa62"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"8", " ", 
    SuperscriptBox["x", "2"], " ", 
    SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
     SuperscriptBox["\[Kappa]a", "4"]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "2"]}], ")"}], " ", 
     SuperscriptBox["\[Kappa]a", "2"], " ", 
     SuperscriptBox["\[Omega]", "2"]}], "+", 
    SuperscriptBox["\[Omega]", "4"]}]]}]], "Output",
 CellChangeTimes->{3.835143716249148*^9, 3.835217301352203*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"f591c21b-2414-45e1-b4bd-b48e71140740"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "diagonal", " ", "elements", " ", "of", " ", "the", " ", 
    "covariance", " ", "matrix", " ", "are", " ", "the", " ", "output", " ", 
    "variances"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"V", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", "Vout", "\[Equal]", 
   "Goal"}]}]], "Input",
 CellChangeTimes->{{3.822682740789555*^9, 3.822682774454265*^9}, {
  3.822684301802327*^9, 3.822684312798724*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"6109cbb5-78f3-42a3-be5f-088eaa742d11"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.835143716315051*^9, 3.8352173013713417`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"7156fded-ded4-4eb8-be23-87ae8c772c9f"]
}, Open  ]],

Cell["Repeating calculation using other convention for \[CapitalGamma]", \
"Text",
 CellChangeTimes->{{3.834451796860199*^9, 
  3.834451809053789*^9}},ExpressionUUID->"9f769486-c43a-425b-9f57-\
c6852615a46c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalGamma]sgn", "=", 
   RowBox[{"(", GridBox[{
      {"1", "1", "0", "0"},
      {"\[ImaginaryI]", 
       RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
      {"0", "0", "1", "1"},
      {"0", "0", "\[ImaginaryI]", 
       RowBox[{"-", "\[ImaginaryI]"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tfsgn", " ", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"2", "\[Kappa]af", " ", 
      RowBox[{"\[CapitalGamma]sgn", ".", 
       RowBox[{"Inverse", "[", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]", " ", "Id"}], "-", 
         "M"}], "]"}], ".", 
       RowBox[{"Inverse", "[", "\[CapitalGamma]sgn", "]"}]}]}], "-", "Id"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tlsgn", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[Kappa]af", " ", "\[Kappa]al"}], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"\[CapitalGamma]sgn", ".", " ", 
      RowBox[{"Inverse", "[", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]", " ", "Id"}], "-", 
        "M"}], "]"}], ".", 
      RowBox[{"Inverse", "[", "\[CapitalGamma]sgn", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vsgn", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Tfsgn", ".", 
         RowBox[{"Tfsgn", "\[ConjugateTranspose]"}]}], "+", 
        RowBox[{"Tlsgn", ".", 
         RowBox[{"Tlsgn", "\[ConjugateTranspose]"}]}]}], ")"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]b", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Kappa]al", "\[Rule]", 
         RowBox[{"\[Kappa]a", "-", "\[Kappa]af"}]}]}], "}"}]}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", ">", "0"}], ",", 
        RowBox[{"\[Kappa]af", ">", "0"}], ",", 
        RowBox[{"\[CapitalOmega]", ">", "0"}], ",", 
        RowBox[{"\[Kappa]a", "\[GreaterEqual]", "\[Kappa]af"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Vsgn", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"V", "/.", 
    RowBox[{"{", 
     RowBox[{"\[Omega]", "\[Rule]", "\[CapitalOmega]"}], "}"}]}], ")"}], 
  "\[Equal]", "Vsgn"}]}], "Input",
 CellChangeTimes->{{3.834451812295288*^9, 3.834451837046207*^9}, {
  3.834451923830192*^9, 3.834452032172666*^9}, {3.8344520789479837`*^9, 
  3.834452093742694*^9}, {3.834452185775103*^9, 3.834452192153179*^9}, {
  3.834452478270042*^9, 3.834452483217395*^9}, {3.834452529001001*^9, 
  3.834452620112172*^9}, {3.834452651834365*^9, 3.834452670216186*^9}, {
  3.8344527489506817`*^9, 3.8344527742777233`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"baf790ca-fe34-42d6-97bb-71db0f768986"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}]]}], "0", 
      FractionBox[
       RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Kappa]a", "2"]}], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         SuperscriptBox["\[Kappa]a", "4"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Kappa]a", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "4"]}]], "0"},
     {"0", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}]]}], "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["x", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Kappa]a", "2"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}]]}]},
     {
      FractionBox[
       RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Kappa]a", "2"]}], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         SuperscriptBox["\[Kappa]a", "4"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Kappa]a", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "4"]}]], "0", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}]]}], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "x", " ", "\[Kappa]a", " ", "\[Kappa]af", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["x", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Kappa]a", "2"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}]]}], "0", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["\[Kappa]a", "3"], " ", "\[Kappa]af"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["\[Kappa]a", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Kappa]a", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8351437174030333`*^9, 3.835217302361617*^9},
 CellLabel->
  "Out[23]//MatrixForm=",ExpressionUUID->"6afc5115-0734-4960-b0a2-\
db1730d5da3c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8351437174030333`*^9, 3.835217302364056*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"1ab0258c-5b09-4c45-af20-0653fea813ca"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"print", " ", "the", " ", "notebook", " ", "to", " ", 
     RowBox[{"a", " ", ".", "pdf"}]}], ",", " ", 
    RowBox[{
    "the", " ", "notebook", " ", "needs", " ", "to", " ", "be", " ", "saved", 
     " ", "for", " ", "this", " ", "to", " ", "function"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"NotebookPrint", "[", 
  RowBox[{
   RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<NOPO_matrices.pdf\>\""}]}], "]"}]}], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"524336a8-c033-4272-a92d-2bb29f74dd17"],

Cell["\<\
Plotting the (co)variances from degenerate and nondegenerate OPO\
\[CloseCurlyQuote]s against frequency\
\>", "Text",
 CellChangeTimes->{{3.83469099403804*^9, 
  3.83469101769831*^9}},ExpressionUUID->"8e3464c1-b9c0-4855-ab8e-\
d6e4dec1a3d3"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 71}, {
    382, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{382, 71},
  PlotRange->{{0, 382}, {0, 71}}]], "Input",
 CellChangeTimes->{{3.834694895943326*^9, 3.834694897665792*^9}, {
  3.834696764936166*^9, 3.834696766326467*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"a87c3ed5-bcdb-4424-adc8-8c7944ecb967"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 71}, {
    382, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{382, 71},
  PlotRange->{{0, 382}, {0, 71}}]], "Output",
 CellChangeTimes->{3.835143717754424*^9, 3.8352173033582163`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"34b9357f-3717-4463-ac31-ae3ded4ff8c7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"above", ":", " ", 
    RowBox[{"eq3", ".5", " ", "from", " ", "Min", " ", 
     RowBox[{"Jet", "'"}], "s", " ", "thesis"}]}], ",", " ", 
   RowBox[{
   "the", " ", "\[Kappa]", " ", "formula", " ", "is", " ", "only", " ", "an", 
    " ", 
    RowBox[{"approximation", "?"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8346949005009317`*^9, 3.8346949286655397`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"367c6a75-dff7-4d73-acfc-4b4ec1008503"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"degenerate", " ", "OPO"}], ",", " ", 
    RowBox[{"using", " ", "values", " ", "from", " ", "Sheon", " ", 
     RowBox[{"Chua", "'"}], "s", " ", "thesis"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"3", " ", 
      SuperscriptBox["10", "8"]}]}], 
    RowBox[{"(*", 
     RowBox[{"m", " ", 
      SuperscriptBox["s", 
       RowBox[{"-", "1"}]]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L", " ", "=", "1"}], 
    RowBox[{"(*", "m", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tRoundTrip", "=", 
     FractionBox[
      RowBox[{"2", "L"}], "c"]}], 
    RowBox[{"(*", 
     RowBox[{"=", 
      FractionBox["1", "FSR"]}], "*)"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"assumes", " ", "linear", " ", "cavity"}], ",", " ", 
     RowBox[{
     "unclear", " ", "if", " ", "factor", " ", "of", " ", "2", " ", "req"}]}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tout", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kout", "=", 
     FractionBox[
      SuperscriptBox["Tout", 
       RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", "0.45"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"degenV1", "[", 
     RowBox[{"w_", ",", "Tin_", ",", "Tloss_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kin", "=", 
       FractionBox[
        SuperscriptBox["Tin", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kloss", "=", 
       FractionBox[
        SuperscriptBox["Tloss", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ktot", "=", 
       RowBox[{"kout", "+", "kin", "+", "kloss"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{"x", " ", "ktot"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"4", " ", "kout", " ", "g"}], 
        RowBox[{
         SuperscriptBox["w", "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"g", "-", "ktot"}], ")"}], "2"]}]]}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"degenV2", "[", 
     RowBox[{"w_", ",", "Tin_", ",", "Tloss_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"just", " ", "send", " ", "g"}], "\[Rule]", 
       RowBox[{"-", "g"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kin", "=", 
       FractionBox[
        SuperscriptBox["Tin", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kloss", "=", 
       FractionBox[
        SuperscriptBox["Tloss", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ktot", "=", 
       RowBox[{"kout", "+", "kin", "+", "kloss"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{"x", " ", "ktot"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"4", " ", "kout", " ", "g"}], 
        RowBox[{
         SuperscriptBox["w", "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"g", "+", "ktot"}], ")"}], "2"]}]]}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"\[Lambda]", "=", 
       RowBox[{
        RowBox[{"1", "\[Mu]m"}], "=", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]], "m"}]}]}], ",", " ", 
      RowBox[{
      "want", " ", "to", " ", "consider", " ", "sidebands", " ", "of", " ", 
       "carrier"}], ",", " ", 
      RowBox[{
       RowBox[{
       "so", " ", "look", " ", "at", " ", "frequencies", " ", "around", " ", 
        "w"}], "=", 
       RowBox[{"2", "\[Pi]", 
        FractionBox["c", "\[Lambda]"]}]}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"because", " ", "of", " ", "rotating", " ", "frame"}], ",", " ", 
      RowBox[{
       RowBox[{"aren", "'"}], "t", " ", "all", " ", "frequencies", " ", 
       "already", " ", "relative", " ", "to", " ", 
       RowBox[{
        FractionBox["\[Omega]", "2"], "?"}]}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lambda", "=", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}], 
     RowBox[{"(*", "m", "*)"}], ";", "\[IndentingNewLine]", 
     RowBox[{"wCarrier", "=", 
      RowBox[{"N", "[", 
       RowBox[{"2", "\[Pi]", 
        FractionBox["c", "lambda"]}], "]"}]}], ";"}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"~", "1.9"}], "*", 
      SuperscriptBox["10", "15"], "Hz"}], "*)"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"LogLogPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"degenV1", "[", 
           RowBox[{"w", ",", 
            RowBox[{"Tin", "=", "0"}], ",", 
            RowBox[{"Tloss", "=", "0"}]}], "]"}], ",", 
          RowBox[{"degenV1", "[", 
           RowBox[{"w", ",", 
            RowBox[{"Tin", "=", "0.01"}], ",", 
            RowBox[{"Tloss", "=", "0.1"}]}], "]"}], ",", 
          RowBox[{"degenV2", "[", 
           RowBox[{"w", ",", 
            RowBox[{"Tin", "=", "0"}], ",", 
            RowBox[{"Tloss", "=", "0"}]}], "]"}], ",", 
          RowBox[{"degenV2", "[", 
           RowBox[{"w", ",", 
            RowBox[{"Tin", "=", "0.01"}], ",", 
            RowBox[{"Tloss", "=", "0.1"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"w", ",", 
          SuperscriptBox["10", "5"], ",", 
          SuperscriptBox["10", "9"]}], "}"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{"\"\<Expressions\>\"", ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<degenerate OPO\>\""}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Dashed", ",", "Gray"}], "}"}], ",", ",", ",", ","}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<angular frequency / (log scale)\>\"", ",", " ", 
        "\"\<variance / (log scale)\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
      RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "plotting", " ", "quantum", " ", "noise", " ", "in", " ", "dB", " ", 
      "is", " ", "a", " ", "matter", " ", 
      RowBox[{"of", ":", " ", 
       RowBox[{
        RowBox[{"(", "1", ")"}], " ", "understanding", " ", "what", " ", 
        "kind", " ", "of", " ", "quantity", " ", "you", " ", "are", " ", 
        "plotting", " ", "and", " ", 
        RowBox[{"(", "2", ")"}], " ", "plotting", " ", "relative", " ", "to", 
        " ", "vacuum"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"e", ".", "g"}], ".1", " ", "for", " ", "variance", " ", 
      "which", " ", "is", " ", "a", " ", "squared", " ", 
      RowBox[{"(", "power", ")"}], " ", "quantity"}], ",", " ", 
     RowBox[{"plot", " ", "10", 
      SubscriptBox["log", "10"], 
      RowBox[{"(", 
       RowBox[{"V", "=", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", "since", " ", "vacuum",
       " ", "is", " ", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"e", ".", "g"}], ".2", " ", "for", " ", "shot", " ", "noise", 
      " ", "transfer", " ", "fn"}], ",", " ", 
     RowBox[{"|", "R", "|", " ", 
      RowBox[{"is", " ", "amplitude"}]}], ",", "  ", 
     RowBox[{
      RowBox[{"plot", " ", "20", 
       SubscriptBox["log", "10"], 
       RowBox[{"(", 
        RowBox[{"|", "R", "|"}], ")"}], " ", "since"}], " ", "|", "R", 
      SubscriptBox["|", "vac"], " ", 
      RowBox[{"is", " ", "1"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"10", 
          RowBox[{"Log10", "[", "1", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"degenV1", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0"}], ",", 
             RowBox[{"Tloss", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"degenV1", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0.1"}], ",", 
             RowBox[{"Tloss", "=", "0.1"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"degenV2", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0"}], ",", 
             RowBox[{"Tloss", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"degenV2", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0.1"}], ",", 
             RowBox[{"Tloss", "=", "0.1"}]}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         SuperscriptBox["10", "5"], ",", 
         SuperscriptBox["10", "9"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<degenerate OPO\>\""}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Gray"}], "}"}], ",", ",", ",", ","}], 
         "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / (log scale)\>\"", ",", " ", 
       "\"\<variance / dB (10\!\(\*SubscriptBox[\(log\), \(10\)]\))\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
     RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzltIU3EABvCT2EPgBYrlOfMSo8K8zkBCUdy0HgTBxFKH6NSxdD7M6fIh
84IcRa3WKp0OxQdF2VBBV15mCwq8UOFEzQtqKiHJDI6pQ9NNwc73f/j4wffw
8YkUmvQnHhRFhfCBVXN1Nr9mLlEx3zgL39ybXYWybeYn3Fq3HEA2e8YNg2pl
FM07fLvgCkzoEV2D3+7HM9BVuBABzdmBd2F+RH4qHHR0yqDtdCoHzo8a5DA8
LkUJ7YKmIugo+KyGzlu5WrhLG55BqWmjBk6Jw17A1O1QHSz192mDmoG8DmgM
tS5DL7nJAQ3vVRzU6i2H8Pxp1zF8PjlD3Px77M+gtwbcgE16ewX8cqehHr6l
wl7Bq/QjPbx8vt8Ko1eERhjFSDZg0NnRJizyTndBuaCbqAy/CBTy9kS6RfB6
V3syVNGRKTDJ/C6NaKQew6olTw1kR2xaOJYrroGZiiSil2d8PZxQNRN3zGwL
jC2t7YTB0pN+aFePD8DeTzet0MBME3tz1r7CEJfvd+jHLi6SX9W/if84U98e
L9fqtkB1lqD7AHtCFdFZrHtwxBujPHsIbR9/ZMBiaov4+mVyHhwL0BL/6D4o
oVOwSpT+kpRBtqSSWN4mGaRbuMRLFeIh+B91MErY
  "],
 CellLabel->"In[29]:=",ExpressionUUID->"6271967f-9ebc-4495-a23a-a5002fd3c14d"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            Dashing[{Small, Small}], 
            GrayLevel[0.5]], 
           LineBox[CompressedData["
1:eJxN0Hss1AEAB/Aj5GJxTK08kuZ+l1ec61K7kXMNKdUp80cscSgtozt5pLij
E2lpPdyVR1e0wrkSRyplnsujMSKsjK6t0121FZv02trve9/tu+8+/343Hk3h
C4wpFMrev/23ASFfvSvMiJ2U/1Fedky1NoedJkIfiqnwz2MKn0RLuKU4gult
AzOHmnw7HGF6ZBZbw4JXx6/geMXBE9LPImkPnHTAM3yHK4N0xkxZ5Zo8uCBz
asPTOThSLfJvC9xMetOyplhSA6dS8/kiqhtpSVu6+oUALhUFho32wXGjsTlB
hDtp9VI9Y1IMr3QbNuZoYPtfYdk/uB6k3d+Wu2Tdg5+dsQ8iVnmStu3SGXkl
wAI7uX65D862uJlNEF6kS6hC9vqLsPNgxnG2Hj7tN8KpC9tC+tUDU39tA5w2
0617aeZN+vlr5yUFC6Z2aiqSEmB20Rva5FU49iDLgdkD9xsRs+WL8DoxL7OZ
7kM63mywpjEKLo0W34mWwr9v9B92aIKTx8T17Rq49WPcgJUdk7TpsiqfFwz7
fmBY0NNhhYod7nAXtspVMRZG4RiXQ8NnTXxJ1/YKbLVseDvfknYiCb6vnJ6W
XYfXWtlz63rhRK5ElLwAL0blCQJcWaSlp7TzC5Hw4pHcoOgCeFsa86THeThd
Mle2ZODv1SE6WSH87ZO1bKwYnhfe1u27Ar8r7JBxK2EnubCTVgXH1NL17w08
NVDEO6eAx20i9G3V8PCtWd7WOpimvJZiUg/vbw+Wjxh4aKZWn9oA99OFcuUj
2MKP3pXTCO8OHdfveQz3JXN2aZtg8xxdypNmOORSlfyC2uDfSn5XVAvcrTL5
QrTCfwATqQeX
            "]]}, 
          Annotation[#, "Charting`Private`Tag$11904#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$11904#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$11904#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
VtGJXaiuiGeS/IwDHNl1vPtZu9D/ACU1jTo=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$11904#4"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
ZF2qYEK1ZUGRMXGTGc9jlOZuYpt1nAWZAV+MDTofIaUftf7x9iz4+Gj8bOC5
R4j4LbrgtDMLTmRqU9JSEGJ/Igpt9WWBRs49yU0i9chWVmWkDzurKF/ryec6
dMV4d/11PxakUTLexTfUoa+PLdz5zrJgjcHyqBrfOpSeGt05EsCC8T4rZfpQ
LVpjPp6SFcKCoTr/uPCHD9DXlhKqYiy+frH0v/vJ1UhyeR3fe+xl51VvvPKv
Rnu3PeuPu8KCbP1TG0XNq1FG3mAcTxwLKncm7BXaUI3Mw8SmBxJYUNAZ6fgp
8T5q2nmmPjWJBdtHqcK8qVUos1TVUDabBT7d8dLPn1WgwRvpNR+xX+/zKDO4
U4HkggS3FOaw4FLoR6u/MRUo2aB/flseC3gJK4hdBytQ3NfwgiN3WJBY90Yi
8P09FLj5Le/VUhY4eCROWU+VI/OkM7Wr6llwxzN1B3FfGUoM6tv6GpvZ158f
RytDb07uS0h6iO9vwoK4UaIMHVSRcSI8YkGQhENhxlAp2tvRsH7PE7w/25I7
jS+UIo6wuFfwcxYMDnDCXc6XIJHgUuLMWxasj/2bGVpchJLEj+wre8eCth5K
a0R4EVLKWXBw6WLBDVfk13CsCHFaDmQNdON4sr3Mu9YUIXOJTxuf9bDgULm1
nP+ZQpSZL7U2eYgF4v7v6o7tvYNUX4cuaHxnQccPjii/WD5CJ0iy09ge30zz
dv/MQ7rcVxolP/D+Vl8VLnyRh47KbPTfNMEC0Vv3LPlj8lCww/1Jod8s6K/s
etItkIda/nwb653F6/+3OqR2VS6yVjLtuMDLBnIjI2KOmo1m7C0u6vKxoWql
fM3mNdkoLu8YR5yfDTnLKurP/8xCT6gnE3ME2LD9aapmZXkWIqr5WbYJsqH4
1lrG7u1Z6Jde8rCUGBvSds1oXTHJRGE+fZMVG9kwtb7KyTw3HW2sHsq6IMcG
ZbA903Q5HVXNfTLRlWcDX1dVn+WZdPQl6EdVjwIbem1V/0xDOjKMXjy3fDMb
qHsfV/fXpiHJNMUVh8hsMDw5dDZ4ZyoqfOaw9psqG4Tc+teOeaegDjurDWVq
bJCS91k01UtBs3+NZPzU2bAhZaZwuVIK0lGGTSs02JBp7ji2tv0m6k2WZsvs
ZIN/aaa1MOMmWuPyykhPmw2Xo777Cc4mIa/V2xIKD7JhbWHP/vl7iSgpj5Ho
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
B/o5vheceM1QUynvBKGGAw93TDDHB03R/1t/Vzs=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$11904#5"]& ]}}, {}, {}}, {Ticks -> {
         Charting`ScaledTicks[{Log, Exp}], Automatic}, 
       GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
       Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
       AxesOrigin -> {11.512925652936358`, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "ClippingRange" -> {{{11.512925652936358`, 
          20.72326564898028}, {-8.4179503540145, 8.417950354014497}}, {{
          11.512925652936358`, 20.72326564898028}, {-8.4179503540145, 
          8.417950354014497}}}}, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {11.512925652936358`, 0}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 300, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
       FormBox["\"degenerate OPO\"", TraditionalForm], 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", "1",
              ")"}]}], 
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
             RowBox[{"degenV1", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"Tin", "=", "0"}], ",", 
                 RowBox[{"Tloss", "=", "0"}]}], ")"}], ")"}]}], 
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
             RowBox[{"degenV1", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"Tin", "=", "0.1`"}], ",", 
                 RowBox[{"Tloss", "=", "0.1`"}]}], ")"}], ")"}]}], 
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
             RowBox[{"degenV2", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"Tin", "=", "0"}], ",", 
                 RowBox[{"Tloss", "=", "0"}]}], ")"}], ")"}]}], 
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
             RowBox[{"degenV2", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"Tin", "=", "0.1`"}], ",", 
                 RowBox[{"Tloss", "=", "0.1`"}]}], ")"}], ")"}]}]}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                    "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 TagBox[#, HoldForm], ",", 
                 TagBox[#2, HoldForm], ",", 
                 TagBox[#3, HoldForm], ",", 
                 TagBox[#4, HoldForm], ",", 
                 TagBox[#5, HoldForm]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", "10", "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / (log scale)\"",
   "\"variance / dB (10\\!\\(\\*SubscriptBox[\\(log\\), \\(10\\)]\\))\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
       Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, BaseStyle -> Directive[10], DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.835143718051383*^9, 3.835217303692861*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"35b99dba-7f4e-44e5-85db-df3d487bfb37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"introducing", " ", "PD", " ", "loss", " ", "as", " ", "well"}], 
    ",", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["R", "PD"], " ", "is", " ", "the", " ", "reflectivity", 
      " ", "of", " ", "the", " ", "lossless", " ", "beam"}], "-", 
     RowBox[{"splitter", " ", "between", " ", 
      RowBox[{"(", "trans", ")"}], " ", "and", " ", 
      RowBox[{"(", "PD", ")"}], " ", "fields"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"degenVPDloss", "[", 
     RowBox[{"\[CapitalOmega]_", ",", "Tin_", ",", "Tloss_", ",", "Rpd_", ",", 
      RowBox[{"gsgn_:", "1"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kin", "=", 
       FractionBox[
        SuperscriptBox["Tin", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kloss", "=", 
       FractionBox[
        SuperscriptBox["Tloss", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ktot", "=", 
       RowBox[{"kout", "+", "kin", "+", "kloss"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{"gsgn", " ", "x", " ", "ktot"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"4", " ", "kout", " ", "g", 
         RowBox[{"(", 
          RowBox[{"1", "-", "Rpd"}], ")"}]}], 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"g", "-", "ktot"}], ")"}], "2"]}]]}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"10", 
        RowBox[{"Log10", "[", "1", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"10", 
        RowBox[{"Log10", "[", 
         RowBox[{"degenVPDloss", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"Tin", "=", "0"}], ",", 
           RowBox[{"Tloss", "=", "0"}], ",", 
           RowBox[{"Rpd", "=", "0"}], ",", 
           RowBox[{"gsgn", "=", "1"}]}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"10", 
        RowBox[{"Log10", "[", 
         RowBox[{"degenVPDloss", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"Tin", "=", "0"}], ",", 
           RowBox[{"Tloss", "=", "0"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}], ",", 
           RowBox[{"gsgn", "=", "1"}]}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"10", 
        RowBox[{"Log10", "[", 
         RowBox[{"degenVPDloss", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"Tin", "=", "0.1"}], ",", 
           RowBox[{"Tloss", "=", "0.1"}], ",", 
           RowBox[{"Rpd", "=", "0"}], ",", 
           RowBox[{"gsgn", "=", "1"}]}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"10", 
        RowBox[{"Log10", "[", 
         RowBox[{"degenVPDloss", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"Tin", "=", "0.1"}], ",", 
           RowBox[{"Tloss", "=", "0.1"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}], ",", 
           RowBox[{"gsgn", "=", "1"}]}], "]"}], "]"}]}], ",", 
       RowBox[{"10", 
        RowBox[{"Log10", "[", 
         RowBox[{"degenVPDloss", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"Tin", "=", "0"}], ",", 
           RowBox[{"Tloss", "=", "0"}], ",", 
           RowBox[{"Rpd", "=", "0"}], ",", 
           RowBox[{"gsgn", "=", 
            RowBox[{"-", "1"}]}]}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"10", 
        RowBox[{"Log10", "[", 
         RowBox[{"degenVPDloss", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"Tin", "=", "0"}], ",", 
           RowBox[{"Tloss", "=", "0"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}], ",", 
           RowBox[{"gsgn", "=", 
            RowBox[{"-", "1"}]}]}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"10", 
        RowBox[{"Log10", "[", 
         RowBox[{"degenVPDloss", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"Tin", "=", "0.1"}], ",", 
           RowBox[{"Tloss", "=", "0.1"}], ",", 
           RowBox[{"Rpd", "=", "0"}], ",", 
           RowBox[{"gsgn", "=", 
            RowBox[{"-", "1"}]}]}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"10", 
        RowBox[{"Log10", "[", 
         RowBox[{"degenVPDloss", "[", 
          RowBox[{
           RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
           RowBox[{"Tin", "=", "0.1"}], ",", 
           RowBox[{"Tloss", "=", "0.1"}], ",", 
           RowBox[{"Rpd", "=", "0.5"}], ",", 
           RowBox[{"gsgn", "=", 
            RowBox[{"-", "1"}]}]}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", 
       SuperscriptBox["10", "5"], ",", 
       SuperscriptBox["10", "9"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{"\"\<Expressions\>\"", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Gray"}], "}"}], ",", ",", ",", ",", ",", ",",
         ",", ","}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{
         "\"\<variance / dB (10\!\(\*SubscriptBox[\(log\), \(10\)]\))\>\"", 
          ","}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / (log scale)\>\"", ",", 
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<degenerate OPO\\nintracavity and PD loss\\nsqueezing param. \
x=``\>\"", ",", "x"}], "]"}]}], "}"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.835217320959587*^9, 3.835217672939373*^9}, {
   3.835217707258046*^9, 3.835217775251295*^9}, {3.835217826701436*^9, 
   3.835217969465468*^9}, {3.83521800272217*^9, 3.835218003099522*^9}, {
   3.8352180662011557`*^9, 3.835218070475966*^9}, 3.83523296949238*^9},
 CellLabel->"In[75]:=",ExpressionUUID->"b60d38f1-f753-4f86-ac1c-3ef626e3fc30"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          GrayLevel[0.5]], 
         LineBox[CompressedData["
1:eJxN0Hss1AEAB/Aj5GJxTK08kuZ+l1ec61K7kXMNKdUp80cscSgtozt5pLij
E2lpPdyVR1e0wrkSRyplnsujMSKsjK6t0121FZv02trve9/tu+8+/343Hk3h
C4wpFMrev/23ASFfvSvMiJ2U/1Fedky1NoedJkIfiqnwz2MKn0RLuKU4gult
AzOHmnw7HGF6ZBZbw4JXx6/geMXBE9LPImkPnHTAM3yHK4N0xkxZ5Zo8uCBz
asPTOThSLfJvC9xMetOyplhSA6dS8/kiqhtpSVu6+oUALhUFho32wXGjsTlB
hDtp9VI9Y1IMr3QbNuZoYPtfYdk/uB6k3d+Wu2Tdg5+dsQ8iVnmStu3SGXkl
wAI7uX65D862uJlNEF6kS6hC9vqLsPNgxnG2Hj7tN8KpC9tC+tUDU39tA5w2
0617aeZN+vlr5yUFC6Z2aiqSEmB20Rva5FU49iDLgdkD9xsRs+WL8DoxL7OZ
7kM63mywpjEKLo0W34mWwr9v9B92aIKTx8T17Rq49WPcgJUdk7TpsiqfFwz7
fmBY0NNhhYod7nAXtspVMRZG4RiXQ8NnTXxJ1/YKbLVseDvfknYiCb6vnJ6W
XYfXWtlz63rhRK5ElLwAL0blCQJcWaSlp7TzC5Hw4pHcoOgCeFsa86THeThd
Mle2ZODv1SE6WSH87ZO1bKwYnhfe1u27Ar8r7JBxK2EnubCTVgXH1NL17w08
NVDEO6eAx20i9G3V8PCtWd7WOpimvJZiUg/vbw+Wjxh4aKZWn9oA99OFcuUj
2MKP3pXTCO8OHdfveQz3JXN2aZtg8xxdypNmOORSlfyC2uDfSn5XVAvcrTL5
QrTCfwATqQeX
          "]]}, Annotation[#, "Charting`Private`Tag$25248#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$25248#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$25248#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$25248#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9A==
          "]]}, Annotation[#, "Charting`Private`Tag$25248#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
XTHPBPkJBzhy63gPsHah/wEOio4M
          "]]}, 
        Annotation[#, "Charting`Private`Tag$25248#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1nk8VN8bB3Bm7GQLFZJKzZhFsyEqPSgp+1IkS8lORLaSSIpC0WYJKRTZ
hcrSuZVdUYo2fCMhlaRCJL/z+2fm9X7dufec8zyfOeeudg2wdifx8fEp44//
f281/sHKFqLA8nOxR757kYnS5JWB0iIU0Dprkj+BrfJ2Z0WMKAX+ixrt+Yb9
1/sm21OCAmYJqdyv2PcTbDgsWQoMyRV8GMPmdFVzH6+kwLUzJL4h7PV7jmmN
8ChQ+f650UvsK9m3Qu21KCBr2WDRjS0w2l3Trk2BpzGGdi+wP4bRtct0KSBA
lnftws5J79MOBwokjF706MBW7NfTETOlwHaqmvoTbEk38maNgxTIXmF8ugI7
S+JLDnKjwPFp423l2IzqbkErDwo8VLPiL8M2EbrZdcSbAuXiviHF2PEFcPBB
AAUklxzafhub/1vkuW3HKaDU9vZkJvavkNk3DlcoQKY02Z7GPqXyYcvXq/h5
1aadp7BlW1puRqZRINzDf3sMNmt5ql/ONQrskQ9kRGEfqtXkG7lBgRelIv3h
2CP/giiBpRT4LC/f5Iv9Nu5bSFwLBaLQn0sW2Hxx5vr/WinQ4ZHyxuz/9TtT
JhHSTgHa3mxFU+yg2MBc12cUGNggmmqMLXby9/MtLymQM3L/sD725mML9F8D
FJilquZx/l8/vyVD+6cpsFbm/YQsdrOvf8nrGQrciQh+J4391acr3PwPBVqK
+J5IYut4p0ht/kuBoID/zolhd7vLb1lGosKHq9q/+f/fL5eVac+WUCH1+zbW
pCeZ8LJimuuuo8KB3rmV7dgFi0GocD0VYgYsilqwx0rus1ZQqbAiYZVmE7a3
2LalszQq7EpU1COwfZ44vKlmUWGh7LtaDbafZrwrezMVWKtj9G9gH17xMZRq
QwW7DOnkYOzyFupYqi0VNp3YezMQezLEf6/wHipYsP3K/bEDu/9sGrGnwo6W
XuSFHZQgzZ/nTIWUFfJFjtjBC1sSVvlQIdyzvsQQO3ww7brCSSp0LCNrSWK/
+Z6umR9DhYjffV5i2Bv/ZXRwY6lw8nLrFSHsP4pZM5ZxVFCTKu//50Emjtne
sEhIooJ5+gO179gRLYWLi+lUMK20ievEPlFS6/K5El/PdLePxx6oq/sdVkWF
ufe+taew9drrE4RqqJAXpicfhb048vDe2ge4Hs+VqkOwo1WfSDkjKjSmhme6
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
AQ/cuOt+Lucw0f8AXXWQQA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$25248#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
oI/jfcmR1xQ1FPGOE6o48HjHOHNswAT9D87lVps=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$25248#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
7IpMDw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$25248#9"]& ]}}, {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
     AxesOrigin -> {11.512925652936358`, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{11.512925652936358`, 
        20.72326564898028}, {-8.4179503540145, 8.417950354014497}}, {{
        11.512925652936358`, 20.72326564898028}, {-8.4179503540145, 
        8.417950354014497}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {11.512925652936358`, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"variance / dB (10\\!\\(\\*SubscriptBox[\\(log\\), \\(10\\)]\\))\"",
          TraditionalForm], ""}, {
        FormBox[
        "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / (log scale)\"", TraditionalForm], 
        FormBox[
         InterpretationBox[
         "\"degenerate OPO\\nintracavity and PD loss\\nsqueezing param. x=\\!\
\\(\\*FormBox[\\\"0.45`\\\", TraditionalForm]\\)\"", 
          StringForm[
          "degenerate OPO\nintracavity and PD loss\nsqueezing param. x=``", 
           0.45], Editable -> False], TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", "1", 
           ")"}]}], 
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
           RowBox[{"degenVPDloss", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"Tin", "=", "0"}], ",", 
               RowBox[{"Tloss", "=", "0"}], ",", 
               RowBox[{"Rpd", "=", "0"}], ",", 
               RowBox[{"gsgn", "=", "1"}]}], ")"}], ")"}]}], 
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
           RowBox[{"degenVPDloss", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"Tin", "=", "0"}], ",", 
               RowBox[{"Tloss", "=", "0"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}], ",", 
               RowBox[{"gsgn", "=", "1"}]}], ")"}], ")"}]}], 
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
           RowBox[{"degenVPDloss", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"Tin", "=", "0.1`"}], ",", 
               RowBox[{"Tloss", "=", "0.1`"}], ",", 
               RowBox[{"Rpd", "=", "0"}], ",", 
               RowBox[{"gsgn", "=", "1"}]}], ")"}], ")"}]}], 
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
           RowBox[{"degenVPDloss", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"Tin", "=", "0.1`"}], ",", 
               RowBox[{"Tloss", "=", "0.1`"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}], ",", 
               RowBox[{"gsgn", "=", "1"}]}], ")"}], ")"}]}], 
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
           RowBox[{"degenVPDloss", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"Tin", "=", "0"}], ",", 
               RowBox[{"Tloss", "=", "0"}], ",", 
               RowBox[{"Rpd", "=", "0"}], ",", 
               RowBox[{"gsgn", "=", 
                 RowBox[{"-", "1"}]}]}], ")"}], ")"}]}], 
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
           RowBox[{"degenVPDloss", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"Tin", "=", "0"}], ",", 
               RowBox[{"Tloss", "=", "0"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}], ",", 
               RowBox[{"gsgn", "=", 
                 RowBox[{"-", "1"}]}]}], ")"}], ")"}]}], 
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
           RowBox[{"degenVPDloss", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"Tin", "=", "0.1`"}], ",", 
               RowBox[{"Tloss", "=", "0.1`"}], ",", 
               RowBox[{"Rpd", "=", "0"}], ",", 
               RowBox[{"gsgn", "=", 
                 RowBox[{"-", "1"}]}]}], ")"}], ")"}]}], 
       RowBox[{"10", " ", 
         RowBox[{
           InterpretationBox[
            SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
           RowBox[{"degenVPDloss", "(", 
             RowBox[{
               RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
               RowBox[{"Tin", "=", "0.1`"}], ",", 
               RowBox[{"Tloss", "=", "0.1`"}], ",", 
               RowBox[{"Rpd", "=", "0.5`"}], ",", 
               RowBox[{"gsgn", "=", 
                 RowBox[{"-", "1"}]}]}], ")"}], ")"}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                  "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm], ",", 
               TagBox[#8, HoldForm], ",", 
               TagBox[#9, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8352176227140713`*^9, 3.835217675028347*^9, {3.835217708099719*^9, 
   3.835217716007431*^9}, 3.835217776396998*^9, {3.835217833132641*^9, 
   3.835217862479286*^9}, {3.835217911322888*^9, 3.835217970071863*^9}, 
   3.835218003748723*^9, 3.835218073923913*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"9ccac161-d21b-4665-813f-6fdb5ba0bca7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"nondegenerate", " ", "OPO"}], ",", " ", 
    RowBox[{"from", " ", "above", " ", 
     RowBox[{"calculation", ":", " ", 
      RowBox[{
       RowBox[{"V", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"V", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Vs1s1", "[", 
     RowBox[{"w_", ",", "Tin_", ",", "Tloss_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kin", "=", 
       FractionBox[
        SuperscriptBox["Tin", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kloss", "=", 
       FractionBox[
        SuperscriptBox["Tloss", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ktot", "=", 
       RowBox[{"kout", "+", "kin", "+", "kloss"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{"x", " ", "ktot"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"(", 
         RowBox[{"8", " ", 
          SuperscriptBox["x", "2"], " ", 
          SuperscriptBox["ktot", "3"], " ", "kout"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
           SuperscriptBox["ktot", "4"]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}], ")"}], " ", 
           SuperscriptBox["ktot", "2"], " ", 
           SuperscriptBox["w", "2"]}], "+", 
          SuperscriptBox["w", "4"]}], ")"}]]}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vs1i2", "[", 
     RowBox[{"w_", ",", "Tin_", ",", "Tloss_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kin", "=", 
       FractionBox[
        SuperscriptBox["Tin", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kloss", "=", 
       FractionBox[
        SuperscriptBox["Tloss", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ktot", "=", 
       RowBox[{"kout", "+", "kin", "+", "kloss"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{"x", " ", "ktot"}]}], ";", "\[IndentingNewLine]", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{"4", " ", "x", " ", "ktot", " ", "kout", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["x", "2"]}], ")"}], " ", 
            SuperscriptBox["ktot", "2"]}], "+", 
           SuperscriptBox["w", "2"]}], ")"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["ktot", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["ktot", "2"], " ", 
          SuperscriptBox["w", "2"]}], "+", 
         SuperscriptBox["w", "4"]}], ")"}]]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"10", 
          RowBox[{"Log10", "[", "1", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1s1", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0"}], ",", 
             RowBox[{"Tloss", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1s1", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0.1"}], ",", 
             RowBox[{"Tloss", "=", "0.1"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1i2", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0"}], ",", 
             RowBox[{"Tloss", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1i2", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0.1"}], ",", 
             RowBox[{"Tloss", "=", "0.1"}]}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         SuperscriptBox["10", "5"], ",", 
         SuperscriptBox["10", "9"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<nondegenerate OPO\\n\!\(\*SubscriptBox[\(V\), \(s1, s1\)]\) is \
on-diagonal, \!\(\*SubscriptBox[\(V\), \(s1, i2\)]\) is off-diagonal\>\""}], 
       ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Gray"}], "}"}], ",", ",", ",", ","}], 
         "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / (log scale)\>\"", ",", " ", 
       "\"\<covariance / dB (10\!\(\*SubscriptBox[\(log\), \(10\)]\))\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
     RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8346928734187813`*^9, 3.834693199941409*^9}, {
   3.834693619692971*^9, 3.834693740360461*^9}, 3.834693777616811*^9, {
   3.834697161424477*^9, 3.8346971673177567`*^9}, {3.834697298929451*^9, 
   3.8346974603004713`*^9}, 3.834697559333034*^9, 3.835129156180674*^9, {
   3.8351292374617043`*^9, 3.8351292579049883`*^9}, {3.835142835871221*^9, 
   3.8351428837988358`*^9}, {3.8351429579331617`*^9, 
   3.8351429662695837`*^9}, {3.835142998929871*^9, 3.835143096501708*^9}, {
   3.835143502958074*^9, 3.835143506615409*^9}, {3.835222075505953*^9, 
   3.835222113388472*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"f2455dc5-ea52-4213-a106-86ca368c0212"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            Dashing[{Small, Small}], 
            GrayLevel[0.5]], 
           LineBox[CompressedData["
1:eJxN0Hss1AEAB/Aj5GJxTK08kuZ+l1ec61K7kXMNKdUp80cscSgtozt5pLij
E2lpPdyVR1e0wrkSRyplnsujMSKsjK6t0121FZv02trve9/tu+8+/343Hk3h
C4wpFMrev/23ASFfvSvMiJ2U/1Fedky1NoedJkIfiqnwz2MKn0RLuKU4gult
AzOHmnw7HGF6ZBZbw4JXx6/geMXBE9LPImkPnHTAM3yHK4N0xkxZ5Zo8uCBz
asPTOThSLfJvC9xMetOyplhSA6dS8/kiqhtpSVu6+oUALhUFho32wXGjsTlB
hDtp9VI9Y1IMr3QbNuZoYPtfYdk/uB6k3d+Wu2Tdg5+dsQ8iVnmStu3SGXkl
wAI7uX65D862uJlNEF6kS6hC9vqLsPNgxnG2Hj7tN8KpC9tC+tUDU39tA5w2
0617aeZN+vlr5yUFC6Z2aiqSEmB20Rva5FU49iDLgdkD9xsRs+WL8DoxL7OZ
7kM63mywpjEKLo0W34mWwr9v9B92aIKTx8T17Rq49WPcgJUdk7TpsiqfFwz7
fmBY0NNhhYod7nAXtspVMRZG4RiXQ8NnTXxJ1/YKbLVseDvfknYiCb6vnJ6W
XYfXWtlz63rhRK5ElLwAL0blCQJcWaSlp7TzC5Hw4pHcoOgCeFsa86THeThd
Mle2ZODv1SE6WSH87ZO1bKwYnhfe1u27Ar8r7JBxK2EnubCTVgXH1NL17w08
NVDEO6eAx20i9G3V8PCtWd7WOpimvJZiUg/vbw+Wjxh4aKZWn9oA99OFcuUj
2MKP3pXTCO8OHdfveQz3JXN2aZtg8xxdypNmOORSlfyC2uDfSn5XVAvcrTL5
QrTCfwATqQeX
            "]]}, 
          Annotation[#, "Charting`Private`Tag$27782#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$27782#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$27782#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
mcYtqs/fSpqYdawWzoz5OEN/836cJW36P10QYUE=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$27782#4"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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

            "]]}, 
          Annotation[#, "Charting`Private`Tag$27782#5"]& ]}}, {}, {}}, {Ticks -> {
         Charting`ScaledTicks[{Log, Exp}], Automatic}, 
       GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
       Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
       AxesOrigin -> NCache[{
          Log[100000], 0}, {11.512925464970229`, 0}], 
       FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "ClippingRange" -> {{{11.512925652936358`, 
          20.72326564898028}, {-39.889343121455006`, 5.496720737761582}}, {{
          11.512925652936358`, 20.72326564898028}, {-16.57364457616554, 
          5.496720737761582}}}}, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {11.512925464970229`, 0}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 350, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
       FormBox[
        "\"nondegenerate OPO\\n\\!\\(\\*SubscriptBox[\\(V\\), \\(s1, \
s1\\)]\\) is on-diagonal, \\!\\(\\*SubscriptBox[\\(V\\), \\(s1, i2\\)]\\) is \
off-diagonal\"", TraditionalForm], PlotRange -> NCache[{{
           Log[100000], 
           Log[1000000000]}, {-16.57364457616554, 5.496720737761582}}, {{
         11.512925464970229`, 20.72326583694641}, {-16.57364457616554, 
         5.496720737761582}}], PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", "1",
              ")"}]}], 
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
             RowBox[{"Vs1s1", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"Tin", "=", "0"}], ",", 
                 RowBox[{"Tloss", "=", "0"}]}], ")"}], ")"}]}], 
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
             RowBox[{"Vs1s1", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"Tin", "=", "0.1`"}], ",", 
                 RowBox[{"Tloss", "=", "0.1`"}]}], ")"}], ")"}]}], 
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
             RowBox[{"Vs1i2", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"Tin", "=", "0"}], ",", 
                 RowBox[{"Tloss", "=", "0"}]}], ")"}], ")"}]}], 
         RowBox[{"10", " ", 
           RowBox[{
             InterpretationBox[
              SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
             RowBox[{"Vs1i2", "(", 
               RowBox[{
                 RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"Tin", "=", "0.1`"}], ",", 
                 RowBox[{"Tloss", "=", "0.1`"}]}], ")"}], ")"}]}]}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                    "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 TagBox[#, HoldForm], ",", 
                 TagBox[#2, HoldForm], ",", 
                 TagBox[#3, HoldForm], ",", 
                 TagBox[#4, HoldForm], ",", 
                 TagBox[#5, HoldForm]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", "10", "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / (log scale)\"",
   "\"covariance / dB (10\\!\\(\\*SubscriptBox[\\(log\\), \\(10\\)]\\))\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
       Directive[10], DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, BaseStyle -> Directive[10], DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8351437183077097`*^9, 3.835217303880089*^9, 
  3.83522212349096*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"7d4b3dd8-fe58-4061-82fb-527f8f4ff986"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"adding", " ", "PD", " ", "loss"}], ",", " ", 
    RowBox[{
    "see", " ", "degenerate", " ", "OPO", " ", "case", " ", "for", " ", 
     "description", " ", "of", " ", "Rpd"}]}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"Vs1s1PDloss", "[", 
     RowBox[{"w_", ",", "Tin_", ",", "Tloss_", ",", "Rpd_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kin", "=", 
       FractionBox[
        SuperscriptBox["Tin", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kloss", "=", 
       FractionBox[
        SuperscriptBox["Tloss", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ktot", "=", 
       RowBox[{"kout", "+", "kin", "+", "kloss"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{"x", " ", "ktot"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox["ktot", "3"], " ", "kout", 
         RowBox[{"(", 
          RowBox[{"1", "-", "Rpd"}], ")"}]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox["ktot", "4"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          SuperscriptBox["ktot", "2"], " ", 
          SuperscriptBox["w", "2"]}], "+", 
         SuperscriptBox["w", "4"]}]]}]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vs1i2PDloss", "[", 
     RowBox[{"w_", ",", "Tin_", ",", "Tloss_", ",", "Rpd_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kin", "=", 
       FractionBox[
        SuperscriptBox["Tin", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kloss", "=", 
       FractionBox[
        SuperscriptBox["Tloss", 
         RowBox[{"1", "/", "2"}]], "tRoundTrip"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ktot", "=", 
       RowBox[{"kout", "+", "kin", "+", "kloss"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{"x", " ", "ktot"}]}], ";", "\[IndentingNewLine]", 
      FractionBox[
       RowBox[{"4", " ", "x", " ", "ktot", " ", "kout", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}], ")"}], " ", 
           SuperscriptBox["ktot", "2"]}], "+", 
          SuperscriptBox["w", "2"]}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", "Rpd"}], ")"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         SuperscriptBox["ktot", "4"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], " ", 
         SuperscriptBox["ktot", "2"], " ", 
         SuperscriptBox["w", "2"]}], "+", 
        SuperscriptBox["w", "4"]}]]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", "plotting", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1s1PDloss", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0"}], ",", 
             RowBox[{"Tloss", "=", "0"}], ",", 
             RowBox[{"Rpd", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1s1PDloss", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0"}], ",", 
             RowBox[{"Tloss", "=", "0"}], ",", 
             RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1s1PDloss", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0.1"}], ",", 
             RowBox[{"Tloss", "=", "0.1"}], ",", 
             RowBox[{"Rpd", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1s1PDloss", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0.1"}], ",", 
             RowBox[{"Tloss", "=", "0.1"}], ",", 
             RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", "1", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         SuperscriptBox["10", "5"], ",", 
         SuperscriptBox["10", "9"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{",", ",", ",", ",", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Gray"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<variance / dB (10\!\(\*SubscriptBox[\(log\), \(10\)]\))\>\"", 
            ","}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           ",", "\"\<nondegenerate OPO\\n\!\(\*SubscriptBox[\(V\), \(s1, \
s1\)]\) on-diagonal (top), \!\(\*SubscriptBox[\(V\), \(s1, i2\)]\) \
off-diagonal terms (bottom)\\nPD and intracavity loss\>\""}], "}"}]}], 
         "}"}]}], ",", 
       RowBox[{"TicksStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
       ",", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"40", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "60"}], "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1i2PDloss", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0"}], ",", 
             RowBox[{"Tloss", "=", "0"}], ",", 
             RowBox[{"Rpd", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1i2PDloss", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0"}], ",", 
             RowBox[{"Tloss", "=", "0"}], ",", 
             RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1i2PDloss", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0.1"}], ",", 
             RowBox[{"Tloss", "=", "0.1"}], ",", 
             RowBox[{"Rpd", "=", "0"}]}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"10", 
          RowBox[{"Log10", "[", 
           RowBox[{"Vs1i2PDloss", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
             RowBox[{"Tin", "=", "0.1"}], ",", 
             RowBox[{"Tloss", "=", "0.1"}], ",", 
             RowBox[{"Rpd", "=", "0.5"}]}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         SuperscriptBox["10", "5"], ",", 
         SuperscriptBox["10", "9"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"\"\<Expressions\>\"", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<covariance / dB (10\!\(\*SubscriptBox[\(log\), \
\(10\)]\))\>\"", ","}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / (log scale)\>\"", ","}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"40", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"50", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2"}], "}"}], ",", 
     RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8352221452215242`*^9, 3.835222197944674*^9}, {
  3.835222277592185*^9, 3.835222477888588*^9}, {3.8352225265039682`*^9, 
  3.835222889301949*^9}, {3.835223142665238*^9, 3.8352231428392267`*^9}, {
  3.835223328102748*^9, 3.83522336853197*^9}, {3.835223414686117*^9, 
  3.835223425749075*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"9078f2fd-8f04-4df4-a0b7-27d6d2095637"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$64721#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
fD0=
              "]]}, Annotation[#, "Charting`Private`Tag$64721#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$64721#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
cU+SHuH+kRtQ0lCcSPwPgBUOCA==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$64721#4"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}], 
              GrayLevel[0.5]], 
             LineBox[CompressedData["
1:eJxN0Hss1AEAB/Aj5GJxTK08kuZ+l1ec61K7kXMNKdUp80cscSgtozt5pLij
E2lpPdyVR1e0wrkSRyplnsujMSKsjK6t0121FZv02trve9/tu+8+/343Hk3h
C4wpFMrev/23ASFfvSvMiJ2U/1Fedky1NoedJkIfiqnwz2MKn0RLuKU4gult
AzOHmnw7HGF6ZBZbw4JXx6/geMXBE9LPImkPnHTAM3yHK4N0xkxZ5Zo8uCBz
asPTOThSLfJvC9xMetOyplhSA6dS8/kiqhtpSVu6+oUALhUFho32wXGjsTlB
hDtp9VI9Y1IMr3QbNuZoYPtfYdk/uB6k3d+Wu2Tdg5+dsQ8iVnmStu3SGXkl
wAI7uX65D862uJlNEF6kS6hC9vqLsPNgxnG2Hj7tN8KpC9tC+tUDU39tA5w2
0617aeZN+vlr5yUFC6Z2aiqSEmB20Rva5FU49iDLgdkD9xsRs+WL8DoxL7OZ
7kM63mywpjEKLo0W34mWwr9v9B92aIKTx8T17Rq49WPcgJUdk7TpsiqfFwz7
fmBY0NNhhYod7nAXtspVMRZG4RiXQ8NnTXxJ1/YKbLVseDvfknYiCb6vnJ6W
XYfXWtlz63rhRK5ElLwAL0blCQJcWaSlp7TzC5Hw4pHcoOgCeFsa86THeThd
Mle2ZODv1SE6WSH87ZO1bKwYnhfe1u27Ar8r7JBxK2EnubCTVgXH1NL17w08
NVDEO6eAx20i9G3V8PCtWd7WOpimvJZiUg/vbw+Wjxh4aKZWn9oA99OFcuUj
2MKP3pXTCO8OHdfveQz3JXN2aZtg8xxdypNmOORSlfyC2uDfSn5XVAvcrTL5
QrTCfwATqQeX
              "]]}, 
            Annotation[#, "Charting`Private`Tag$64721#5"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> NCache[{
            Log[100000], 0}, {11.512925464970229`, 0}], 
         FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{40, 1}, {1, 60}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{11.512925652936358`, 20.72326564898028}, {0.,
             5.496720737761582}}, {{11.512925652936358`, 20.72326564898028}, {
            0., 5.496720737761582}}}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {11.512925464970229`, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"variance / dB (10\\!\\(\\*SubscriptBox[\\(log\\), \
\\(10\\)]\\))\"", TraditionalForm], ""}, {"", 
            FormBox[
            "\"nondegenerate OPO\\n\\!\\(\\*SubscriptBox[\\(V\\), \\(s1, \
s1\\)]\\) on-diagonal (top), \\!\\(\\*SubscriptBox[\\(V\\), \\(s1, i2\\)]\\) \
off-diagonal terms (bottom)\\nPD and intracavity loss\"", TraditionalForm]}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 1}, {1, 60}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{
             Log[100000], 
             Log[1000000000]}, {0., 5.496720737761582}}, {{
           11.512925464970229`, 20.72326583694641}, {0., 5.496720737761582}}],
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}],FormBox[
        FormBox[
         TemplateBox[{
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Vs1s1PDloss", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"Tin", "=", "0"}], ",", 
                   RowBox[{"Tloss", "=", "0"}], ",", 
                   RowBox[{"Rpd", "=", "0"}]}], ")"}], ")"}]}], 
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Vs1s1PDloss", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"Tin", "=", "0"}], ",", 
                   RowBox[{"Tloss", "=", "0"}], ",", 
                   RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], ")"}]}], 
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Vs1s1PDloss", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"Tin", "=", "0.1`"}], ",", 
                   RowBox[{"Tloss", "=", "0.1`"}], ",", 
                   RowBox[{"Rpd", "=", "0"}]}], ")"}], ")"}]}], 
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Vs1s1PDloss", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"Tin", "=", "0.1`"}], ",", 
                   RowBox[{"Tloss", "=", "0.1`"}], ",", 
                   RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], ")"}]}], 
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               "1", ")"}]}]}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm], ",", 
                   TagBox[#3, HoldForm], ",", 
                   TagBox[#4, HoldForm], ",", 
                   TagBox[#5, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwV1nk4VesXB3CVEpnOOfsI11AqZzaehAxfjhulayh1SxquoYSETGUISQoN
umVKg1SEihSh7G4Doki36RoKRQNJE2X6vb+/9vN59vOs/a71rrWePddz+wqf
qVJSUupTpKT+/7R2GDI4OYOD7oNun1zs2Lh0WDNYeSYHy0MXZ/5BrPVyaWmC
LAdL1y23XEY8tjXPcIs8Bye1WiIlxJUpK40MmBxs/TezfCGxUfM14380OfhR
89xUjVh39S6TXjEHU+00rdslbBw7eT58jQkH0fpvrV8QS/e1Xn+wiAOa223+
L3FPhGDRZXMOWBfXajcRn85qXxQJDmZNcz1TTazeYWUmt5yDvAUN8VnEit7T
LPS8OJiRFh3mQpwr//F0rTcHfh8kdo7Ewmut0103c8A41S23hNhxRl7zjq0c
yN8K2b2YOLkAXje2c9BgEiKtSzxlIOaAXTQHGXl/hPy0ZeNb2MgL92McJH1Q
is4i3qP12rL/OAfZvu6Co8TMurq8mEwSb7KyJZXYQDUj4HQOBwbs0PHdxNuq
Fkr1nuHg8XtOhw9x70QIJ/gSB+WW3hf0iV/uGwjbV0fqo9j0ucqGDal9TjYT
9RzU9IvuXSXWTbosH/aAgzl28oeKiUMSg896PuRgV6nUtJPEcvHfWyyfcGDy
huUXR2yxa1zwrZODP+S+6kqITwcodG/6wYGOpqCvFmzc9w8seT7Mwc2WeMcK
4n6/5kinnxxkGpmfvURstvWIksUYB6kyScJc4lYftuXsqVyYm8Tm7ySW3qiZ
+VCBi0BtUzUDYl9XkZP5AuIThgfSrdkomAypLdTlIiHzlW8y8buSSgM1Lhe2
clJmscRb5exYI3wuqCq7kq3EfnfcX1wz4OJ1UVqPNXHAwmRPQwsu0GAR+t6K
jSC1nnDuSi7cR9OSDYiv1HHfZbhxoV5/x28+8eewwLUyq7lYYnt0sSpxcOvP
xb1ruJjlnVMwaUnqlaI8JX8DF5mH0koeEoeOW6Zo+3GxqMJ/+WbiyK7MUyrx
XBRP9M3db8HGi8GshecSuBhtfuG7k9h0IrvROJELte7lGVuJf6rnDrvs4+LO
Nt2LS4l3uZ1xTknj4kvllrMziaPqCicns7gwMMy7Hb+YjdiSqo3vy7gYaNdM
3WjORmd19feIci5c7HXClhNbPahJmXGdxFMIghnxZO+tink3SH4z9WOYxHFz
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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$64799#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
sZ6r6qA+mxf12UuBOGrF3qjRqA4C2ywqgjI2E68R6vfMGXV4Y+CxsujKFkI6
ivPvA5WtMFSZGizljxEuq97cqbDZCi8CNy36ZzGIS4ejcg/Hb4VLYlG7Fm+r
EsvXX9tvrNoKm8LRus3v1AnvD1EltbytILFyMflqqAbxeNC5VURCA3wuHnyU
wMcmVi7ej+Hs0oC3S+J9nyu0CM0f2GqV4xrwsKAqcIWJDpFzX9ts420NyK0L
v6/UqUuIRNzHpjs1wKUp50Z6jD7hsPlgx2k+TYgLGNQhNhgQRU2u4iPamnDm
G0V25vV2Qs9CWMzHQxPGlM8+Cz6JE4X3Pn9Ou6YJwkG7erJigdggImtU3KQJ
xZK8H1MOOwh3o+gQ72lNWJHrt3OQZkTM2ES64lvY0DxCke2fMCLig0ZGp63Z
8ExAz7+hyZiYORJhfDiWDTlPqksML3MInUANX2YcGxjWQ6YvUjjE8eiB1HnS
a2a3jXLTOMRUnsnPtAQ2fHeyYuzL5hCTw6JpH5LYkEkzLjp0j0OMBt/6uf8y
G0Y6B8pCmznEl4QXaUY32SC8/V5XOcol5NOD68Sy2ZClyQrXXsUlHIpUxr+S
/rqtRaFakEv0tp7lnMlhg8FjZ/fnolyia53l+JM8NuhRkJk2eS7RceM7R6uY
DRD/Qn5Mn0uI3Uvx4ysh4zXJ1vkbcokDtbvS35GukL/k+WcHl2jrLxoPKGWD
vFVb5bwJl3itEpx+r5wN+UiKqdA/XGK1rkr9qQo2uPA1T56z4xJ7dneNm1ay
we2xdJqYA5d45W3AHaliw87zAjwpVy4hcOqnX/UDNry1yU++4cElTM5npyc+
ZIMg44imog+XiL9pUW/ziA1D3RrduX5couE+3wT1MRuqDRUiqUFc4n//EKac

              "]]}, Annotation[#, "Charting`Private`Tag$64799#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwV1nc8Vu0bAHBJVspoGYmWZw88RpL7emiQktGUUiIzIqtkVJSQ3paMQoPM
hJDVeZQQlbJXPE8iLxJeRebv/v11Pt/P59znvq/rXNd1zno7D0sHYSEhoYOL
hIT+f0XGY+xEURIsdC0YrAsToOf/KHvKiJMgwuTkLiXsde0muZclSMCU8jGV
x551fqzuKEUC1t34nXLYryKtNNhyJKAX0MVFsTXqCzTfKJNgtXB13nCoAKkd
vKDdzyHBm6UZvoXY9xJTfQ9rk8BHMXwgD1vkR0NhrQ4JgvUMDuRg9/rRdHL0
SHChdKVKGnZyXJeOP5CgvijmXBy24leDLZJ7SHCnj6IQgL3cfrE+8xQJnHKX
rtPDfig1lEzYk6B55Z1gLWx6QcMSi9MkODPY0s7GNhV9XH/OmQQrqKf9Sdjh
aXCq2IME914dt1mJvehnYMT2iySYvXakYPiKAE34TLVZ3yPBYPTd/fexr6zj
bxuOIcHv8bWFt7DlqqsfB8aS4Di3fnkUNlv+vltyAglMJs6nhGCfKdES6n9E
gsNGx047Y/fPe5E8n5NgQ+hryhbs9ms/fa5V4/1ltu39clmAhK6ZcedrSBBf
+WyoFlvtao6UTy0JUg69DKnE9gr1fGL3kQSxoheji7AlL/3+vK2RBAGRSOch
tv6FOdpENwnWXNiYexo72W3ZtxN/SCBfZdM9dkmAqlzds1snSeBaUs0ZxB52
qfc3+0uCqPX/BX/D3uJ8S1p/lgQxaiYTDdgNDqu2rREmw2SdslU+toitcuzH
ZWT4rOzb4YntZMEw09tMhoU3i+70hQhQ2oIXka5Ghn8uD97owh7IfsVWIJOh
4XhbQCO2s+T2FVNUMqQm+bMrsF3eWrcVsMng+qp4OgHbTSvcTl2fDPWvDwnv
wz6r0OtLtiLDubFJ84xgAXpRTR64v58MdtY6V5OwR33cj4gdJEOF5q/Mu9ie
DX+39h8mQ3iJe00QtlekzKKnx8nQH6dpZIntPbctUsWFDF94D2h/ggTIXxCb
tPoSGR6kqKuoY7f9itNKuYz3t01buxFbdz6+TjOUDLUpSGQV9l/Fh5Pm18iw
WW7XralAAbqw/9G+yBtkeG87mvgaO6A6fWEhDj+Pluu8Ezsou8T23zwyxBe6
FhtdFKDu0tLffi/JIBkY+1ID26C2LFK0kAxSqZr31mMv9L8u2lhMhqkl0qIL
AQIUovpW+jhBhpvLKh69wr58p45oqCPDB3nPBDXssPNdKmXfybDDodVm+LwA
Xew+uJbdj/M1eFOuHdvb6Iv80x9kKEtgZb3DtltWJRs1SAanZyERidjwKGex
zSgZBvYKRsywp2su/5iZIcPM1rvqGf4C5C5Pydm6ggIFr687m/gJkEPgk8yc
lRS4ncUx1sC2+aactnE1BY6+YC1RwjbNknu0VIECstEWCsO+AkSG2dud6yiw
YaH5aRT2N8d63wAqBUYlAtdW+wjQwSIfg1IuBXr3JiipeuN+uZhpa2ZEgdmH
p5cKY4dyBSGC7RQwkS6v6z0nQPl1e96KGVNAz7WnLBVbhr/ReL8ZBToysg5T
sd+LN1j8tKaAqr6nBtkL94M100HFmwIJQgpasx4CZKVifzXPhwJP0vsSWrFd
vsc92+FHAadHIzV52HHuSwZdL1AgPtzY2wn7z+Uu91chFOD8t0j0izuuv8wI
f4sbFHDQbXkTc0aANs71R15JpUB+k9DPMRcB2u+5yEo6jQLfryizq7Cv9ikp
JqRTQEXGnxWPPfDRPC0viwKJTwxPcrGzEksqBXkUkDK7ERblLEDaED2HCApE
Gzd5rnISoN1XtDxmWykgvfdZ2Yg9rq/Jfdrh7fh9xITkFGNnubrMreikwFpb
pnkotvT+pEhaNwUMaZJx8thNmyTSrL9TYJqXobftlAAdr+rivxqlwLia/m7f
k7hfJEItfSSo4FxNb35yTID0mtaE9EtSIWDib4MjtnBSZvYhKSo0sNZdoGHf
5jSK60lTgbzN702ujQC9tN1AzK+kgqTSXUbJUZyvAh4tXJUKqhEnZouP4P6w
mxNJ0KECZdjzg+cBATJk3NKQ2kKFhaGmCQq25NSmE4F6VCiOCC4Q7BeghBt7
Sm23USGlY//cPuyyVwmem4yocFfYM4ZkJUDzy/W6s82o8IBFdnxjjudxqW8R
z4EK/xHZCo9N8fzofydh4UiF/uqzX7Zj75ddZSNwokLkM+Zk/24B2uSYLyTs
RoU96ySuU7Ar5UZNjLyo4LB+JOuZsQCJujh3vQuigsyMn9q1HQIUIW+zqO4+
FTbliit9MMDzxCjT6mgcFUyyVcqssa3dp1OG4qlwfHtj5sA2AaJVxu6WSqSC
uWqplzD2B4/mO3ufUuHLdEcwYyv+XlWbqX1+QYXhCpUHJ3QE6JYP17T5PRXQ
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
+x/PFfd5
              "]]}, Annotation[#, "Charting`Private`Tag$64799#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwV13k4lF8bB3A1z9hlTRKlknlmH4wlS92GVhLaLakQIUWWSgohSymiUERR
StayhZxKyFJSCqGkkBT5FbL1nvevuT7XOc91zv2dM/d5ZvmBIzYu84WEhHbO
ExL6/+fajb94acI0gP0iiS0PKCjvkqq3jCgNVIRHbF5jL+3YVBgqRgPfhUOy
rdgzh25qukrS4NgDtctvsMtitmnx5GjAZ1befIet9apY+6kqDaauLpzswtbY
eVK3n0+D2DaVc0PYiWm3/Xfr0uCzdZb7d2xioLWkQY8GH18EbB3G7gtg6uUb
0CCDPl/1J3Z6cpfecaBBzL3eul/Yyt1rVotb0ED546m9f7EXOFOMOE40UPc0
SxV7SEGpkt/Tq51psPny5xpxbFZxK9X6IA36Uq1/SmCbC998dewQ3l9z7voF
2JHZ4FR+hAZ77uVLyWPP+xEUbXaKBmfGj06oYP/2m2y3TaTBc/7NrVrYZ5d+
Mh6+QoMnS6BUG1uuru5mUBINaJHyy3WweUpXPdOv0cDzg9u0HvbhRzpC/Rk0
uCvCazTG7p/zoXnn0cC/dFfnJuyOcz/8ztXh9RWOv3bCFjpnaTJXT4Pdrt2H
XLA1IvIl/RpokCBIIVyxfcK8bx1opkH7TtLEHVs85E+L8RsapPtNvDuKbXRy
lvm7hwZ/T5w+fho73VPq875xGkxq8HKvYdd6eOW+n6DBl0OJV1Oxh91fHbf8
S4MllxrCbmCvPhQnbTRDg84Fxa63sFtdFhovmk9CyNd/W3OwCUfVpGYpEiRe
0/MqsN2s2ZYGq0ioHhBGPdjZ/3yq72qQ0FlqMa8XezC3jLeYJOEFvF7Xh31I
3Ex+kkFCAu9u+wC2+zPb9mIeCc5DShq/sD11Ig9oGpHQ6KbpTBRT0NHFff7k
NhKW20ddYmMX1JGDV7eT0B+y2pSHPerntUdkJwmxMY1/tbC9W/8a9u8moftu
jo8+tk+MzLzMvSRQfaYum2L7zhrHLHMnYTP5KdkW+3hv0g3FEBIWjUx1xWC3
jyTrZIWSEA2pDhex9edSGrXDSJA8UtoXj/1XOXXC6hwJ45f9hFKwT27P2Bpz
gYQLIBGUjR1Yd/ffv2QSkqTsomuxT+c+cvxWREK7u6euSAkF9VRU/Al4SILR
6owACew1DZUxwiUkTHudrJbG/tf/uHRlOQlCV02dlLCD1Z5J760mQXnhrhk6
dujlxurWRhIs5L4HWWKHn+haVvmFBM6ZOKlU7FM9O1V4/ST0Oaz8lIHta/pa
KXOAhEveFeW3sQ9I1cqeHyIhk0MLLcCGjHyK/SjOhyp9qAZ7qj50YHqahOBN
B5J+YHsp0fMN5enwetC5YV0pBbkE3crJV6CDLftRvDm2/WfV7JWKdHDzDHSy
xja/L5chsZgO0799ljpgkzAT/2EpHUra46Z9sT+7vvIPZNCBopjtcBt7Z6nf
mgoTOlDDP6nKlOHfy6kcR0tTOggV/shYhB1m0hvca0aH+wrtmsuwHzRaPBPZ
SIeCoIt+HGyZTys3brekQz37euwW7BeirdY/bOngL8ZUisU2suW4LPOlw26l
kEWLyylo2zLniCI/Oiz82Wy8Atv9S/KddQF0UC+I8WFiJ3tRhzxO4vm6xSJr
sMdDu7zKgulQ+GF9nxN2QU70cesLdHBpkPUtwl452x9z9jYdbFaeu2v3iIK2
e8/bJp1Nh4iJ6qSD2BFflyhfu0uHgO3fkryxB5utsovu0+Fqvn/TOez7aY9q
eotwXoQzpRhbF2Jn11bjfNfb1MtVUNDmszpHZt7TwTA81a8LO3Biq25kB/4+
tAbKvmHf93Cflf9Ah1JUITOBLb39Rgyzhw55zWFzspUU9FZdLNv2Cx0gW+Xd
Ruy9tV2fykbp8NRSP/4RtrdYmI2fGAOyNE5x86soyODtouB+cQbs+yDKe4w9
/0ZO7i5JBkQ3rV3fjB3PfyNqIM0AnSj6w+/YDx1XVM8pMKDS+kAy/THOqxgx
I9UYMK6Tn3UX++SBWeKaHgP8uu8VVlRTkIAdpyW5mgGnVePvNGOLT6rvCzJg
QIufa+lH7GsXLCocjRnQttxnFYEoqLLsmre6KQM6FzHXWmLPLTDoybVkwFWL
2egB7LMV/qXIhQGhg3Zp3Ke4f/Q/F7N2ZUC4hsfoeuztsgvte90YcD1v+uBe
bHXXB0LzPRkwLBP+9AJ2jdzoJlMfBqxqiVn9E1vY/VDX89MMeLSHblfyjIKi
leznNV7F9bKoS12e435imrPNLpkBrMPVfiHYtl5TWd9TGOB6rvVvKjazJmmz
ZBoD3C8pRb7HbjrSdnlLJgMakltqLGrxfVVnqdFSwACKW/Xs2joKivMzMW97
wYAjHhGB5i/weZ4QI8wbGdB1zz3DA/vS8dZK1MQAozjD8Rjs2EAnzv1X+PnO
h+xm7PMh4bJn2xiQVp/4wboBn7cLL97zehlgZfLpqHMjzj/L2vn8JAPstkeG
FzTj/qWhrDp/igE3w5UWvsc+nv25LWCaAfF/B7tmsQNyjm1wmmPAGBmvaPES
94/CRIYBwYStCgqG37G9qjpGB6SZwKtti+e3UJBT2/4gUxoTqq+M9P9pxe8H
VOmuQpIJht15RivfUNAV3UoDNQYTFAW6b6yw668qTs6wmLAhYUHNfWyObaNP
iRYT6jjK1a5vKWiyh+9GX8OEKPXJw0NtFHRhUGSb9A4mmO/vcFnVge/DxcWF
QTuZoB7gEWeHjTYdkBnexYQhoR3i8dhj9yqb622ZMHy0/+s/7N2HvTeG7mNC
8yOW1cdOClox1mn8x4MJxS+vb8/toqDS6VzyQygTajz4e6I+4fvmvOJ9tzAm
zF1el/gKm6F6hjsezgQ1zwVrFHsp6PoaK13ZKLxfFZf2TOyQkDHTDReZ4D+e
L6j7jPufiJ7jg2tMMFrlEL78KwV9lEOJMQ+ZQHc4VsoboqCkW+TixSVMsKu/
8Dkc24Yfd/12KRMSWNZxH7Brdhy49eQRE14Iz5yK/E5Bd5OIwgnEBHfNdbcG
hyno2NJNTU7NTPhthj4/HaEgEUbrfKN+JqyjXCW//sH1yj4czhtggtL75JPr
xvF9PJn4bvk3Jsz4WOy6jb2xbs89kWEmrAjteHBoAp9v517rN7+YYOwYKD0x
SUGSN0bT3WeZ0EF/SmHPUJCsgvTaZAUWuOmfeCBBIdCB6VFSUpEFlZEJo6ex
iz63yp1ZxIJLj63ejGHbFF7pd1ZmwUyn7YUugkAJlktjeWosqKqp/VEqTCDF
KHZ3HZMF4Zeb+RfFCbRkzjxwXMACx18f62vlCHR+3beoSDMWUBq99ezlCTRz
PiJJeT0L2uscY8ewu5Y8KV6ziQVz+79MLV9IoNTVuqMRW1lQlCU3HrOIQMv8
1FwW2bNgfpZc2QUVAq0c/m2p78eC8p03x21oeD/a8Q4N/ixINDu8RZQkEBHI
9bQ/zoJ+Udeqx9hfxNyjggNZYHA6dYTDIFAW7eOz+hAWxKumNamwCURzeqG/
JxaPK5z4wdUmELMzdcXJOyzwQJLHAQhU0rLsPXGXBVdyZRyUTAgEdRkxF++x
QNHlStQv7O0Ps35n5rLg1PpadMeUQKdjc2tfPWDBQ5V73Ss3EKhFUOW+CrFg
jTQ72t6SQL45XUUt7Xi9tjSxHgcCzWXsdbXrxPVZ0Z5/3kugyKRPS/o/sECh
6Lr4N0ecR/iXsOkeFuR4uBhN7SdQrePwTo2vLFDeXxPIPUggJYWZqcBfLIiM
kwgY8CJQ1aklpjRxNtjM6zqRFkKgnheKe69KsOG7zZu2Z6EEElokd0JEig0i
3RLNQ2cJJCgUzR+QZsNHJcoV4wgC1X/9o5y9kA1jbydfjUcTqNWyZYxczgb+
u6au8gQCDaqF32To43H3pvL4uwQS9wquSlnNBjW99LGRezi/isB2cUM29Bza
I7f1PoG8dvgs+G7MhqavlTLy+QT6L8rxZI4pG/SfP7EueojrH1ttw9rKBlUt
vrYVIpD885/zOAfZUClTlajSgfP1yTKpcmWD3on3qh87CXRlmX2IxSE2GBz9
b3NmF67/5AshD082zP/pfUv3E4GWcjP/3fFhg+ukV3ngAIHI5D2zy8+wIVHH
+Fv0OIGMDtdMLkxiQ6wgYqBDkYqClAP1s5LZECpX+3ZSiYoe12ke519jQ7fz
9JDyEioyWXFjwiaNDaJNnEy3ZVS0/v2J8YuZbLj4dks9g6QiKxPub7FCNpjR
63q2GFCRy8KUkdkXbHBgZBfw9lPRmsUNiT6NbDg5M6cd70RFiqpThgNNbNhj
ajw37kJFteq2kS2v2JCW6Xy8wZ2KSL7y8lttbPBSVQxM9qWiIZsUm429bCjg
2Z77EElFRy+lFMdPsqGLHbVS+iEVbUxosBOZYsPuOaTwuYSKlidNzTs1zYZj
ecXdZeVU1HrD1tJljg115obiPtVUpJ2vPKBHcEBdkLJTvpGKxptTlLqlOUD8
Oaqg2EdFgRLXAmk0DkDCg9G1isLI90jE+gqSA3LnPHd+XCyMPN94y25lcOCH
pPu8MFVhZH9t4x1/NgdYhlzTbnVhtIY53vpcmwO+/fsMW7SFkZC5NcMZOPDF
eIvgsY0wCosW6UjfwwHha+abfyYIo1M/x27x7TjwQGr2qFkyXs+mx6vengN+
tg0N6anCyEW5mBh15MBY8149z9vCaP29A7y1BzngGJ3wxrJMGIk2VJ3r9uFA
U8cm+uZuYXRBzFdX+TwHroXsstzGEkHpKmZ3bl/gQMhz/0hXTRFUxFVQ0r7I
AS4rtSpUVwS92/Hwr3k89oYdBi9BBKnd/F0ZlMSBZqaW26MdeL6Bn2lvJgfS
bfYKjQTj+R7+VtlVHPhr11FJ7RZBg6fXP+FX47yG/P8T6xNBU3GKWk8QB16+
uGio+E0ELSsrke98xoGzVjHqG/6IIDdi4p1EAwdqx032SCwQRdPXAxyOvOOA
2/kfdqtMRJHay+PuuiMc2G5z2aQ3VxQ16D01yR7lwPXR7JNnHoqiY/htXHmM
A59JncerKkRRrW9a3exvDrSsXREWXS+KPJbUqD+f4kBYgehgcZ8oKnGT/rhN
mAtvu/+bS1kihiwot7d5q3JhbMjY6V2cGBr3HGH0LeVCV9H+XeHJYujGO/35
O9S4QDwz2WmcIYbG7jYW6K/kgsqjJwn1BWLoqtUvKSE6FzaJtk1atIihz6lG
9bF8LhTlHAlRkBVHAfpvjO6bc+FoiX3H+2RxBPPb9Y23cCGiovZpwC1xJN7U
xX9pyYWU0xdDVuaKo+uO/axRay6sgG/ZaUgcPY34q8LfzQXLBsZT9UFxJNm2
bLbCmQtDVWP8E6slUIa3Z1VjEBeqbqCtMV8lkLuhd7n9GS7Urid/lo9KID7V
v/hHMBduqL+992daAtUmncmVDuOCzfiyOwlykmi4Oj51WzQXBH0Bz7xBEuku
KA/6cIULU5yV+oVpkqjxHnXN93wuhH2oU49ykUKsxrPp+wu58Nvx2+LL3lLo
/Pd5lPYiLpxUtoy5GySFLFhzdTXF2FtvCs0kSqGXuePWaRVcMNVYRejXSaHW
ggEX6zou6KxUbJRjLUDtJS8ulPZw4djP8vNh/xYgn97an0+EeWCyQfzZflcZ
xN006XNChAedeT7Lh7xk0HABfYInyoPXDd9MTvjLINfg8/9uiPFAia/TmhMu
g+yX2cicluQB/pN15ECmDFrn0K1pIMcD38NTpxf1ySCljv98i1R50LRe4lme
iyx63KI2fZPPg0N+UvpDZ+RQzGC+rLsOD/42nxqbipJDu4XWkpq6PIh9LCmr
kCCH/uM67KjWw+OeQUGO2XKIvJic/8GAB+T+kVV2r+VQ3BY5ZwUTHkzXz6zq
V5dHzg2U5vAtPBALkttm0SqPxGr609wO8mBz4VV5s/ULkW70e9kPCTwYoz7K
0tiuhPZv56to1fFARjEvU09FBTXNo/WlTvLA/IKw60I1NbQ41OxEiYYmPA99
N7bBYAVyFn55+8FuTTDnL/ryN1cdxTmE3nI4pwlHYmw03yyloX9Xm+xVijVB
wfNxeUAWHXm8C82t7teEyUjJ6pJwFiofcGqWXqgFnV52YsVWXESdLQgz26AF
dQlRbl76mkj7Kymh4a8FWq0SsetKtdDNAl1LlUwtuLUoc1xLh4+kgwvIiTYt
SPBhnR9p10F7V+xoPU1og7612YKDznoop95F/ruuNrC0I6Za5Fej1TaSsp5u
2hA7URjtWmWA7uZ1dydf0YbBYImDOeZGaJH0EsH9em1oyX+s5T9jjFwFZ/08
JrTBJsPwvxVxa9Hk7hCXtav44OBGM1h+EdC5Y9+HJ3byYUH1uyWlB03Q5L5g
U4dwPsQcKHSZ4QqQno+WFyuCDxY/rm88oy1A/me/JE1jByd0s+brCdCfrI0/
kyP50Hpvx1+RNQI0NiST/C6GD0/ff82QtxCgYd+Mn1vj+eDLKeMy3QToY+TT
ZMEN/PwRB55dugAtTfGtkU3ng0Y/1aDnlgDtzdEY+YTdqPncbP8dAepqjjY7
c5MPEptCHFzzBKhdbttIRRYfRJdUXztWKUCt1/vMdO7zIcfp/abz7QIkm5d4
hMjlg+mUmrN0lwBZVW9IeYPNvH3wTPxHAXrVmzPinc+HTUMfy5L6BahJwzcl
r4gPCa579bJ+C5CEvsbzoAd8iO+030NOCtDmTe0jFg/5UD+z+VTOtAC98DBa
970Yr7d5tKZwvikSDfp55FEJHwQnM4f4wqZoY2x6SlQpHwb3CWTLxEzRuRs2
z3eX8SE0ol7fUMoU1RYQo7RyPtj76ex/LGOK/geuELtF
              "]]}, 
            Annotation[#, "Charting`Private`Tag$64799#4"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> NCache[{
            Log[100000], 0}, {11.512925464970229`, 0}], 
         FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{40, 1}, {50, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{11.512925652936358`, 
            20.72326564898028}, {-42.899643078094826`, 5.316714977179545}}, {{
            11.512925652936358`, 20.72326564898028}, {-42.899643078094826`, 
            5.316714977179545}}}}, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {11.512925464970229`, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"covariance / dB (10\\!\\(\\*SubscriptBox[\\(log\\), \
\\(10\\)]\\))\"", TraditionalForm], ""}, {
            FormBox[
            "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / (log scale)\"", TraditionalForm], ""}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 1}, {50, 1}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{
             Log[100000], 
             Log[1000000000]}, {-42.899643078094826`, 5.316714977179545}}, {{
           11.512925464970229`, 20.72326583694641}, {-42.899643078094826`, 
           5.316714977179545}}], PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Vs1i2PDloss", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"Tin", "=", "0"}], ",", 
                   RowBox[{"Tloss", "=", "0"}], ",", 
                   RowBox[{"Rpd", "=", "0"}]}], ")"}], ")"}]}], 
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Vs1i2PDloss", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"Tin", "=", "0"}], ",", 
                   RowBox[{"Tloss", "=", "0"}], ",", 
                   RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], ")"}]}], 
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Vs1i2PDloss", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"Tin", "=", "0.1`"}], ",", 
                   RowBox[{"Tloss", "=", "0.1`"}], ",", 
                   RowBox[{"Rpd", "=", "0"}]}], ")"}], ")"}]}], 
           RowBox[{"10", " ", 
             RowBox[{
               InterpretationBox[
                SubscriptBox["log", "10"], Log10, AutoDelete -> True], "(", 
               RowBox[{"Vs1i2PDloss", "(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[Pi]", " ", "f"}], ",", 
                   RowBox[{"Tin", "=", "0.1`"}], ",", 
                   RowBox[{"Tloss", "=", "0.1`"}], ",", 
                   RowBox[{"Rpd", "=", "0.5`"}]}], ")"}], ")"}]}]}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm], ",", 
                   TagBox[#3, HoldForm], ",", 
                   TagBox[#4, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.835222400957799*^9, {3.83522244063386*^9, 3.835222478624865*^9}, 
   3.835222670149489*^9, {3.835222737510088*^9, 3.835222816099214*^9}, {
   3.835222849644548*^9, 3.835222889865952*^9}, 3.835223143715624*^9, {
   3.835223332610021*^9, 3.8352233691690903`*^9}, 3.835223427377329*^9},
 CellLabel->
  "Out[218]=",ExpressionUUID->"5869e92c-7bcc-4a2c-9c39-b5b5fc9e58a0"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.835222878582903*^9, 
  3.835222880503704*^9}},ExpressionUUID->"611d5349-7586-4bcf-bbb4-\
7145c586810e"]
},
WindowSize->{1797, 909},
WindowMargins->{{Automatic, -1839}, {Automatic, 116}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 347, 8, 125, "Text",ExpressionUUID->"a05200c5-c521-4b6e-b424-86e07dabe570"],
Cell[908, 30, 538, 15, 54, "Text",ExpressionUUID->"ca20a264-25e2-4796-9056-19bee610b50e"],
Cell[1449, 47, 2665, 78, 677, "Input",ExpressionUUID->"42d83666-4f6c-4e2b-990a-a38e3d9a22ec"],
Cell[4117, 127, 1354, 36, 120, "Input",ExpressionUUID->"7b8d66d9-74b8-4ae3-8d54-04d1f52a2d1b"],
Cell[CellGroupData[{
Cell[5496, 167, 623, 12, 82, "Input",ExpressionUUID->"ce9cfe77-5588-42f5-86fc-f43f3f3aae83"],
Cell[6122, 181, 9226, 245, 311, "Output",ExpressionUUID->"dbb1db64-945f-4301-aca3-4965202e8613"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15385, 431, 865, 19, 47, "Input",ExpressionUUID->"b6612c5d-4f15-43b0-bd96-236375be9071"],
Cell[16253, 452, 2551, 76, 93, "Output",ExpressionUUID->"be42a79d-8031-4da2-9831-81bfeae740f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18841, 533, 3829, 101, 268, "Input",ExpressionUUID->"60245e0a-b18c-4dbd-aeb4-35bfcf2d1ace"],
Cell[22673, 636, 790, 22, 92, "Output",ExpressionUUID->"716c7b72-29d7-4d14-a5c1-1abe4da46e21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23500, 663, 1517, 42, 157, "Input",ExpressionUUID->"3bbf1121-7a7a-465b-a9b8-efd82437aa9a"],
Cell[25020, 707, 176, 2, 53, "Output",ExpressionUUID->"88b6b29c-a0f2-480d-a64b-628b4b8ddba0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25233, 714, 1902, 46, 150, "Input",ExpressionUUID->"876a3012-4db6-4a05-bd4a-b69a0f88b998"],
Cell[27138, 762, 7329, 205, 311, "Output",ExpressionUUID->"73934a93-ddb3-4aae-b095-02cdcf080152"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34504, 972, 274, 6, 47, "Input",ExpressionUUID->"6c2ea06b-f9e4-4101-a6e9-2bed25faaa62"],
Cell[34781, 980, 786, 22, 92, "Output",ExpressionUUID->"f591c21b-2414-45e1-b4bd-b48e71140740"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35604, 1007, 641, 15, 82, "Input",ExpressionUUID->"6109cbb5-78f3-42a3-be5f-088eaa742d11"],
Cell[36248, 1024, 176, 2, 53, "Output",ExpressionUUID->"7156fded-ded4-4eb8-be23-87ae8c772c9f"]
}, Open  ]],
Cell[36439, 1029, 208, 4, 54, "Text",ExpressionUUID->"9f769486-c43a-425b-9f57-c6852615a46c"],
Cell[CellGroupData[{
Cell[36672, 1037, 2906, 75, 307, "Input",ExpressionUUID->"baf790ca-fe34-42d6-97bb-71db0f768986"],
Cell[39581, 1114, 7471, 205, 311, "Output",ExpressionUUID->"6afc5115-0734-4960-b0a2-db1730d5da3c"],
Cell[47055, 1321, 176, 2, 53, "Output",ExpressionUUID->"1ab0258c-5b09-4c45-af20-0653fea813ca"]
}, Open  ]],
Cell[47246, 1326, 784, 20, 116, "Input",ExpressionUUID->"524336a8-c033-4272-a92d-2bb29f74dd17"],
Cell[48033, 1348, 251, 6, 54, "Text",ExpressionUUID->"8e3464c1-b9c0-4855-ab8e-d6e4dec1a3d3"],
Cell[CellGroupData[{
Cell[48309, 1358, 4888, 85, 127, "Input",ExpressionUUID->"a87c3ed5-bcdb-4424-adc8-8c7944ecb967"],
Cell[53200, 1445, 4816, 83, 133, "Output",ExpressionUUID->"34b9357f-3717-4463-ac31-ae3ded4ff8c7"]
}, Open  ]],
Cell[58031, 1531, 497, 11, 47, "Input",ExpressionUUID->"367c6a75-dff7-4d73-acfc-4b4ec1008503"],
Cell[CellGroupData[{
Cell[58553, 1546, 11893, 311, 2007, "Input",ExpressionUUID->"6271967f-9ebc-4495-a23a-a5002fd3c14d"],
Cell[70449, 1859, 71390, 1294, 362, "Output",ExpressionUUID->"35b99dba-7f4e-44e5-85db-df3d487bfb37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141876, 3158, 6758, 173, 982, "Input",ExpressionUUID->"b60d38f1-f753-4f86-ac1c-3ef626e3fc30"],
Cell[148637, 3333, 131188, 2360, 514, "Output",ExpressionUUID->"9ccac161-d21b-4665-813f-6fdb5ba0bca7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279862, 5698, 7139, 186, 1261, "Input",ExpressionUUID->"f2455dc5-ea52-4213-a106-86ca368c0212"],
Cell[287004, 5886, 68330, 1249, 437, "Output",ExpressionUUID->"7d4b3dd8-fe58-4061-82fb-527f8f4ff986"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355371, 7140, 10300, 271, 1606, "Input",ExpressionUUID->"9078f2fd-8f04-4df4-a0b7-27d6d2095637"],
Cell[365674, 7413, 133854, 2406, 792, "Output",ExpressionUUID->"5869e92c-7bcc-4a2c-9c39-b5b5fc9e58a0"]
}, Open  ]],
Cell[499543, 9822, 152, 3, 47, "Input",ExpressionUUID->"611d5349-7586-4bcf-bbb4-7145c586810e"]
}
]
*)

