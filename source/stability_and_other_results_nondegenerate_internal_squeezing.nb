(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    629648,      13184]
NotebookOptionsPosition[    625549,      13132]
NotebookOutlinePosition[    625914,      13148]
CellTagsIndexPosition[    625871,      13145]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Older model for nondegenerate internal squeezing with 2x2 matrices (agrees \
with 4x4 model in solve_model_...), calculates stability plot for Fig 2
James Gardner, February 2022
Radiation pressure + back-action evasion for nondegenerate internal squeezing\
\
\>", "Text",
 CellChangeTimes->{{3.836608145765127*^9, 3.8366081624844303`*^9}, 
   3.836954525659338*^9, {3.853802220168767*^9, 
   3.853802249835886*^9}},ExpressionUUID->"45536b2d-a4a5-4af5-902b-\
e0c4b447a39d"],

Cell["Attempt 1: Using Hamiltonian from Li et al, 2020", "Text",
 CellChangeTimes->{{3.836608145765127*^9, 
  3.8366081869249163`*^9}},ExpressionUUID->"ff483bee-ee34-4fed-95df-\
f190376ecfd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "the", " ", "code", " ", "in", " ", "this", " ", "cell", " ", "is", " ", 
     "from", " ", "Xiang", " ", "Li", " ", "by", " ", "personal", " ", 
     "correspondence"}], ",", " ", 
    RowBox[{
     RowBox[{
     "it", " ", "is", " ", "NOT", " ", "my", " ", "original", " ", "work", 
      " ", "and", " ", "my", " ", "GitHub", " ", "licence", " ", "does", " ", 
      "not", " ", "apply", " ", "to", " ", 
      RowBox[{
       RowBox[{"it", "!"}], " ", "--"}], " ", "James", " ", "Gardner", 
      "\[IndentingNewLine]", "g", " ", "is", " ", "\[Omega]s"}], "=", 
     RowBox[{"\[Kappa]", " ", "and", " ", "G", " ", "is", " ", "\[Chi]"}]}]}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"solnsc", "=", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "A1"}], 
          "\[Equal]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Gamma]"}], " ", "A1"}], " ", "+", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", " ", "\[Gamma]"}], "]"}], "u1"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "A2"}], " ", 
          "\[Equal]", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[Alpha]"}], "/", "\[HBar]"}], " ", 
            RowBox[{"(", 
             RowBox[{"X", "-", " ", 
              RowBox[{"L", " ", "h"}]}], ")"}]}], "-", 
           RowBox[{"\[Gamma]", " ", "A2"}], " ", "+", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", " ", "\[Gamma]"}], "]"}], "u2"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "X"}], " ", "==", 
          
          RowBox[{"P", "/", 
           RowBox[{"(", 
            RowBox[{"M", "/", "4"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "P"}], " ", 
          "\[Equal]", 
          RowBox[{"\[Alpha]", " ", "A1"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"A1", ",", "A2", ",", "X", ",", "P"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v2outsc", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"u2", "-", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"2", "\[Gamma]"}], "]"}], "A2"}]}], "/.", 
       RowBox[{"solnsc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "//", "Simplify"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"noise21sc", "=", 
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{"v2outsc", ",", "u1"}], "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noise22sc", "=", 
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{"v2outsc", ",", "u2"}], "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigsc", "=", 
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{"v2outsc", ",", "h"}], "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"screp", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", "500."}]}], ",", 
       RowBox[{"\[Omega]0", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", "3", " ", 
         RowBox[{
          RowBox[{"10", "^", "8"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ")"}]}]}]}], ",", 
       RowBox[{"\[HBar]", "\[Rule]", 
        RowBox[{"10", "^", 
         RowBox[{"-", "34"}]}]}], ",", 
       RowBox[{"\[CapitalOmega]", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", "f"}]}], ",", 
       RowBox[{"Pc", "\[Rule]", 
        RowBox[{"3", " ", 
         RowBox[{"10", "^", "6"}]}]}], ",", 
       RowBox[{"L", "\[Rule]", "4000"}], ",", 
       RowBox[{"c", " ", "\[Rule]", 
        RowBox[{"3", " ", 
         RowBox[{"10", "^", "8"}]}]}], ",", 
       RowBox[{"M", "\[Rule]", "200"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qnoisesc", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "noise21sc", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"Abs", "[", "noise22sc", "]"}], "^", "2"}]}], "]"}], "/", 
        RowBox[{"Abs", "[", "sigsc", "]"}]}], "/.", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "Pc", " ", "\[HBar]", " ", 
          RowBox[{"\[Omega]0", "/", 
           RowBox[{"(", 
            RowBox[{"L", " ", "c"}], ")"}]}]}], "]"}]}]}], "/.", "screp"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hsql", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"8", 
        RowBox[{"\[HBar]", "/", 
         RowBox[{"(", 
          RowBox[{"M", " ", 
           RowBox[{"\[CapitalOmega]", "^", "2"}], " ", 
           RowBox[{"L", "^", "2"}]}], ")"}]}]}], "]"}], "/.", "screp"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", "=", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "B1"}], 
          "\[Equal]", " ", 
          RowBox[{
           RowBox[{"G", " ", "C1"}], " ", "+", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", " ", "\[Gamma]"}], "]"}], " ", "u1"}], "+", " ", 
           RowBox[{"g", " ", "A1"}], " ", "-", 
           RowBox[{
            RowBox[{"(", "\[Gamma]", ")"}], " ", "B1"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "B2"}], 
          "\[Equal]", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"-", " ", "G"}], " ", "C2"}], "  ", "+", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", " ", "\[Gamma]"}], "]"}], " ", "u2"}], "+", 
           RowBox[{"g", " ", "A2"}], " ", "-", 
           RowBox[{
            RowBox[{"(", "\[Gamma]", ")"}], " ", "B2"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "C1"}], " ", 
          "\[Equal]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Gamma]m"}], " ", "C1"}], "+", " ", 
           RowBox[{"G", " ", "B1"}], "+", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", " ", "\[Gamma]m"}], "]"}], " ", "fc1"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "C2"}], " ", 
          "\[Equal]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Gamma]m"}], " ", "C2"}], "-", 
           RowBox[{"G", " ", "B2"}], "+", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", " ", "\[Gamma]m"}], "]"}], " ", "fc2"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "A1"}], 
          "\[Equal]", 
          RowBox[{
           RowBox[{"-", " ", "g"}], " ", "B1"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "A2"}], " ", 
          "\[Equal]", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "g"}], " ", "B2"}], "-", 
           RowBox[{
            RowBox[{"\[Alpha]", "/", "\[HBar]"}], " ", 
            RowBox[{"(", 
             RowBox[{"X", "-", " ", 
              RowBox[{"L", " ", "h"}]}], ")"}]}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "X"}], " ", "==", 
          
          RowBox[{"P", "/", 
           RowBox[{"(", 
            RowBox[{"M", "/", "4"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[CapitalOmega]", " ", "P"}], " ", 
          "\[Equal]", 
          RowBox[{"\[Alpha]", " ", "A1"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "A1", ",", "A2", ",", "B1", ",", "B2", ",", "C1", ",", "C2", ",", "X",
          ",", "P"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v2out", "=", 
     RowBox[{
      RowBox[{"u2", "-", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "\[Gamma]"}], "]"}], "B2"}]}], "/.", 
      RowBox[{"soln", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"The", " ", "WLC", " ", "parts", " ", 
      RowBox[{"include", ":", 
       RowBox[{"quantum", " ", "noise", " ", "only"}]}]}], ",", 
     RowBox[{"thermal", " ", "noise"}], ",", 
     RowBox[{"and", " ", 
      RowBox[{"combined", "."}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"noise21", "=", 
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{"v2out", ",", "u1"}], "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noise22", "=", 
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{"v2out", ",", "u2"}], "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noise2t1", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{"v2out", ",", "fc1"}], "]"}], 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "kB", " ", 
         RowBox[{"Tenv", "/", 
          RowBox[{"(", 
           RowBox[{"\[HBar]", " ", "\[Omega]m"}], ")"}]}]}], "]"}]}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noise2t2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{"v2out", ",", "fc2"}], "]"}], 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "kB", " ", 
         RowBox[{"Tenv", "/", 
          RowBox[{"(", 
           RowBox[{"\[HBar]", " ", "\[Omega]m"}], ")"}]}]}], "]"}]}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sig", "=", 
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{"v2out", ",", "h"}], "]"}], "//", "Simplify"}]}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"wlcrep", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"g", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", "5000"}]}], 
       RowBox[{"(*", "6000", "*)"}], ",", 
       RowBox[{"G", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", "4930"}]}], 
       RowBox[{"(*", "5950", "*)"}], ",", 
       RowBox[{"\[Gamma]", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", "500."}]}], ",", 
       RowBox[{"\[Gamma]m", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", 
         RowBox[{
          RowBox[{"10", "^", "8"}], "/", 
          RowBox[{"(", " ", 
           RowBox[{"2", " ", "8", " ", 
            RowBox[{"10", "^", "9"}]}], ")"}]}]}]}], ",", 
       RowBox[{"\[Omega]m", "\[Rule]", 
        RowBox[{"2", " ", "Pi", "  ", 
         RowBox[{"10", "^", "8"}]}]}], ",", 
       RowBox[{"\[Omega]0", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", "3", " ", 
         RowBox[{
          RowBox[{"10", "^", "8"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ")"}]}]}]}], ",", 
       RowBox[{"\[HBar]", "\[Rule]", 
        RowBox[{"10", "^", 
         RowBox[{"-", "34"}]}]}], ",", 
       RowBox[{"Tenv", "\[Rule]", "4"}], ",", 
       RowBox[{"kB", "\[Rule]", 
        RowBox[{"1.38", " ", 
         RowBox[{"10", "^", 
          RowBox[{"-", "23"}]}]}]}], ",", 
       RowBox[{"\[CapitalOmega]", "\[Rule]", 
        RowBox[{"2", " ", "Pi", " ", "f"}]}], ",", 
       RowBox[{"Pc", "\[Rule]", 
        RowBox[{"3", " ", 
         RowBox[{"10", "^", "6"}]}]}], ",", 
       RowBox[{"L", "\[Rule]", "4000"}], ",", 
       RowBox[{"c", " ", "\[Rule]", 
        RowBox[{"3", " ", 
         RowBox[{"10", "^", "8"}]}]}], ",", 
       RowBox[{"M", "\[Rule]", "200"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"qnoisebase", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", "noise21", "]"}], "^", "2"}], "+", 
           RowBox[{
            RowBox[{"Abs", "[", "noise22", "]"}], "^", "2"}]}], "]"}], "/", 
         RowBox[{"Abs", "[", "sig", "]"}]}], "/.", 
        RowBox[{"\[Alpha]", "\[Rule]", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"2", "Pc", " ", "\[HBar]", " ", 
           RowBox[{"\[Omega]0", "/", 
            RowBox[{"(", 
             RowBox[{"L", " ", "c"}], ")"}]}]}], "]"}]}]}], "/.", 
       "baserep"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qnoisewlc", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "noise21", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"Abs", "[", "noise22", "]"}], "^", "2"}]}], "]"}], "/", 
        RowBox[{"Abs", "[", "sig", "]"}]}], "/.", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "Pc", " ", "\[HBar]", " ", 
          RowBox[{"\[Omega]0", "/", 
           RowBox[{"(", 
            RowBox[{"L", " ", "c"}], ")"}]}]}], "]"}]}]}], "/.", "wlcrep"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thnoisewlc", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "noise2t1", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"Abs", "[", "noise2t2", "]"}], "^", "2"}]}], "]"}], "/", 
        RowBox[{"Abs", "[", "sig", "]"}]}], "/.", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "Pc", " ", "\[HBar]", " ", 
          RowBox[{"\[Omega]0", "/", 
           RowBox[{"(", 
            RowBox[{"L", " ", "c"}], ")"}]}]}], "]"}]}]}], "/.", "wlcrep"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalnoisewlc", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "noise21", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"Abs", "[", "noise22", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"Abs", "[", "noise2t1", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"Abs", "[", "noise2t2", "]"}], "^", "2"}]}], "]"}], "/", 
        RowBox[{"Abs", "[", "sig", "]"}]}], "/.", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "Pc", " ", "\[HBar]", " ", 
          RowBox[{"\[Omega]0", "/", 
           RowBox[{"(", 
            RowBox[{"L", " ", "c"}], ")"}]}]}], "]"}]}]}], "/.", "wlcrep"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hsql", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"8", 
        RowBox[{"\[HBar]", "/", 
         RowBox[{"(", 
          RowBox[{"M", " ", 
           RowBox[{"\[CapitalOmega]", "^", "2"}], " ", 
           RowBox[{"L", "^", "2"}]}], ")"}]}]}], "]"}], "/.", "wlcrep"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "clear", " ", "all", " ", "variables", " ", "except", " ", "for", " ", 
     RowBox[{"Li", "'"}], "s", " ", "functions"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "@@", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Names", "@", "\"\<`*\>\""}], ",", 
       RowBox[{
       "\"\<hsql\>\"", "|", "\"\<qnoisesc\>\"", "|", "\"\<qnoisewlc\>\"", 
        "|", "\"\<totalnoisewlc\>\""}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8425750118237743`*^9, 3.8425750130160513`*^9}, {
  3.842575297564416*^9, 3.842575364535263*^9}, {3.842575526119029*^9, 
  3.842575527303299*^9}, {3.842575703421772*^9, 3.842575712777699*^9}, {
  3.842575744998043*^9, 3.842575815112268*^9}, {3.843600516894046*^9, 
  3.8436005333518143`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"51ce2a0c-08ec-488b-af85-ece07d7a9c69"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"setting", " ", "global", " ", "assumptions"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"$Assumptions", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"\[Gamma]a", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"\[Gamma]btot", "\[GreaterEqual]", "\[Gamma]R", ">", "0"}], 
       ",", 
       RowBox[{"\[Gamma]c", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"1", ">", "Rpd", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"\[Chi]", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"\[Omega]s", ">", "0"}], ",", 
       RowBox[{"\[Beta]", "\[Element]", "Reals"}], ",", 
       RowBox[{"\[Rho]RP", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"\[Rho]BAE", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"\[Alpha]OG", "\[Element]", "Reals"}], ",", 
       RowBox[{"\[Phi]", "\[Element]", "Reals"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"where", " ", "\[Beta]"}], "=", 
      FractionBox[
       RowBox[{"\[Alpha]GW", " ", "Larm"}], 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"1", "/", "2"}]], "\[HBar]"}]]}], ",", " ", 
     RowBox[{
      RowBox[{"\[Rho]RP", "=", 
       RowBox[{"\[Rho]BAE", "=", 
        FractionBox[
         SuperscriptBox["\[Alpha]GW", "2"], 
         RowBox[{
          SuperscriptBox["2", 
           RowBox[{"1", "/", "2"}]], "\[HBar]", " ", "\[Mu]"}]]}]}], ";"}]}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Id", "=", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "simplifying", " ", "upstream", " ", "to", " ", "better", " ", "the", " ",
      "end", " ", "result"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ma", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Gamma]a", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], "Id"}], 
      "+", 
      RowBox[{
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Rho]RP"}], 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"1", "/", "2"}]], 
         SuperscriptBox["\[CapitalOmega]", "2"]}]], 
       RowBox[{"(", GridBox[{
          {"1", "1"},
          {
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}]}
         }], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"invMa", "=", 
     RowBox[{
      RowBox[{"Inverse", "[", "Ma", "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mc", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Gamma]c", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], "Id"}], 
      "-", 
      RowBox[{
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Rho]BAE"}], 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"1", "/", "2"}]], 
         SuperscriptBox["\[CapitalOmega]", "2"]}]], 
       RowBox[{"(", GridBox[{
          {"1", "1"},
          {
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}]}
         }], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"invMc", "=", 
     RowBox[{
      RowBox[{"Inverse", "[", "Mc", "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mb", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Gamma]btot", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], "Id"}], 
      "+", 
      RowBox[{
       SuperscriptBox["\[Omega]s", "2"], 
       RowBox[{"Inverse", "[", "Ma", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["\[Chi]", "2"], 
       RowBox[{
        RowBox[{"(", GridBox[{
           {"0", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}], "]"}]}]},
           {
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}], "]"}]}], "0"}
          }], ")"}], ".", 
        RowBox[{"Inverse", "[", "Mc", "]"}], ".", 
        RowBox[{"(", GridBox[{
           {"0", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}], "]"}]}]},
           {
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}], "]"}]}], "0"}
          }], ")"}]}]}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"\[Phi]", " ", "free", " ", "in", " ", "Hamiltonian"}], ",", " ", 
     RowBox[{
      RowBox[{"recover", " ", "when", " ", "\[Phi]"}], "=", 
      FractionBox["\[Pi]", "2"]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TimeConstraint0", "=", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"invMb", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Inverse", "[", "Mb", "]"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", "TimeConstraint0"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalGamma]", "=", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["2", 
        RowBox[{"1", "/", "2"}]]], 
      RowBox[{"(", GridBox[{
         {"1", "1"},
         {
          RowBox[{"-", "\[ImaginaryI]"}], "\[ImaginaryI]"}
        }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rin", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "Rpd"}], ")"}], 
          RowBox[{"1", "/", "2"}]], 
         RowBox[{"\[CapitalGamma]", ".", 
          RowBox[{"(", 
           RowBox[{"Id", "-", 
            RowBox[{"2", " ", "\[Gamma]R", " ", "invMb"}]}], ")"}], ".", 
          RowBox[{"Inverse", "[", "\[CapitalGamma]", "]"}]}]}], ")"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", "TimeConstraint0"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rb", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "Rpd"}], ")"}], 
           RowBox[{"1", "/", "2"}]]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", "\[Gamma]R"}], ")"}], 
          RowBox[{"1", "/", "2"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]btot", "-", "\[Gamma]R"}], ")"}]}], ")"}], 
          RowBox[{"1", "/", "2"}]], 
         RowBox[{"\[CapitalGamma]", ".", " ", "invMb", ".", 
          RowBox[{"Inverse", "[", "\[CapitalGamma]", "]"}]}]}], ")"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", "TimeConstraint0"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ra", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "Rpd"}], ")"}], 
           RowBox[{"1", "/", "2"}]]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", "\[Gamma]R"}], ")"}], 
          RowBox[{"1", "/", "2"}]], "\[Omega]s", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", "\[Gamma]a"}], ")"}], 
          RowBox[{"1", "/", "2"}]], 
         RowBox[{"\[CapitalGamma]", ".", " ", "invMb", ".", "invMa", ".", 
          RowBox[{"Inverse", "[", "\[CapitalGamma]", "]"}]}]}], ")"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", "TimeConstraint0"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rc", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "Rpd"}], ")"}], 
           RowBox[{"1", "/", "2"}]]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", "\[Gamma]R"}], ")"}], 
          RowBox[{"1", "/", "2"}]], 
         RowBox[{"(", 
          RowBox[{"-", "\[Chi]"}], ")"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", "\[Gamma]c"}], ")"}], 
          RowBox[{"1", "/", "2"}]], 
         RowBox[{"\[CapitalGamma]", ".", "invMb", ".", 
          RowBox[{"(", GridBox[{
             {"0", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"Exp", "[", 
                RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}], "]"}]}]},
             {
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}], "]"}]}], "0"}
            }], ")"}], ".", "invMc", ".", 
          RowBox[{"Inverse", "[", "\[CapitalGamma]", "]"}]}]}], ")"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", "TimeConstraint0"}]}], "]"}]}], 
    ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"\[Phi]", " ", "free", " ", "in", " ", "Hamiltonian"}], ",", " ", 
     RowBox[{
      RowBox[{"recover", " ", "when", " ", "\[Phi]"}], "=", 
      FractionBox["\[Pi]", "2"]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "Rpd"}], ")"}], 
           RowBox[{"1", "/", "2"}]]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", "\[Gamma]R"}], ")"}], 
          RowBox[{"1", "/", "2"}]], "\[Omega]s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}], ")"}], 
         RowBox[{"\[CapitalGamma]", ".", " ", "invMb", ".", "invMa", ".", 
          RowBox[{"(", GridBox[{
             {"1", "0"},
             {"0", 
              RowBox[{"-", "1"}]}
            }], ")"}]}]}], ")"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", "TimeConstraint0"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"theorem", ":", " ", 
      RowBox[{
       RowBox[{
       "conjugation", " ", "commutes", " ", "with", " ", "any", " ", 
        "holomorphic", " ", "function", " ", "that", " ", "is", " ", "real"}],
        "-", 
       RowBox[{"valued", " ", "on", " ", "the", " ", "reals"}]}]}], ",", " ", 
     
     RowBox[{
     "which", " ", "is", " ", "all", " ", "the", " ", "functions", " ", "we", 
      " ", "care", " ", "about", " ", 
      RowBox[{"(", 
       RowBox[{"check", " ", 
        RowBox[{"this", "!"}]}], ")"}]}], ",", " ", 
     RowBox[{
     "use", " ", "FlipI", " ", "only", " ", "if", " ", "all", " ", 
      "variables", " ", "are", " ", "real"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"look", " ", "at"}], " ", "//", "FullForm"}], ",", " ", 
     RowBox[{
     "\[ImaginaryI]", " ", "is", " ", "not", " ", "present", " ", "in", " ", 
      "all", " ", "forms"}], ",", " ", 
     RowBox[{"sometimes", " ", "is", " ", "just", " ", 
      RowBox[{"Complex", "[", 
       RowBox[{"0", ",", "1"}], "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"\[RuleDelayed]", " ", 
     RowBox[{"is", " ", 
      RowBox[{
      "RuleDelayed", ":", " ", 
       "\"\<represents a rule that transforms lhs to rhs, evaluating rhs only \
after the rule is used. \>\""}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FlipI", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", "\[Rule]", 
        RowBox[{"-", "\[ImaginaryI]"}]}], ",", 
       RowBox[{
        RowBox[{"Complex", "[", 
         RowBox[{"RePart_", ",", "ImPart_"}], "]"}], "\[Rule]", 
        RowBox[{"Complex", "[", 
         RowBox[{"RePart", ",", 
          RowBox[{"-", "ImPart"}]}], "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "FlipI", " ", "should", " ", "catch", " ", "all", " ", "cases", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"check", " ", "this", " ", "with", " ", 
        RowBox[{"FullForm", "?"}]}], ",", " ", 
       RowBox[{
        RowBox[{"how", "?", " ", "--"}], ">", " ", 
        RowBox[{
        "will", " ", "not", " ", "work", " ", "through", " ", "Hold"}]}], ",",
        " ", 
       RowBox[{"so", " ", 
        RowBox[{"don", "'"}], "t", " ", "use", " ", "that"}]}], ")"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ConjugateFlipI", "=", 
     RowBox[{
      RowBox[{"Conjugate", "[", "f_", "]"}], ":>", 
      RowBox[{"(", 
       RowBox[{"f", "/.", "FlipI"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Sx", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Rpd", " ", "Id"}], "\[IndentingNewLine]", "+", 
          RowBox[{"Rin", ".", 
           RowBox[{"ConjugateTranspose", "[", "Rin", "]"}]}], 
          "\[IndentingNewLine]", "+", 
          RowBox[{"Ra", ".", 
           RowBox[{"ConjugateTranspose", "[", "Ra", "]"}]}], 
          "\[IndentingNewLine]", "+", 
          RowBox[{"Rb", ".", 
           RowBox[{"ConjugateTranspose", "[", "Rb", "]"}]}], 
          "\[IndentingNewLine]", "+", 
          RowBox[{"Rc", ".", 
           RowBox[{"ConjugateTranspose", "[", "Rc", "]"}]}]}], ")"}], "/.", 
        "ConjugateFlipI"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"signal", " ", "transfer", " ", "function", " ", "is", " ", 
        SubscriptBox["X", 
         RowBox[{"PD", ",", "2"}]], " ", "wrt", " ", "h", " ", "not", " ", 
        SubscriptBox[
         OverscriptBox["X", "\[RightVector]"], "PD"], " ", "wrt", " ", 
        RowBox[{
         OverscriptBox["h", "\[RightVector]"], " ", "--"}]}], ">", " ", 
       RowBox[{"factor", " ", "of", " ", "two", " ", "from", " ", 
        SubscriptBox[
         RowBox[{"(", 
          RowBox[{"T", ".", 
           RowBox[{"(", GridBox[{
              {"1"},
              {"1"}
             }], ")"}]}], ")"}], "22"], " ", "versus", " ", 
        SubscriptBox["T", "22"], "\[IndentingNewLine]", 
        RowBox[{"NB", ":", " ", 
         RowBox[{"another", " ", "subtlety", " ", "in", " ", "that", " ", 
          SubscriptBox["T", "21"]}]}]}]}], "=", 
      SubscriptBox["T", "22"]}], ",", " ", 
     RowBox[{"but", " ", "I", " ", 
      RowBox[{"don", "'"}], "t", " ", "know", " ", "if", " ", "this", " ", 
      "can", " ", "be", " ", "known", " ", "a", " ", "priori"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigTransfer", " ", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"T", ".", 
           RowBox[{"(", GridBox[{
              {"1"},
              {"1"}
             }], ")"}]}], ")"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}]}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "to", " ", "remove", " ", "atomic",
      " ", "brackets", " ", 
     RowBox[{"{", "...", "}"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigTransferAbs", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"ComplexExpand", "[", 
        RowBox[{"Abs", "[", "sigTransfer", "]"}], "]"}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sh", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sx", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "/", 
        SuperscriptBox["sigTransferAbs", "2"]}], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8366130065522327`*^9, 3.836613673173481*^9}, {
   3.83661481958047*^9, 3.836614873549387*^9}, {3.836615239531361*^9, 
   3.8366152889123163`*^9}, {3.836615556860571*^9, 3.8366155592289248`*^9}, {
   3.8366158672709713`*^9, 3.83661587036897*^9}, {3.8366162303465233`*^9, 
   3.836616322824772*^9}, {3.836616424344256*^9, 3.8366164789951973`*^9}, {
   3.836616510923563*^9, 3.836616530265674*^9}, 3.836851636200042*^9, {
   3.836851779011145*^9, 3.836851791333149*^9}, {3.8368518559221077`*^9, 
   3.83685186062533*^9}, {3.8368524125034122`*^9, 3.836852415816183*^9}, {
   3.836855798256124*^9, 3.83685590928542*^9}, {3.836855999156945*^9, 
   3.836856014567819*^9}, {3.836856833492722*^9, 3.836856834556452*^9}, {
   3.836857018473957*^9, 3.8368570463544292`*^9}, {3.836857175552248*^9, 
   3.8368571796712313`*^9}, {3.8368573857432747`*^9, 3.83685738672364*^9}, 
   3.836872778795781*^9, {3.837557704840966*^9, 3.837557705652945*^9}, {
   3.837557753381673*^9, 3.837557771499218*^9}, {3.837824989952128*^9, 
   3.837824992992565*^9}, {3.837825206363296*^9, 3.8378252336269608`*^9}, {
   3.8378253490015783`*^9, 3.8378253973440742`*^9}, {3.837825718333025*^9, 
   3.837825803029107*^9}, {3.8378259075888567`*^9, 3.83782591373167*^9}, {
   3.837825948667377*^9, 3.8378259492902803`*^9}, {3.8378260538591423`*^9, 
   3.837826099673765*^9}, {3.8380644710411777`*^9, 3.838064514639727*^9}, {
   3.83806460584437*^9, 3.838064609596458*^9}, {3.8381541956712837`*^9, 
   3.838154208745275*^9}, {3.8393698894349823`*^9, 3.839369898600535*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"474bcc37-a9a4-474e-993f-fb10ea120e2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"signal", " ", "transfer", " ", 
    RowBox[{"function", " ", "--"}], " ", "demonstration", " ", "of", " ", 
    "factor", " ", "of", " ", "two"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"T", ".", 
          RowBox[{"(", GridBox[{
             {"1"},
             {"1"}
            }], ")"}]}], ")"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Rho]RP", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Rho]BAE", "\[Rule]", "0"}], ",", 
        RowBox[{"Rpd", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Gamma]a", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Gamma]btot", "\[Rule]", "\[Gamma]R"}], ",", 
        RowBox[{"\[Gamma]c", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", 
         RowBox[{"-", "\[Alpha]OG"}]}], ",", 
        RowBox[{"\[Phi]", "\[Rule]", 
         FractionBox["\[Pi]", "2"]}]}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"T", ".", 
         RowBox[{"ConjugateTranspose", "[", "T", "]"}]}], ")"}], "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Rho]RP", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Rho]BAE", "\[Rule]", "0"}], ",", 
        RowBox[{"Rpd", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Gamma]a", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Gamma]btot", "\[Rule]", "\[Gamma]R"}], ",", 
        RowBox[{"\[Gamma]c", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", 
         RowBox[{"-", "\[Alpha]OG"}]}], ",", 
        RowBox[{"\[Phi]", "\[Rule]", 
         FractionBox["\[Pi]", "2"]}]}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<sig. transfer fn.: \>\"", ",", 
     RowBox[{"Simplify", "[", 
      RowBox[{"ComplexExpand", "[", 
       SuperscriptBox[
        RowBox[{"Abs", "[", "%%", "]"}], "2"], "]"}], "]"}], ",", 
     "\"\< vs \>\"", ",", " ", "%"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.836852422583626*^9, 3.836852446092558*^9}, {
   3.836852608926764*^9, 3.836852612853466*^9}, {3.836852670946411*^9, 
   3.836852695906394*^9}, {3.836853583920683*^9, 3.836853700033813*^9}, 
   3.836853795651004*^9, 3.836854294221211*^9, {3.8368556314624023`*^9, 
   3.836855791827155*^9}, {3.8368560406605167`*^9, 3.836856107995846*^9}, {
   3.836856275043109*^9, 3.836856347877851*^9}, {3.836856397181004*^9, 
   3.836856481102168*^9}, {3.836857061152836*^9, 3.836857066045846*^9}, {
   3.836961728026432*^9, 3.836961741177249*^9}, {3.8378254684397*^9, 
   3.837825476391045*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"30f0d068-9672-4682-bcd1-c84a629aa724"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"R", ".", "P", ".", " ", "turned"}], " ", "off"}], ",", " ", 
    RowBox[{"but", " ", 
     RowBox[{"lossy", ":", "\[IndentingNewLine]", 
      RowBox[{
      "does", " ", "it", " ", "reduce", " ", "to", " ", "lossy", " ", 
       RowBox[{
        RowBox[{"sWLC", "?", " ", "yes"}], "!"}]}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sh", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Rho]RP", "\[Rule]", "0"}], ",", 
          RowBox[{"\[Rho]BAE", "\[Rule]", "0"}], ",", 
          RowBox[{"\[Beta]", "\[Rule]", 
           RowBox[{"-", "\[Alpha]OG"}]}], ",", 
          RowBox[{"\[Phi]", "\[Rule]", 
           FractionBox["\[Pi]", "2"]}]}], "}"}]}], "/.", "ConjugateFlipI"}], 
      ",", 
      RowBox[{"TimeConstraint", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}]}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"comparing", " ", "to", " ", 
     SuperscriptBox[
      RowBox[{"(", "ASDShsWLC", ")"}], "2"], " ", "from", " ", 
     RowBox[{"sWLC", ".", "nb"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PSDShsWLC", "=", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Gamma]c", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "4", 
        SuperscriptBox["\[Alpha]OG", "2"], 
        SuperscriptBox["\[Omega]s", "2"], "\[Gamma]R"}]], 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Gamma]btot", "-", 
              RowBox[{"2", "\[Gamma]R"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "-", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}], 
            SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["\[Omega]s", "2"], "\[Gamma]c"}], "-", 
           RowBox[{
            SuperscriptBox["\[Chi]", "2"], "\[Gamma]a"}]}], ")"}], "2"], 
        "\[IndentingNewLine]", "+", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Chi]", "2"], "-", 
            SuperscriptBox["\[Omega]s", "2"], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Gamma]btot", "-", 
               RowBox[{"2", "\[Gamma]R"}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}]}], "-", 
            RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], 
        "\[IndentingNewLine]", "+", 
        RowBox[{"4", "\[Gamma]R", " ", "\[Gamma]a", " ", 
         SuperscriptBox["\[Omega]s", "2"], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
        "\[IndentingNewLine]", "+", 
        RowBox[{"4", "\[Gamma]R", " ", "\[Gamma]b", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]a", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
        "\[IndentingNewLine]", "+", 
        RowBox[{"4", "\[Gamma]R", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]a", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
        "\[IndentingNewLine]", "+", 
        RowBox[{
         FractionBox["Rpd", 
          RowBox[{"1", "-", "Rpd"}]], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Gamma]btot", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "-", 
                 SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}], 
               SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
              RowBox[{
               SuperscriptBox["\[Omega]s", "2"], "\[Gamma]c"}], "-", 
              RowBox[{
               SuperscriptBox["\[Chi]", "2"], "\[Gamma]a"}]}], ")"}], "2"], 
           "\[IndentingNewLine]", "+", 
           RowBox[{
            SuperscriptBox["\[CapitalOmega]", "2"], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Chi]", "2"], "-", 
               SuperscriptBox["\[Omega]s", "2"], "-", 
               RowBox[{"\[Gamma]btot", 
                RowBox[{"(", 
                 RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}]}], "-", 
               RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "+", 
               SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}]}], 
          ")"}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"PSDShsWLC", "/.", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]b", "\[Rule]", 
        RowBox[{"\[Gamma]btot", "-", "\[Gamma]R"}]}], "}"}]}], ")"}], "//", 
    "FullSimplify"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Rad. pressure off, Sh reduces to lossy sWLC: \>\"", ",", 
     RowBox[{
      RowBox[{"ComplexExpand", "[", 
       RowBox[{"%%%", "\[Equal]", "%"}], "]"}], "//", "Simplify"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.836856675279872*^9, 3.836856731611006*^9}, {
   3.836856799991077*^9, 3.83685680084929*^9}, 3.836857071679143*^9, {
   3.836857932631248*^9, 3.836857933003357*^9}, {3.836858447635504*^9, 
   3.836858482127761*^9}, {3.8368587838765163`*^9, 3.8368587860779257`*^9}, {
   3.83685884536979*^9, 3.836858870011915*^9}, {3.837825480639597*^9, 
   3.837825482855657*^9}, {3.837825588575382*^9, 3.837825613121128*^9}, 
   3.837826028486014*^9, {3.837826226963785*^9, 3.837826290449534*^9}, {
   3.838060267863718*^9, 3.83806026873077*^9}, {3.838083794458498*^9, 
   3.8380838297902393`*^9}, {3.838153691414104*^9, 3.838153701096429*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"6fe9231a-e423-450e-8ffd-ff95966f8692"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "want", " ", "to", " ", "show", " ", "that", " ", "Sx", " ", "reduces", 
     " ", "to", " ", "lossy", " ", "sWLC", " ", 
     RowBox[{"(", 
      RowBox[{
      "in", " ", "order", " ", "to", " ", "inspect", " ", "the", " ", 
       "denom"}], ")"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"simplfying", " ", "assuming", " ", "\[Phi]"}], "=", 
     FractionBox["\[Pi]", "2"]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "have", " ", "to", " ", "start", " ", "further", " ", "back", " ", 
       "because", " ", "simplifying", " ", "Sx", " ", "takes", " ", "too", 
       " ", 
       RowBox[{"long", "\[IndentingNewLine]", "--"}]}], ">", " ", 
      RowBox[{
       RowBox[{"i", ".", "e", ".", " ", "applying"}], " ", 
       RowBox[{"Sx", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "/.", 
     RowBox[{"ConjugateRepl", " ", "just", " ", "hangs"}]}], ",", " ", 
    RowBox[{"so", " ", "use", " ", "ConjugateFlipI"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"all", " ", "variables", " ", "are", " ", "real"}], ",", " ", 
    RowBox[{"so", " ", 
     RowBox[{"tell", " ", ".", "nb"}], " ", "to", " ", "expand", " ", 
     "conjugates", " ", "just", " ", "based", " ", "on", " ", 
     "\[ImaginaryI]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Sx022", "=", 
     RowBox[{"Together", "[", 
      RowBox[{
       RowBox[{"Sx", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "/.", 
       RowBox[{"\[Phi]", "\[Rule]", 
        FractionBox["\[Pi]", "2"]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"Sx022num", "=", 
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Numerator", "[", "Sx022", "]"}], "//", "Expand"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Rho]RP", ",", "\[Rho]BAE"}], "}"}], ",", "FullSimplify"}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Sx022denom", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Denominator", "[", "Sx022", "]"}], "//", "Expand"}], "//", 
     "FullSimplify"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"check", " ", "that", " ", "manipulation", " ", 
     RowBox[{"hasn", "'"}], "t", " ", "changed", " ", "anything"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sx022", "\[Equal]", 
     FractionBox["Sx022num", "Sx022denom"]}], "//", "Simplify"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "showing", " ", "that", " ", "poles", " ", "are", " ", "preserved"}], 
     ",", " ", 
     RowBox[{
      RowBox[{"denom", " ", "is", " ", "similar", " ", 
       RowBox[{"enough", "\[IndentingNewLine]", "--"}]}], ">", " ", 
      RowBox[{
       RowBox[{
       "therefore", " ", "stability", " ", "is", " ", "the", " ", "same", " ",
         "and", " ", "pole"}], "-", 
       RowBox[{
       "defined", " ", "threshold", " ", "values", " ", "are", " ", "the", 
        " ", "same"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"prevDenom", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Gamma]a", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[Gamma]btot"}], " ", "\[Gamma]c"}], "+", 
             SuperscriptBox["\[Chi]", "2"]}], ")"}], "2"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Gamma]btot", "2"], "+", 
             SuperscriptBox["\[Gamma]c", "2"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Chi]", "2"]}]}], ")"}], " ", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
          SuperscriptBox["\[CapitalOmega]", "4"]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]a", " ", "\[Gamma]c", " ", 
           SuperscriptBox["\[Chi]", "2"]}], "-", 
          RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Gamma]c", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[CapitalOmega]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Gamma]c", "2"], "+", 
             SuperscriptBox["\[Chi]", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
        
        SuperscriptBox["\[Omega]s", "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Gamma]c", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
        SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Sx022denom", "\[Equal]", 
      RowBox[{
       SuperscriptBox["\[CapitalOmega]", "4"], 
       SuperscriptBox["prevDenom", "2"]}]}], ")"}], "//", "Simplify"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "completeness"}], ",", " ", 
     RowBox[{
     "should", " ", "show", " ", "this", " ", "for", " ", "\[Phi]", " ", 
      "free", " ", "but", " ", "this", " ", "will", " ", "be", " ", "tedious",
       " ", "and", " ", "should", " ", "follow", " ", "anyway"}]}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8378265847201157`*^9, 3.837826590844656*^9}, {
   3.837826713369871*^9, 3.8378267825407877`*^9}, {3.837826863787055*^9, 
   3.8378268743148623`*^9}, {3.837826917907838*^9, 3.8378269180505247`*^9}, {
   3.8378283445097446`*^9, 3.837828386185169*^9}, 3.837828423918324*^9, {
   3.837828903778914*^9, 3.837828917361083*^9}, {3.8380602101502123`*^9, 
   3.838060217489935*^9}, {3.838060254252411*^9, 3.838060263696835*^9}, {
   3.838061731916934*^9, 3.838061742795073*^9}, {3.838061787947693*^9, 
   3.838061888382546*^9}, {3.8380625449467487`*^9, 3.838062545557001*^9}, {
   3.8380626816918173`*^9, 3.83806271853588*^9}, {3.838063566609524*^9, 
   3.838063616962339*^9}, {3.8380636995548153`*^9, 3.8380637987869463`*^9}, {
   3.838064452145399*^9, 3.838064456211447*^9}, {3.838064716022518*^9, 
   3.838064741124178*^9}, {3.838153728177526*^9, 3.8381537427437773`*^9}, {
   3.838155410017104*^9, 3.838155423752068*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"60642c49-28eb-4952-a9b6-24849b5cb4d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "signal", " ", "transfer", " ", "function", " ", "is", " ", "indep", " ", 
     "of", " ", "RP", " ", "and", " ", "BAE", " ", "and", " ", "its", " ", 
     "denominator", " ", "is", " ", "exactly", " ", "that", " ", "from", " ", 
     "before"}], ",", "\[IndentingNewLine]", 
    RowBox[{"NB", ":", " ", 
     RowBox[{"this", " ", "is", " ", "for", " ", "the", " ", "h", " ", 
      RowBox[{"(", 
       RowBox[{"not", " ", 
        OverscriptBox["h", "\[RightVector]"]}], ")"}], " ", "defintion"}]}], 
    ",", " ", 
    RowBox[{
     RowBox[{"exactly", " ", "what", " ", "the", " ", 
      OverscriptBox["h", "\[RightVector]"], " ", "definition", " ", "would", 
      " ", "be", " ", "is", " ", 
      RowBox[{"unclear", "\[IndentingNewLine]", "--"}]}], ">", " ", 
     RowBox[{
     "the", " ", "key", " ", "difference", " ", "between", " ", "noise", " ", 
      "and", " ", "signal", " ", "is", " ", "that", " ", "for", " ", "the", 
      " ", "noise", " ", "the", " ", "inputs", " ", "are", " ", 
      "uncorrelated", " ", "quadratures", " ", "but", " ", "for", " ", "the", 
      " ", "signal", " ", "the", " ", "input", " ", "is", " ", "correlated", 
      " ", 
      OverscriptBox["h", "\[RightVector]"]}]}], ",", " ", 
    RowBox[{"we", " ", "could", " ", "do", " ", "everything", " ", "wrt", " ", 
     SubscriptBox["X", 
      RowBox[{"1", ",", "h"}]], " ", "instead", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"where", " ", 
        SubscriptBox["X", 
         RowBox[{"2", ",", "h"}]]}], "=", "0"}], ")"}], " ", "which", " ", 
     "would", " ", "yield", " ", "the", " ", "same", " ", "result", " ", "up",
      " ", "to", " ", "factors", " ", "of", " ", "2"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Phi]", "=", 
       FractionBox["\[Pi]", "2"]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"T0", "=", 
      RowBox[{"Together", "[", 
       RowBox[{
        SuperscriptBox["sigTransferAbs", "2"], "//", "Simplify"}], "]"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Denominator", "[", "T0", "]"}], "//", "FullSimplify"}], 
   "\[IndentingNewLine]", 
   RowBox[{"%", "\[Equal]", "prevDenom"}]}]}]], "Input",
 CellChangeTimes->{{3.838062799770999*^9, 3.838062953814632*^9}, {
  3.8380630711102943`*^9, 3.838063181890987*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"ee811092-1183-4cbd-819b-c4d0c7953167"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
      SuperscriptBox["\[Beta]", "2"], " ", "\[Gamma]R", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Gamma]btot", "2"], " ", 
       SuperscriptBox["\[Gamma]c", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Gamma]a", "2"], " ", "\[Gamma]btot", " ", 
       "\[Gamma]c", " ", 
       SuperscriptBox["\[Chi]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Chi]", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Gamma]btot", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]btot", "2"], " ", 
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
      RowBox[{"2", " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Chi]", "4"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]btot", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      SuperscriptBox["\[CapitalOmega]", "6"], "+", 
      RowBox[{"2", " ", "\[Gamma]a", " ", "\[Gamma]btot", " ", 
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", "\[Gamma]a", " ", "\[Gamma]c", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "+", 
      RowBox[{"2", " ", "\[Gamma]a", " ", "\[Gamma]btot", " ", 
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[CapitalOmega]", "4"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[Omega]s", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}], ")"}]}]], "Input",
 CellChangeTimes->{3.839448926777581*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"1a62276a-51d9-4e5e-a02e-94f74778753a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"RUN", " ", "THIS", " ", "CELL", " ", "FOR", " ", "PLOTS"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "simplifying", " ", "equation", " ", "for", " ", "investigating", " ", 
      "BAE", " ", "for", " ", "\[Phi]"}], "\[NotEqual]", 
     RowBox[{"\[PlusMinus]", 
      FractionBox["\[Pi]", "2"]}]}], ",", " ", 
    RowBox[{"first", ":", " ", 
     RowBox[{"signal", " ", "transfer", " ", "function"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SimplifyConstrained", "=", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"TimeConstraint", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.1", ",", "1"}], "}"}]}]}], "]"}], "&"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigT", "=", 
       RowBox[{"Together", "[", "sigTransferAbs", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numerT", "=", 
       RowBox[{"Numerator", "[", "sigT", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"denomT", "=", 
       RowBox[{"Denominator", "[", "sigT", "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"sanity", " ", "check", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
         FractionBox["numerT", "denomT"], "==", 
         RowBox[{"Together", "[", "sigTransferAbs", "]"}]}], "]"}]}], ";", 
      RowBox[{"--", 
       RowBox[{">", "True"}]}]}], "*)"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "notice", " ", "that", " ", "signal", " ", "transfer", " ", "function", 
      " ", "only", " ", "changes", " ", "if", " ", "\[Phi]"}], "\[NotEqual]", 
     
     RowBox[{
      RowBox[{"\[PlusMinus]", 
       FractionBox["\[Pi]", "2"]}], " ", "and", " ", 
      SubscriptBox["\[Rho]", "BAE"]}], "\[NotEqual]", "0"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"numerTsqr", "=", 
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{"numerT", "^", "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]", ",", "\[Rho]RP", ",", "\[Rho]BAE"}], "}"}], ",", 
      "SimplifyConstrained"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"denomTsqr", "=", 
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{"denomT", "^", "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]", ",", "\[Rho]RP", ",", "\[Rho]BAE"}], "}"}], ",", 
      "SimplifyConstrained"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigTsqrSimpl", "=", 
     FractionBox["numerTsqr", "denomTsqr"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"sanity", " ", "check", "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", 
       RowBox[{"numerTsqr", "\[Equal]", 
        RowBox[{"Numerator", "[", 
         RowBox[{"Together", "[", 
          RowBox[{"sigTransferAbs", "^", "2"}], "]"}], "]"}]}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{"denomTsqr", "\[Equal]", 
         RowBox[{"Denominator", "[", 
          RowBox[{"Together", "[", 
           RowBox[{"sigTransferAbs", "^", "2"}], "]"}], "]"}]}], "]"}], 
       "\[IndentingNewLine]", "--"}]}], ">", " ", 
     RowBox[{"True", " ", "True"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Sx22", "===", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{
         RowBox[{"(", "...", ")"}], "+", 
         RowBox[{"[", "complicated", "]"}]}], 
        RowBox[{
         RowBox[{"(", "\[Ellipsis]", ")"}], "+", 
         RowBox[{
          RowBox[{"(", "\[Ellipsis]", ")"}], "\[Rho]RP", " ", "\[Rho]BAE", 
          " ", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], "^", "2"}]}], "+", 
         RowBox[{
          RowBox[{"(", "\[Ellipsis]", ")"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Rho]RP", " ", "\[Rho]BAE", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]", "]"}], "^", "2"}]}], ")"}], "^", 
           "2"}]}]}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sigTransferAbs", "^", "2"}], "===", 
      FractionBox[
       RowBox[{
        RowBox[{"(", "\[Ellipsis]", ")"}], "+", 
        RowBox[{
         RowBox[{"(", "\[Ellipsis]", ")"}], "\[Rho]RP", " ", "\[Rho]BAE", " ", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"2", "\[Phi]"}], "]"}], "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"(", "\[Ellipsis]", ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Rho]RP", " ", "\[Rho]BAE", " ", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"2", "\[Phi]"}], "]"}], "^", "2"}]}], ")"}], "^", 
          "2"}]}]}], 
       RowBox[{
        RowBox[{"(", "\[Ellipsis]", ")"}], "+", 
        RowBox[{
         RowBox[{"(", "\[Ellipsis]", ")"}], "\[Rho]RP", " ", "\[Rho]BAE", " ", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Phi]", "]"}], "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"(", "\[Ellipsis]", ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Rho]RP", " ", "\[Rho]BAE", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "^", "2"}]}], ")"}], "^", 
          "2"}]}]}]]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"investigating", " ", "BAE", " ", "for", " ", "\[Phi]"}], 
      "\[NotEqual]", 
      RowBox[{"\[PlusMinus]", 
       FractionBox["\[Pi]", "2"]}]}], ",", " ", 
     RowBox[{
      RowBox[{"second", ":", " ", 
       RowBox[{"noise", " ", "transfer", " ", "function"}], ":", 
       "\[IndentingNewLine]", 
       RowBox[{"let", " ", "\[CapitalDelta]Sx"}]}], "=", 
      RowBox[{
       RowBox[{"Sx22", "-", 
        RowBox[{"1", " ", 
         RowBox[{"s", ".", "t", ".", " ", "Sx11"}]}]}], " ", "=", " ", 
       RowBox[{
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"\[CapitalDelta]Sx", "\[IndentingNewLine]", "--"}]}], ">", 
        " ", 
        RowBox[{
        "first", " ", "problem", " ", "is", " ", "dealing", " ", "with", " ", 
         "Conjugates", " ", "in", " ", "Sx22"}]}]}]}], ",", " ", 
     RowBox[{
     "which", " ", "is", " ", "now", " ", "far", " ", "faster", " ", "due", 
      " ", "to", " ", "ConjugateFlipI", " ", "working", " ", "on", " ", "Sx", 
      " ", "for", " ", "less", " ", "than", " ", "5", "%", " ", "of", " ", 
      "a", " ", "second"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"noise\[CapitalDelta]Sx", "=", 
        RowBox[{"Together", "[", 
         RowBox[{
          RowBox[{"Sx", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", "1"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"SimplifyConstrained", "=", 
        RowBox[{
         RowBox[{"FullSimplify", "[", 
          RowBox[{"#", ",", 
           RowBox[{"TimeConstraint", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.1", ",", "1"}], "}"}]}]}], "]"}], "&"}]}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numer\[CapitalDelta]Sx", "=", 
       RowBox[{"Collect", "[", 
        RowBox[{
         RowBox[{"Numerator", "[", "noise\[CapitalDelta]Sx", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Phi]", ",", "\[Rho]RP", ",", "\[Rho]BAE"}], "}"}], ",", 
         "SimplifyConstrained"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"denom\[CapitalDelta]Sx", "=", 
       RowBox[{"Collect", "[", 
        RowBox[{
         RowBox[{"Denominator", "[", "noise\[CapitalDelta]Sx", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Phi]", ",", "\[Rho]RP", ",", "\[Rho]BAE"}], "}"}], ",", 
         "SimplifyConstrained"}], "]"}]}], ";"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "want", " ", "to", " ", "show", " ", "that", " ", "Sx", " ", "is", " ", 
     "demonstrably", " ", "real"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"common", " ", "factor", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"4", "\[ImaginaryI]", " ", "\[Phi]"}], "]"}], " ", "accrued", 
      " ", "in", " ", "numerator", " ", "and", " ", "denominator"}], ",", " ", 
     RowBox[{
      RowBox[{"cancel", " ", 
       RowBox[{"explictly", " ", "--"}]}], ">", " ", 
      RowBox[{"formula", " ", "is", " ", "demonstrably", " ", "real"}]}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"commonFactor0", "=", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "4"}], "\[ImaginaryI]", " ", "\[Phi]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"numer\[CapitalDelta]SxSimpl", "=", 
    RowBox[{
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"commonFactor0", " ", "numer\[CapitalDelta]Sx"}], ")"}], "//",
         "ExpToTrig"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "\[Rho]RP", ",", "\[Rho]BAE"}], "}"}], ",", 
       "SimplifyConstrained"}], "]"}], "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Phi]"}]]}], ")"}]}], 
       ")"}], "\[Rule]", 
      RowBox[{"2", "\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "\[Phi]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"denom\[CapitalDelta]SxSimpl", "=", 
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"commonFactor0", " ", "denom\[CapitalDelta]Sx"}], ")"}], "//",
        "ExpToTrig"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]", ",", "\[Rho]RP", ",", "\[Rho]BAE"}], "}"}], ",", 
      "SimplifyConstrained"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<same denom. as signal transfer fn?: \>\"", ",", 
     RowBox[{"denomTsqr", "==", "denom\[CapitalDelta]SxSimpl"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SxSimpl", "=", 
     RowBox[{"1", "+", 
      FractionBox["numer\[CapitalDelta]SxSimpl", 
       "denom\[CapitalDelta]SxSimpl"]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Sh", "=", 
     RowBox[{
      FractionBox["SxSimpl", "sigTsqrSimpl"], "=", 
      FractionBox[
       RowBox[{"1", "+", 
        FractionBox["numer\[CapitalDelta]SxSimpl", 
         "denom\[CapitalDelta]SxSimpl"]}], 
       FractionBox["numerTsqr", "denomTsqr"]]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ShSimpl", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
        "denom\[CapitalDelta]SxSimpl", "+", "numer\[CapitalDelta]SxSimpl"}], 
        "numerTsqr"], ",", 
       RowBox[{"TimeConstraint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "1"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"physical", " ", "constants"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"3.", " ", 
      SuperscriptBox["10", "8"]}]}], 
    RowBox[{"(*", 
     SuperscriptBox["ms", 
      RowBox[{"-", "1"}]], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[HBar]", "=", 
     RowBox[{"1.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "34"}]]}]}], 
    RowBox[{"(*", "Js", "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"setDerivedParams1", "[", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Tau]RoundTripArm", "=", 
       FractionBox[
        RowBox[{"2", " ", "Larm"}], "c"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Tau]RoundTripSRC", "=", 
       FractionBox[
        RowBox[{"2", "Lsrc"}], "c"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]R", "=", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "1"}], 
         RowBox[{"2", " ", "\[Tau]RoundTripSRC"}]], 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "Tsrm"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"an", " ", "approximation", " ", "when", " ", "\[Omega]s", 
         RowBox[{"<<", "\[Omega]FSR"}]}], "=", 
        RowBox[{"1", "/", "\[Tau]RoundTripArm"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"\[Omega]s", "=", 
       RowBox[{"c", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["Titm", 
           RowBox[{"4", " ", "Lsrc", " ", "Larm"}]], ")"}], 
         RowBox[{"1", "/", "2"}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "using", " ", "formula", " ", "for", " ", "G", " ", "from", " ", 
        "Korobko"}], "*)"}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"rescaling", " ", "of", " ", "\[Alpha]", " ", "by", " ", 
         FractionBox["1", 
          RowBox[{
           SuperscriptBox["2", 
            RowBox[{"1", "/", "2"}]], "\[HBar]"}]], " ", "seems", " ", "to", 
         " ", "be", " ", "in", " ", 
         RowBox[{"Li", "?"}]}], ",", " ", 
        RowBox[{
         RowBox[{"chosen", " ", "\[Beta]", " ", 
          RowBox[{"s", ".", "t", ".", " ", "turning"}], " ", 
          RowBox[{"R", ".", "P", ".", " ", "off"}], " ", "should", " ", 
          "match", " ", "\[Beta]"}], "=", 
         FractionBox[
          RowBox[{"\[Alpha]GW", " ", "Larm"}], 
          RowBox[{
           SuperscriptBox["2", 
            RowBox[{"1", "/", "2"}]], "\[HBar]"}]]}], ",", " ", 
        RowBox[{
         RowBox[{"which", " ", "is", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"Pcirc", " ", "Larm", " ", "\[Omega]0"}], 
             RowBox[{"\[HBar]", " ", "c"}]], ")"}], 
           RowBox[{"1", "/", "2"}]], " ", "if", " ", "\[Alpha]GW", " ", 
          "from", " ", "Li", " ", "is", " ", 
          RowBox[{"used", " ", "--"}]}], ">", " ", 
         RowBox[{"factor", " ", "of", " ", "two", " ", 
          RowBox[{"missing", "?", " ", "this"}], " ", "is", " ", 
          "unresolved"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"but", " ", "just", " ", "use", " ", "\[Beta]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"-", "G"}], " ", 
                RowBox[{"s", ".", "t", ".", " ", "ahatdot"}]}], "=."}], 
              ".."}], "+", 
             RowBox[{"iGh", " ", "or"}]}], " ", "..."}], "-", "i\[Beta]h"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"\[Rho]RP", "=", 
          RowBox[{"\[Rho]BAE", "=", 
           RowBox[{
            FractionBox[
             SuperscriptBox["\[Alpha]GW", "2"], 
             RowBox[{
              SuperscriptBox["2", 
               RowBox[{"1", "/", "2"}]], "\[HBar]", " ", "\[Mu]"}]], "=", 
            FractionBox[
             RowBox[{
              SuperscriptBox["2", 
               RowBox[{"1", "/", "2"}]], "\[HBar]", " ", 
              SuperscriptBox["\[Beta]", "2"]}], 
             RowBox[{
              SuperscriptBox["Larm", "2"], "\[Mu]"}]]}]}]}], ";", " ", 
         RowBox[{
          RowBox[{"but", " ", "|", "\[Alpha]", "|"}], "=", 
          RowBox[{"|", 
           RowBox[{"\[Alpha]GW", " ", "Larm"}], "|"}]}]}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{
         "changing", " ", "now", " ", "to", " ", "use", " ", "Li", " ", 
          "formula", " ", "for", " ", "comparison", " ", "to", " ", 
          "sWLC"}]}], ",", " ", 
        RowBox[{"why", " ", "do", " ", "these", " ", "two", " ", 
         RowBox[{"disagree", "?", " ", "I"}], " ", "do", " ", "not", " ", 
         RowBox[{"know", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Beta]", "=", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Pcirc", " ", "Larm", " ", "\[Omega]0"}], 
          RowBox[{"\[HBar]", " ", "c"}]], ")"}], 
        RowBox[{"1", "/", "2"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Mu]", "=", 
       FractionBox["M", "4"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       FractionBox[
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"1", "/", "2"}]], "\[HBar]", " ", 
         SuperscriptBox["\[Beta]", "2"]}], 
        RowBox[{
         SuperscriptBox["Larm", "2"], "\[Mu]"}]], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]", "=", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          SuperscriptBox["2", 
           RowBox[{"1", "/", "2"}]], "\[HBar]", " ", "\[Mu]"}]], 
        FractionBox[
         RowBox[{"2", 
          SuperscriptBox["\[HBar]", "2"]}], 
         SuperscriptBox["Larm", "2"]], 
        SuperscriptBox["\[Beta]", "2"]}]}], ";"}], ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"setConfigParamsCustom", "[", 
     RowBox[{
     "\[Lambda]00_", ",", "Larm0_", ",", "Lsrc0_", ",", "Pcirc0_", ",", 
      "Titm0_", ",", "Tsrm0_", ",", "M0_", ",", 
      RowBox[{"paramSetName0_:", "None"}], ",", 
      RowBox[{"\[Gamma]R0_:", "None"}], ",", 
      RowBox[{"\[Omega]s0_:", "None"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", 
       RowBox[{
       "paramSetName", ",", "\[Lambda]0", ",", "Larm", ",", "Lsrc", ",", 
        "Pcirc", ",", "Titm", ",", "Tsrm", ",", "M", ",", 
        "\[Tau]RoundTripArm", ",", "\[Tau]RoundTripSRC", ",", "\[Gamma]R", 
        ",", "\[Omega]s", ",", "\[Beta]", ",", "\[Mu]", ",", "\[Rho]"}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"manually", " ", "set", " ", "parameters"}], ",", " ", 
        RowBox[{"all", " ", "in", " ", "base", " ", "SI", " ", "units"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"paramSetName", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"paramSetName0", "===", "None"}], ",", 
         "\"\<Custom parameter set\>\"", ",", "paramSetName0"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]0", "=", "\[Lambda]00"}], 
      RowBox[{"(*", "m", "*)"}], ";", 
      RowBox[{"\[Omega]0", "=", 
       RowBox[{"2", "\[Pi]", " ", 
        RowBox[{"c", "/", "\[Lambda]0"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Larm", "=", "Larm0"}], 
      RowBox[{"(*", "m", "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "can", " ", "be", " ", "omitted", " ", "if", " ", "\[Gamma]R", " ", 
        "and", " ", "Tsrm", " ", "are", " ", "specified"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Lsrc", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Lsrc0", "===", "None"}], ",", "Lsrc", " ", ",", "Lsrc0"}], 
        RowBox[{"(*", "m", "*)"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Pcirc", "=", "Pcirc0"}], 
      RowBox[{"(*", "W", "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "can", " ", "be", " ", "omitted", " ", "if", " ", "\[Omega]s", " ", 
        "is", " ", "specified"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Titm", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Titm0", "===", "None"}], ",", "Titm", ",", "Titm0"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Tsrm", "=", "Tsrm0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"M", "=", "M0"}], 
      RowBox[{"(*", "kg", "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"setDerivedParams1", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"if", " ", "specified"}], ",", " ", 
        RowBox[{
        "then", " ", "override", " ", "\[Gamma]R", " ", "and", " ", 
         "\[Omega]s"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"\[Gamma]R0", "===", "None"}], "]"}], ",", 
        RowBox[{"\[Gamma]R", "=", "\[Gamma]R0"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"\[Omega]s0", "===", "None"}], "]"}], ",", 
        RowBox[{"\[Omega]s", "=", "\[Omega]s0"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"if", " ", "unspecified"}], ",", " ", 
        RowBox[{
        "then", " ", "use", " ", "\[Gamma]R", " ", "and", " ", "Tsrm", " ", 
         "to", " ", "find", " ", "\[Tau]RoundTripSRC"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Lsrc0", "===", "None"}], ",", 
        RowBox[{
         RowBox[{"\[Tau]RoundTripSRC", "=", 
          RowBox[{
           FractionBox[
            RowBox[{"-", "1"}], 
            RowBox[{"2", " ", "\[Gamma]R"}]], 
           RowBox[{"Log", "[", 
            RowBox[{"1", "-", "Tsrm"}], "]"}]}]}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<inferred Lsrc (in m) = \>\"", ",", 
             RowBox[{"c", " ", 
              RowBox[{"\[Tau]RoundTripSRC", "/", "2"}]}], ",", 
             "\"\<\\n\>\""}], "]"}], ";"}], "*)"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{
         "changing", " ", "now", " ", "to", " ", "use", " ", "Li", " ", 
          "formula", " ", "for", " ", "comparison", " ", "to", " ", 
          "sWLC"}]}], ",", " ", 
        RowBox[{"why", " ", "do", " ", "these", " ", "two", " ", 
         RowBox[{"disagree", "?", " ", "I"}], " ", "do", " ", "not", " ", 
         RowBox[{"know", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Beta]", "=", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Pcirc", " ", "Larm", " ", "\[Omega]0"}], 
          RowBox[{"\[HBar]", " ", "c"}]], ")"}], 
        RowBox[{"1", "/", "2"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Mu]", "=", 
       FractionBox["M", "4"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]", "=", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          SuperscriptBox["2", 
           RowBox[{"1", "/", "2"}]], "\[HBar]", " ", "\[Mu]"}]], 
        FractionBox[
         RowBox[{"2", 
          SuperscriptBox["\[HBar]", "2"]}], 
         SuperscriptBox["Larm", "2"]], 
        SuperscriptBox["\[Beta]", "2"]}]}], 
      RowBox[{"(*", 
       RowBox[{"=", 
        FractionBox[
         RowBox[{
          SuperscriptBox["2", 
           RowBox[{"1", "/", "2"}]], "\[HBar]", " ", 
          SuperscriptBox["\[Beta]", "2"]}], 
         RowBox[{
          SuperscriptBox["Larm", "2"], "\[Mu]"}]]}], "*)"}], ";"}], ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "different", " ", "interferometer", " ", "parameter", " ", "sets"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\[Lambda]0", ",", "Larm", ",", "Lsrc", ",", "Pcirc", ",", "Titm", ",", 
     "Tsrm", ",", "M", ",", " ", 
     RowBox[{"optional", ":", " ", "paramSetName"}], ",", "\[Gamma]R", ",", 
     "\[Omega]s"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"parameters", " ", "of", " ", "Advanced", " ", "LIGO"}], ",", 
     " ", 
     RowBox[{"from", " ", "Adya", " ", "et", " ", "al"}], ",", " ", 
     RowBox[{
      RowBox[{"2020", " ", "and", " ", 
       RowBox[{"https", ":"}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dcc", ".", "ligo", ".", "org"}], "/", "public"}], "/", 
           "0000"}], "/", "T0900043"}], "/", "011"}], "/", "LIGO"}], "-", 
       "T0900043", "-", 
       RowBox[{"11.", "pdf"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"setConfigParamsALIGO", "[", "]"}], ":=", 
    RowBox[{"setConfigParamsCustom", "[", 
     RowBox[{
      RowBox[{"1064.", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "9"}]]}], 
      RowBox[{"(*", "m", "*)"}], ",", 
      RowBox[{"4.", " ", 
       SuperscriptBox["10", "3"]}], 
      RowBox[{"(*", "m", "*)"}], ",", "56.", 
      RowBox[{"(*", "m", "*)"}], ",", 
      RowBox[{"750.", " ", 
       SuperscriptBox["10", "3"]}], " ", 
      RowBox[{"(*", "W", "*)"}], ",", "0.014", ",", "0.325", ",", "40.", 
      RowBox[{"(*", "kg", "*)"}], ",", "\"\<Advanced LIGO\>\""}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"parameters", " ", "of", " ", "LIGO", " ", "Voyager"}], ",", " ", 
     RowBox[{"from", " ", "Adhikari", " ", "et", " ", "al"}], ",", " ", 
     "2020"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"setConfigParamsVoyager", "[", "]"}], ":=", 
    RowBox[{"setConfigParamsCustom", "[", 
     RowBox[{
      RowBox[{"2.", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], 
      RowBox[{"(*", "m", "*)"}], ",", 
      RowBox[{"4.", " ", 
       SuperscriptBox["10", "3"]}], 
      RowBox[{"(*", "m", "*)"}], ",", "56.", 
      RowBox[{"(*", "m", "*)"}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "I", " ", "assume", " ", "that", " ", "the", " ", "upgrade", " ", 
         "is", " ", "not", " ", "changing", " ", "Lsrc"}], ",", " ", 
        RowBox[{
        "which", " ", "is", " ", "not", " ", "made", " ", "obvious", " ", 
         "anywhere"}]}], "*)"}], ",", 
      RowBox[{"3.", " ", 
       SuperscriptBox["10", "6"]}], " ", 
      RowBox[{"(*", "W", "*)"}], ",", "0.002", ",", "0.046", ",", "200.", 
      RowBox[{"(*", "kg", "*)"}], ",", "\"\<LIGO Voyager\>\""}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"parameters", " ", "of", " ", "NEMO"}], ",", " ", 
     RowBox[{"from", " ", "Ackley", " ", "et", " ", "al"}], ",", " ", 
     "2020"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"setConfigParamsNEMO", "[", "]"}], ":=", 
    RowBox[{"setConfigParamsCustom", "[", 
     RowBox[{
      RowBox[{"2.", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], 
      RowBox[{"(*", "m", "*)"}], ",", 
      RowBox[{"4.", " ", 
       SuperscriptBox["10", "3"]}], 
      RowBox[{"(*", "m", "*)"}], ",", "354.", 
      RowBox[{"(*", "m", "*)"}], ",", " ", 
      RowBox[{"4.5", " ", 
       SuperscriptBox["10", "6"]}], 
      RowBox[{"(*", "W", "*)"}], ",", "0.014", ",", "0.048", ",", "74.1", 
      RowBox[{"(*", "kg", "*)"}], ",", "\"\<NEMO\>\""}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "parameters", " ", "from", " ", "Korobko", " ", "et", " ", "al"}], ",", 
     " ", 
     RowBox[{
     "2019", ":", " ", "\"\<benchmark 3rd generation detector\>\""}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"setConfigParamsKorobko2019", "[", "]"}], ":=", 
    RowBox[{"setConfigParamsCustom", "[", 
     RowBox[{
      RowBox[{"1550.", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "9"}]]}], 
      RowBox[{"(*", "m", "*)"}], ",", 
      RowBox[{"20.", " ", 
       SuperscriptBox["10", "3"]}], 
      RowBox[{"(*", "m", "*)"}], ",", "56.", 
      RowBox[{"(*", "m", "*)"}], ",", 
      RowBox[{"4.", " ", 
       SuperscriptBox["10", "6"]}], 
      RowBox[{"(*", "W", "*)"}], ",", "0.07", ",", "0.35", ",", "200.", 
      RowBox[{"(*", "kg", "*)"}], ",", "\"\<Korobko et al, 2019\>\""}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"parameters", " ", "from", " ", "Li", " ", "et", " ", "al"}], 
     ",", " ", 
     RowBox[{"2020", " ", "-", " ", 
      RowBox[{"NB", ":", 
       RowBox[{
       "\[Omega]s", " ", "and", " ", "\[Gamma]R", " ", "are", " ", "not", " ",
         "from", " ", "LIGO", " ", 
        RowBox[{"Voyager", "!"}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"setConfigParamsLi2020", "[", 
     RowBox[{"\[Gamma]R0_:", "None"}], "]"}], ":=", 
    RowBox[{"setConfigParamsCustom", "[", 
     RowBox[{
      RowBox[{"2.", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], 
      RowBox[{"(*", "m", "*)"}], ",", 
      RowBox[{"4.", " ", 
       SuperscriptBox["10", "3"]}], 
      RowBox[{"(*", "m", "*)"}], ",", "None", ",", 
      RowBox[{"3.", " ", 
       SuperscriptBox["10", "6"]}], 
      RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", 
      RowBox[{"(*", 
       RowBox[{"assuming", " ", "LIGO", " ", 
        RowBox[{"Voyager", "'"}], "s", " ", 
        SubscriptBox["T", "SRM"], " ", "was", " ", "used", " ", "for", " ", 
        "\[Gamma]R"}], "*)"}], ",", "200.", 
      RowBox[{"(*", "kg", "*)"}], ",", "\"\<Li et al, 2020\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"\[Gamma]R0", "===", "None"}], ",", 
        RowBox[{"2", "\[Pi]", " ", "500."}], 
        RowBox[{"(*", "Hz", "*)"}], ",", "\[Gamma]R0"}], "]"}], ",", 
      RowBox[{"2", "\[Pi]", " ", "5000."}]}], 
     RowBox[{"(*", "Hz", "*)"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"printParams", "[", "]"}], ":=", 
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<configuration parameters:\\nparamSetName=``, \[Lambda]0=`` m, \
Larm=`` km, Lsrc=`` m, Pcirc=`` MW, Titm=``, Tsrm=``, M=`` kg\\nderived \
parameters:\\n\!\(\*FractionBox[\(\[Omega]FSR\), \(2  \
\[Pi]\)]\)=\!\(\*FractionBox[\(1\), \(\[Tau]RoundTripArm\)]\)=`` kHz, \
\!\(\*FractionBox[\(1\), \(\[Tau]RoundTripSRC\)]\)=`` kHz, \!\(\*FractionBox[\
\(\[Gamma]R\), \(2  \[Pi]\)]\)=`` kHz, \!\(\*FractionBox[\(\[Omega]s\), \(2  \
\[Pi]\)]\)=`` kHz; \!\(\*FractionBox[\(\[Omega]s\), \(\[Gamma]R\)]\)=``\>\"", 
       ",", "paramSetName", ",", 
       RowBox[{"NumberForm", "[", "\[Lambda]0", "]"}], ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"Larm", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]]}], "]"}], ",", 
       RowBox[{"NumberForm", "[", "Lsrc", "]"}], ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"Pcirc", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]]}], "]"}], ",", 
       RowBox[{"NumberForm", "[", "Titm", "]"}], ",", 
       RowBox[{"NumberForm", "[", "Tsrm", "]"}], ",", 
       RowBox[{"NumberForm", "[", "M", "]"}], ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", "\[Tau]RoundTripArm"], 
          SuperscriptBox["10", 
           RowBox[{"-", "3"}]]}], ",", "3"}], "]"}], ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", "\[Tau]RoundTripSRC"], 
          SuperscriptBox["10", 
           RowBox[{"-", "3"}]]}], ",", "3"}], "]"}], ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{
         RowBox[{
          FractionBox["\[Gamma]R", 
           RowBox[{"2", "\[Pi]"}]], 
          SuperscriptBox["10", 
           RowBox[{"-", "3"}]]}], ",", "3"}], "]"}], ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{
         RowBox[{
          FractionBox["\[Omega]s", 
           RowBox[{"2", "\[Pi]"}]], 
          SuperscriptBox["10", 
           RowBox[{"-", "3"}]]}], ",", "3"}], "]"}], ",", 
       RowBox[{"NumberForm", "[", 
        FractionBox["\[Omega]s", "\[Gamma]R"], "]"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"to", "-", 
      RowBox[{"do", ":", " ", 
       RowBox[{"find", " ", "experimental", " ", "constraints"}], ":"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"--", " ", "optical"}], " ", 
       RowBox[{"loss", " ", "--"}]}], ">", " ", 
      RowBox[{"see", " ", "Zhang"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"--", " ", "maximum"}], " ", "squeezing", " ", "ratio", " ", 
       "to", " ", "singularity", " ", 
       RowBox[{"threshold", " ", "--"}]}], ">", " ", 
      RowBox[{"see", " ", "Sheon"}]}], ",", " ", 
     RowBox[{
     "0.95", " ", "and", " ", "rule", " ", "of", " ", "thumb", " ", "0.7"}], 
     ","}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"\"\<realistic\>\"", " ", "losses"}], ",", " ", 
     RowBox[{
     "using", " ", "those", " ", "from", " ", "Zhang", " ", "et", " ", "al"}],
      ",", " ", 
     RowBox[{
     "2021", " ", "which", " ", "seem", " ", "to", " ", "be", " ", "pretty", 
      " ", "representative"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tla0", "=", 
     RowBox[{"100.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"=", 
       RowBox[{"100", "ppm"}]}], ",", " ", 
      RowBox[{"arm", " ", "cavity", " ", "loss", " ", "port"}]}], "*)"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tlb0", "=", 
     RowBox[{"1000.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"=", 
       RowBox[{"1000", "ppm"}]}], ",", " ", 
      RowBox[{"signal", " ", "SRC", " ", "loss", " ", "port"}]}], "*)"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tlc0", "=", 
     RowBox[{"1000.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"=", 
       RowBox[{"1000", "ppm"}]}], ",", " ", 
      RowBox[{"idler", " ", "SRC", " ", "loss", " ", "port"}]}], "*)"}], ";", 
    " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"along", " ", "with", " ", "symSRM"}], "=", 
      RowBox[{
      "True", " ", "as", " ", "the", " ", "default", " ", "from", " ", "now", 
       " ", "on"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Rpd0", "=", "0.1"}], 
    RowBox[{"(*", 
     RowBox[{"=", 
      RowBox[{"10", "%"}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "singularityThr", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"singularityThr", "[", 
     RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"poleSol0", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[CapitalOmega]", "\[Rule]", "0"}], ",", 
           RowBox[{"\[Chi]", "\[Rule]", 
            SqrtBox[
             RowBox[{"\[Gamma]c", " ", 
              RowBox[{"(", 
               RowBox[{"\[Gamma]btot", "+", 
                FractionBox[
                 SuperscriptBox["\[Omega]s", "2"], "\[Gamma]a"]}], 
               ")"}]}]]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[CapitalOmega]", "\[Rule]", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["\[Gamma]a", "2"]}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[Gamma]btot", "+", "\[Gamma]c"}], ")"}]}], "-", 
               RowBox[{"\[Gamma]a", " ", 
                SuperscriptBox["\[Omega]s", "2"]}], "+", 
               RowBox[{"\[Gamma]c", " ", 
                SuperscriptBox["\[Omega]s", "2"]}]}], 
              RowBox[{"\[Gamma]btot", "+", "\[Gamma]c"}]]]}], ",", 
           RowBox[{"\[Chi]", "\[Rule]", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Gamma]a", "+", "\[Gamma]btot"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"\[Gamma]a", "+", "\[Gamma]c", "+", 
                FractionBox[
                 SuperscriptBox["\[Omega]s", "2"], 
                 RowBox[{"\[Gamma]btot", "+", "\[Gamma]c"}]]}], ")"}]}]]}]}], 
          "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Tla", "\[NotEqual]", "0"}], ",", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"\[Chi]", "/.", "poleSol0"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Gamma]a", "\[Rule]", 
             RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
            RowBox[{"\[Gamma]btot", "\[Rule]", 
             RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
            RowBox[{"\[Gamma]c", "\[Rule]", 
             RowBox[{"\[Gamma]cFn", "[", 
              RowBox[{"Tlc", ",", "symSRM"}], "]"}]}]}], "}"}]}], "]"}], ",", 
        
        RowBox[{
         RowBox[{"\[Chi]", "/.", 
          RowBox[{"poleSol0", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Gamma]a", "\[Rule]", 
            RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
           RowBox[{"\[Gamma]btot", "\[Rule]", 
            RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
           RowBox[{"\[Gamma]c", "\[Rule]", 
            RowBox[{"\[Gamma]cFn", "[", 
             RowBox[{"Tlc", ",", "symSRM"}], "]"}]}]}], "}"}]}]}], "]"}]}], 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"loss", " ", "functions"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]aFn", "[", "Tla_", "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"-", "1"}], 
      RowBox[{"2", " ", "\[Tau]RoundTripArm"}]], 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "Tla"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]btotFn", "[", "Tlb_", "]"}], ":=", 
    RowBox[{"\[Gamma]R", "+", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], 
       RowBox[{"2", " ", "\[Tau]RoundTripSRC"}]], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "Tlb"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]cFn", "[", 
     RowBox[{"Tlc_", ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{"symSRM", ",", 
      RowBox[{"\[Gamma]R", "+", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "1"}], 
         RowBox[{"2", " ", "\[Tau]RoundTripSRC"}]], 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "Tlc"}], "]"}]}]}], ",", 
      RowBox[{
       FractionBox[
        RowBox[{"-", "1"}], 
        RowBox[{"2", " ", "\[Tau]RoundTripSRC"}]], 
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", "Tlc"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"plotting", " ", 
      RowBox[{"sensitivity", " ", "--"}], " ", "un"}], "-", 
     RowBox[{"simplified", " ", "Sh"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "taking", " ", "real", " ", "part", " ", "to", " ", "discard", " ", 
     "numerical", " ", "error", " ", "creating", " ", "tiny", " ", 
     "imaginary", " ", "parts"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"QNwRP", "[", 
     RowBox[{
      RowBox[{"\[CapitalOmega]0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Chi]0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
      RowBox[{"Tla_", "?", "NumericQ"}], ",", 
      RowBox[{"Tlb_", "?", "NumericQ"}], ",", 
      RowBox[{"Tlc_", "?", "NumericQ"}], ",", 
      RowBox[{"Rpd0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", "SxSimpl", "]"}], "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Phi]", "\[Rule]", "\[Phi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "->", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigwRP", "[", 
     RowBox[{
      RowBox[{"\[CapitalOmega]0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Chi]0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
      RowBox[{"Tla_", "?", "NumericQ"}], ",", 
      RowBox[{"Tlb_", "?", "NumericQ"}], ",", 
      RowBox[{"Tlc_", "?", "NumericQ"}], ",", 
      RowBox[{"Rpd0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", "sigTsqrSimpl", "]"}], "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Phi]", "\[Rule]", "\[Phi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "->", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ASDShwRP", "[", 
     RowBox[{
      RowBox[{"\[CapitalOmega]0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Chi]0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
      RowBox[{"Tla_", "?", "NumericQ"}], ",", 
      RowBox[{"Tlb_", "?", "NumericQ"}], ",", 
      RowBox[{"Tlc_", "?", "NumericQ"}], ",", 
      RowBox[{"Rpd0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", "ShSimpl", "]"}], "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Phi]", "\[Rule]", "\[Phi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "->", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"to", "-", 
      RowBox[{"do", ":", " ", 
       RowBox[{"pad", " ", "out", " ", "Tla"}]}]}], ",", " ", "Tlb", ",", " ", 
     RowBox[{
     "Tlc", " ", "to", " ", "accommodate", " ", "ppm", " ", "and", " ", "non",
       " ", "ppm", " ", "inputs"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"legendStyler", "[", "vals0_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "pad", " ", "out", " ", "vals0", " ", "with", " ", "default", " ", 
       "arguments", " ", "of", " ", "wRP", " ", "functions"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "vals0", "]"}], "\[Equal]", "6"}], ",", 
        RowBox[{"vals", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"vals0", ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False", ",", "True"}], "}"}]}], "]"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "vals0", "]"}], "\[Equal]", "7"}], ",", 
          RowBox[{"vals", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"vals0", ",", 
             RowBox[{"{", 
              RowBox[{"False", ",", "True"}], "}"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "vals0", "]"}], "\[Equal]", "8"}], ",", 
            RowBox[{"vals", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"vals0", ",", 
               RowBox[{"{", "True", "}"}]}], "]"}]}], ",", 
            RowBox[{"vals", "=", "vals0"}]}], "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "in", " ", "order", " ", "to", " ", "evaluate", " ", "any", " ", 
        "held", " ", "singularity", " ", "thresholds"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"vals", "=", 
       RowBox[{"vals", "//", "ReleaseHold"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"paddedStrings", "=", "\[IndentingNewLine]", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"StringPadRight", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"vals", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "/", 
              RowBox[{"singularityThr", "[", 
               RowBox[{
                RowBox[{"vals", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{"vals", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], ",", 
                RowBox[{"vals", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], ",", 
                RowBox[{"vals", "[", 
                 RowBox[{"[", "9", "]"}], "]"}]}], "]"}]}], "]"}], "]"}], ",",
            "4"}], "]"}], ",", 
         RowBox[{"StringPadRight", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"vals", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", "\[Pi]"}], ")"}]}], "]"}], "]"}], ",", "5"}], 
          "]"}], ",", 
         RowBox[{"StringPadRight", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"vals", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "<", "0.01"}], ",", 
               RowBox[{
                RowBox[{"vals", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], 
                SuperscriptBox["10", "6"]}], ",", 
               RowBox[{"vals", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "]"}], ",", 
           "5"}], "]"}], ",", 
         RowBox[{"StringPadRight", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"vals", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "<", "0.01"}], ",", 
               RowBox[{
                RowBox[{"vals", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], 
                SuperscriptBox["10", "6"]}], ",", 
               RowBox[{"vals", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "]"}], "]"}], "]"}], ",", 
           "6"}], "]"}], ",", 
         RowBox[{"StringPadRight", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"vals", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], "<", "0.01"}], ",", 
               RowBox[{
                RowBox[{"vals", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], 
                SuperscriptBox["10", "6"]}], ",", 
               RowBox[{"vals", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "]"}], "]"}], "]"}], ",", 
           "6"}], "]"}], ",", 
         RowBox[{"StringPadRight", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"vals", "[", 
             RowBox[{"[", "6", "]"}], "]"}], "]"}], ",", "4"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"<>", " ", "is"}], " ", "StringJoin"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{
          RowBox[{"\"\<\[Chi]/\[Chi]Thr=``, \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vals", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "-", 
                  FractionBox["\[Pi]", "2"]}], ",", "\[Pi]"}], "]"}], 
               "\[Equal]", "0"}], ",", 
              RowBox[{"StringPadRight", "[", 
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<\[Phi]=``\[Pi]/2\>\"", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"vals", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                    FractionBox["\[Pi]", "2"]}], ",", 
                    RowBox[{"2", "\[Pi]"}]}], "]"}], "\[Equal]", "0"}], ",", 
                    "\"\<+\>\"", ",", "\"\<-\>\""}], "]"}]}], "]"}], "]"}], 
                ",", "12"}], "]"}], ",", 
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<\[Phi]/(2\[Pi])=``\>\"", ",", "\[IndentingNewLine]", 
                RowBox[{"paddedStrings", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}], "]"}], 
           "\[IndentingNewLine]", "<>", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"vals", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "<", "0.01"}], ",", 
             "\"\<; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm\>\"", ",", 
             "\"\<; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``\>\""}], "]"}], 
           "\[IndentingNewLine]", "<>", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"vals", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "<", "0.01"}], ",", 
             "\"\<, \!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``ppm\>\"", ",", 
             "\"\<, \!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``\>\""}], "]"}], 
           "\[IndentingNewLine]", "<>", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"vals", "[", 
              RowBox[{"[", "9", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
             "\"\<, \!\(\*SubscriptBox[\(\[Gamma]\), \(c, \
tot\)]\)=\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\)+\!\(\*SubscriptBox[\(\
\[Gamma]\), \(c\)]\)\>\"", "<>", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"vals", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "<", "0.01"}], ",", 
                "\"\<(\!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm)\>\"", ",", 
                "\"\<(\!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``)\>\""}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"vals", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], "<", "0.01"}], ",", 
               "\"\<, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm\>\"", ",", 
               "\"\<, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``\>\""}], 
              "]"}]}], "]"}], "\[IndentingNewLine]", "<>", 
           "\"\<, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``\>\"", 
           "\[IndentingNewLine]", "<>", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"Not", "[", 
              RowBox[{"vals", "[", 
               RowBox[{"[", "7", "]"}], "]"}], "]"}], ",", "\"\<; no RP\>\"", 
             ",", "\"\<\>\""}], "]"}], "\[IndentingNewLine]", "<>", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"vals", "[", 
              RowBox[{"[", "8", "]"}], "]"}], ",", "\"\<; with BAE\>\"", ",", 
             "\"\<\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"paddedStrings", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"paddedStrings", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"paddedStrings", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"paddedStrings", "[", 
           RowBox[{"[", "5", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"paddedStrings", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Monospace\>\""}]}], "]"}]}], 
     ")"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "assumes", " ", "that", " ", "BAE", " ", "and", " ", "symSRM", " ", "are",
      " ", "turned", " ", "off"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"legendStylerShort", "[", "vals0_", "]"}], ":=", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<\[Chi]/\!\(\*SubscriptBox[\(\[Chi]\), \(thr\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \!\(\*SubscriptBox[\
\(R\), \(PD\)]\)=``, \[Rho]``\>\"", ",", 
        RowBox[{"StringPadRight", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"vals0", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "//", "ReleaseHold"}], ")"}],
               "/", 
              RowBox[{"singularityThr", "[", 
               RowBox[{
                RowBox[{"vals0", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{"vals0", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], ",", 
                RowBox[{"vals0", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], ",", "False"}], "]"}]}], ",",
              "2"}], "]"}], "]"}], ",", "4"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"vals0", "[", 
            RowBox[{"[", "3", "]"}], "]"}], " ", 
           SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"vals0", "[", 
            RowBox[{"[", "4", "]"}], "]"}], " ", 
           SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"vals0", "[", 
            RowBox[{"[", "5", "]"}], "]"}], " ", 
           SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"N", "[", 
          RowBox[{"vals0", "[", 
           RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"vals0", "[", 
           RowBox[{"[", "7", "]"}], "]"}], ",", "\"\<\[NotEqual]0\>\"", ",", 
          "\"\<=0\>\""}], "]"}]}], "]"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Monospace\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"legendStylerSplit", "[", "vals0_", "]"}], ":=", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<\[Chi]/\!\(\*SubscriptBox[\(\[Chi]\), \(thr\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``ppm, \!\(\*SubscriptBox[\(T\), \(l, b\
\)]\)=``ppm,\\n\!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm, \
\!\(\*SubscriptBox[\(R\), \(PD\)]\)=``, \[Rho]``\>\"", ",", 
        RowBox[{"StringPadRight", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"vals0", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "//", "ReleaseHold"}], ")"}],
               "/", 
              RowBox[{"singularityThr", "[", 
               RowBox[{
                RowBox[{"vals0", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{"vals0", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], ",", 
                RowBox[{"vals0", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], ",", "False"}], "]"}]}], ",",
              "2"}], "]"}], "]"}], ",", "4"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"vals0", "[", 
            RowBox[{"[", "3", "]"}], "]"}], " ", 
           SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"vals0", "[", 
            RowBox[{"[", "4", "]"}], "]"}], " ", 
           SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"vals0", "[", 
            RowBox[{"[", "5", "]"}], "]"}], " ", 
           SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"N", "[", 
          RowBox[{"vals0", "[", 
           RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"vals0", "[", 
           RowBox[{"[", "7", "]"}], "]"}], ",", "\"\<\[NotEqual]0\>\"", ",", 
          "\"\<=0\>\""}], "]"}]}], "]"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Monospace\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotwRP", "[", 
     RowBox[{"valsList_", ",", 
      RowBox[{"plotLabel_:", "None"}], ",", 
      RowBox[{"plotStyle_:", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         SuperscriptBox["10", "4"]}], "}"}]}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmin", ",", "fmax"}], "}"}], "=", "fRange"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"LogLinearPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"20", 
             RowBox[{"Log10", "[", 
              RowBox[{"QNwRP", "@@", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
                 RowBox[{
                  RowBox[{"valsList", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "//", "ReleaseHold"}]}], 
                "]"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"100", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"TicksStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
              RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"fmin", ",", "fmax"}], "}"}], ",", "All"}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "plotStyle"}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<quantum noise transfer function,\\n|R| / dB (20log10)\>\"", 
              ","}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"ToString", "[", "plotLabel", "]"}], "\[Equal]", 
                 RowBox[{"ToString", "[", "None", "]"}]}], ",", 
                RowBox[{
                "\"\<nondegenerate internal squeezing\\nparameters of \>\"", "<>",
                  "paramSetName"}], ",", "plotLabel"}], "]"}]}], "}"}]}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{"LogLogPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"sigwRP", "@@", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
               RowBox[{
                RowBox[{"valsList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "//", "ReleaseHold"}]}], 
              "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"100", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"TicksStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
              RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"fmin", ",", "fmax"}], "}"}], ",", "All"}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "plotStyle"}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<signal transfer function,\\n|T| / [?] (log scale)\>\"", 
              ","}], "}"}], ",", 
            RowBox[{"{", ",", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"LogLogPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Join", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"ASDShwRP", "@@", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
                 RowBox[{
                  RowBox[{"valsList", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "//", "ReleaseHold"}]}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["10", "3"], "<", "#", "<", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["10", "3"]}]}], ",", 
                 RowBox[{"5", " ", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "25"}]]}], ",", "Null"}], "]"}], "&"}], "[", 
              "f", "]"}], "}"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"100", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"All", ",", "1"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"legendStyler", "[", 
                 RowBox[{"valsList", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
              ",", 
              RowBox[{
              "{", "\"\<5\[Cross]\!\(\*SuperscriptBox[\(10\), \
\(-25\)]\)\!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) target for 1\[Dash]4 \
kHz\>\"", "}"}]}], "]"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "10", "]"}]}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"q0", ",", "r0"}], "}"}], "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"plotStyle", "\[NotEqual]", 
                RowBox[{"{", "}"}]}], ",", 
               RowBox[{"QuotientRemainder", "[", 
                RowBox[{
                 RowBox[{"Length", "[", "valsList", "]"}], ",", 
                 RowBox[{"Length", "[", "plotStyle", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{"plotStyle", ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "q0"}], "}"}]}], "]"}], ",", 
                "1"}], "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "r0"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"Directive", "[", 
                RowBox[{"Red", ",", "DotDashed"}], "]"}], "}"}]}], "]"}]}], 
           ")"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"fmin", ",", "fmax"}], "}"}], ",", "All"}], "}"}]}], ",", 
         RowBox[{"Filling", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "valsList", "]"}], "+", "1"}], "\[Rule]", 
            "Bottom"}], "}"}]}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<strain sensitivity (NSR)\\n/ \!\(\*SuperscriptBox[\(Hz\), \
\(\(-1\)/2\)]\) (log scale)\>\"", ","}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ","}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", 
        RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "plotASDShwRP", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotASDShwRP", "[", 
     RowBox[{"valsList_", ",", 
      RowBox[{"plotLabel_:", "None"}], ",", 
      RowBox[{"plotStyle_:", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         SuperscriptBox["10", "4"]}], "}"}]}], ",", 
      RowBox[{"gridLines_:", "None"}], ",", 
      RowBox[{"plotRange_:", "All"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmin", ",", "fmax"}], "}"}], "=", "fRange"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"LogLogPlot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"ASDShwRP", "@@", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
                RowBox[{"valsList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["10", "3"], "<", "#", "<", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["10", "3"]}]}], ",", 
                RowBox[{"5", " ", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "25"}]]}], ",", "Null"}], "]"}], "&"}], "[", 
             "f", "]"}], "}"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"legendStyler", "[", 
                RowBox[{"valsList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{
             "{", "\"\<5\[Cross]\!\(\*SuperscriptBox[\(10\), \
\(-25\)]\)\!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) target for 1\[Dash]4 \
kHz\>\"", "}"}]}], "]"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "10", "]"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"q0", ",", "r0"}], "}"}], "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"plotStyle", "\[NotEqual]", 
               RowBox[{"{", "}"}]}], ",", 
              RowBox[{"QuotientRemainder", "[", 
               RowBox[{
                RowBox[{"Length", "[", "valsList", "]"}], ",", 
                RowBox[{"Length", "[", "plotStyle", "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{"plotStyle", ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "q0"}], "}"}]}], "]"}], ",", 
               "1"}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "r0"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"Directive", "[", 
               RowBox[{"Red", ",", "DotDashed"}], "]"}], "}"}]}], "]"}]}], 
          ")"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"fmin", ",", "fmax"}], "}"}], ",", "plotRange"}], "}"}]}],
         ",", 
        RowBox[{"Filling", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "valsList", "]"}], "+", "1"}], "\[Rule]", 
           "Bottom"}], "}"}]}], ",", 
        RowBox[{"Frame", "->", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<strain sensitivity (NSR)\\n/ \!\(\*SuperscriptBox[\(Hz\), \(\
\(-1\)/2\)]\) (log scale)\>\"", ","}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"Not", "[", 
                RowBox[{"plotLabel", "===", "None"}], "]"}], ",", 
               "plotLabel"}], "]"}]}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
        RowBox[{"GridLines", "\[Rule]", "gridLines"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plot\[Gamma]RGrid", "[", 
     RowBox[{"configParams_", ",", "\[Gamma]RList_", ",", "valsList_", ",", 
      RowBox[{"plotStyle_:", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         SuperscriptBox["10", "5"]}], "}"}]}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmin", ",", "fmax"}], "}"}], "=", "fRange"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p1List", ",", "p2List", ",", "p3List"}], "}"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"setConfigParamsCustom", "@@", 
          RowBox[{"ReplacePart", "[", 
           RowBox[{"configParams", ",", 
            RowBox[{
             RowBox[{"-", "2"}], "\[Rule]", 
             RowBox[{"\[Gamma]RList", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p1", "=", 
          RowBox[{"LogLinearPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"20", 
                RowBox[{"Log10", "[", 
                 RowBox[{"QNwRP", "@@", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"valsList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "//", "ReleaseHold"}]}], 
                   "]"}]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"45", ",", "7"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"TicksStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], 
              "}"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"fmin", ",", "fmax"}], "}"}], ",", "All"}], "}"}]}], 
            ",", 
            RowBox[{"PlotStyle", "\[Rule]", "plotStyle"}], ",", 
            RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
            RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
            RowBox[{"Epilog", "\[Rule]", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{
                  "\"\<\!\(\*FractionBox[SubscriptBox[\(\[Gamma]\), \(R\)], \
\(2  \[Pi]\)]\)=`` kHz\>\"", ",", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[Gamma]RList", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], 
                    RowBox[{"2", "\[Pi]"}]], 
                    SuperscriptBox["10", 
                    RowBox[{"-", "3"}]]}], "]"}]}], "]"}], ",", "10", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Monospace\>\""}]}], 
                "]"}], ",", 
               RowBox[{"Scaled", "[", 
                RowBox[{"{", 
                 RowBox[{"0.8", ",", "0.83"}], "}"}], "]"}], ",", 
               RowBox[{"Background", "\[Rule]", 
                RowBox[{"Lighter", "[", "LightGray", "]"}]}]}], "]"}]}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p2", "=", 
          RowBox[{"LogLogPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"sigwRP", "@@", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"valsList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "//", "ReleaseHold"}]}], 
                 "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"45", ",", "7"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"TicksStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], 
              "}"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"fmin", ",", "fmax"}], "}"}], ",", "All"}], "}"}]}], 
            ",", 
            RowBox[{"PlotStyle", "\[Rule]", "plotStyle"}], ",", 
            RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
            RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p3", "=", 
          RowBox[{"LogLogPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"ASDShwRP", "@@", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"valsList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "//", "ReleaseHold"}]}], 
                   "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", 
                   RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}],
                ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["10", "3"], "<", "#", "<", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["10", "3"]}]}], ",", 
                    RowBox[{"5", " ", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "25"}]]}], ",", "Null"}], "]"}], "&"}], "[", 
                 "f", "]"}], "}"}]}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"45", ",", "7"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"All", ",", "1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"q0", ",", "r0"}], "}"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"plotStyle", "\[NotEqual]", 
                   RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"QuotientRemainder", "[", 
                   RowBox[{
                    RowBox[{"Length", "[", "valsList", "]"}], ",", 
                    RowBox[{"Length", "[", "plotStyle", "]"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{"plotStyle", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "q0"}], "}"}]}], "]"}], ",", 
                   "1"}], "]"}], ",", 
                 RowBox[{"Table", "[", 
                  RowBox[{",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "r0"}], "}"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                   RowBox[{"Red", ",", "DotDashed"}], "]"}], "}"}]}], "]"}]}],
               ")"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"fmin", ",", "fmax"}], "}"}], ",", "All"}], "}"}]}], 
            ",", 
            RowBox[{"Filling", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "valsList", "]"}], "+", "1"}], 
               "\[Rule]", "Bottom"}], "}"}]}], ",", 
            RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
            RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"p1List", ",", "p1"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"p2List", ",", "p2"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"p3List", ",", "p3"}], "]"}], ";"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "\[Gamma]RList", "]"}]}], "}"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Labeled", "[", 
       RowBox[{
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1List", ",", "p2List", ",", "p3List"}], "}"}], ",", 
          RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "\"\<nondegenerate internal squeezing\\nparameters of \>\"", "<>", 
           "paramSetName"}], ",", 
          RowBox[{"Grid", "[", 
           RowBox[{GridBox[{
              {"\"\<\>\"", "\"\<signal\>\"", "\"\<quantum noise\>\""},
              {"\"\<sensitivity (NSR)\>\"", "\"\<transfer function\>\"", 
               "\"\<transfer function\>\""},
              {
               "\"\</ \!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) (log \
scale)\>\"", "\"\</ [?] (log scale)\>\"", 
               "\"\</ dB (20 \!\(\*SubscriptBox[\(log\), \(10\)]\))\>\""}
             }], ",", 
            RowBox[{"Spacings", "\[Rule]", "3"}]}], "]"}], ",", 
          RowBox[{"Grid", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "{", "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \
\(2  \[Pi]\)]\) / Hz (log scale)\>\"", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Framed", "[", 
               RowBox[{
                RowBox[{"LineLegend", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"q0", ",", "r0"}], "}"}], "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"plotStyle", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"QuotientRemainder", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "valsList", "]"}], ",", 
                    RowBox[{"Length", "[", "plotStyle", "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"plotStyle", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "q0"}], "}"}]}], "]"}], ",", 
                    "1"}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "r0"}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Red", ",", "DotDashed"}], "]"}], "}"}]}], 
                    "]"}]}], ")"}], ",", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"legendStyler", "[", 
                    RowBox[{"valsList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{
                    "{", "\"\<5\[Cross]\!\(\*SuperscriptBox[\(10\), \
\(-25\)]\)\!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) target for 1\[Dash]4 \
kHz\>\"", "}"}]}], "]"}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"Directive", "[", "10", "]"}]}], ",", 
                  RowBox[{"LegendMarkerSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}], ",", 
                RowBox[{"FrameStyle", "\[Rule]", "Thin"}]}], "]"}], "}"}]}], 
            "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Top", ",", "Left", ",", "Bottom"}], "}"}], ",", 
        RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"12", ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Calibri Light\>\""}]}], 
          "]"}]}]}], "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.836874981430254*^9, 3.836875072223176*^9}, {
   3.8368751417843857`*^9, 3.836875200542362*^9}, {3.836875283633193*^9, 
   3.8368752924534883`*^9}, {3.836875350207292*^9, 3.836875811270529*^9}, {
   3.836875848406776*^9, 3.83687606141188*^9}, {3.836876101472526*^9, 
   3.836876134581773*^9}, {3.836876275825767*^9, 3.836876427229073*^9}, {
   3.836876464470739*^9, 3.836876512251644*^9}, 3.836876560060914*^9, {
   3.836876606676798*^9, 3.836876621829665*^9}, {3.83694898188379*^9, 
   3.836948982379059*^9}, {3.836954144649746*^9, 3.836954165298077*^9}, {
   3.8369571399674473`*^9, 3.836957145819147*^9}, {3.836957479546026*^9, 
   3.836957512780986*^9}, {3.837826614353271*^9, 3.837826632688078*^9}, {
   3.838063985324956*^9, 3.8380640083338737`*^9}, {3.838067366139449*^9, 
   3.838067399365823*^9}, {3.8383411052241907`*^9, 3.8383411084956636`*^9}, {
   3.838852900287304*^9, 3.838852903643374*^9}, {3.838927942701666*^9, 
   3.838927978278606*^9}, {3.8390153340727882`*^9, 3.8390153887507753`*^9}, {
   3.839015962460924*^9, 3.839016047370267*^9}, {3.839016167303187*^9, 
   3.839016168871687*^9}, {3.839016279502911*^9, 3.839016280893586*^9}, {
   3.839016623344702*^9, 3.839016697332974*^9}, {3.839018372776753*^9, 
   3.839018432867854*^9}, {3.839018463254253*^9, 3.839018623456065*^9}, {
   3.8390189400206738`*^9, 3.839018946504031*^9}, {3.839019134425318*^9, 
   3.8390192025033493`*^9}, {3.839019386959992*^9, 3.8390194107421618`*^9}, {
   3.839019552827983*^9, 3.839019583226982*^9}, {3.839019716331653*^9, 
   3.83901975744002*^9}, {3.8390264632847548`*^9, 3.8390264748298187`*^9}, {
   3.83902650735746*^9, 3.839026508299232*^9}, {3.839026917180788*^9, 
   3.839026926006667*^9}, {3.839030237655735*^9, 3.839030242356433*^9}, {
   3.839031597699772*^9, 3.839031764015018*^9}, {3.8390318829815903`*^9, 
   3.839032011942947*^9}, {3.8390322264831953`*^9, 3.839032624204075*^9}, 
   3.839032661822956*^9, {3.839033539038168*^9, 3.839033587856574*^9}, {
   3.83903421780672*^9, 3.839034221471208*^9}, {3.83903605358011*^9, 
   3.8390361064421883`*^9}, {3.8390361856211367`*^9, 
   3.8390361947411547`*^9}, {3.839036265235991*^9, 3.839036269562888*^9}, {
   3.839036379724955*^9, 3.8390363828629303`*^9}, {3.8392717195658092`*^9, 
   3.839271873999387*^9}, {3.839271914999124*^9, 3.8392719906512327`*^9}, {
   3.83927209764911*^9, 3.839272275914186*^9}, {3.8392723081292477`*^9, 
   3.839272342172456*^9}, {3.8392723826820383`*^9, 3.839272386329041*^9}, {
   3.839273723026107*^9, 3.83927372405163*^9}, {3.839275240740405*^9, 
   3.839275242176805*^9}, {3.839276820601714*^9, 3.839276860330742*^9}, {
   3.839277402543277*^9, 3.839277404407146*^9}, {3.839277493957775*^9, 
   3.839277544582217*^9}, {3.839277576619821*^9, 3.839277592657278*^9}, {
   3.8392776492889833`*^9, 3.839277662057995*^9}, {3.839360578370062*^9, 
   3.8393605898406563`*^9}, {3.839360638758204*^9, 3.8393606476679173`*^9}, {
   3.839360971402857*^9, 3.839360980369898*^9}, {3.8393610171793623`*^9, 
   3.8393610437131166`*^9}, {3.8393610859504557`*^9, 3.839361123975604*^9}, {
   3.839361272893147*^9, 3.839361358237817*^9}, {3.839363760272702*^9, 
   3.839363761675459*^9}, {3.83936379391626*^9, 3.839363829526593*^9}, {
   3.839363862898601*^9, 3.839363866626444*^9}, {3.839364302729932*^9, 
   3.839364339529046*^9}, {3.839365823920888*^9, 3.839365922612843*^9}, {
   3.839365958479391*^9, 3.8393659654114103`*^9}, 3.83936861882721*^9, {
   3.83936865902244*^9, 3.839368727332107*^9}, {3.839368768005268*^9, 
   3.839368809170816*^9}, {3.839368843845765*^9, 3.839368885279936*^9}, {
   3.839368928559189*^9, 3.839368938803194*^9}, {3.839369029850377*^9, 
   3.839369030410274*^9}, {3.839369080454941*^9, 3.839369289520636*^9}, {
   3.8393693923245068`*^9, 3.839369396860198*^9}, {3.839369437540285*^9, 
   3.8393698008927937`*^9}, {3.839369838938562*^9, 3.839369840505968*^9}, {
   3.839369994667522*^9, 3.8393701264234657`*^9}, {3.839370164596726*^9, 
   3.839370191791031*^9}, 3.839370240225699*^9, {3.839370597477991*^9, 
   3.8393706055040913`*^9}, {3.839442061187344*^9, 3.839442107984672*^9}, {
   3.8394450203391867`*^9, 3.839445029847774*^9}, {3.8394488266855593`*^9, 
   3.839448830037098*^9}, {3.839458225174541*^9, 3.839458232329911*^9}, {
   3.8412766875858097`*^9, 3.841276698287344*^9}, {3.842812740382012*^9, 
   3.8428127437531757`*^9}, {3.848006587012183*^9, 3.848006587843186*^9}, {
   3.8563906045935297`*^9, 3.8563906099854317`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"eabb38b1-4c8c-427b-a6f1-9b7e0c3e871a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "setting", " ", "configuration", " ", "and", " ", "derived", " ", 
    "parameters"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"setConfigParamsLi2020", "[", 
    RowBox[{"2", "\[Pi]", " ", "1.", " ", 
     SuperscriptBox["10", "3"]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"printParams", "[", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]Ratio0", "=", "0.95"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pumpPhase0", "=", 
     RowBox[{"\[Pi]", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsList1", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "0", ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
         "Rpd0", ",", "True", ",", "False", ",", "True"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"singularityThr", "[", 
           RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "True"}], "]"}]}], 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"calculated", " ", "for", " ", "symSRM"}], "=", "True"}], 
          "*)"}], ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "True"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"singularityThr", "[", 
           RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}]}], 
         
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"calculated", " ", "for", " ", "symSRM"}], "=", "True"}], 
          "*)"}], ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"plotwRP", "[", 
    RowBox[{"valsList1", ",", "None", ",", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red", ",", 
       RowBox[{"{", 
        RowBox[{"Magenta", ",", "Dashed"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       SuperscriptBox["10", "5"]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.839364378890617*^9, 3.839364411651267*^9}, {
   3.839364730047821*^9, 3.839364730332761*^9}, {3.839364786558906*^9, 
   3.839364798644353*^9}, {3.839364846976788*^9, 3.8393648515887423`*^9}, {
   3.8393648925872183`*^9, 3.839364906154232*^9}, {3.839370989844686*^9, 
   3.839371012315881*^9}, {3.839371044608007*^9, 3.839371044982348*^9}, 
   3.8393712927824793`*^9, {3.839371613384878*^9, 3.839371615264758*^9}, {
   3.839371821349532*^9, 3.8393718322362003`*^9}, {3.83937187334032*^9, 
   3.839371895540803*^9}, 3.8393727027267647`*^9, 3.839372849348679*^9, {
   3.839372895600267*^9, 3.839372920938796*^9}, {3.839373132061799*^9, 
   3.83937313445432*^9}, 3.839373188373386*^9, 3.8393735165911293`*^9, {
   3.839374414812758*^9, 3.839374415091259*^9}, {3.8393746975806713`*^9, 
   3.839374724029726*^9}, {3.839374781914838*^9, 3.839374825121656*^9}, {
   3.839375040742859*^9, 3.8393750559844637`*^9}, {3.8393754243107853`*^9, 
   3.8393754248011007`*^9}, {3.839375518649634*^9, 3.839375545859435*^9}, {
   3.8393755848475437`*^9, 3.839375585723503*^9}, 3.839375811669694*^9, {
   3.83937682724969*^9, 3.8393768364689007`*^9}, {3.8393773865901413`*^9, 
   3.839377398882511*^9}, {3.839377459767707*^9, 3.839377486952264*^9}, {
   3.839377595673045*^9, 3.839377603782661*^9}, {3.8394424977624407`*^9, 
   3.839442498666164*^9}, {3.8394425469516172`*^9, 3.8394425477225437`*^9}, {
   3.839445425511073*^9, 3.839445427393539*^9}, 3.8394456324052277`*^9, {
   3.839446960691375*^9, 3.839446961956442*^9}, {3.83944976047218*^9, 
   3.8394497734001703`*^9}, {3.839454300437283*^9, 3.839454301322831*^9}, {
   3.839455448924191*^9, 3.8394554639218397`*^9}, {3.83945550259822*^9, 
   3.83945550293045*^9}, {3.839455765604294*^9, 3.839455770029006*^9}, {
   3.839460044809224*^9, 3.8394600790952797`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"88ebc2e7-dd84-4907-b15a-fa0cd14e3ede"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"valsList1", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "pumpPhase0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "False", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.995", "\[Omega]s"}], ",", "pumpPhase0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "False", ",", "False", ",", "False"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\[Omega]s", ",", "pumpPhase0", ",", "0", ",", "0", ",", "0", ",", "0", 
       ",", "False", ",", "False", ",", "False"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotwRP", "[", 
  RowBox[{"valsList1", ",", "None", ",", 
   RowBox[{"{", 
    RowBox[{"Orange", ",", "Green", ",", "Red"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SuperscriptBox["10", "5"]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.841343664570631*^9, 3.841343724582378*^9}, {
  3.8413437767889957`*^9, 3.8413438128078117`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"209a6386-5244-45e9-8323-4028f6e8cff4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"valsList1", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
       "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Chi]Ratio0", " ", 
        RowBox[{"singularityThr", "[", 
         RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}]}], 
       ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", "Rpd0", 
       ",", "True", ",", "False", ",", "False"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotwRP", "[", 
  RowBox[{"valsList1", ",", "None", ",", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Red"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SuperscriptBox["10", "5"]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8413458662722397`*^9, 3.841345898866206*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"d6949277-6182-4c16-bf82-3529a30bce11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "showing", " ", "nIS", " ", "tolerance", " ", "to", " ", "detection", " ",
      "losses"}], ",", " ", 
    RowBox[{
    "vary", " ", "Rpd", " ", "from", " ", "0", " ", "to", " ", "0.95"}], ",", 
    " ", 
    RowBox[{
     RowBox[{
     "0.0005", " ", "is", " ", "the", " ", "quantum", " ", "efficiency", " ", 
      "of", " ", "the", " ", "PD", " ", "in", " ", 
      RowBox[{"aLIGO", "\[IndentingNewLine]", "--"}]}], ">", " ", 
     RowBox[{
     "point", " ", "is", " ", "that", " ", "with", " ", "10", "%", " ", 
      "loss", " ", "in", " ", "the", " ", "output", " ", "chain"}]}], ",", 
    " ", 
    RowBox[{
    "nIS", " ", "is", " ", "not", " ", "affected", " ", "very", " ", "much", 
     "\[IndentingNewLine]", 
     RowBox[{"NB", ":", " ", 
      RowBox[{
      "if", " ", "the", " ", "same", " ", "is", " ", "done", " ", "for", " ", 
       "squeezer", " ", "off"}]}]}], ",", " ", 
    RowBox[{"then", " ", "results", " ", "look", " ", "the", " ", "same"}], 
    ",", " ", 
    RowBox[{"so", " ", "it", " ", 
     RowBox[{"doesn", "'"}], "t", " ", "look", " ", "like", " ", "nIS", " ", 
     "is", " ", "even", " ", "more", " ", "resilient", " ", "than", " ", 
     RowBox[{"before", "?", " ", "at"}], " ", "the", " ", "very", " ", 
     "least"}], ",", " ", 
    RowBox[{"it", " ", 
     RowBox[{"isn", "'"}], "t", " ", "definitive", " ", "by", " ", "eye"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"valsListHeld", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "0", ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
         "0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
         "0.5", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}], 
           "]"}]}], ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
         ",", "0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}], 
           "]"}]}], ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
         ",", "0.5", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"plot\[Gamma]RGrid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2.", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], 
       RowBox[{"(*", "m", "*)"}], ",", 
       RowBox[{"4.", " ", 
        SuperscriptBox["10", "3"]}], 
       RowBox[{"(*", "m", "*)"}], ",", "None", ",", " ", 
       RowBox[{"3", " ", 
        SuperscriptBox["10", "6"]}], 
       RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", ",", "200", 
       RowBox[{"(*", "kg", "*)"}], ",", 
       "\"\<Li et al, 2020; changing \!\(\*SubscriptBox[\(\[Gamma]\), \
\(R\)]\)\>\"", ",", "None", 
       RowBox[{"(*", 
        RowBox[{"see", " ", "\[Gamma]RList"}], "*)"}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5000"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "0.5", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5.", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "50.", " ", 
        SuperscriptBox["10", "3"]}]}], "}"}], ",", "\[IndentingNewLine]", 
     "valsListHeld", ",", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"{", 
        RowBox[{"Cyan", ",", "Dashed"}], "}"}], ",", "Red", ",", 
       RowBox[{"{", 
        RowBox[{"Magenta", ",", "Dashed"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       SuperscriptBox["10", "5"]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{"\"\<nIS_sigRO_tolerance_Rpd.pdf\>\"", ",", "%"}], "]"}], ";"}],
     "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.839462998628564*^9, 3.8394630534178457`*^9}, {
   3.839463091641407*^9, 3.839463145640215*^9}, 3.839463227855548*^9, {
   3.839463271561919*^9, 3.8394633634915752`*^9}, {3.839463402112791*^9, 
   3.839463525960601*^9}, {3.839463559906013*^9, 3.839463560464554*^9}, {
   3.839530106822654*^9, 3.8395302085934353`*^9}, {3.839530292604508*^9, 
   3.839530299231844*^9}, {3.841276729755274*^9, 3.841276752594775*^9}, {
   3.842567258581829*^9, 
   3.8425672601213007`*^9}},ExpressionUUID->"46874195-3581-4ea5-b6d3-\
b716dfe3fd58"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "showing", " ", "nIS", " ", "tolerance", " ", "to", " ", "idler", " ", 
     "losses"}], ",", " ", 
    RowBox[{
     RowBox[{
     "vary", " ", "Tlc", " ", "from", " ", "0", " ", "to", " ", "1000", 
      "ppm"}], "=", 
     RowBox[{
      RowBox[{"0.001", " ", "to", " ", "100000", "ppm"}], "=", "0.1"}]}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
    "in", " ", "order", " ", "to", " ", "have", " ", "the", " ", 
     "singularity", " ", "threshold", " ", "not", " ", "swap", " ", "over", 
     " ", "to", " ", "the", " ", "DC", " ", "pole"}], ",", " ", 
    RowBox[{
     RowBox[{"need", " ", "\[Gamma]a"}], "\[LessEqual]", "\[Gamma]c"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"so", " ", 
      RowBox[{"don", "'"}], "t", " ", "use", " ", "\[Gamma]c"}], "=", 
     RowBox[{
      RowBox[{"0", " ", "unless", " ", "\[Gamma]a"}], "=", 
      RowBox[{
      "0", " ", "as", " ", "well", "\[IndentingNewLine]", "swapping", " ", 
       "over", " ", "is", " ", "not", " ", "unphysical"}]}]}], ",", " ", 
    RowBox[{
    "but", " ", "it", " ", "is", " ", "a", " ", "good", " ", "test", " ", 
     "of", " ", "the", " ", "regieme", " ", "of", " ", 
     "\"\<large arm loss\>\""}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Tla1", "=", 
     RowBox[{"0.5", "Tla0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"idlerLossList", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"100.", ",", "1000.", ",", "1000."}], "}"}], " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsListHeld", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "pumpPhase0", ",", "Tla1", ",", "Tlb0", ",", 
         RowBox[{"idlerLossList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "Rpd0", ",", "True", ",", 
         "False", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{"Tla1", ",", "Tlb0", ",", 
             RowBox[{"idlerLossList", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "False"}], "]"}], "]"}]}], 
         ",", "pumpPhase0", ",", "Tla1", ",", "Tlb0", ",", 
         RowBox[{"idlerLossList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "Rpd0", ",", "True", ",", 
         "False", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{"Tla1", ",", "Tlb0", ",", 
             RowBox[{"idlerLossList", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "False"}], "]"}], "]"}]}], 
         ",", "pumpPhase0", ",", "Tla1", ",", "Tlb0", ",", 
         RowBox[{"idlerLossList", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "Rpd0", ",", "True", ",", 
         "False", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{"Tla1", ",", "Tlb0", ",", 
             RowBox[{"idlerLossList", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", "True"}], "]"}], "]"}]}], 
         ",", "pumpPhase0", ",", "Tla1", ",", "Tlb0", ",", 
         RowBox[{"idlerLossList", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", "Rpd0", ",", "True", ",", 
         "False", ",", "True"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plot\[Gamma]RGrid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2.", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], 
       RowBox[{"(*", "m", "*)"}], ",", 
       RowBox[{"4.", " ", 
        SuperscriptBox["10", "3"]}], 
       RowBox[{"(*", "m", "*)"}], ",", "None", ",", " ", 
       RowBox[{"3", " ", 
        SuperscriptBox["10", "6"]}], 
       RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", ",", "200", 
       RowBox[{"(*", "kg", "*)"}], ",", 
       "\"\<Li et al, 2020 but changing \!\(\*SubscriptBox[\(\[Gamma]\), \
\(R\)]\)\>\"", ",", "None", 
       RowBox[{"(*", 
        RowBox[{"see", " ", "\[Gamma]RList"}], "*)"}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5000"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "0.5", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5.", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "50.", " ", 
        SuperscriptBox["10", "3"]}]}], "}"}], ",", "\[IndentingNewLine]", 
     "valsListHeld", ",", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red", ",", 
       RowBox[{"{", 
        RowBox[{"Cyan", ",", "Dashed"}], "}"}], ",", "Magenta"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"1", ",", 
       SuperscriptBox["10", "5"]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.839463763254097*^9, 3.83946386606107*^9}, {
  3.839464282387472*^9, 3.8394642917179337`*^9}, {3.839464338118177*^9, 
  3.8394643525701313`*^9}, {3.839464432930862*^9, 3.8394645218019953`*^9}, {
  3.839464562714445*^9, 3.839464623436798*^9}, {3.8394647824837503`*^9, 
  3.839464785845295*^9}, {3.839530577327402*^9, 3.8395305944701014`*^9}, {
  3.839530712054962*^9, 3.83953071338658*^9}, {3.83953115211553*^9, 
  3.839531280644898*^9}, {3.839531334354725*^9, 3.839531397063528*^9}, {
  3.8395314375235653`*^9, 3.8395315033374166`*^9}, {3.839531534729444*^9, 
  3.8395315361170053`*^9}, {3.839531584488102*^9, 3.839531598934246*^9}, {
  3.839531643382691*^9, 3.8395316475329943`*^9}, {3.8395316906798897`*^9, 
  3.839531694113668*^9}, {3.8395318360288677`*^9, 3.839531844057975*^9}, {
  3.841276621219239*^9, 
  3.841276622154776*^9}},ExpressionUUID->"1c819ce3-a6af-482b-a396-\
09b7a4b304ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"for", " ", "completeness"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "tolerance", " ", "to", " ", "arm", " ", "loss", " ", "and", " ", 
       "signal", " ", 
       RowBox[{"loss", "\[IndentingNewLine]", "--"}]}], ">", " ", 
      RowBox[{
      "arm", " ", "loss", " ", "has", " ", "the", " ", "added", " ", "point", 
       " ", "that", " ", "singularity", " ", "threshold", " ", "changes", " ",
        "around", " ", "\[Gamma]a"}]}], "=", "\[Gamma]c"}], ",", " ", 
    RowBox[{
     RowBox[{
     "also", " ", "appears", " ", "to", " ", "matter", " ", "less", " ", "as",
       " ", "\[Gamma]R", " ", 
      RowBox[{"increases", "\[IndentingNewLine]", "--"}]}], ">", " ", 
     RowBox[{
     "signal", " ", "loss", " ", "appears", " ", "to", " ", "have", " ", 
      "little", " ", "effect"}]}], ",", " ", 
    RowBox[{"compare", " ", "Tlb", " ", "to", " ", "Tsrm"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"valsListHeld", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "0", ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
         "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}], 
           "]"}]}], ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{
             RowBox[{"10", "Tla0"}], ",", "Tlb0", ",", "Tlc0", ",", "False"}],
             "]"}], "]"}]}], ",", "pumpPhase0", ",", 
         RowBox[{"10", "Tla0"}], ",", "Tlb0", ",", "Tlc0", ",", "Rpd0", ",", 
         "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{
             RowBox[{"100", "Tla0"}], ",", "Tlb0", ",", "Tlc0", ",", 
             "False"}], "]"}], "]"}]}], ",", "pumpPhase0", ",", 
         RowBox[{"100", "Tla0"}], ",", "Tlb0", ",", "Tlc0", ",", "Rpd0", ",", 
         "True", ",", "False", ",", "False"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plot\[Gamma]RGrid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2.", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], 
       RowBox[{"(*", "m", "*)"}], ",", 
       RowBox[{"4.", " ", 
        SuperscriptBox["10", "3"]}], 
       RowBox[{"(*", "m", "*)"}], ",", "None", ",", " ", 
       RowBox[{"3", " ", 
        SuperscriptBox["10", "6"]}], 
       RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", ",", "200", 
       RowBox[{"(*", "kg", "*)"}], ",", 
       "\"\<Li et al, 2020; changing \!\(\*SubscriptBox[\(\[Gamma]\), \
\(R\)]\)\>\"", ",", "None", 
       RowBox[{"(*", 
        RowBox[{"see", " ", "\[Gamma]RList"}], "*)"}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5000"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "0.5", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5.", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "50.", " ", 
        SuperscriptBox["10", "3"]}]}], "}"}], ",", "\[IndentingNewLine]", 
     "valsListHeld", ",", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red", ",", 
       RowBox[{"{", 
        RowBox[{"Cyan", ",", "Dashed"}], "}"}], ",", "Magenta"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"1", ",", 
       SuperscriptBox["10", "5"]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<nIS_sigRO_tolerance_Tla.pdf\>\"", ",", "%"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.839532203763537*^9, 3.839532290415421*^9}, {
  3.839532375973413*^9, 3.8395323951988897`*^9}, {3.839532521087426*^9, 
  3.839532576353386*^9}, {3.839535008103632*^9, 3.839535030615561*^9}, {
  3.8412766419465714`*^9, 3.841276659248938*^9}, {3.841276882520912*^9, 
  3.841276882992531*^9}, {3.8412769476839447`*^9, 3.841276954459249*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"ce6cef14-ee09-451f-ba38-f6b7580e5bca"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"valsListHeld", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
       "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Chi]Ratio0", " ", 
        RowBox[{"Hold", "[", 
         RowBox[{"singularityThr", "[", 
          RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}], 
         "]"}]}], ",", "pumpPhase0", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
       ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Chi]Ratio0", " ", 
        RowBox[{"Hold", "[", 
         RowBox[{"singularityThr", "[", 
          RowBox[{"Tla0", ",", 
           RowBox[{"10", "Tlb0"}], ",", "Tlc0", ",", "False"}], "]"}], 
         "]"}]}], ",", "pumpPhase0", ",", "Tla0", ",", 
       RowBox[{"10", "Tlb0"}], ",", "Tlc0", ",", "Rpd0", ",", "True", ",", 
       "False", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Chi]Ratio0", " ", 
        RowBox[{"Hold", "[", 
         RowBox[{"singularityThr", "[", 
          RowBox[{"Tla0", ",", 
           RowBox[{"100", "Tlb0"}], ",", "Tlc0", ",", "False"}], "]"}], 
         "]"}]}], ",", "pumpPhase0", ",", "Tla0", ",", 
       RowBox[{"100", "Tlb0"}], ",", "Tlc0", ",", "Rpd0", ",", "True", ",", 
       "False", ",", "False"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot\[Gamma]RGrid", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}], 
     RowBox[{"(*", "m", "*)"}], ",", 
     RowBox[{"4.", " ", 
      SuperscriptBox["10", "3"]}], 
     RowBox[{"(*", "m", "*)"}], ",", "None", ",", " ", 
     RowBox[{"3", " ", 
      SuperscriptBox["10", "6"]}], 
     RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", ",", "200", 
     RowBox[{"(*", "kg", "*)"}], ",", 
     "\"\<Li et al, 2020; changing \!\(\*SubscriptBox[\(\[Gamma]\), \
\(R\)]\)\>\"", ",", "None", 
     RowBox[{"(*", 
      RowBox[{"see", " ", "\[Gamma]RList"}], "*)"}], ",", 
     RowBox[{"2", "\[Pi]", " ", "5000"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "\[Pi]", " ", "0.5", " ", 
      SuperscriptBox["10", "3"]}], ",", 
     RowBox[{"2", "\[Pi]", " ", "5.", " ", 
      SuperscriptBox["10", "3"]}], ",", 
     RowBox[{"2", "\[Pi]", " ", "50.", " ", 
      SuperscriptBox["10", "3"]}]}], "}"}], ",", "\[IndentingNewLine]", 
   "valsListHeld", ",", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Red", ",", 
     RowBox[{"{", 
      RowBox[{"Cyan", ",", "Dashed"}], "}"}], ",", "Magenta"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SuperscriptBox["10", "5"]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<nIS_sigRO_tolerance_Tlb.pdf\>\"", ",", "%"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.841276889327838*^9, {3.842567906191904*^9, 
   3.842567909310014*^9}},ExpressionUUID->"a2211593-81bb-4d73-a788-\
3d0dcb3b2efc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"lossless", " ", "nIS"}], ",", " ", 
    RowBox[{"to", " ", "compare", " ", "to", " ", 
     RowBox[{"Fig", ".", " ", "5"}], " ", "in", " ", "Li", " ", "et", " ", 
     "al"}], ",", " ", "2020"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"valsListHeld", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "0", ",", "pumpPhase0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio0", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{"0", ",", "0", ",", "0", ",", "False"}], "]"}], "]"}]}], 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"calculated", " ", "for", " ", "symSRM"}], "=", "True"}], 
          "*)"}], ",", "pumpPhase0", ",", "0", ",", "0", ",", "0", ",", "0", 
         ",", "True", ",", "False", ",", "False"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plot\[Gamma]RGrid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2.", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], 
       RowBox[{"(*", "m", "*)"}], ",", 
       RowBox[{"4.", " ", 
        SuperscriptBox["10", "3"]}], 
       RowBox[{"(*", "m", "*)"}], ",", "None", ",", " ", 
       RowBox[{"3", " ", 
        SuperscriptBox["10", "6"]}], 
       RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", ",", "200", 
       RowBox[{"(*", "kg", "*)"}], ",", 
       "\"\<Li et al, 2020; changing \!\(\*SubscriptBox[\(\[Gamma]\), \
\(R\)]\)\>\"", ",", "None", 
       RowBox[{"(*", 
        RowBox[{"see", " ", "\[Gamma]RList"}], "*)"}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5000"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "0.5", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5.", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "50.", " ", 
        SuperscriptBox["10", "3"]}]}], "}"}], ",", "\[IndentingNewLine]", 
     "valsListHeld", ",", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"{", 
        RowBox[{"Magenta", ",", "Dashed"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       SuperscriptBox["10", "5"]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.839371790045991*^9, 3.839371799230234*^9}, {
   3.839372055220079*^9, 3.839372069625834*^9}, {3.839373004673386*^9, 
   3.8393730347533283`*^9}, {3.8393730762524853`*^9, 
   3.8393731071364403`*^9}, {3.839373375099308*^9, 3.8393733815647383`*^9}, {
   3.839373415525756*^9, 3.839373445267456*^9}, {3.839373484964157*^9, 
   3.839373497773633*^9}, {3.8393735428366623`*^9, 3.8393735480609617`*^9}, {
   3.839373951630006*^9, 3.83937395278825*^9}, {3.839374762367127*^9, 
   3.839374765197566*^9}, {3.839444835049799*^9, 3.839444835252242*^9}, {
   3.839445726865794*^9, 3.839445738954919*^9}, {3.8394490156207314`*^9, 
   3.8394490236258373`*^9}, {3.839449178256583*^9, 3.839449229345934*^9}, {
   3.8394492898266363`*^9, 3.839449304674513*^9}, 3.8394493441479073`*^9, {
   3.839449379187839*^9, 3.8394493984607363`*^9}, {3.8394614461596746`*^9, 
   3.839461470862554*^9}, {3.8394637231945963`*^9, 3.8394637511406527`*^9}},
 CellLabel->
  "In[611]:=",ExpressionUUID->"99ab4c44-622c-4095-a02f-1c9cf2c691bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"comparing", " ", "nIS", " ", "to", " ", "sWLC"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"single", "-", 
     RowBox[{"mode", " ", "detector"}]}], ",", " ", 
    RowBox[{
     RowBox[{"i", ".", "e", ".", " ", "no"}], " ", "SRC"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ASDShConwRP", "[", 
     RowBox[{
      RowBox[{"\[CapitalOmega]0_", "?", "NumericQ"}], ",", 
      RowBox[{"Tla_", "?", "NumericQ"}], ",", 
      RowBox[{"Rpd0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"\[Gamma]a", "+", "\[Gamma]R"}], ")"}], " ", 
          SuperscriptBox["\[Rho]RP", "2"]}], 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Gamma]a", "+", "\[Gamma]R"}], ")"}], "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Gamma]a", "+", "\[Gamma]R"}], ")"}], "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", "\[Gamma]R"}], "-", 
          RowBox[{"4", " ", "Rpd", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", "\[Gamma]R"}]}]]}], "]"}], 
      "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotSMConwRP", "[", 
     RowBox[{"valsList_", ",", 
      RowBox[{"plotLabel_:", "None"}], ",", 
      RowBox[{"plotStyle_:", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"10", ",", "5000"}], "}"}]}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmin", ",", "fmax"}], "}"}], "=", "fRange"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"LogLogPlot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["2", 
              RowBox[{"1", "/", "2"}]], 
             RowBox[{"ASDShConwRP", "[", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", "f"}], ",", "0", ",", "0"}], 
              "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              SuperscriptBox["2", 
               RowBox[{"1", "/", "2"}]], 
              RowBox[{"ASDShwRP", "@@", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
                 RowBox[{"valsList", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}]}], 
          "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "\"\<single-mode conventional detector\>\"", "}"}], 
             ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"legendStylerShort", "[", 
                RowBox[{"valsList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}]}],
             "]"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "10", "]"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"q0", ",", "r0"}], "}"}], "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"plotStyle", "\[NotEqual]", 
               RowBox[{"{", "}"}]}], ",", 
              RowBox[{"QuotientRemainder", "[", 
               RowBox[{
                RowBox[{"Length", "[", "valsList", "]"}], ",", 
                RowBox[{"Length", "[", "plotStyle", "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Directive", "[", 
               RowBox[{"Green", ",", "Dashed"}], "]"}], "}"}], ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{"plotStyle", ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "q0"}], "}"}]}], "]"}], ",", 
               "1"}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "r0"}], "}"}]}], "]"}]}], "]"}]}],
           ")"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"fmin", ",", "fmax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "25"}]], ",", 
             RowBox[{"5", " ", 
              SuperscriptBox["10", 
               RowBox[{"-", "23"}]]}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "->", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SuperscriptBox[\(2\), \(\(1/2\)\(\\\ \)\)]\)strain \
sensitivity (NSR)\\n/ \!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) (log \
scale)\>\"", ","}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ",", 
             RowBox[{
             "\"\<nondegenerate internal squeezing\\nparameters of \>\"", "<>",
               "paramSetName", "<>", 
              "\"\< and a factor of two in \!\(\*SubscriptBox[\(S\), \(h\)]\) \
(from T norm.?)\\ncompare to Fig.5 from Li et al, 2020\>\""}]}], "}"}]}], 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "plotting", " ", "with", " ", "the", " ", "extra", " ", "factor", " ", 
       "of", " ", "2", " ", "just", " ", "to", " ", 
       RowBox[{"compare", " ", "--"}]}], ">", " ", 
      RowBox[{
      "result", " ", "good", " ", "at", " ", "HF", " ", "and", " ", 
       "peak"}]}], ",", " ", 
     RowBox[{"but", " ", "disagrees", " ", "at", " ", 
      RowBox[{"LF", "?"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"setConfigParamsCustom", "[", 
    RowBox[{
     FractionBox["2.`", 
      SuperscriptBox["10", "6"]], ",", 
     RowBox[{"4.`", " ", 
      SuperscriptBox["10", "3"]}], ",", "None", ",", 
     RowBox[{"3.`", " ", 
      SuperscriptBox["10", "6"]}], ",", "None", ",", "0.046`", ",", "400.", 
     ",", "\"\<Li et al, 2020 + 400. kg\>\"", ",", 
     RowBox[{"2", " ", "\[Pi]", " ", "500.`"}], ",", 
     RowBox[{"2", " ", "\[Pi]", " ", "5000.`"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"printParams", "[", "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"LogLogPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"1", "/", "2"}]], 
        RowBox[{"ASDShConwRP", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]", " ", "f"}], ",", "0", ",", "0"}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", "10", ",", "5000"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "25"}]], ",", 
         RowBox[{"5", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "23"}]]}]}], "}"}]}], ",", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Directive", "[", 
         RowBox[{"Green", ",", "Dashed"}], "]"}], "}"}]}], ",", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<strain sensitivity (NSR)\\n/ \!\(\*SuperscriptBox[\(Hz\), \
\(\(-1\)/2\)]\) (log scale)\>\"", ","}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2 \
\[Pi]\)]\) / Hz (log scale)\>\"", ",", 
           RowBox[{
           "\"\<single-mode conventional detector\\nparameters of \>\"", "<>",
             "paramSetName", "<>", 
            "\"\<\\nwith factor of two, normalisation issue?\>\""}]}], 
          "}"}]}], "}"}]}]}], "]"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "using", " ", "98", "%", " ", "\[Chi]Thr", " ", "like", " ", "Li"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tla1", "=", 
     RowBox[{"75.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";", 
    RowBox[{"Tlb1", "=", "Tlb0"}], ";", 
    RowBox[{"Tlc1", "=", 
     RowBox[{"100.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsList1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "4.93", " ", 
          SuperscriptBox["10", "3"]}], 
         RowBox[{"(*", "Hz", "*)"}], ",", 
         FractionBox["\[Pi]", "2"], ",", "0", ",", "0", ",", "0", ",", "0", 
         ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0.98", 
          RowBox[{"singularityThr", "[", 
           RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}]}], 
         ",", 
         FractionBox["\[Pi]", "2"], ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0.98", 
          RowBox[{"singularityThr", "[", 
           RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "False"}], "]"}]}], 
         ",", 
         FractionBox["\[Pi]", "2"], ",", "Tla1", ",", "Tlb1", ",", "Tlc1", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0.95", 
          RowBox[{"singularityThr", "[", 
           RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "False"}], "]"}]}], 
         ",", 
         FractionBox["\[Pi]", "2"], ",", "Tla1", ",", "Tlb1", ",", "Tlc1", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"plotSMConwRP", "[", 
    RowBox[{"valsList1", ",", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dotted"}], "}"}], ",", "Red", ",", "Magenta", 
       ",", 
       RowBox[{"Darker", "[", "Orange", "]"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "needs", " ", "to", " ", "use", " ", "SQL", " ", "formula", " ", "with", 
      " ", "added", " ", "factor", " ", "of", " ", 
      SuperscriptBox["2", 
       RowBox[{"1", "/", "2"}]]}], ",", " ", 
     RowBox[{
      RowBox[{"i", ".", "e", ".", " ", 
       SuperscriptBox["2", 
        RowBox[{"1", "/", "2"}]]}], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"4", "\[HBar]"}], 
         RowBox[{"M", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2", "\[Pi]", " ", "f"}], ")"}], "2"], 
          SuperscriptBox["Larm", "2"]}]], ")"}], 
       RowBox[{"1", "/", "2"}]]}], ",", " ", 
     RowBox[{"have", " ", "cut", " ", "SQL"}], ",", " ", 
     RowBox[{
     "but", " ", "it", " ", "is", " ", "a", " ", "bad", " ", "sign", " ", 
      "for", " ", "derivation"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Fig", ".", " ", "5"}], " ", "from", " ", "Li", " ", "et", " ", 
      "al", " ", "2020"}], ":", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzs3QdgFNXaBuCE0KVbEBsqSBFFBa8VFexeUVDsvYOiiO0KFlBQBJQiIoJ0
RQUFkVBE6U1QpApIFQSpoScQQ3bnvfPNMLsJ2b5nZ7a8z/zz603OzJ6NmWTm
zTnfOeuJF+98plhaWtorpfX/d+fjrzd5+eXH27eopP+Pu9u88mzLNk8/dUub
V59u+fTLlz2RoX+wk972huJpafr/pYGIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI4kpeXh4mTZqEbt26oX37
9ujVqxeWLVvmt21mZibeeecdvPTSS+jatSuWL19uc4+JiIiIiIiIiKKTnZ2N
Dh06GFlIz5498eqrr+KZZ54x9unTpxdqe+TIEXTv3h1fffUVZs2aZfzzueee
Q8uWLbFq1SqH3gERERERERERUfiGDx+On3/+GZqmGf/b7XZj1KhRRibSunVr
5OTkeNpOmDABGzZsKHT8woULjbb9+/e3td9ERERERERERJHKzc3F4MGDi3xc
cpG3337byDoKzqHxNUdG2rZq1QqffvppTPtKRERERERElKp27NjhdBeSTlZW
FrZt2+bzc0OGDDEykcWLFwc8x8GDB412S5cujUUXiYiIiIiIiJLe5MmTMXTo
UJ+71P5ctGiR012MyK5du4z38Oeff4bUfvPmzRg2bBi6dOmCzp07GzVMx48f
X2gOix1kTo1kHZKbBCI1RWTuDRERERERERGFb/fu3cb8C6u257H766+/bszR
SCTyniRXsN6Xv3VcCpo4caLRVjIRmdcitm/fjnfffdeofbply5ZYd9tD1pX5
+OOP/X5expfI56XmyNixY+FyuWzrGxEREREREVGyGDlypLGuqzyHH7tLHjBn
zhynuxiyvXv3GhlBnz590LZtW0+uEywTmTJlitFOxsRY9U4tkq9I9iBfo/37
98ey+4a1a9eiTZs22Llzp8/Py5gXqUMi/22s9yfv99h+ExEREREREZF/hw4d
wgsvvIAVK1Y43RUlZK5Mfn6+8e9WzhEsE5HM4/nnnzfa/fHHHz7bjBgxwvi8
r1qmW7duxZIlS0La16xZE7D/0neZsxNqfRB5X5LXSN981WAlIiIiIiIiIt9k
vsj7779v2+tZeUW4x0QyBmLBggUhZSJSk0PayNgMf3OEZGyGda5j59D88MMP
ePHFF0PaP/roo4B9/vLLLzF9+vSw3uekSZOMfo0ZMyas44iIiIiIiIhSlWQN
UidDxj7IGANZwyRWJNP4+uuv0bt3bxw5ciSsPkrdDBmnEW4uEkomInU4JAuR
NtI3f/Ly8tCyZUujnbyPWJg6dSrGjRsX9nFSW0T6JXOGiIiIiIiIiCi42bNn
F6mn2rFjR2MNmsOHDyt9Lcke+vbta7yGZByh5CKSh0idDKteRrhjTELJRKR2
h9Xm22+/DXi+9u3bG+3atWsXVj9CIWvujho1yufngr1vqTsSah1ZIiIiIiIi
IgI6dOjgd60ZqU8qz+kqybP9J5984slFAj3rR5uHiFAykYI1R2ScRiDdu3f3
tFVZa3X16tXG/B1f42Aks1m1alXA46UGrtQgSbS1gYiIiIiIiIicsnnzZqOW
57Rp04wxHFatzoL7zJkzlb5mKFlHwewk0jxEhJKJWLVTZZf2gVjjXGSXHEOF
jRs3GvmTnFvmMBXcpfbI22+/7clK5H/LejM7duzwHC/r7Hz44YdGnVgiIiIi
IiIiisy///5r1Pd8+eWXPc/+rVq1Mp7bVbJqhMj5JfsomHmoykNEKJlI//79
PW2CrfUycOBAT9vff/894n5ZZM6LrO/rb6yO7OPHj/e0/+yzzzz/TXr27GmM
LZkwYYKxdhARERERERERRS87O9sYe2A9l/fq1Uv5a0g9ETmvnF/GSEj2Ibs1
FiPaPESEkolY+UugdXgtQ4YM8bT95ZdfoupbpHJycoz1huWfSW/vXllsWAr0
Ot0ToshNngwMGAAsWuR0T4iIiIiIKES5ubnGvA15/pf1Vg4cOKD8NQrmIjJX
pGAN1mjzEBFKJmKNvQglE5F5K6GOKYkngcahcOfOnTt37ty5c+fOnTt3/zul
rkWLFnm+D1asWBGT15BcROaBWK+jKg8RoWQiw4YN87QJlnMUnGezfv16JX20
g/RXasLKXvDfw9kjPS6a/fC8ecA77wDvvosc/fvP7td3anfia52q78mOfv3b
pg2Qlmbsh49mwBs2bEio96TinNGeI5Lj5Rip/RTr/8bc4/caT9b3ZXe/tm7d
arym1DBLlPek6nzRnCeSY6VmnBwnY4Lt/G+cqnu8XuPJ+J6c6Je8pvzNW8V5
KHVJXvHss88a3we//fZbTF5D8g8ZI2JlDZI7qFo/JZRMJDMz09Nm/vz5Ac9n
1UCRPZFqmha8jiO9ph37WTBxIjBmjHwzOvP6DkjGn7vx+p5s6de+fUCVKmYu
Uq2a8ZpSSyhWYvGeVJwz2nNEcrwc888//0T1uhSaeL3GoxWv78vufh08eNB4
zViub6f6Pak6XzTnieTYw4cPG8dJjT+KvXi9xqMRr+/JiX7Ja/71119KzkOp
7fXXXze+D1auXKn83AXzEKkfYq1HI/NZXC5X1OcPJROR9YatNj/99FPA873/
/vtGO/maJJKEzkRSsJZIMv7cjdf3ZFu/PvjAM1aEmYh9xzMTsU+8XuPRitf3
xUzEvvMxE0lu8XqNRyNe3xMzEUpkr7zyilFPRMYNqXRsHmLVWFWZi4SSicjv
eVnHRdrIuryBWOvxSK3VRFLwOpZxMdGewzGyvs6sWUmfk0T63yiexet7sq1f
+j0uTjvNk4lkKVrL25dYvCcV54z2HJEcz0zEPvF6jUcrXt+X3f2yIxNR/Z5U
nS+a80RyLDMRe8XrNR6NeH1PTvSLmQipYP0O7N69u9LzFsxDjq0fUnCd3n79
+kWVi4SSiQirzmvnzp39tpEas9a5FiXY+hHx8DfeqMl92CefmPVFZs92ti9E
kZC1Z45mIoeee87p3qQEZiJEatiRiZCJmQiROsxESAWZSyLfA2vXrvXbRn4/
hlMTtWAe0rt3b6NmybHkY1YuIm0jrbkaaiby559/etplZWX5bLNw4ULj8+3a
tVMyr8dOSZGJiMWLPTVXkUA1bokM8nOjbl3jWtJKlQL+/tvpHiU9ZiJEajAT
sQ8zESJ1mIlQMBMmTDByhxkzZvj8HSd1r9u0aYNJkyb5PcemTZuM+SStW7fG
kiVLgr5mwTxExmb4ykMs8jnJTKStrNEbSS4yZ86ckDIRMWDAAKPdyJEjfX7e
mtPz+++/h90PpyVNJiKk5uqwYeY8GqJE89135rUktUWeeMLp3iQ9ZiJEajAT
sQ8zESJ1mIlQMJJjWHlBhw4dPGvtappmrFnUvn17TJ06NeA5vvjiC885evTo
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
I3MN5E2/9174b5wiktSZSHY2ULWqmYlUrgzs2WN7F1zX3gjt+7HGvzMTIVKD
mYh9mImQCtvxD25GAyzH70U+9ytm4xwc5xn7kYPg69Q+gxZG+3qorJ87tje8
ufrWSd+2w3tfulbfjsDHHyp3HwZKr/Guu9tiVqFPMxMhIkuyXcf37O+E9PEt
kFYu21gCdNSo0I5bvx4oU9bMQ86ppeHzz4Fbm2p4+hkNv/wSXZ8uuVQzdqtE
ZMKQv6d//bW35uqhQ073KOkldSYiPv7YO1akfXvbX15qsLrqNzC+t5mJEKnB
TMQ+zERIhcdxO5bgV7+f/waDPGM/3kHboOf7GxtQG+WN9m3xqMKeFvaTvp0D
c678A7g/+AHVZ3jzkDOKrrnLTISILMl2Hbuh4bq5GtKOLnNxXDlg+fLAx8ij
f+MmZh6SXkwz/n348OgjAJlv0/YlzTP25PEnEnA9GrnvkkKz33zDOiM2SPpM
RCac1ahhXpxlygCbN9vzunl5cPftZ9Rrlbqt2shRzESIFGEmYh9mIhStndiO
u9DYGCOSDf/F9+7D9UfX2i2LtVgZ9Lzd8ZYnR/kF5vwUWaN3EsZE3edt+na/
3iNrPZnqOANjMTbwQc2nevOQEqv1N160JhkzESKyJON1LFHGWf30H4NV9iD9
w1dRvda/RolHf+Q27vobNLz1thb1mjUWmRYg822sPETGoJSvoKFHDzXnt5XU
ttQSMM9JQEmfiQhZ79kaK/L007F9Lf3i1r76Gq4atb3r2MjavjXrYPXy5cxE
iBRgJmIfZiIUrbmY5skursN5OIK8Qp+XtVqG4VPcjSaeuqsP4qZCbaZigrFO
TUGHkI3/4DSj/UU4GQ/gBuP49/G/iPsqr/GJvlVCRSMLKYHieA2v6q+UHfjA
gX/o9xh5RzORg8A433XxmIkQJY68vDxMmjQJ3bp1Q/v27dGrVy8sW7bMb9vM
zEy88847eOmll9C1a1csDzJIIlmvY5f+M73qX5eamfLgJ3DddbBt7op8yc86
25uHNGioGWvR7NgBXHiRhp9+sqcfMSFr9SbkYjqJISUyEcnXGjY0M5GMDGBl
8L8/RfQyEyfBdUHDwllIrXPh7tMXrmuuxfZ2bzATIVKAmYh9mIlQtPZiN2qg
tCcXWYc/PZ/bg13GGjQ90NFYU6YD2nja/YRxnnav4WkMR78i5367QPsn0Czq
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
YW1Yx+zEdjyO2z15xwj099luG7Z42ryIR0I+/zcY5DcTmYjRqIMK+AzdlWQW
mfp2Cqp5xoY8hAf1d2fjWN839RvcNM3MQzL0m95VsatHwEyEIhFJJiK/H8Op
iVowD+ndu7dRY/VY8jErF5G2kdZcDfX9yH2z1S4rK8tnG6nPI59v166dknk9
duJ1HNhufav+pPeR7IYbwitrICVGJRPp1Cm6fshjcrEM75o1N9wYfcZiO5n4
8913Rs1V9OgBZGc73aO4w0zEBynWc8YZ5gVYvjywY0fwY+R3T8UTkH/8yUbt
EF9CzUS01WuM9XuJyDdmIvZhJhJ74/Et7kCjkOtwyBiNi3AyaqC0J+9ogGpG
jQ9fLsapRhtpvwYrfLY51jr8aRxzK/5T5HM5OOh3nd5IjNc3yULqog6m65ut
pmwE0g8cHSOiPwN+5nttYVWYiVAkZD2EcDIRqYkt80lat25trB0WTME8RMZm
+MpDLPI5yUykrazRG0kuEs77GTBggNFu5MiRPj9vzemR31OJhtdxcGP0R7K0
y/T99M1Ia/aDUeIgVAMHmpnIggXR9UHKlFp5yMuvJPAcGrmuP/sMePddYHls
f9clImYifgwe7A0m27QJ2lxbucoYI+Lu/L7fNiFnIvPmw/3cC2F1lyiVMBOx
DzOR2JM6qFLv43sEnjNvmYWfMQi9jWxiCsbjbJQy8ouOeNFn+3Zo5clO7sf1
IWUvkp1I++54K6z3EopD+vaVvhUkdUPy9M1We/Sb7VJ/eufM3BH7PIaZCEVi
+PDhngxh8uTJQdt/8cUXnvY95G/CAcjYilDzEMuxuUi44zPCeT/yu6dLly5o
2bJlkdxj7ty5xjlGjx4d1uvHC17HoXl+1yakZ1VF+r+lkHb5L0bWEYqxY80s
Y+vWyF9bHpGrnqyhTFkNX34Z+XnihkxA4ho0PjET8UN+vp93npmJlCgR9PtH
mzXHyEQkG/En5Exk+JfG/Bki8o2ZiH2YidjjffwPl6E6DqHoeNZsHMBh/TP+
vIXnjfxC1n1Zi6KF6GTMh3zOykVkXkwwMhenFsopqZtakMyTOQtnGuNCJiP4
s11MnfedNw+pNsOWl2QmQqHasWOH/kw31pirInmAlSHI2I9hw4bhxx9/1B9v
fBdYkLVrrfaypm0gmqYZNUx79uwZUh5ikbaSoXypPyhqISzIEc37kdeS3KNN
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
jz8unhVXG48HR9t60PH369CrdyXQ67FzqcGVYo722DxqVn8n7d1wWjnOTHK+
/nqQWAMpKrAm4jtHj/oWZ8qaCBMtRPJ9fOHcBUpPSFd0k92Td9O6vusoM031
rcby4c8MV3xOul/TvcAzcPrX0x37QSyO0fMy77yaywQxOkbt1tvWE70sGuYT
dSjRwW2brld1VXxXNOC7MvjRwUosEQwajGaID4K2AvD/s76f5TD41ECf0Wzv
jL2OfSIHC/xpVvdYreg2smGdRvr+dNo9aXcBS1yYqNjZo2qAw8ULFx3LNEte
m0ypm1IVw340TiaedCzX24l9J5R9gdysXKWtJ4OWpAFtyVM7rJOvB0WD8mBa
vaP8i/mG7bQ4LQA9zKhtvj0HG/LdGLW7kO2Mc4FG5qmd7K+Ec6Rfv2X1Fkra
l0TxXeMpNiZW0URibDFUylaK3q/xfsF9+qjHZUj/Rk8eE1aCJog56Xt0K1VS
5qWuc9XX6W57e7zzx7IY8d81dKMYN1amGmL9p9nfUK1/W9Gfi07TqJH5NKJb
Gn3b8SC9V/covfJ6Lj0mDnLLLaT4jfirkwTT4CZRtizRVVfl0U035Snay733
qvoLDHlnq1dX7ZVXiGrWdNo336i6jGY//6zGDmkGHxhoNbLBJ2bIkIKGFH/Q
ctzZvHmqvmNk0H2MbO3mHFqy9STN2JlI03YmOHSivbtP0pCfr6HeP9moXfvi
9P2hr+ijM99Rjcya9Oy56rQkKUHRkmDVs97wmJP0u/N1FK0JNunsHPc+HflX
0z1591H6yXxH2y5Z8dQjawCNOjuV5pxZSRtO76WkjDOO9aG2aIjrijZYE7GO
SNVE8nLz6eg/2Yod2p1J25edpC2L0mnxmFRaNDqVZvx2TPELxO/brw33Uu+P
N1Ln11ZR66cXU/OH51KTu6dTo/ITqeHVo+nRR5HnlKhqyQ2GY7JHbVuV33TE
u7SxuY7J2gvra+tL423jaWXZ/ooPY8rsrfR2nlP7eFHqP0aW8K884O7DMYUW
1kR8Z/ny5d4bSbAmwkQLheU+zs/Lp8x/M+n4nuOUtDqJTuw94Vi3afAmmt94
Ps3830yaVHMSjXl5jKKToDZO/4r9He3go2L0/N1i26I8SPP75Bu2w741oM0Y
tf13p5q0En02aifX8Bl4/0CP7bpc2cXRDnFERvvcNUGNjD1/6rxhO5wvjUnv
TzJsezpJfeeC/C9G7Za2WerYZ+/yvT22i7s5ztEO2xjtE8cE0FGM2uEzaIx+
abRhW5wbgDrTRu3gV6SB78BTO3x3GvN+nGe4T1wTTzzxBF1vu96wnaz/DfvP
MMO2msazeehmj20al29M388cTmVpNNny5ziWf/PsN1QiO9bjHLnTDxMdbcvt
vN6xvOSZS6nsoTJUKfshqpb3AsWt/d3R7rsnv6OXfn6J3vj+DXrv4/foo7c/
ove+6UrPN1tHT36zmxqXVK/1tsXa0i+lfnHpJ2K/NZ3jaZvxtf6gbZfqg2Iz
vtY/t4127LOmzfhaL207pbS7y2Z8rb9gW+rY5082NY69TWwbanRLI2p4R0Oq
82Ad+r7y9/TJkw3IVn0h2V6bQ9VKLHRs/+6n71L1ZtXp+Q7VqGq3Z+nxIZWp
9Ih3qdikmnTZW+Md7d76+i0qe7AMXXayFMXmFnf9fvbcR5/ZxijtWl7R0uN3
CKvw3EjHPh8Z9bDqO3SuBF2VciWV23U9lV5ZiYpNf4tstQaL76Cr0q5JuSb0
wfsf0FfVvqI6D9RR/q4T28/xuV+xzTc8R7faDivtrrcdM2z3lm26Y5/f2oy1
7hhbvtLuMfG7bdSusm2TY59G7f5nG+Zo96ZtpmHbcrY0pd3NtmTDdq/a5jr2
Wcfm+Xe9pa2zo92TtrWG+3zItlNpd6mXa/0Ll2t9smHbMrYMpd2dtgOG7V60
LZE+z6/UvFg3t9aw+ABFl4RVL7XaYzvYw1ccUNrdVPqsYbsPL/nTsc/PLpnk
sd3PMb3o1uuzFS302RsSqEmJvh7t1Ws3Ke1gDS4Z7LFdrVKjHO2qXbmFfizW
lxrFqOt+umSAksNTs1fvTlS01/88kuOyXG9fXjfbodN+Vm6By7oGJQe5/P10
pUylXfV7kgz3+e6tmxz7rHvVGLdtGpYaQv+7bKzj87x+zRrH50S+UflctrJ1
ojtsicr3fbXtpOG18Z5tquPa+No2wrDtJbZcpR2uZaN2L122mipVInrjDfHb
+sQS6vbWWhr9y1468MwcyrOp4kduye1Ev7RTRWgBolEvI1UP6e52NMkUJVgT
CT2siTDRAt/HTuBngHfvmNfDNwK+D/BRgd/EniF76FSZU8oz9mLJi7Sq0Sol
/6vmxzGrlurfgfyy8nwf/hy/PfWbw09kwL0DqO8dfRXrdWMvhw8G8p8YPfuh
6WjAN8ZTO9QAchy7u3FuFvjeAHxmo3ZjXnFqIlr9IE/m0ETmeNFEpPy7UaGJ
TAiPJgLmjzGeT874ZoZjn8HQRGBYD7LyC+p/Ta9tSj9U+oE+qfEJfdzxK+ok
/mtMP1Fj0Q+tDTSR4nkxbufcDRJ6Otq90PoFj3PzSlSF4u36X+MbGzuWY7+Y
91+WUYpuzL2Fbj5/B3VvM8Gxzyf7/Ydu2lSebl9xG9258A7F7tj2FN22rzo9
N9I57/z26W/pwUkPuNjd06pQmfk16aopX9FXlzs1kXtmVXTsC3bbqlspdtMj
VGxTZbrpeWds3vNtn6erE8tSmcOl1T5Cnzhj972Z+YZDE6n1aC1DXeLp66c5
9nnTxvIe25X8pbWj3Rv/8+DTcfYKKrblUYcmAn3pvun30sNjxRke+ISis0Bz
KVGrP9k++oPuuWGZY58tL29JrUq2cvn+n7atdsxtNE3EndWzDWBNJASayFNR
ook0srnPY6ncz7ZejnbP25YZ7rOibb/S7irbGcN2H9omOvb5mW2sYdtStnNK
u/ttuw3bPWNb5dhnc8Nrvb+kz6423OcDDn3W+LmL+1Xb5wc24+duadtpNUWQ
F332eUmfbWzz/NzF75TWDpqu0T5xTLSDRhzI9wM/j2bFulPjEn3p6Uey6KWX
iL589V9qXmkOtX1+GbX/YAN1/HkPjRh4mLYtPUln0i/QRPGMqkSqxnG99hCc
LsYBqLeL91fFTtELK5Jo+fr1at14wRlhXBGU0WBNJPSEWxM5dOgQZWZmem/I
FHn4PvYBTKXhcHkdodhBSNHHfyBuRAO6gxZbAj8TOX4lbVuaox1yruhjYmAH
5h9QYmiQzwUgLkQfX7Nj7A5HPA70DQ1sq4/XkU2LS0HfoAd5MmhNGhsGbPDY
Dr47GokLEl3iifSG2B2AeBKjdvhsGlt+22LYVouJwXk1aifn9IV246kdfHc0
9s3cV2D9+G/G04z6M5R/o5YTQLwY/v6p0k9U3VbdxTpW66jUapLPpVE/NU3k
yPojhu2wXrkORXujdjiexoTJu6mTWNZcWFesbziLpr3RmkZ/0JCaN25Cl5+c
Jm6fP2jKkW2O7V8d05bKb3qZyu2sSrckPEYPHL6fHjh1P91Cd4j5fE16Spyv
6qJdXPcxhhrColWLaML3s6i1sLv2POKxXc0LP9FYe3xa3fi6HtshjyeuZy2W
7bLsUh7bDtg3nKZ8OUuxN+a95VnnOP0KjflyIY14dxZ1qT+IYvNi6fKzV9AV
Z66k647eQNf/eyPdfeZRqni6Mg3uuZr6Vp+l2KtjPqJn/nqVqs74P3ppwvv0
2shP6cMVrei7DUOoxfjV1KPqLMXavjGWGnzXh5p+PIR+eXcktf+/P6jPp5sc
sTpxH6xT2nV/dhZ1rDKLuj06kaYXf49m2d6gabE1qW/zVCXWp2v9VGW9J+vy
baIjLqjTM3Op7WPivD9S0Fo9s9QRU9Tyrd1u22jW/Pt0pV3zumcM2/1SY5tj
n79UW2XYtlnTfKVdi0+TDNu1/PSwY5+Ovj88i5re52qNq6x0xEz9+ML2Autl
++HTM0q7Oh9nGLZr+N9djn02rrzMY7ufH5zjaFe/RqLhPuu9k6K0q/XtBcN2
jZ5a6/w8VTcZtq39xTn189Q85nZ9k3tmUIMKk6nBy3879tnkkYUubZrdMYma
VphEjW6eRA3vmOWIR/vuqd3KMk/2efVUpd3Hb50zbPfDw2sc+/zhwRWGbT98
J1dp9+WLSdTomtH049Xu7aOHdjni6Bpc94fHdj+Un+5o99qtu+nbEqOp9mVu
2l45nF4x6Sfy1fVzQuonUqf0WPftRD/rlpvi+DyfPLDd0X/9eWxScQbVfT9N
+b7r/e88tXpyoWLtnl+mxMV0fWMN9flsE/X9YjON6phE06YRTVlINH7ySfp9
/FGau+wkJf2dRWczLij1XH4RVlvYexiXSOOhW8gZ79JaWj5eWn6JsLPp2UQl
Ex0L/224iqtMMYawJhJ6rNBEtmzZQq1ataIuXbrQ1KlTad++fZSXp/6K4P9n
zZrlcx4UpujB97GP9BWW5rUVw/jFzp076d9///W4Pj09ncqVK0dyDtYyZcpQ
amqqhb30AeQw7dyZ8pcvV24bjHvlKHhkQhZTUaWyaj9p+UZh15I6zsXwdh8h
F0oGnRT/PUdHxLJEYfvoZaWqySaxz/O0irSh8GZhsyieJjn+qyTMpth2+sR+
jPkH5lPtM73EsiEO6ygM/40U/70m2pS122s0zbGvLsLuEHYXzaS7aSHtkH4Q
vqNkqiL6U11YW/pb9FL9byX9S1/TGeVzfk+ueV0G2s8BbKq0HHHt3SSTs4uO
lJYvlJYfEjZEMvlco2zWUFKl3a3awj59HIlWDn79tbJOfoc6394etk1aniQt
h8nzlzX2PsH2S8uPSsthcuaJ1dLyBGl5qm6bfGndKmm5nAMgRbeNzEppuTwK
PiIt18vdK0xss1i3zXJp3UFpebK0fIlum2XSukPS8iRp+VLdNkuldYel5Yel
5ct02yyR1iVJyw9Jy/XR4ouldXLuyYP2ZTOysmjo3r0u+UTkbeRMxvhON9lt
B7mySbLj0vIUk9uc8LDNTml5vm6bdGndEWm5XHP1og/bZOnayqmdE6TlidLy
TINtkCFMO4/47Fo+kX/Pn3e5zuXfh83Scvmz45zK96385hQ5RrXfDfmaOUjq
70wHUn+jTknrsPwzYTXt22ngPntI2B3CUMNF/l4eJaeOUVd3fJtkx6R1Twor
KexO+zE18MuLSlU4l8rbixeGO3dw81y1mBnDGMCaSOixQhOJi4uj+vXr048/
/qgcC9agQQMaOHAgLVu2TMmn361bN855xRjC93EAYLA8O9ydYAoT3jQRjX79
+lFMTIyLNlIDxVkikTNnAtoc83r5KYY5gjZXXy0tx3wDY3a8Z/yWXMfUDYRV
FvaIvQ1A3Zmpx487dBeYPK98Rlr+rbR8AbmO3eX53lPScvmXda5uG/ltRRVp
eW1p+SzyPEeoLC2vLy2frttGHoE8LC1vqC3My6OTeGksrp/8YsXoxcWL6bS0
zYPSNo2l5RN1x5HnY/dKy5tKy8frtpH1mrul5S2l5aN128jaSwVpeRtp+Qjd
NjK3SsvlKtfDpOXFdduUl9Z1kpYPlpZfqtumnLROnsMNlJZfptvmGmldT2l5
X2n5Vbptykjr+kjLe0vLy+q2uVJaJ+uQPaTl1+m2KSWtGygt7yItvyY312W8
Kd9X8ny5o7T8Zt1xYqR1v0nL20rLb5OW50vLYSOlda2l5XdKy3N124yR1rWU
lleUlmfrtvlDWtdUWn4fqXqE3Ha71PZ1afl70vINum1kPeY1afmH5NRElovz
LW+zV9qmurT8E2n5St1xZC3xBWn5F9LypbptDkrrnpOWfyUtX6zb5pC0rhqp
1+Tt5PwtBtBP8bsE7QXXmJwK2VS1qalTSdV33xUX31bxg9WOqHt38YVzpAzj
GdZEQo8VmsikSZNo4ULVFxqxMvPmzaP4+HiqV6+eQyOBFclag4xp+D72k86k
Dp5RZjLJS1uGMYlZTUSjatWqLrpIbGys8iyIWPDZ/v473L1Q8FaLF2vw/hFa
izymxztP+f2sPLeHj8FwUueAK6XlRj4fmJdqfiLTpeWYS30vmTxHEKN95d1s
TfvxNDZIy2vqjoN9VLfbr9LyLagXUry4Mp9IuvdeypLqWXwnbSPPa6ELVZZM
rn70nrRcnnPP1W0jz1TelpbLfZut20bWxt6Qlg+Sls/UbSNTQ1o+TFoOjecO
u92t2+ZJaZ2sB4yXlt+r26aKtG6wtHy0tPwB3TaPSevkvo2UllfSbfOItO53
aflwafmjum0ektaNkpYPlZY/rtvmfmmdrCEMsi+7/eJFejAz00UTuUfaRtYQ
BkjLn9Yd5y5p3SRpeby0vKq0PF9aDpP9rOKk5c9Lyy/otpHvuZ7S8v9Ky8/r
tpklresmLX+JVD1Dbiv/2n0nLa8jLd+h20b2r/paWg79U9NENuXkuFzn8qyu
rrRc1hjhM1JdMtnnB3Er2u+GfN/i90/7DfqJXH0+8L1CS8Nvg+wrBT84/DbC
3w+/YyFXJbakirHYraomggLxdespdWaUYlsMYwBrIqHHCk0kKytL8QnJyXGN
lrtw4YISRzNz5kyaMmWK8jfDeILvYz/BIE17CYJBWp5xc4Yxg6+aCFi3bh2V
KlXKRRupUKFC5P32Hz9O1LUrUadORIcPe28fYrxpIkWKhg3JmTi1Rbh7w0QZ
XIvXOiK1Fm/YyBXXXJnt4rdrv7DKcKInmjOHaPRoJMQKd++YCIc1kdATTE0E
fiDt2rWjMWPG0MaNG+nsWefbouNijInl0EcYxh/4PvYTPGrx0tGd8zZT6EAt
GyvwRxPRqF27tosuUqxYMWrfvr33Da0C49NJk9T3d/BpDnNdNtZEJBDfdNtt
qiYSG0u0YYPXTRhGgzUR62BNRMfzS5zjsHJrnDoIX4uMCVgTCT3B9hNBHlUt
FqZWrVrUsWNHxQdk165dlJGRoeRYTU5O9r4jhtHB93EAIMBfCzZHILQftWhQ
GwY1S46sO0Kpm1MVw79Rl+XQcqfHfn5ePh1adkipz5qyMYWObjlKKRtSKHlN
stJOqyGjgTm8y343pVLSqiRl+cULF+ng0oPKMbT1yv7EfpPXJqvHXnZI31XT
oO7LtpHbaFLNSTT0iaHU7+5+NPKFkbS45WIXbQF9nttgrs/7/2exeIYt8m74
vFnHA9eLTx44Se1j2it1b8yAmkGoU+OPrZqyivat3ud3Xz3lYE1JSfF7n0EF
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
duQiXG6S55/fc+7JepKcJCcnJ8nn/ZpMJTnLk+Q+53K+PM/vuaF6u4dSbNes
ertPV8/vSbZt8PHp4DX9P4JtfXiDUmuOZvUxOJaJvPqq0d8dWicRKERkInBK
u3btdD2Rsw6vQx+bh5g1Vp3MRexkIvJ7XtbWkW1kXd5kzPV4pNZqIaEfo9QF
JkfcP29JsmHw7+RVV1Xf4/8h+TH9w5OMoVDOZCL+v1S35SvKWGvTBp01fNq9
TCQwL2LbafZP4e9kjJ+purn6Pf4mvSYm+nwjxdZY9T0c3HZJeucpdHfddVfU
mJEGdeuq3a1bK3XsWHgjajkiBVcyETuOBx9yDZ8TfAy6qFTz4BMdtyo1bpxS
3bsrdcsHSn3qUpL84tPVWccfUuQcT0bkLCeq58AEL8K1gv2mzh6lrjyk1O3B
844M3msddnbdYUdrrB4+nP0xgAJGJgInyO9A+RnoK2vOOygyD4mtHxK5Tu/w
4cOzykXsZCLCrPParVu3hNtIjVnzWFJnpZDQj1HyzgavLbVSj7cIbA1vV1U3
+ESSZa59Pw/+vwtJjpVlJhLYpEI1SxLd8yds2w9dzEQ+iJjD8lQabfxS8P+d
Cu7Tqnr/q5Se/2NXJpmI/+XgY7T9cxQLmRcaWYNVHrfddptxfyvrlw0ZIgur
KfXee8EvJvsxmig+nslE7KpQxppW8le/t4KPVy8qNeKMMT4q+D7UpC1K/XWP
9aP1DqWmbldK6uhJprAluO8RZYxjcQHrzgDOIROBE2QuifwM7E4yxlZ+P6ZT
EzUyDxk8eLCuWRJLnjNzEdk205qrdjMR+Xuzud2JEycst9mwYYN+vWPHjo7M
63ET/RgI3uo1rh6P8OXE2/i7BB/dIu61FyTYMHiZ8P02+fmyzURkXo7e/4rg
Hz5OuXkUfx8XM5FZEdtOsHd4Xd/jZ9X/vTpi/6n2m5gyEzmr1NGnPorKRKTG
i/9Z++coNk2bNo3KRaQe66AuwR96+fcAGWMvjyS/K1G6Ci4TKWBZZSLy/Uyb
ptS+fc43DChAZCJIZd68eTp3WL58ueXvuGPHjqnWrVurBQsS3RQodeDAAT2f
pEWLFmrLlmQD0g2ReYiMzbDKQ0zymmQmsq2s0ZtJLrJy5UpbmYgYNWqU3m7a
NOvB3+acHvk9VWjoxyg6wctBYGbwr3/dg4/2wcdzwT//07i/DrxlvYt/bMQ9
dIJltHz/q/TYkKrrq8c9/CXBscYEj/FK8iZmlYlcDO73meoM57+Tb2p57uDl
2Hdv+vuFpFNP5N7qdt6ujH+btcHfxpjPZDQ2uH+D6mPcb7+JqTKRwB6lTj9w
LioT0fOPjsVvW0rOnDmj6tevH5WN3FC3rjr++uuyuFp0LUap0Si/2yuTDJhC
SSATcU9WmciaNUa22b8/dVUBRSaC1CTHMPOCLl26hNbaDQQC+u/snTp1UkuX
Lk16jIkTJ4aOMUBqtiUhYyvs5iGm2Fwk3fEZEyZMCLVv0aJFSbeV3z09e/bU
tVNic49Vq1bpY8ycOTOt83sF/RjFRNZEkftwXQO1+lZN8hD/k8aYCn+iS9FJ
o86Gzjq6Whx3R/D5tsZ/+x+pvt++QVnW8fD9QqUcu5FNJhK5pkqquiYJnclw
P2EnE7ls5FG6jd9Ko3apv7oea8Tn5+9Qfb5aSq+zY0eqTMRfZpGJIERy/sga
rPJo3LhxeIOKCqVeeMG4v+rRQ35w89dY5B2ZiHsyzkTOn1eqVy+jz27dmpvG
AQWGTASpyNrnkbmIPNq3b6+eeeYZNWbMGHXkyJGUx5A5yua+sqZtMpK1SA3T
gQMH2spDTLKtZCiTJk3Sx0hFxrfMmjVLj4GRfMNsn7zX8ePHq4ULF+p/J0t0
Lsk9ZHxMv3799Dn79Omj58usXr3adpu9hn6MYuL7cfTatlGv/SxJJqIi1qn9
avxr/h7GujMiqm5obE3Os8nXmzFllYlMj6jR8WTqczkuIhPRY3Bei3hMNLIQ
+Qylbomuz5FGiUFZuzh2TWQZ1xI63xibx4n4fP1/DT5GGT8Xet7QH401ZshE
UmvUqFFULlKjRg3j3xAuXpTBlkoNG2bcYx0/Ht5pxw6lDh40apGgJJCJuCfj
TET+3XDVKvkHS/omUI1MBHbI9Xbv3r1q69atepzIoUOH0v59t3//fl2Pww7J
NDKZAyP72MlDnFJZWanfl6w/XF5e7uq5c4F+jKJRVT0WZKj1y/p+PUkmIvfN
oZwi5rLlu0+Fa+gF/ypaVaf6frtZzDkm2aubkU0mIjlDZCbhushMRLKi+TGP
fxjrxvjuNtaLCaywf2j/o0a2Ekvm3ui86n/sHSfy8/U9ZGQh/t7GmBOzdgyZ
iD1Se6t27drR69M0aBD+fR358yq/DwcNMnKSgQP59+gSQSbiHmqsAs4hEwFg
oh+jmOi1W+tV31dfjHnxgFFHM6FjwX1rhO/1TXruTfPoTX2/r77nvklFrTeg
xzjYmN+R1TiR1yMyiVapz+U4u/VEPjbGiuh2Phr8c6rpjZeD294S/N9P4l/y
v1B9zprKVs2PlHNnepKJpEvWpY+twdq1a8xEM6ktIrVHevc2cpHIOTUydmTP
HuoYFCEyEfeknYlITnnuXG4bBRQoMhEAJvoxiomMBzDvhWX9Vhnf4e+fuG5q
rFBN0G9FHHNA/L1/1Hoq5jiIiuB+TeydJ+1MRKYmHKred2vEGIjf2DtffAMy
3E+kUWNVfajC6xx3TtGkecH3820j84l9yHcQyoGGpW5iyhqruxJkIkeNNsPa
qVOnVL169aKykTp16ugxk1FknP6uXdH1V6dONXKSnj1l4Tp3G46cIhNxT9qZ
yObNSnXvrlQBz/EGcoVMBICJfoxi43/RGL8Rykb+xRj/4W+hQnVXE+47NOJe
eq/xnO/nKr6W6ifhtV/MsRqBGdX1M2xINxOR4wZeNXcO7le/OhP5hr3zxfL9
LuLYj1Qfz+Lha2yxczqZiDLGzpjfQbLarjL2xvdwsD1PWD98/1n9nu9Ofc6U
a/GeVuqjNifiMhF/r+D2b6Q+fqmzqsHapEmKQFByEJlPI7lIZI32o0eNP+/f
b2QpKDhkIu5JKxORuj/9+hl9bt263DcOKDBkIgBM9GMUpcrgvW3wr4D+4C2Y
7/9FzIlpnWI/Gdfwqept+wb/XF4978OC79fV992fVTqnkLoV6rj1trHSzkSe
MtYSDv25TXh/ddjeOUM+NI4XOtYLwbb/1PohWUScNDMRqXkS2n5hgo0+CZ7v
P5TlOj6h4wyqPk7w+5F5UMmkzESU0rWuYjMRvWZQup9nCWvYsGFULlKzZk1d
oz0pyUDOng3/Wdb0lXs2ecj9W4HX6CpFZCLuSSsTkXo+0q+GDw9eQPlugFhk
IgBM9GMUjeBfEf3drF+SuRKyxqtezzW2zkgM3/erxyN825inEViQ4JgzorMB
PZ7EpnQzET0e5GDEE0eC+15dnd30t39eIWu3BKalt0+UdDORlhHbJ/inSj3G
pkWKA5VHZFt9k2+aUSbiC/7fl1K0AXFS1mBNZd8+pWbPVmrAAKWmTAk/L//G
XVZm1Cd5910p/J6bN4CskYm4J+25M1LH5zBBL2CFTASAiX6MonE2eA98o0pY
y9P/sr1xFTK2JFSv47sq8Xyb88Ftrqze7nZjzo5d6WQiun6IjI2IWdPWP6T6
GNcrnVPYcqF6DR2LOqa2pZOJ+MJrxshaPYnW5fU9GDzWqtSntqr3YiWTTCQw
NXjc76RuA6w1bdo0rgZrT6kdko7I+7zt28PjR2LX+5X7vDNJJmLBVWQi7mHd
GcA5ZCIATPRjFI2z1ffAs6xfDiwOvn6NSl1f9EBEJvJw8k3lXj40n6M8+bZR
bdlhMxOpDJ7jB0ZtDyv+x6rb+SOVcvyL3v6vxueQlRP2M5HI2qgJx6YEb2+r
blC26r5GrZe8M/F2iT7fSFGZyMfVudYjqduAxBLVYD1y5Ej6B5NxJjKGRGqN
TJ4cPadm8GAjJ5GxJVJDEnlFJuIeW5mIrO8kmSKApMhEAJjoxyga1ZlIVQNl
mU/IGi2J5tbEbXtX8nzFFJhsv+5nyOXgfq9ErKPSO/xSKBMJ/nU3MDd43G9W
H/+uRA2ortfxqeA2jYJ/3J1gu5PB7ZoGH8+m0U4rvupsyWz7y9ZtCuyJmDNz
tTH2Jo7UfFlrjM1ImplE8I+NOLfkF1Y5UJLPN9LO93eqo6uP6Xk7vjuqt+2X
ug1IraysLP0arHbJWjZjxijVrZuRi7z3Xvi19euVGjfOyFHkvhCuIBNxT8pM
5HLwAjhokNE3pJ4IgITIRACYpB9HPubMmZPvJgGZORe8r73WqE0htT38fw/+
9xRjjonvx8H/7a6S1vCMJPfRsq5MyjkmZ40aJZb3/LE+Dm77+eDj0zFr4vyL
MedHaox+8tlKVXmjP1TnNTRe5YHkhw68Uz2vJNgW3y+D7SkLPjffqB0i2YTv
a8bckGzoeixXWLT9JqPt5qOqrjGfx3ePUQvWcq7S8ep6KFcb2+p9rqqeB2Tx
V339fVxfvU0dY1yJ/l/Z/3PB97bB3ucbamNwn6qa8dvJesBwTqNGjaJykRo1
aqhFixY5c3AZR3LggNwkhp+bPj0812Z0xCJQcp8oeYnUd+W+3XFkIu5JmYks
X278/MtYKrs1fYASlUkmIvdJsfdOZCJA4aMfo2jI0PqIOqSB7caYhsD7yvI+
O6lyY56GHbqOyLE0j59Aohqrth002u3vaMyr8Xeuvs9PsQZxKbJadwbOy7oG
azpOnVJqyxb5S6tSqyMWapLsxMxKunePrk1SUcFaN1kiE3FPykxE5pL16SMX
OHcbBhQgxokAMNGPAe/IOhOBbWQi7mrWrFlcDdauXbu6c3KpySo1SeReUebc
+CIKMY8YoVSvXkpNmKDUtm3utKfIkIm4x1Y9EeqvAraQiQAw0Y8B7yATcQ+Z
iPusarDWrVtXlZenUaA4W8H79xDJRnr3Do8hkfk1pmBf1GsDr1hBbZIUyETc
kzAT4bMH0kYmAsBEPwa8g0zEPWQi+ZPTGqzpknkzMpdG5tycPh1+fu7ccFYy
bFj09jIvZ/9+o94ryERcZJmJyOcu452kVg8/k4BtZCIATPRjwDvIRNxDJpJ/
DRs2jMpFatasqZYsWZLvZhkkJ5FxI7NnK7VsWfh56Z9mViJzfw5GFDE6f74k
/72eTMQ9lpnIypXGz2O/fsybAdJAJgLARD8GvINMxD1kIt6wdu1a92qwOkH6
56uvGut6yH3oxYgFoWUdYKnhKmsFS63LEkEm4p64TER+/nr2jF+XGkBKZCIA
TPRjwDvIRNxDJuItTZs2zV8N1kx9ErNY96BB4TEkb70Vfn73bqPGq6yTKv9d
ZOvckIm4x3KciKwx7dQa10AJIRMBYKIfA95BJuIeMhHvSVSD9ciRI/lumn2y
HrD8e/2JE+HnZD6QmZXI/IZImzYpJTVmCzhPIBNxj611ZwDYQiYCwEQ/BryD
TMQ9ZCLeZVWD9cEHH8x3szJ38qRSGzYYtUkWLAg/f+5cOCvp0UOpffvCrxXQ
WBIyEfeYmUil1AOWPK2Afk4AryETAWCiHwPeQSbiHjIR77vrrrviarAuXbo0
381yjowlmTpVqb59jVzk7NnwazNmKDVypJGhOPB39lwiE3GPmYn4paaN/MzM
m5fvJgEFi0wEgIl+DHgHmYh7yEQKQ8HVYM2UjCWJJHNszDEkkbUiZHxA8Gc3
rpZJHpGJuEcykT0LFxo/Fy+8oFQhzSsDPIZMBICJfgx4B5mIe8hECktB1mDN
RkWFUtu3KyX3vwcOhJ9/++3wOsCjR3ti7gSZiHt0JrJggQpIZrZ4cb6bAxQ0
MhEAJvox4B1kIu4hEyk8VjVY69Spo8qlRmmpkLokw4cbucj48eHnKyuNNYCX
LVPq4EFXa7aSibgnVGNV5lldvpzv5gAFjUwEgIl+DHgHmYh7yEQKl1UN1iZN
muS7We66cCF6bRtZ49ecayOPyJwox/fOZCIuqapi3RnAQWQiAEz0Y8A7yETc
QyZS+Bo2bBhXg3WJrHtbiiQj2bpVqddeU+rFF6Pn1MifR4xQ6s03o3MUh5CJ
uEA+25EjlS/4/W5Zu5ZMBHAAmQgAE/0Y8A4yEfeQiRSHdevWlUYN1kxJXRKp
PWKOH9m4Mfo1ny/rU5CJuGD1av39BXr3VlvXrCETARxAJgLARD8GvINMxD1k
IsWlefPmpVWDNR2yRk3w2qJk/dbz58PPy5iSXr2UmjnTmHuTITKRHJNaMX36
6Eykcv165s4ADiETAWCiHwPeQSbiHjKR4nPmzBlVv379qGzkmmuu4XtORObU
mONHFiwIPy/32xcv2j4MmYgLZK3mJUvUJxcukIkADiETAWCiHwPeQSbiHjKR
4jVkyJC4GqyNGzfOd7O8R2qOSB9YulSpw4fDz8s8jW7dlHrlFaU++CDlYchE
3EONVcA5ZCIATPRjwDvIRNxDJlL8qMGaIZlTY44fGTs2/LxkKJG1W6uRieSI
1MN9662odZXJRADnkIkAMNGPAe8gE3EPmUhpWLt2rapVq1ZUNnLbbbdx/56K
3I8vXx49TmTvXqUGDFBq8WKlIq5TZCI5ILVvR40ycqk33gg9TSYCOIdMBICJ
fgx4B5mIe8hESkvTpk3jarD27Nkz380qLHPnhseP9O4dWrOGTCQHZD6TfM59
+0bVxSUTAZxDJgLAJP048jFnzpx8NwkoWWQi7iETKT3UYM2SZB67dik1Y4ZS
ixaFnj5/9Kg6Pnas8kfWJEF2Dh5UavBguVBFPU0mAjgnk0xE7pNi753IRIDC
Rz8GvINMxD1kIqXLqgbrAw88kO9mFaxL5pgGeYwcaawdi+xVVcU9RSYCOIdx
IgBM9GPAO8hE3EMmAmqwOuPC7t3q5OjRSnXvHl+Ttbw8fw0rNPJ57dmTdBMy
EcA5ZCIATPRjwDvIRNxDJgJBDdbsheqJXLhg1GY1SU1WGTvy0ktKbd0aqj+C
BNatMz6v2bMTbkImAjiHTASAiX4MeAeZiHvIRBCpefPmcTVYu3btmu9mFYSE
NVbXrzfGjsh9fp8+Sl2+nJ8GFgKpxdKtm/FZyeeWAJkI4BwyEQAm+jHgHWQi
7iETQSxqsGYm6bozwXt4tWqVUmvWhJ+rqJBChUodP+5eI71u925jLZ+ZM5Nu
RiYCOIdMBICJfgx4B5mIe8hEkIhVDdbGjRvnu1melfZavMuXh2uyTppkWUu0
JJ0+nbI+LZkI4BwyEQAm+jHgHWQi7iETQSqNGjWKykVq1KihFkWsQQtD2pmI
1F199VWlXnhBqfHjw89LjVF5lAp5rwcOpLULmQjgHDIRACb6MeAdZCLuIROB
HevWrVO1a9eOykYaNGigqhjbEJJ2JmI6e1apyOud1GQtK1Nqw4bSGDuybJkx
Vubtt23vQiYCOIdMBICJfgx4B5mIe8hEkI5mzZpRgzWBjDORWNOnh+fUDBtW
3GNGNm0Kv9ctW2zvRiYCOIdMBICJfgx4B5mIe8hEkC6rGqzXXnttyf8cOZaJ
yNgQWXNFxorIGArTxYtKnTuX3bG9RtYmlrlDUlslDWQigHPIRACY6MeAd5CJ
uIdMBJkqC96zx9ZgbdKkSb6blTeOZSImGR8SuW6v5COyTu3rryt18qQz5/AC
udanORaGTARwDpkIABP9GPAOMhH3kIkgWw0bNozKRWrWrKmWLFmS72a5zvFM
JNaMGeF5JpE1WQtN8Jqjtm/P6hBkIoBzyEQAmOjHgHeQibiHTAROWLt2rapV
q1ZUNnLbbbflLh/woJxnIkL66rRpSu3bF37u8GGjLmsh2LxZKak/I+Ndjh3L
+DBkIoBzyEQAmOjHgHeQibiHTAROKuUarK5kIlZkzIiMHRk50hiD4VVHjoTH
ucybl1XtWDIRwDlkIgBM9GPAO8hE3EMmAqeVag3WvGQicq7Fi5Xq2dPIGiJr
snqR1FJ9882sD0MmAjiHTASAiX4MeAeZiHvIRJArQ4YMiavB2rhx43w3K2fy
Nk5EyJo0K1cqVVERfm7FCqXmz1fqxAn322M6elSp3bsdPyyZCOAcMhEAJvox
4B1kIu4hE0GuNWrUKCoXqVGjhlq0aFG+m+W4vGYisWS9mj59wnNV0lzrNmuS
0bzyirHOrrQj+Nk4iUwEcA6ZCAAT/RjwDjIR95CJwA3r1q1TtWvXjspGGjRo
oKqqqvLdNMd4KhMR+/cb9VilnsuePeHnDx1Sqrw8d+eV73TAgHAeI+vlfPKJ
o6cgEwGcQyYCwEQ/BryDTMQ9ZCJwU9OmTeNqsPaUWhhFwHOZiOns2eh6puPG
GVnFkCFKbdjgzDkqK5WKzCcWLjRqnOSovgmZCOAcMhEAJvox4B1kIu4hE4Hb
Tp06perVqxeVjdSpU0cdkXVJCphnM5FIko384x/hmqxSg8R08KBSa9YY40vs
juvYutUYi9K9u1KrVoWfl4xE5u/kCJkI4BwyEQAm+jHgHWQi7iETQb6UlZXF
1WBt0qRJvpuVsYLIREySV2zfbowhMcnYDnO+S/C7CZG6rRMnGg8ZYxJ5bZ4w
IbzP9OmuNZ9MJLHAe+/nuwlIU+Cf+5U6fz5v5ycTAWCiHwPeQSbiHjIR5FvD
hg2jcpGaNWuqJUuW5LtZaSuoTMRK8Lqra39IHiJjP0xnzoRzD3lE3jt98IFS
b78dnZO4oKAykQsXVGD3HhXY90+j1kqsc+ei5zZlwT/yJeV/obsjx4KLgn3M
9+D/GT8jeUAmAsBEPwa8g0zEPWQi8IK1a9eqWrVqRWUjt912W0HlCwWfiUSK
vEeXeTDB96XefVepbdv0PX5OTjl3nvK3baf8T3dS/me7KP8znZW/fQflb/Ok
8o8aHd5u+QpV2aK1OvLHR9TlDs8Y2z3V0dh38JDoY+7dp/ytnzCOI9t1+rvy
P9FeBRYt1lmEv2Ub/efQOeUhx2z3tN4vMGVqZm/m/Hnl79tf+e76rqq64Wbl
u+de5fv5g6qqwa3K99AfVWDPXmO7ixeV7/avKXXkaKYfW4h/7Hjlu/d/lPL5
sj4W3BfY+q7yfeXrSp085fq5yUQAmOjHgHeQibiHTARe8sgjjxRsDdaiykTy
QHKCwNRXlO/hP6uqf7lCP3zfuVsFpk1XgS1bwxseOqwuTZ+hjv3fb8PbffWb
KjB5qgqsj6kZe+aMzjUkK9Dbfekryt9/oB63IfOHAm8uU/4x45Tvpz8PH+sP
f1aBWbP1a4Fdu9N/H7NfV1X1/13nH4GZr8WNDZE2+r57t85lJHuRc6oPs1sH
KLBho6q65T8dyVaQP/pn8Uf/6/p5yUQAmOjHgHeQibiHTARecyZ4H1u/fv2o
bOTaa6/1/M8pmYhDKipU1dV1dVaQaB6Injuzfr26/NlbjO1aP5H8mJWVqiq4
rTpm/XslMGduKBPJZv6Cf1CZqvpULeX7XiP5gUi8YfA96pymRu3sM5FAQPm+
/X19P13yfD7l7/hsvluROfku7/iGzvfcRCYCwEQ/BryDTMQ9ZCLwqiFDhsTV
YG3cuHG+m5UQmYhzfP/3O2PMxp3fsXzdrCdyuVkLI8uQMRLJHD2m/I89nvDl
wPwFoUxEHTiYUZsDr/1D5yFVN39OqdOnU2+/d5+quqpO1plIYOJkVXXjzfbX
Cipmwc9RxvwUMv/4iXqckZs1V8lEAJjox4B3kIm4h0wEXteoUaOoXKRGjRpq
0aJF+W5WHDIR5wSmzwiP2/jn/rjXQ5lIp7+Ht4udNxPBP2KUCix+I/H5ss1E
Tp5SVXVuNMasvDzW9m7+vz+XdSYi84YKemyEgwKvziz4TESPaar/72n9HGWL
TASAiX4MeAeZiHvIRFAI1q1bp2rXrh2VjTRo0EBVWa3jkSdkIg46f15VXXmt
kTH0Hxj3cigT+UljPUZCb5ckF/D96rfG+sMJZJuJSI1Xvf9VdXTdVLskx8km
EzH3D3ywLaP9i43vZ00KPxMJ8v3xEV1zxi1kIgBM9GPAO8hE3EMmgkLSrFmz
uBqsXbt2zXezNDIRGz46bty/m/MCzp5NuA6tr8mvjPkzFveGkom8/+pMdVnW
mvnL34ztbv2y9TlPnNTbJJNVJhL8vqtu+qzRhp8/mP6+Mu8lw0xE1siR8SlZ
r+Ura9UkO0aq4yd7XfqDfKYHD6XXpthjpmiDv2yo8R2kk4lk875iX0vV79P4
jvyjxxg/i+VHbO+TDTIRACb6MeAdZCLuIRNBofFqDVYykQQqK5W/Ry9dz0Pm
sPjHTTDWxn3yKVVV79/0OjJWpM6kzik+VStuG8lEDrdopSpXvK0CCxaG589s
fTfuOFJ7VNb5TSabTCTwzvrQvv7Oz6e1r95/wqS0xpZEklquttYpCf5M+l8c
oXw/aaxru0q9Fn/TR0Pr1Mh3E1i1Jrz9sY+MY3/xdmMt4f/8UvThhg1Xvm82
VFWf/4Kuh+sfMMiicT7l795T+f7U1Pj+u3ZTvq/faYznsXq/5jlv+y9VdV09
5bvvfv10YMarOtPyN2uh36vvgV8a6wZVk/WB5H2Z34FkTL7/+Wno4R842Jn3
lap9wc9Q1l6WXCzwz/3GPqdPG2tAt2xjjP34/j36s0i1XnJgx07j53n6jKTb
OYVMBICJfgx4B5mIe8hEUKjKysriarA2adIkb+0hE7Hmf6K98j/fLe75wIq3
9borCTOIs2dVVa3PGFlD2dColyQTOdXoXnVJ7q2l/kLdf02YSfh+/ZBSly4l
bWNWmcjUV8KZyNAX09o3K4GA/nxS1hI5dFj5Gv1AZwWBNeuin3/w//QYlarP
XBediQTv2aUGrH/IMGPsxX/cFn3M4ydUYOmboTWOrTIRf5sndQ4S5dw5nUP4
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
23ZxayHr54P362a9VP9f/qbHrYRe69rNeD52nMOpU3qulK/xA6rq818w2jDy
pehzf1geWqfIanyH/6mOxrE7PBP/eQQ/U8lFQm09eSphvZZM3lda7XvyqfiT
yvpI19UzMpHgz3QiZkYnNXjcQCYCwEQ/BryDTMQ9ZCIoVU7XYCUTsSC1QP61
vp4f4rv/F8rfp5+uhSr/hi73r3K/bpev0Q9CtTcSZiKy3c+aKN///iz1AU+c
NOYxBO+ho9bEqXmlMf7iv76qMxuZw2Cu3xLKTXbvSXxcWW9W3q+MB/i3zyt/
u6dVYOJkfZ8r71+3T+ZzBD+bbMl59P11bM2O2O127lK+e+5Vvv/5qR6Todvx
uz+owDvr9f8my0T0ukH33a/X85HxOoFJU3TW4R87XteKCX0un75K+btUj7mS
rOPvz6mq62/SuU1g2nQ95sL/aDOdVenxNrI28zfuUv5WbfVnprOGW/5TP69z
g+qHOUdF5ghV3fw5XZe36oabjf/9/Bei1l6WfEOOKWvY6p+xJr9SgT17nXlf
mbQv+GfJh/RHIj8Psk/df9Wfi4zf0XmWRS4m55OfHeXStYRMBICJfgx4B5mI
e8hEUOoaNmwYlYvUrFlTLVmyJO3jkIlYkM/C/PdwyQrefU/PlQjsP5D2/V7g
zWWhMSXJMpHA2ndU4K2V2bbcEYGNm/RcChk7IONG/MNH2lrr1zaZ+xK8z46t
x5FQRYXOPuR7MOdupMxETB+Wq8CKt/VDnT1rPHfkqHG8HTv1PJ24+SCVlfoz
kHWDA/ti7rnluzt6zF670yRr8ui1dix+PuJk8r5yzPetbyt/x2ddOx+ZCAAT
/RjwDjIR95CJAEqtXbtW1apVKyobufXWW9PKN8hE3JMsEyk1MgfEd+d3Mt7f
diYCV+g1jGpemXwsksPIRACY6MeAd5CJuIdMBAhr2rRpXA3W7t27p95RkYm4
iUwkgtRRva6evbosFshEvMX3m98b84lcRCYCwEQ/BryDTMQ9ZCJAtExrsJKJ
uIdMJJp/6IvK9/MHM9rX98AvjUxk6ZsOtwrpkpqqVfX/PWV9GKeRiQAw0Y8B
7yATcQ+ZCGAt3RqsZCLuIROJEQjobENqrtql66z+6rfGOj2yNtCX71C+Pz6i
Aus35LChSEjWLPqvr6rAG+nXMsoWmQgAE/0Y8A4yEfeQiQDJNWrUKCoXqVGj
hlq0aFHcdmQi7iETsXD+vPL96H9tZxqy5oyuLbpmnfHfK1fr+rexa9PCHb7f
/8l+rVyHkYkAMNGPAe8gE3EPmQiQ2rp161Tt2rWjspEGDRqoqqqq0DZkIu4h
E0mgslL5BwzKdyuQJqkFk4/xISYyEQAm+jHgHWQi7iETAex7/PHH42qwdu3a
Vb9GJuIeMhHAOWQiAEz0Y8A7yETcQyYCpCdRDdZdu3aRibiETARwDpkIABP9
GPAOMhH3kIkAmbGqwXr33XeTibiATARwDpkIABP9GPAOMhH3kIkg1+TetVWr
Vuq///u/1be//W113333qZdfflldvnxZvz5mzBj19ttv2zrWvn37VM+ePdWP
f/xjfbx77rlH/fSnP1UDBgxQhw8fTrqv1P5Yvny5Wrlypa4PsmnTJrV582a1
YcMGtXbtWv38ihUr0n5/dmuwwjlkIoBzyEQAmOjHgHeQibiHTAS5JLU2pBbp
nDlz1MWLF/Vz0rf79++vsxG5r/3MZz6jZs+enfQ4Ml9FannItt26dVN79+7V
zwcCAbV9+3bVsWNHdfXVV6sOHTqoCxcuWB5D7qMfffRRnafUq1cvlGFcddVV
eo3dP//5z6ply5YZvU/JWGrVqpW0BiucQyYCOIdMBICJfgx4B5mIe8hEkCuT
Jk3Sa7WY+UUs6ed16tTR+UGyTOTAgQPqS1/6krrxxhv12I5EZIyHZCZ33nln
yuvHO++8E8ouRowYYe8NpSA1Vh944IG4GqwyrgXOIhMBnEMmAsBEPwa8g0zE
PWQiyAUZE1K3bl3117/+Nel2w4cPT5qJnD59Wt1yyy06W1iyJPValdOnT9fH
u+OOO/R9cyI7d+4M5RbTpk1LeVw7zHVn5Np1ww03RGUj1113nTp69Kgj5wGZ
COAkMhEAJvox4B1kIu4hE0EurF+/XmcBgwcPTrpdRUVF0rkzTZo00cd56KGH
bJ9b5sbIPo899ljCbXKZiZg1VsvKyuJqsMr7QfbIRADnkIkAMNGPAe8gE3EP
mQhyYdy4cToDaN++fcptf//731tmIlLz1MwSZK6LXQsWLND7SB4hP99W3MhE
TNRgdR6ZCOAcMhEAJvox4B1kIu4hE0EuyD2/3P9LDZCzZ88m3XbgwIFq7ty5
cc/ff//9+hg33XRTWueWuqZXXnml3ldqqlpxMxMRUoNVaqtQg9UZZCKAc8hE
AJjox4B3kIm4h0wEuXDq1Cm9novc+991111q9+7dCbetrKxUPp8v6jmpR2Jm
CL/85S/TPv8PfvADve/NN99s+brbmYipWbNmcTVYZW0epIdMBHAOmQgAE/0Y
8A4yEfeQiSBXnn322ah7/+9///v6ucWLF6vz588n3Tdy3szTTz+d9rmltqu5
v1Uek69MRMi6wvXr14/KRq699lr6YRrIRADnkIkAMNGPAe8gE3EPmQhyRcZ+
/OY3v4m694+sqfHrX/9abd682XJfc/0YefTu3Tvtc0uOYu6/fPnyuNfzmYmY
hgwZEleDtXHjxo60pdiRiQDOIRMBYKIfA95BJuIeMhHkUiAQ0JnDnXfeGXf/
L49atWpZ1hIZNWpUaJthw4alfd7u3buH9req3+qFTMREDdb0kYkAziETAWCi
HwPeQSbiHjIRuEXmjMyZM0e1a9dOffGLXwxlAFdccYU6dOhQ1LYzZ87MapxI
p06dQvtv2bIl7nUvZSKCGqzpIRMBnEMmAsBEPwa8g0zEPWQiyJcpU6bocSJy
/x/7O3j9+vWhbOCpp55K+9iR9UQkq4iVbiZy/PjxuNwmVjaZiOmRRx6Jq8Ha
o0ePjI9XrMhEAOeQiQAw0Y8B7yATcQ+ZCHJh//79tvrwyy+/HBoTEUlqkdSp
U0e/dt9996V9fpmrY3VcU7qZyEsvvaRmzJiRdBsnMhEha/bUq1cvKhuRz6K8
vDyr4xYTMhHAOWQiAEz0Y8A7yETcQyaCXJAaIBMnTky5nWQfN9xwgx4PIevv
RvrTn/6k84Drr78+bq3eZOR+WebjyL59+vSx3CbdTKR9+/Zq9erVSbdxKhMx
lZWVxdVgefDBBx05dqEjEwGcQyYCwEQ/BryDTMQ9ZCLIBclEOnfubGtbWaNX
1qKNJT+bZiawcOHCuNdPnz6tH7FGjBih97nqqqssXxfpZiJf+9rX1MGDB5Nu
43QmYrrrrruicpGaNWuqpUuXOnqOQkMmAjiHTASAiX4MeAeZiHvIRJALkonc
fvvttrb9whe+oNdesfLkk0/qHOCee+6Jer5Lly6qTZs2utZI69atQ7VIJY+4
7bbb9D6DBw9OeM50MpGtW7fqcSyXL19Oul2uMhEhY1TM2ivmQ95nLs5VCMhE
AOeQiQAw0Y8B7yATcQ+ZCHJBMhG5bx84cGDS7aSvS94wefJky9cl67j33nuj
5sFs27ZNtW3bNrSN3BsPHTpU//fzzz9vWbM1lvzc28lEKisrdR5z0003JT2e
yGUmYmratGlcDdauXbvm7HxeRSYCOIdMBICJfgx4B5mIe8hEkAtmJnLLLbeo
vn37WuYEZ8+eVd/73vd05pGM1BmROhpyvEGDBqm33npLDR8+PGobef3vf/+7
nmvTokWLpGM65LWpU6eGcoVevXrFbSP32rJu8Ne//nW9zbe+9a2U79mNTETI
msb169ePykauueaakurHZCKAc8hEAJjox4B3kIm4h0wEuSCZyHe+8x1979qu
XTs9j6ZTp05qwoQJav78+ap37956zoysPVtRUWHrmJJjSMbyzW9+U91xxx1q
06ZNat++fbqWq8wj+exnP6tWrlwZtY/kE4cPH9b/LZnF5z73OVWjRo2oPMGs
4yrHlseNN96ox19Evn7//fenbJ9bmYhpyJAhcTVYGzdu7Mq5841MBHAOmQgA
E/0Y8A4yEfeQiSAX1q5dq/bs2RP6s6wvK9mF5CLNmzfXmYlkGukKBAK6toZk
Ki1bttTrwYwZM0aPRalbt25cTVW5b+7WrVvW78cOtzMRk9RiicxFJPNZtGiR
q21wG5kI4BwyEaD0JPr9ST8GvINMxD1kIigGsiaM5AGSkUT63e9+p0aPHu1K
G/KViQjJoGrXrh2VjTRo0CBUe7bYkIkAziETAQqH1DlbsGCBrrEm/84kc4rf
fffdhNsfOHBA/9tR5GPkyJF6HrIV+jHgHWQi7iETQbGQeTGSBUgOImND7r77
bv3n3bt3u3L+fGYipocffjiuBmuPHj3y1p5cIRMBnEMmAhSG8+fP63X3JAuR
Gvby70DS7+SxbNkyy31efPHF0Dbmo1WrVvr3qBX6MeAdZCLuIRNBsXjiiSfi
6oQ0bNjQtfN7IRMRMk+pXr16UZ9DnTp1VHl5eV7b5SQyEcA5ZCJAYZCabG+8
8YaeRyzk7xvTp0/XfU/qy8fWZzt27Jiea3zu3Lmoh9SuT4R+DHgHmYh7yERQ
LGQ9lltvvTVqLZZdu3a5dn6vZCKmYq7BSiYCOIdMBPA+yTFk3kss+TtH586d
df+LnUMzadKkpPNqrNCPAe8gE3EPmQiKiYyRkL8zjBo1yvVxEV7LREzFWIOV
TARwDpkI4H0nTpxQR44csXxt7Nixuv9t3rw59Jz8nUTGjsgYWqk5Ir/35blU
6MeAd5CJuIdMBHCGVzMRITVYa9WqFZWNyPrFXmyrHWQigHPIRJCp48ePq3Hj
xum/SxaDdN/PoUOH1Pjx41XPnj11HTOZpzJ37ty4OSy5JnNqpP9JbmKS+iLN
mjWLqiMiGcny5cuTHot+DHgHmYh7yEQAZ3g5EzE1bdo0rgar/F2u0JCJAM4h
E0G6Tp48qe/DzXvudOdneE0m72f+/Pl6W8lEzPocR48eVV27dtW1Tw8fPpzr
Zoc8//zzqqysLO55+fuItEnGiHTs2DGUjSRac0bQjwHvIBNxD5kI4IxCyESE
1F2pX79+VDYitVcK6TpAJgI4h0wEdp0+fVrNmjVL16tq27Zt6B67UDORTN/P
kiVL9HayHq5Z79Qk+Yo5Z+Xs2bO5bL4ma+u1bt065X3T5cuX1dSpU3W7ZfsL
Fy5Ybkc/BryDTMQ9ZCKAMwolEzEVcg1WMhHAOWQisEvmllRVVen/NnOBQs5E
Mnk/knm0bNlSbyf3K1YmT56sX5d1cGNJrbMtW7bYeqSqEy9tlzk7W7dutf2e
5Xe/tG39+vWWrzvRj+fMmZP1MQAo9fLLL5OJuETqMpGJANmTTERquxZKJmIq
xBqskonIZ00mAmRv4sSJZCJI27p163KeiZh5Rbr7xI7dsMPu+5kyZUporEWi
3/fy743msWLn0MyePVu1adPG1qN///5J2yzrykjdkHRs27ZNt2vhwoWWrzvR
j7kWAM6QvkQm4g75rMlEgOxJJiL9qdAyESF/F6xdu3ZUNtKgQYOM/j7qBslE
5LMmEwGyJ32JTATpymUmIpmGzPMYPHiwnvNhl/zOkroaMk4j3VzEzvvx+Xw6
C5FtpG2JVFZWqscee0xvJ+8jF5YuXapef/31tPeTOqzSrkS1VslEAO8gE3EP
mQjgjELOREyFUoOVTARwDpkIMpHLTESyh2HDhuljS8ZhJxeRPMScFyL/m26m
b+f9SO0Oc5sZM2YkPV6nTp30dlLb1Gmy5u706dMtX0v1vvfs2aPbJXN4rJCJ
AN5BJuIeMhHAGcWQiYhTp06pevXqRWUjdevWTfj3p3wgEwGcQyaCTOR67ozc
2w8dOjSUiyS71882DxF23k9kzREZp5FM3759Q9s6WWt1586dev6O1TgYyWy2
b9+edH/JUiRvSiSyH2daF4RrgXuKsXaLV99TPtqV60wkF+/JiWNme4xM9icT
cY9X+3i2vPq+3G6XG5mI0+8p2fGsarA++OCDjrcrk33JRNzl1T6eDa++p3z9
nYtMBOlyq55IqqwjMjvJNA8Rdt6PWTtVHrJ9MuY4F3lIjuGE/fv36/Vx5NhS
vzXyIbVHOnfurLOSY8eOqaefflp/LkeOHAntL+3o0aOHqqioSHiOyH6caZ/m
WuCeYvysvfqe8tGuXGciuXhPXhhrlsn+ZCLu8Wofz5ZX35fb7XIjE3H6Pdk5
np0arNm0K5N9yUTc5dU+ng2vvqd8/Z2LTATpciMTEWaNEDmP3ONHZh5O5SHC
zvsZOXJkaJtUa72MHj06tK2sk5YtuS+S9X3NY1o95s6dq7c9c+aMnrMjzzVv
3ly3e/z48bq+q9Q6SYZMpLAU42ft1fdEJuLeMclEiptX+3i2vPq+yEScO16q
GqxkIsXNq308G159T2QiKBRuZSJC6okMGjRIn0vGSMjvHnmYYzGyzUOEnfdj
5i/ySLQOr0nWdTS3XbNmTVZty4T8XUTGiEjflnEjdmvOkokUlmL8rL36nshE
3DsmmUhx82ofz5ZX3xeZiPPHk39viq3B2rVrVzKRIufVPp4Nr74nMhEUCjcz
ERGZi8hckcgarE6skWbn/YwYMcJ2JjJmzBjbY0q8RNor6wfLI/K/03lkuh8P
Pmsvv6d8tEvO+d577xXUe3LimNkeI5P9ZR+pX+32d1yKD6/28WJ9X263a9eu
XfqcBw8eLJj3lMnx5O+B1113XVQ2kk27Mtl37969ofs4N7/jUn14tY8X43vK
19+53nnnHUeOg9LhdiYiJBcZOHBg6LxO5SHCzvuR+Sd2c47IeTbyO6tQJJub
w4MHDx48ePDgwYMHDx48Ej9QOvKRiUj+IWNEzPNK7uDU2Ew770dqIJvbrF27
NunxzBoo8jh58qQjbQQAAAAAAPnndiYSmYdI/RBzPRqZz+Lz+bI+vp33I+Oq
zW0WL16c9Hiyvots16FDh6zbBgAAAAAAvMPNTCQ2DzFrrDqZi9h5P1I3rFmz
ZnobWZc3mSeffFJvJ7VWAQAAAABA8XBzLV4zD4mtHxK5Tu/w4cOzykXsvh+z
zmu3bt0SbnPu3LnQsTZt2pRxmwAAAAAAgPdkkolI7Y90aqJG5iGDBw/WNVZj
yXNmLiLbZlpz1e772bFjR2i7EydOWG6zYcMG/XrHjh0dmdcDoLTI+tkA4DVc
mwB4Edcm5MvKlSvTykQOHDig55O0aNFCbdmyJeX2kXmIjM2wykNM8ppkJrKt
rNGbSS6SzvsZNWqU3m7atGmWr5tzejZu3Jh2OwrB8ePH1bhx43Q+ZMehQ4f0
mj09e/bU42t69+6t5s6dqyoqKnLcUsCbFi1apPuQ1aNPnz5Jx5fRnxJz+9rE
d4Fik69rUzH3pXSvSyKfn2UxfxcoXJlem/LdH+hPxW/ChAmhDEF+TlOZOHFi
aPsBAwYk3VbGVtjNQ0yxuUi64zPSeT+XLl3SP9uPPfZYXO6xatUqfYyZM2em
df5CIOvnyOdk1lSxk4XNnz9fbyvXg4sXL+rnjh49qrp27arat2+v1/EGSon0
I7MPWT2kLnOi9bToT9bycW3iu0Cxyde1qVj7UibXJZHPz7JYvwsUtkyvTfnu
D/Sn4iXjkmbNmqXnqkgeYP4sytgP+b4XLlyozpw5Y7mvrF1rbi9r2iYTCAR0
DdOBAwfaykNMsq1kKJMmTdLHyOX7kXNJ7tG6dWvVr18/fU7JKWW+zOrVq223
uRCcPn1af04y/qVt27a2x9MsWbJEbyefS+z3Idc3+ZyfeOIJdfbs2Vw2H/AU
GV8mP/fPP/983EN+T8qYNSv0p3j5ujbxXaAY5ePaVIx9KdPrksjnZ1mM3wWK
QybXpnz3B/oTktm/f7/tsYPy85PJHBjZx04e4pTKykr9vrZt26bKy8tdPbdb
ZNyn+V2YfTzV73fp7y1bttTbvf/++5bbSO5l1oEBSsGFCxdUq1at1AcffJDW
fvQna/m4NvFdoBjl49pUrH0pk+uSyOdnWazfBQpfJtemfPcH+hNQ/OzWop0y
ZYreRsbRJBprG1mvlvFjKAUyjrJHjx5p70d/Ss2taxPfBYpRPq5NpdCX0lmP
IJ+fZSl8FyhMmVyb8t0f6E9A8bPz+11quch1QLaRGi+JyBgbc87S1KlTc9Vk
wBPk3w1l/qj8m8B7772nPv74Y1v70Z/scePaxHeBYpSPa1Op9CW7mUg+P8tS
+S5QeDK5NuW7P9CfgNJg5/f77t27Q9vMmDEj6fE6deqkt5M6LEAxe/vtt0P9
wnw899xzuqbzJ598knA/+pM9blyb+C5QjPJxbSqVvmQ3E8nnZ1kq3wUKTybX
pnz3B/oTUBrs/H6PnD+7dOnSpMfr27dvaFvqDKGYdenSJe53u/mQOnybN2+2
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
HIs=
         "], {{0, 642}, {1093, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{357.3333333333332, Automatic},
       ImageSizeRaw->{1093, 642},
       PlotRange->{{0, 1093}, {0, 642}}], 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzsnQWcFPX7x+luMDAABeUnJaEIgoEKKiCCdEooHQooYCAgJSEoiH8VEDBA
uru7BemQDoEjjjw4js//+/kOs8ztXu/uzADP+3l95byb3Zndqc883yeeaNzu
vaZJEiVK1CGV+s97jTqVad++UZeqmdT/VG/boUWzth9+8Hbbjh82+7B9icZJ
1S//Spwo0US1fDL1MwRBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBCDjh4eG4ceOG05shCIIgCIIgCFGybNkyjB49
GlevXsXNmzed3hxBEARBEARBiMTChQsxePBg7Nu3D5cvX3Z6cwRBEARBEAQh
EvPmzUP//v2xY8cOXLp0yenNEQRBEARBEIRILFiwAN999x0OHTqkYwIEQRAE
QRAEwU2sWLECf/zxh8SvCoIgCIIgCK7kyJEj2L59u9aqt27dcnpzBEEQBEEQ
BCESrGV17do1pzfDf6i1OU6fBv75B1i0CDhxgh8wKOsJCz2NC4e34dS2Rbh6
7gQiwq/fWYZxwAcOAIsXA3v3Asxjk2cBQRAEQRAE26AfNiIiwn3j5k1EzJ2L
iJYtEZEnDyImTULE2bNBWc/JLfOwaXgrzGz9JI6smaj0a8idv+/ciYjBgxGR
Ny8ievRAxL59xrY5/f3IkCFDhgwZMu67cb/On8+ePRuDBg1y5/jiCwxq1gyD
qlbFoC5dMKh//6Cs55uvv0SPjs3webOq6NutC74dYFlPz54Y9PHHGFStGga1
aYNBvXs7/73IkCFDhgwZMu7LsZjzvfchv/zyC75QunDcuHHuG336YFzDhhhX
sqQxKlTAuNatMW748ICuZ+SQvviuSyN83aCkHp82qoi2bdtiONczbBjGffIJ
xpUpY2wD/1X6eVy/fhg3dqwj38uoUaPwsdLQ33zzjW3r/Pnnn9GqVSt8++23
AX3ffup7bNeuHUaOHOn3e3311Vf47LPPEvx6vrZbt27xek0X9RwV19cMGTIE
TZs2xQ8//BDjcv/3f/+Hli1b6uuSXfvX7ePPP/9E586d0b17d8e3JboxYMAA
tFHPtMMDfH2KafRWz88dOnTAmDFjAv7erI3ouQ4m8D143WitrtkJvW7wXGnW
rJk+d+LzGp5ncX0Nz1+ex3FZ9qeffgrKdfBuHmPVfTA+10EnxsCBA/VxSL1j
1zr7KP3Svn17fb8O1Hua10H+ez/C/cdz0JXwGULdt5E+PZAiBVCsGPD118Cx
YwFdzentS7F5RGtMrp8OE2omxXd186D7Jy1weO923Ny1HUpAAHnyAKlSARky
GNuhzlGEhAR0O+LK2bNnMXToUN3PzC6Yy0d9vGHDhoC+L2sG83np5MmTfr/X
lClTdH2MhMLXTp06Nc7Lc17m999/j/NrWBe5a9eu2L17d4zL7dmzR2v4VatW
xXlb7nUYm8/efTNmzHB6U6Jl7dq1+r54grH2NrFo0SL9fBMaGhrw92b/GT7D
HT16NMHvwdfymTSh1w2eK3wO5bkTn9fwPIvra3j+8jzm+Rwb+/fv174C1uIR
DJjfze9v2rRpTm9KtKxfv14/fx0LsHaIiSVLlmDYsGE4d+5cwN7z+vXr2o8h
etWFMLdp9mygYkXgqaeA+vWBlSuBixcDuprwa5dxYtMsLOtZDlMbZcWf1ZPj
rw+fwO6ZgxF6YCsvgFAXbqBAASBJEkO3VqsGjB8f0O2IK7w+8By4cuWKbeuk
XghR+jzQdX0DqVcvquPiwoULCX49X3sxHscWY4ji85qwsDCcPn1a/xsTold9
Mb9rN/dB4bnBZ8nw8HDb1sk+hrwWBKN+YSD0qr/XjbieM/68xrxuxCUmUPSq
L/G9DjoBjz8ehzcCnbMdA8E4N0Wvuliv8vrB56Hp0wFuI7XrmTNBqRNwJeQI
jqwah8VdX9Z+1kl1U2PxF6Wwf96PuHb8X9xavw5o3RrIlQtInBh47DGgcWNg
zRrg/PnAbs99RCD16r2C6FXBDQRCr95riF4VnET0qov1KuGzCWt00W9Gf6sJ
527ox+DfAuDPuHUzHNcvncOOCT2woPNzOi5gQq3kWNX/PRxbNwU3Lp/HLc53
NGhgxAQkSwbkzQt07Ahs3AjY6Ou8l1ij9D7nTM7wOUTQHD58WM9dbdmyxelN
Ee5j1q1bp+OO/vvvP6c3xTVQuzPm4++//3Z6U4T7ENGrLter3pi1WeljZcwW
/a+chzB/789bKw18+dRBbB/3JSbWTY3xNZJgasPMWNGnAi4e34OboefpEASe
fdbQrPSzZswIfPcdH7wDsg33G/Srbtu27d6oGxwgOK/G+6FoeMFJqFP/+ecf
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
pQqoVqWyXl/1p59G9fTpUV1p1upKs1bPlQvVS5dGdW4/tyuK7eV1y/yc5vZR
x+RSr02TJk2kbUuaNCkef/xxFChQQC/3uvpsb731VoLP76pVq+r18ngw9+cD
DzwQaZ0PPvig3ldcxvu4iuvgZ4nquHj00Uf1erkNb7/9drSvr6L2J5fhcf6/
//0PqVOn9rwHjyvuK34XXC669yir9k9ptS/43Vpfz+OXx3T58uV9XvPOO+/o
a0Z+9Txi7ovEat/ye3r11Vf1eWFdvnLlyno7qcszZcrkWZ7bzO2zHsfcVm4T
9/9j6lknPY8bF1zzAzm4T63nMb9/6/lOrc5z7YknntDXriRJkvgcI/z+Hnro
Ib1c0dvPozwOzPesFs155e/wvt5x3dyGhx9+2Gc706ln09x8Nr19veDreCwk
dN0VK1bU7/H888/rY5vfD6+h1usAj1tuEzUVj6OErovHOI89vi/P8/juXx7X
3A4ew+b28ft5Wl0L+d3FtG38G5fh+cTPZO7vp556Sl9vorommNcsfs+8Fprr
5PnG76tcuXKRljevHfxsadOm1cumSJFCH3v8fVTbxdeY1wjzvnmvDPP7sw5+
b9bzkvuDx3r27Nk935n34PdDHxj9EObrzPfjMRXo7eZ5br4/9731+uF9zzLv
CzwGuRyvO3wdP3tC18/7LI91vl/BggX1sZdM3ePN9VFLcFv4d94b/DknuZ28
nvB9eX7H57XcRrdCvcpr2eXLl/V5ejWaXCNrPEDPnj2xZMmSgG/L0aNH0bhx
Y3Tt2hXTp0/Hnj17cO7cOdy0qx6p2VeAda1WrYLaEGDmzBjr+LMWALezVq1a
+OabbxDKWlTRLBcedgWHlv+GhV1ewOT66XT+1byOhXB0zQRcCTmKW5cu4ZZ6
L11ni/lfjA1Q2hfNmgHbtxu1WRMQG3DixAldi431g6Pbv4Hm1KlT+tifOnVq
QN5v2rRpPs8ve/fuTfD7ce6S9YS5zxJyfHG+r1WrVhgxYkScX8Njg9fhuJ47
YWFhatc3w++sZREF1ngAXoupaQXjeJ83b55+xuZ1xI0xJOHh4Vi7di2KFy+O
TYyjtwH2vVm2bJn2h549ezZg78t4AB57PC95PvkDz2lqg8Osjx1PeM3hPZ6x
CfFhlbrW85kyLtfGCxcuaC2xg/m6McDrg6m/2RfyfofXsp07d+o69tRD//77
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
OI6xl7wLoV5lrvXYsWNj7Bnrj16lHg27bdSupj7lvzeUmfrVDv78809kzpwZ
77//vm3r1PWsWJtg6lSjjj9znthzasUKQ0f64V81e7FePnVA519pH2utZJja
5AEs6/UWzu3fgJthV+7UuTp4EGC93QcfNHQzY1rZT4AxtS7taUGsepXz+/SX
xgfeP8xnFY5u3boFaUvtQ/Sq4AZEr/oielVwkvjo1dDQUGzcuBGLFi3CtGnT
UKZMGVfr1bjkTfujV6PiojL6XPsrm6SMvbHs6tl643Zu/s8//4zevXsj3A6/
IrUifezsH8A6BczPD2DNiJs3ruHM7pXYPKI1ZjR/TGvWGc0exZYxHRGyZ41H
1+p5/y1bgK5djXqs9LNSszIPjH2xXFrnyluvpmX/sHjCOYR7qYeAVa8yp1D0
quAEold9Eb0qOIm/8QBHjx4N0pb5B/Vq8+bNY12OerVfv374559//KrBb87/
b1HWV1k+ZVWV/aKMOVj0t9oFNQ/3J/sK2Abn/5n/5K2ROVfPv/nha+XcP3sJ
rPimEqY2zqrzr+Z89D/td71y5rBRl5XQ18s+XM2aGXWuGBfAOIUmTQD2r+X+
dVmdq0Do1Qilw5999lmPZv3ggw+CsKX2IXpVcAOiV30RvSo4weHDh7F161Y9
t0/dmVC9ypwPN0K9+inrc8YC9SpjPqnZd+zYkeD1UavSjzpUWW5lyZWxztUr
ytYqO6fMrnjWsmXL6v3JXHNb+2CZUBOa8/T09fEY8TM+gH7Wfxf+gqU9Xtc1
rjjYC+vg4pG6nsAt63uzZgA1G3OvOHLmBBo2BPbvd52P1apX69evr/2jCYHn
rrWHAJ+/7lZErwpuQPSqL6JXBSfgHGKzZs30qFixYoL1KnWvG6Fe7ckeSLFA
vdq/f3/s3LnTrz5Rpn91s7Ieyh5Sxp6t/LeSsvnKmJNlB7zOtm3bFt27d3em
xhHXyRgB5qs3agTQz828LPbHSiCsu0pfKvuzzm77FCbWTompjbNhRe8KOLNz
ue4z4IHxqpMnAxUqGP5V1oh6+mmgRw/ArvoJccRbr6ZnDEMCeeeddzya9U3W
FrtLEb0quAHRq76IXhWcgPP49Cdu2bLFL//qoUOHgrSF/kG9Onjw4FiXC3T8
6gVlq5TVV5ZTGTVrZmUfKVumzJqXZQfULU8++aTW47Zx5QoL2hv9ptS1Dblz
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
XIRdOOVb54o/MzeJx1HevFBiz8jBYlzn+PEx1rlyo14lHTt29Bx3zP+LK1at
Ss3LmgJR0bx5cyO2pUEDn79Z9Sp99qJXBScQveqL6NV7F2o5xjcyBos+Czdi
1auffvqp/h1rJZr+FQ7mCUVVj7FkyZKu06sDBgzA7t27MWLECFv1KuFcvrWG
AmvxeOdN8XtkXIC5DP2su3btivL9/vnnH089Ab4vYwut/PTzT9pHtWzDMoQq
s2pT/hym7Dpino8ONPT9sq+n9/xv0DD9q4xlKVzY0ImZMhn6lX0NOF8fD7QW
Vfvo4rFd2DdnKGa1ya1rBjCWdXmvt3B8w3TcvH7VV6+yNgTzv4YNY6FSQ7Nm
zMhCCgD9iyEhd5VePX/+PLJly+Y5TmeyD24sWONVU6dOjdmMz/CCzzPsC/fA
Aw/o5fhMzOdLK1a9ynquolcFJxC96ovo1XsTHt+m1uCgtnMsti8GrHr1o48+
0vdO5lSZ2805/+hqi7700kuu0qusu0/tyevMqFGjbNerZNCgQZF8p8wt8d7v
1KzMU+G9Orr66ayNxTl2833oZ/WGddv5N+ZiWWMBWddqs7IxyuYpu6DMrjpX
zBU3t9lbhwQF02+5apWRq898J9aWevVVYOxYCsIEvW142BWEHtmuewnMbvs0
JtRMhikNM2HzyDY4s2uFWmUUvlv6lalZ+dxXsKCRf8XarLVrA6w5yvwwr+c+
t+pVMnToUM++5DN3TNcv63HPmBfWvyOcY+BzHONXWAvLem0xR21+PxasepW1
CESvCk4getUX0av3How5LF26dKQehxzdunVzetMio+6f10+cQKtmzfT2vf32
256eixz0gRw6dCjal5cpU8ZVepXxn/QD2ZlvFRXmXKc5GNcZFexvEN3f6Ce2
aoXrXnk71A7W3rD8mctQl/6t7Atlzyqrp2y1MmpWO/oJrF+/Xs/hsu9BbPVo
Awp7pTIuoHJlgPU9+b0yHtjLvx0fwsMu4/SOZVg3pAEm10+H8dUTY87H+bD1
9064fjEk6vwrxqr+8w/A2mbZshmxrOo8Avs9MQ9MaTGrznWzXuUxxmPPPMbY
0ywqvGsRs38Gn2WZW8j/Z5wMf+etU60xrtaaGVa9yrhw0auCE4he9YV69dFH
HxW9eg/CazBjv6zXZdfoO/p5jh/H9dmz0apePZ97COd0veefvWENRtd8HkDP
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
c6JRwb4H3nOrnPfv2LGjzqeLC7/++quuf5khUwb8se0PLFF2VJlTsEett684
6NC/Fxpq1GU1/a6EWpZxrIx1jadOvH75HA6v/BOLPiuByQ0yYFLdNJjf8Vnd
X+AyewlY12PlqPru1bUCr78OqHNQPbRAXQTQ5LnnkJ29sFzYt9kKffdm/mCG
DBl0rlig4DloagRziF4VnED0qi+iV+9eOJfP/Va4cOFIv6c+MK+17LUbVc49
50NNHysHa8SfO3dO58zGBepT+lSZL8PYg7fevqMBcvTOgWfCn0bV/0rjt2Gl
EFL6GZxNlQJ5btfT4sio9NLnn7RDt3b18eYbZe5rvWpXPIAV9g4wa1qaOSas
PWaFPX94/FAbPPvss+jcubP2xUbE0S/I+APuI+u9v0CBAh6f5q1oLNhQ3xQr
VkxraPakdQxqSWrYbdsAnqMJ0InUpQeXjsLcj/PpmgHsJ7C022s4umaC7o8V
bW+Qy5eBQYNwq1QpXeeKo8lDDyG70n+654GLfazEWuuE/YcDAZ/3rXWqRa8K
TiJ61RfRq3cv1r5V62/3rOH9yTp/y1GtWjXPa0aOHKl1BOHvva/NpUuXjnZ9
pp7gHO45ZQcuHkCHjh0i1ff8X7H/4YfLP6D35c9xcMYQhFeuqGs+VrOsg8sv
W7oUp7YvweKeb6NG+VdErzoAe7Ra9z1793rn39HveoVz1/GE+VjUuN7HF0eX
Ll30MubxtEbZBGWsGcCYEjug5uZzHI+fmOIZgsrOnQCPkTJlAH4n8Tz+yc3r
V3Hpv3+xZUxHzG2fX8cFTG2URce2nt6xFDdvRBMjy/184ABu9OqFq08+qeMC
mqiRXQ3te43jc6tTMM6E/St4PPG5w5/rAOsAsH5bVMeq6FXBKUSv+iJ69e6F
8XfmNZU10QnjAvj/Vt8ZB+tOEtYu4zKEv7Muw1yc06dPR7u+a8r2K/tRWRNl
1Zbf0busE0T9eOLyCRy9sAP/rv8LV6tVwK3sD2OI1/V/hDrOzh/aiu3ju2FS
44dQrdwLolcdomXLlpH2DfsV+MvEiRP1PK35ntQTjD9h/Wv2dGWNT+ri88rW
K+usrJIy5mDNUxaCaHqMBoGiRYvqbWR8RCDiuOOEOU8/ZQpQs6ZRXyp/fuDT
T4FduwzfZzyICL+OU9sWK43aDFMbZ9WadW77AtiqNOzFE3sRHhbF8wbXrzR7
6KJFONGkCW7kyoUm6pqRnXlYjG2dNMmIdXUxfO4xjzH2A44v7EPLnl7WXq0c
zAXgczvjdDi3IHpVcALRq76IXnUvzGlljx7mYZt96a2wBgv7QZk9i5izQ93I
33G/1qtXz3MNZn4383nokzXjBziPZubcsLZRVOug/4vz/syNYT53s13N8GCN
B5G8RHI8G/EsPvjtA7T5so2+9ut7IHOQ16wBOnXS/co3qO1JabkXtH/1FYSH
nsW+uUN1D/Sx1ZOi+hvPiV51COrGN998M9L9mnUmEgL9sOzVZX0vxkazZpAV
85nokDI++zynjHWuUilrr2y5Mh5zduRiDRw40LOtX331VdDXpzH16qhRQLly
Rvwo60sp7Qx+96wdEI9cLM6pRITf0DEAS7u/rmNZtWb9OJ+u1Ur/a3SxAaeO
HMEOpU2v1aiBJunSIbv6HtTDLvDhh1APGMb5nMC8sGDDeg/WOqvR5ZeyVxyf
oQhjQVg3gD3bEnv1gmYsAK+De/bs0b0F2LMjh7qGiV4VnED0qi+iV90J5yet
86nMcWF/wOjgsc3eQ8y9MvN2WLff3LcczKtlj2zm1zCGkMuyJhTrBXhj6lT6
urYp6xfaDzna5ECiZLev7+kT4Zlrz6Ctsk3KTH8NuG7m7Kr1nk+eHE9a7gfl
H3sM1yaOw7l9G7CyfxVMrJtK6dVkqFmuuOhVB2HcqjXHhL75+NbUZ59Lsya/
OerWreuJPYmKy8r2KKupLIMy1rl6RBk160FlYUhYvaf4wute1apV7alxRUy9
evIklHgCcuc26ver85F5T5g/36gfEOe3u6UH+wUcXT1B6dT8mFg7BSbXT4f5
nxTRvQTCwy5HqVf/U9uwTT0TX1uxAk2efhrZqZs5WCegYUNOvMdrW+yG5455
vBUsWDDKulXsdcW/m/n+3oPHLWP+w27XF6MONvVq8eLFRa8KjiB61RfRq+6D
fYaoT3l9rV27tmdulfNWk1mLJgrMOICGvMdY4Pyr9/WZujU26Ns6oGy4spf3
vIxkuSxzZkqrPj3raXylbIeyi8o8vlX6h0qXRoTa1gqWdeZX9+JQdU8I3bkO
G39ujllt8ui6keNqJEftt+7veAA761lFB31K7Flp7i/WTN+yZUu0y7OPM5+p
uM+o9ay+KurduNT1Ze1VatY/lFVVxj4CyZUVVcZji7EnfGayC9YKYJ0uxrNG
m6cUSDifwfl/njOszaq0kY5jZVxrFHMdscFY1Usn9+s4m/mfFsH4mkkwqX5a
rBvaQPcSoI/VO4+K9c22bd2Ka6dOockbbyA7+xlQNzNGgTqtY0dg0ybj3HYh
1KcFb9fD42Dv4aiW8e53xcE6KqNGjfLRuFa9yv4ColcFJxC96ovoVXfA/A/2
rKYPlTnZ1KabeJ8AWzdu9dQfYo5BVDrC7DPMXgFWzJrXHNzPjMmKql6ACX1a
nPv/XVlrZaWUpah4J58q43sZ8f6R9zFaGfsTXVGmexTRVzRrFlChgu7j84Ul
fjZLihTYP3AgrqxfioOLR2JOu/9haJMi6NGgFLq//xKqVHj9vtardtezig7W
+bfG8vGZKToN7d0ryxzUvNHNy0bHcWW/KqNOTa8sjbICykYoo2a1q27Aq6++
6vkc3C+2QP8z60tR33MwrsaP2nLMvzp/YDM2j2yD6R9mV8+ESTCr1RPY9EsL
pWX3Ifxa5NhYrVfVOjnf0kQ9G7PGHJ83kSUL1MUG6mJkbBc1dBR61w1Ye/Yx
NvpiFH1ue/bs6VmGfgD2Y4sq/olY9SpzV0WvCk4getUX0avOM3PmTJ9+1oUK
FYq0DOdnTR8Wj2FrvdTLly97Xkety3sQ4TKMVaXG5fX5ehx8JP8pGx06GvmH
50fawWmRODQxkvdPjrQV0qLUylLoqYzz/8yV8cD7A2MV6tfXvR4nJU/u6bea
LEkSLOjaFRH/ncDxtZOx9vu6uofkwEbPo9enzTF40CBUv12n4H7Vq07HA1jx
rhnAnlVR1QegjqU2sC7LZ6aY+qrFhOnLz6dMvZuOZS2ujDqWtdPs0Ks8lkw/
XEJjeBMM8/WttRnMmAHvEUeOb5iO1d/WwKS6qXWdK8ay7p7eHxeVZrX6jiPp
1SZNkF19fvz6K1CqlK7roUeRIoZmpb5zaSyrNb//s88+8/k7Y144T8Vr6C76
tGPAqlcrV64selVwBNGrvohedRbWf/SO++d46aWXfJZlrKn59wYNGnh+z7gr
a02p3Llz631ZRN1nqIOjq+vuXfOS97F2/dohZaY7dVmTtk+KXMo+V7ZWGX2p
Hu1g3kPpE2IvevU5tqvXpLd8nu+UHo24GY7rF8/i71EfYcr7GfX9k76fzSPb
4uqlC2jVsoXoVRfBHqvWY5Hz/VHVXGVMgFnDlzl+rN+bUK4qY8zqZ8oKK2P+
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
ojvuuCPVPc7B/Oc637311lspv/eWM0XXavYsn332WZ/fj+mzSF+quSq+VVFf
BfNPxNOWRi6qfJTc+MeN8qYKcq7kUMLZUzxgcD4ZO6mvat9eZiiumst2zvs0
b56uBsDkMfavna09AIY2zqNrI/BQ3Br7l5w85Ht/GTjEI488korjpNcPnnoG
+pWSg6xfv35AfJV8fVbhq+wbTJs2LeXf8FVf/Jiygh7AE/AsRhNgv4fx24Db
hBPwKHtfd7NPE2ruzBgwT8UTKtAEoGkdrAIvgXACfwT2oX3pPREIPPJVA5Pn
hKfij0q9Abn2AM594u54SZj4vYx5vbxEN4jUezj0Flj11/tyZPuatL2u4KOM
YfSQLVnS8rrCN0Bdm7r+Cm/WIF8Ldr6KJx36NfYBzfXncAcH4YDDV90RCr5K
DQe9wF05q2vPQWqR7Z6L+Kt6A94A/uQdjFb1912/y/Wdr5ec9+WUHE3V653P
IRG/R0iJn0pI41ONdb1Vluih6isYo8k/sIfcvbtsU1y1lO1c1374YbngZT9P
zxEXLsj6mE91bpX+3yOaF5WF37+sa3gvXPA9l2Jqpjjwf0Hz4Qsyogd4+eWX
tf9uVgDzvZ1T+MtXua7hCmnVpWUW0PCVK1cu5bulNos6skC8jAMFey+u4wka
ilCCOkz0qvQBYY07VAXeIfRkDifs3vWmJ1wwkS5fZfwgv0nfi+efF6lbVwRf
wAD0IfS4ogYrfvw3Mv2Dh/S6GM7KuLNkYFs5tGmJnDnhYY8NLStrcupIqbei
n4G6BrXf1ZNPWv5XR4Pbo8XOV+vVq6fPCTW35ntA74SvtAMHoYTDV90RSv3q
t99+m6oH5zce6k3RBdjnIeqygrnfB18dGTNSipS4qKmMuCVCrj13rbyqgpwJ
fv/sAV4SOVUDxnF8VhXHP3XPPVLFVk9dvmRJOUgdrRff8XOnjsvB+AUy/+sm
WgdAH8XZ/WrLlpmD1dOf9zmHxd6lvY72r7/+8vlj2Pmqv/3tsxJfdYW/fBUv
f84BfcDC1kveR6Dp4L60+0zhhfXrr7+GTSMAr6pcuXKqsQINRaiBlxU8lfHB
eC0zpvD/jBf8N5Q9BegdDV/i8+L7Fmyky1fJXZLDZP+9aFErv/nWWyIzZ1p5
Tz+/+/NnT+s8a9zYL2V6z0dkWJP8Ws+KD8mSn/4tu5eN132gPYK9f163WTOR
a66xOCt61tdes7RQcNog1cba+Sr7fmicqMOw+xa/xus6cBBCOHzVHRnlq2jM
qItKCz169Ei5x+kT4qneHk2afR7Cv4Y9P39hanyp+advDf9mvDeerhGREXL1
q1fLs0ee1X3C8VHdpcJ4MF5SwHd/+HCRBx+U12xawzxRUbLwjz+86szgGScP
7NA+3vT6jm6YU0Y0LyJrh/XWHom+gj1wu2cu37c/cPiqxVfHqznXnEP0NGiB
sxqoVae3gP1eZa96WTr90oKJA2p9Znr3mtrLcPfnQluErj1BxVoVcNlQc1a4
pPEJQPcdzL6t6fJVrsG5c0Xq1BEpXFjUCRe5+moGdSbTgLWjx/dulk3Tf1Hj
zp16Pydae7TmkkX/aa376J05ftizfx6clfxu/fqWR6y6BqRUKZE2bSyNPt7B
QVg/ufJV5kdAr0SzZmOfIdzaGAeXFxy+6o5A+CrzRvfu3eXWW29NuX+pq/q/
//s/GTBggFu/TXiqmWP69u3r9nxoGV21A2+88YZP78XoU/FH3K1igYq3Y9+W
35f+rn+GPpIc7xO1n5AxK8bILyqmqOB3Wc7r3xcwHnN+2Qdr1Ej+LFQo1Xn7
jv6FzG1ecqvnT5+QA3HzdN3u8GaFZESzwjLl3Xtl17JxOrfqC8gD2j3HGNv9
zbc5fPVHvQ/Buspe40Rv4g4dOmh9ABwlLi5Oc1h6JnBQ8wHHMP9O62DfcuPG
jWke9HDzdOA1OXnyZI8Hdft2f1R4I98hr5dR2D+Tee8JCQmKNs3V3nd4L9uv
d7QnnJ9wAa6KTyt7M/VUvKeCPiNpebOieUrv++Eecv1O4EqzZ8/Waxjq0VnP
4Aln9OF4e/Xq1UtrSPCwNn9nrg9/+Gy6fJUxhLEG/RU5Vvghec3atRGKWPwx
AFDDefLgDtm5aJTezyHPyt4O6+VZ7O/M/k1OHfGQZ+X98Nmo0W/QwHo/cOgb
brB6YMEf/awH8wRXvsq1bjxsmjdvnnLt0cvGgYNQweGr7vCFrzIOUtfC3Mk+
SKFkjoQGnVpi13oIxjx4K+tR+IvdO551KTosOC+5WfoAuPrWPPDAA/pv6UvF
+Ovqp2PmNOqp4xPiZcbCGdJvaD+p8VENKXi3VR8fERUhj9R7RPfl5vX+/udv
GT95vExdMFWWrlsq8RvjJWFjgs4N2+ePLO+3yvsjn6XO+wa1RihkO28VixSR
eV9+KRvWrJHt27alfKajHvRdR7auknUjP5FRrcto3So6sg3jv5Zju+N94pxc
N66aQnomUWPlT4+k7MxX6c1Ef9G0DrvnRXY4GA/S+7xpHa497fw94PmBvG4g
R5FiRSR/sfwSVSxKIotFSlTBqKCcu1AdaC3T/Tzq91yHRYsW1bkH1vZuj+M5
uJbV2F1MfVfF1BqhmPqbYupvMnIuixYtIkUKqTEsf24pmDtCCuTOIQXzREqh
fLmkSMH8UrRIYc9/y/tRY59+P4pL6oP3zfWn5qaMfsecC3NO7GtI7mfX8xuu
6845Lr+De9PoKVmXZ/b7yQoH96Q5J/b5NSvOpXYtbGYezK+Z9p0xRzAuR0VJ
vgx+jgJ5c+p5goM5Qs8PPs5BBW2+WekdRX14PpOj5zn9ORf8XVbmq6y72rRp
k+7BWs/1cfD3rl27Zonj3Xff1TnN9A5XPQ8HfUUDfU3qNc25aNWqlfaP4MDb
ivN1yy236PxzWtcc10WpUqXkuuuu0we+ahz4i+B5QM23ec70DmqdXL+vBm0a
yP1t7pcSbUpIzjY5JVebXFKqTSmp3qa6tHqrVaZ/X/4e6KZZ97GuZ/3JPejx
sa+8Il35TtW569qyZdBev1PHN+TfLV6Qpg/fJC/cVVSeqxSljkhpdP+/pNXz
D8mbr7WUzm93lK5qfZ7qb197Tbo+/rh0LVdOuqrvu6uaG7qWLCldq1eXrq1b
S1f1eTJy/dFLmj0++rfT48b8Do+M9MY7+C3XHnuK5rpD98p1x4G3jb/XnKeD
msfMvnacI7QH96YZ5xi7Mvv9ZIWDe9OsIcl9MpbzM/tj8J1irjB9G+H9/Nvc
Y/RPpfe1pzwJPYg6derkcU4zB2uH++67T9/L1BSk9/21atNK6jWpJ7Xq15Lb
n7pdCt+geHWkh3GjcG4pXra4Hm/wGWesqFu3bqqxgbnQPgZ0cR0Ts9rRtq10
VeeolRoP7Z/1IcZpdZ67qvHV23N06dJZOrZrIy2f/j95/pY88uzNEdLovjLS
qu5D0qXTxTGe75xzwrjNuapTp47mCXZfF8PdMzJ2cm1w7fBcjRo18utvmV+z
Ml/NiJ9Vls/zuwAdqd3rA41AW3W9BkMj4AnsAbDfY1/Dci3OmzcvJK9ngIYI
T6uOKm5WkSM5HlHxHxWh1rIasI+BR0JGe5DZ9QCMh6n0AHYYbyvXvRf7zwPU
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
vgrs/YEZpxw48BcOX3WHna+ikfMHJn/AeExPwi4busgt62+R/OvyS44C1r2a
p3ge6fxjZ6dPnStMXQK1yp98Ik1t/asKqnl5rZqf9Xjv99MmydEd62TpL2/I
uPY3aC0XHlZbZ/3use8qvPThhx9OtUeK3jJcyM589SPyNl4QCF+Fq3K+8C+9
VPu0BoIZM2ak6l9lNAKHDx/2/sc2rF27VucR7ZwVT2m4bCjAGEnfPj1GqrhO
RU4VV6h4UgX1pfDZUIPeH6xF0Qgb2PkqdY8l6AcVDDC2MY6QZ2Wu/flnkXXr
rD4CIcivpnrpC+fl7Imjcmznetm1ZIysie4p0z98WPdyha8OrR8po56NlImP
5pDZ1XLIqqqFZNdTd8mpbz+TC2tXB4WvrlOfNXdyzSy6oOzinewgfHD4qjvg
q9SAB8JXd6uYrKLFohZS4lErnxp1h+VLlW9tPik/rLz0PNZTj9MOXGB6Xn/7
rXxn85rm+EvNyWpy9stn1eDcqUTZvXSc9iOEp45qU0bm9H9O9y1EJ+AKOJ95
XXwimMvDiezMV/Hr8oZA+Cp6CPOd+eJBkJ1w7tw5fV7tnibkBH/55Re/1sSr
V6/Wf2e/79Bu8vNQwGilpqvooOJqFXlUlFZRR8UwFYynoQT7ZXxOe82sna/y
8yuuuCJ4LwgvZf+Ic4oOwN4/2uhcQ5jH4Ho4e/KYHNm6Unv4LR/UUftdoRNg
bPznhRwy7PkcMuGxHDK3ZgFZ3aaabPmxu2yeHi0Lp42Wfbu2BcxXAXuT5tq6
5557gupf7SD7w+Gr7vCXr+IniOZqgooP9n4gN7S6QXJEJo/5ETkk//D8UkVF
MxWfqaDH6h7xrW/zZQV8y2fNknkPPSS5bXNmB8ZGvgdyEwGM5YzNa4f20vWx
5FYnv1NFNk37SU4c2O722E8++SRVrmr8+PR7CIQC2Zmv0vPNGwLhq/hbmZoO
/HMuR30cPKtZs2ZuGgHyYr5i5cqVqXpicPDvUHpO0C9gkYoGKsqpIM+Kd0A3
FehcQwnub85X3bp1U35m56tPPPGE3msLOeCwjH9oMFiTh6GGHn3ryYM7ZOfC
kbLkx9dlSrd7ZVTrMmqcLGTpBRR35ZjY4iqZ3bWmTP+xm2xePFGer1Nbbqpw
o84D6PW+nXN7AXOrvRfk5aLfcRAcOHzVHf7yVfatRqiovb+2RBa9WEseUTJC
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
GqDXXyBIxVfr15ebb7pJhHp+dBLmveFrAJ9OSLD0C35yrkGDBqVcQ/RXO7B3
j9anHtq8THYtHSubpg6UtcP6yLKf39A9Cqd/+LBMeOsWxUWvtLQF7KcpfqqP
+q6HBy7r1xGhXiO3roUY/WpZ7ZE4qfMdMvW9+7Xeds4nz+o9Pc19f1Lc97cu
ivt+oLjvx7JhrMnp/ibbFwyX3UvHy77V0xXPna99vo7uWCfH92zUetwziYf0
PKZ1DPBWdb+leSR5O5KCcmQlZEe+aq/VZy+JvXvqqHpt6yU3DbxJ7pl2j3y4
+0Ot06L/C/XDM2Jn6D5UG1VsTdya0kM7HJ4t2R5c89RPjRsnX9j6ROK3Og7+
wP5WEO6LE/vUbDVzsIxrf4MeY9A8xY35QvbEL9N91M3rllfjasj9aTIAf/gq
eS/6ZA4ZMkR69OihfYeyMl9Fi0G/z/QQbL7KOaI3k77mIiNlzZo1QXvu7Azy
pHho2DUC1M3bNQLs/9u9GMzBPgae8MEG4zn7XORZe6pAG5BHBbVYz6qYoyKj
NbB2vnrrrbfqz4NvMFyd/gvNmzeX2bNne3+iYIA1NT3+6HlFLlPxZqlQwfIP
yKCHij9w46uKMwhrEsUx5dFHRehZizbg+utF2rYVmTHD4tN+jOtwI/s4/fpr
r8mFs6d1DvL00X1y4sB2SVS8Dn5HHpOcJvlN+mrBAdnfR2ewYeyXsmZYb12v
teTHtrLgm2bat2Bmr8dkWvfqup5h3BsVZJTinfBPenb5xFkVD2bPjsfj1zX8
pUK6b6Klsy0po1pfqbks8w454LHtrldz0Y0yvsPNMqFjJZn49q0ysfPtMqnL
XTL5nXu0jhefr6ndq+kc8vQPHtIcHP7Le53dt7bE9n9Oc/MFXzfVXBjtxNKf
28vyX9/SeuBVf70va4b20rwYfUX8+G9k4+T/6vMAP9429++U3PCeFZO07wLn
7GD8Ajm8aZkc3bZaa4zJAev879G9Ou+rvXJ1rjdr1ZNnV77KmEU+daSKZiub
yZX1r5SInJZeMvfzuXWf6nWn1kni+UT9N2YcRJt6SK1xHL4aRFDzGhcnsbVq
SS7bnPZB5coiY8ak0jxlBGhU5331oq5DpQZ1Srf7ZM+6WHnqiccv5nOLF5e1
a9cG4UOFDv7mV8lzMY9u3LhR77dnZb6aGXoAQJ2XuQbQADnwHVxPdr0qnJ8e
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
scJpLVhQTl50kdS1aviSY+ftLQMbY3X3yd3y2eTP5M6X7pRzG5wreQrkkUo1
Kul8U/hP7uciplaMxAyK8XG14W0TS7hctbtVw+/KuF6mmp27n57aGsY8vJrS
wKvEhSKFV8mrQoP1yL6dsm3ROFnwWScZ8UApnQ8Pv3VU+zPk955N5a/p32vM
mlnczZ1r18qZFmeV/r+qVSlO6ey7U5mnmQuo04KWdKB5n7k3FKyK7V4zRxZ9
8ZiMeric9jdP7HqR1qs9ceRQuE43as3Dq9GPV9EkN+Pa4wacOgaPnj1GnFX7
JK0dLHmV2sOT6zxq1CjZuTN1HWhioXD8ZqtGztUO1cAH5m/oRqJ/VVW1K1S7
XbU2s9rIZfdcJv0X95eVqpGnlR5/VJoMnyUaUF9+KdKkiUjevI4+qzrX/T16
yOIZM2S3wqv4crIcrxozmBXtgM6dRS64wMnBKlRIllWrJnlik2p1kieRk42x
tku1SdsnSc+xPeXB/g/KXQPukh7Hesjjhx6XMleU8Tvep86bKoePHNbaPZ8N
+kx6Tu0pzXY1k1qqwT2lltSTqvVSjbqnw1Qjvg9OJVcKjYD04lO3eXg1pUUa
r9qGBv7OldNk1YheMvXVa2VkuzLa14pW/rQ3bpBVw3vJvq2r5Pjh8Or0ndy9
W66/9NJk47RJ/vyy/7XXnHrOAezff/+V9957T8477zy/Yx2+X//+/UPWwtM1
w06ekC2zh8jE5+poLsDoTuU1F+DQrr+ydZ6VMQ+vRj9eHTlypG+Ml1R7PPxO
np06hmYrNUnSi1ndvUqVKnLnnXfKO++8I7/99pvWRQ7FWMup44NmT1HVYsTx
VxVXrbZqTZY0keq3VZfbu98uow+MlkWqbVLN6KGH3cB/aPCjc6XWA61zesUV
sl9h88XTp2u8WqJEiejBqxh+U9aFKVNEbSIczIp+QJ488rLFXS6ljnvn339n
qL5NNBqxdeLt+OzhlJCntPLkSpn35zwZNXaUrxbF4o2Lpc61dVKM3XLzy0mh
9eo6FVc/F1O9Ti6J6Rwj+b/LL503ddY6UkaHjfFK7amPVXtdtYGqTVSNPdVe
1QLptYXLPLya0rISr2Injx2RhPhtsn7iJzLr3VYy9pGztY8R3VbqvK4a1lN2
/TlT+1ozbInP+qvt2iUbwy8qnHnivvtE1J7arR9NLiscvrvvvjvVXIY6deoo
qBsY6/o/nP90rQX0E4beU1jr1E5+ub6sGd8/POd7CpiHV6Mfr2JXX321b6w/
+eSTWX04nqXRiOu/pvbjbs2SUHowvSx4r+zhqeFBLY9ffvlFtm5NmTtLfskC
1V5S7SLV8qpmMKtuzyR9ZrG7imlfFliBGlvHJCne5U9bKENGLVT8kWizquPf
v3Kljw+Abzqq8Kpt8BmIB9aurX3DR9V1u8C6L3e3apWkb3OK4FZ/elG0g4cP
yhGFFeCbsocZ888YubT5pXL6+adLnoJ5fOfcunVr/Tm3tL0l+TgtqfoNqh90
xlpMYiOuX1i16qq9oRq5gfZYy0rz8GpKy2q8imk/438nNS5d/NWTMoJapGg6
tYrRHIGFnz8iO1f9nvi6DDx36r2Txo+X3FbcpA3xlMsuE5k3z9E1STRwEHmr
5Vy1Wd1+BnRZ+vTpExLPK8XhqLlk95+zZMGnHX0aVtQH2712rpw4GrhOTHYy
D686eJUai+x58ufPrzmEF110kbz++uuRqQEUgm1QayP1xLhPYBPPTk0jd87W
KvPXuc9gVPobb7yh61Klxw+LbxIuQceOHeWDDz6Qyb9NlrX/rNX5V8RQyZXu
ptotqlVWreCBgpLraue9cffESUXVblUNDGHzA4jzwivA97VPtQxzBw4dEtmy
haRZkfXrZf/OnTrfitw1jiVq8erhw06ehZprdG2BIkVkvlrb4qx7MLFvX0cH
IcrxKtpqcEfBqfg15x6dKzd2vVHKnF9GcudNzDGJySUlG5aU+ifqy3kTU8Y4
y55Z1qdB+/E3H0uXb7rIaetOk/zH88vpqpmYPnxTOCloSn2jGjUu0LlgTLGn
yhRffjrMw6spLXrw6n9y9OBe2btxsawZ01drs2q91laxMrpjeZnV5w4dNz+8
5+90f8/fa9ZImcR6vKbfXqCAHLn/fjmm5qvfp0yRp59+OqAeld3bt2+vprmM
8Uupsbr2l4/0uYLNqQH2x08v6+sATyAnmIdXHbxKjou/cXbzzTfr173//vs6
Fl+2bFmNZVu0aKH3U+TtR8pWrVql7xXYevPmzenao3mW9UbMiD02dVvd4429
0saNG/W9NXul9QrDUfMzozwC0+FN1bqwljS7rZnc9+x90uGTDtJ+Untps7SN
3LD+Bqk2uppUPlxZzlMNfisxX9uHCrbopxpaWT1VI28LLdhxqs1Ubblq6LYT
M7a1hVI1k9OkcJPRs1quusarZ5+dzJcRVcZxE/cfPlzk4YdFbSbl+TxJ/sbK
RYvKIVNPPJO1WY1fFP4xHOYtqrGnWHJyiQz+c7B0/7G7dHqvkww7Nkzfr0eG
PCI1G9aUAgUL+Pz4zHfE2l/+/WX/vv6LYyTX8UR//PpcEjs4VgoOLihd/ugi
y04u8x0L953cP3ApfNPXVEO/gj0S42Suauyb0AYgrh+NtU09vJrSmJNMHmlW
4VXb0Bs9sG2NrJvwoUzvdbPCcMU0p3XUw2VlRu/msnHq13Jg+9o0xziOq/nm
6jop+Sw6nqWek1jL5xooJnbdddfpPCpybzNq4NFjCft1PavRHc9S2DyvTHrh
Mtkw5cuM+5FPIfPwqoNXWSPJZSI/5qabbpLGjRvr+Oqvv/6qX8c+yt+4BEcw
Vl566SWtT125cmVfJ4Y/ntwMcfwXYEywBx3fUXrGGFgHDje6Oegm5ZRxmh1t
3bp1cqmLx0+nHu8333yT7N6Su4W29OOPP65rPmUkhyuUHpM7RvKVyCfFKxSX
hjc21HEs4g0DBw6UzmM7S+1ltSXXdjV3H4qV0qrBf22mGvqXYFi4hhNUW6Ia
fAL8ZrYR8z2Y2OBDgm/ALfjW9u/bp/kAswYPdvBq6dIi6mc5eDDStyh049hW
rtT1sBJq1ZJq1nr2NHh75EjtO9Y+2QBmdB64HlwvcCf+a/AjuA6/NvlzcDy5
ptuPbZeFyxfK5CmT9X1hjmrStIm8/fPbMlK1Vm+1kmJnFJPY3MnX1npb6sl5
C1L6R5lTmNP5zt4ne0vut3NLXM84yTcpnxReUViKby8uZVQrp1p51dDfJ45f
T7WPVINXapvRCDY1UqMRk6ZmHl5NadGGV40d+XeH/D1/pPY9jmx3usKscTpe
/nvPJrJ+0mea96nrlAZZL3eoez5n1izp0Lp1uudOrk+4a92huXrgn3UytUdj
GdwqVobdU1hj150rpob1e6LdPLwaGn+VXD/WbOYvw0EEM5Dfhy+Meir+xm6z
Zs20FnvRokX94pJNmzZpLHLHHXfIFVdcoTEo34OeEViZv6FzAX7p0qWL1qO0
P4Na8BjYhxoD27Zti1xNeM8ybOxbmlk1kuyOH58aJ//68S0Su50yZYr06NFD
mjRpIsWKFUvxfrAwvP/MxLW651H4tlSMxFSOkdx1ckuea/NIvub5pOC9BaXM
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
rmKqP164oOzs2EZmta8lQ+8uqDX5xz1+rqwY9KocTzigMWskjbFNHYAVg1/T
/l40Vyd1qyurx/T1YdmcaGg/enpWSXpW+IPSk28YbQZuRP+H+4mOEvfXHc/3
FwvHTI4B7zM1WcFQ6ErxucbHig8NfMUaQkyTOiL+zM7JJ18hmNm8Nn81YTNq
7hot+Jo5P/bo9u9N7Rd/ZrQ0jF+X+LeJjxF/D2S2/xqfGr5eo5VDbJTrafC6
7fsNp6EPhb/SPld+Duc+DS5DmzZtQlrTA5mNV4nTpilXBWzw558i8I/VcQh1
cYidR+mzzX23+Zj42JP5vsGgu3c7uJtrythkL6CeUY1d8buqcSOdO4t88YXI
ypVZwomA3+Dmm8PzNlqK/vaz+JcDxV+Yc+xxasdv0Jmy94y22XgVnkAwg29i
Xm9qcRkDr5pnlP028W/+D8YNZuR+8Vrmi9QM3wGxHOYROuspWhsYmJdnk/wx
e0xwLdGV4vfueZI5mfgJ+iDUjsIHyuem1/BnGe49XDF7f8X6ChZHIwa9bzu3
l2NHO4Tn2PZ9olME9xTOR1p6oDmKWhUci7+8C2NH1Z7missvTzaeaqt+sGBB
+e/qq+T4uNGyYfA78nvPJhqvkos/rUdjzR9N+Ddlrl9m2omjCbJv6yqZ99ED
MqRNXn088z68X/5ZOjGixxFtxj7J07PKfvxVzNQDNz4u9iZ23JG1wJ8RWzOv
QVOK+ZD/cy0xu94jfEXmEf4fSH/JjukF8q8yrxnfChxY8/pg+fnpMZu/6vah
guXs+uhufw/G+mXig1WqVNHrIfnChkdAD/Q82LphhuvKXA+vgNwb5nTjbwKz
ZOY+Gpxg8wPB2+xdqScUTkMHlvqV8HPTcj4Zwqv42/BHEgsuXdrxQYIZfvvN
wX1RaOAvW9cBHnUK4/qBOzgPdISowUruo3qf5ghwrmoc6Vwt/PPwBOCnRMC3
R8zBzC/ok2BgKlO7NBC2ZPybPTA+VINriP25NYvtXD7i8ezB/cWJbLxqeDeB
DAxox4d3u8YHz7vZy+Kr5ZyIM4Wi24afgPcFyqEfOHCgL4+Va4Bun32+zH/2
fMte1pjN0QVLGuMZMzif3xv+Ov4F1nljxBLt559O/ihxM/7FB8H58nlunrHd
2ZMabRj3nsPmP/EMY9QAcftO+Jn3uXW2iX/hRzPjwF9+hDln3kt+XCDrZPkK
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
Los0XsU3UsXiwJyj5oPd7IHy5ZPNCj+TZ/XRmWc6NYXXrs3UYyHuTz3W1aPf
lV+fv1RzTwe3jpPpvW7WOBbMGogbgH+W10x74wYZ8VBpGdI2v4zvUk22Lxqv
uQCepW7p9a+ic0Hd4mjCq3bND/AqOjDBzMOraTM4rUafxcR3N1E3xLN0WU7C
qxjzDWu/XXuS9Q8uvdlb2niVmhZGsynTtUgMn5K6m6x5zB+sf3yv4bBGoeFH
sOuycz2zRM/D4H3qUMFVRSOAuCz1nT7/3OECXHWV47M2eBXeAFxXuBfUIVJ7
YKlWTeTmm52ct2+/pRirU0s2wubh1ZQGXqWmSSTxKvOCreVWVI2ZFfDL1d5n
Z9WqcliNk3j4KOwxGW+ZzHXX/FPV929bI6tG9JKhbZ3cq1EPl1WYtZmu4Xri
mP9abAd3bFA4t48MvbuQfs/4Ludr3uqB7Ws93moIlhH+6m233RZVeNU28Cr6
OMHMw6tpN3DDaaed5ps/qM3iWfosp+FVY/AvqRdvcwSIbU+bNi0ZXqXOD38j
poPde++9mosSqI58WMzkxRM7WLPGiXkbrMp+GCy2b19U8QMOKjzdsGFD37VE
nxKNviw1g/+JzeIbx289cqQI8+2rr4q0aydyww2OTha8V+rBGt4AeVzgVvjD
LVuKdO7s7B++/NLhHsDPgOMFdyCTzMOrKQ28avaakcKrT3XpkkwLYCzjRI2R
nmefLXnU/88qU0YOTp4sMmuW89xGiP95/Mgh2blyWmIt1bM0D3VUhzNl8cAn
ZMcfU7Qv1XBRwaJg2NVj3tVcVXKs8K3OfOc29Rm/67qvngW3jOBVOGXRhFfJ
4bD9q9TuCmbg1bfffluWLVsWuRzbbGCrVq2Siy66SIoXLy5z5szROs9owLv1
pT1L3XIqXjUGvwjNKlv7Hq4r+iXg1RtvvFHr5+Bj2bx5s+911HSNuDG3kHcF
5iLPSI177UvMgli1PyO/rVWrVsmuJfU/os64Zmjczpwp8s03jk7W3Xc73IFL
LnE4GAqDaO6A8cOS943v9eqr2bSIvPKKyBdfiIwe7fhv4b6CiQ2GDYMv3MOr
KQ28avQ7IoFXv/7qq2R72nfxxSusurpKFV+924bXXJNlOUpor25fPEGmv9VM
ht9fQgbfGSfjHj1H52OBWQ/t2SJHD+7V+VXbl/4iU19r6OhXqT7hyeqycuib
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
ocOYDLWliJMwn0b/4//UedHvySU//fTTfX1P+kB4H2neLdq7TP01GsNjPXJU
mCOI5gBRMytb/9dGvrSuR00tfP3xAWJ/qa8VbhfNJnMXEyZMiN0WMaswB4a4
ktZO5bvo8kOGDEkuSyyKOA+xG/K3o/O15N3kekylbMwLZ4vXUUOXeddOnTr5
60gMizoKYRyWxhxQuvv7tnHj5C+0W25JtPHjE88Z99ndt94qU3v1kqlu+1P7
95eprr9OdZ9PxXt2ypSSn6Nyb/TVFi1a+GuFLwQx2gcffNDHdfAV4PzTr6m7
Rn7Y4Ycf7n2ddtppJ++nVcg8sGI27n90q8SCOTa8EYj/4y1MDT3mgPR5mO7c
sTz98Jqrr5aTfvc7aRFzL2zl7mWeJTzT8DPjHmAugmewzkfw+9F3jc5NZGo3
3XRTnd/P8IBS9z1r8Y13K3l69B/mRfJZt3v37mXNV02/aqgv6Of6fIW/RcGz
Vb+Hb0TxwAMP+O+oPYQnh4L5//DZjfcPXDWTfvXdd99N+qkzJ0eebRTkoWgN
I7hyroAb6r7w/xDkXsDh9Xt89DOB+yk8Ns2LSYer3TtNl6UGSahfxQuUz9Vz
D85fKaAGK/lXcZwAPlCQGqOqDaQ+GE1zf/C4euQRcQRKHDEWR/TFDTxERo0S
efzxhD+8ISNCP6u4ez8buG+oQYOOFT0rPJftUCuB5wYaWvqzzq8Xs6FBhVej
D2fsSZ4/z6TVWWpLocelDjvbgLNnBd4Wr7win/fr52tf7O6eTbPd///1wgtr
/NkMhhxRX/2q8VVDNYP6POoTT/5xFGGdTWoFRWtREvfkO8bsIaJ8lXdjhw4d
MvLVYcOGJZen/lI6EBtlmW7duuV8nCFfJb4ZBe9a/X7AgAEZt0W8MDw2YlOZ
QIxKlyWeG/JVzb+n9ibcFd5facDfM1orlQaXJYZELAnOrnW4CgJ8Anie9+8v
svXWibys9dcXOeQQBhQU9S3cb1Up6stX8wF9HQ9YYrjca9zDxBaJtxMXYuwJ
T2RMm2uOGPF75iN4bvXu3dvzZOZ28EzguVYX5M1X4aTUzXriCXnd/f63PFvg
qvitGgx5wviq8VWDZKx7E3JScvlDUCsofEdEPTiZo0dTEN1+lK/yHmDePB1f
5fsNaupxUoMyU10l4nbE78hXzhUhX4U/RhHGTJn7TAdyMlgGfYF6uXP8mTx/
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
VR9TDDUC/P0avlKVDmow8T6YM0fk2mvFkVOR5s3lo4EDZbstt5SNNtpIjjzy
yARfdTyVY19/3XVltTsnPjerEeEdd705/h3d+fl8/HhZ9vDDyf5w9tlnl3r3
DI0M+fBV6uPNcff4n/70Jxno7m3m6cqZr7J/2fJdja8aSgnjq6mI8tVWrVqV
epcaJYin3nvvvb5PKkch7kqtp68q3R8ez1C0AW+8IfLEE7wIRPAO+OCD5CIr
PvxQdnF9T4/9vHbtRK66KqFzfe+9qvYc5V3/AecCnYg7N//E78ydjy+WLk2e
jwvxCTMYiohqjq/+7ne/y7qc8VVDKWF8NRVRvtq6detS71KjBtxl9OjRtTQC
eG9S66gqwBw//JXYKf/W4PM335Q222yTPOY5664rr7dsKc3cv7u6f6++8kq3
SpXFW1et8nrfg/ff3/seLyX/LMDXX3+drDmRSz6zwVBIVDNfHTlyZNbljK8a
Sgnjq6kwvlqeoJ9269atlkbgoIMOkjeIUVYhVi5eLLtuvXUyJ+sr1751bdMa
/y/q2lJ/4UfHWf+NxiDih1VR0H12x/PJ7bcnr+/TEU4AX91ggw38d9eipTAY
iohq5qvnnXde1uWMrxpKCeOrqYjy1R122KHUu2QIMHnyZNkmiDuuu+66vk7n
N9SgqiKgB9jZ9T0fT95kE+/j6jqjvDlwoNx8yiny3Ny5frkTTjjBeyl069BB
3n/4YQLSiVoGlQRyyfCvPfNM+WKvvaTpWmtJi403lq/R+AaAr+KHzDnJxd/c
YCgkqpmvXn311VmXg68yr0HdE2psGwzFhPHVVBhfLX9wjci3WWeddZK8lby4
adOmlXrXCgbyrXau8QfYDX+AWbMS+VmPPy7y6afJGOrF55+fPAfnOM666qqr
5Kx+/WTOvfcm6siWu84VTcNbb8ljw4fLddtuK24AIm80bSofjhgh8sILtRYN
+eq4ceNKtMOGxgbekfDT2bNny+DBg6uSr958881Zl4Ov4jF4ySWXyDvvvFOE
PTMY1sD4aiqMr1YO0ALgGxhqBHr27Clv4xlV4YCv7rTTTv6YunTpsqYObFgL
y+GnDz6Qse7eHbjJJvJmkybylvtX9QKX4vlU7hpXd799P3WqbFGjc1jg+Krs
uGOiTgC1rQLAVzepOb7bbrutRDtsaGyY6von+X0XXHCB95qrRr56yy23ZF0O
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
nqMZX00AX5nTTjvNe5MbX618kFOtPqZxMTlqpfPd/vvvX+tzjb3iKcUycaA2
UMuWLf1yxGG//vrrWt/vuuuuSX51ww035LXfzNHputdee62vuYl2QT/D24ia
mNHfrGZQw8r4qqFUqCa+ypzQmDFj/D7dcccdxlcNZQ/jq6kwvlpdwINR+Sp6
VXxPo+jcubMcc8wxyb+pZa+10AcPHpxx+9RyVw6FD1WIXr16Jb+LqxOfCffc
c08tvgrgpngfqS+r8uT7778/r21XKsLrcvXVV5d6dwyNDNXEV5977jn/jKHG
Ff8aX60bmOdiLkxrhZUbeGfMmjUrbcylIYBu68EHH/Rz1IVEIfkqPIB62nUF
67744os5L0/cbM6cOTmvw3wu+kPmFDPB+Goq8Ihkvpv89XIF1w1dKflRURx2
2GFJfgfXGzhwYK1+w7sHPZcCL3pdHr1MOrz22mteO6LLkssV4rjjjkt+N2XK
lLyOJ9yu8lUFdXIOPvjgWhqBgw46KKWuJ7lg9XlucK9wz0S1EIVch+vAfZxL
jXf4qmosrrnmmpz3qZqBpiWf52ApQP+bMWNGztrtQgCtGxrwQs4/VBNf5XmJ
FoD7zvwB6g50FeTjfvzxx6XelVhQT5Ha1Y899ljRfhOftDPPPFOeffbZgm63
kHz17rvv9vXR6wrWnThxYs7L85ym9nqu65ADQ32+bHUMja+mghjljTfe6DlU
uQI+zfx4HE/iPRHm22ujvlRcbFL1rrRMNRQZV6MxwONfc6pC8I7KhffGgf1K
x1cVcGDNB1MuznOCnEFA7u9ZZ51V5+cG98pJJ53k75181uE+y3Ud7l/uY+7n
bICvUmcz0zlpbGAsyfkjRlaugE8zL4AmvFh45JFHfE0JYj2FQjXxVfT3WnvC
6gXUHcZXU2F8NRXGV4uHSuerAN5JDDLKWXXOP+RLBx54YPK7Dz74IO1vKl9V
DWuUrw4bNiy5HWK/+QC9aja+CtDQctzoWXV5vAy4Vjw3qo2vqhbC+GoCxlfj
YXw1M4ir6j3HsyKXd7fx1VQYX02F8dVUGF8tHqqBryqIOY4dO9ZrBML8fY5P
gRerfo7fSzooX0UXq/HaEOF20sVXmbOP0xYxj58LX1Wgo8I3IOThnTp1kqFD
h1YVX1UtstX8SsD4ajyMr+YOnuvo8LMBvso55ditJRpx6dNPP937DJZ6X+Ia
cRJiFjwjivWbzPuNGjXKj20KuV3e22eccYZ/N5IbQnyortsiXxceX9f1WZcc
ilyXR2948cUX57wOfJqalzzXMy2H9o5nEvcmcTZiZ6XoZ+XUGNdQkxveVOp9
Sdf0uUFcMvod+45GK/o5/V+9osi918/xaFXOx3s23W+SXwWf02Xhp+H37du3
T37HPsRtA40rXlrRz6+//vrkusOHD8/5PHBPUJtA14WTo3WFW+d7TrlX4J7c
O/msw32W6zrcv+wz93O2ZdFIKF/lN0rd58qhkefN+UPPW+p9Sdd4b5166qky
derUov0m/Oucc86pU79P12bPnu3nYurKV8vVgw6+mot/CdeP+JY1a6Vu1N6h
Hk+p96OcGjXc0T2Wej+s1a/ho4pfVdx3+v4h71w/gx8q38OTKtO2e/TokVwW
j4Hwu2bNmiW/69u3b+z6rVq18vW2op8TK9Z14Zv5HC/rdunSRZo0aZLcBvd2
nz59Sn4t6tuaNm3qj4fzXup9sdb4muZQVhtfzWW+ghqBzC9bs1bqNmjQINlq
q61Kvh/l1Hi/4xVf6v2wVr8Gx9l99919navod+g/VPMZfn7AAQf4z1kX308+
I3aIB0DHjh193Ib5Ta3TSpyW3Phwu6HegPhX9LeJQcKTmduIfhd641900UV1
Om48O6KaXTQC1Pcq9TWpa2MOiONgPqbU+2Kt8TXV6VQbXzV/OEMlwfxXU2H6
1coHebDh3H5UJwnv4Ts0ICHIs9K8f+piEXMlXomPP7UE0KweddRRyW1TizsE
+oOQJxLzVJDrgEe3zm3HeTOhS8xHv5oJvGO333775PY4jpEjR5atZ2AmaM0x
9BIGQ7GBTr4a+erll19e6t0wGHKG8dVUGF+tDigvpP3mN7/xvJU8qUMPPdR/
tvHGG8f68r7yyivJ+KnyPLglOQf6GeuiTYWDao4RPpO77LJLLb663Xbbef0l
vJb4rH4OJ06XW6re+IXIhf/222/9fOb666+f/G10rvDmXHKdygWqN863XpjB
UAhUK19l3G4wVAqMr6bC+Gp1gGfxTjvtlMzj1/brX//a1w6Al6YD+fvMx4fx
ybDBfQHb4G+8PPBTwF+CHCLyRnkfkHMSNvL6yNvPFONsCO8mvNvD+gmqEViw
YEHBfqMhoblkoZ+DwVAsVCtfZcxtMFQKjK+mwviqIQS1cqibc/vttye5L3lN
1Lk6/vjj/d/51ILKBs0tagivUfS3rVu3ruUjcMIJJ3iNXjkDjb3xVUOpUK18
FQ9Rg6FSYHw1FcZXDekA34vGWnfbbbeC/gZag4b0xl+9erWPHYcaAXg4Xn3o
Z8sReCmwn3iJGQzFRrXyVby/DIZKgfHVVBhfNWRC9+7da/FV5vgLCY3hNnQt
J3z4Dz/88FrHgndsoeuTFAI8o9i/XPzNDYZCo1r5KvWIDIZKgfHVVBhfNWQC
2lPqbeAXMHny5IJvX3OLilV7NKoRIN+L2gmffvppUX4/FyhfjfoxGAzFQLXy
VWqtGAyVAuOrqTC+aigldO67WHwVoBGgXlKoEdhwww39Z99//33R9iMdlK+i
WTAYio368FU8mcsR8FX87dAAUb922bJlXseOF2AU+KDQGKuj1YeD/+Mf//Ae
1Yxrv/vuu4ryGzGUDvQj+gr9hjrecY18EfoW/jYhhg0b5t+P+E5qH+T++uyz
z+Sbb74p0RHVD7x7qRf/z3/+M+V4FZwv3sPco+ROv/HGG77OM+fhyCOP9HyV
85rrOl9++WXynjY0LvB8/+qrr/z8err7j3uP/hjVh9I/qWfA99x79CflZtQ6
DqH9a9WqVd4LK7xf+Zt+X993RpxGgHvh4Ycfzml9fh9vBfaLc5Juf/ic5wvv
Pvafe4nj4W/q6UTvJermsi/U4+He5jyxDvch5y/dfY5nA+crn3UMlYUffvjB
P3/pP+nuP/o1/VJB3+JexIOO5zd9gz5L3+DdR78J+67yVerg5roO4P3Ku5fv
y2HcFwK+Sl1pnhscH54m1OCOe+9zvnjOzZs3z3tR45FHfXr8AakbzzuR62Aw
ZAP3CH2FGurU/Y5r1HHGG5jaPCHIb8aLmzrs9EF8evCZZI6Qe7wSwTsPnduj
jz7q31Nx4N6DP3CP4q2J7pxcSTyHqA2ED1KUe6Zbh7zxF154wT//jK82PsDL
Xn/9dbnuuuvS3n9XXHGFPPLIIykciftx1qxZ/rnPvXfBBRf4WsC8Gy+99NJa
yyqHe+mll2TixInei4Z1uK+pU0C/L9Q7MaoR0PqwmTzAAL8/d+5c/y7jPZ3u
Hca7HQ8wjoPnDfcSx0PtL34jei9tu+22fh9Yjpyr888/39dioD7PY4895vlD
HOCqixYtqrUO9+7jjz+edh1DZQEeOn/+fN9/0t1/3Jtz5sxJrkPfgqfBv3h+
c9+h5aRvPPTQQ57/0kcVyld5p8Stw/0SXQfAV6k3xzZ5d5QT4KvEfwH3G++3
bPmW3NMsx32tjb/tvWfIF/Qb3hfpGn0r2q9UD8B9FvbBSuZe7DfHk+0YdMwY
Hjv/P/roo9PqAdKtY3MhjRtcf/pBpnsv7l2gcZ7w3qMWcCY9AL9VjHcG73M4
QKgRoHYC/lfEi9JBjyfbPaH3UvQ44tZr2bKl//1bb70172eVXptqeb4ZUqEx
m3T3n74P4taL6xtRhHqA6Drptg1UD1CO/Q2+2r9//7zWYWxdrh4ihuqH6VdT
YfpVQynRpk2boutXMyFOI6DaVjhtMaB8ddy4cUX5PYMhRLXqV3v06OH/n6v/
Ml4omcaqjRHl7l1div1rqN8sFF+t7/7VZf1818l1eeOrqSj3exJUy33Ztm3b
gvHV+uxfdF3mNFu1alWLt8Ijx44dW0uHkI+OLdf9o66t8dVUlPt9Wez9Y/yE
PqfQqFa+So1okKvPyYQJE+Tll19uyN2qOFBvu9xi5yHQwRR7jME5aQgUiq+i
zavPc4Ljy3dOPV8vIXThufyG8dVUFNpjtCHQUPdIsX+zQ4cOBeOr9fHbils3
TiNA4xmCnm/69Olej5orcu1XWhcXnb0hAfJics2DKxWKfU+ScxzqVAuFauWr
6MLJ9Tz00ENzWoe8ELTfhjVAv0zOXblixowZMmbMmKL9HhwLTSWa8kKjUHyV
3BDGXnXF8OHDfd5EPqAeOvmZueKUU07xevlsML6aCq5POY8hAdeNPNVigXwh
cvMKnRe79957F4Svwi332muvOvl8cK3322+/tHVmeT5z/0VrfdG6du2a8++w
7Icffph1OY3rjh8/PudtVzvwhECTUc445JBDiuozw3iJ53yhn1XVylfxWt5n
n32SdfoGDBggI0aM8HmJca1bt27Su3fvtN83xsZzkndPqfcjXcMnXOfCeF8d
ddRRyeuM/259tn3aaaf57RxzzDHeV4laOlo7e+211/bvMrRk+HkX4vfatWsn
G220UV7rkKPLb3Mvso/MKVCHnFyMTp06Sd++fT2/wZMg3TbIq2QZzh3vVO6b
9dZbTw488EAZPHiw99mIrkPOMb9L39hjjz38OaF25W9/+1ufhzlq1KiUddjO
cccdJ/vuu6/fx3XXXdc/Q8kZGT16dOy+7bLLLrLZZpuVvJ+VU9thhx28V1+p
9yNTw5eN60t/4hrTT4YMGeLzg+u7bbYxdOhQv01iEfR5fos+iL8/zwFyFxj/
nXzyyfX6rRYtWvjt8m7Id13uj0GDBvl91OdG8+bNpVevXt4LJO6+0kYNBPa/
T58+frzGutwH3M/hOeS+5ne4r7R2bLQRI+YZFXcu2Aeel6p7oJ4Xv8k28TuI
27dNNtnEL9uzZ8+S97NyaTw/d91115LvR6bGc533S+fOnX2f5P7hWc21/u//
/u86b5d+on2QWA46TM4Fz3j6CfF4PuP3eNZn6ve5tIEDB/rt0m/zWY/3a7ny
VfyEuPesWbNmzZo1a9asNe5Wqb6QBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPB
YDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAY
DAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYEvj/
DNMb3A==
         "], {{0, 425}, {684, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{366.6666666666646, Automatic},
       ImageSizeRaw->{684, 425},
       PlotRange->{{0, 684}, {0, 425}}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"worsened", " ", "by", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "/", "2"}]], " ", "still", " ", "achieves", " ", "target", 
     " ", "at", " ", "1", "kHz"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8395415765131063`*^9, 3.839541767290801*^9}, {
   3.8395418067700777`*^9, 3.83954183461124*^9}, {3.839541958837928*^9, 
   3.8395420003643703`*^9}, {3.8395420898957777`*^9, 3.839542099826524*^9}, 
   3.8395421549945383`*^9, {3.8395422302947474`*^9, 3.839542232742361*^9}, {
   3.839542328645002*^9, 3.839542363815112*^9}, {3.839542620350111*^9, 
   3.839542717985924*^9}, {3.8395452998879004`*^9, 3.839545300746395*^9}, 
   3.839548311586141*^9, {3.8395483419223146`*^9, 3.839548404264525*^9}, {
   3.8395484387915697`*^9, 3.83954845963323*^9}, {3.8395488752889357`*^9, 
   3.839549057209939*^9}, {3.839549293430669*^9, 3.8395492957420673`*^9}, {
   3.8395495711020412`*^9, 3.839549596593495*^9}, {3.839551008824814*^9, 
   3.8395510470166063`*^9}, {3.839551110576812*^9, 3.839551159474628*^9}, {
   3.839551264003932*^9, 3.839551268533678*^9}, {3.8395512987855062`*^9, 
   3.8395513090445127`*^9}, {3.839551358269042*^9, 3.839551435169609*^9}, {
   3.839618724159737*^9, 3.839618741938689*^9}, {3.841277069738606*^9, 
   3.841277101507958*^9}, 3.8425775848125963`*^9, {3.842577800485285*^9, 
   3.8425778009713*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"9f736451-d92e-4103-8f1c-c2e093c38685"],

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"singularityThr", "[", 
     RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}], 
    RowBox[{"singularityThr", "[", 
     RowBox[{"0", ",", "0", ",", "0", ",", "False"}], "]"}]], ",", 
   "\"\<  \>\"", ",", 
   FractionBox[
    RowBox[{"singularityThr", "[", 
     RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "False"}], "]"}], 
    RowBox[{"singularityThr", "[", 
     RowBox[{"0", ",", "0", ",", "0", ",", "False"}], "]"}]]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valsList1", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "4.93", " ", 
        SuperscriptBox["10", "3"]}], 
       RowBox[{"(*", 
        RowBox[{"Hz", ",", " ", 
         RowBox[{"value", " ", "from", " ", "Li"}]}], "*)"}], ",", 
       FractionBox["\[Pi]", "2"], ",", "0", ",", "0", ",", "0", ",", "0", ",",
        "True", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["4.93", "5"], 
        RowBox[{"(*", 
         RowBox[{
         "using", " ", "98.6", "%", " ", "\[Chi]Thr", " ", "like", " ", 
          "Li"}], "*)"}], 
        RowBox[{"singularityThr", "[", 
         RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}]}], 
       ",", 
       FractionBox["\[Pi]", "2"], ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
       "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["4.93", "5"], 
        RowBox[{"(*", 
         RowBox[{
         "using", " ", "98.6", "%", " ", "\[Chi]Thr", " ", "like", " ", 
          "Li"}], "*)"}], 
        RowBox[{"singularityThr", "[", 
         RowBox[{"0", ",", "0", ",", "0", ",", "False"}], "]"}]}], ",", 
       FractionBox["\[Pi]", "2"], ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
       "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["4.93", "5"], 
        RowBox[{"(*", 
         RowBox[{
         "using", " ", "98.6", "%", " ", "\[Chi]Thr", " ", "like", " ", 
          "Li"}], "*)"}], 
        RowBox[{"singularityThr", "[", 
         RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "False"}], "]"}]}], 
       ",", 
       FractionBox["\[Pi]", "2"], ",", "Tla1", ",", "Tlb1", ",", "Tlc1", ",", 
       "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["4.93", "5"], 
        RowBox[{"(*", 
         RowBox[{
         "using", " ", "98.6", "%", " ", "\[Chi]Thr", " ", "like", " ", 
          "Li"}], "*)"}], 
        RowBox[{"singularityThr", "[", 
         RowBox[{"0", ",", "0", ",", "0", ",", "False"}], "]"}]}], ",", 
       FractionBox["\[Pi]", "2"], ",", "Tla1", ",", "Tlb1", ",", "Tlc1", ",", 
       "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotASDShwRP", "[", 
  RowBox[{"valsList1", ",", "None", ",", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Red", ",", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Dashed"}], "}"}], ",", "Orange", ",", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", "Dashed"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", 
     RowBox[{"3", " ", 
      SuperscriptBox["10", "3"]}]}], "}"}], ",", "None", ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "24"}]]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"therefore", ",", " ", 
    RowBox[{
    "the", " ", "effect", " ", "is", " ", "small", " ", "and", " ", "can", 
     " ", "be", " ", "left", " ", "to", " ", "future", " ", "work"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.843601405788844*^9, {3.8436014383205433`*^9, 3.843601463196534*^9}, {
   3.843601545990549*^9, 3.843601651133142*^9}, {3.843601694820436*^9, 
   3.843601830775961*^9}, {3.8436021545996733`*^9, 3.843602185760735*^9}, {
   3.843602618563015*^9, 
   3.8436026290079823`*^9}},ExpressionUUID->"55fa506e-ecfe-42da-bc8a-\
b1bd0aab6c61"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Li", " ", "does", " ", "not", " ", "update", " ", "their", " ", 
    "parameter", " ", 
    RowBox[{"(", "G", ")"}], " ", "to", " ", "lossy", " ", "threshold"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ASDShConwRP", "[", 
     RowBox[{
      RowBox[{"\[CapitalOmega]0_", "?", "NumericQ"}], ",", 
      RowBox[{"Tla_", "?", "NumericQ"}], ",", 
      RowBox[{"Rpd0_", "?", "NumericQ"}], ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"\[Gamma]a", "+", "\[Gamma]R"}], ")"}], " ", 
          SuperscriptBox["\[Rho]RP", "2"]}], 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Gamma]a", "+", "\[Gamma]R"}], ")"}], "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Gamma]a", "+", "\[Gamma]R"}], ")"}], "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", "\[Gamma]R"}], "-", 
          RowBox[{"4", " ", "Rpd", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", "\[Gamma]R"}]}]]}], "]"}], 
      "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tla1", "=", 
     RowBox[{"75", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";", 
    RowBox[{"Tlb1", "=", "Tlb0"}], ";", 
    RowBox[{"Tlc1", "=", 
     RowBox[{"100.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"setConfigParamsCustom", "[", 
    RowBox[{
     FractionBox["2.`", 
      SuperscriptBox["10", "6"]], ",", 
     RowBox[{"4.`", " ", 
      SuperscriptBox["10", "3"]}], ",", "None", ",", 
     RowBox[{"3.`", " ", 
      SuperscriptBox["10", "6"]}], ",", "None", ",", "0.046`", ",", "200.", 
     ",", "\"\<Li et al, 2020 + 400. kg\>\"", ",", 
     RowBox[{"2", " ", "\[Pi]", " ", "500.`"}], ",", 
     RowBox[{"2", " ", "\[Pi]", " ", "5000.`"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsList1", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "4.93", " ", 
          SuperscriptBox["10", "3"]}], 
         RowBox[{"(*", 
          RowBox[{"Hz", ",", " ", 
           RowBox[{"value", " ", "from", " ", "Li"}]}], "*)"}], ",", 
         FractionBox["\[Pi]", "2"], ",", "0", ",", "0", ",", "0", ",", "0", 
         ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox["4.93", "5"], 
          RowBox[{"(*", 
           RowBox[{
           "using", " ", "98.6", "%", " ", "\[Chi]Thr", " ", "like", " ", 
            "Li"}], "*)"}], 
          RowBox[{"singularityThr", "[", 
           RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}]}], 
         ",", 
         FractionBox["\[Pi]", "2"], ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox["4.93", "5"], 
          RowBox[{"(*", 
           RowBox[{
           "using", " ", "98.6", "%", " ", "\[Chi]Thr", " ", "like", " ", 
            "Li"}], "*)"}], 
          RowBox[{"singularityThr", "[", 
           RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "False"}], "]"}]}], 
         ",", 
         FractionBox["\[Pi]", "2"], ",", "Tla1", ",", "Tlb1", ",", "Tlc1", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotStyle0", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Darker", "[", "Gray", "]"}], ",", "Blue", ",", "Red", ",", 
       "Orange", ",", 
       RowBox[{"{", 
        RowBox[{"LightGray", ",", "Dashed"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Cyan", ",", "Dashed"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Magenta", ",", "Dashed"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"monoS", "[", "str_", "]"}], ":=", 
    RowBox[{"Style", "[", 
     RowBox[{"str", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Monospace\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ASDShConwRP", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", "0", ",", "0"}], "]"}], 
           "}"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ASDShwRP", "@@", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
               RowBox[{"valsList1", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "valsList1", "]"}]}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"qnoisesc", ",", "qnoisewlc", ",", "totalnoisewlc"}], 
           "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "10", ",", 
         SuperscriptBox["10", "4"]}], "}"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "14", "]"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<sensitivity / \!\(\*SuperscriptBox[\(Hz\), \
\(\(-1\)/2\)]\)\>\"", ",", "14"}], "]"}], ","}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<frequency / Hz\>\"", ",", "14"}], "]"}], ","}], 
           "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "650"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "plotStyle0"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"10", "^", 
           RowBox[{"-", "25"}]}], ",", 
          RowBox[{"5", " ", 
           RowBox[{"10", "^", 
            RowBox[{"-", "23"}]}]}]}], "}"}]}], ",", 
       RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}], ",", 
     
     RowBox[{"Framed", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"legendOrder", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "\[Rule]", "6"}], ",", 
             RowBox[{"5", "\[Rule]", "7"}], ",", 
             RowBox[{"2", "\[Rule]", "1"}], ",", 
             RowBox[{"6", "\[Rule]", "2"}], ",", 
             RowBox[{"3", "\[Rule]", "3"}], ",", 
             RowBox[{"7", "\[Rule]", "5"}], ",", 
             RowBox[{"4", "\[Rule]", "4"}]}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"Permute", "[", 
            RowBox[{"plotStyle0", ",", 
             RowBox[{"SparseArray", "[", "legendOrder", "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Permute", "[", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "\"\<lossless, single-mode detector\>\"", "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<nondegenerate internal squeezing: lossless\>\"", ",", 
                 "\[IndentingNewLine]", 
                 "\"\<nondegenerate internal squeezing: realistic optical \
losses\>\"", ",", "\[IndentingNewLine]", 
                 "\"\<nondegenerate internal squeezing: optimistic optical \
losses\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Li et al, 2020: lossless, single-mode detector\>\"", 
                 ",", "\"\<Li et al, 2020: no optical loss, quantum noise\
\[Dash]limited sensitivity\>\"", ",", 
                 "\"\<Li et al, 2020: no optical loss, quantum and thermal \
noise\[Dash]limited sensitivity\>\""}], "}"}]}], "]"}], ",", 
             RowBox[{"SparseArray", "[", "legendOrder", "]"}]}], "]"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "14", "]"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"FrameStyle", "\[Rule]", "Thin"}]}], "]"}], ",", "Bottom"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<nIS_vs_sWLC.pdf\>\"", ",", "%"}], "]"}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.842575406021821*^9, 3.8425754077503443`*^9}, {
   3.842575459271105*^9, 3.842575467152527*^9}, 3.8425755207476797`*^9, {
   3.8425758430592213`*^9, 3.842575853726335*^9}, {3.8425761735804157`*^9, 
   3.842576301226389*^9}, {3.8425763348500557`*^9, 3.8425763350534067`*^9}, {
   3.842576383882304*^9, 3.842576386405072*^9}, {3.842576509586738*^9, 
   3.842576516775724*^9}, {3.842576733643108*^9, 3.842576863758369*^9}, {
   3.842576970645115*^9, 3.842576976995243*^9}, {3.842577059475244*^9, 
   3.8425770893819017`*^9}, {3.84257712915211*^9, 3.842577129489462*^9}, {
   3.842577285841662*^9, 3.842577519190515*^9}, {3.842577619497171*^9, 
   3.842577637372291*^9}, {3.842577687969715*^9, 3.842577783386281*^9}, {
   3.842577830413497*^9, 3.842577942340417*^9}, {3.842577995825232*^9, 
   3.842578020837932*^9}, {3.842578066492166*^9, 3.842578069247469*^9}, {
   3.84257813929818*^9, 3.8425781748965597`*^9}, {3.84257829230639*^9, 
   3.842578465253433*^9}, {3.842579139243135*^9, 3.842579141452244*^9}, {
   3.8428127905453253`*^9, 3.842812794545993*^9}, {3.843600027890472*^9, 
   3.843600055226822*^9}, {3.843600301956397*^9, 3.843600380373651*^9}, {
   3.843601154931041*^9, 3.8436011753215923`*^9}, {3.843974753976775*^9, 
   3.843974834493637*^9}, {3.843974946195343*^9, 3.8439749701337013`*^9}, {
   3.843975003276115*^9, 3.8439750055483093`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"3defe545-0e93-4379-a632-8bb4174d048f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ballpark", " ", "losses", " ", "to", " ", "match", " ", 
     RowBox[{"sWLC", ":", " ", 
      RowBox[{
      "other", " ", "losses", " ", "fixed", " ", "at", " ", "realistic", " ", 
       "values"}]}]}], ",", " ", 
    RowBox[{"idler", " ", 
     RowBox[{"loss", ":", " ", 
      RowBox[{
      "minimum", " ", "required", " ", "to", " ", "beat", " ", "sWLC", " ", 
       "at", " ", "all", " ", "freqs", " ", "is", " ", "350", "ppm"}]}]}], 
    ",", " ", 
    RowBox[{
     RowBox[{"range", " ", "350"}], "-", 
     RowBox[{"500", 
      RowBox[{"ppm", "?"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"TlcMatch", "  ", "=", " ", 
     RowBox[{"350", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsList1", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "4.93", " ", 
          SuperscriptBox["10", "3"]}], 
         RowBox[{"(*", 
          RowBox[{"Hz", ",", " ", 
           RowBox[{"value", " ", "from", " ", "Li"}]}], "*)"}], ",", 
         FractionBox["\[Pi]", "2"], ",", "0", ",", "0", ",", "0", ",", "0", 
         ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox["4.93", "5"], 
          RowBox[{"(*", 
           RowBox[{
           "using", " ", "98.6", "%", " ", "\[Chi]Thr", " ", "like", " ", 
            "Li"}], "*)"}], 
          RowBox[{"singularityThr", "[", 
           RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}]}], 
         ",", 
         FractionBox["\[Pi]", "2"], ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
         ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox["4.93", "5"], 
          RowBox[{"(*", 
           RowBox[{
           "using", " ", "98.6", "%", " ", "\[Chi]Thr", " ", "like", " ", 
            "Li"}], "*)"}], 
          RowBox[{"singularityThr", "[", 
           RowBox[{
            RowBox[{"100", " ", 
             SuperscriptBox["10", 
              RowBox[{"-", "6"}]]}], ",", 
            RowBox[{"1000", " ", 
             SuperscriptBox["10", 
              RowBox[{"-", "6"}]]}], ",", "TlcMatch", ",", "False"}], "]"}]}],
          ",", 
         FractionBox["\[Pi]", "2"], ",", 
         RowBox[{"100", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}], ",", 
         RowBox[{"1000", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}], ",", "TlcMatch", ",", "0.1", ",", "True", 
         ",", "False", ",", "False"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", "\[IndentingNewLine]", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ASDShConwRP", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", " ", "f"}], ",", "0", ",", "0"}], "]"}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ASDShwRP", "@@", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
               RowBox[{"valsList1", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "valsList1", "]"}]}], "}"}]}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"qnoisesc", ",", "qnoisewlc", ",", "totalnoisewlc"}], 
           "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "10", ",", 
         SuperscriptBox["10", "4"]}], "}"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "14", "]"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<sensitivity / \!\(\*SuperscriptBox[\(Hz\), \
\(\(-1\)/2\)]\)\>\"", ",", "14"}], "]"}], ","}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<frequency / Hz\>\"", ",", "14"}], "]"}], ","}], 
           "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "650"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "plotStyle0"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"10", "^", 
           RowBox[{"-", "25"}]}], ",", 
          RowBox[{"5", " ", 
           RowBox[{"10", "^", 
            RowBox[{"-", "23"}]}]}]}], "}"}]}], ",", 
       RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}], ",", 
     
     RowBox[{"Framed", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"legendOrder", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "\[Rule]", "6"}], ",", 
             RowBox[{"5", "\[Rule]", "7"}], ",", 
             RowBox[{"2", "\[Rule]", "1"}], ",", 
             RowBox[{"6", "\[Rule]", "2"}], ",", 
             RowBox[{"3", "\[Rule]", "3"}], ",", 
             RowBox[{"7", "\[Rule]", "5"}], ",", 
             RowBox[{"4", "\[Rule]", "4"}]}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"Permute", "[", 
            RowBox[{"plotStyle0", ",", 
             RowBox[{"SparseArray", "[", "legendOrder", "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Permute", "[", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "\"\<lossless, single-mode detector\>\"", "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<nondegenerate internal squeezing: lossless\>\"", ",", 
                 "\[IndentingNewLine]", 
                 "\"\<nondegenerate internal squeezing: realistic optical \
losses\>\"", ",", "\[IndentingNewLine]", 
                 "\"\<nondegenerate internal squeezing: CUSTOM optical losses\
\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Li et al, 2020: lossless, single-mode detector\>\"", 
                 ",", "\"\<Li et al, 2020: no optical loss, quantum noise\
\[Dash]limited sensitivity\>\"", ",", 
                 "\"\<Li et al, 2020: no optical loss, quantum and thermal \
noise\[Dash]limited sensitivity\>\""}], "}"}]}], "]"}], ",", 
             RowBox[{"SparseArray", "[", "legendOrder", "]"}]}], "]"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "14", "]"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"FrameStyle", "\[Rule]", "Thin"}]}], "]"}], ",", "Bottom"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.85224771710415*^9, 3.852247738940134*^9}, {
  3.852247772206053*^9, 3.852247886129333*^9}, {3.85224797070789*^9, 
  3.852248079382144*^9}},ExpressionUUID->"d4436af8-c7f6-4c89-a918-\
02b0f27771a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "ballpark", " ", "losses", " ", "required", " ", "to", " ", "hit", " ", 
      "5", "e"}], "-", 
     RowBox[{
     "25", " ", "sensitivity", " ", "target", " ", "from", " ", "Miao", " ", 
      "et", " ", "al", " ", "2018"}]}], ",", " ", 
    RowBox[{
    "noting", " ", "that", " ", "the", " ", "sWLC", " ", "overlay", " ", 
     "aove", " ", "has", " ", "an", " ", "extra", " ", "factor", " ", "of", 
     " ", "two", " ", "improvement", " ", "in", " ", "sensitivity"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Tla1", "=", 
     RowBox[{"75.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";", 
    RowBox[{"Tlb1", "=", "Tlb0"}], ";", 
    RowBox[{"Tlc1", "=", 
     RowBox[{"100.", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";", 
    RowBox[{"Rpd1", "=", "Rpd0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]Ratio1", "=", "0.98"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsListHeld", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "0", ",", "pumpPhase0", ",", "Tla1", ",", "Tlb1", ",", "Tlc1", ",", 
         "Rpd1", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Chi]Ratio1", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"singularityThr", "[", 
            RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "False"}], "]"}], 
           "]"}]}], ",", "pumpPhase0", ",", "Tla1", ",", "Tlb1", ",", "Tlc1", 
         ",", "Rpd1", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"plot\[Gamma]RGrid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2.", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], 
       RowBox[{"(*", "m", "*)"}], ",", 
       RowBox[{"4.", " ", 
        SuperscriptBox["10", "3"]}], 
       RowBox[{"(*", "m", "*)"}], ",", "None", ",", " ", 
       RowBox[{"3", " ", 
        SuperscriptBox["10", "6"]}], 
       RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", ",", "200", 
       RowBox[{"(*", "kg", "*)"}], ",", 
       "\"\<Li et al, 2020 + changing \!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\
\) + \[Omega]s increased\>\"", ",", "None", 
       RowBox[{"(*", 
        RowBox[{"see", " ", "\[Gamma]RList"}], "*)"}], ",", 
       RowBox[{"2", "\[Pi]", " ", "10000"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "0.5", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "5.", " ", 
        SuperscriptBox["10", "3"]}], ",", 
       RowBox[{"2", "\[Pi]", " ", "50.", " ", 
        SuperscriptBox["10", "3"]}]}], "}"}], ",", "\[IndentingNewLine]", 
     "valsListHeld", ",", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       SuperscriptBox["10", "5"]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.839615887233033*^9, 3.839615948068056*^9}, {
   3.839615985329063*^9, 3.839616056271793*^9}, {3.839616181441649*^9, 
   3.839616181643114*^9}, {3.839616217484611*^9, 3.839616225453553*^9}, {
   3.839616404866972*^9, 3.839616405594692*^9}, {3.839616447888837*^9, 
   3.8396164904055977`*^9}, {3.8412771255488367`*^9, 3.841277135828034*^9}, 
   3.842573680174053*^9},ExpressionUUID->"ff2cdeaf-ddfe-40bf-9443-\
9bef721ee675"],

Cell[BoxData[{
 RowBox[{"setConfigParamsCustom", "[", 
  RowBox[{
   RowBox[{"2.", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]]}], 
   RowBox[{"(*", "m", "*)"}], ",", 
   RowBox[{"4.", " ", 
    SuperscriptBox["10", "3"]}], 
   RowBox[{"(*", "m", "*)"}], ",", "None", ",", " ", 
   RowBox[{"3", " ", 
    SuperscriptBox["10", "6"]}], 
   RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", ",", "200", 
   RowBox[{"(*", "kg", "*)"}], ",", "None", ",", 
   RowBox[{"2", "\[Pi]", " ", "500"}], ",", 
   RowBox[{"2", "\[Pi]", " ", "5000"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valsList1", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "pumpPhase0", ",", "Tla1", ",", "Tlb1", ",", "Tlc1", ",", 
       "Rpd1", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.95", " ", 
        RowBox[{"singularityThr", "[", 
         RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "False"}], "]"}]}], 
       ",", "pumpPhase0", ",", "Tla1", ",", "Tlb1", ",", "Tlc1", ",", "Rpd1", 
       ",", "True", ",", "False", ",", "False"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotwRP", "[", 
  RowBox[{"valsList1", ",", "None", ",", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Red"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", 
     RowBox[{"5", " ", 
      SuperscriptBox["10", "4"]}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.839616525443681*^9, 3.839616849672227*^9}, {
  3.839616925348692*^9, 3.8396170530979424`*^9}, {3.83961711683775*^9, 
  3.8396171180685883`*^9}, {3.839617150482142*^9, 3.8396172422710238`*^9}, {
  3.8396173541143513`*^9, 3.83961740956437*^9}, {3.8396174574364243`*^9, 
  3.8396174575894947`*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"993df0b6-f8fe-4b02-adf9-de81cd56502f"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"NB", ":", " ", 
    RowBox[{
    "radiation", " ", "pressure", " ", "worsened", " ", "because", " ", 
     "squeezing", " ", "is", " ", "in", " ", "phase", " ", "quadrature"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"to", "-", 
     RowBox[{"do", ":", " ", 
      RowBox[{
       RowBox[{"frequency", " ", "dependent", " ", "internal", " ", 
        RowBox[{"squeezing", "?", "\[IndentingNewLine]", "--"}]}], ">", " ", 
       RowBox[{"we", " ", "now", " ", "have", " ", "pump", " ", 
        RowBox[{"parameter", " ", "--"}], " ", "so", " ", "use"}]}]}]}], " ", 
    "/.", 
    RowBox[{"\[Phi]", "\[Rule]", 
     RowBox[{
      RowBox[{"\[Phi]Fn", "[", "...", "]"}], "?"}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.836955461403363*^9, 3.8369554743103323`*^9}, {
  3.8369565731215057`*^9, 3.836956590790863*^9}, {3.8380648415358667`*^9, 
  3.838064880993031*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"08cf331e-0caa-4217-95af-ee723b93c1b8"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"to", "-", 
    RowBox[{"do", ":", " ", 
     RowBox[{
     "copy", " ", "other", " ", "plotting", " ", "functions", " ", "from", 
      " ", "sWLC"}], ":"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"-", " ", 
     RowBox[{"stability", " ", "--"}]}], ">", " ", 
    RowBox[{"not", " ", "necessary"}]}], ",", " ", 
   RowBox[{
   "same", " ", "denominator", " ", "in", " ", "transfer", " ", "functions", 
    " ", "so", " ", "same", " ", "stability"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"-", " ", "noise"}], " ", "\"\<budget\>\"", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"transfer", " ", "functions"}], ")"}], " ", "--"}], 
    RowBox[{">", " ", "done"}]}], ",", " ", 
   RowBox[{"but", " ", "I", " ", 
    RowBox[{"don", "'"}], "t", " ", "know", " ", "how", " ", "to", " ", 
    "turn", " ", "off", " ", "shot", " ", 
    RowBox[{"noise", "?"}]}], " ", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", " ", "optimum"}], " ", "sensitivity", " ", "at", " ", 
     "probe", " ", 
     RowBox[{"frequency", " ", "--"}]}], ">", " ", "done"}], ",", " ", 
   RowBox[{"2.5", "k", " ", "is", " ", "most", " ", "interesting"}], ","}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.8368751342346277`*^9, 3.8368751392758913`*^9}, {
   3.836875313220752*^9, 3.8368753282435913`*^9}, {3.836875977303494*^9, 
   3.836875978936841*^9}, 3.836876583004655*^9, {3.8368766339398327`*^9, 
   3.83687672864815*^9}, {3.8368767684068727`*^9, 3.836876770252152*^9}, {
   3.836876803846798*^9, 3.836876832232662*^9}, 3.836950132255934*^9, {
   3.83695023024631*^9, 3.836950232246825*^9}, {3.8369511012275248`*^9, 
   3.836951103033512*^9}, {3.836955749778467*^9, 3.8369558130241423`*^9}, {
   3.836956548649796*^9, 3.836956561985619*^9}, {3.836959910502049*^9, 
   3.8369599312315617`*^9}, {3.836961215578101*^9, 3.836961223432321*^9}, {
   3.8380677280162497`*^9, 3.8380677338255444`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"6f89864b-cc61-4a72-b3fa-48050eeeb5a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"noise", " ", "\"\<budget\>\""}], ",", "\[IndentingNewLine]", 
    RowBox[{"to", "-", 
     RowBox[{"do", ":", " ", 
      RowBox[{
      "turn", " ", "shot", " ", "noise", " ", "off", " ", "to", " ", "plot", 
       " ", "radiation", " ", "pressure", " ", "separately"}]}]}], ",", " ", 
    RowBox[{"how", "?"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"RpdwRP", "[", 
     RowBox[{
     "\[CapitalOmega]0_", ",", "\[Chi]0_", ",", "\[Phi]0_", ",", "Tla_", ",", 
      "Tlb_", ",", "Tlc_", ",", "Rpd0_", ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Rpd", " ", "Id"}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Phi]", "\[Rule]", "\[Phi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RinwRP", "[", 
     RowBox[{
     "\[CapitalOmega]0_", ",", "\[Chi]0_", ",", "\[Phi]0_", ",", "Tla_", ",", 
      "Tlb_", ",", "Tlc_", ",", "Rpd0_", ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Rin", ".", 
          RowBox[{"ConjugateTranspose", "[", "Rin", "]"}]}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Phi]", "\[Rule]", "\[Phi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RawRP", "[", 
     RowBox[{
     "\[CapitalOmega]0_", ",", "\[Chi]0_", ",", "\[Phi]0_", ",", "Tla_", ",", 
      "Tlb_", ",", "Tlc_", ",", "Rpd0_", ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Ra", ".", 
          RowBox[{"ConjugateTranspose", "[", "Ra", "]"}]}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Phi]", "\[Rule]", "\[Phi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RbwRP", "[", 
     RowBox[{
     "\[CapitalOmega]0_", ",", "\[Chi]0_", ",", "\[Phi]0_", ",", "Tla_", ",", 
      "Tlb_", ",", "Tlc_", ",", "Rpd0_", ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Rb", ".", 
          RowBox[{"ConjugateTranspose", "[", "Rb", "]"}]}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Phi]", "\[Rule]", "\[Phi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RcwRP", "[", 
     RowBox[{
     "\[CapitalOmega]0_", ",", "\[Chi]0_", ",", "\[Phi]0_", ",", "Tla_", ",", 
      "Tlb_", ",", "Tlc_", ",", "Rpd0_", ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Rc", ".", 
          RowBox[{"ConjugateTranspose", "[", "Rc", "]"}]}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Phi]", "\[Rule]", "\[Phi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotNoiseBudgetwRP", "[", 
     RowBox[{"params_", ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         SuperscriptBox["10", "4"]}], "}"}]}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"20", 
          RowBox[{"Log10", "[", "1", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RinwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RawRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RbwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RcwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RpdwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"QNwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"fRange", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"fRange", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<vacuum\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[\(R\), \(in\)]\), behind SRM\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(R\), \((L)\)], \(a\)]\), \
arm intra-cav.\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(R\), \((L)\)], \(b\)]\), \
SRC signal intra-cav.\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(R\), \((L)\)], \(c\)]\), \
SRC idler intra-cav.\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(R\), \((L)\)], \(PD\)]\), \
PD loss\>\"", ",", "\"\<total quantum noise\>\""}], "}"}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", "10", "]"}]}], ",", 
         RowBox[{"LegendLabel", "\[Rule]", 
          RowBox[{"legendStyler", "[", "params", "]"}]}]}], "]"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Directive", "[", 
          RowBox[{"Gray", ",", "Dashed"}], "]"}], ",", ",", ",", ",", ",", 
         ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "Dashed"}], "]"}]}], "}"}]}], ",", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<quantum noise transfer function,\\n|R| / dB (20log10)\>\"", 
           ","}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \[Pi]\
\)]\) / Hz\>\"", ",", 
           RowBox[{
           "\"\<nondegenerate internal squeezing\\nparameters of \>\"", "<>", 
            "paramSetName"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "plotNoiseBudgetwRPPretty", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotNoiseBudgetwRPPretty", "[", 
     RowBox[{"params_", ",", "plotStyle_", ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         SuperscriptBox["10", "4"]}], "}"}]}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RinwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RawRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RbwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RcwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"RpdwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"20", 
          RowBox[{"Log10", "[", 
           RowBox[{"QNwRP", "@@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", "params"}], 
             "]"}]}], "]"}]}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"fRange", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"fRange", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<readout port vacuum\>\"", ",", "\"\<arm intra-cavity loss\>\"",
            ",", "\"\<signal intra-cavity loss\>\"", ",", 
           "\"\<idler intra-cavity loss\>\"", ",", "\"\<detection loss\>\"", 
           ",", "\"\<total quantum noise\>\""}], "}"}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", "14", "]"}]}], ",", 
         RowBox[{"LegendLabel", "\[Rule]", 
          RowBox[{"legendStylerSplit", "[", "params", "]"}]}]}], "]"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Join", "[", 
        RowBox[{"plotStyle", ",", 
         RowBox[{"{", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", "Dashed"}], "]"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<noise response\\n/ dB (20\!\(\*SubscriptBox[\(log\), \(10\)]\
\))\>\"", ",", "14"}], "]"}], ","}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ",", "14"}], "]"}], ","}], "}"}]}], "}"}]}],
       ",", 
      RowBox[{"FrameTicksStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], " ", 
     RowBox[{"(*", 
      RowBox[{"Quality", " ", "looks", " ", "the", " ", "same"}], "*)"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8369590983792353`*^9, 3.8369591985394707`*^9}, {
   3.8369592494458237`*^9, 3.836959267243211*^9}, {3.836959325737783*^9, 
   3.836959397486257*^9}, {3.8369594329848022`*^9, 3.836959687217719*^9}, {
   3.836959719555378*^9, 3.836959721379772*^9}, {3.836959759961191*^9, 
   3.836959760706551*^9}, {3.8369598650861893`*^9, 3.836959915688439*^9}, {
   3.836959957720145*^9, 3.836959958534608*^9}, {3.838064921649622*^9, 
   3.838064953709259*^9}, {3.838066520102168*^9, 3.83806652674868*^9}, {
   3.838066580379581*^9, 3.838066586569106*^9}, {3.838066623324628*^9, 
   3.838066644367217*^9}, {3.8380677376598*^9, 3.838067739373752*^9}, {
   3.838852972578677*^9, 3.838852976420627*^9}, {3.839032766283444*^9, 
   3.839032769242948*^9}, {3.839033623458404*^9, 3.839033625349867*^9}, 
   3.839035330797402*^9, {3.84248861912355*^9, 3.842488683983551*^9}, {
   3.842488715440199*^9, 3.842488910812914*^9}, {3.8424891722859983`*^9, 
   3.842489172641168*^9}, {3.8424892361904593`*^9, 3.842489249021285*^9}, {
   3.842489297319139*^9, 3.842489307884183*^9}, {3.842489470355755*^9, 
   3.842489478348918*^9}, {3.842573757257821*^9, 3.8425738031721783`*^9}, {
   3.855784337796088*^9, 3.855784341332231*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"74395ae9-21ab-4be4-95b6-12d3b7df7666"],

Cell[BoxData[{
 RowBox[{"setConfigParamsLi2020", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]Ratio0", "=", "0.95"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"plotNoiseBudgetwRP", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Chi]Ratio0", " ", "\[Omega]s"}], ",", 
      RowBox[{"\[Pi]", "/", "2"}], ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",",
       "Rpd0", ",", "True", ",", "False", ",", "True"}], "}"}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"plotNoiseBudget1", "=", " ", 
  RowBox[{"plotNoiseBudgetwRPPretty", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Chi]Ratio0", " ", 
       RowBox[{"singularityThr", "[", 
        RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False"}], "]"}]}], 
      ",", 
      RowBox[{"\[Pi]", "/", "2"}], ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",",
       "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red", ",", "Cyan", ",", "Magenta", ",", "Orange"}],
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"10", " ", 
       SuperscriptBox["10", "3"]}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<nIS_sigRO_noise_budget.pdf\>\"", ",", "%"}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pumpPhase0", "=", 
     RowBox[{
      FractionBox["3", "4"], "\[Pi]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plotNoiseBudgetwRP", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Chi]Ratio0", " ", "\[Omega]s"}], ",", "pumpPhase0", ",", 
        "0.1", ",", "0.1", ",", "0.1", ",", "0.1", ",", "False"}], "}"}], 
      "]"}], "\[IndentingNewLine]", 
     RowBox[{"plotNoiseBudgetwRP", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Chi]Ratio0", " ", "\[Omega]s"}], ",", "pumpPhase0", ",", 
        "0.1", ",", "0.1", ",", "0.1", ",", "0.1", ",", "True", ",", "True"}],
        "}"}], "]"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"BAE", " ", "2", "nd", " ", "peak", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"if", " ", "real"}], ",", " ", 
      RowBox[{"not", " ", "a", " ", "bug"}]}], ")"}], " ", "appears", " ", 
    "in", " ", "all", " ", "noise", " ", "transfer", " ", "functions", " ", 
    RowBox[{"(", 
     RowBox[{"except", " ", "Rpd", " ", "ofc"}], ")"}]}], "*)"}]}]}], "Input",\

 CellChangeTimes->{{3.836959705591845*^9, 3.836959751571341*^9}, {
   3.836959788576008*^9, 3.836959820529869*^9}, {3.836960116813314*^9, 
   3.83696012265786*^9}, {3.838065261146402*^9, 3.83806526843169*^9}, {
   3.838068184880612*^9, 3.838068231416999*^9}, {3.8388530064698*^9, 
   3.83885301330237*^9}, {3.839033698370612*^9, 3.839033702078025*^9}, {
   3.839033740667149*^9, 3.839033766012961*^9}, {3.83927265619827*^9, 
   3.839272659020966*^9}, {3.839376856393968*^9, 3.839376907276566*^9}, {
   3.841277361401338*^9, 3.841277394071485*^9}, {3.842488453892207*^9, 
   3.842488542540745*^9}, 3.842488596099822*^9, 3.842488627462275*^9, {
   3.842548559944528*^9, 3.842548586469055*^9}, {3.842573796827198*^9, 
   3.842573819443181*^9}, 3.8428128316077023`*^9, {3.855784289844678*^9, 
   3.8557843050865927`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"24d54f1a-861b-467f-b5a7-0ab8f2298c59"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "noise", " ", "budget", " ", "of", " ", "the", " ", "lossy", " ", 
    "detector", " ", "without", " ", "squeezing"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"plotNoiseBudget2", " ", "=", " ", 
    RowBox[{"plotNoiseBudgetwRPPretty", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Pi]", "/", "2"}], ",", "Tla0", ",", "Tlb0", ",", "Tlc0", 
        ",", "Rpd0", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "Blue", ",", "Red", ",", "Cyan", ",", "Magenta", ",", "Orange"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"10", " ", 
         SuperscriptBox["10", "3"]}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<no_squeezing_sigRO_noise_budget.pdf\>\"", ",", "%"}], "]"}],
     ";"}]}]}]], "Input",
 CellChangeTimes->{{3.855784126095737*^9, 3.8557841602723*^9}, {
  3.855784311241651*^9, 3.855784315590369*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"2b2e0c95-51f9-469e-ad2c-d6505128c2a1"],

Cell[BoxData[{
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "plotNoiseBudget1", "}"}], ",", 
     RowBox[{"{", "plotNoiseBudget2", "}"}]}], "}"}], ",", 
   RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<nIS_signal_readout_noise_budget_95%_sqz_(top)_vs_no_sqz_(bottom).pdf\>\
\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.855784200343638*^9, 3.855784237579794*^9}, {
  3.8557842817564983`*^9, 3.8557842837211723`*^9}, {3.855784320372601*^9, 
  3.855784323971944*^9}, {3.8557843547424393`*^9, 3.8557843960858927`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"2da7f284-f49d-4c00-9670-8e451908baad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "optimum", " ", "sensitivity", " ", "at", " ", "probe", " ", "frequency"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "see", " ", "old", " ", "commit", " ", "before", " ", "October", " ", "7", 
    "th", " ", "for", " ", "original", " ", "plot"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pastThr", " ", "requires", " ", "maxThrRatio"}], "=", "1"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "plotThresholdFinder", "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"plotThresholdFinder", "[", 
     RowBox[{"fProbe_", ",", "Tla_", ",", "Tlb_", ",", "Tlc_", ",", 
      RowBox[{"\[Phi]_:", 
       RowBox[{"\[Pi]", "/", "2"}]}], ",", 
      RowBox[{"pastThreshold_:", "False"}], ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
      RowBox[{"symSRM_:", "False"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"reference", " ", "now", " ", "has", " ", "loss"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"probeNoiseRef", "=", 
       RowBox[{"QNwRP", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", "0", ",", "\[Phi]", ",", 
         "Tla", ",", "Tlb", ",", "Tlc", ",", "Rpd0", ",", "\[Rho]RPTrue", ",",
          "\[Rho]BAETrue", ",", "False"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"probeSigRef", "=", 
       RowBox[{"sigwRP", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", "0", ",", "\[Phi]", ",", 
         "Tla", ",", "Tlb", ",", "Tlc", ",", "Rpd0", ",", "\[Rho]RPTrue", ",",
          "\[Rho]BAETrue", ",", "False"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"probeSensRef", "=", 
       RowBox[{"ASDShwRP", "[", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", "0", ",", "\[Phi]", ",", 
         "Tla", ",", "Tlb", ",", "Tlc", ",", "Rpd0", ",", "\[Rho]RPTrue", ",",
          "\[Rho]BAETrue", ",", "False"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxThrRatio", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"pointRatio", "=", "0.875"}], ";", "\[IndentingNewLine]", 
      RowBox[{"rpdList", "=", 
       RowBox[{"{", "Rpd0", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"leftPadding", "=", "60"}], ";", "\[IndentingNewLine]", 
      RowBox[{"imageSize", "=", "250"}], ";", "\[IndentingNewLine]", 
      RowBox[{"arrowHeads", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.04", ",", "0.6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.04", ",", "0.9"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"20", 
                   RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"QNwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"\[Chi]Ratio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeNoiseRef"}], "]"}]}], ",", 
                  RowBox[{"20", 
                   RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"ASDShwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"\[Chi]Ratio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeSensRef"}], "]"}]}]}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}], 
             ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Chi]Ratio", ",", "0", ",", "maxThrRatio"}], "}"}], ",", 
          
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameTicksStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<sensitivity increase / dB\>\"", ",", 
                   RowBox[{"N", "[", 
                    FractionBox["fProbe", 
                    SuperscriptBox["10", "3"]], "]"}]}], "]"}], ",", "16"}], 
                "]"}], ","}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<noise increase / dB\>\"", ",", 
                   RowBox[{"N", "[", 
                    FractionBox["fProbe", 
                    SuperscriptBox["10", "3"]], "]"}]}], "]"}], ",", "16", 
                 ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
               ","}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", "Blue", "}"}]}], 
          RowBox[{"(*", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Blend", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Blue", ",", "Green"}], "}"}], ",", 
               FractionBox[
                RowBox[{"i", "-", "1"}], 
                RowBox[{
                 RowBox[{"Length", "[", "rpdList", "]"}], "-", "1"}]]}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}], 
           "*)"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"60", ",", "10"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"50", ",", "1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "imageSize"}], "}"}]}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", 
           FractionBox["3", "4"]}], ",", 
          RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
          RowBox[{"GridLines", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "0", "}"}], ",", 
             RowBox[{"{", "0", "}"}]}], "}"}]}], ",", 
          RowBox[{"Epilog", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"PointSize", "[", "Large", "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"20", 
                  RowBox[{"Log10", "[", 
                   RowBox[{
                    RowBox[{"QNwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"pointRatio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", "Rpd0", ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeNoiseRef"}], "]"}]}], ",", 
                 RowBox[{"20", 
                  RowBox[{"Log10", "[", 
                   RowBox[{
                    RowBox[{"ASDShwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"pointRatio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", "Rpd0", ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeSensRef"}], "]"}]}]}], "}"}], "}"}], "]"}]}], 
            "}"}]}]}], "]"}], "/.", 
        RowBox[{
         RowBox[{"Line", "[", "x__", "]"}], "\[RuleDelayed]", 
         RowBox[{"Sequence", "[", 
          RowBox[{
           RowBox[{"Arrowheads", "\[Rule]", "arrowHeads"}], ",", 
           RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"p2", "=", 
         RowBox[{"ParametricPlot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"20", 
                RowBox[{"Log10", "[", 
                 RowBox[{
                  RowBox[{"QNwRP", "[", 
                   RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"maxThrRatio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", "Rpd", ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                  "probeNoiseRef"}], "]"}]}], ",", 
               RowBox[{"20", 
                RowBox[{"Log10", "[", 
                 RowBox[{
                  RowBox[{"ASDShwRP", "[", 
                   RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"maxThrRatio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", "Rpd", ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                  "probeSensRef"}], "]"}]}]}], "}"}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"Rpd", ",", 
             RowBox[{"rpdList", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"rpdList", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "Black", "]"}]}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"LineLegend", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{
                  "\"\<\[Chi]/\!\(\*SubscriptBox[\(\[Chi]\), \(thr\)]\)=``, \
varying \!\(\*SubscriptBox[\(R\), \(PD\)]\)\[Element](``,``)\>\"", ",", 
                   RowBox[{"NumberForm", "[", "maxThrRatio", "]"}], ",", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "]"}]}], "]"}], 
                 ",", "14"}], "]"}], "}"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"leftPadding", ",", "10"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}],
         ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"pastThreshold", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p1b", "=", 
          RowBox[{"ParametricPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"20", 
                    RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"QNwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"\[Chi]Ratio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeNoiseRef"}], "]"}]}], ",", 
                    RowBox[{"20", 
                    RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"ASDShwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"\[Chi]Ratio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeSensRef"}], "]"}]}]}], "}"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", 
                   RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}], 
               ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Chi]Ratio", ",", "maxThrRatio", ",", "2"}], "}"}], 
            ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Blend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Red", ",", "Yellow"}], "}"}], ",", 
                 FractionBox[
                  RowBox[{"i", "-", "1"}], 
                  RowBox[{
                   RowBox[{"Length", "[", "rpdList", "]"}], "-", "1"}]]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}]}], 
            ",", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"LineLegend", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"StringForm", "[", 
                   RowBox[{
                   "\"\<\[Chi]/\!\(\*SubscriptBox[\(\[Chi]\), \(thr\)]\)\
\[Element](``,2), \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``\>\"", ",", 
                    "maxThrRatio", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}],
                 "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"Directive", "[", "10", "]"}]}]}], "]"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"leftPadding", ",", "10"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
            RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p1and2", "=", 
          RowBox[{"Show", "[", 
           RowBox[{"p1", ",", "p1b"}], 
           RowBox[{"(*", 
            RowBox[{",", "p2"}], "*)"}], "]"}]}], ";"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p1and2", "=", 
          RowBox[{"Show", "[", "p1", 
           RowBox[{"(*", 
            RowBox[{",", "p2"}], "*)"}], "]"}]}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"20", 
                   RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"QNwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"\[Chi]Ratio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeNoiseRef"}], "]"}]}], ",", 
                  RowBox[{"20", 
                   RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"sigwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"\[Chi]Ratio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeSigRef"}], "]"}]}]}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}], 
             ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Chi]Ratio", ",", "0", ",", "maxThrRatio"}], "}"}], ",", 
          
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameTicksStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<signal increase / dB\>\"", ",", 
                   RowBox[{"N", "[", 
                    FractionBox["fProbe", 
                    SuperscriptBox["10", "3"]], "]"}]}], "]"}], ",", "16"}], 
                "]"}], ","}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<noise increase / dB\>\"", ",", 
                   RowBox[{"N", "[", 
                    FractionBox["fProbe", 
                    SuperscriptBox["10", "3"]], "]"}]}], "]"}], ",", "16", 
                 ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], 
               ","}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", "Blue", "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"All", ",", "24.9"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"45", ",", "10"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"50", ",", "1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "imageSize"}], "}"}]}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", 
           FractionBox["3", "4"]}], ",", 
          RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
          RowBox[{"GridLines", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "0", "}"}], ",", 
             RowBox[{"{", "0", "}"}]}], "}"}]}], ",", 
          RowBox[{"Epilog", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"PointSize", "[", "Large", "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"20", 
                  RowBox[{"Log10", "[", 
                   RowBox[{
                    RowBox[{"QNwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"pointRatio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", "Rpd0", ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeNoiseRef"}], "]"}]}], ",", 
                 RowBox[{"20", 
                  RowBox[{"Log10", "[", 
                   RowBox[{
                    RowBox[{"sigwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"pointRatio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", "Rpd0", ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeSigRef"}], "]"}]}]}], "}"}], "}"}], "]"}]}], 
            "}"}]}]}], "]"}], "/.", 
        RowBox[{
         RowBox[{"Line", "[", "x__", "]"}], "\[RuleDelayed]", 
         RowBox[{"Sequence", "[", 
          RowBox[{
           RowBox[{"Arrowheads", "\[Rule]", "arrowHeads"}], ",", 
           RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"p4", "=", 
         RowBox[{"ParametricPlot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"20", 
               RowBox[{"Log10", "[", 
                RowBox[{
                 RowBox[{"QNwRP", "[", 
                  RowBox[{
                   RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                   RowBox[{"maxThrRatio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                   "Tlc", ",", "Rpd", ",", "\[Rho]RPTrue", ",", 
                   "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                 "probeNoiseRef"}], "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"20", 
               RowBox[{"Log10", "[", 
                RowBox[{
                 RowBox[{"sigwRP", "[", 
                  RowBox[{
                   RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                   RowBox[{"maxThrRatio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                   "Tlc", ",", "Rpd", ",", "\[Rho]RPTrue", ",", 
                   "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                 "probeSigRef"}], "]"}]}]}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"Rpd", ",", 
             RowBox[{"rpdList", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"rpdList", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "Black", "]"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"leftPadding", ",", "10"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"All", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"pastThreshold", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p3b", "=", 
          RowBox[{"ParametricPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"20", 
                    RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"QNwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"\[Chi]Ratio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeNoiseRef"}], "]"}]}], ",", 
                    RowBox[{"20", 
                    RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"sigwRP", "[", 
                    RowBox[{
                    RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                    RowBox[{"\[Chi]Ratio", " ", 
                    RowBox[{"singularityThr", "[", 
                    RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                    "]"}]}], ",", "\[Phi]", ",", "Tla", ",", "Tlb", ",", 
                    "Tlc", ",", 
                    RowBox[{"rpdList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Rho]RPTrue", ",", 
                    "\[Rho]BAETrue", ",", "symSRM"}], "]"}], "/", 
                    "probeSigRef"}], "]"}]}]}], "}"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", 
                   RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}], 
               ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Chi]Ratio", ",", "maxThrRatio", ",", "2"}], "}"}], 
            ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Blend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Red", ",", "Yellow"}], "}"}], ",", 
                 FractionBox[
                  RowBox[{"i", "-", "1"}], 
                  RowBox[{
                   RowBox[{"Length", "[", "rpdList", "]"}], "-", "1"}]]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}]}], 
            ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"leftPadding", ",", "10"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
            RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p3and4", "=", 
          RowBox[{"Show", "[", 
           RowBox[{"p3", ",", "p3b"}], 
           RowBox[{"(*", 
            RowBox[{",", "p4"}], "*)"}], "]"}]}], ";"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p3and4", "=", 
          RowBox[{"Show", "[", "p3", 
           RowBox[{"(*", 
            RowBox[{",", "p4"}], "*)"}], "]"}]}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"p1and2", ",", "p3and4"}], "}"}], "}"}], ",", 
        RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", "Blue", "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<\[Chi]/\!\(\*SubscriptBox[\(\[Chi]\), \
\(thr\)]\)\[Element](0,``), \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``\>\"", ",", 
            
            RowBox[{"NumberForm", "[", "maxThrRatio", "]"}], ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{"N", "[", 
              RowBox[{"rpdList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
          "14"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "rpdList", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", "10", "]"}]}], ",", 
      RowBox[{"LegendLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(T\), \(l, \
a\)]\)=``ppm,\\n\!\(\*SubscriptBox[\(T\), \(l, \
b\)]\)=``ppm,\\n\!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm``\>\"", "<>", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"Not", "[", "\[Rho]RPTrue", "]"}], ",", 
              "\"\<; no RP\>\"", ",", "\"\<\>\""}], "]"}], "<>", 
            RowBox[{"If", "[", 
             RowBox[{
             "\[Rho]BAETrue", ",", "\"\<; with BAE\>\"", ",", "\"\<\>\""}], 
             "]"}]}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Tla", " ", 
              SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Tlb", " ", 
              SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Tlc", " ", 
              SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"\[Phi]", "\[NotEqual]", 
              FractionBox["\[Pi]", "2"]}], ",", 
             RowBox[{"\"\<,\\n\[Phi]/(2\[Pi])=\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"NumberForm", "[", 
                RowBox[{"N", "[", 
                 FractionBox["\[Phi]", 
                  RowBox[{"2", "\[Pi]"}]], "]"}], "]"}], "]"}]}], ",", 
             "\"\<\>\""}], "]"}]}], "]"}], ",", "14"}], "]"}]}]}], "]"}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"fProbe_", ",", "Tlc_", ",", 
     RowBox[{"\[Phi]_:", 
      RowBox[{"\[Pi]", "/", "2"}]}], ",", 
     RowBox[{"pastThreshold_:", "False"}], ",", 
     RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
     RowBox[{"\[Rho]BAETrue_:", "False"}], ",", 
     RowBox[{"symSRM_:", "False"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"setConfigParamsLi2020", "[", "]"}], "\[IndentingNewLine]", 
   RowBox[{"plotThresholdFinder", "[", 
    RowBox[{"2500", 
     RowBox[{"(*", "Hz", "*)"}], ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", 
     RowBox[{"\[Pi]", "/", "2"}], ",", "False"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<nIS_optimum_squeezing.pdf\>\"", ",", "%"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plotThresholdFinder", "[", 
     RowBox[{"10", 
      RowBox[{"(*", "Hz", "*)"}], ",", "0.1", ",", "pumpPhase0"}], "]"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plotThresholdFinder", "[", 
      RowBox[{"2500", 
       RowBox[{"(*", "Hz", "*)"}], ",", "0.1", ",", "pumpPhase0", ",", 
       "False", ",", "True", ",", "True"}], "]"}], "\[IndentingNewLine]", 
     RowBox[{"plotThresholdFinder", "[", 
      RowBox[{"10", 
       RowBox[{"(*", "Hz", "*)"}], ",", "0.1", ",", "pumpPhase0", ",", 
       "False", ",", "True", ",", "True"}], "]"}]}], "\[IndentingNewLine]", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "pump", " ", "phase", " ", "really", " ", "affects", " ", "low", " ", 
      "probe", " ", "frequencies"}], ",", " ", 
     RowBox[{
     "but", " ", "leaves", " ", "kilohertz", " ", "sensitivity", " ", 
      "relatively", " ", "unchanged"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8369602460387917`*^9, 3.836960570434452*^9}, {
   3.836960627210816*^9, 3.8369607279513474`*^9}, {3.8369608765618668`*^9, 
   3.836960897357997*^9}, {3.8380681498794003`*^9, 3.838068159323031*^9}, {
   3.838083444905792*^9, 3.838083452146599*^9}, {3.8380835326812897`*^9, 
   3.838083636160364*^9}, {3.838084004217861*^9, 3.838084027090013*^9}, {
   3.838084059188428*^9, 3.838084141938397*^9}, {3.838853160582803*^9, 
   3.8388531611276693`*^9}, {3.8388535618479853`*^9, 3.838853564883458*^9}, {
   3.8390327745015917`*^9, 3.839032784980894*^9}, {3.839033632202093*^9, 
   3.8390336338082848`*^9}, 3.8390338043661747`*^9, {3.8425490622237673`*^9, 
   3.842549070607132*^9}, {3.842549158030919*^9, 3.8425493686493464`*^9}, {
   3.842549548129068*^9, 3.842549553407838*^9}, {3.842549593912283*^9, 
   3.8425496055286303`*^9}, {3.842549645427759*^9, 3.842549660065629*^9}, {
   3.842549708354478*^9, 3.842549748437958*^9}, {3.842550105879712*^9, 
   3.842550179330722*^9}, {3.842550211412051*^9, 3.8425502623395853`*^9}, {
   3.842550404250971*^9, 3.8425505921608953`*^9}, {3.842550641080554*^9, 
   3.842550866138659*^9}, {3.842550954995096*^9, 3.842551065361086*^9}, {
   3.8425511007254343`*^9, 3.842551343017188*^9}, 3.842551374077917*^9, {
   3.842551406221991*^9, 3.842551443324484*^9}, {3.842551567248476*^9, 
   3.8425515853521214`*^9}, {3.842551624722869*^9, 3.842551671713953*^9}, {
   3.842551852274262*^9, 3.8425519484472322`*^9}, {3.842551992124021*^9, 
   3.8425519924824038`*^9}, {3.842552027127948*^9, 3.842552039823621*^9}, {
   3.842552073402626*^9, 3.842552077821487*^9}, {3.842552534765761*^9, 
   3.84255260230851*^9}, 3.84255266957477*^9, {3.8425528777260313`*^9, 
   3.842552920608238*^9}, {3.842553020690796*^9, 3.842553222580496*^9}, 
   3.842553351637218*^9, {3.8425533943995934`*^9, 3.8425534256574793`*^9}, {
   3.8425534719201393`*^9, 3.842553472252222*^9}, {3.842553513759388*^9, 
   3.8425535254838448`*^9}, {3.842553557317258*^9, 3.842553584008374*^9}, {
   3.843086700966992*^9, 3.8430867123646383`*^9}, {3.8430867518129787`*^9, 
   3.843086762318451*^9}, {3.843086828754736*^9, 3.84308686101474*^9}, 
   3.843086948479251*^9, {3.843087071074584*^9, 3.8430870713478107`*^9}, {
   3.843087106113873*^9, 3.8430871126036787`*^9}, {3.843603272320901*^9, 
   3.8436032871402884`*^9}, {3.8436034002304583`*^9, 
   3.8436034558209476`*^9}, {3.8436176993253803`*^9, 3.843617750735606*^9}, {
   3.843887826594486*^9, 3.843888030447608*^9}, {3.8438880728349543`*^9, 
   3.843888124616926*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"0965fdd5-b70c-4675-b9cb-c0cff4c32991"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"copied", " ", "from", " ", 
    RowBox[{"nIS", ".", "nb"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Checking", " ", "stability"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "\[Chi]", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"denominator00", "=", 
     RowBox[{"\[Gamma]btot0", "-", 
      RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
      FractionBox[
       SuperscriptBox["\[Kappa]0", "2"], 
       RowBox[{"\[Gamma]a0", "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
      FractionBox[
       SuperscriptBox["\[Chi]0", "2"], 
       RowBox[{"\[Gamma]c0", "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"additional", " ", "poles", " ", "at", " ", "\[Gamma]a"}], ",", 
     "\[Gamma]c"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<lossless: \>\"", ",", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"denominator00", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Gamma]a0", "\[Rule]", "0"}], ",", 
            RowBox[{"\[Gamma]c0", "\[Rule]", "0"}], ",", 
            RowBox[{"\[Gamma]btot0", "\[Rule]", "\[Gamma]R0"}]}], "}"}]}], 
         ")"}], "\[Equal]", "0"}], ",", "\[CapitalOmega]"}], "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"stabilitySol", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"denominator", "\[Equal]", "0"}], ",", "\[CapitalOmega]"}], 
         "]"}], ",", 
        RowBox[{"Assumptions", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Kappa]0", ">", "0"}], ",", 
           RowBox[{"\[Chi]0", ">", "0"}], ",", 
           RowBox[{"\[Gamma]a0", ">", "0"}], ",", 
           RowBox[{"\[Gamma]btot0", ">", "0"}], ",", 
           RowBox[{"\[Gamma]c0", ">", "0"}]}], "}"}]}]}], "]"}]}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"denom00", "[", 
      RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", 
       RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
     RowBox[{
      RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}], "-", 
      RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
      FractionBox[
       SuperscriptBox["\[Omega]s", "2"], 
       RowBox[{
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}], "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
      FractionBox[
       SuperscriptBox["\[Chi]", "2"], 
       RowBox[{
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}], "-", 
        RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stabilitysWLC", "[", 
     RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", 
      RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"stabSol", "=", 
       RowBox[{"NSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"denom00", "[", 
           RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], "]"}], 
          "\[Equal]", "0"}], ",", "\[CapitalOmega]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Im", "[", 
                RowBox[{"\[CapitalOmega]", "/.", 
                 RowBox[{"stabSol", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"\[Chi]", "\[Rule]", 
                 RowBox[{"ratio", " ", "\[Omega]s"}]}], "}"}]}], ")"}], "/", 
             "\[Gamma]R"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "stabSol", "]"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ratio", ",", "0", ",", "2"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{",", "Dashed", ",", "DotDashed"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"50", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<Im[\[CapitalOmega]]/\[Gamma]R\>\"", ","}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{",", 
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<poles of transfer function\\nunstable when Im[\
\[CapitalOmega]]\[GreaterEqual]0\\n\!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, sym. SRM loss?=``\>\"", ",", "Tla", ",", "Tlb", ",", "Tlc", ",", 
                "symSRM"}], "]"}]}], "}"}]}], "}"}]}], ",", 
         RowBox[{"GridLines", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"1", ",", "Red"}], "}"}], "}"}], ",", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Re", "[", 
                RowBox[{"\[CapitalOmega]", "/.", 
                 RowBox[{"stabSol", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"\[Chi]", "\[Rule]", 
                 RowBox[{"ratio", " ", "\[Omega]s"}]}], "}"}]}], ")"}], "/", 
             "\[Gamma]R"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "stabSol", "]"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ratio", ",", "0", ",", "2"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{",", "Dashed", ",", "DotDashed"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"50", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"All", ",", "1"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<Re[\[CapitalOmega]]/\[Gamma]R\>\"", ","}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\!\(\*FractionBox[\(\[Chi]\), \(\[Omega]s\)]\)\>\"", ","}], 
             "}"}]}], "}"}]}], ",", 
         RowBox[{"GridLines", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"1", ",", "Red"}], "}"}], "}"}], ",", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2"}], "}"}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "stabilitysWLCPretty", "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"stabilitysWLCPretty", "[", 
     RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", 
      RowBox[{"symSRM_:", "False"}], ",", 
      RowBox[{"hideYAx_:", "False"}], ",", 
      RowBox[{"plotStyle_:", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"exclusions_:", "None"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"stabSol", "=", 
       RowBox[{"NSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"denom00", "[", 
           RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], "]"}], 
          "\[Equal]", "0"}], ",", "\[CapitalOmega]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Labeled", "["}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"\[CapitalOmega]", "/.", 
                RowBox[{"stabSol", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
              RowBox[{"{", 
               RowBox[{"\[Chi]", "\[Rule]", 
                RowBox[{"ratio", " ", 
                 RowBox[{"singularityThr", "[", 
                  RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], 
                  "]"}]}]}], "}"}]}], ")"}], "/", "\[Gamma]R"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "stabSol", "]"}]}], "}"}]}], "]"}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"ratio", ",", "0", ",", "1.1"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImagePadding", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"hideYAx", ",", "2", ",", "20"}], "]"}], ",", "10"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"20", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "220"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", ",", "}"}], ",", 
           RowBox[{"{", ",", "}"}]}], "}"}]}], ",", 
        RowBox[{"GridLines", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"Directive", "[", 
               RowBox[{"Black", ",", "Thin"}], "]"}]}], "}"}], "}"}], ",", 
           "None"}], "}"}]}], ",", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"hideYAx", ",", 
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], "]"}], ","}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"FontSize", "\[Rule]", "14"}], "]"}], ","}], "}"}]}], 
          "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"All", ",", "All"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5.5"}], ",", "4.5"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "plotStyle"}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "exclusions"}]}], "]"}]}], ")"}]}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<\\n\\n\!\(\*SubscriptBox[\(T\), \(l, \
a\)]\)=``ppm,\\n\!\(\*SubscriptBox[\(T\), \(l, \
b\)]\)=``ppm,\\n\!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``ppm\>\"", ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Tla", " ", 
              SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Tlb", " ", 
              SuperscriptBox["10", "6"]}], "]"}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Tlc", " ", 
              SuperscriptBox["10", "6"]}], "]"}], "]"}]}], "]"}], ",", "14"}],
         "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Top"}], "}"}], "}"}]}], "]"}], ")"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"setConfigParamsLi2020", "[", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"stabilitysWLCPretty", "[", 
           RowBox[{"0", ",", "0", ",", "0", ",", "False", ",", "False", ",", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", "Red"}], "}"}], ",", "None"}], "]"}], ",", 
          RowBox[{"stabilitysWLCPretty", "[", 
           RowBox[{
           "Tla0", ",", "Tlb0", ",", "Tlc0", ",", "False", ",", "True", ",", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", "Red", ",", "Cyan"}], "}"}], ",", 
            "Automatic"}], "]"}]}], "}"}], "}"}], ",", 
       RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<imaginary part of pole / \!\(\*SubscriptBox[\(\[Gamma]\), \(b, R\
\)]\)\>\"", ",", "16", ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<ratio to singularity threshold, \[Chi]/\!\(\*SubscriptBox[\(\
\[Chi]\), \(thr\)]\)\>\"", ",", "16", ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
     RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<nIS_stability.pdf\>\"", ",", "%"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"realistically", ",", " ", 
     RowBox[{
     "\[Gamma]c", " ", "is", " ", "at", " ", "least", " ", "\[Gamma]R"}], ",",
      " ", 
     RowBox[{
     "so", " ", "the", " ", "lossless", " ", "plot", " ", "is", " ", "not", 
      " ", "useful"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "plots", " ", "look", " ", "much", " ", "nicer", " ", "with", " ", "Li", 
      " ", "et", " ", "al"}], ",", " ", 
     RowBox[{"2020", " ", "parameter", " ", "set"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Exclusions", " ", "\[Rule]", " ", 
     RowBox[{
     "None", " ", "makes", " ", "a", " ", "strange", " ", "line", " ", "in", 
      " ", "the", " ", "lossy", " ", "case", " ", "that", " ", "I", " ", "am",
       " ", "going", " ", "to", " ", "assume", " ", "is", " ", "an", " ", 
      "error"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.83504641704847*^9, 3.83504651011362*^9}, {
   3.835049371511012*^9, 3.835049380301217*^9}, {3.835049418434885*^9, 
   3.835049469736174*^9}, {3.835049508857883*^9, 3.835049557578328*^9}, {
   3.8350497931951036`*^9, 3.8350498562789583`*^9}, {3.8350499447238283`*^9, 
   3.8350499782220507`*^9}, {3.835050012687291*^9, 3.83505010081954*^9}, {
   3.8350501385701714`*^9, 3.8350501438812428`*^9}, {3.835050175325329*^9, 
   3.835050219451564*^9}, {3.835050308236258*^9, 3.835050388374193*^9}, {
   3.835050432386447*^9, 3.835050511999774*^9}, {3.83505056773658*^9, 
   3.8350506526832933`*^9}, {3.835050688626114*^9, 3.835050689709009*^9}, {
   3.8350507425496798`*^9, 3.835050754560383*^9}, {3.835051042014687*^9, 
   3.8350511646313143`*^9}, {3.8350512392918997`*^9, 3.835051285130447*^9}, {
   3.835051341858755*^9, 3.835051351648428*^9}, {3.835051473303735*^9, 
   3.835051486835176*^9}, {3.8350516126305943`*^9, 3.83505166725378*^9}, {
   3.835143788713299*^9, 3.835143801585413*^9}, {3.8351438402169533`*^9, 
   3.835143863663851*^9}, {3.835143978415365*^9, 3.835143979233163*^9}, 
   3.83514405083946*^9, {3.835300388984281*^9, 3.8353003942118883`*^9}, {
   3.835904131864151*^9, 3.835904132443358*^9}, {3.835904202931649*^9, 
   3.835904205921523*^9}, {3.835904262493464*^9, 3.835904276290058*^9}, {
   3.835904372211176*^9, 3.835904377642256*^9}, {3.835904409857163*^9, 
   3.8359044571483927`*^9}, {3.835904499094524*^9, 3.83590452862432*^9}, {
   3.835904581922208*^9, 3.83590462466094*^9}, 3.8359046786027527`*^9, {
   3.835904716885625*^9, 3.835905054795032*^9}, {3.835905184376197*^9, 
   3.8359053513384867`*^9}, {3.835905439587319*^9, 3.835905504505887*^9}, {
   3.8359055463703537`*^9, 3.835905566229837*^9}, {3.83590560438199*^9, 
   3.835905606332498*^9}, {3.835905663921935*^9, 3.835905708835417*^9}, {
   3.835905740747705*^9, 3.835905757754509*^9}, {3.835905797103469*^9, 
   3.8359058969789953`*^9}, {3.835905927406488*^9, 3.835905927832864*^9}, {
   3.835905960221671*^9, 3.835906187354944*^9}, {3.8359062179128113`*^9, 
   3.835906234364009*^9}, {3.835906267835814*^9, 3.835906312918454*^9}, {
   3.8359066233981*^9, 3.835906623622389*^9}, {3.835907018220572*^9, 
   3.835907018412875*^9}, {3.83590851353498*^9, 3.835908513794125*^9}, {
   3.835910963149638*^9, 3.835910976361925*^9}, {3.8359164503514147`*^9, 
   3.835916455043648*^9}, {3.836179604404111*^9, 3.836179615139862*^9}, {
   3.836250176159008*^9, 3.836250221227647*^9}, {3.836336010423093*^9, 
   3.8363360373829308`*^9}, {3.8363448160371923`*^9, 3.836344816659512*^9}, {
   3.8363462481744223`*^9, 3.836346332687386*^9}, {3.836505989396023*^9, 
   3.8365060036075993`*^9}, {3.836530955588299*^9, 3.8365309581363497`*^9}, {
   3.8388552711513968`*^9, 3.838855312100977*^9}, {3.838855343824719*^9, 
   3.8388553443065557`*^9}, {3.838855393066392*^9, 3.8388553932693*^9}, {
   3.838855483184791*^9, 3.838855618063979*^9}, 3.839032797799479*^9, {
   3.839033246651506*^9, 3.839033253769734*^9}, {3.839033828734683*^9, 
   3.839033867682425*^9}, {3.841277518722204*^9, 3.841277529804846*^9}, {
   3.841277578269162*^9, 3.8412775840213537`*^9}, {3.84248993655204*^9, 
   3.842489939678392*^9}, {3.842490144492827*^9, 3.8424902596908216`*^9}, {
   3.842490312356442*^9, 3.842490408423012*^9}, {3.84249043991644*^9, 
   3.842490607637925*^9}, {3.842490646128581*^9, 3.84249067067914*^9}, {
   3.8424907103523397`*^9, 3.842490719122973*^9}, {3.842490749957156*^9, 
   3.842490752570109*^9}, {3.84249078963741*^9, 3.8424907932514*^9}, {
   3.842490958691676*^9, 3.8424910018897533`*^9}, {3.8424910524450703`*^9, 
   3.8424911038031473`*^9}, {3.842491136425355*^9, 3.8424912832699947`*^9}, {
   3.8424913349868*^9, 3.842491403889536*^9}, 3.842491434281934*^9, {
   3.8424914910657063`*^9, 3.8424915179536467`*^9}, {3.842491571184808*^9, 
   3.842491606286931*^9}, {3.842491657593686*^9, 3.842491659137364*^9}, {
   3.842491704924737*^9, 3.8424917535000134`*^9}, {3.842491835994956*^9, 
   3.842491866623144*^9}, {3.842491988670282*^9, 3.8424920901698713`*^9}, {
   3.842492174276855*^9, 3.8424922151390944`*^9}, {3.842492267454309*^9, 
   3.84249227188315*^9}, {3.8424925557394257`*^9, 3.842492556835112*^9}, {
   3.84257390760255*^9, 3.842573917354434*^9}, {3.842573965533119*^9, 
   3.842573997460681*^9}, {3.842995844537672*^9, 3.8429958538403997`*^9}, {
   3.84299602931879*^9, 3.842996035367772*^9}, {3.84360372118649*^9, 
   3.843603731708784*^9}, {3.8436037757656116`*^9, 3.843603792983782*^9}, {
   3.8436038237598877`*^9, 3.8436038446859922`*^9}, {3.84360394570542*^9, 
   3.84360396336644*^9}, {3.843885329742044*^9, 3.843885349821061*^9}, {
   3.843885400218913*^9, 3.843885402204032*^9}, {3.84388543514398*^9, 
   3.843885453678822*^9}, {3.8438855101466227`*^9, 3.843885562331027*^9}, {
   3.8438856652343903`*^9, 3.843885682090444*^9}, {3.843885717138384*^9, 
   3.843885919860036*^9}, {3.843886011455871*^9, 3.843886012992729*^9}, {
   3.843886706969244*^9, 3.843886708981842*^9}, {3.844477325633073*^9, 
   3.844477468761586*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"1fc45ae0-6255-4c50-aa7c-d825532ddd9d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"denom00", "[", 
    RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", 
     RowBox[{"symSRM_:", "True"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}], "-", 
    RowBox[{"I", " ", "\[CapitalOmega]"}], "+", 
    FractionBox[
     SuperscriptBox["\[Omega]s", "2"], 
     RowBox[{
      RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}], "-", 
      RowBox[{"I", " ", "\[CapitalOmega]"}]}]], "-", 
    FractionBox[
     SuperscriptBox["\[Chi]", "2"], 
     RowBox[{
      RowBox[{"\[Gamma]cFn", "[", 
       RowBox[{"Tlc", ",", "symSRM"}], "]"}], "-", 
      RowBox[{"I", " ", "\[CapitalOmega]"}]}]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "24"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"setConfigParamsLi2020", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colorFn", "[", "ratio_", "]"}], ":=", 
   RowBox[{
    RowBox[{"ColorData", "[", "\"\<SunsetColors\>\"", "]"}], "[", 
    RowBox[{
     RowBox[{"(", 
      FractionBox["ratio", "maxRatio"], ")"}], "^", "6"}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"keep", " ", "inside", " ", 
    RowBox[{"(", 
     RowBox[{"0", ",", "1"}], ")"}], " ", "to", " ", "avoid", " ", 
    "wrapping"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "stabilityPlane", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stabilityPlane", "[", 
    RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", 
     RowBox[{"hideY_:", "False"}], ",", 
     RowBox[{"hideX_:", "False"}], ",", 
     RowBox[{"additionalEpilog_:", "None"}]}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"stabSol", "=", 
      RowBox[{"NSolve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"denom00", "[", 
          RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "False"}], "]"}], 
         "\[Equal]", "0"}], ",", "\[CapitalOmega]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Chi]Thr", "=", 
      RowBox[{"singularityThr", "[", 
       RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "False"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Re", "[", 
                RowBox[{"\[CapitalOmega]", "/.", 
                 RowBox[{"stabSol", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"\[Chi]", "\[Rule]", 
                 RowBox[{"ratio", " ", "\[Chi]Thr"}]}], "}"}]}], ")"}], "/", 
             "\[Gamma]R"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Im", "[", 
                RowBox[{"\[CapitalOmega]", "/.", 
                 RowBox[{"stabSol", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"\[Chi]", "\[Rule]", 
                 RowBox[{"ratio", " ", "\[Chi]Thr"}]}], "}"}]}], ")"}], "/", 
             "\[Gamma]R"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "stabSol", "]"}]}], "}"}]}], "]"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"ratio", ",", "0", ",", "maxRatio"}], "}"}], ",", 
       RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"hideY", ",", "Automatic", 
            RowBox[{"(*", 
             RowBox[{"to", "-", 
              RowBox[{"do", ":", " ", 
               RowBox[{"add", " ", "feature"}]}]}], "*)"}], ",", "350"}], 
           "]"}], ",", "Automatic"}], "}"}]}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"hideY", ",", "1", ",", "35"}], "]"}], ",", "10"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"hideX", ",", "0", ",", "30"}], "]"}], ",", "0"}], 
           "}"}]}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "11"}], ",", "11"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Thickness", "[", "0.02", "]"}]}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "ratio"}], "}"}], ",", 
          RowBox[{"colorFn", "[", "ratio", "]"}]}], "]"}]}], ",", 
       RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", "None"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"hideX", ",", "None", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "10"}], ",", 
                RowBox[{"-", "5"}], ",", "0", ",", "5", ",", "10"}], "}"}]}], 
             "]"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", "Black", "]"}], ","}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", "Black", "]"}], ","}], "}"}]}], "}"}]}],
        ",", 
       RowBox[{"PlotPoints", "\[Rule]", "60"}], ",", 
       RowBox[{"MaxRecursion", "\[Rule]", "10"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"Epilog", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "[", "0.01", "]"}], ",", "Black", ",", 
          RowBox[{"Point", "[", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Re", "[", 
                   RowBox[{"\[CapitalOmega]", "/.", 
                    RowBox[{"stabSol", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
                  RowBox[{"{", 
                   RowBox[{"\[Chi]", "\[Rule]", 
                    RowBox[{"1", " ", "\[Chi]Thr"}]}], "}"}]}], ")"}], "/", 
                "\[Gamma]R"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Im", "[", 
                   RowBox[{"\[CapitalOmega]", "/.", 
                    RowBox[{"stabSol", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
                  RowBox[{"{", 
                   RowBox[{"\[Chi]", "\[Rule]", 
                    RowBox[{"1", " ", "\[Chi]Thr"}]}], "}"}]}], ")"}], "/", 
                "\[Gamma]R"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "stabSol", "]"}]}], "}"}]}], "]"}], 
           "]"}], ",", "\[IndentingNewLine]", "White", ",", " ", 
          RowBox[{"Point", "[", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Re", "[", 
                   RowBox[{"\[CapitalOmega]", "/.", 
                    RowBox[{"stabSol", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
                  RowBox[{"{", 
                   RowBox[{"\[Chi]", "\[Rule]", "0"}], "}"}]}], ")"}], "/", 
                "\[Gamma]R"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Im", "[", 
                   RowBox[{"\[CapitalOmega]", "/.", 
                    RowBox[{"stabSol", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
                  RowBox[{"{", 
                   RowBox[{"\[Chi]", "\[Rule]", "0"}], "}"}]}], ")"}], "/", 
                "\[Gamma]R"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "stabSol", "]"}]}], "}"}]}], "]"}], 
           "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Not", "[", 
             RowBox[{"additionalEpilog", "===", "None"}], "]"}], ",", 
            "additionalEpilog", ","}], "]"}]}], "}"}]}]}], "]"}]}], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxRatio", " ", "=", " ", "1.1"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"colorBarPower", " ", "=", " ", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          FractionBox["1", "maxRatio"], ")"}], "^", "n"}], "==", "0.5"}], ",",
        "n"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "so", " ", "that", " ", "threshold", " ", "is", " ", "at", " ", "the", 
     " ", "middle", " ", "of", " ", "the", " ", "colorbar"}], "*)"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colourBar", "=", 
   RowBox[{"DensityPlot", "[", 
    RowBox[{"y", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "maxRatio"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "20"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "350"}], "}"}]}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "All"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "10"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "-", 
             RowBox[{"(", 
              RowBox[{"maxRatio", "-", "1"}], ")"}]}], ",", "1", ",", 
            "maxRatio"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", "24"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "colorFn"}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fig2", " ", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"stabilityPlane", "[", 
             RowBox[{"0", ",", "0", ",", "0", ",", "False", ",", "True"}], 
             "]"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"stabilityPlane", "[", 
             RowBox[{
             "Tla0", ",", " ", "Tlb0", ",", " ", "Tlc0", ",", "False", ",", 
              "False"}], "]"}], "}"}]}], "}"}], ",", 
         RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}], ",", "colourBar"}], 
      "}"}], "}"}], ",", 
    RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<nIS_stability_plane_unlabelled.pdf\>\""}], ",", "fig2"}], "]"}], 
  ";", 
  RowBox[{"(*", 
   RowBox[{"for", " ", "the", " ", "paper", " ", "as", " ", "figure", " ", 
    RowBox[{"2", "!"}], " ", "now", " ", "vertical"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.847930374874229*^9, 3.8479307396174297`*^9}, {
   3.847930780929421*^9, 3.847930797896391*^9}, {3.8479308723771677`*^9, 
   3.847930939225677*^9}, 3.847930974119968*^9, {3.847931098135556*^9, 
   3.847931145578796*^9}, {3.847931199280263*^9, 3.8479312118457003`*^9}, {
   3.847931247901841*^9, 3.847931323169299*^9}, {3.847931405074628*^9, 
   3.847931443292101*^9}, {3.847931538123152*^9, 3.8479315769696302`*^9}, {
   3.8479316125631323`*^9, 3.847931689254765*^9}, {3.847931759420836*^9, 
   3.847931842542253*^9}, {3.8479928269732037`*^9, 3.847992913367662*^9}, {
   3.847992955023525*^9, 3.847992992787787*^9}, {3.847993029830791*^9, 
   3.847993146081934*^9}, {3.8479932025865517`*^9, 3.847993347677226*^9}, {
   3.847993411117497*^9, 3.847993430226684*^9}, 3.847993461375655*^9, {
   3.847993519124926*^9, 3.847993612464405*^9}, {3.847993642931487*^9, 
   3.847993767390232*^9}, {3.8479937976651278`*^9, 3.8479938174022503`*^9}, {
   3.847993854512912*^9, 3.847993867563959*^9}, {3.847993920216468*^9, 
   3.847994005460935*^9}, {3.847994115437811*^9, 3.8479941181922607`*^9}, {
   3.8479941806860523`*^9, 3.847994198783444*^9}, {3.847994398164238*^9, 
   3.847994458607256*^9}, {3.847994569084525*^9, 3.847994612545302*^9}, 
   3.8479946759069777`*^9, {3.8479947213659163`*^9, 3.847994733121272*^9}, {
   3.847994776655514*^9, 3.847994781423777*^9}, 3.847994835329232*^9, {
   3.847994875771535*^9, 3.847994951633368*^9}, {3.847994989516539*^9, 
   3.8479950201270123`*^9}, {3.84799509935739*^9, 3.847995135962624*^9}, {
   3.84799522424413*^9, 3.847995224835964*^9}, {3.847995286809065*^9, 
   3.8479954626373463`*^9}, {3.8479954991156387`*^9, 
   3.8479956546691027`*^9}, {3.8479956938876657`*^9, 3.847995781119594*^9}, {
   3.8479961329596777`*^9, 3.847996156651623*^9}, {3.847996187398817*^9, 
   3.847996227906331*^9}, {3.847996263667407*^9, 3.847996341475912*^9}, {
   3.84799647447398*^9, 3.8479965121862164`*^9}, {3.847996550018777*^9, 
   3.8479968994782877`*^9}, {3.847996947065564*^9, 3.847997064769266*^9}, {
   3.8479971616263227`*^9, 3.847997201511827*^9}, {3.8479972321022177`*^9, 
   3.847997405649331*^9}, 3.8480066295167923`*^9, {3.8480074783093367`*^9, 
   3.848007481166889*^9}, {3.848007512665165*^9, 3.848007545309402*^9}, {
   3.8480075783225927`*^9, 3.8480076153472843`*^9}, {3.848007668235729*^9, 
   3.848007703620397*^9}, {3.8480122288513727`*^9, 3.848012283735894*^9}, {
   3.848012316911435*^9, 3.848012366836357*^9}, {3.8480124000730257`*^9, 
   3.848012446550956*^9}, {3.8480142432698107`*^9, 3.8480142556016693`*^9}, {
   3.848014443244166*^9, 3.848014458693581*^9}, {3.848014534863324*^9, 
   3.8480146128052197`*^9}, {3.848014729779537*^9, 3.848014730027671*^9}, {
   3.850948590639906*^9, 3.850948600028981*^9}, {3.850948652505641*^9, 
   3.850948791254982*^9}, {3.8509488320761538`*^9, 3.850948857748596*^9}, {
   3.850948892135488*^9, 3.850949024737789*^9}, {3.8509490768405533`*^9, 
   3.850949105111813*^9}, {3.850949274845211*^9, 3.850949289581017*^9}, {
   3.8509494552030888`*^9, 3.8509495369479523`*^9}, 3.8509495773870687`*^9, {
   3.850949614531212*^9, 3.850949615147633*^9}, {3.850949853472108*^9, 
   3.850949861813493*^9}, {3.850949895125607*^9, 3.8509498963572273`*^9}, {
   3.850949942528661*^9, 3.850949958527059*^9}, {3.850950000953433*^9, 
   3.850950070144031*^9}, 3.850950105987041*^9, {3.850950139462798*^9, 
   3.850950148827582*^9}, {3.850950185052065*^9, 3.8509502670877523`*^9}, {
   3.850950305357107*^9, 3.8509503441243887`*^9}, {3.850950376118161*^9, 
   3.8509504876654043`*^9}, {3.850950628843101*^9, 3.850950723769485*^9}, {
   3.850950799056521*^9, 3.8509508357167587`*^9}, {3.8509509119697857`*^9, 
   3.850951083090852*^9}, {3.8509511353625317`*^9, 3.850951159011031*^9}, {
   3.850951269892387*^9, 3.8509512982289057`*^9}, {3.850951341033533*^9, 
   3.8509513509965143`*^9}, {3.850951381865343*^9, 3.850951424570146*^9}, {
   3.852938121934492*^9, 3.852938128706208*^9}, {3.853350116334387*^9, 
   3.853350165120645*^9}, {3.853350239007255*^9, 3.853350255594594*^9}, {
   3.853350364630468*^9, 3.85335036470582*^9}, {3.853350399428173*^9, 
   3.8533503995225353`*^9}, {3.853350447345765*^9, 3.853350486383284*^9}, {
   3.853350533020227*^9, 3.853350534922592*^9}, {3.853350639463451*^9, 
   3.85335064578406*^9}, {3.853350722536483*^9, 3.853350803774089*^9}, 
   3.8533508662482452`*^9, {3.856390640212492*^9, 3.8563907282045193`*^9}, {
   3.8563908664940777`*^9, 3.8563908834366083`*^9}, {3.8563909138982553`*^9, 
   3.856390957437595*^9}, {3.8563910262721863`*^9, 3.856391052665155*^9}, {
   3.8563911441694527`*^9, 3.856391223208437*^9}, {3.856391273861431*^9, 
   3.856391322526579*^9}, {3.856391373742195*^9, 3.856391400531199*^9}, {
   3.856391448697472*^9, 3.856391451564783*^9}, {3.856391511972496*^9, 
   3.856391527207932*^9}, {3.856391573368719*^9, 3.856391671263651*^9}, {
   3.856391761137665*^9, 3.8563917794754744`*^9}, 3.856391826489797*^9},
 CellLabel->
  "In[385]:=",ExpressionUUID->"14098373-6585-46eb-a38a-7d66b980b77d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"-", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Optimisation", " ", "and", " ", "feasibility"}], 
   "*)"}]}]], "Input",
 CellLabel->
  "In[112]:=",ExpressionUUID->"a5db4890-360d-4d80-8138-505bf28e77b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"broadband", " ", 
     RowBox[{"detection", ":", " ", 
      RowBox[{"optimising", " ", "integrated", " ", "sensitivity"}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"--", 
     RowBox[{">", " ", 
      RowBox[{"un", "-", 
       RowBox[{
       "squeezed", " ", "integral", " ", "is", " ", "bounded", " ", "by", " ",
         "finite", " ", "circulating", " ", "power", " ", "through", " ", 
        "the", " ", "Mizuno", " ", "Limit"}]}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"to", "-", 
     RowBox[{"do", ":", " ", 
      RowBox[{
      "bias", " ", "kernel", " ", "to", " ", "encourage", " ", "more", " ", 
       "broadband", " ", 
       RowBox[{"sens", ".", "?"}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "plotOptimiseBroadband", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotOptimiseBroadband", "[", 
     RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", "Rpd_", ",", 
      RowBox[{"symSRM_:", "True"}], ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
      RowBox[{"\[Chi]RatioMax_:", "0.95"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Chi]thr", "=", 
       RowBox[{"singularityThr", "[", 
        RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<\[Chi] sing. thr. (ratio to \[Omega]s) = \>\"", ",", " ", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"\[Chi]thr", "/", "\[Omega]s"}], ",", "4"}], "]"}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"optiFnInt", "[", 
        RowBox[{"\[Chi]Ratio_", "?", "NumericQ"}], "]"}], ":=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Beta]", " ", 
            RowBox[{"ASDShwRP", "[", 
             RowBox[{
              RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
              RowBox[{"\[Chi]Ratio", " ", "\[Chi]thr"}], ",", 
              RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc",
               ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], 
             "]"}]}], ")"}], 
          RowBox[{"-", "2"}]], ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", 
           RowBox[{"fRange", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"fRange", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"MaxRecursion", "\[Rule]", "10"}], ",", 
         RowBox[{"PrecisionGoal", "\[Rule]", "3"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "4"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"optiSolInt", "=", 
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"optiFnInt", "[", "\[Chi]Ratio", "]"}], ",", 
           RowBox[{"0", "<", "\[Chi]Ratio", "<", "\[Chi]RatioMax"}]}], "}"}], 
         ",", "\[Chi]Ratio"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<broadband optimisation: \[Chi] ratio to sing. thr. = \>\"", ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"\[Chi]Ratio", "/.", 
           RowBox[{"optiSolInt", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "4"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Chi]Ratio", "/.", 
               RowBox[{"optiSolInt", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "-", 
             "\[Chi]RatioMax"}], "]"}], "<", 
           SuperscriptBox["10", 
            RowBox[{"-", "5"}]]}], 
          RowBox[{"(*", "tolerance", "*)"}], ",", 
          "\"\<, at max. ratio allowed\>\"", ",", "\"\<\>\""}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"plotASDShwRP", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Chi]Ratio", "/.", 
                RowBox[{"optiSolInt", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "\[Chi]thr"}], ",", 
             
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Chi]RatioMax", " ", "\[Chi]thr"}], ",", 
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Thin", ",", "Black"}], "]"}], ",", ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Dashed", ",", "Gray"}], "]"}]}], "}"}]}], "]"}], "]"}]}],
      ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"peak", " ", "sensitivity", " ", "optimisation"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotOptimisePeak", "[", 
     RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", "Rpd_", ",", 
      RowBox[{"symSRM_:", "True"}], ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
      RowBox[{"\[Chi]RatioMax_:", "0.95"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Chi]thr", "=", 
       RowBox[{"singularityThr", "[", 
        RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<\[Chi] sing. thr. (ratio to \[Omega]s) = \>\"", ",", " ", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"\[Chi]thr", "/", "\[Omega]s"}], ",", "4"}], "]"}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"optiSol", "=", 
       RowBox[{"NMaximize", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[Beta]", " ", 
              RowBox[{"ASDShwRP", "[", 
               RowBox[{
                RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
                RowBox[{"\[Chi]Ratio", " ", "\[Chi]thr"}], ",", 
                RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", 
                "Tlc", ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}],
                "]"}]}], ")"}], 
            RowBox[{"-", "2"}]], ",", 
           RowBox[{"f", ">", "0"}], ",", 
           RowBox[{"0", "<", "\[Chi]Ratio", "<", "\[Chi]RatioMax"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "\[Chi]Ratio"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<peak sensitivity optimisation: \[Chi] ratio to sing. thr. = \>\"",
         ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"\[Chi]Ratio", "/.", 
           RowBox[{"optiSol", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "4"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Chi]Ratio", "/.", 
               RowBox[{"optiSol", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "-", 
             "\[Chi]RatioMax"}], "]"}], "<", 
           SuperscriptBox["10", 
            RowBox[{"-", "5"}]]}], 
          RowBox[{"(*", "tolerance", "*)"}], ",", 
          "\"\<, at max. ratio allowed\>\"", ",", "\"\<\>\""}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"plotASDShwRP", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Chi]Ratio", "/.", 
                RowBox[{"optiSol", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "\[Chi]thr"}], ",", 
             
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Chi]RatioMax", " ", "\[Chi]thr"}], ",", 
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Thin", ",", "Black"}], "]"}], ",", ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Dashed", ",", "Gray"}], "]"}]}], "}"}]}], "]"}], "]"}]}],
      ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "probe", " ", "frequency", " ", "sensitivity", " ", "optimisation"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotOptimiseProbe", "[", 
     RowBox[{
     "fProbe_", ",", "Tla_", ",", "Tlb_", ",", "Tlc_", ",", "Rpd_", ",", 
      RowBox[{"symSRM_:", "True"}], ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
      RowBox[{"\[Chi]RatioMax_:", "0.95"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Chi]thr", "=", 
       RowBox[{"singularityThr", "[", 
        RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<\[Chi] sing. thr. (ratio to \[Omega]s) = \>\"", ",", " ", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"\[Chi]thr", "/", "\[Omega]s"}], ",", "4"}], "]"}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"optiSol", "=", 
       RowBox[{"NMaximize", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[Beta]", " ", 
              RowBox[{"ASDShwRP", "[", 
               RowBox[{
                RowBox[{"2", "\[Pi]", " ", "fProbe"}], ",", 
                RowBox[{"\[Chi]Ratio", " ", "\[Chi]thr"}], ",", 
                RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", 
                "Tlc", ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}],
                "]"}]}], ")"}], 
            RowBox[{"-", "2"}]], ",", 
           RowBox[{"0", "<", "\[Chi]Ratio", "<", "\[Chi]RatioMax"}]}], "}"}], 
         ",", "\[Chi]Ratio"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<probe frequency \>\"", " ", ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{"fProbe", ",", "3"}], "]"}], ",", 
        "\"\< Hz sensitivity optimisation: \[Chi] ratio to sing. thr. = \>\"",
         ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"\[Chi]Ratio", "/.", 
           RowBox[{"optiSol", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "4"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Chi]Ratio", "/.", 
               RowBox[{"optiSol", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "-", 
             "\[Chi]RatioMax"}], "]"}], "<", 
           SuperscriptBox["10", 
            RowBox[{"-", "5"}]]}], 
          RowBox[{"(*", "tolerance", "*)"}], ",", 
          "\"\<, at max. ratio allowed\>\"", ",", "\"\<\>\""}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"plotASDShwRP", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
            ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Chi]Ratio", "/.", 
               RowBox[{"optiSol", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "\[Chi]thr"}], ",", 
            RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
            ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Chi]RatioMax", " ", "\[Chi]thr"}], ",", 
            RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
            ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Thin", ",", "Black"}], "]"}], ",", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Dashed", ",", "Gray"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", 
          SuperscriptBox["10", "4"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"fProbe", ",", "Red"}], "}"}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "broadband", " ", "optimisation", " ", "against", " ", "kernel"}], ",", 
     " ", 
     RowBox[{"i", ".", "e", ".", " ", "mutriK"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotOptimise\[Mu]tricK1", "[", 
     RowBox[{"Tla_", ",", "Tlb_", ",", "Tlc_", ",", "Rpd_", ",", 
      RowBox[{"symSRM_:", "True"}], ",", 
      RowBox[{"fRange_:", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", " ", 
          SuperscriptBox["10", "3"]}], ",", 
         RowBox[{"4", " ", 
          SuperscriptBox["10", "3"]}]}], "}"}]}], ",", 
      RowBox[{"\[Chi]RatioMax_:", "0.95"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Chi]thr", "=", 
       RowBox[{"singularityThr", "[", 
        RowBox[{"Tla", ",", "Tlb", ",", "Tlc", ",", "symSRM"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<\[Chi] sing. thr. (ratio to \[Omega]s) = \>\"", ",", " ", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"\[Chi]thr", "/", "\[Omega]s"}], ",", "4"}], "]"}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"ASDShCrit", " ", "=", " ", 
       RowBox[{"5", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "25"}]]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"from", " ", "Miao", " ", "et", " ", "al"}], ",", " ", 
        "2018"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"k1", "=", 
       RowBox[{"1", "/", "9"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"integrand", "[", 
        RowBox[{
         RowBox[{"f_", "?", "NumericQ"}], ",", 
         RowBox[{"\[Chi]Ratio_", "?", "NumericQ"}]}], "]"}], ":=", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Z", "=", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["ASDShCrit", 
              RowBox[{"-", "2"}]]], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"ASDShwRP", "[", 
                RowBox[{
                 RowBox[{"2", "\[Pi]", " ", "f"}], ",", 
                 RowBox[{"\[Chi]Ratio", " ", "\[Chi]thr"}], ",", 
                 RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", 
                 "Tlc", ",", "Rpd", ",", "True", ",", "False", ",", 
                 "symSRM"}], "]"}], 
               RowBox[{"-", "2"}]], "-", 
              SuperscriptBox["ASDShCrit", 
               RowBox[{"-", "2"}]]}], ")"}]}]}], "}"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Z", "<", "0"}], ",", "Z", ",", 
           RowBox[{"Z", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "k1"}], " ", "Z"}], "]"}]}]}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"optiFnInt", "[", 
        RowBox[{"\[Chi]Ratio_", "?", "NumericQ"}], "]"}], ":=", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          RowBox[{"fRange", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "-", 
          RowBox[{"fRange", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]], 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"integrand", "[", 
           RowBox[{"f", ",", "\[Chi]Ratio"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"fRange", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"fRange", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"MaxRecursion", "\[Rule]", "10"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "3"}], ",", 
          RowBox[{"AccuracyGoal", "\[Rule]", "4"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"optiSolInt", "=", 
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"optiFnInt", "[", "\[Chi]Ratio", "]"}], ",", 
           RowBox[{"0", "<", "\[Chi]Ratio", "<", "\[Chi]RatioMax"}]}], "}"}], 
         ",", "\[Chi]Ratio"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<\[Mu]tricK1 optimisation: \[Chi] ratio to sing. thr. = \>\"", ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"\[Chi]Ratio", "/.", 
           RowBox[{"optiSolInt", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "4"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Chi]Ratio", "/.", 
               RowBox[{"optiSolInt", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "-", 
             "\[Chi]RatioMax"}], "]"}], "<", 
           SuperscriptBox["10", 
            RowBox[{"-", "5"}]]}], 
          RowBox[{"(*", "tolerance", "*)"}], ",", 
          "\"\<, at max. ratio allowed\>\"", ",", "\"\<\>\""}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"plotASDShwRP", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Chi]Ratio", "/.", 
                RowBox[{"optiSolInt", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "\[Chi]thr"}], ",", 
             
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Chi]RatioMax", " ", "\[Chi]thr"}], ",", 
             RowBox[{"\[Pi]", "/", "2"}], ",", "Tla", ",", "Tlb", ",", "Tlc", 
             ",", "Rpd", ",", "True", ",", "False", ",", "symSRM"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Thin", ",", "Black"}], "]"}], ",", ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Dashed", ",", "Gray"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10", ",", 
           SuperscriptBox["10", "5"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", ",", "Red"}], "}"}], "&"}], "/@", "fRange"}], ",", 
           
           RowBox[{"{", "}"}]}], "}"}]}], "]"}], "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8389319738453007`*^9, 3.8389321555053387`*^9}, {
   3.8389322352249813`*^9, 3.838932237643272*^9}, {3.838932279803762*^9, 
   3.838932287031493*^9}, {3.838932325893104*^9, 3.838932436235195*^9}, {
   3.83893247362187*^9, 3.838932484579322*^9}, {3.838932542532151*^9, 
   3.838932564191246*^9}, {3.838933021956428*^9, 3.838933123364362*^9}, {
   3.8389332084083157`*^9, 3.838933208883883*^9}, {3.8389335802944717`*^9, 
   3.838933594447268*^9}, {3.838933666315538*^9, 3.838933666846182*^9}, {
   3.838933886174268*^9, 3.838933904543795*^9}, 3.838934424798189*^9, {
   3.8389346367024727`*^9, 3.838934637068562*^9}, {3.8389346803614492`*^9, 
   3.838934873643566*^9}, 3.8389350801106358`*^9, {3.838935193108636*^9, 
   3.8389352412753363`*^9}, {3.838935398868618*^9, 3.8389354008204107`*^9}, {
   3.8389354608153152`*^9, 3.838935485770495*^9}, {3.838935828799415*^9, 
   3.8389358308745413`*^9}, {3.838948165700429*^9, 3.8389481659564734`*^9}, 
   3.838948656007753*^9, {3.838948735448895*^9, 3.8389487369857473`*^9}, 
   3.838948792136237*^9, {3.838950104074198*^9, 3.838950128385983*^9}, {
   3.839032806776524*^9, 3.839032813305482*^9}, {3.839035570474435*^9, 
   3.83903557247885*^9}, 3.839035698763916*^9, {3.839035942451255*^9, 
   3.839035959569323*^9}, {3.8390360028051023`*^9, 3.839036024466522*^9}, {
   3.839277830853528*^9, 3.839277830910915*^9}, {3.83927803930261*^9, 
   3.839278059333344*^9}, {3.839278285898387*^9, 3.839278343249638*^9}, {
   3.8392787111961393`*^9, 3.839278712210651*^9}, {3.839617769454565*^9, 
   3.839617769508966*^9}, {3.8396179005690823`*^9, 3.8396179313802233`*^9}, {
   3.839618035639719*^9, 
   3.8396180478930597`*^9}},ExpressionUUID->"abf09643-bfdb-4f92-bb70-\
da43f15e7d0f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "optimisation", " ", "and", " ", "plotting", " ", "is", " ", "slow"}], 
    ",", " ", 
    RowBox[{
    "but", " ", "faster", " ", "for", " ", "Li", " ", "et", " ", "al"}], ",", 
    " ", 
    RowBox[{"2020", " ", "parameter", " ", 
     RowBox[{"set", "?"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"plotOptimiseProbe", "[", 
    RowBox[{
    "2500", ",", "Tla0", ",", "Tlb0", ",", "Tlc0", ",", "Rpd0", ",", 
     "False"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"plotOptimisePeak", "[", 
    RowBox[{"Tla0", ",", "Tlb0", ",", "Tlc0", ",", "Rpd0", ",", "False"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.838933923682683*^9, 3.8389340425621367`*^9}, {
   3.8389340823202677`*^9, 3.838934158943657*^9}, {3.8389341893722973`*^9, 
   3.8389341973169813`*^9}, {3.838934524201665*^9, 3.83893453167605*^9}, {
   3.838934794010911*^9, 3.838934801104147*^9}, {3.8389358933402767`*^9, 
   3.838935894650889*^9}, {3.83895011418978*^9, 3.8389501144413633`*^9}, {
   3.8390338846453943`*^9, 3.8390338867786093`*^9}, {3.839034128918816*^9, 
   3.8390341447486353`*^9}, {3.8390354352959538`*^9, 3.83903547076202*^9}, 
   3.839035966856776*^9, 3.839278066041747*^9, {3.839376991397736*^9, 
   3.839376993933242*^9}, {3.8393770550739613`*^9, 3.8393770664273443`*^9}, {
   3.842577986303362*^9, 
   3.8425779874625*^9}},ExpressionUUID->"6e58ce1c-53b3-4de6-ab4c-\
3967f355f567"],

Cell[BoxData[
 RowBox[{"printParams", "[", "]"}]], "Input",
 CellChangeTimes->{{3.839617958848846*^9, 3.839617960395555*^9}},
 CellLabel->
  "In[236]:=",ExpressionUUID->"47b8ac6c-1a87-4fad-a5d3-766647e129da"],

Cell[BoxData[
 RowBox[{"plotOptimiseBroadband", "[", 
  RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "Rpd1", ",", "False", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", "0.99"}], "]"}]], "Input",
 CellChangeTimes->{{3.839377133004155*^9, 3.839377133692834*^9}, {
  3.83961777612607*^9, 3.839617819988051*^9}, {3.839618100174468*^9, 
  3.8396181021372557`*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"9bfc2b58-2c73-4188-b9ea-f393a81380cd"],

Cell[BoxData[{
 RowBox[{"setConfigParamsCustom", "[", 
  RowBox[{
   RowBox[{"2.", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]]}], 
   RowBox[{"(*", "m", "*)"}], ",", 
   RowBox[{"4.", " ", 
    SuperscriptBox["10", "3"]}], 
   RowBox[{"(*", "m", "*)"}], ",", "None", ",", " ", 
   RowBox[{"3", " ", 
    SuperscriptBox["10", "6"]}], 
   RowBox[{"(*", "W", "*)"}], ",", "None", ",", "0.046", ",", "400", 
   RowBox[{"(*", "kg", "*)"}], ",", "None", ",", 
   RowBox[{"2", "\[Pi]", " ", "500"}], ",", 
   RowBox[{"2", "\[Pi]", " ", "5000"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotOptimise\[Mu]tricK1", "[", 
  RowBox[{"Tla1", ",", "Tlb1", ",", "Tlc1", ",", "Rpd1", ",", "False", ",", 
   RowBox[{"{", 
    RowBox[{"1000", ",", "4000"}], "}"}], ",", "0.98"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8392780699441023`*^9, {3.83927867937953*^9, 3.839278679602572*^9}, {
   3.8393771370017557`*^9, 3.839377137769272*^9}, 3.8396180024498053`*^9, {
   3.839618169052668*^9, 3.8396182201121387`*^9}, {3.8396183266402693`*^9, 
   3.8396183616879463`*^9}, {3.839618524352333*^9, 3.839618532191481*^9}},
 CellLabel->
  "In[262]:=",ExpressionUUID->"c2ccb358-37e2-4ef4-bfd7-eca9fcd336ea"]
},
WindowSize->{1853, 1025},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 482, 10, 102, "Text",ExpressionUUID->"45536b2d-a4a5-4af5-902b-e0c4b447a39d"],
Cell[1043, 32, 192, 3, 44, "Text",ExpressionUUID->"ff483bee-ee34-4fed-95df-f190376ecfd3"],
Cell[1238, 37, 16704, 463, 1201, "Input",ExpressionUUID->"51ce2a0c-08ec-488b-af85-ece07d7a9c69"],
Cell[17945, 502, 18451, 492, 1412, "Input",ExpressionUUID->"474bcc37-a9a4-474e-993f-fb10ea120e2b"],
Cell[36399, 996, 2973, 71, 177, "Input",ExpressionUUID->"30f0d068-9672-4682-bcd1-c84a629aa724"],
Cell[39375, 1069, 6743, 167, 557, "Input",ExpressionUUID->"6fe9231a-e423-450e-8ffd-ff95966f8692"],
Cell[46121, 1238, 6649, 164, 486, "Input",ExpressionUUID->"60642c49-28eb-4952-a9b6-24849b5cb4d1"],
Cell[52773, 1404, 2516, 56, 302, "Input",ExpressionUUID->"ee811092-1183-4cbd-819b-c4d0c7953167"],
Cell[55292, 1462, 3720, 90, 109, "Input",ExpressionUUID->"1a62276a-51d9-4e5e-a02e-94f74778753a"],
Cell[59015, 1554, 98630, 2401, 9377, "Input",ExpressionUUID->"eabb38b1-4c8c-427b-a6f1-9b7e0c3e871a"],
Cell[157648, 3957, 4198, 83, 339, "Input",ExpressionUUID->"88ebc2e7-dd84-4907-b15a-fa0cd14e3ede"],
Cell[161849, 4042, 1193, 29, 160, "Input",ExpressionUUID->"209a6386-5244-45e9-8323-4028f6e8cff4"],
Cell[163045, 4073, 1064, 26, 131, "Input",ExpressionUUID->"d6949277-6182-4c16-bf82-3529a30bce11"],
Cell[164112, 4101, 5103, 121, 434, "Input",ExpressionUUID->"46874195-3581-4ea5-b6d3-b716dfe3fd58"],
Cell[169218, 4224, 6102, 141, 433, "Input",ExpressionUUID->"1c819ce3-a6af-482b-a396-09b7a4b304ca"],
Cell[175323, 4367, 4742, 113, 405, "Input",ExpressionUUID->"ce6cef14-ee09-451f-ba38-f6b7580e5bca"],
Cell[180068, 4482, 3283, 83, 318, "Input",ExpressionUUID->"a2211593-81bb-4d73-a788-3d0dcb3b2efc"],
Cell[183354, 4567, 3594, 81, 259, "Input",ExpressionUUID->"99ab4c44-622c-4095-a02f-1c9cf2c691bb"],
Cell[186951, 4650, 275831, 4658, 1700, "Input",ExpressionUUID->"9f736451-d92e-4103-8f1c-c2e093c38685"],
Cell[462785, 9310, 4339, 112, 450, "Input",ExpressionUUID->"55fa506e-ecfe-42da-bc8a-b1bd0aab6c61"],
Cell[467127, 9424, 11410, 275, 895, "Input",ExpressionUUID->"3defe545-0e93-4379-a632-8bb4174d048f"],
Cell[478540, 9701, 7744, 195, 729, "Input",ExpressionUUID->"d4436af8-c7f6-4c89-a918-02b0f27771a0"],
Cell[486287, 9898, 3622, 89, 346, "Input",ExpressionUUID->"ff2cdeaf-ddfe-40bf-9443-9bef721ee675"],
Cell[489912, 9989, 1909, 47, 164, "Input",ExpressionUUID->"993df0b6-f8fe-4b02-adf9-de81cd56502f"],
Cell[491824, 10038, 1020, 23, 98, "Input",ExpressionUUID->"08cf331e-0caa-4217-95af-ee723b93c1b8"],
Cell[492847, 10063, 2084, 42, 156, "Input",ExpressionUUID->"6f89864b-cc61-4a72-b3fa-48050eeeb5a7"],
Cell[494934, 10107, 18617, 441, 1316, "Input",ExpressionUUID->"74395ae9-21ab-4be4-95b6-12d3b7df7666"],
Cell[513554, 10550, 3395, 78, 320, "Input",ExpressionUUID->"24d54f1a-861b-467f-b5a7-0ab8f2298c59"],
Cell[516952, 10630, 1158, 31, 103, "Input",ExpressionUUID->"2b2e0c95-51f9-469e-ad2c-d6505128c2a1"],
Cell[518113, 10663, 734, 17, 69, "Input",ExpressionUUID->"2da7f284-f49d-4c00-9670-8e451908baad"],
Cell[518850, 10682, 38768, 855, 2896, "Input",ExpressionUUID->"0965fdd5-b70c-4675-b9cb-c0cff4c32991"],
Cell[557621, 11539, 20790, 472, 1267, "Input",ExpressionUUID->"1fc45ae0-6255-4c50-aa7c-d825532ddd9d"],
Cell[578414, 12013, 17962, 406, 1017, "Input",ExpressionUUID->"14098373-6585-46eb-a38a-7d66b980b77d"],
Cell[596379, 12421, 2313, 69, 69, "Input",ExpressionUUID->"a5db4890-360d-4d80-8138-505bf28e77b8"],
Cell[598695, 12492, 23499, 560, 2048, "Input",ExpressionUUID->"abf09643-bfdb-4f92-bb70-da43f15e7d0f"],
Cell[622197, 13054, 1460, 31, 98, "Input",ExpressionUUID->"6e58ce1c-53b3-4de6-ab4c-3967f355f567"],
Cell[623660, 13087, 208, 4, 39, "Input",ExpressionUUID->"47b8ac6c-1a87-4fad-a5d3-766647e129da"],
Cell[623871, 13093, 473, 9, 39, "Input",ExpressionUUID->"9bfc2b58-2c73-4188-b9ea-f393a81380cd"],
Cell[624347, 13104, 1198, 26, 73, "Input",ExpressionUUID->"c2ccb358-37e2-4ef4-bfd7-eca9fcd336ea"]
}
]
*)

