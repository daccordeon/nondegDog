(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    672407,      13465]
NotebookOptionsPosition[    668130,      13394]
NotebookOutlinePosition[    668495,      13410]
CellTagsIndexPosition[    668452,      13407]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Radiation pressure + back-action evasion for nondegenerate internal squeezing\
\
\>", "Text",
 CellChangeTimes->{{3.836608145765127*^9, 3.8366081624844303`*^9}, 
   3.836954525659338*^9},ExpressionUUID->"45536b2d-a4a5-4af5-902b-\
e0c4b447a39d"],

Cell["Attempt 1: Using Hamiltonian from Li et al, 2020", "Text",
 CellChangeTimes->{{3.836608145765127*^9, 
  3.8366081869249163`*^9}},ExpressionUUID->"ff483bee-ee34-4fed-95df-\
f190376ecfd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"(*", 
    RowBox[{"to", "-", 
     RowBox[{"do", ":", " ", 
      RowBox[{
      "ability", " ", "to", " ", "turn", " ", "RP", " ", "on", " ", "and", 
       " ", "off"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]", "=", 
     FractionBox[
      RowBox[{"\[Alpha]GW", " ", "Larm"}], 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"1", "/", "2"}]], "\[HBar]"}]]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"\[Rho]RP", "=", 
     RowBox[{"\[Rho]BAE", "=", 
      FractionBox[
       SuperscriptBox["\[Alpha]GW", "2"], 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"1", "/", "2"}]], "\[HBar]", " ", "\[Mu]"}]]}]}], ";"}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"setting", " ", "global", " ", "assumptions"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"$Assumptions", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", ">", "0"}], ",", 
       RowBox[{"\[Gamma]a", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"\[Gamma]btot", "\[GreaterEqual]", "\[Gamma]R", ">", "0"}], 
       ",", 
       RowBox[{"\[Gamma]c", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"1", ">", "Rpd", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"\[Chi]", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"\[Omega]s", ">", "0"}], ",", 
       RowBox[{"Element", "[", 
        RowBox[{"\[Beta]", ",", "Reals"}], "]"}], ",", 
       RowBox[{"\[Rho]RP", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"\[Rho]BAE", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"Element", "[", 
        RowBox[{"\[Alpha]OG", ",", "Reals"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Id", "=", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "simplifying", " ", "upstream", " ", "to", " ", "better", " ", "the", " ",
      "end", " ", "result"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ma", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Gamma]a", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], "Id"}], 
      "+", 
      RowBox[{
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Rho]RP"}], 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"1", "/", "2"}]], 
         SuperscriptBox["\[CapitalOmega]", "2"]}]], 
       RowBox[{"(", GridBox[{
          {"1", "1"},
          {
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}]}
         }], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"invMa", "=", 
     RowBox[{
      RowBox[{"Inverse", "[", "Ma", "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mc", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Gamma]c", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], "Id"}], 
      "-", 
      RowBox[{
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Rho]BAE"}], 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"1", "/", "2"}]], 
         SuperscriptBox["\[CapitalOmega]", "2"]}]], 
       RowBox[{"(", GridBox[{
          {"1", "1"},
          {
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}]}
         }], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"invMc", "=", 
     RowBox[{
      RowBox[{"Inverse", "[", "Mc", "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mb", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Gamma]btot", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], "Id"}], 
      "+", 
      RowBox[{
       SuperscriptBox["\[Omega]s", "2"], 
       RowBox[{"Inverse", "[", "Ma", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["\[Chi]", "2"], 
       RowBox[{
        RowBox[{"(", GridBox[{
           {"0", "1"},
           {"1", "0"}
          }], ")"}], ".", 
        RowBox[{"Inverse", "[", "Mc", "]"}], ".", 
        RowBox[{"(", GridBox[{
           {"0", "1"},
           {"1", "0"}
          }], ")"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"invMb", "=", 
     RowBox[{
      RowBox[{"Inverse", "[", "Mb", "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalGamma]", "=", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["2", 
        RowBox[{"1", "/", "2"}]]], 
      RowBox[{"(", GridBox[{
         {"1", "1"},
         {
          RowBox[{"-", "\[ImaginaryI]"}], "\[ImaginaryI]"}
        }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rin", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "Rpd"}], ")"}], 
         RowBox[{"1", "/", "2"}]], 
        RowBox[{"\[CapitalGamma]", ".", 
         RowBox[{"(", 
          RowBox[{"Id", "-", 
           RowBox[{"2", " ", "\[Gamma]R", " ", "invMb"}]}], ")"}], ".", 
         RowBox[{"Inverse", "[", "\[CapitalGamma]", "]"}]}]}], ")"}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rb", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "Rpd"}], ")"}], 
          RowBox[{"1", "/", "2"}]]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", " ", "\[Gamma]R"}], ")"}], 
         RowBox[{"1", "/", "2"}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]btot", "-", "\[Gamma]R"}], ")"}]}], ")"}], 
         RowBox[{"1", "/", "2"}]], 
        RowBox[{"\[CapitalGamma]", ".", " ", "invMb", ".", 
         RowBox[{"Inverse", "[", "\[CapitalGamma]", "]"}]}]}], ")"}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ra", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "Rpd"}], ")"}], 
          RowBox[{"1", "/", "2"}]]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", " ", "\[Gamma]R"}], ")"}], 
         RowBox[{"1", "/", "2"}]], "\[Omega]s", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", " ", "\[Gamma]a"}], ")"}], 
         RowBox[{"1", "/", "2"}]], 
        RowBox[{"\[CapitalGamma]", ".", " ", "invMb", ".", "invMa", ".", 
         RowBox[{"Inverse", "[", "\[CapitalGamma]", "]"}]}]}], ")"}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rc", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "Rpd"}], ")"}], 
          RowBox[{"1", "/", "2"}]]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", " ", "\[Gamma]R"}], ")"}], 
         RowBox[{"1", "/", "2"}]], "\[Chi]", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", " ", "\[Gamma]c"}], ")"}], 
         RowBox[{"1", "/", "2"}]], 
        RowBox[{"\[CapitalGamma]", ".", "invMb", ".", 
         RowBox[{"(", GridBox[{
            {"0", "1"},
            {"1", "0"}
           }], ")"}], ".", "invMc", ".", 
         RowBox[{"Inverse", "[", "\[CapitalGamma]", "]"}]}]}], ")"}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "Rpd"}], ")"}], 
          RowBox[{"1", "/", "2"}]]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", " ", "\[Gamma]R"}], ")"}], 
         RowBox[{"1", "/", "2"}]], "\[Omega]s", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}], ")"}], 
        RowBox[{"\[CapitalGamma]", ".", " ", "invMb", ".", "invMa", ".", 
         RowBox[{"(", GridBox[{
            {"1", "0"},
            {"0", 
             RowBox[{"-", "1"}]}
           }], ")"}]}]}], ")"}], "//", "Simplify"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8366130065522327`*^9, 3.836613673173481*^9}, {
   3.83661481958047*^9, 3.836614873549387*^9}, {3.836615239531361*^9, 
   3.8366152889123163`*^9}, {3.836615556860571*^9, 3.8366155592289248`*^9}, {
   3.8366158672709713`*^9, 3.83661587036897*^9}, {3.8366162303465233`*^9, 
   3.836616322824772*^9}, {3.836616424344256*^9, 3.8366164789951973`*^9}, {
   3.836616510923563*^9, 3.836616530265674*^9}, 3.836851636200042*^9, {
   3.836851779011145*^9, 3.836851791333149*^9}, {3.8368518559221077`*^9, 
   3.83685186062533*^9}, {3.8368524125034122`*^9, 3.836852415816183*^9}, {
   3.836855798256124*^9, 3.83685590928542*^9}, {3.836855999156945*^9, 
   3.836856014567819*^9}, {3.836856833492722*^9, 3.836856834556452*^9}, {
   3.836857018473957*^9, 3.8368570463544292`*^9}, {3.836857175552248*^9, 
   3.8368571796712313`*^9}, {3.8368573857432747`*^9, 3.83685738672364*^9}, 
   3.836872778795781*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"474bcc37-a9a4-474e-993f-fb10ea120e2b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Sx", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Rpd", " ", "Id"}], "\[IndentingNewLine]", "+", 
        RowBox[{"Rin", ".", 
         RowBox[{"ConjugateTranspose", "[", "Rin", "]"}]}], 
        "\[IndentingNewLine]", "+", 
        RowBox[{"Ra", ".", 
         RowBox[{"ConjugateTranspose", "[", "Ra", "]"}]}], 
        "\[IndentingNewLine]", "+", 
        RowBox[{"Rb", ".", 
         RowBox[{"ConjugateTranspose", "[", "Rb", "]"}]}], 
        "\[IndentingNewLine]", "+", 
        RowBox[{"Rc", ".", 
         RowBox[{"ConjugateTranspose", "[", "Rc", "]"}]}]}], ")"}], ",", 
      RowBox[{"TimeConstraint", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "10"}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"signal", " ", "transfer", " ", "function", " ", "is", " ", 
       SubscriptBox["X", 
        RowBox[{"PD", ",", "2"}]], " ", "wrt", " ", "h", " ", "not", " ", 
       SubscriptBox[
        OverscriptBox["X", "\[RightVector]"], "PD"], " ", "wrt", " ", 
       RowBox[{
        OverscriptBox["h", "\[RightVector]"], " ", "--"}]}], ">", " ", 
      RowBox[{"factor", " ", "of", " ", "two", " ", "from", " ", 
       SubscriptBox[
        RowBox[{"(", 
         RowBox[{"T", ".", 
          RowBox[{"(", GridBox[{
             {"1"},
             {"1"}
            }], ")"}]}], ")"}], "22"], " ", "versus", " ", 
       SubscriptBox["T", "22"], "\[IndentingNewLine]", 
       RowBox[{"NB", ":", " ", 
        RowBox[{"another", " ", "subtlety", " ", "in", " ", "that", " ", 
         SubscriptBox["T", "21"]}]}]}]}], "=", 
     SubscriptBox["T", "22"]}], ",", " ", 
    RowBox[{"but", " ", "I", " ", 
     RowBox[{"don", "'"}], "t", " ", "know", " ", "if", " ", "this", " ", 
     "can", " ", "be", " ", "known", " ", "a", " ", "priori"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigTransfer", " ", "=", " ", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"T", ".", 
          RowBox[{"(", GridBox[{
             {"1"},
             {"1"}
            }], ")"}]}], ")"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"TimeConstraint", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "10"}], "}"}]}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "to", " ", "remove", " ", "atomic", 
    " ", "brackets", " ", 
    RowBox[{"{", "...", "}"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigTransferAbs", "=", 
   RowBox[{
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Abs", "[", "sigTransfer", "]"}], "]"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sh", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"Sx", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}], 
      SuperscriptBox["sigTransferAbs", "2"]], ",", 
     RowBox[{"TimeConstraint", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "10"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.836858956439157*^9, 3.836858993460832*^9}, {
  3.8368752494973993`*^9, 3.8368752621194572`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"455f3a1c-c9a2-4a1c-b925-50807191267d"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds, and the transformation was \
aborted. Increasing the value of TimeConstraint option may improve the result \
of simplification.\"",2,26,4,25639070884970875802,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.836950159481628*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"20b5db7f-5ac0-4dd5-b779-201202ada7d5"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds, and the transformation was \
aborted. Increasing the value of TimeConstraint option may improve the result \
of simplification.\"",2,26,5,25639070884970875802,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.836950161587594*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"cb65ac83-ece7-491f-88d9-37fb1150b67e"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds, and the transformation was \
aborted. Increasing the value of TimeConstraint option may improve the result \
of simplification.\"",2,29,6,25639070884970875802,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.83695016301764*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"29ef536e-bb4e-4754-93a3-52a1837defa9"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds, and the transformation was \
aborted. Increasing the value of TimeConstraint option may improve the result \
of simplification.\"",2,29,7,25639070884970875802,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.836950164047714*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"1ecdaca8-667a-48ab-937e-ccf5cec0ee98"],

Cell[BoxData[
 TemplateBox[{
  "Simplify","time",
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) seconds, and the transformation was \
aborted. Increasing the value of TimeConstraint option may improve the result \
of simplification.\"",2,29,8,25639070884970875802,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.836950165708638*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"917ea6c3-d94a-4e34-b3a4-838d2bab59b4"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Simplify\\\", \
\\\"::\\\", \\\"time\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,29,9,25639070884970875802,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.836950165716021*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"a6b187d7-62f4-47ec-b5f6-144e818b9f39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"signal", " ", "transfer", " ", 
    RowBox[{"function", " ", "--"}], " ", "demonstration", " ", "of", " ", 
    "factor", " ", "of", " ", "two"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"T", ".", 
        RowBox[{"(", GridBox[{
           {"1"},
           {"1"}
          }], ")"}]}], ")"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Rho]RP", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Rho]BAE", "\[Rule]", "0"}], ",", 
        RowBox[{"Rpd", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Gamma]a", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Gamma]btot", "\[Rule]", "\[Gamma]R"}], ",", 
        RowBox[{"\[Gamma]c", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Beta]", "->", 
         RowBox[{"-", "\[Alpha]OG"}]}]}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"T", ".", 
        RowBox[{"ConjugateTranspose", "[", "T", "]"}]}], ")"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Rho]RP", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Rho]BAE", "\[Rule]", "0"}], ",", 
        RowBox[{"Rpd", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Gamma]a", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Gamma]btot", "\[Rule]", "\[Gamma]R"}], ",", 
        RowBox[{"\[Gamma]c", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Beta]", "->", 
         RowBox[{"-", "\[Alpha]OG"}]}]}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<sig. transfer fn.: \>\"", ",", 
     RowBox[{"Simplify", "[", 
      RowBox[{"ComplexExpand", "[", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"%%", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], "2"], "]"}], "]"}], 
     ",", "\"\< vs \>\"", ",", " ", 
     RowBox[{"%", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.836852422583626*^9, 3.836852446092558*^9}, {
   3.836852608926764*^9, 3.836852612853466*^9}, {3.836852670946411*^9, 
   3.836852695906394*^9}, {3.836853583920683*^9, 3.836853700033813*^9}, 
   3.836853795651004*^9, 3.836854294221211*^9, {3.8368556314624023`*^9, 
   3.836855791827155*^9}, {3.8368560406605167`*^9, 3.836856107995846*^9}, {
   3.836856275043109*^9, 3.836856347877851*^9}, {3.836856397181004*^9, 
   3.836856481102168*^9}, {3.836857061152836*^9, 3.836857066045846*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"30f0d068-9672-4682-bcd1-c84a629aa724"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"sig. transfer fn.: \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"4", " ", 
     SuperscriptBox["\[Alpha]OG", "2"], " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Omega]s", "2"]}], 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Gamma]R", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Chi]", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"], "-", 
        SuperscriptBox["\[Omega]s", "2"]}], ")"}], "2"]}]], 
   "\[InvisibleSpace]", "\<\" vs \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["\[Alpha]OG", "2"], " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Omega]s", "2"]}], 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Gamma]R", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Chi]", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"], "-", 
        SuperscriptBox["\[Omega]s", "2"]}], ")"}], "2"]}]]}],
  SequenceForm[
  "sig. transfer fn.: ", 
   4 $CellContext`\[Alpha]OG^2 $CellContext`\[Gamma]R \
$CellContext`\[Omega]s^2/($CellContext`\[Gamma]R^2 $CellContext`\
\[CapitalOmega]^2 + ($CellContext`\[Chi]^2 + $CellContext`\[CapitalOmega]^2 - \
$CellContext`\[Omega]s^2)^2), " vs ", 
   2 $CellContext`\[Alpha]OG^2 $CellContext`\[Gamma]R \
$CellContext`\[Omega]s^2/($CellContext`\[Gamma]R^2 $CellContext`\
\[CapitalOmega]^2 + ($CellContext`\[Chi]^2 + $CellContext`\[CapitalOmega]^2 - \
$CellContext`\[Omega]s^2)^2)],
  Editable->False]], "Print",
 CellChangeTimes->{3.836872551167296*^9, 3.836950170040132*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"3a7ac948-ce8d-4323-b780-45f0cf9de31a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
     "lossless", " ", "reduction", " ", "superceded", " ", "by", " ", "lossy",
       " ", 
      RowBox[{"reduction", ".", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"with", " ", 
          RowBox[{"R", ".", "P", ".", " ", "and"}], " ", "losses", " ", 
          "turned", " ", "off"}], ",", " ", 
         RowBox[{"should", " ", "match", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "also", " ", "need", " ", "to", " ", "send", " ", "\[Beta]"}], 
            "\[Rule]", 
            RowBox[{"-", "\[Alpha]OG"}]}], ")"}], "\[IndentingNewLine]", 
          RowBox[{"NB", ":", " ", 
           RowBox[{
           "factor", " ", "of", " ", "two", " ", "in", " ", "denominator", 
            " ", "is", " ", "from", " ", "choice", " ", "of", " ", "signal", 
            " ", "transfer", " ", "function", " ", 
            RowBox[{"(", 
             RowBox[{
             "siding", " ", "with", " ", "Korobko", " ", "convention", " ", 
              "over", " ", "Li"}], ")"}]}]}]}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"ComplexExpand", "[", 
        RowBox[{"Simplify", "[", 
         RowBox[{"Sh", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Rho]RP", "\[Rule]", "0"}], ",", 
            RowBox[{"\[Rho]BAE", "\[Rule]", "0"}], ",", 
            RowBox[{"Rpd", "\[Rule]", "0"}], ",", 
            RowBox[{"\[Gamma]a", "\[Rule]", "0"}], ",", 
            RowBox[{"\[Gamma]btot", "\[Rule]", "\[Gamma]R"}], ",", 
            RowBox[{"\[Gamma]c", "\[Rule]", "0"}], ",", 
            RowBox[{"\[Beta]", "->", 
             RowBox[{"-", "\[Alpha]OG"}]}]}], "}"}]}], "]"}], "]"}]}]}], "//", 
     RowBox[{"FullSimplify", "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Sx", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Rho]RP", "\[Rule]", "0"}], ",", 
          RowBox[{"\[Rho]BAE", "\[Rule]", "0"}], ",", 
          RowBox[{"Rpd", "\[Rule]", "0"}], ",", 
          RowBox[{"\[Gamma]a", "\[Rule]", "0"}], ",", 
          RowBox[{"\[Gamma]btot", "\[Rule]", "\[Gamma]R"}], ",", 
          RowBox[{"\[Gamma]c", "\[Rule]", "0"}], ",", 
          RowBox[{"\[Beta]", "->", 
           RowBox[{"-", "\[Alpha]OG"}]}]}], "}"}]}], "]"}]}]}], "//", 
    RowBox[{"MatrixForm", "\[IndentingNewLine]", 
     RowBox[{"Simplify", "[", 
      RowBox[{"sigTransfer", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Rho]RP", "\[Rule]", "0"}], ",", 
         RowBox[{"\[Rho]BAE", "\[Rule]", "0"}], ",", 
         RowBox[{"Rpd", "\[Rule]", "0"}], ",", 
         RowBox[{"\[Gamma]a", "\[Rule]", "0"}], ",", 
         RowBox[{"\[Gamma]btot", "\[Rule]", "\[Gamma]R"}], ",", 
         RowBox[{"\[Gamma]c", "\[Rule]", "0"}], ",", 
         RowBox[{"\[Beta]", "->", 
          RowBox[{"-", "\[Alpha]OG"}]}]}], "}"}]}], "]"}]}]}], "//", 
   "MatrixForm"}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.836616796604307*^9, 3.836616811411113*^9}, {
  3.836616869882695*^9, 3.836616896657481*^9}, {3.8366171795641212`*^9, 
  3.836617179726884*^9}, {3.836617290248249*^9, 3.836617307394781*^9}, {
  3.8368522469310627`*^9, 3.8368523104514*^9}, {3.836856114786315*^9, 
  3.836856135842819*^9}, {3.836856447509994*^9, 3.836856490994644*^9}, {
  3.836857054433753*^9, 3.836857057550974*^9}, {3.836857140631527*^9, 
  3.836857143893436*^9}, {3.8368572464094687`*^9, 3.836857280186121*^9}, {
  3.836858727968231*^9, 3.83685876284699*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"33171a0d-e02c-4f30-85f2-e0d7fddec8d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"R", ".", "P", ".", " ", "turned"}], " ", "off"}], ",", " ", 
    RowBox[{"but", " ", 
     RowBox[{"lossy", ":", "\[IndentingNewLine]", 
      RowBox[{"to", "-", "do"}], ":", " ", 
      RowBox[{
      "does", " ", "it", " ", "reduce", " ", "to", " ", "lossy", " ", 
       RowBox[{"sWLC", "?"}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Sh", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Rho]RP", "\[Rule]", "0"}], ",", 
       RowBox[{"\[Rho]BAE", "\[Rule]", "0"}], ",", 
       RowBox[{"\[Beta]", "->", 
        RowBox[{"-", "\[Alpha]OG"}]}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"comparing", " ", "to", " ", 
     SuperscriptBox[
      RowBox[{"(", "ASDShsWLC", ")"}], "2"], " ", "from", " ", 
     RowBox[{"sWLC", ".", "nb"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PSDShsWLC", "=", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Gamma]c", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "4", 
        SuperscriptBox["\[Alpha]OG", "2"], 
        SuperscriptBox["\[Omega]s", "2"], "\[Gamma]R"}]], 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Gamma]btot", "-", 
              RowBox[{"2", "\[Gamma]R"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "-", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}], 
            SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["\[Omega]s", "2"], "\[Gamma]c"}], "-", 
           RowBox[{
            SuperscriptBox["\[Chi]", "2"], "\[Gamma]a"}]}], ")"}], "2"], 
        "\[IndentingNewLine]", "+", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Chi]", "2"], "-", 
            SuperscriptBox["\[Omega]s", "2"], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Gamma]btot", "-", 
               RowBox[{"2", "\[Gamma]R"}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}]}], "-", 
            RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], 
        "\[IndentingNewLine]", "+", 
        RowBox[{"4", "\[Gamma]R", " ", "\[Gamma]a", " ", 
         SuperscriptBox["\[Omega]s", "2"], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
        "\[IndentingNewLine]", "+", 
        RowBox[{"4", "\[Gamma]R", " ", "\[Gamma]b", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]a", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
        "\[IndentingNewLine]", "+", 
        RowBox[{"4", "\[Gamma]R", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]a", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], 
        "\[IndentingNewLine]", "+", 
        RowBox[{
         FractionBox["Rpd", 
          RowBox[{"1", "-", "Rpd"}]], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Gamma]btot", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "-", 
                 SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}], 
               SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
              RowBox[{
               SuperscriptBox["\[Omega]s", "2"], "\[Gamma]c"}], "-", 
              RowBox[{
               SuperscriptBox["\[Chi]", "2"], "\[Gamma]a"}]}], ")"}], "2"], 
           "\[IndentingNewLine]", "+", 
           RowBox[{
            SuperscriptBox["\[CapitalOmega]", "2"], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Chi]", "2"], "-", 
               SuperscriptBox["\[Omega]s", "2"], "-", 
               RowBox[{"\[Gamma]btot", 
                RowBox[{"(", 
                 RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}]}], "-", 
               RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "+", 
               SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}]}], 
          ")"}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"PSDShsWLC", "/.", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]b", "\[Rule]", 
        RowBox[{"\[Gamma]btot", "-", "\[Gamma]R"}]}], "}"}]}], ")"}], "//", 
    "FullSimplify"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Rad. pressure off, reduces to lossy sWLC: \>\"", ",", 
     RowBox[{"%%%", "\[Equal]", "%"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.836856675279872*^9, 3.836856731611006*^9}, {
   3.836856799991077*^9, 3.83685680084929*^9}, 3.836857071679143*^9, {
   3.836857932631248*^9, 3.836857933003357*^9}, {3.836858447635504*^9, 
   3.836858482127761*^9}, {3.8368587838765163`*^9, 3.8368587860779257`*^9}, {
   3.83685884536979*^9, 3.836858870011915*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"6fe9231a-e423-450e-8ffd-ff95966f8692"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
     SuperscriptBox["\[Alpha]OG", "2"], " ", "\[Gamma]R", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]c", "2"], "+", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
     SuperscriptBox["\[Omega]s", "2"]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]c", " ", 
         "\[Gamma]R", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]btot", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], ")"}]}], 
     "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]a", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "-", 
        RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8368725585494823`*^9, 3.836950177210203*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"e43fef9b-f77c-4742-baa5-32a91e07ac70"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
     SuperscriptBox["\[Alpha]OG", "2"], " ", "\[Gamma]R", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]c", "2"], "+", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
     SuperscriptBox["\[Omega]s", "2"]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]c", " ", 
         "\[Gamma]R", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]btot", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], ")"}]}], 
     "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]a", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "-", 
        RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8368725585494823`*^9, 3.836950177437586*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"8818dcfd-8985-4c83-a744-423fefe05db2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rad. pressure off, reduces to lossy sWLC: \"\>", 
   "\[InvisibleSpace]", "True"}],
  SequenceForm["Rad. pressure off, reduces to lossy sWLC: ", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.836872558867741*^9, 3.8369501774392843`*^9},
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"d8eff783-51e8-429a-8108-a800d7d22c64"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"simplfying", " ", "full", " ", "result"}], ",", " ", 
   RowBox[{
    RowBox[{"i", ".", "e", ".", " ", "with"}], " ", 
    RowBox[{"R", ".", "P", "."}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8368723884080877`*^9, 3.836872401316504*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"24176f45-661a-4743-a935-473ce7318ae3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sx22", "=", 
  RowBox[{"Sx", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.836872434189124*^9, 3.836872446186698*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"d813bf7a-149c-4981-9112-d27ee2e77792"],

Cell[BoxData[
 RowBox[{"Rpd", "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]c", " ", 
     "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]a", "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]a", "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}]}], ")"}], 
   "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Chi]", "2"]}], " ", "\[CapitalOmega]"}], "+", 
       RowBox[{"\[Gamma]btot", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]c", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
        "\[CapitalOmega]"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
       SuperscriptBox["\[CapitalOmega]", "3"], "+", 
       RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
          "\[CapitalOmega]"}], ")"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Chi]", "2"], "+", 
          RowBox[{"\[CapitalOmega]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
             "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "+", 
       RowBox[{"\[CapitalOmega]", " ", 
        SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Chi]", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"], "-", 
          SuperscriptBox["\[Omega]s", "2"]}], ")"}]}], "-", 
       RowBox[{"Conjugate", "[", 
        RowBox[{
         RowBox[{"\[Gamma]btot", " ", 
          RowBox[{"(", 
           RowBox[{"\[Gamma]c", "-", 
            RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
          "\[CapitalOmega]"}], "+", 
         RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
            "\[CapitalOmega]"}], ")"}]}], "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Chi]", "2"], "+", 
            RowBox[{"\[CapitalOmega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
               "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[CapitalOmega]", "2"], "-", 
            SuperscriptBox["\[Omega]s", "2"]}], ")"}]}]}], "]"}]}], ")"}]}], 
    ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]btot", "-", "\[Gamma]R"}], ")"}], " ", "\[Gamma]R", 
     " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]a", "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]a", "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]c"}], "+", 
       "\[CapitalOmega]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", "\[CapitalOmega]"}], 
      ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Chi]", "2"]}], " ", "\[CapitalOmega]"}], "+", 
       RowBox[{"\[Gamma]btot", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]c", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
        "\[CapitalOmega]"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
       SuperscriptBox["\[CapitalOmega]", "3"], "+", 
       RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
          "\[CapitalOmega]"}], ")"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Chi]", "2"], "+", 
          RowBox[{"\[CapitalOmega]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
             "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "+", 
       RowBox[{"\[CapitalOmega]", " ", 
        SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Chi]", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"], "-", 
          SuperscriptBox["\[Omega]s", "2"]}], ")"}]}], "-", 
       RowBox[{"Conjugate", "[", 
        RowBox[{
         RowBox[{"\[Gamma]btot", " ", 
          RowBox[{"(", 
           RowBox[{"\[Gamma]c", "-", 
            RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
          "\[CapitalOmega]"}], "+", 
         RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
            "\[CapitalOmega]"}], ")"}]}], "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Chi]", "2"], "+", 
            RowBox[{"\[CapitalOmega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
               "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[CapitalOmega]", "2"], "-", 
            SuperscriptBox["\[Omega]s", "2"]}], ")"}]}]}], "]"}]}], ")"}]}], 
    ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]a", " ", 
     "\[Gamma]R", " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]c", "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]c", "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Chi]", "2"]}], " ", "\[CapitalOmega]"}], "+", 
       RowBox[{"\[Gamma]btot", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]c", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
        "\[CapitalOmega]"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
       SuperscriptBox["\[CapitalOmega]", "3"], "+", 
       RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
          "\[CapitalOmega]"}], ")"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Chi]", "2"], "+", 
          RowBox[{"\[CapitalOmega]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
             "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "+", 
       RowBox[{"\[CapitalOmega]", " ", 
        SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Chi]", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"], "-", 
          SuperscriptBox["\[Omega]s", "2"]}], ")"}]}], "-", 
       RowBox[{"Conjugate", "[", 
        RowBox[{
         RowBox[{"\[Gamma]btot", " ", 
          RowBox[{"(", 
           RowBox[{"\[Gamma]c", "-", 
            RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
          "\[CapitalOmega]"}], "+", 
         RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
            "\[CapitalOmega]"}], ")"}]}], "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Chi]", "2"], "+", 
            RowBox[{"\[CapitalOmega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
               "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[CapitalOmega]", "2"], "-", 
            SuperscriptBox["\[Omega]s", "2"]}], ")"}]}]}], "]"}]}], ")"}]}], 
    ")"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]a", " ", 
     "\[Gamma]R", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Gamma]a", " ", "\[Rho]BAE", " ", 
        SuperscriptBox["\[Chi]", "2"]}], "+", 
       RowBox[{"\[Gamma]btot", " ", "\[Rho]RP", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], "2"]}],
        "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], " ", "\[Rho]RP", " ", 
           "\[CapitalOmega]"}], "+", 
          RowBox[{"\[Rho]BAE", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", "\[CapitalOmega]"}], "-", 
          RowBox[{"\[Rho]RP", " ", "\[CapitalOmega]", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", "\[Rho]RP", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "2"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Gamma]a", " ", "\[Rho]BAE", " ", 
        SuperscriptBox["\[Chi]", "2"]}], "+", 
       RowBox[{"\[Gamma]btot", " ", "\[Rho]RP", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], "2"]}],
        "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], " ", "\[Rho]RP", " ", 
           "\[CapitalOmega]"}], "+", 
          RowBox[{"\[Rho]BAE", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", "\[CapitalOmega]"}], "-", 
          RowBox[{"\[Rho]RP", " ", "\[CapitalOmega]", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", "\[Rho]RP", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "2"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[CapitalOmega]", "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]c"}], "-", 
           "\[CapitalOmega]"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Chi]", "2"], " ", "\[CapitalOmega]"}], "-", 
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
         "\[CapitalOmega]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "3"], "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           RowBox[{"\[CapitalOmega]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
              "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "-", 
        RowBox[{"\[CapitalOmega]", " ", 
         SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalOmega]", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"], "-", 
           SuperscriptBox["\[Omega]s", "2"]}], ")"}]}], "+", 
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]c"}], "-", 
             "\[CapitalOmega]"}], ")"}]}], "-", 
          RowBox[{"\[Gamma]btot", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]c", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
           "\[CapitalOmega]"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "2"], "+", 
             RowBox[{"\[CapitalOmega]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
                "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]", "2"], "-", 
             SuperscriptBox["\[Omega]s", "2"]}], ")"}]}]}], "]"}]}], ")"}], 
      "2"]}], ")"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]c", " ", 
     "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Gamma]a", "2"]}], " ", "\[Rho]BAE", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]btot", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}]}], "+", 
       RowBox[{"\[Gamma]btot", " ", "\[Rho]BAE", " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       RowBox[{"\[Gamma]a", " ", "\[Rho]BAE", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "2", " ", "\[ImaginaryI]", " ", "\[Gamma]btot", " ", 
           "\[CapitalOmega]"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
          SuperscriptBox["\[Omega]s", "2"]}], ")"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Rho]RP", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
             "\[CapitalOmega]"}], ")"}], " ", 
           SuperscriptBox["\[Omega]s", "2"]}], "+", 
          RowBox[{"\[Rho]BAE", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]", "3"], "-", 
             RowBox[{"\[CapitalOmega]", " ", 
              SuperscriptBox["\[Omega]s", "2"]}]}], ")"}]}]}], ")"}]}]}], 
      ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Gamma]btot", " ", "\[Rho]BAE", " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Rho]BAE", " ", 
        SuperscriptBox["\[CapitalOmega]", "3"]}], "+", 
       RowBox[{"\[Gamma]c", " ", "\[Rho]RP", " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Rho]BAE", " ", "\[CapitalOmega]", " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "+", 
       RowBox[{
       "\[ImaginaryI]", " ", "\[Rho]RP", " ", "\[CapitalOmega]", " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "-", 
       RowBox[{"\[Gamma]a", " ", "\[Rho]BAE", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
          SuperscriptBox["\[Omega]s", "2"], "+", 
          RowBox[{"Conjugate", "[", 
           RowBox[{
            RowBox[{"\[Gamma]a", " ", 
             RowBox[{"(", 
              RowBox[{"\[Gamma]btot", "-", 
               RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}]}], 
            "-", 
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "\[Gamma]btot", " ", 
             "\[CapitalOmega]"}]}], "]"}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[CapitalOmega]", "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]c"}], "-", 
           "\[CapitalOmega]"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Chi]", "2"], " ", "\[CapitalOmega]"}], "-", 
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
         "\[CapitalOmega]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "3"], "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           RowBox[{"\[CapitalOmega]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
              "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "-", 
        RowBox[{"\[CapitalOmega]", " ", 
         SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalOmega]", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"], "-", 
           SuperscriptBox["\[Omega]s", "2"]}], ")"}]}], "+", 
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]c"}], "-", 
             "\[CapitalOmega]"}], ")"}]}], "-", 
          RowBox[{"\[Gamma]btot", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]c", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
           "\[CapitalOmega]"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "2"], "+", 
             RowBox[{"\[CapitalOmega]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
                "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]", "2"], "-", 
             SuperscriptBox["\[Omega]s", "2"]}], ")"}]}]}], "]"}]}], ")"}], 
      "2"]}], ")"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]btot", "-", "\[Gamma]R"}], ")"}], " ", "\[Gamma]R", 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Gamma]a", "2"]}], " ", "\[Rho]BAE", " ", 
        SuperscriptBox["\[Chi]", "2"]}], "+", 
       RowBox[{
       "2", " ", "\[ImaginaryI]", " ", "\[Gamma]a", " ", "\[Rho]BAE", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", "\[CapitalOmega]"}], "+", 
       RowBox[{"\[Rho]BAE", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       RowBox[{"\[Rho]RP", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], "2"], 
        " ", 
        SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Rho]BAE", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Gamma]a", "2"]}], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
       RowBox[{"Conjugate", "[", 
        RowBox[{
         RowBox[{
         "2", " ", "\[ImaginaryI]", " ", "\[Gamma]a", " ", "\[Rho]BAE", " ", 
          SuperscriptBox["\[Chi]", "2"], " ", "\[CapitalOmega]"}], "+", 
         RowBox[{"\[Rho]RP", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Gamma]c", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], "2"],
           " ", 
          SuperscriptBox["\[Omega]s", "2"]}]}], "]"}]}], ")"}]}], ")"}], "/", 
   
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[CapitalOmega]", "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]c"}], "-", 
           "\[CapitalOmega]"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Chi]", "2"], " ", "\[CapitalOmega]"}], "-", 
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
         "\[CapitalOmega]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "3"], "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           RowBox[{"\[CapitalOmega]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
              "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "-", 
        RowBox[{"\[CapitalOmega]", " ", 
         SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalOmega]", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"], "-", 
           SuperscriptBox["\[Omega]s", "2"]}], ")"}]}], "+", 
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]c"}], "-", 
             "\[CapitalOmega]"}], ")"}]}], "-", 
          RowBox[{"\[Gamma]btot", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]c", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
           "\[CapitalOmega]"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "2"], "+", 
             RowBox[{"\[CapitalOmega]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
                "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]", "2"], "-", 
             SuperscriptBox["\[Omega]s", "2"]}], ")"}]}]}], "]"}]}], ")"}], 
      "2"]}], ")"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
     SuperscriptBox["\[Gamma]R", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Gamma]a", "2"]}], " ", "\[Rho]BAE", " ", 
        SuperscriptBox["\[Chi]", "2"]}], "+", 
       RowBox[{
       "2", " ", "\[ImaginaryI]", " ", "\[Gamma]a", " ", "\[Rho]BAE", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", "\[CapitalOmega]"}], "+", 
       RowBox[{"\[Rho]BAE", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       RowBox[{"\[Rho]RP", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], "2"], 
        " ", 
        SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Rho]BAE", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Gamma]a", "2"]}], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
       RowBox[{"Conjugate", "[", 
        RowBox[{
         RowBox[{
         "2", " ", "\[ImaginaryI]", " ", "\[Gamma]a", " ", "\[Rho]BAE", " ", 
          SuperscriptBox["\[Chi]", "2"], " ", "\[CapitalOmega]"}], "+", 
         RowBox[{"\[Rho]RP", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Gamma]c", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], "2"],
           " ", 
          SuperscriptBox["\[Omega]s", "2"]}]}], "]"}]}], ")"}]}], ")"}], "/", 
   
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[CapitalOmega]", "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]c"}], "-", 
           "\[CapitalOmega]"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Chi]", "2"], " ", "\[CapitalOmega]"}], "-", 
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
         "\[CapitalOmega]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "3"], "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           RowBox[{"\[CapitalOmega]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
              "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "-", 
        RowBox[{"\[CapitalOmega]", " ", 
         SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalOmega]", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"], "-", 
           SuperscriptBox["\[Omega]s", "2"]}], ")"}]}], "+", 
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]c"}], "-", 
             "\[CapitalOmega]"}], ")"}]}], "-", 
          RowBox[{"\[Gamma]btot", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]c", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
           "\[CapitalOmega]"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "2"], "+", 
             RowBox[{"\[CapitalOmega]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
                "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]", "2"], "-", 
             SuperscriptBox["\[Omega]s", "2"]}], ")"}]}]}], "]"}]}], ")"}], 
      "2"]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
        "\[CapitalOmega]"}], "-", 
       RowBox[{
        SuperscriptBox["\[Chi]", "2"], " ", "\[CapitalOmega]"}], "+", 
       RowBox[{"\[Gamma]btot", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]c", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
        "\[CapitalOmega]"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Gamma]R", " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
       SuperscriptBox["\[CapitalOmega]", "3"], "+", 
       RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
          "\[CapitalOmega]"}], ")"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Gamma]c", " ", "\[Gamma]R"}], "+", 
          SuperscriptBox["\[Chi]", "2"], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", "\[CapitalOmega]"}],
           "-", 
          RowBox[{
          "2", " ", "\[ImaginaryI]", " ", "\[Gamma]R", " ", 
           "\[CapitalOmega]"}], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "+", 
       RowBox[{"\[CapitalOmega]", " ", 
        SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Chi]", "2"], "+", 
          RowBox[{
          "2", " ", "\[ImaginaryI]", " ", "\[Gamma]R", " ", 
           "\[CapitalOmega]"}], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"], "-", 
          SuperscriptBox["\[Omega]s", "2"]}], ")"}]}], "+", 
       RowBox[{"\[Gamma]c", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Gamma]R", " ", "\[CapitalOmega]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["\[Omega]s", "2"]}]}], ")"}]}], "+", 
       RowBox[{"Conjugate", "[", 
        RowBox[{
         RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]c"}], "-", 
            "\[CapitalOmega]"}], ")"}]}], "-", 
         RowBox[{"\[Gamma]btot", " ", 
          RowBox[{"(", 
           RowBox[{"\[Gamma]c", "-", 
            RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
          "\[CapitalOmega]"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Gamma]c", " ", "\[Gamma]R"}], "+", 
            SuperscriptBox["\[Chi]", "2"], "+", 
            RowBox[{
            "\[ImaginaryI]", " ", "\[Gamma]c", " ", "\[CapitalOmega]"}], "-", 
            
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "\[Gamma]R", " ", 
             "\[CapitalOmega]"}], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], "]"}]}], 
      ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]c"}], "-", 
          "\[CapitalOmega]"}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Chi]", "2"], " ", "\[CapitalOmega]"}], "-", 
       RowBox[{"\[Gamma]btot", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]c", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
        "\[CapitalOmega]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       SuperscriptBox["\[CapitalOmega]", "3"], "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Chi]", "2"], "+", 
          RowBox[{"\[CapitalOmega]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
             "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "-", 
       RowBox[{"\[CapitalOmega]", " ", 
        SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Chi]", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"], "-", 
          SuperscriptBox["\[Omega]s", "2"]}], ")"}]}], "+", 
       RowBox[{"Conjugate", "[", 
        RowBox[{
         RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]c"}], "-", 
            "\[CapitalOmega]"}], ")"}]}], "-", 
         RowBox[{"\[Gamma]btot", " ", 
          RowBox[{"(", 
           RowBox[{"\[Gamma]c", "-", 
            RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}]}], ")"}], " ", 
          "\[CapitalOmega]"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Gamma]a", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Chi]", "2"], "+", 
            RowBox[{"\[CapitalOmega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c"}], "+", 
               "\[CapitalOmega]"}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Gamma]c", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[CapitalOmega]", "2"], "-", 
            SuperscriptBox["\[Omega]s", "2"]}], ")"}]}]}], "]"}]}], ")"}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.8369501775104713`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"8cb82bb7-151e-453c-a2cf-53354029a68a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sx22simple", "=", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", "Sx22", "]"}], "//", "Simplify"}]}]], "Input",\

 CellChangeTimes->{{3.836872450988716*^9, 3.836872455347163*^9}, {
   3.83687249106345*^9, 3.8368724947700157`*^9}, {3.8368726017788057`*^9, 
   3.836872607815695*^9}, 3.83687464620955*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"d69a28cb-90c3-41f7-bbfb-971bee7f6f50"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"8", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Rho]BAE", "2"], " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "6"]}], "-", 
    RowBox[{"8", " ", "Rpd", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Rho]BAE", "2"], " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "6"]}], "+", 
    RowBox[{"8", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "6"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"]}], "-", 
    RowBox[{"8", " ", "Rpd", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "6"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"]}], "+", 
    RowBox[{
     SuperscriptBox["\[Chi]", "8"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["\[Gamma]c", "3"], " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "10"]}], "-", 
    RowBox[{"8", " ", "Rpd", " ", 
     SuperscriptBox["\[Gamma]c", "3"], " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "10"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Gamma]c", "2"], " ", 
     SuperscriptBox["\[Chi]", "4"], " ", 
     SuperscriptBox["\[CapitalOmega]", "10"]}], "+", 
    RowBox[{"16", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "4"], " ", 
     SuperscriptBox["\[CapitalOmega]", "10"]}], "-", 
    RowBox[{"16", " ", "Rpd", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "4"], " ", 
     SuperscriptBox["\[CapitalOmega]", "10"]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Chi]", "6"], " ", 
     SuperscriptBox["\[CapitalOmega]", "10"]}], "+", 
    RowBox[{
     SuperscriptBox["\[Gamma]c", "4"], " ", 
     SuperscriptBox["\[CapitalOmega]", "12"]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Gamma]c", "2"], " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "12"]}], "+", 
    RowBox[{"8", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "12"]}], "-", 
    RowBox[{"8", " ", "Rpd", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "12"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["\[Chi]", "4"], " ", 
     SuperscriptBox["\[CapitalOmega]", "12"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Gamma]c", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "14"]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "14"]}], "+", 
    SuperscriptBox["\[CapitalOmega]", "16"], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Gamma]btot", "3"], " ", "\[Gamma]c", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]c", "2"], "+", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[Gamma]btot", "4"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox["\[Gamma]a", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]c", "3"], " ", "\[Gamma]R", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "6"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "4"], " ", 
        SuperscriptBox["\[CapitalOmega]", "8"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Gamma]btot", "3"], " ", "\[Gamma]c", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Gamma]c", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]btot", "4"], " ", 
        SuperscriptBox["\[CapitalOmega]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[CapitalOmega]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "4"]}], "-", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]c", " ", 
        "\[Gamma]R", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Rho]BAE", "2"], "+", 
          RowBox[{
           SuperscriptBox["\[CapitalOmega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Chi]", "2"], "+", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}]}], 
         ")"}]}], "-", 
       RowBox[{"4", " ", "\[Gamma]btot", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]c", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "4"], "+", 
             RowBox[{
              SuperscriptBox["\[Gamma]c", "2"], " ", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Chi]", "2"], " ", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
             SuperscriptBox["\[CapitalOmega]", "4"]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
           SuperscriptBox["\[Chi]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Rho]BAE", "2"], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Gamma]c", "2"], " ", 
              SuperscriptBox["\[CapitalOmega]", "4"]}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Gamma]btot", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]c", "3"], " ", "\[Gamma]R", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "4"], " ", 
           SuperscriptBox["\[CapitalOmega]", "6"]}], "+", 
          RowBox[{
           SuperscriptBox["\[CapitalOmega]", "6"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Chi]", "2"], "+", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], "-", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]c", " ", 
           "\[Gamma]R", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Rho]BAE", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "6"]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              SuperscriptBox["\[Chi]", "4"], " ", 
              SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Chi]", "2"], " ", 
              SuperscriptBox["\[CapitalOmega]", "6"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "8"]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], "-", 
    RowBox[{"16", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Rho]BAE", "2"], " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "4"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "+", 
    RowBox[{"16", " ", "Rpd", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Rho]BAE", "2"], " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "4"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "+", 
    RowBox[{
    "16", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", "\[Rho]BAE", " ", 
     "\[Rho]RP", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "4"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "-", 
    RowBox[{
    "16", " ", "Rpd", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", "\[Rho]BAE", 
     " ", "\[Rho]RP", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "4"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "-", 
    RowBox[{"16", " ", 
     SuperscriptBox["\[Gamma]c", "3"], " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "+", 
    RowBox[{"16", " ", "Rpd", " ", 
     SuperscriptBox["\[Gamma]c", "3"], " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Gamma]c", "2"], " ", 
     SuperscriptBox["\[Chi]", "4"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "-", 
    RowBox[{"16", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "4"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "+", 
    RowBox[{"16", " ", "Rpd", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "4"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Chi]", "6"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Gamma]c", "4"], " ", 
     SuperscriptBox["\[CapitalOmega]", "10"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "-", 
    RowBox[{"12", " ", 
     SuperscriptBox["\[Gamma]c", "2"], " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "10"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "-", 
    RowBox[{"16", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "10"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "+", 
    RowBox[{"16", " ", "Rpd", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "10"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "-", 
    RowBox[{"12", " ", 
     SuperscriptBox["\[Chi]", "4"], " ", 
     SuperscriptBox["\[CapitalOmega]", "10"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "-", 
    RowBox[{"8", " ", 
     SuperscriptBox["\[Gamma]c", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "12"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "-", 
    RowBox[{"12", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "12"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[CapitalOmega]", "14"], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Gamma]a", "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SuperscriptBox["\[Gamma]btot", "2"], " ", "\[Gamma]c", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Gamma]c", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]btot", "3"], " ", 
        SuperscriptBox["\[CapitalOmega]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], "-", 
       RowBox[{
        SuperscriptBox["\[Chi]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]c", " ", 
           SuperscriptBox["\[CapitalOmega]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "4"], "+", 
             RowBox[{
              SuperscriptBox["\[Gamma]c", "2"], " ", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Chi]", "2"], " ", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
             SuperscriptBox["\[CapitalOmega]", "4"]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Rho]BAE", "2"], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Gamma]c", "2"], " ", 
              SuperscriptBox["\[CapitalOmega]", "4"]}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{"\[Gamma]btot", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]c", "3"], " ", "\[Gamma]R", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "4"], " ", 
           SuperscriptBox["\[CapitalOmega]", "6"]}], "+", 
          RowBox[{
           SuperscriptBox["\[CapitalOmega]", "6"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Chi]", "2"], "+", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], "-", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]c", " ", 
           "\[Gamma]R", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Rho]BAE", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "6"]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              SuperscriptBox["\[Chi]", "4"], " ", 
              SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Chi]", "2"], " ", 
              SuperscriptBox["\[CapitalOmega]", "6"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "8"]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}], " ", 
     SuperscriptBox["\[Omega]s", "2"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["\[Gamma]c", "3"], " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Rho]RP", "2"], " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "-", 
    RowBox[{"8", " ", "Rpd", " ", 
     SuperscriptBox["\[Gamma]c", "3"], " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Rho]RP", "2"], " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "+", 
    RowBox[{"8", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Rho]BAE", "2"], " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "2"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "-", 
    RowBox[{"8", " ", "Rpd", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Rho]BAE", "2"], " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "2"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "-", 
    RowBox[{
    "16", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", "\[Rho]BAE", " ", 
     "\[Rho]RP", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "2"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "+", 
    RowBox[{
    "16", " ", "Rpd", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", "\[Rho]BAE", 
     " ", "\[Rho]RP", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "2"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "+", 
    RowBox[{"8", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Rho]RP", "2"], " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "2"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "-", 
    RowBox[{"8", " ", "Rpd", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Rho]RP", "2"], " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "2"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["\[Gamma]c", "3"], " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "6"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "-", 
    RowBox[{"8", " ", "Rpd", " ", 
     SuperscriptBox["\[Gamma]c", "3"], " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "6"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Gamma]c", "2"], " ", 
     SuperscriptBox["\[Chi]", "4"], " ", 
     SuperscriptBox["\[CapitalOmega]", "6"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["\[Gamma]c", "4"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "+", 
    RowBox[{"12", " ", 
     SuperscriptBox["\[Gamma]c", "2"], " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "+", 
    RowBox[{"8", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "-", 
    RowBox[{"8", " ", "Rpd", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["\[Chi]", "4"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "+", 
    RowBox[{"12", " ", 
     SuperscriptBox["\[Gamma]c", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "10"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "+", 
    RowBox[{"12", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "10"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["\[CapitalOmega]", "12"], " ", 
     SuperscriptBox["\[Omega]s", "4"]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Gamma]c", "4"], " ", 
     SuperscriptBox["\[CapitalOmega]", "6"], " ", 
     SuperscriptBox["\[Omega]s", "6"]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Gamma]c", "2"], " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "6"], " ", 
     SuperscriptBox["\[Omega]s", "6"]}], "-", 
    RowBox[{"8", " ", 
     SuperscriptBox["\[Gamma]c", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"], " ", 
     SuperscriptBox["\[Omega]s", "6"]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "8"], " ", 
     SuperscriptBox["\[Omega]s", "6"]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[CapitalOmega]", "10"], " ", 
     SuperscriptBox["\[Omega]s", "6"]}], "+", 
    RowBox[{
     SuperscriptBox["\[Gamma]c", "4"], " ", 
     SuperscriptBox["\[CapitalOmega]", "4"], " ", 
     SuperscriptBox["\[Omega]s", "8"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Gamma]c", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "6"], " ", 
     SuperscriptBox["\[Omega]s", "8"]}], "+", 
    RowBox[{
     SuperscriptBox["\[CapitalOmega]", "8"], " ", 
     SuperscriptBox["\[Omega]s", "8"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Gamma]btot", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]c", "3"], " ", "\[Gamma]R", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "4"]}], "-", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]c", " ", 
        "\[Gamma]R", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Rho]BAE", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "6"]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[CapitalOmega]", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"], "-", 
           SuperscriptBox["\[Omega]s", "2"]}], ")"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[CapitalOmega]", "3"], "-", 
           RowBox[{"\[CapitalOmega]", " ", 
            SuperscriptBox["\[Omega]s", "2"]}]}], ")"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", 
           SuperscriptBox["\[Chi]", "4"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]", "2"], "-", 
             SuperscriptBox["\[Omega]s", "2"]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]", "2"], "-", 
              SuperscriptBox["\[Omega]s", "2"]}], ")"}], "2"]}]}], ")"}]}]}], 
      ")"}]}], "-", 
    RowBox[{"4", " ", "\[Gamma]btot", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Gamma]c", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "6"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Chi]", "4"], " ", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Gamma]c", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]", "2"], "-", 
              SuperscriptBox["\[Omega]s", "2"]}], ")"}], "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]", "4"], "-", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]", "2"], " ", 
              SuperscriptBox["\[Omega]s", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Rho]BAE", "2"], " ", 
           SuperscriptBox["\[Chi]", "4"], " ", 
           SuperscriptBox["\[CapitalOmega]", "4"]}], "-", 
          RowBox[{"2", " ", "\[Rho]BAE", " ", "\[Rho]RP", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              SuperscriptBox["\[Gamma]c", "2"]}], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Omega]s", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "4"], " ", 
           SuperscriptBox["\[Rho]RP", "2"], " ", 
           SuperscriptBox["\[Omega]s", "4"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Rho]RP", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "4"], " ", 
           SuperscriptBox["\[Omega]s", "4"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              SuperscriptBox["\[Chi]", "4"], " ", 
              SuperscriptBox["\[CapitalOmega]", "8"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Rho]RP", "2"], " ", 
              SuperscriptBox["\[CapitalOmega]", "2"], " ", 
              SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}]}], ")"}]}]}], 
      ")"}]}], "+", 
    RowBox[{"4", " ", "\[Gamma]a", " ", 
     SuperscriptBox["\[Omega]s", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]c", "4"], " ", "\[Gamma]R", " ", 
        SuperscriptBox["\[Rho]RP", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]btot", "3"], " ", 
        SuperscriptBox["\[CapitalOmega]", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], "-", 
       RowBox[{
        SuperscriptBox["\[Gamma]btot", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Gamma]c", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]c", "2"], " ", "\[Gamma]R", " ", 
           SuperscriptBox["\[Rho]RP", "2"]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
           SuperscriptBox["\[Rho]RP", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
          RowBox[{"3", " ", "\[Gamma]c", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "6"]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
        SuperscriptBox["\[CapitalOmega]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Rho]BAE", " ", 
            SuperscriptBox["\[Chi]", "2"]}], "-", 
           RowBox[{"\[Rho]RP", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Chi]", "2"], "+", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], 
         "2"]}], "-", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "3"], " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[CapitalOmega]", "2"], "-", 
           SuperscriptBox["\[Omega]s", "2"]}], ")"}], "2"]}], "-", 
       RowBox[{"\[Gamma]c", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"], "-", 
           SuperscriptBox["\[Omega]s", "2"]}], ")"}], "2"]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]c", "2"], " ", "\[Gamma]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["\[Chi]", "4"], " ", 
           SuperscriptBox["\[CapitalOmega]", "6"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Rho]RP", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "4"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Chi]", "2"], " ", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "4"]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", "\[Rho]BAE", " ", "\[Rho]RP", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
             SuperscriptBox["\[Omega]s", "2"]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"\[Gamma]btot", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]c", "3"], " ", "\[Gamma]R", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Rho]RP", "2"], "-", 
             SuperscriptBox["\[CapitalOmega]", "6"]}], ")"}]}], "-", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]c", " ", 
           "\[Gamma]R", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Rho]BAE", "2"], "-", 
             RowBox[{"4", " ", "\[Rho]BAE", " ", "\[Rho]RP"}], "-", 
             SuperscriptBox["\[Rho]RP", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "6"]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "4"], " ", 
           SuperscriptBox["\[CapitalOmega]", "4"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]", "2"], "-", 
              SuperscriptBox["\[Omega]s", "2"]}], ")"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[CapitalOmega]", "8"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Chi]", "2"], "+", 
              SuperscriptBox["\[CapitalOmega]", "2"], "-", 
              SuperscriptBox["\[Omega]s", "2"]}], ")"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              SuperscriptBox["\[Chi]", "4"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Chi]", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[CapitalOmega]", "2"], "-", 
                SuperscriptBox["\[Omega]s", "2"]}], ")"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[CapitalOmega]", "2"], "-", 
                 SuperscriptBox["\[Omega]s", "2"]}], ")"}], "2"]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Gamma]a", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["\[Gamma]btot", "3"], " ", "\[Gamma]c", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "6"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Gamma]c", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]btot", "4"], " ", 
        SuperscriptBox["\[CapitalOmega]", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "4"], " ", 
        SuperscriptBox["\[CapitalOmega]", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[CapitalOmega]", "2"], "-", 
           SuperscriptBox["\[Omega]s", "2"]}], ")"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[CapitalOmega]", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"], "-", 
           SuperscriptBox["\[Omega]s", "2"]}], ")"}], "2"]}], "-", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]c", "3"], " ", "\[Gamma]R", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["\[CapitalOmega]", "4"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[CapitalOmega]", "2"], " ", 
           SuperscriptBox["\[Omega]s", "2"]}], "+", 
          SuperscriptBox["\[Omega]s", "4"]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["\[CapitalOmega]", "4"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]", "2"], "-", 
              SuperscriptBox["\[Omega]s", "2"]}], ")"}], "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "4"]}], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[CapitalOmega]", "2"], " ", 
              SuperscriptBox["\[Omega]s", "2"]}], "+", 
             SuperscriptBox["\[Omega]s", "4"]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Chi]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "4"]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "2"], " ", 
              SuperscriptBox["\[Omega]s", "2"]}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]c", " ", 
        "\[Gamma]R", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Rho]BAE", " ", "\[Rho]RP", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "2"], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}], " ", 
           SuperscriptBox["\[Omega]s", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Rho]BAE", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "4"]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "2"], " ", 
              SuperscriptBox["\[Omega]s", "2"]}], "+", 
             SuperscriptBox["\[Omega]s", "4"]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[CapitalOmega]", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[Chi]", "4"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "4"]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "2"], " ", 
              SuperscriptBox["\[Omega]s", "2"]}], "+", 
             SuperscriptBox["\[Omega]s", "4"], "+", 
             RowBox[{
              SuperscriptBox["\[Chi]", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Omega]s", "2"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]btot", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "8"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]c", "3"], " ", "\[Gamma]R", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "4"]}], "-", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]c", " ", 
           "\[Gamma]R", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Rho]BAE", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "6"]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "6"]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "4"], " ", 
              SuperscriptBox["\[Omega]s", "2"]}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[CapitalOmega]", "2"], " ", 
              SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[CapitalOmega]", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[Chi]", "4"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "4"]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "2"], " ", 
              SuperscriptBox["\[Omega]s", "2"]}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[Omega]s", "4"]}], "+", 
             RowBox[{
              SuperscriptBox["\[Chi]", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Omega]s", "2"]}]}], ")"}]}]}], ")"}]}], 
          "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Gamma]c", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              SuperscriptBox["\[Chi]", "4"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "4"]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "2"], " ", 
              SuperscriptBox["\[Omega]s", "2"]}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[Omega]s", "4"]}], "+", 
             RowBox[{
              SuperscriptBox["\[Chi]", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
                SuperscriptBox["\[Omega]s", "2"]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}], "-", 
       RowBox[{"2", " ", "\[Gamma]btot", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[Rho]BAE", "2"], " ", 
              SuperscriptBox["\[Chi]", "2"], " ", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Gamma]c", "2"], " ", 
              SuperscriptBox["\[Chi]", "2"], " ", 
              SuperscriptBox["\[CapitalOmega]", "6"]}], "-", 
             RowBox[{
              SuperscriptBox["\[Gamma]c", "2"], " ", "\[Rho]BAE", " ", 
              "\[Rho]RP", " ", 
              SuperscriptBox["\[Omega]s", "2"]}]}], ")"}]}], "+", 
          RowBox[{"\[Gamma]c", " ", 
           SuperscriptBox["\[CapitalOmega]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[Chi]", "4"], " ", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["\[Chi]", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["\[CapitalOmega]", "4"]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[CapitalOmega]", "2"], " ", 
                 SuperscriptBox["\[Omega]s", "2"]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[Gamma]c", "2"], "+", 
                SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 SuperscriptBox["\[CapitalOmega]", "4"]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[CapitalOmega]", "2"], " ", 
                 SuperscriptBox["\[Omega]s", "2"]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[CapitalOmega]", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Chi]", "4"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
       SuperscriptBox["\[CapitalOmega]", "6"], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]btot", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Gamma]c", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
           SuperscriptBox["\[Chi]", "2"]}], "+", 
          SuperscriptBox["\[Chi]", "4"], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
          SuperscriptBox["\[CapitalOmega]", "4"], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]btot", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Gamma]c", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}]}], 
       "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"], " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"], " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[CapitalOmega]", "4"], " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "+", 
       RowBox[{"2", " ", "\[Gamma]a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Gamma]c"}], " ", 
           SuperscriptBox["\[Chi]", "2"]}], "+", 
          RowBox[{"\[Gamma]btot", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Gamma]c", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
        
        SuperscriptBox["\[Omega]s", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[Omega]s", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["\[CapitalOmega]", "2"], " ", 
        SuperscriptBox["\[Omega]s", "4"]}]}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.836950185674397*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"62dcaebf-7e6a-4c01-8c5c-7dcaa441ef11"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{"Sx22simple", ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]RP", ",", "\[Rho]BAE"}], "}"}], ",", "Simplify"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.836872622185857*^9, 3.8368726324945517`*^9}, {
  3.836874631946335*^9, 3.836874647078651*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"5482d970-0109-4d15-a2e8-9b7c4ce43fb5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
       SuperscriptBox["\[Rho]RP", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "2"], "+", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
       SuperscriptBox["\[Omega]s", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Gamma]a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
             SuperscriptBox["\[Chi]", "2"]}], "+", 
            SuperscriptBox["\[Chi]", "4"], "+", 
            RowBox[{
             SuperscriptBox["\[Gamma]c", "2"], " ", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Chi]", "2"], " ", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
            SuperscriptBox["\[CapitalOmega]", "4"], "+", 
            RowBox[{
             SuperscriptBox["\[Gamma]btot", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Gamma]c", "2"], "+", 
               SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Gamma]c", " ", 
             SuperscriptBox["\[Chi]", "2"]}], "+", 
            RowBox[{"\[Gamma]btot", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Gamma]c", "2"], "+", 
               SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], 
          " ", 
          SuperscriptBox["\[Omega]s", "2"]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[CapitalOmega]", "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Chi]", "4"], " ", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
          SuperscriptBox["\[CapitalOmega]", "6"], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]btot", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Gamma]c", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]a", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
              
              SuperscriptBox["\[Chi]", "2"]}], "+", 
             SuperscriptBox["\[Chi]", "4"], "+", 
             RowBox[{
              SuperscriptBox["\[Gamma]c", "2"], " ", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Chi]", "2"], " ", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
             SuperscriptBox["\[CapitalOmega]", "4"], "+", 
             RowBox[{
              SuperscriptBox["\[Gamma]btot", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[Gamma]c", "2"], "+", 
                SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}]}], 
          "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Gamma]c", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "2"], " ", 
           SuperscriptBox["\[Omega]s", "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "2"], " ", 
           SuperscriptBox["\[Omega]s", "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[CapitalOmega]", "4"], " ", 
           SuperscriptBox["\[Omega]s", "2"]}], "+", 
          RowBox[{"2", " ", "\[Gamma]a", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[Gamma]c"}], " ", 
              SuperscriptBox["\[Chi]", "2"]}], "+", 
             RowBox[{"\[Gamma]btot", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[Gamma]c", "2"], "+", 
                SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], 
           " ", 
           SuperscriptBox["\[Omega]s", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], " ", 
           SuperscriptBox["\[Omega]s", "4"]}], "+", 
          RowBox[{
           SuperscriptBox["\[CapitalOmega]", "2"], " ", 
           SuperscriptBox["\[Omega]s", "4"]}]}], ")"}], "2"]}], ")"}]}], 
    ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
      SuperscriptBox["\[Chi]", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
     RowBox[{"8", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
      SuperscriptBox["\[Chi]", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
     RowBox[{"8", " ", "Rpd", " ", "\[Gamma]c", " ", "\[Gamma]R", " ", 
      SuperscriptBox["\[Chi]", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[Chi]", "4"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[Gamma]c", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Chi]", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
     SuperscriptBox["\[CapitalOmega]", "6"], "+", 
     RowBox[{
      SuperscriptBox["\[Gamma]btot", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Gamma]a", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]c", " ", 
         "\[Gamma]R", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]btot", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], ")"}]}], 
     "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Gamma]c", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Chi]", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[CapitalOmega]", "4"], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "+", 
     RowBox[{"2", " ", "\[Gamma]a", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Gamma]c"}], " ", 
         SuperscriptBox["\[Chi]", "2"]}], "+", 
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[Gamma]c", "2"], " ", 
      SuperscriptBox["\[Omega]s", "4"]}], "+", 
     RowBox[{
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      SuperscriptBox["\[Omega]s", "4"]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
      SuperscriptBox["\[Chi]", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[Chi]", "4"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[Gamma]c", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Chi]", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
     SuperscriptBox["\[CapitalOmega]", "6"], "+", 
     RowBox[{
      SuperscriptBox["\[Gamma]btot", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Gamma]a", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "+", 
        SuperscriptBox["\[Chi]", "4"], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "4"], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]btot", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}]}], "-", 
     
     RowBox[{"2", " ", 
      SuperscriptBox["\[Gamma]c", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Chi]", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[CapitalOmega]", "4"], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "+", 
     RowBox[{"2", " ", "\[Gamma]a", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Gamma]c"}], " ", 
         SuperscriptBox["\[Chi]", "2"]}], "+", 
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[Gamma]c", "2"], " ", 
      SuperscriptBox["\[Omega]s", "4"]}], "+", 
     RowBox[{
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
     SuperscriptBox["\[Rho]BAE", "2"], " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], "+", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Gamma]btot", "2"], " ", "\[Gamma]c", " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       RowBox[{"\[Gamma]btot", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Gamma]btot", "2"], " ", "\[Gamma]c"}], "+", 
          RowBox[{"\[Gamma]btot", " ", 
           SuperscriptBox["\[Chi]", "2"]}], "+", 
          RowBox[{"\[Gamma]c", " ", 
           SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}]}], "+", 
       RowBox[{"\[Gamma]a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Gamma]btot", " ", "\[Gamma]c"}], "+", 
          SuperscriptBox["\[Chi]", "2"]}], ")"}], " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "+", 
       RowBox[{"\[Gamma]c", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[CapitalOmega]", "2"], "-", 
           SuperscriptBox["\[Omega]s", "2"]}], ")"}], "2"]}]}], ")"}]}], 
    ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[CapitalOmega]", "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Chi]", "4"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "6"], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]btot", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
            SuperscriptBox["\[Chi]", "2"]}], "+", 
           SuperscriptBox["\[Chi]", "4"], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]c", "2"], " ", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Chi]", "2"], " ", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "4"], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]btot", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Gamma]c", "2"], "+", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}]}], 
        "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"], " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"], " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[CapitalOmega]", "4"], " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "+", 
        RowBox[{"2", " ", "\[Gamma]a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Gamma]c"}], " ", 
            SuperscriptBox["\[Chi]", "2"]}], "+", 
           RowBox[{"\[Gamma]btot", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Gamma]c", "2"], "+", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[Omega]s", "4"]}], "+", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], " ", 
         SuperscriptBox["\[Omega]s", "4"]}]}], ")"}], "2"]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"16", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", "\[Gamma]R", " ", 
     "\[Rho]BAE", " ", "\[Rho]RP", " ", 
     SuperscriptBox["\[Chi]", "2"], " ", 
     SuperscriptBox["\[Omega]s", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], " ", "\[Gamma]c", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]btot", " ", "\[Gamma]c"}], "+", 
          SuperscriptBox["\[Chi]", "2"], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}]}], "+", 
       RowBox[{"\[Gamma]a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[CapitalOmega]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], " ", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
             SuperscriptBox["\[Omega]s", "2"]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[CapitalOmega]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]btot", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              SuperscriptBox["\[Gamma]c", "2"]}], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
          RowBox[{"\[Gamma]c", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
             SuperscriptBox["\[Omega]s", "2"]}], ")"}]}]}], ")"}]}]}], 
      ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[CapitalOmega]", "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Chi]", "4"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "6"], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]btot", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
            SuperscriptBox["\[Chi]", "2"]}], "+", 
           SuperscriptBox["\[Chi]", "4"], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]c", "2"], " ", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Chi]", "2"], " ", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "4"], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]btot", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Gamma]c", "2"], "+", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}]}], 
        "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"], " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"], " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[CapitalOmega]", "4"], " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "+", 
        RowBox[{"2", " ", "\[Gamma]a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Gamma]c"}], " ", 
            SuperscriptBox["\[Chi]", "2"]}], "+", 
           RowBox[{"\[Gamma]btot", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Gamma]c", "2"], "+", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[Omega]s", "4"]}], "+", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], " ", 
         SuperscriptBox["\[Omega]s", "4"]}]}], ")"}], "2"]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.836874626652755*^9, 3.836874634580763*^9}, 
   3.8369501859090557`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"e8716ffa-36c7-4f2e-822e-2d23add8bf59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "recognise", " ", "denominator", " ", "as", " ", "the", " ", "same", " ", 
    "as", " ", "sWLC"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]btot", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "-", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}], 
           SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Omega]s", "2"], "\[Gamma]c"}], "-", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "\[Gamma]a"}]}], ")"}], "2"], 
       "\[IndentingNewLine]", "+", 
       RowBox[{
        SuperscriptBox["\[CapitalOmega]", "2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Chi]", "2"], "-", 
           SuperscriptBox["\[Omega]s", "2"], "-", 
           RowBox[{"\[Gamma]btot", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}]}], "-", 
           RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}]}], ")"}], "==", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Chi]", "4"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
       SuperscriptBox["\[CapitalOmega]", "6"], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]btot", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Gamma]c", "2"], "+", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
           SuperscriptBox["\[Chi]", "2"]}], "+", 
          SuperscriptBox["\[Chi]", "4"], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
          SuperscriptBox["\[CapitalOmega]", "4"], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]btot", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Gamma]c", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}]}], 
       "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"], " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"], " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[CapitalOmega]", "4"], " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "+", 
       RowBox[{"2", " ", "\[Gamma]a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Gamma]c"}], " ", 
           SuperscriptBox["\[Chi]", "2"]}], "+", 
          RowBox[{"\[Gamma]btot", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Gamma]c", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
        
        SuperscriptBox["\[Omega]s", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[Omega]s", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["\[CapitalOmega]", "2"], " ", 
        SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}], ")"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.836873207222728*^9, 3.836873234141214*^9}, {
  3.836874242070434*^9, 3.836874255793519*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"d30fd5b1-af48-46e9-b26a-c7264abd19fc"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8368732346986027`*^9, 3.836950185938429*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"37621bdc-ca2c-42c4-93c3-085046443244"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"-", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"signal", " ", "is", " ", "independent", " ", "of", " ", 
    RowBox[{"R", ".", "P", ".", " ", "and"}], " ", 
    RowBox[{"B", ".", "A", ".", "E", ".", " ", 
     RowBox[{"effects", "?"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ComplexExpand", "[", 
     SuperscriptBox[
      RowBox[{"Abs", "[", "sigTransfer", "]"}], "2"], "]"}], "//", 
    "Simplify"}], "\[IndentingNewLine]", 
   RowBox[{"denom", "=", 
    RowBox[{"Denominator", "[", "%", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"denom", "==", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]btot", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "-", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}], 
            SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["\[Omega]s", "2"], "\[Gamma]c"}], "-", 
           RowBox[{
            SuperscriptBox["\[Chi]", "2"], "\[Gamma]a"}]}], ")"}], "2"], 
        "\[IndentingNewLine]", "+", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Chi]", "2"], "-", 
            SuperscriptBox["\[Omega]s", "2"], "-", 
            RowBox[{"\[Gamma]btot", 
             RowBox[{"(", 
              RowBox[{"\[Gamma]a", "+", "\[Gamma]c"}], ")"}]}], "-", 
            RowBox[{"\[Gamma]a", " ", "\[Gamma]c"}], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}]}], 
       ")"}]}], ")"}], "//", "Simplify"}], "\[IndentingNewLine]"}]}]], "Input",\

 CellChangeTimes->{{3.8368726756857843`*^9, 3.836872703288739*^9}, {
  3.8368741937122507`*^9, 3.83687422594678*^9}, {3.836874612330307*^9, 
  3.836874615790427*^9}, {3.836874841592249*^9, 3.836874894106688*^9}, {
  3.836874929140327*^9, 3.8368749377738132`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"2b496b10-4942-48f4-adef-dfd7f50fbbde"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
      SuperscriptBox["\[Beta]", "2"], " ", "\[Gamma]R", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Chi]", "4"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
      SuperscriptBox["\[CapitalOmega]", "6"], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]btot", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "2"], "+", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]a", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
          SuperscriptBox["\[Chi]", "2"]}], "+", 
         SuperscriptBox["\[Chi]", "4"], "+", 
         RowBox[{
          SuperscriptBox["\[Gamma]c", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Chi]", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "4"], "+", 
         RowBox[{
          SuperscriptBox["\[Gamma]btot", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Gamma]c", "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Chi]", "2"], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[CapitalOmega]", "4"], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "+", 
      RowBox[{"2", " ", "\[Gamma]a", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Gamma]c"}], " ", 
          SuperscriptBox["\[Chi]", "2"]}], "+", 
         RowBox[{"\[Gamma]btot", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Gamma]c", "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Omega]s", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Gamma]c", "2"], " ", 
       SuperscriptBox["\[Omega]s", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["\[CapitalOmega]", "2"], " ", 
       SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.83687290646422*^9, 3.8368748242480793`*^9, 3.83687485659778*^9, {
   3.836874887851604*^9, 3.836874894653866*^9}, 3.8369501859920483`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"3a8adca6-63a7-44fb-bae0-43816e7c55cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
   SuperscriptBox["\[Chi]", "2"], " ", 
   SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["\[Chi]", "4"], " ", 
   SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["\[Gamma]c", "2"], " ", 
   SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[Chi]", "2"], " ", 
   SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
  SuperscriptBox["\[CapitalOmega]", "6"], "+", 
  RowBox[{
   SuperscriptBox["\[Gamma]btot", "2"], " ", 
   SuperscriptBox["\[CapitalOmega]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]c", "2"], "+", 
     SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Gamma]a", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
      SuperscriptBox["\[Chi]", "2"]}], "+", 
     SuperscriptBox["\[Chi]", "4"], "+", 
     RowBox[{
      SuperscriptBox["\[Gamma]c", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Chi]", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
     SuperscriptBox["\[CapitalOmega]", "4"], "+", 
     RowBox[{
      SuperscriptBox["\[Gamma]btot", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}]}], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[Gamma]c", "2"], " ", 
   SuperscriptBox["\[CapitalOmega]", "2"], " ", 
   SuperscriptBox["\[Omega]s", "2"]}], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[Chi]", "2"], " ", 
   SuperscriptBox["\[CapitalOmega]", "2"], " ", 
   SuperscriptBox["\[Omega]s", "2"]}], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[CapitalOmega]", "4"], " ", 
   SuperscriptBox["\[Omega]s", "2"]}], "+", 
  RowBox[{"2", " ", "\[Gamma]a", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Gamma]c"}], " ", 
      SuperscriptBox["\[Chi]", "2"]}], "+", 
     RowBox[{"\[Gamma]btot", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
   SuperscriptBox["\[Omega]s", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["\[Gamma]c", "2"], " ", 
   SuperscriptBox["\[Omega]s", "4"]}], "+", 
  RowBox[{
   SuperscriptBox["\[CapitalOmega]", "2"], " ", 
   SuperscriptBox["\[Omega]s", "4"]}]}]], "Output",
 CellChangeTimes->{
  3.83687290646422*^9, 3.8368748242480793`*^9, 3.83687485659778*^9, {
   3.836874887851604*^9, 3.836874894653866*^9}, 3.8369501859951687`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"a1240074-2d3c-426e-ba8f-83b87d9eff52"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.83687290646422*^9, 3.8368748242480793`*^9, 3.83687485659778*^9, {
   3.836874887851604*^9, 3.836874894653866*^9}, 3.836950185996558*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"457c2ea3-c29d-4f77-a832-4dc192150e7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "checking", " ", "other", " ", "signal", " ", "convention", " ", 
      RowBox[{"expansion", " ", "--"}]}], ">", " ", 
     RowBox[{
     "appears", " ", "to", " ", "be", " ", "dependent", " ", "on", " ", 
      "\[Rho]RP"}]}], ",", " ", 
    RowBox[{
     RowBox[{"\[Rho]BAE", "\[IndentingNewLine]", "to"}], "-", 
     RowBox[{"do", ":", " ", 
      RowBox[{"resolve", " ", "this"}]}]}], ",", " ", 
    RowBox[{
    "since", " ", "it", " ", "implies", " ", "different", " ", "physics"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"T", ".", 
        RowBox[{"ConjugateTranspose", "[", "T", "]"}]}], ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], "//", "Simplify"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ComplexExpand", "[", "%", "]"}], "//", "Simplify"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[Rho]RP", "2"], " ", 
        SuperscriptBox["\[Chi]", "4"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Gamma]c", "4"], " ", 
        SuperscriptBox["\[Rho]RP", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Gamma]c", "2"], " ", "\[Rho]BAE", " ", "\[Rho]RP", 
        " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[Rho]RP", "2"], " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Rho]BAE", "2"], " ", 
        SuperscriptBox["\[Chi]", "4"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
       RowBox[{"4", " ", "\[Rho]BAE", " ", "\[Rho]RP", " ", 
        SuperscriptBox["\[Chi]", "4"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Rho]RP", "2"], " ", 
        SuperscriptBox["\[Chi]", "4"], " ", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[Rho]RP", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "4"]}], "-", 
       RowBox[{"4", " ", "\[Rho]BAE", " ", "\[Rho]RP", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Rho]RP", "2"], " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Rho]RP", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "6"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[Chi]", "4"], " ", 
        SuperscriptBox["\[CapitalOmega]", "6"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "4"], " ", 
        SuperscriptBox["\[CapitalOmega]", "8"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "8"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Chi]", "4"], " ", 
        SuperscriptBox["\[CapitalOmega]", "8"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "10"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "10"]}], "+", 
       SuperscriptBox["\[CapitalOmega]", "12"], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]btot", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["\[Rho]RP", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]a", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
          SuperscriptBox["\[CapitalOmega]", "6"]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]a", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["\[Rho]BAE", "2"], " ", 
           SuperscriptBox["\[Chi]", "4"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "4"], " ", 
           SuperscriptBox["\[CapitalOmega]", "6"]}], "+", 
          RowBox[{
           SuperscriptBox["\[CapitalOmega]", "6"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Chi]", "2"], "+", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "4"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Chi]", "2"], " ", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "4"]}]}], ")"}]}]}], ")"}]}], 
       "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Gamma]c", "4"], " ", 
        SuperscriptBox["\[CapitalOmega]", "6"], " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "6"], " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "8"], " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "8"], " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[CapitalOmega]", "10"], " ", 
        SuperscriptBox["\[Omega]s", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "4"], " ", 
        SuperscriptBox["\[CapitalOmega]", "4"], " ", 
        SuperscriptBox["\[Omega]s", "4"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Gamma]c", "2"], " ", 
        SuperscriptBox["\[CapitalOmega]", "6"], " ", 
        SuperscriptBox["\[Omega]s", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["\[CapitalOmega]", "8"], " ", 
        SuperscriptBox["\[Omega]s", "4"]}], "-", 
       RowBox[{"2", " ", "\[Gamma]a", " ", "\[Gamma]c", " ", 
        SuperscriptBox["\[Chi]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Rho]BAE", " ", "\[Rho]RP", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Chi]", "2"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[CapitalOmega]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Gamma]c", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Omega]s", "2"]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "\[Gamma]btot", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Gamma]a", "2"], " ", "\[Gamma]c", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           SuperscriptBox["\[CapitalOmega]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Gamma]c", "2"], "+", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
          RowBox[{"\[Gamma]c", " ", 
           SuperscriptBox["\[Chi]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[Gamma]c", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Rho]RP", "2"]}], "+", 
                SuperscriptBox["\[CapitalOmega]", "6"]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "\[Rho]BAE", " ", "\[Rho]RP"}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Rho]RP", "2"]}], "+", 
                SuperscriptBox["\[CapitalOmega]", "6"]}], ")"}]}]}], ")"}]}], 
          "-", 
          RowBox[{"\[Gamma]a", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "\[Rho]BAE", " ", "\[Rho]RP", " ", 
              SuperscriptBox["\[Chi]", "2"], " ", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["\[Gamma]c", "4"], " ", 
              SuperscriptBox["\[CapitalOmega]", "4"], " ", 
              SuperscriptBox["\[Omega]s", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]", "8"], " ", 
              SuperscriptBox["\[Omega]s", "2"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Gamma]c", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Rho]BAE", " ", "\[Rho]RP", " ", 
                 SuperscriptBox["\[Chi]", "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["\[CapitalOmega]", "6"], " ", 
                 SuperscriptBox["\[Omega]s", "2"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Rho]RP", ",", "\[Rho]BAE"}], "}"}], ",", "Simplify"}], "]"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"to", "-", 
     RowBox[{"do", ":", " ", 
      RowBox[{"fix", " ", 
       RowBox[{"this", "!"}]}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8368733736310463`*^9, 3.836873397008155*^9}, {
   3.836873450941699*^9, 3.836873481582631*^9}, {3.8368736631550407`*^9, 
   3.836873692753006*^9}, 3.836873740558077*^9, {3.836874179492322*^9, 
   3.8368741886030827`*^9}, {3.836874263358645*^9, 3.836874285576468*^9}, {
   3.8368745288650723`*^9, 3.8368745438054237`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"3fae7304-ffc5-47e7-8907-3dd1f6832032"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "Rpd"}], ")"}], " ", 
      SuperscriptBox["\[Beta]", "2"], " ", "\[Gamma]R", " ", 
      SuperscriptBox["\[Omega]s", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[Rho]RP", "2"], " ", 
         SuperscriptBox["\[Chi]", "4"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Gamma]c", "4"], " ", 
         SuperscriptBox["\[Rho]RP", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[Gamma]c", "2"], " ", "\[Rho]BAE", " ", "\[Rho]RP", 
         " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[Rho]RP", "2"], " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Rho]BAE", "2"], " ", 
         SuperscriptBox["\[Chi]", "4"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "-", 
        RowBox[{"4", " ", "\[Rho]BAE", " ", "\[Rho]RP", " ", 
         SuperscriptBox["\[Chi]", "4"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Rho]RP", "2"], " ", 
         SuperscriptBox["\[Chi]", "4"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[Rho]RP", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "4"]}], "-", 
        RowBox[{"4", " ", "\[Rho]BAE", " ", "\[Rho]RP", " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[Rho]RP", "2"], " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Rho]RP", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "6"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[Chi]", "4"], " ", 
         SuperscriptBox["\[CapitalOmega]", "6"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "4"], " ", 
         SuperscriptBox["\[CapitalOmega]", "8"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "8"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Chi]", "4"], " ", 
         SuperscriptBox["\[CapitalOmega]", "8"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "10"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "10"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "12"], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]btot", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Gamma]c", "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox["\[Rho]RP", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]a", "2"], " ", 
            SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "6"]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox["\[Rho]BAE", "2"], " ", 
            SuperscriptBox["\[Chi]", "4"]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]c", "4"], " ", 
            SuperscriptBox["\[CapitalOmega]", "6"]}], "+", 
           RowBox[{
            SuperscriptBox["\[CapitalOmega]", "6"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Chi]", "2"], "+", 
               SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]c", "2"], " ", 
            SuperscriptBox["\[CapitalOmega]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Chi]", "4"], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Chi]", "2"], " ", 
               SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[CapitalOmega]", "4"]}]}], ")"}]}]}], ")"}]}],
         "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Gamma]c", "4"], " ", 
         SuperscriptBox["\[CapitalOmega]", "6"], " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "6"], " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "8"], " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "8"], " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[CapitalOmega]", "10"], " ", 
         SuperscriptBox["\[Omega]s", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "4"], " ", 
         SuperscriptBox["\[CapitalOmega]", "4"], " ", 
         SuperscriptBox["\[Omega]s", "4"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "6"], " ", 
         SuperscriptBox["\[Omega]s", "4"]}], "+", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "8"], " ", 
         SuperscriptBox["\[Omega]s", "4"]}], "-", 
        RowBox[{"2", " ", "\[Gamma]a", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Rho]BAE", " ", "\[Rho]RP", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Chi]", "2"], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[CapitalOmega]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Gamma]c", "2"], "+", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Omega]s", "2"]}]}], ")"}]}], "-", 
        RowBox[{"2", " ", "\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Gamma]a", "2"], " ", "\[Gamma]c", " ", 
            SuperscriptBox["\[Chi]", "2"], " ", 
            SuperscriptBox["\[CapitalOmega]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Gamma]c", "2"], "+", 
              SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
           RowBox[{"\[Gamma]c", " ", 
            SuperscriptBox["\[Chi]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["\[Gamma]c", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Rho]RP", "2"]}], "+", 
                 SuperscriptBox["\[CapitalOmega]", "6"]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["\[CapitalOmega]", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "\[Rho]BAE", " ", "\[Rho]RP"}], 
                 "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Rho]RP", "2"]}], "+", 
                 SuperscriptBox["\[CapitalOmega]", "6"]}], ")"}]}]}], ")"}]}],
            "-", 
           RowBox[{"\[Gamma]a", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[Rho]BAE", " ", "\[Rho]RP", " ", 
               SuperscriptBox["\[Chi]", "2"], " ", 
               SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
              RowBox[{
               SuperscriptBox["\[Gamma]c", "4"], " ", 
               SuperscriptBox["\[CapitalOmega]", "4"], " ", 
               SuperscriptBox["\[Omega]s", "2"]}], "+", 
              RowBox[{
               SuperscriptBox["\[CapitalOmega]", "8"], " ", 
               SuperscriptBox["\[Omega]s", "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Gamma]c", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]BAE", " ", "\[Rho]RP", " ", 
                  SuperscriptBox["\[Chi]", "2"]}], "+", 
                 RowBox[{
                  SuperscriptBox["\[CapitalOmega]", "6"], " ", 
                  SuperscriptBox["\[Omega]s", "2"]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[CapitalOmega]", "4"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
          SuperscriptBox["\[Chi]", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["\[Chi]", "4"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["\[Gamma]c", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Chi]", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
         SuperscriptBox["\[CapitalOmega]", "6"], "+", 
         RowBox[{
          SuperscriptBox["\[Gamma]btot", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Gamma]c", "2"], "+", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[Gamma]a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
             SuperscriptBox["\[Chi]", "2"]}], "+", 
            SuperscriptBox["\[Chi]", "4"], "+", 
            RowBox[{
             SuperscriptBox["\[Gamma]c", "2"], " ", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Chi]", "2"], " ", 
             SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
            SuperscriptBox["\[CapitalOmega]", "4"], "+", 
            RowBox[{
             SuperscriptBox["\[Gamma]btot", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Gamma]c", "2"], "+", 
               SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}]}], 
         "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Gamma]c", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"], " ", 
          SuperscriptBox["\[Omega]s", "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Chi]", "2"], " ", 
          SuperscriptBox["\[CapitalOmega]", "2"], " ", 
          SuperscriptBox["\[Omega]s", "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[CapitalOmega]", "4"], " ", 
          SuperscriptBox["\[Omega]s", "2"]}], "+", 
         RowBox[{"2", " ", "\[Gamma]a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[Gamma]c"}], " ", 
             SuperscriptBox["\[Chi]", "2"]}], "+", 
            RowBox[{"\[Gamma]btot", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Gamma]c", "2"], "+", 
               SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], 
          " ", 
          SuperscriptBox["\[Omega]s", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["\[Gamma]c", "2"], " ", 
          SuperscriptBox["\[Omega]s", "4"]}], "+", 
         RowBox[{
          SuperscriptBox["\[CapitalOmega]", "2"], " ", 
          SuperscriptBox["\[Omega]s", "4"]}]}], ")"}], "2"]}], ")"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.836873381919045*^9, 3.836873398178083*^9}, {
   3.836873448149088*^9, 3.836873486430197*^9}, 3.836873697697044*^9, 
   3.8368741941042833`*^9, 3.836874540517812*^9, 3.836950190881386*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"5df994c5-653b-4d61-ad28-ba1d8a181a6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   SuperscriptBox["\[Rho]BAE", "2"], " ", 
   SuperscriptBox["\[Chi]", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]a", "2"], "+", 
     SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[Rho]RP", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]c", "2"], "+", 
     SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
      SuperscriptBox["\[Chi]", "2"]}], "+", 
     SuperscriptBox["\[Chi]", "4"], "+", 
     RowBox[{
      SuperscriptBox["\[Gamma]c", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Chi]", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
     SuperscriptBox["\[CapitalOmega]", "4"], "+", 
     RowBox[{
      SuperscriptBox["\[Gamma]btot", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}]}], "-", 
  RowBox[{"4", " ", "\[Rho]BAE", " ", "\[Rho]RP", " ", 
   SuperscriptBox["\[Chi]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Gamma]a", " ", "\[Gamma]btot", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Gamma]c", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c"}], "-", 
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[Chi]", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
     RowBox[{"\[Gamma]a", " ", "\[Gamma]c", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Chi]", "2"], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
  
  RowBox[{
   SuperscriptBox["\[CapitalOmega]", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]c", "2"], "+", 
     SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
      SuperscriptBox["\[Chi]", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[Chi]", "4"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[Gamma]c", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Chi]", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "4"]}], "+", 
     SuperscriptBox["\[CapitalOmega]", "6"], "+", 
     RowBox[{
      SuperscriptBox["\[Gamma]btot", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]c", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Gamma]a", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Gamma]btot", " ", "\[Gamma]c", " ", 
         SuperscriptBox["\[Chi]", "2"]}], "+", 
        SuperscriptBox["\[Chi]", "4"], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]c", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Chi]", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "4"], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]btot", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}]}], "-", 
     
     RowBox[{"2", " ", 
      SuperscriptBox["\[Gamma]c", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Chi]", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[CapitalOmega]", "4"], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "+", 
     RowBox[{"2", " ", "\[Gamma]a", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Gamma]c"}], " ", 
         SuperscriptBox["\[Chi]", "2"]}], "+", 
        RowBox[{"\[Gamma]btot", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Gamma]c", "2"], "+", 
           SuperscriptBox["\[CapitalOmega]", "2"]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Omega]s", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[Gamma]c", "2"], " ", 
      SuperscriptBox["\[Omega]s", "4"]}], "+", 
     RowBox[{
      SuperscriptBox["\[CapitalOmega]", "2"], " ", 
      SuperscriptBox["\[Omega]s", "4"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.836873381919045*^9, 3.836873398178083*^9}, {
   3.836873448149088*^9, 3.836873486430197*^9}, 3.836873697697044*^9, 
   3.8368741941042833`*^9, 3.836874540517812*^9, 3.8369501909376783`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"05c8211d-427d-45c2-a8a2-1c49e8c151bc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"-", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"plot", " ", 
    RowBox[{"params", " ", "--"}], " ", "from", " ", "sWLC", " ", "model"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"3", " ", 
      SuperscriptBox["10", "8"]}]}], 
    RowBox[{"(*", 
     SuperscriptBox["ms", 
      RowBox[{"-", "1"}]], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[HBar]", "=", 
     RowBox[{"1", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "34"}]]}]}], 
    RowBox[{"(*", "Js", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Larm", "=", 
     RowBox[{"4", " ", 
      SuperscriptBox["10", "3"]}]}], 
    RowBox[{"(*", "m", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Pcirc", "=", 
     RowBox[{"3", " ", 
      SuperscriptBox["10", "6"]}]}], 
    RowBox[{"(*", 
     RowBox[{"J", "/", "s"}], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]0", "=", 
     RowBox[{"2", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], 
    RowBox[{"(*", "m", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]0", "=", 
     RowBox[{"2", "\[Pi]", " ", 
      FractionBox["c", "\[Lambda]0"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]RoundTripArm", "=", 
     FractionBox[
      RowBox[{"2", " ", "Larm"}], "c"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tsrm", "=", "0.046"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]RoundTripSRC", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], 
       RowBox[{"2", " ", "\[Gamma]R"}]], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "Tsrm"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]R", "=", 
     RowBox[{"2", "\[Pi]", " ", "500"}]}], " ", 
    RowBox[{"(*", "Hz", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]s", "=", 
     RowBox[{"10", "\[Gamma]R"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]", "=", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"2", "Pcirc", " ", "Larm", " ", "\[Omega]0"}], 
         RowBox[{"\[HBar]", " ", "c"}]], ")"}], 
       RowBox[{"1", "/", "2"}]]}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"rescaling", " ", "of", " ", "\[Alpha]", " ", "by", " ", 
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"1", "/", "2"}]], "\[HBar]"}]], " ", "seems", " ", "to", 
       " ", "be", " ", "in", " ", 
       RowBox[{"Li", "?"}]}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"chosen", " ", "\[Beta]", " ", 
         RowBox[{"s", ".", "t", ".", " ", "turning"}], " ", 
         RowBox[{"R", ".", "P", ".", " ", "off"}], " ", "should", " ", 
         "match", "\[IndentingNewLine]", "\[Beta]"}], "=", 
        FractionBox[
         RowBox[{"\[Alpha]GW", " ", "Larm"}], 
         RowBox[{
          SuperscriptBox["2", 
           RowBox[{"1", "/", "2"}]], "\[HBar]"}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Rho]RP", "=", 
        RowBox[{"\[Rho]BAE", "=", 
         RowBox[{
          FractionBox[
           SuperscriptBox["\[Alpha]GW", "2"], 
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{"1", "/", "2"}]], "\[HBar]", " ", "\[Mu]"}]], "=", 
          FractionBox[
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{"1", "/", "2"}]], "\[HBar]", " ", 
            SuperscriptBox["\[Beta]", "2"]}], 
           RowBox[{
            SuperscriptBox["Larm", "2"], "\[Mu]"}]]}]}]}], ";", " ", 
       RowBox[{
        RowBox[{"but", " ", "|", "\[Alpha]", "|"}], "=", 
        RowBox[{"|", 
         RowBox[{"\[Alpha]GW", " ", "Larm"}], "|"}]}]}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"M", "=", "200"}], 
    RowBox[{"(*", "kg", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]", "=", 
     FractionBox["M", "4"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]", "=", 
     FractionBox[
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"1", "/", "2"}]], "\[HBar]", " ", 
       SuperscriptBox["\[Beta]", "2"]}], 
      RowBox[{
       SuperscriptBox["Larm", "2"], "\[Mu]"}]]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]aFn", "[", "Tla_", "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"-", "1"}], 
      RowBox[{"2", " ", "\[Tau]RoundTripArm"}]], 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "Tla"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]btotFn", "[", "Tlb_", "]"}], ":=", 
    RowBox[{"\[Gamma]R", "+", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], 
       RowBox[{"2", " ", "\[Tau]RoundTripSRC"}]], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "Tlb"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]cFn", "[", 
     RowBox[{"Tlc_", ",", "symSRM_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{"symSRM", ",", 
      RowBox[{"\[Gamma]R", "+", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "1"}], 
         RowBox[{"2", " ", "\[Tau]RoundTripSRC"}]], 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "Tlc"}], "]"}]}]}], ",", 
      RowBox[{
       FractionBox[
        RowBox[{"-", "1"}], 
        RowBox[{"2", " ", "\[Tau]RoundTripSRC"}]], 
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", "Tlc"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"plotting", " ", 
      RowBox[{"sensitivity", " ", "--"}], " ", "un"}], "-", 
     RowBox[{"simplified", " ", "Sh"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "taking", " ", "real", " ", "part", " ", "to", " ", "discard", " ", 
     "numerical", " ", "error", " ", "in", " ", "tiny", " ", "imaginary", " ",
      "parts"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"QNwRP", "[", 
     RowBox[{
     "\[CapitalOmega]0_", ",", "\[Chi]0_", ",", "Tla_", ",", "Tlb_", ",", 
      "Tlc_", ",", "Rpd0_", ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "True"}], ",", 
      RowBox[{"symSRM_:", "False"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"Sx", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "->", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigwRP", "[", 
     RowBox[{
     "\[CapitalOmega]0_", ",", "\[Chi]0_", ",", "Tla_", ",", "Tlb_", ",", 
      "Tlc_", ",", "Rpd0_", ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "True"}], ",", 
      RowBox[{"symSRM_:", "False"}]}], "]"}], ":=", 
    RowBox[{"sigTransferAbs", "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "->", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ASDShwRP", "[", 
     RowBox[{
     "\[CapitalOmega]0_", ",", "\[Chi]0_", ",", "Tla_", ",", "Tlb_", ",", 
      "Tlc_", ",", "Rpd0_", ",", 
      RowBox[{"\[Rho]RPTrue_:", "True"}], ",", 
      RowBox[{"\[Rho]BAETrue_:", "True"}], ",", 
      RowBox[{"symSRM_:", "False"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Sqrt", "[", "Sh", "]"}], "/.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "\[Rule]", "\[CapitalOmega]0"}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", "\[Chi]0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", 
        RowBox[{"\[Gamma]aFn", "[", "Tla", "]"}]}], ",", 
       RowBox[{"\[Gamma]btot", "\[Rule]", 
        RowBox[{"\[Gamma]btotFn", "[", "Tlb", "]"}]}], ",", 
       RowBox[{"\[Gamma]c", "\[Rule]", 
        RowBox[{"\[Gamma]cFn", "[", 
         RowBox[{"Tlc", ",", "symSRM"}], "]"}]}], ",", 
       RowBox[{"Rpd", "\[Rule]", "Rpd0"}], ",", 
       RowBox[{"\[Rho]RP", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]RPTrue", ",", "\[Rho]", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Rho]BAE", "->", 
        RowBox[{"If", "[", 
         RowBox[{"\[Rho]BAETrue", ",", "\[Rho]", ",", "0"}], "]"}]}]}], 
      "}"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.836874981430254*^9, 3.836875072223176*^9}, {
   3.8368751417843857`*^9, 3.836875200542362*^9}, {3.836875283633193*^9, 
   3.8368752924534883`*^9}, {3.836875350207292*^9, 3.836875811270529*^9}, {
   3.836875848406776*^9, 3.83687606141188*^9}, {3.836876101472526*^9, 
   3.836876134581773*^9}, {3.836876275825767*^9, 3.836876427229073*^9}, {
   3.836876464470739*^9, 3.836876512251644*^9}, 3.836876560060914*^9, {
   3.836876606676798*^9, 3.836876621829665*^9}, {3.83694898188379*^9, 
   3.836948982379059*^9}, {3.836954144649746*^9, 3.836954165298077*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"eabb38b1-4c8c-427b-a6f1-9b7e0c3e871a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"legendStyler", "[", "vals0_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "vals0", "]"}], "\[Equal]", "5"}], ",", 
       RowBox[{"vals", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"vals0", ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "True", ",", "False"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"vals", "=", "vals0"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"paddedStrings", "=", 
      RowBox[{"StringPadRight", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"vals", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "/", "\[Omega]s"}], "]"}], 
           "]"}], ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"vals", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"vals", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"vals", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"vals", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "]"}]}], "}"}], ",", "4"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"<>", " ", "is"}], " ", "StringJoin"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{
         RowBox[{
         "\"\<\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``\>\"", "\[IndentingNewLine]", "<>", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"vals", "[", 
             RowBox[{"[", "8", "]"}], "]"}], ",", 
            "\"\<, \!\(\*SubscriptBox[\(\[Gamma]\), \(c, \
tot\)]\)=\!\(\*SubscriptBox[\(\[Gamma]\), \(R\)]\)+\!\(\*SubscriptBox[\(\
\[Gamma]\), \(c, loss\)]\)(\!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``)\>\"", 
            ",", "\"\<, \!\(\*SubscriptBox[\(T\), \(l, c\)]\)=``\>\""}], 
           "]"}], "\[IndentingNewLine]", "<>", 
          "\"\<, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``\>\"", 
          "\[IndentingNewLine]", "<>", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Not", "[", 
             RowBox[{"vals", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "]"}], ",", "\"\<; no RP\>\"", 
            ",", "\"\<\>\""}], "]"}], "\[IndentingNewLine]", "<>", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Not", "[", 
             RowBox[{"vals", "[", 
              RowBox[{"[", "7", "]"}], "]"}], "]"}], ",", "\"\<; no BAE\>\"", 
            ",", "\"\<\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"paddedStrings", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"paddedStrings", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"paddedStrings", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"paddedStrings", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"paddedStrings", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Monospace\>\""}]}], "]"}]}], 
    ")"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotwRP", "[", 
   RowBox[{"valsList_", ",", 
    RowBox[{"plotLabel_:", "None"}], ",", 
    RowBox[{"plotStyle_:", 
     RowBox[{"{", "}"}]}]}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fmin", ",", "fmax"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["10", "0"], ",", 
       SuperscriptBox["10", "5"]}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"p1", "=", 
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"20", 
           RowBox[{"Log10", "[", 
            RowBox[{"QNwRP", "@@", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
               RowBox[{"valsList", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], "]"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"legendStyler", "[", 
             RowBox[{"valsList", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"100", ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "All"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"TicksStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
       ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fmin", ",", "fmax"}], "}"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "plotStyle"}], ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<quantum noise transfer function,\\n|R| / dB (20log10)\>\"", 
            ","}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ToString", "[", "plotLabel", "]"}], "\[Equal]", 
               RowBox[{"ToString", "[", "None", "]"}]}], ",", 
              "\"\<nondegenerate internal squeezing\>\"", ",", "plotLabel"}], 
             "]"}]}], "}"}]}], "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"p2", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"sigwRP", "@@", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
             RowBox[{"valsList", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], "]"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"legendStyler", "[", 
             RowBox[{"valsList", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"100", ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"TicksStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ","}], "}"}]}], 
       ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fmin", ",", "fmax"}], "}"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "plotStyle"}], ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<signal transfer function,\\n|T| / [?] (log scale)\>\"", ","}],
            "}"}], ",", 
          RowBox[{"{", ",", "}"}]}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"p3", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ASDShwRP", "@@", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2", "\[Pi]", " ", "f"}], "}"}], ",", 
               RowBox[{"valsList", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["10", "3"], "<", "#", "<", 
                RowBox[{"4", " ", 
                 SuperscriptBox["10", "3"]}]}], ",", 
               RowBox[{"5", " ", 
                SuperscriptBox["10", 
                 RowBox[{"-", "25"}]]}], ",", "Null"}], "]"}], "&"}], "[", 
            "f", "]"}], "}"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"f", ",", "fmin", ",", "fmax"}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"100", ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"50", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"legendStyler", "[", 
               RowBox[{"valsList", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "valsList", "]"}]}], "}"}]}], "]"}], 
            ",", 
            RowBox[{
            "{", "\"\<5\[Cross]\!\(\*SuperscriptBox[\(10\), \
\(-25\)]\)\!\(\*SuperscriptBox[\(Hz\), \(\(-1\)/2\)]\) target for 1\[Dash]4 \
kHz\>\"", "}"}]}], "]"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", "10", "]"}]}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"q0", ",", "r0"}], "}"}], "=", 
           RowBox[{"QuotientRemainder", "[", 
            RowBox[{
             RowBox[{"Length", "[", "valsList", "]"}], ",", 
             RowBox[{"Length", "[", "plotStyle", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"plotStyle", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "q0"}], "}"}]}], "]"}], ",", 
              "1"}], "]"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "r0"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Red", ",", "DotDashed"}], "]"}], "}"}]}], "]"}]}], 
         ")"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fmin", ",", "fmax"}], "}"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "valsList", "]"}], "+", "1"}], "\[Rule]", 
          "Bottom"}], "}"}]}], ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<strain sensitivity (NSR)\\n/ \!\(\*SuperscriptBox[\(Hz\), \
\(\(-1\)/2\)]\) (log scale)\>\"", ","}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<frequency, f=\!\(\*FractionBox[\(\[CapitalOmega]\), \(2  \
\[Pi]\)]\) / Hz (log scale)\>\"", ","}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", 
      RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"plotting", " ", "function", " ", "appears", " ", "slow"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"to", "-", 
     RowBox[{"do", ":", " ", 
      RowBox[{
      "speed", " ", "up", " ", "plotter", " ", "by", " ", "simplifying", " ", 
       "functions"}]}]}], ",", " ", 
    RowBox[{"particularly", " ", 
     RowBox[{"QNwRP", "?"}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.836949056499524*^9, 3.8369491522453423`*^9}, {
   3.836949203158723*^9, 3.8369492572097607`*^9}, {3.836949350485856*^9, 
   3.836949537776169*^9}, {3.836949571488316*^9, 3.836949640355214*^9}, {
   3.8369496740355062`*^9, 3.8369499493011227`*^9}, {3.836949986994995*^9, 
   3.836950086313497*^9}, {3.8369502516034317`*^9, 3.836950264656722*^9}, {
   3.83695038436172*^9, 3.8369503910357323`*^9}, {3.83695060656115*^9, 
   3.836950622219602*^9}, {3.836950765997849*^9, 3.836950792404911*^9}, {
   3.836950834397187*^9, 3.836950936833548*^9}, 3.836951504688608*^9, {
   3.83695223414974*^9, 3.836952234242729*^9}, 3.8369532123824883`*^9, 
   3.8369538214320498`*^9, {3.836953962894046*^9, 3.836953989455701*^9}, {
   3.836954046506151*^9, 3.836954052119355*^9}, {3.8369541131106977`*^9, 
   3.836954136909297*^9}, {3.836954474855116*^9, 
   3.836954480510048*^9}},ExpressionUUID->"24ec3452-d741-4903-8b5e-\
76bca56bbc49"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"valsList1", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0.1", ",", "0.1", ",", "0.1", ",", "0.1"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0.1", ",", "0.1", ",", "0.1", ",", "0.1", ",", "True", ",", 
       "False", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0.1", ",", "0.1", ",", "0.1", ",", "0.1", ",", "False", ",", 
       "False", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Omega]s"}], ",", "0.1", ",", "0.1", ",", "0.1", ",", 
       "0.1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Omega]s"}], ",", "0.1", ",", "0.1", ",", "0.1", ",", 
       "0.1", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Omega]s"}], ",", "0.1", ",", "0.1", ",", "0.1", ",", 
       "0.1", ",", "False", ",", "False", ",", "False"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotwRP", "[", 
  RowBox[{"valsList1", ",", "None", ",", 
   RowBox[{"{", 
    RowBox[{",", "Dashed", ",", "DotDashed"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.836952322637493*^9, 3.8369523357651978`*^9}, {
  3.836952605081574*^9, 3.836952623614855*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"a9a989a0-b460-4b7c-96e2-01a888d8e486"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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

              "]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$92362#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
              "]], 
             LineBox[CompressedData["
1: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
iP+xz7iURB8d4aey43aR9IT/B8AC1pg=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$92362#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Dashing[{0, Small, Small, Small}]], 
             LineBox[CompressedData["
1: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
N0uKvihzD05m7sSZpa6+OLkG8Z3t4cdsu6RosFF0m/yVBly8NmlZIQEZ+r/P
KyXdHZNJMjI0n2MnaHA7FYeQXuofpifD16/eHpjXYAKzdJgSBXCD3atbN1hO
gAM59UwvSIB/XY77qaYKVhjnj2g/B17euZxgZA3eFTx38qgjGB1NzLh9yDIP
hjnPOoMnT1u4pHqBOY0rTT8FguNOySQnJYPXid7dFyskQ+OC5w3P+TzFZEMo
cWHTZCgbd4gZDfIJ03K71Ptg8Z/XOzgdor5ij1KntC3XyFDXtuKEDbMJbJnD
QvvWPwdyJL8UvTGBHcTYOywQkOP7J59+oUtMDObQJmI/yggWOEc2mMQK9tDg
1lHlIUdFlbnzZXNrsQ9n0nWLj5Gjj14wx64TdGGyOZlqgyLk6Oeff2IUlwpw
RSE5XX6S5PjPb9SC5WWGKvT75E1IOHQKHE3c9rj5HFiiv58lUgfsxSw5K3UF
bBfFVUp4kxydt0ymVqvpxc2c0txnu0OOHl9XjaX6nYdJLh+bj3ciR8+3vJp6
SlaBsYkPJp/0hPprRj8TMu6DBfWiToz4g7Wdp9nDQsEa9+/am0SAu0ZE5EJe
kqMiLK8mJ/zKMBcJe1bZRHKUtGk+/0xNNy5ejcaEO4sczQuYV7cg3VE1X2tc
t8qG+p7S05d/F5KjP5A5CbdLndidwJAlhzJy1EPIQ+ZBYQ12nFLWqqca8r15
hL9b1ILXNbgqq5rBD6rIttf6wSwXV8Zxg+CJqU45bAgcJztSYDMFfvW7oe7O
PDl6jyXViGCsEmPUP5An3vwXX/8R1bP/CivrF+dnJqJAW4suiCcJlmKMsX0n
Y0goUKf9rLqHru6Y0J+YRFVqCny/ZBdVB+mjYLmt1L/OHGC2lN3rc/xgDezP
9poIBWp0ML2bsDhczsmn/kFcigL9Kh+iYPjeGrMkOZl9VJEC5S+L0XZ52oFR
hxf2ZKhDPUvJtVoCLQr0eQx/rkzuAM56mHvxf7xO4SnonDOAa2oN93W5RoG+
+hP9WkbaFIvbcuOP+ucrEow92BcL7EjXubgqKwrUPV/PTKf5K5ZWXEZ//TYF
aja00e5PWoNJFEfcLXOgQBn77JeD5tOw+DwCi0QvmP+AYci54hG4OQR5uPv4
kKmCt7TCwS6a9Ip9CYf26xcTT2Q+mJP8cwhtNXiOVuOuwiE/HC2snWoB79ub
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
cLPD8tg8Hz/+fPN/AMJ8A8w=
              "]], 
             LineBox[CompressedData["
1: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
u3riKrCB1sNsfU7wvwF6irKF
              "]]}, 
            Annotation[#, "Charting`Private`Tag$92362#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
F1/pLSOgwxWP9NYnFDRoM1qteUzE/wEcKH6W
              "]], 
             LineBox[CompressedData["
1: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
gEMK1HqWdXCzNub/AetggOo=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$92362#4"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
              "]], 
             LineBox[CompressedData["
1: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
v/q4WTv9fx346ro=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$92362#5"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6], 
              Dashing[{0, Small, Small, Small}]], 
             LineBox[CompressedData["
1:eJwV13c41V8YAHB7z2tdXCX5pVQqlRL1vg0ZLaVQSZIkhFBKRVlZCWWEpiTJ
SEWuvWVkJnsVsvdev+Ofe5/Pc889z3vOeb/veb9rjK1PXWFiYGBQIB8r30NH
Ve9dYzgN+9r+WHgFp8JX16XnDwctQcJP/8GK/2k6lL7/dxNs7B77rxgqFo6t
GfQF8yGHthU7Kj8aMmsLggl3iow3Mb/F9j1CgxFw3uXOpRW38Q7pcQ9+AivP
fBsfYvWLpabsg+nwV+Zp1mPisne3XaxrM+ChV173iuW2Xxg755gJzSX8zH7E
8Xuy+3TUsiH1HKPhiutLgs2OtueA6d7vQytefiOZl32jAIIPeu31X4n/34Y9
6vGFUM0nRF/xPPseK9bBMuClfVR+Skz/+nLK3rwcouRHrFZ84PDDR2dHyuHc
SY0PK56glz3J6/wJ7jZ7BJ8RTyUn1KNlJSi0OQ2vOOzD8faK49VwfkYhIZiY
+ZmLTbxPNbBOMPSu+JNotItVWzV8VG1XDiE2z+PmbjWogWc1b7+uuJv2SzJD
rxbKd7QmhBK3Vlzde/dYHZjrM2eGESvrXZU0f1EHUwPdwuHEEffKCvpK6qDr
YczhFZ/bsO34OY3foGttUbXi9CeZIbo/foO+ieXlCOI6lzlD5YP1IMBlMrji
nzsfP5je3QjjkeL4ijgzPCnPTrYV1jU+039H/P1OozfzxVZwCs+JWfFnPaZT
T5+3QqGt6/yK3wmdak/ia4OvcSWvo4hLn/RUb+VqhwMbqiSjiWP3UiW/d7dD
5N0PX2KIjZJ23ZV63Qkj+6bPJxA7bNY7rZTWCZwW7V9XfIVmIBPY3Qmr6nSO
JhLbcDtLFk52wkbZxIcr/ubEP6ij8Ad67utofSa+EDVlczPqD6zhWZxNIj4o
Ffz465O/sC7Q0CZ5Jd94fxUqmnQDm/G3hQxi4Y+HX/c86AZJZzvHTGIJ9e93
Il50gz2j8OyKZR+Gb2L73Q02QUyzWcS7Jy8FNmj2QLxGHnMusXHL0IUHW/7B
7c7DhwuJ2f99H8hj6QUTtQPPSlbii+OYLJ/rBarkc5+KlXzScvzpItYH9pSJ
9ZXE2T390bt29IHhOfOiFXvrKK5fb9wHZeUJRVUr8fh78P350kfiHA+pWTn/
oKBs+/Y+2L6uNaiWOErqNrUpuh+89hUpNRBzOMn4Shb2w1C+T9+KdR1/lIT1
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
SkGsyKPmL32C+NYqfemSV6zIWmAbdYuYidlly693rPiPbb2rF7Fzbgy/UiIr
LrFyzn8lXvjJGWSfQ+aL82uaIh41FTf6MseK4xy3hhvfr/TDJ1imVdiwou53
1WR0KjQG757aep0N6WbHtpZ+IPXZ/OCjCXs27H3l9XeIWHTfcer3e2yY1arX
SolJBVsGikHVIzaUk3zbeZi4/5HH5K23bLiHrW1jIXHZ9idOx2LZ8FUK1XeE
WNbaSVq0hQ2jLmQa930k+V/ZxWbey4bD6IfrY0l+3vyk0DDChjmHHjUcJ55z
mF8/OsOGukmPN98hLpJTCmtZZkN3C77KF8S7Vgseuc3Bjm/LpPVKiROvqz7x
kGPHSWlrO7tPqfCW66lY5BV2NP3XbFATlwrY+uKD6XV2THm9qY0hPhWGp8GZ
yZ4dH5Y86pEjljybef6zGzseDO6450P8LLr3VVYkO3ZxP9DQTCDPwyFc39zB
jgsZ2cF1ialg4TS4W8SQA00lzx3d+5XsN5Neic4VDsz6NW5mR+z3KPt8oCUH
Cgf29cQQC93zdea/y4FRO/L4qd9SYeatcj5nKAdeYCmTmCV2K3I/sVTFgR97
h3J+pqTCS4FVpj1qnDjhbJBcnkbyLejR9H/HODE3nOGpYDq5f9ZkHvc/zYl1
5Rd89Yj/yuTHdhhzYld4hEA78Y9HYlsYbDhxuWmm7mIGyced5qNNzpwoPyV7
ZI44qjhcYfs3TtT0yjShZpP6+Pb409TNXNgDd7ZpFZB6eH3q0vkdXFh7a+2a
UOKhJPNRP+DCI/6zE7TCVAjaFZoic4wLJb2vPs8i/te8YVblHBcGut6QNyoi
7zNlHU0+llx4bSEpEotT4cw1RsVPsVzokf5YxqKU9IdxQ/2+yVzoevrk8jzx
4eznyZQ0Lkxy4fHdXUbqkXemRlEJFz7Z7A685anwYOZPk1UbF254f8t5489U
sFrNcX1rHxcuFzX5ZxNfvsgq+nw1N153Xv5aVJUKsxrh35g2cKOWTrK2djVZ
f3zcUvNWbrzHl3qokNhAKFs9ZTc3JoXjmr01JB9b/jZYaHDj2zju8M21qVDw
yjJY7DI3/ndf6UHFLzK+mhog4MWNh3xeCqrUpwJfRM7h6PfcGC2Z+FS6MRVk
hnt+H5HlQXr9fp6pTtKvZd0wZNzEgwELSrzef0j/4T//N3k7D6rVhm5a/TcV
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
DGJfTdQEkeb0yKbjmRReyCqTuRwgiP8DMAiGOA==
              "]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, 
             "Charting`Private`Tag$92362#6"]& ], {}}, {{}, {}, {}, {}, {}, \
{}, {}, {}}}, {}, {}}, {Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}, 
         GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{100, 10}, {1, All}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{2.3495766255041283`*^-7, 
            11.512925230012566`}, {-2.8929823996598612`*^-15, 
            52.13548848727367}}, {{2.3495766255041283`*^-7, 
            11.512925230012566`}, {-2.8929823996598612`*^-15, 
            52.13548848727367}}}}, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Part[#, 2]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"quantum noise transfer function,\\n|R| / dB (20log10)\"", 
             TraditionalForm], ""}, {"", 
            FormBox[
            "\"nondegenerate internal squeezing\\nwith radiation pressure\"", 
             TraditionalForm]}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{100, 10}, {1, All}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}],FormBox[
        FormBox[
         TemplateBox[{
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=0.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.  ", "0.1 ", "0.1 ", 
              "0.1 ", "0.1 "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=0.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 ; no BAE\"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``; no BAE", "0.  ", "0.1 ", 
              "0.1 ", "0.1 ", "0.1 "], Editable -> False], FontFamily -> 
            "Monospace", StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=0.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 ; no RP; no BAE\"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``; no RP; no BAE", "0.  ", "0.1 ",
               "0.1 ", "0.1 ", "0.1 "], Editable -> False], FontFamily -> 
            "Monospace", StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=1.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "1.  ", "0.1 ", "0.1 ", 
              "0.1 ", "0.1 "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=1.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 ; no BAE\"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``; no BAE", "1.  ", "0.1 ", 
              "0.1 ", "0.1 ", "0.1 "], Editable -> False], FontFamily -> 
            "Monospace", StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=1.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 ; no RP; no BAE\"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``; no RP; no BAE", "1.  ", "0.1 ",
               "0.1 ", "0.1 ", "0.1 "], Editable -> False], FontFamily -> 
            "Monospace", StripOnInput -> False]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$92445#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$92445#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Dashing[{0, Small, Small, Small}]], 
             LineBox[CompressedData["
1:eJwd2Xk4lF0UAHD7vjMY28wgInsqCnMqNZoKoZASQipL2SmkUFFJEslS8Sl7
KVLJXrIlS5aSUJYke7LFd+/8w/N7Ztz3vveec+65D4qTl4ULCxMTkyT6gX9/
3FnlS7gaazRYoiLS70kH2rFGV87fZVS5MEOGlzm3erL/bqKe3HuI4b6WE4bn
9ndSD1sFMlx+r6jGR7GPSvyYwXCAurXV5teDVHHoYliQ/9M7HedhaumohCh2
cT7Xn+aln1QHtxMM25kaKJyM+01N+tHAcMruG5mZlyapg9M8YtiepCmRqVdT
VCkTS4ZvSN9t538+Tb29mMlwgcSO2xvyZ6jyBswEbD2dKofshFlqg4gTw9X7
QF05dI6ad/0Dw5yfw0RdZ+aoXInc4tj7TlQsZrr+ofKJmjDcGW70Tt5snrpT
9yPD4kQ+ZdnmeepiAVkC+9CTnssSe/9Sm439Gb5DezQqXP+XWmDSynBXn+8e
PtoCtUlERxJb0n9HDsfbBeoU012GbfiFeJl3LlK7/DmI2N3bcpv+GC1RRx7P
M3z1ePNo0/klquiuzVLYW2Mm2TJfLVF9OwIYTvm80dBi8zI1godZGns/yyFb
Fd9l6rZWE4ZXVQL9mIqWqYaNtxh2CCrLL1BfoVakqctgCz/oq488vUJ1Sgll
uPo90/CR7BXqA0Ibw4qSu+R41/2jhtZfkMUeLWm+cUJmlfondE0OW9d1KF/8
0Co17M4xEnYY4V/T29hVao17NcPivmq8iqxrVKusm2RsY+2Yy/0/16g1mQfk
sf0iYniPsDJBitt1hk3OHGivE2YCX/YGhidoX53SNZggqHOXArb+37lwUzcm
aNQwUcT+eFCxMu8LEyg9ClbCHmQx+Gv2iwkEvzcyPFdoqTG7xATL9nLK2ESe
Syn6UsyQqVrHsFP5QOA7G2aYTl+vgu17erHwpBszbDgVwXCUpPAIXyAzrKYO
MJzrDQctE5nhvc19Vcb4Suna/Z/Q98s01bA5OkrcLg0xQ59PIsOS4R/Slf4w
g3Itkzq24Zd//B5iLPCS1s1wVOyRsUULFpCOu6fJmN8CMUP0IwvYbQrayIin
MDaqQxcLTNeWMCzCOfk5r48FjN/OMcwjXiuy+zcLHJX21sVe2eh5MZCHFfbp
em/C7veqdvxqzArFn65swX48cor86CUrfBYQN2Dsr9fBstlKVjB2Ps7wg3mq
DbxnBVPaU4aT2Qk3ezpZwfyVqSH2NYWKNd45Vvhx5qYRttcx0W9nNNhgA7/W
duzNXa9Tt2awwYG2kd2M+GiQDXDKYYP1/DQa9sY3YebRT9lgdiaLYa2Mnayf
K9hgc62bCbaqV6NbUC8bXEqf24NN4vyysZTADpYHNPZjc21Zqt90hR1Gv+hY
MdZb9UjG0Vh26JnNZphdtvx85B12uDNAOYjNwnpR81MmO/gaix1irM8H7gTf
KnY4ZcFqgz3tSnR4tsQOYb95j2B/vqM3r+XBAY45bc7Ygad2Xp7z5YBiM18X
RjwbmUqWnueAFU0JV2zLoeNbqdeQcxxOYDdtjA3dn8sBfC0spxj18OMQx6mf
HODFHOWFfSRzKlF9mgO4LhicwV4KWF4/vcABOk5zDG8hCe8N5OIEsSNu3thP
PAxio5Q5geTj6If9kCdeIsOFE7ofJ5/Dhr7Ux64enCD91O08ox4/fayv6scJ
jXS9EGxp23K7pxGc8NyoNxT79qOf6RUZnJAftuUiI/6MYX3vACfE6RhdxT4d
+luPYM8FO4UzkxjrxWLdYOnCBZo8d+8y6u3lSrtb7lxwuDI2GbvoZnyo4Dku
kDp7MQV74aF+LXcSF+gYhdzHjqiLNFtt5YLCk42PsdOE5FxHdnGDiNPgK8b+
J1z+u24/N2xOIpRhVxGnrzhbccPrFfob7B/ytbkDTtzw1qGsghEfm05Nfwnj
hhz2V7XYL2xLzn98yQ0OjootjHrw0DT+pToP6P9uH8Jm5nLsjd/EA5XZfiPY
Oh4+6zwNeSA6VeondsKWpBfy+3mAbuw5jn24aeBLjDsPcO40nGU8/4+von0u
D1A7wpgHkAl2lz30nvGAL9GGFXt35d0Skdc84MKsy46dHV1uUtfAA9qd81wD
jPOKy0NrjAfij2ULYS+a3CtmUeGFoxffk7FVC/JXe7V4ocWzTx77iGgl7YUe
L4QFLChil3/90XPahBcEV/VUsCO8NVY7TvDC83fj2tgCKVW7H2XxgluRkjG2
/ORI115FPrAblHfH7qw4a8+sxgdb6is9sa/eXP5RspEPRCuPn8We0hacoezk
Az72l/7Yb3w38y048sE4y8NwbJulCMhM5wPiO/8kbL5GgTrbR3xQ43nqHnbF
vaT9goV8cKj5eBq2kmHe4eByPgjvPpGJPRvW7mv+lQ9iHEueYN9gl89ekeIH
niMBDdg7OnM1i+T5gbOqsRn7T9amkhOq/CCRqNTKWA+TPTVt+vxg936yC1sl
5szXxzb8cPph6xB2rVCF8ME7/NCY2scyiLwsfSQ4X1gA7lqF7sB+mGrM3Ccp
AEUJZ3djm5DUrwiQBeDn/Gk69h351QQvDQHQ3u9vga2lcv+p9l4B6CgZdMJ2
3fxjtDhCAKb1lSKx28zdrcv/CoDd0qsW7KA2q76JVQHoWsvrwCZbGbqQOASB
c/pRD7aHtYDPBTFBWOss/Y7NZf/kxg5tQSCcM1nANjw99/bdKUHY1aGu8B3X
58jzui1fBaG85NoF7IkRfp97Q4LQvs/4MvYmevrTE78FYQcX9w3saoFqDaZ/
gmB26NU9xvcbL92WFBACHrWKF9icB+tv7FEXAhbzkzPYqhwiBZraQmBWtraI
bfricDNhkxDIsvzH/APXB+I476CBELy8ISOMTe4TuBq8Twi+jlRrYW89YXUp
97QQrOhz+mAflUx9GOclBB+O3j2HfaF+qCrARwjaaAYR2HUbApiMzwkB+8zz
BGyrqbshvdFCYL3b7yW2R9C3AP4cITjDYs42hHw/5pS716gQTOa7P8Y2TBjk
FR0XglmVB0XYn9MO55ZMCsHGPaNl2GJF9LF/80LQvljQin25W9XtGrswbBin
rGB7rvt1PFteGELV3lgNI2+rOG33/YgwlMe3EEaQu99/X4pyEIYep3R5bN82
u2RVZ2FYnxSliV0wtLfn7GlhyO2/twdbnk/NmilYGLyyh0OxuWzHLWQTheGs
guIEdueMO926VRgsaVf6R5Fr3F++NfkkDIeP/J3GfjLMvn1rjzAszl1h/Ynz
8XPaFtkBYeivFlPGNqj+qPh9Shgi3Du9sB/E6a55ConA0XvANYbzhzc82EFM
BN7KL0pjB0c2/zkgKQKixd2a2FZBruO6ZBEw1BKwweZwTOpZ0hSBW9J2Odju
WivPosxEoC6j5tAvZNscE81ASxEQ8RLxwN6tmJBz0hqN73z9EjZJUuPBvmMi
MK3O/RS7be3YDfRdsJulCIwj67XUuKXdEAEu//Wt2KyeMbIlzSIwCdohE/h9
U+O3JLSKAE1py11s++Z7B3w/icDuCJ9i7FdqeZE6X0XgpUXcBLb3r6bfBeMi
cJDF4/gkcr+bQPkjXlFIzme3mcLvnyTeHSUoCnArKwDb4L3cjIuoKJyZiUjE
TlTWVFKUFoVEtpUubNNhsxv3VUUh5k2/3TRy2fE4+7t7ROEhy4zXDPKp+LuB
gftF4XVxZjy2ZM2DW9YHRCHkQ8oLbB/5oncEW1EY3X+MaRbnz0Cbxi03Uci+
YpCAnWQvthZ9WRQ+RLc3zeH4sU1MP/9WFAaZYwL+IqcMfNAn1ovChNCfB9g1
Jzk6iptEwYY7rwlbJNiPa7JdFAKHWBQWkAuTLc86DoqCYvPxduyxL4I7d6+J
gvjbszuXkB3trwwL6ovBUP608z/kK8MVF/IMxGA2XDoZ+4nnX6k9IAbcVf+1
YK+GuppdpIlBjGHftlU8n3Tj0rmDYpD5cEZyDcd/P1N0j7cY3Bo2GWbyQut1
PEg9I08M3g1NtrEhv7WLzLj+RAyskzZJsyMbWMURA5+LgWUQtzP2hl3Z7PvL
xCBrvcNfbC7lnq/zjWLA4jKqyIlcPaZ3g/5LDB6NOKdwI+t/N2bbNCkGkwmE
CewnX8yDSbNi0LPqCjzI6U1urnNLYmD1Z2oY+3xBklEaDwHEn9Ru40Pe7L0w
Ma1CANvz19kFkfNPsbn0qhMg8/l3R2zF40Jf3mkTIOf+ZDm2qNX6unv6BMjS
0DgnhDy1ySZ91x4CWC16rAgj5yy+MLvrRoDd9qBAQCaFBzyBRwRYt0uAXwZZ
qK0oazSHAKXhGuewmRQmUm4WECBagjiGPVjrfLW/mADSCpYNsshZXBZOF2oJ
0CkXcZuErHFTTaxygAB8Q+oHFJAN0wcCqDLiMJr+2X8D/nxKxnOEJA4ajqbM
ashy222cYxXEofBB5TVspu8fzL+pikPG/KMsdeRapTKVMH1xkOQtGdZE3ldw
50v5IXFwXH/+ri6y3Zu9VKM4cdhHa+syQuar3dHRflsclgWCLlKRyxv0T55M
Eoe7oZYagCzfrRx/O10cUrnzrm5HHpthHRnLR/O5q2JmjBy8vuxGYoM4KJlY
SNCRk+PV+qZYJUD0iHj+Ifz8ZAWfKE4JUJ5/cdEaefW+FJcMrwQ0T322tUF2
KuDSoYlIgNhMId9hZNX6H5GpZOTM7xFHkV+tpqjTDSUg4fJElTPy55P8IRn+
EuDAFnfJF7m3v/t3VLAEsLi1/+eH3GedaX8qVAIaz5g2+CMP7NoG2lESkDO7
RgxCHqWcZK1IkAAj3eaOEOS/PbVXPz+XAMls4bLLyAvmN5felEoAO/Mq61Xk
pTq70w/KJOC9pIdpNJ5/8cw+t1oJqDw0MnYNmeMWWWi+XQK+93XvuIUsRj9/
R3hWAmxWtvikIotX0Tj/zEuAqfeLoTRkST3RwO4lCci7yG93H1lGKcc2nUUS
Ln+1NM1AVmDpllEXkQTt3lHrbGSdVxszTLQlYanaaqUY2Uz1V2GYlyTsUy4u
bkVuWBy6T/aRhNpFXq925N31/XFV/pJg7xSz4ROOJ7dOH9ZQSbDdK13QjfMx
q2rL5WuSIL9l3edvyJzySRU3siWBLK7bPoFcQdzVkvpdEo492+YveAad5z+p
lUYjknC8tfG+MHJJ6dan38YkYWvcwRZR5HxrrXjKjCRUnfbRk0S+lyBt/R8T
EUqbsrdRkAOEZ/ryZIngzfKKTxdZkzt94rU1ESavGokcRV4y8XydY0eEuAhW
Dgfkd1cMr9w9RoQ0jtw1J+QjXL2UgBNEKJRqZTuJHM1JPKgTQIRMnUZrP+Qf
7PGvH98hQraW9YZY5Ce7nK4kJhPhZzbXpVvI5yK1D0alEUGby3UgAVmE/ePE
8SwisJw8XJSCTGXjlyeVEOHJjeysHORklstXEj4RwcnKaKgO2XXHoYMRPUQQ
WdlW0IisfXGdvM9XIjj4N4S2IL9nrn1tPkQEK+ja3IX8h4l5kvcPEfRLndlG
kM3Xgg9eFJMC27hjClxn0f1zxVPey1IKuAm+o+bIt6YXr++1loI3act5B5Hl
RiIWle2kwOv4cPBh5M1tyR/7naSg+5vWRmdkt8fvQi28pWBt5YlEIHKTldyX
TXFSoLk+peoBsg09e7dIghR0ZZxb9wh5iKpbNJEkBYScf/F5yKuq9KuP7kvB
0qRR3AtkTWb/LcQnUqBgLyH4Ac8nvzl+5YMURMaVb/iH55Nhs9bdJgXSFurG
rN50yE36fqq4UwrOLma7cSPXXlrc7tknBbPeGp0E5D+266a+/ZYCrmvE3ZrI
Nhwh+2r4pOHJ5dZYZ2TSMTX2aLo07E1mu9qDrJQ/PKVgKg0i72Na+pHVlu/3
vjkgDXKJNxVGkfUSCc+nbaSh7XvQ3Dyyecuqk+0JaRjizDIg+KB+ktpauT5C
Gp5ljIZYIQ+Q/M/XvUEm5sT0IY96aLk5VklDlePzFyPIE6/HLJdrpeHXdO/c
FPKS9bENmk3S0LvCl8Hqi+LjpsnnO5+lIZbvdpsK8g4maT3Xv9KQyB6SEoSc
0V8xy6YtA2Kb3/cq+6F6kWb6elxXBpbW0zx0kU2Pfr3YoScDTgGnJbYjL/Us
CWeCDFA0Ql8eRrZo36S101wGJkO+bo1FZnmX6x7uJQPX24qd/yHbRGzVPekj
Ay4DpBxef9Rf7qhfNg+QAR1yG58U8uGK4WhymAx8i+PZsAX5aSklu+KGDPit
NbR6IzvkJg79y5eBhNAAlinkkpNK+UNPZeBOodA2pgBU79cX+zYXywDxumKC
EHJpZhtr6hsZWB7sK9BGFkzjlzdolgGZl8UX/JDLb16yDx6XgRfrZ/pZA+kg
6+/VNa8qC+khHW2GQXQYv6ZOStGQhceK3J4HkMsyfrlu15GFPqFoTRfkI60n
5mP0ZSHoZ4HSdeRkNQcCxUQWjnE5TPQhi383t9zrIgt+s4/VooPpMLwocG/K
TRZC285Y3kcuFmoeTHCXBZb1Hf+VIFsZ7fHu95GFX3G9H74j37q7Pc7voix8
VNc0gHNo/uY6LenpsrC5Prab+Tw6D1ynxHdlyMIT3ZEhKeSCkAL7sSxZ2Hfn
n6Iusmmu6oRugSyceya09QTyNQ4F/oYyWbiUmdPYgsz1RnTvXI8szIgOT+SE
0IFZ9c87EzE5WO9+LvxaGHr+vGf+Fwk5UL1ny5GHLF8zGu8pLQc5p9rqG5GN
j/Q63JaXg4TVIgG+C3SIulGz9E1LDtUty/RYZN7ZOI2A/XIQHpNqmxGO+q8K
XgLPATkwE0rgqUNWuxa5nGIlB5whO1h/IZuuC3pfbScHHHV6HzZepMNNawcn
gVPIC0a975EJZRp3/ouSg/w1l9PMEajfuPL4vF60HKysHBxSQd58UP5443U5
iK26/9QC2WaCoDV9Ww7cStWM/0NOJv+rN8iQg0sSbS6mkShfIxv/tVfIwWqJ
Be1pFLpfm7q5sCzKgTW1zrziKh14YkqUv6/IwU3VbJkF5LE6trEaJhJ0hdw9
qR2N+qftDzwjuUhw1KQu5j9ktU2fA7gkSTCjShC/HYPu0zL7ogW2kGBZTcQv
5jrqp2yT901uJQGXQeVsE/J0wqjARyMSqHnVcQveoEORYGR83G4SvD3FxpKA
rMtaniJ2iARlrspmj2NRvRjTLJTyI0G3d1zD7zh03iqHnl0OJAFbgN0F/Vt0
WDzetLH3PAkISvKjkcivvrqVpkaQYNe/vx3keNS/tj6oIt8mwZ7BdTbHbtMB
SkU7lJ6R4ILjq1KmRDrQov4u6EyToCf8cdr3FDo8lPbb1jpHAhOppcc7Uumw
8mQmxGuBBHZnx64+TMX962+WvDUSpJEqupzTUHxJekeJcJJBJu+/3tl0VC89
3G7GEMgwGX7C0TADjaf36OlhCTL4/zRqyUE2Zx1uUyGSwdghZBMxE61n0nHC
exkyHE+bmV1Atq+xT2ZTJMNfiV3+tVno/JQ8mBmiQ4bnrurnr+eg+8n3+Lf7
dMlQEuMewJuL7usFbcPSm9H4DkPXo5GDd5qrvNInwyGtDrFreajf9NxbMA9k
WKuwqEkpQPelmu2lXmZkcC08YDJfhM4fT40mR3cypI/LJMaXof7irPUXa08y
7DhG/rTrDaqfvhfG9p8hw0jqQsQicllQG9dWXzIo7iXruFSg/Y303yVyngwn
/5J99lej+nOvvLw6hgyBzTWeR9/T4XraSHPpdTJc6S/qVqxH/eEDoa8FsWRg
+1J06Dcy3yOn5eR4Mtirtx0Nb0T1rohDz+ceGeR8Vtmff0D5Wm/6VCGXDFGt
TgIbP9Hha2NAJTGfDJv2hAWxdqL4+XC/RbCQDGK2V1PbkY90zPxeLiIDd/Zs
qHc32q9vd1Q7XpHBxWazTtYXOkQOVug3lJGhL+jhP69eVH+HRk0qy9H4oz8V
9L7Sge3X1hN51WT4kW+ZUd2H8mm+LyOigQx37o/XvRygg/oi57PgJjJYr77v
9BpE9X5Fq/rMBzKsKxGhyn+nQx7zpf4jbWQoMCaNBv+gQzhb3qRFBxn2WCdd
IQ/R4RDnp1WTTjKIzkjvqEJm4leW3fSZDOyvx/6bGabDJ0FztQ29ZDD/PJN6
cQTFh0jQNkofGb5l/qDzjeL/tzykS/ST4fyWQLNYZCvJRlv+QTIcHdLez/sT
5bP0nBvrDzJs1ij8EYa8KisbuDhEhpsHl4vHkdvIuy9PjpAhyfeXw4ExOjxS
8Loz9JMMDyvCI/ORS9sKXV79QvE4an51GbkhfEo39jcZNp7SDt3+C/XnWtps
zpPofevsJcOQJ76dbdebJkPzTBT/c2Sm2KKH/LNkKI5WIPQjixjNnh2cI4PX
UMcoyzi6r/3euP3FPBl8dcqNZZA3p/gKXVsgA2v7wMgGZJO9xd8cltDfs4Xc
1kY+vPSnYNMKGdTHHIXUkd2zN4fyrKLP/5iuk0MOsQnY/20N7X/xjgdsyDc4
S2WeM1NAZbXhEH7+/ZKFX1dYKTB8wVT2KXKRi/7ro+wUONxs1uqPXCsWHK3D
SYEPvx5baSN31ryy5eSmAPPL8hv96P1HvZfX9/JQIOZArnsE8hLFYOEJHwUs
5uwHZJB5W8/XRQpQ4N2PkqFstL4yF97cOSxEAabFq4EbkDU0V100RShw7b+c
tAdovyyuh7H1EChw1aLx02m0v84Gle35EhSII3zmr0T77/+LKeMikQLqJCFl
buTkPRe3q8lSwGh8/DKOp7yFaiFmEgUMCtooGSjeyh+x9n8iUyD/QCdUoXgc
YI8MDVOkQMijnh99/XSYef52v5USBYKy//T1fUPx7cwhq7KeArtGSmmfUHyv
r778um0DBVwtOHyyUD6cCY1eWLeRAu0en4QHu+hwUb2xbkmXAl3czfRUlF+3
e3kTWzZT4JC/CvUAyscXW69vCtpKQfmlGJ/ZhuJtPta7aTsF/pIOnGRuRvUh
6+P2BzspEFxxYjka5bf8QWFh/10UEG7xyxdsoMOuZ7cKSXsoYLh8Ipa3DtVT
r4Rxb3MKhIque9NRSQfp0WRX4jG0f1EElsFndBDw1mcfcqCAlF5mzE5Uv5hW
ujKeOFEg7Nb9LxlP0P1BkDBAc6XA6MlEV8d81B9sibXz96CAM+ufiXZUT+Hy
JfP2cxRo648dKLyL7gNK7luvJ1GAeuulUgM63586Gwowt1FAIF75HNUM9eNK
75Jn2ynAtyGut3A/6mdGTZWHP6HxdtukUfbRQcrDARp7KCD36sxW7j10iPC7
5J0wQIGEQLaE0R0o36PqO1WmKWC6YpEztBnFz6OD6RZC8mAW9yb3HQn1o788
tDJN5aHGfob/5twe4Aq/avO3Wh7ozwr0w3P3QD154zL7dgUoHM/wJBzfA3mB
ln7vyxRg0ZDFt5G0B2q/2f/ZqqUItqq+w6uDJtBlvjDplq8IRLMyg8MPTYDU
en5qt/w66NSijJS5msBV7sD33bfXwS3tquRSNROY2MssrSSsBLYnZ2tEJmhw
JdXPRyFSCdauXFBueEaDrPc69iqXlWCvm7vGuyIa1M5OmmheVYIsS5ct1U9p
wEQ/JbftuhLEPPMwe1VIg4B5+3qLBCUo0XFNzMmlgauZCenif0oQNx1yKSaD
BjuZpRv73ypBfgS5yDSeBg5q3cXDdUpwm2nrLP0WDUKtE+6P1yuBbPrYJloc
DV7lC/ovNCtBsBtbJTWWBjqH2ShCnUogk1g1rBVDA/Kz3/7UYeSoonOil2hg
1JfjuGtUCfWt9R2CF2lwhNtt394xJdA+QNPkC6dB0rFBivWEErjynB5lC6OB
IF9Xk+e8EmT/Yz89H0wDtS23X/guKEFuIGvLTBAN6E4HHgYvKYG97wHdyUAa
RJU2BkStKkGaWQfLqD8NMr9fcbrGpAwRv1ndf/jRoFpg9/5bLMrw4kpQZ78v
Dfr1WfWS2JQh77rOjq8+NFh1rpRP41AGQU+1wh5vGvwPWVefgQ==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$92445#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$92445#4"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$92445#5"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6], 
              Dashing[{0, Small, Small, Small}]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$92445#6"]& ]}}, {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, 46.89476648847942}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{100, 10}, {1, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "ClippingRange" -> {{{2.3495766255041283`*^-7, 
            11.512925230012566`}, {46.89476648847942, 
            55.024731521645336`}}, {{2.3495766255041283`*^-7, 
            11.512925230012566`}, {46.89476648847942, 55.024731521645336`}}}},
          DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 46.89476648847942}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"signal transfer function,\\n|T| / [?] (log scale)\"", 
             TraditionalForm], ""}, {"", ""}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{100, 10}, {1, 1}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
         NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}, TicksStyle -> {
           Directive[FontOpacity -> 0, FontSize -> 0], Null}}],FormBox[
        FormBox[
         TemplateBox[{
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=0.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.  ", "0.1 ", "0.1 ", 
              "0.1 ", "0.1 "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=0.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 ; no BAE\"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``; no BAE", "0.  ", "0.1 ", 
              "0.1 ", "0.1 ", "0.1 "], Editable -> False], FontFamily -> 
            "Monospace", StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=0.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 ; no RP; no BAE\"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``; no RP; no BAE", "0.  ", "0.1 ",
               "0.1 ", "0.1 ", "0.1 "], Editable -> False], FontFamily -> 
            "Monospace", StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=1.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "1.  ", "0.1 ", "0.1 ", 
              "0.1 ", "0.1 "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=1.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 ; no BAE\"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``; no BAE", "1.  ", "0.1 ", 
              "0.1 ", "0.1 ", "0.1 "], Editable -> False], FontFamily -> 
            "Monospace", StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=1.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 ; no RP; no BAE\"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``; no RP; no BAE", "1.  ", "0.1 ",
               "0.1 ", "0.1 ", "0.1 "], Editable -> False], FontFamily -> 
            "Monospace", StripOnInput -> False]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
wXSuQISWjZ7/XoHE7q8s4Lj9WE6JO7o+WOu7ckIJdB9vKyIeMaBl6YUVbj2w
GM5LO7pqahvSfDJ+XswmZ1DW7VKln+eaiCiY3/J5kJKQtJ5+nqvXqUu8E+kZ
59xu+nmcyNm9kW7BE5S3bcP0/dLLN/ftFtgjByfXkFaw3kL5C2cMzwZUX1h5
RKRvMaH+X3m3e//Fu2nll9vxo/E1dzba5ITG13gN5cXL8XnKRy03+vrS5lUm
1CmqPIQVh0lL/TKiNY5Oeh+J/UbxD9ejn/eIOXguevfOGcqsyxL6+vGz/cV+
gU4s0La2eB22d5MGaBpebHDohpcFfT2xpaH98Rou0O84UUZff1QK7o0wEIKp
7UNN+HyOxp3tXnZM8kBJLnzao0KlCQSWXzq5e4pyrkGWfn5E4ivv680+vykl
hDH6+ZGC5dTKy2eYQdLniDp9fXqFvfD9NFY4oelCr4d/CbP175vlgHfG0XHY
Zl62JOgUkRv43ol9oJ8viY7TPSrFCwPMO/bifFzk2p6gyjY+2NedrYjro1v9
1Mr8J4Lw/sxZUxzPxHI87W6WCIGFI80O17uC8aI8T24Jw89xs9sT2B9f7t5W
niUCK1t5PmDeTqjmXN4TFQkw3GBtoo3fJ1p3eWxysTRMXDt6gB3p92DDj1Bi
lwxcz5LjaAxF8XBjGE9xzwSlklmVvv/5Nx5Q7PfSz1e5RAfcC3vOCS7MnfTz
UWtHw53GFAWB+0h5L/bnddT0HRs4CJB39Mk7vN6a1E87bvtJGEKSkmWncL0Y
f+vTlj4R0E67Oc2Jro+r96Sf6UUxMLOuV4/A+8eEvIMq6eKwUl/eYQDZ1sZb
ekcipMD/nXkK7kfBz7d3a5CdDBwernbageqFgK6dt1XWkoBll/y2Bvy+W7au
uSgeMuxuJvRPXKTSPL4nTX5SnqLEfP9K389n9g2aXdLAAVqFT6Po58Pk7zyR
iuWCksTqJ9geNc+pXX0e1aPfqV14fjXmCynvjSLAeUnPLLx/vunEesl93sJw
6BB7JY4HLScnfTYZiEJLeIE0jm99hs5Nmzql4ZVLxakqVP+xv0m5aNEiA5ov
z6f6o+fLbxMcd1sP5cvP65K4ilF+V3PhpfZHJajJt2EjHjf4V/yz6zNbhq9n
yKzeZWyaGwqoEyLYP+SOzXyxEyBCl9mHq3g/+HNzXqZzlxhoq/KypCD7Xswg
SSKABBdbXjwhH6PSyoxXLXK2lIOHeyRZtaqoNIpHwVTVODOMaFynr8+/O/A7
W/sEJ/y0/XSBfr6y/w0nLBKEi5LdWXg8OQP0jtaOCIHqjdd2eDzFjY5aT1wW
hReRHOqYt+vwTNg2tE8CTNeBiA9en/txMxaf9zA896wNn/foLWANcUD6lPDQ
0bMR6ZPbysTY9DNKMDTc9zMa6e1cz7sYQTcu4Cz/sx83vIH2UdiRB4Ir+Fbi
+/1Uos6cEC4InH7t9P22rMTywje+QuA5UmKD852LKRPmrk4EMGkxfYT1WPhQ
vlnjbjQ+K++twOMTtN/X1MVIBJK1i6zxfltFHuGg0jJR8Np4vgTvrym/sFmx
c1ocBFi4LXH/K+ahRjOeN1LAVK75RAbp90U55qfqj6Wh1TAhDfNzOrE7T6ml
k0B6cDawDdXvolwmv9+WkYEkfkW1rQPFYxutc/xHmKBxfJy+fmpodjY0t4YX
uBcL5+H7KdffPNNhJAib+P2W4fsJ3binLzZaGvxYuafsUX5wdPH89WW6cvDK
OVIxtJFKa15mP6NziBN0K95n0NfLD9Z/bh4XAML7gnN4fKy5s3N3dRAgRyyt
Ha93rRMJ+tj/Rg7erXJw2rEVxZej3Us7YpTAtUro5zDKZ3f82CaY38gC5HPD
9PUdd0Fe3m5eATji4NiF9cb/0T5nrkBByOwNjMfXN9AlKvBNRQ7mDyfHrejE
+62Ecdv1gnCVIsuNPz+9KEahV4oAItFsm/B6gc7bHJmWTEnQsU2SLkX5Zff8
uTrNl2TQy9WXe4Dq1b1PYrbNrpeDCuln9fMtVNpd1oMnk2eUwPlapIdjoAFt
jcieHYdfy0Eeb6JCsDG6ftFb8w6oHuRJ5aMGoHrwa5KQ4lbXcYpDsuKBDYVG
tOR9T0ObiQqw25fv4ecjRjT/Y/Xh0imLocPceT9xuSHtllJkt8LaWcqboadj
OYpUWm6y+I4glF/nbKyUWo7y6/Elei5Z+QRQE5VX/YKuf3ti3KSBxAyl4/mj
nDYxKs1syVc140ReuLVK8UId9i8N5+B7khJwsUB46yrkLz4DuyYMp5jhtehD
uWyUTy61IDa0zQjCkJACGT+fnRIHbqmuJMGmFCfjGKRPJrNaCjcLZeD8K7ME
/P7NHQWLZKocSGj+j3jvjkT5cdYPu/vdPFBTbpdSieNTUkDBhUIiVPdxXsfr
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
oEPKu3qkj3HTrnfe8BOAY//V9gykp0xRFTLDCwR4czj8hxKaj3B31jPVU0RY
2LI/Gb/+z/qrN0JPNL2LVuqpKt0UDI1LkH2fNK2ewGjg4oaUNWuQnl6pnwyP
v0gHR2WcGL+YIj1MP7bodJIB1k3kVDjgvELhiWs7KWshf1Nm/DGkp12hRzV+
bmIGSQ7nBAOkp6nz7io6UqywCeXVGsj+tHq+P1JcYgOoYxh9krhST5WY6mbq
mbRSP7VgptAkgMbbOf6Kj89ebmDRUpLyTF6pn5KXiueZSl6pnzLsT5CoS1mp
nxoMOX7nN5oPuxveUXYM/CDWUfioG+mpwvDncY0ZfqhKDaqpR3r6S+h4zvUP
AsDyO4Ve9sbK+UcE43t7G/LweC8YDncIQWMD/k8yBdvN6a1knyYKbnXE7t1I
TzOKjlk8vkCA+v5ne8eRPXzacquI2ZcITK2i+rIfkb0NxzfobyNBz/EM0/tI
T38pK28vfSINfi4vRudX1T+lirc+iMD/fxzYrS79ihE2K2yp4UN6qit1pFez
mAkg45h6DtJTAdkaq4fZLNDkFZARj/SUtbLl5McoNhC10tYNQ+O5np6rcPMW
DphwGxQ3Tlo5j+hzg8eNc2h8HEmSPbf2E0C/mrCoOLZSr2QVO7+ZH7VJ4gdc
5B6uBfHzaxl0kJ6C+SzDTBEz7Bev5i9DejrXO/6RI40VGGOeOjSg+TznyOls
58EOtQvmJovo9191tsddeSsKJyv3pdsiPQ04+f5YWT0BzF55Vpeg9Uiask5i
uEeETT86F20HVuqZLm92CC49p41RijqayhUIIMl823wU6Z9qUtO2D8Ionk5X
FLNC47v+q3fRi2wC+OVtvnca3a//BrEDz8+7BhKz8fycJNmrcx3pqdCbdlFc
T3mAxWrqEBEqO8M9LND9tlVwCyy+I8DY9TTzTPT9HYcj5rlnpaGabShc3xfl
p0Hf5e1ZiHD3ZkPWK3w+q2L4QpGefuvTOInraf/4z0JTKwLsY547UYHGSyn3
YrqWHhEWC6pLcP1/1BmsWddJgKBvDJb48/5ayHw0tJ4IWz7VP25F15dZGyuf
LkG/76HxDddz1gGlT33+KJ7NfNuRgn4vw0VCvBLFpyETG2/h8elF7sQFCyoZ
6BKKvi3rpY010xrfvklLBK2iL7LM6PMnYmm6R2IJMLmOdZ8warePKRdfbCaA
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
1dDE2n/U93H8u/3/Ac1RuWI=
          "], {{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwd13e8yHUXB/AfEXKRy3XJLg0kDbN6jEpLSyVFJAr32qts7nXt3aWszDKb
khKlnqehNBUpe1VmispInvfpj/M653zO/H5/3/Wr3K77/d3yJEnyY74kCf5A
/iT5jlA5JUna4+OKJEkJ8u5SSXKKfW1xfvReaUkynd7xwiQZlpokjdKT5Ejh
JCnJ3hy+qWSSfJg3SdLOT5IsOVuSs/hex7aTX3NYC1j/QknyQsEkISZPqbFR
3Bb2LvKfB2sj5gd6V7oWk2/ZM/V0gzoL1U0X00zwQjka8Zmmj4NyfgW/j36C
rbZ+lUsek2uImGy+J8XX5PsNrAy+iW9a0SSZjS+gnxJTle868b+qORK2Xozh
JE/L/R2svToperkKPpfvcHlPi6tGTvisElONbYq87fFdci9nK8D8On2T+b2Y
/xN4Dv+S5D34afa85F3kGeROehwjd0PxD9E3q71C/FF6O7Y0dT4jtzDIezW4
EjZanY/0PkSPrfCn2WqJfZj8l3rz5BuJz8TL4WvY+hjLCXO9Q90J8H6wler0
gP8Jy1VjL3s3fBR7A/w0+0b1qMn7cm+Way7lSXwRvaZxnGGbiX7QdwbfDD0V
lbNFrB/ySP6n5LnaOGrDOsBOih+FZrGVx7P4F5BrLftWebL59if311d7OYca
7z69jeZfynz/JMcv8ClwYvK9HB3QeHnS5Pkblsv3AGMt/rPoY+ln9PEwOV3v
i/jfiHrLkxLfBraV7W91njSfqcb/Ilsd2Cl+P+trdPjLWQGfxP9dtm3w4fp9
W+6+6v8hvqfYAWwD9L+f3p1+AX2LuI6olHp9YGdhs2Oe5DoizyPk0uTn5Fmg
38V8j9Jr8f8PeSS8CHkbv6Fyn43vZXyT+f6sr7rw0/zGoKf0vkGNiuT39NaL
ni3+PT5/iusj70AxA+nVye/w62Hc9+EL6GPl/zW+K7lwcHgnNEGOxbBx7P/A
u8gxVf3nyZ/DO6ELrdMKareElaEvEddV7gb4dtgU/r+IO6CnevQz8LGoEtrJ
f1ScH3Ksi3NDvdiYj8MWxt5kv8YcDAJfSV4jphlaSM7rUDkGP49/R/6T+R0W
kxJnIJ8MdC7sgDn4UQPbzt6KfJH4wfpZyqdhrHP6Dvgac3fMWFb6xvVjfcS5
GWcomsznfdhgOfKo2U7NwfQa8LXsb+H3479FffKxWNt4DGkrPDMO5aiFPYrK
si2jl9dfo5gL2PXobKxt9IzAi9guJhfEe/j2H7DXFfcx7Cf5H8VH8yvOPoTt
qjgnjGtNrFe2fuTPjecB8nB97xXzO7/ucX6KOwkbzvcsqiOHEklbtm38O6Ml
8Dz4CHwB/3nsb5qjTD6tyeXgy9lX4I3xXbBhcu5U5wbyP7GG0CVoCp//xpkr
z1C8Jv09+INRy1zup7+AjrMVQ9vhXdCMuFNiP7DV0ON8ttrkD2ED9FHKt2pJ
3qdmG7bybC/Rb0JF476Lbwabr+4gdf4m3wg7xz4RVUH/o9eDf0JujYbRr6av
IzdHPa3fEzDlkh2xvtE683Be+Mb+hffC/zL2us6phjFHYh6DV5DnZX43x1lN
vkpPeazdMtbQnpgj63KnuP8kyb+X5yR+h/FP5biU/GHMhbH1i/x8s+jXxFpk
ext/KNYC/mKsaTX/YM8n93Jy8bij2eNh0MXY88Xega1iqG7e2pIrinsF/gZ+
C7435kutBrFcYZNhR/DL8D36+Ag+0TfZBOuLLo/9qdZiWDbbT3r8R60lxlTW
2nuePQtfxucgn7hSd8nVHS0Vnz/uh/j2ca+L+4KcgR6nN4wpIU/hczkqJNcz
9HOxB+Jb6CfHOFYbz1PxBhE/HD5Q7U8ip3Fkw3aq25Zegm13nH3o/PiOetoK
H8HnRbZ2sTdjLvkfYvuL3CjOEPwZ/ldED+a2nPHkxnphOxlvHBsnJ+5keRbE
eyXOMPaP9KXFZE+sIZSu/wL4NrYJ/Bax/Sr+S/pQ9TLx9rDG8Q3JuXyrogvk
O6Sn9fCuFmGWSTwlbkS8KcQVMc4rYXnlrKmm9pK94nqhZfIUxPOpfb48i9mO
if0KPp5/Z/yJuFc1Osxc7mZLlSPDmFqz3cSWH58qR646fdSrRv409jJ8DqwJ
/yvkHwl7Qn+PmIf1bO3y/vt8SvbFXYr6shXC8/NdAn8yzqJYa+JvjqOf/zT2
qbDqwemfwUehlnLOU7uGvraZi2bG0p59Jt/6xp5fIe0n+8X1iTlDBfiMjjcl
n6VxLhtjF/os+vViOsAq0V/luxJvgqeI2cW+j21I7Im4Z9UuQH6W/Uq0Id4r
fBrp+wV5mijcj30Av9P4aPZW5AnGWZnP/XK+qr/KPkzp2CMxF/F9jKcwvltf
PczNMrZxxnZO7NfyDI97kM8uWMe4j+gfR5/kgvF2EFsjzna9TKN/Hj3HO4rf
g2qOof/se/4Iy4zvqZcygcWbAS0XkxJviDg7xCxn+41/p1izeAVjKyGmDfut
sEL4dP6vxTmGP4t/EW8f9cfG3pFjojFv1+9F9F/4PI0O8rsOXoT8EvwtObvC
ZscdFO8LcRnwyuTX4ryi34rvj7cP7Db8AnxG5DNPZeWqSX4u9qBcX8b3II8x
zrlyVmUfB/sUVhY/EHdhnPdsReNtI//L8My4b+N8gDeVZ7Hxzha71JzfzlY4
1hf/q+Nui3ckv+n4V3HGkE+bo858i5HHw1rLNSn+A/iUox+Mbwzrj78vf7F4
+8Qbyfy8wt7ZWHqL7QYr7nv149sZfjH99Vgjct8W53vcq7Bqct9BTok1DL8G
fR17Ttx8vjvkbS7PhJh7vbWBP0AvTz8U92XMf7zZ8FdhXdAl9BVxHvN9k3w7
uZg6Pa2XNnp+Lt6bcWZbo3fiReK78ZkNvzb2Gd8ZsG/YJsHSxTWOs0jdibCe
xleHXoF8mP9AVBxN45uh5mtxBog/hbqST9hLW9TKwpvSi8Kf539drDcxM+kb
oxb6LM4XdY7Efwr5sLiK8CN8B6EibKn4uJhP+Pi4B9TsRq4C62fO3mBfRb4D
z4zzO/432DuQv4dfG3tY/3X0c9b+vSveJ3Hu8a+FZpG/jT2AzzPWybHezP1W
a7GiuA3wSrActY/yH4wmxb84vj3eT/AV7D3I3fFL8SpqrmS/E2XHuw12gO0b
ee+Odwh9Llvt+G76nZ03+fcn+zvsDJ/02F++w0L9Tol1CNsmTw96JT1VjntH
7BD0stiScR+q2V1Mt5iTqAXvGXOv11vi3xF2Gf1NvhX4No17lO982EG2bnEv
kauz3UMvHvMRe9g3qYPnyLM78qFN7JvjTo21HvcR+1B0CJaGZ+m1oG83nr6S
fSPeC6XCetIvJ6/id1fE0M8Z3714Knw+rJwe6uKbYYPUnWrc9Yy7sXHkxl6I
fWusHeJdw3eAcSzyHS6J8y/uKt9+GF4q7m3j2hFvAnlGxh7h87v4NLm+hS8T
lwPPlad3nP1678XnCvJb4u9G0/kcht2HSsAXwOqhwmJKy/M9fGr0KrZK5I85
QJPVvJm9NL90+gSxR83nqti7+jquj1Lss4wtTexqa7Q3W1V+b/O/B+0j/wH/
TdwRti30Zvjj4s/ou2TMmf4W8q0fPZnjw/Q58C383pG/Pnk9W5u4W8Wl6mca
27XwD2Af8FlNbkFuFOcjPkeOYnIt01d5838M/qeYG/EN7Lfj78Y7L+6fGGfs
a/II/k3Jl/I9Hue9b5ONl1GzCbw0uUHcO/gdMcf86sRbi34b3gpvjH8dZ41e
7yT34VMNXw27NfaSubiX3DDeXXy+JB/lcwO9rzlZG+8OWCU12+IH6Dn8bsKP
x1kX3xX/P/eukB4=
               "]], 
              LineBox[CompressedData["
1:eJwV0l9ozWEcBvAvNRHWxrbjz4VJ/g/z7wa7kQsXrs6Ok5VaLZPC5M8O2rJl
Ow6nRVsZLpaS0W5Ibli5MCJyoZYLG9qdZUpko1byORff3vd5vs/zvN/3/f2W
N5xINs2IiNeqfGbEXaBvdkTxrIiBiohHuB247PyIjzQt8HSBUy9KI27i3+if
LIr4gXuLq4fH7RMyruB7+RpLIr7PjdiKXzkvYohmiPY8/oB9Ce50ecQf2jaZ
PWYY1iuS0cnzivYiXEW3iuY5Lqm+lUX85m/V67AuVk/0m9VjnnUJc8lNwk1y
x8yw2n6SrhdeIa9ZvxPuhh/IXOjMJfAz/qe0GVWPr7Wm3aeLZ8LbVOr3LYho
L/YW+nUqh19Dd856VN6I82rxa3HH4O30u/gqzTWqd4T3jvP74b16B/UOzTE3
/XH6GvgTXcq5pXSj3iXwXYW3ohuS3eHuCf5qc6XgCW+ShV/ytuutZ6lSG9RG
tZ9mUi1yz7zc+zTv5X2Qu6nwreSO4a6ZJ+u8abl5/dsy03wZnnv6Of0puJrn
sxk3W79Ypwr/i3qoN8C/1P6q/QW+Hllp5/6Df5lzkOesSqkK3Bmabpp+np1q
BN+Kb8HfsD/s3G3wz8L/p7+M9pQ3zJi5Ds65w273/qp/mecvT9DUFM5T72iu
0wzal5mjjaYBl8ftwY2b6Zb9MO6Sb7gPt0XEf7spbhQ=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$92531#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
QYxjHq3pOvqsA2tCb41nx/4P9cKaHA==
               "]], 
              LineBox[CompressedData["
1:eJwV0DFIFXAQBvCLSgpUzCwf5BNqylIrtaA0hSckhDlkBdkQSjXWVjY5iM9I
Xhk1lIOIRD4xshoKMmhQhwoLooQoKlrSaArSioZ+bzju7rvv++7+/81d5w6f
XRERE6J0dcSdVRHDRRE/1A3q6YKIDysjHulP5kU82AhXD+RHvDSfXxNxEN6p
Pg/bUhwxtDaiGXaTboBXK3w3zWV5Bu/TuogReIf6D85peBL2LLeff2JDxFZ4
GY8MbL1+CXeUpk/eJJ6YXxBzdJWlET9xjugn3NvIr0K9jPdGf0nfY57Wv9Yv
8hxzY5l+Cq9bDMGOyr3w+9407Y4UzT/+icKIcrfcwLkN/wIbd8s2/Cuw7XJa
P4ef5b/XvkrYuLoFd5/+Hs8kj0m8Yf1VuhL8jNs/42ThVTTVYofYKQZxjuc0
bqp2Q7O/XeYz44ZyfUqfp26n35V7b0lEP79rdF/x5nlmcDp41JjX21srN8i/
vb1ffMdNys/lBZq/dnXhP+T7FPeiOCbueks9rwTee7wxmv3io9l1e9JmxTSP
zb+Z34LvUbfymsU7IVLqpdwOszNuaDI/BHtl9kudtXvR/JT+hX0HYEX+6K36
HWyEfxusjv4/w2tgMA==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$92531#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6], 
               Dashing[{0, Small, Small, Small}]], 
              LineBox[CompressedData["
1:eJwV13fcj3UXB/DrduPGbaXsza0oW7IlWvZoUOgp1VOKqGTX81S2hkqDxtOg
NI3CY2bP7JlEZWXfZBO9zx/ndc75fD7nfMd1Xd/v71e2W68OT6UkSbIzNUke
y54k53IkydJCSXJHwSR5r3CSlM6bJCl5kuTvnEkyDj8zf5I8zo9n3+ZOkqH4
blclSTna7rAJsPLyjwokyUu492H/V/MEf17vy/p00PsI7APYteIxav9UMwv2
XdSrHab2c9yTNBNhL8snyhfIr+Nn046kS9Vvmfl+CN9vnnv56/E9+Ok0n6sd
onYKXQ76U7g98GLGvGA+C+nmyDfAR+E/kv+gX8W0JDmj3xr1x+XD8PtwR8yz
J39R7RU9s9PNwhcVL4IfVDM15kvfHPc/2GR5JfFa/lq6/bAZfC6Wlf4peQb9
F/gH6ebpl8ZXgf1obgvoitKdgC+mnUaXFfYxTR2aHNbXQrwV/jH+RfEqddfz
B2IseDp9GbrUXElyl5pe8Enwh2iW0W6O/REX45fgKtJ8j8+wJ5fFGdb9CTwF
/wvdS+wGdhy+HLbW3Iqb4580N9C/YX/n6btR3Bs2l/ZXum78b/pW1PcKLqf8
mB4LYKPMb2m8J7BPWGv6XXqk6zsW1xI2xzjbaF+V18CnW8+nanbiDse+85VZ
db3XyVfQHMTn5rPp87S4uGc3j+Zhtlz/OrhV+uaKvcBXUpsN9pm4Hu2v8I7y
IfyNuL36VhEfws9Xf0jfd+GfWHMeurLm9gyuhNr5dI+w3+MZ8Av55bjsdBP4
+jS74ENZ1VgD7LB+M/GtYiz9n4WVpLsqvqd4J+geZStwr9jHpsbNHTndPXQX
xPXpMo31qTinuu36HaBvJZ9I14But/gIzTB+vvXvE1cTr6S9LvZL7x1qjtDn
lZfTJ6v9LmV+fWCl9FhA3wH3b74uv1qfPOJMmkX6FYetjOevT5r4c3FDdb/R
DGdNYC3Ntbq4ovhonBf8Pvoxxs8nbo5/Dl46vle6x2KO+Lz8An5xnEM0q2ju
pWkgvoj7LN4hti6+Obqa8e7yX9A1ojvrvfsdP4LVVjPWPt5CUyPeSZrKcU7F
s9B/FryguIo5vW0f8sv70pTRZxH94ywFno9fQj86vkna1TQdaS7BJ7A26trw
k+CN4X+IR7KarIbxzhpjfZw5sQ98BT2uUrPcvmaz9/3gZdUtpu/O8rOf4tyx
li/5m3F7YJ3UjOJv0vMkrpb4nN6r4Jl0R+O81X+4efaXV6Arp3YJ3V00T/D1
4j3A3007KeYR7y+smD41YCXEK8xrjfpOav/Gd4ZN5Nvybfn1fE09blX/FV0T
ur3w++Cj+ab8jfxqvhI7QTM71q3/CHUFYANg5dUViPOB9hTuSb5AfDPmfcJ8
lqpZG2ed+RzC51CXCv8adovafbSvsGbw2vx5XBu6k/irYQPjDKZbhusR3w/s
ar6a/m96LxZ6b5YZoyR8He19cZfhu8Q7zf9o3Hb8N7imuP3iV9mt+Pye203i
C8bcEHuu5/Xwv2gHxd7TL8ffDevJXxPnEt0i+Xr8/XHXwL5g7dm3sGawA+Kj
dK/xt9HWiTM5znHj1bFXHxrnVNzZ5jYbXsj41/CD495VvyLeHet6iv9Dn4J8
KXwFtdljrnEXyr/jb6X/E58H9zp/O7xuvLfGeMv+XKRvaz9Px30avfDlo4+5
PB93tvqV9L1YIXaSvrF3or7aFfSl6TfSdaZL2KQ4V1gt+GT4bbCD8jHxXsbd
DHsh7in4KfWrYL1ZFmM20XeLusJxTuAWx10L20Q/hd2u5hDuDXYHrn7sA1+Z
ncX/J+4AmtXwp1kDeF7rKCKebS9X6bmZZiq7g+4w/M3QsUvWtRE/wr58ZG3n
Yj9iLvB3zO1Re/Tf+I2i7if6Z2KNtEX5v2jeE5eh30LThSaFndDvyzhfcXfF
HYTf6bltlec2r2m0d9Idwb3FGsb7HWdu/N4w3kjjzlXzYtzNdGvwz7JicVbB
q+PL8j9Hz3jm6qbLvxc3pz9KN5Ztg93JGsW7jCskTjP+S3FW0q2F92Gp+jXE
FY/vOu56c9hG05XmjDwL/1W872y7/AdcC9gx+W51b/ON2WLzGR3PjSbTvl+k
e5lVoV2HX4N/jt+DL8EvVdvanmyneYAmlXWFfY27h/0c34q5bYBNp2mJPx5n
Pfwd/uboGec/zaU4Iz2PIXxVuvW4dHhfviRbZOxN8X3RlIu9ozvjec/gW9Fn
0rzL9uvdHN9E/Hec6dYxT15EXWF+KKwa/Qb8Lnk/PqtxGolLiU/TjTPOT/Es
7UUdY1SynzvU/Utd1rhLab+J9fHt2L3iucbZoWajvIQer+oxU03reJ/w77G0
uKPwt4ir8Dk9y8s0x+hbGWNe/HZWNwxWXd1GukOw/vxW+tJ8+bhT8Q/GHtmT
bPy38I7sij6/0G9Kt26aNriT8LzGHRdnP9uMf0W+Vp+qcXapuUJbRLxdv9es
OQN/wXqGw2vosUndAFaGZcS3AH8Inj366/cdfAe8E79TXlucx9rq6VNG/1n0
bWn/wo9nLfHN4vngttAn4uPi1vZgvvyYsUeoqalmM24gK8t+hXWDpbHJcacF
Rj8b3i7OJfn7cQewy/qNt5c3W087fVNgI+lq0W0RD2KZ8Gzm2Dh+a8krxG8n
Y7dQl6b+LdwuNQ+rycGm0Nwf740x58T/Hdr28NOwD+JOiPsrnmv8btE7lz2o
q0dpeZa4s9RdF2uM3wrqb1S7FT44nitbBl+j527cI/G7InrFbz7YVPwB9ee9
j2P0vALrHN9v9LTG1+PMUdchvnl4Pnl7Yx3HfyhvFfc97PY4g+L/hzU+QZuP
zYxzA3aQNjXmGb8v4ensgTiX4lwWF2L59egq7xl3PK5AjGecAfzsuCv07SMu
ygaz0eZUm9+G68s/z5+g7yW+hg1kGbDufF7Wn82Ic5ovzAbF96bHo3wu1o9N
i7Nbj97igvGbzjy6wHrEb3Y2K85b/pz1jDSfIuIX2D/J1iEl
               "]], 
              LineBox[CompressedData["
1:eJwV0r1L1XEUBvCjXM17ub6mBYFDg9pkoXB1EJzCOxVaOjRkuhgEOjlm/gFa
lma52OzLUKkRhImCaw0NlimiBgmNIjqo+bnDw3PO85zznO/vcq/3DnT050XE
GNwrirhcEnF8KeJBMmIat8ETehkcpiN26Y1muvFnXjtO4D7+MT+Nj8ojvpVF
LNJTZg/oD9U/zN6pisjgbX4tb6Qw4tROBr7TfpobghrY5f2TVX/VbXvL+r/F
Ee/ljapn8Jm9JuiR+ctOWmanujwV8UxfC3tml8wm6fn0r/oDOQv6ZEVEg/wj
+Tft5tOe8z/gF7l77n/yrln7Y/qP9HP3suan7CXsb/Bf8l7BOEzAfzPhVkbm
bTNdcqrdfM1buMLLvUWfZ2aSNif/DZ7HzXY3vbvLzI7sDbeG9YWyWmk3cKm9
tNxGb6jj7dtdgfu531/GCe0dZGFdxi17KfcK9I/NrHlDi9w/9GL9Ev23+i6t
Wx1u9Of+D/CI/oW2hQf1lbwO33NNvSrnKX7r9gU80E4p
               "]]}, 
             Annotation[#, "Charting`Private`Tag$92531#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WV013UUBvCfqKAgMBgpObpjgHSzjY7B6BwpKqiYIGFhvKAkRm8wQEQF
O1/Z5xjnKKAgiB1vpJHawM998Zz73Oc+937jt+9/abnzs+fdkCRJaokkqVg6
SRaUSZJZ5ZKktnhrhSQ5SFsFRSlJcqxykmSpdSmbJJNpF2lrKyZJG/lKtX60
UWIPnm3iGP2ptH/5alRNkjS+FfRKtJO0evJW+tP5KtPK4qfoNXnrq7WWt1Pb
YN4efbvpVfhO8xyR75dXlVeDLjwN9FTHb4eGeBv97fWf4M1Tr0E/o/eo/IDe
mvIHnLMOHMKn0kvyD9O7Wp6q/yqtWE8t/uP4FPp3VZJkNJ6B54gr9M8VO4tT
rHOSPl4sDp9Z++SPQi14kKcuTKZ3sdZh2jS9w+VrxDXy/nq7yqfimbCSf074
xalqp2gvxxr8m+1rIV4bHlJPg9Lm1qZ/T3sh5sMu+nCYYc4eM27GZ+r/SK0E
/whagbxQXxatp3wVT1eYpuc0bYy4i/4KPoF3C+8ivA48zFcPfsBLmbdWzIXd
tBFQEo64j4/jfLBa3g3O4K/CYxHl42Jf1iknfkmbbJ2R1qyLP0KrH3PwETzr
xAFq3fB03+om86fT9vBkQymYqPYJbZI5W+03m3+AfI1adziLj+XZH3ctnjej
vVmL5fvVx8d7oJcXv6KlxbfEG8DRuBPz1ovdefLxGfiLaiPhFvhUXtW8DtYu
soeB8U3oPeJe+c/JD8DE+BuQZ5mzJDT1CZACX8sP21c1c+rhC2kNoYx7/lG+
IfYR70p9oBkz5XvVR8Ubhs/kg83doTaIZ5B8Lb0nnMdfi2+ivjR43BlUiPX5
v6FV1zMKH8JTX37We1ik3giOybPpO9Xz4i7t45r6LPwl9Zz4e4TP5Tfa70az
BuPfOs86ei+4IJ+u73Wxsvoysb2Zq+KbmTtbX4P4G+FtDMfxjTBIbbzabPyg
eUPi3cNinibwE74JDqnNEYfCenpv+A8fZ41O+uv4Nm/IH4dGsCTund5UPCEf
ybdZ7CHeKQ6LO1frAxfxN+EJaAxLac3gNv0/x++hni3iXOhlv9udaaf1hsvz
+PrCJfwteBL68eTzdNDXRL5MvTnMpv0i3wp3wT7aaChvnVw9ZfAv4l3E3eD9
4DL+NjwFV3yTDe62krtoGmdVbxG/V9b5Vb4t3nz87lkn3/7uju8a98eTAVfw
d+BpuINvmzWbxbnVWsJv8d71bo9zqt8T9wab1TLhavxe0d+NNysuF1Psp3mc
W70VlHWW3+X58fdqfqb6BFpv/nlxl7CFLwuK8PfgGajAd9naHfk68hfIW8S5
+VrDH3hBfG+eTc42H7/kPtbx9bZOW305cbe8/aEYfx+ehYo8V/Rd5c/gLXJ/
LeMe+NrAn/gOGKLWx5x2/J2tcS8tXT467pZvAFzDP4DEHvPirapfMO85WitY
ztMW/sJ3wn3Qx9yx/Hv5M80dQ9vOMxBy9V+XfwjPQ6f4nxl3opYOk/T+HW9S
zFErFAvl98Nl51lvZrGZfSHVPsbGPuL/ZrwDsUO817ifuAvz2sX/H/o/8l1w
3Yyh6n1p5/QX4AvivfH9D4DIC5U=
               "]], 
              LineBox[CompressedData["
1:eJwV09lTz1EcxvGTMgyKQqG6MC7sY2ghlS3LRakZM5YooZCtMLZ/AcWFu5ix
TtLoBtnb7Lu4YLh0Z7uxX3qdi/c85/M8n8/5nvP7fn/jNzWuaEgIIfzCmaEh
lCKga0gIR3HFuhppeK0elxZCUmoIK1NCmKU+zM/FZ+tWXLfeiHTsU1+mq1Gr
fxjtxQ48ld2mm7FttH3pQ+xGpewsLYt9SEAPtuNDegjd8ptxH3O19DnG4AEa
8QpNeq7S9XiGkahyhnt0F16iX89duhUvkIVH2BPvihz5EZqHJ/ii7o7nxUXr
G3QTMnAfDdjP76BrUO98ybQPO+M5ZHfoFtQ5S2b8bZNDWMs/Z70cKX7bAfS9
e/bwb1mn8uroWDTzrtEajMIbdY3nZHovA/Wtsm+5PXPj+5PnI1v2VV0pa6MV
dLGeA9brcF5PORKxjl9gn3NmemXpNEFdyj+mLqCnzdfz8tRNZmbjm/VgXov+
xRkhXFIv0XuQ/lWXmKmUt8tz+D/cr0o2wzqffyqezT0u6s3nz8ZEWQt/i3wC
/5O8w/wcWQr9q+7k/xwRQqG+SfHssl/qE/K51pN5hfQ376P+In1F6mLMw3wM
15trn3/yP/qK9Uwxt0A2lc6Mz5QnOvNJ2UL+NP4iOp02u/+c+K3Jlun9zm/H
IVTjgqwi/gf0tupJiu/fs7L09smPYym/k78Bo/GW987zuuL3Zq4+fqe0TV+Z
uUGy7Pgt2edxzPh74/+J9tMS8/8Bybl7Xg==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$92531#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwV1WdwF1UUBfAFEkJNFTBUUVqw0VRsY++iDipYUbHQAhGVZgOkCFZsoKiI
ZVRMSEgjIRCSABLsvcyo9BKwfLKj4u9+ODn3nnPe3f++t7vpObpg+KRmSZI0
+LMiPUkOZSTJSpiSnSTvZCVJXqckuV3fG37lt9B/h5vjlR1k1IVQBCv0b4eu
HmftLn2pvlhfAqugFMbzetF384tdp4w2gVaOh+krcJLJc81MuQ1yd6jX4D44
jfabzPdQTMuVbaRvUs/EBWYsN+8MdTqkyJfyKuXz6c3kS+iF6jG4hveiuq/6
Ibxf/7vsD9BZdgt9FpwJT/B/4pebmaFfHXshs0qdRRuLX5Lph6/zO+ao/5AZ
ILOVthhGwFZaF9p76tlwFtwi375jklSbk6kvc52q2HO5Uv04WBt7xs9TV6rn
mn8A/yk3UG4bfUnct0wD/U3+SP0Ys7fJdJV5P+4TXuWdjZ/EWfgk3h78MtwI
1fIptDL1VOvH4/7Qyuy/eIN42/XPwzWwndaN9oF6DtxpzWtmn6MerU53b9nq
oTJ7cY45y/CoOFtrU+nl6gnxG6w7Gv9NH0zfoX4Brg3m7aB3p3+onwvnwiJ6
hevkuk6O/mT+PvwK3BT7xzvNNZfK1Vjfkl9Bz4dltGPw9TIHeUN4O/VL4xxh
LH0nvQf9I/08WG9/z8OHwSn0JtxIW47vkn/LzJvjzKxL41eqJ8KxcAO/rd/5
D28XHMH/mD4fzoenrO2Ay81bx2/FX62fBMfF+Vg/T+bfeLfiPXRf0/S79T1l
P5F5GF6nXYCfxh1xqtx98azjvfF+mlNrTWtrqvjT9AX4ePiPvgeO5H2qf1d+
AW5r7YX4GXM6xT7ItJGpjjOP8zNjAD4U77w1hfJX0qbL76UdJfsZfyHU8S/C
h8P9/Dp+W/4a/UbeZDww3jN1kTnzZRL9Prlecp+rH4GLIRce4O+TLXO9epl2
MjVxHjAo9iTeTXOaqZv4vflfqB+FS6AzjLS2jbN5ULZBpr3MWnqR/m48GKpc
Y5TcAlpz/VXq/bJ9ZL/UPwbtXOcN/qXqW/nPqruoN8ily61T3wPrzMrnD4nn
FC+Ua6E+INdX7it1tlmP42HQFWbKNMV90jfKZcjV0qfACZACV5vV2n3MkP1R
pp/M1/ENg3prL8O3yTzH76beJJMpsz7ed2hjdq3cibHHMUOdqr43voGyebLf
xPcDLofW8b/CvMX87vG8yGTJ1MVzFd+X2GdeSzxC7lT5n2X6y3xL22z+IjyZ
dwVeItsjvi36WerNstmy9bTp8S7RT4/vsHscqk+Dg/pf5IbzplrTqJ6IS/Rb
1DnWN8jNiO9DnFP83+G1ivec9z/jevfk
               "]], 
              LineBox[CompressedData["
1:eJwV0slvjmEYxeGnGzGUlnSwVNPGtGKBtubW1ElLGxaUWFh8RStBVeIPsGiR
SEjEUDooXSDWpqh5rqIrLAzVyazE9SxOfuec+36fd/i+rMqqkkRSCKGTpqWG
0JUSQj0V0wSap/uAJyklM4SmsSFs4jvGhJBmdo3fSyf0czFX1xO7cSE04gia
rXuLx2g5/wPX02K+H5upgB/CXudO51/xJdiA+fg9ZlrI92IpnsPV+AfXYRbO
x4+4Bk/hSvyFa7ESl+IglmErFuJfLMc77p2O1+P7Yy3m4bf4HWgB35Eewhf+
LK2Sf2Otdx2Jc+R3eJxW8D8xzTfbgEvkAWyJ7+tb9bnXDN1r+VB8Xlok92ET
1ThzImbrPuFt992jO81X42a8qmtz/jb5rvMSzs2wf8NsX/wWtNEsOSOEg2aj
5H57M+284dt0h7ERe5xVym+1f1SexA9z9iX9Afme6zJdd1NfRwl7Oeapzs6W
k2lIHrB3nx5QgZ3h5lWufygH8xbnFeq36x7pHtMOforZe7Mn8lNq5Zt1RXaf
yc/pBSXpzpsV63e6rlNXjVP17bqXco3chbtwvGe+5dl2m+Xa2c/n0GgatDPL
vJu/YPeynSNxZq8MJ1NFfE87n/kztIWWye32v/IX8YqdvPhccpFZnfwv/gZY
Ef/L7vMfE+1/pA==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$92531#5"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.772079, 0.431554, 0.102387], 
               AbsoluteThickness[1.6], 
               Dashing[{0, Small, Small, Small}]], 
              LineBox[CompressedData["
1:eJwV1HV41lUYxvEfIFjkBgwYISDdDDZGScOIobOQjVQcjLEBkxht0WkBip2E
HaSMGAhIo9gd16XSZaOf88f3up/nvp9z3t/7vud3ag7PTcspEkVRsaJRtD4m
ikrGRtEvdAJtjrS4KGpUMYoK6AZ+Gu82dSlah7+c/sqvpf5QPREtsJG3mt6M
0ki15jfefvUktMQm/Rp6C8qgrj22mDvBr1M+ikbrD/AHhb35k9UZtJc+Qd2Y
bjZbhRY3n0nX8m9Fsros7cYfrz6hXoGT5uvysnkH9flhf3u2oltkmbISWBe+
J9qa2yUvpz4lny2rh0P6KRgsax2+J21i9n0zI+VX4lX+7YjB8/ruOKleidPm
5ujr47B+KhKxlT+KdxVe02fadwBtZ+/d6lj1C7IeOKV+HGesmatvgCP6HHOD
zU9TJ6FAniW7Gq/r70B59Dd3VjaP3xBHedMxhJ9ifRt1U7pNv83caDPXYIL+
jfA7ywbSCniR3xN5vNP6J3DOmvm8RhjDP8abgaHWJ9NmvO3q7eayzVyLkbw3
Zelor65IbzRTT33e3AIzjTGZ95FsZviPwhnS75CPkZXEW+H/syYj/AeyOHpB
vlDWBDmyj3mzMEzeLpx33k4zOfJSmMh/mz+SDqKV8BK/F86o8/ir6EVrFvGa
4rj+3vDsKOTn8krjnXBWUBmX+It5zfCJ/j50wC7+WF4ZvBue2/Ps8xlD1FXw
Mj8FZ9VPYoQszczv1i3hN8en/Fz+/bS3rCPdLR8nK4v39KPkQ8NnyuPpK/ze
OKd+Cn+YX6pvgc/CeTD3AL0hvNvqD+TjZeWwnjeAN4xWxZ+yZfyW+Fz/IPrI
O4V3nu7w2XvM5MljsCGcR/5wWg2reX1wXv10eK9kf5l/iJeAL3iz0Rl7+ffw
YrFRf2d4Fvt3tKa6+m/5w7JW+DKcO/4cOtxMF7ov3HOy8tikvws1sEbfFxfU
z+Afc4/oW+OrcF7ss98ec8Nn0r76ruqEcE+ZnWiuAjbzsuQjwm8nu46u5ffD
FP5F/bP415pHeYnINfc1b6x8Xngm2o/XTb3f3CQzFbFFP5B/N62Jm8zV1182
85g8Cd/w56M7WoWzbeaAfLIsDqPCfRXuGNTCOl4qLqmfw39ml+vb4Fv9AvTA
QX4+rxKy7LE1vCPhf7R/J31tdYQV8mR8p16InmgtP2T9FH5lFITzGL6LtZ1l
16uLYKWsLb5Xj5MtoqnyXvSw9VNlVbBNP1qeLstSdwnnU19HXTTcj2baIZ/3
g34xUpBo7oh9psnisT3sg7poEH4X88XCPSZrjx/DueEvof3pHnlv9VF7TJdX
xQ59Nj+bdjVTj16BVbIO+Em9NNxnsr3m+qiPWT9DVg079WPQTV6fFg/vOb8j
flYvQ18kyQvD/WftTFl1TNIXyjJkOeE74DKvRFhDa4f7znw8PU5nWVMDu8J9
gXQz3WUNw//L/x915Bcl
               "]], 
              LineBox[CompressedData["
1:eJwV0slXjXEcx/FfOIe0k6ON6KZVA9t2Gc5BnKg0mIemXYSsDB3TP2BoaR7a
CBESlwwptE6GZMzwBxiT12/xPu/P5/t873Of53dvomZb+daUEEISJ6aHUITR
9BCOoASX9TL8kutmhHCeB6eFsN8sC716Y0YITXxNr8QefUxvsJ/Hl8xW4od8
lzfhrHyT1yAFD1CHyeYneX68N77od3gjjsqdXI0+jOs9XItnWKFf4XI8wW/9
Hm/BU1zQu3gd+jERD1GP53jhvQ5wAo/jPex38wZsl69zFf7J97kGe71rvt4u
l2K3/lNPyptxTr7FazEBU/RTvABf5R32j/ENfTVCPCv9Kq9CszP8ozfbq5cv
xnOVK+Qhz3vQTnY8j3gvLDYv4FScNl+IJrNvei0f5zIu5UJ+6R6H7MyJZ2K2
E0vM53Iuj/uuJKbG/wPnmL3ymddYqs/U38jDKNbfcqbZCL/DMrP3/AEfsVyf
5foneTZ365/lLHmUE3zYs+TE3yy+N+YhDWfMFsXfws6Az303a43vg0q9w7UK
/NXbcFtej132J/EjtNhr4H08EP9fvvM/ld91cQ==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$92531#6"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Dashing[{0, Small, Small, Small}]], 
              
              LineBox[{6112, 6129, 6126, 6131, 6122, 6128, 6101, 6107, 6094, 
               6102, 6095, 6096, 6097, 6098, 6103, 6099, 6110, 6106, 6125, 
               6118, 6130, 6127}]}, 
             Annotation[#, "Charting`Private`Tag$92531#7"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{591, 592, 702, 1408, 590}], 
             LineBox[{1361, 1362, 1529, 1360}], 
             LineBox[{2176, 5437, 2177, 2402, 2175}], 
             LineBox[{3030, 3031, 3029}], 
             LineBox[{4188, 4189, 4187}], 
             
             LineBox[{5328, 5329, 
              5327}]}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}}}], {}, {}}, {
        Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
         FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> 
         Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
            Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
         AxesOrigin -> {0, -55.95518941241704}, FrameTicks -> {{Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, 
         ImagePadding -> {{100, 10}, {50, 1}}, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True, "ClippingRange" -> {{{2.3495766255041283`*^-7, 
            11.512925230012566`}, {-55.95518941241704, -46.89476598526915}}, \
{{2.3495766255041283`*^-7, 
            11.512925230012566`}, {-55.95518941241704, -46.89476598526915}}}},
          DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, -55.95518941241704}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"strain sensitivity (NSR)\\n/ \\!\\(\\*SuperscriptBox[\\(Hz\\), \
\\(\\(-1\\)/2\\)]\\) (log scale)\"", TraditionalForm], ""}, {
            FormBox[
            "\"frequency, f=\\!\\(\\*FractionBox[\\(\[CapitalOmega]\\), \\(2  \
\[Pi]\\)]\\) / Hz (log scale)\"", TraditionalForm], ""}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{100, 10}, {50, 1}}, 
         ImageSize -> 350, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
           True}, PlotRange -> NCache[{{0, 
             Log[100000]}, All}, {{0, 11.512925464970229`}, All}], 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=0.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "0.  ", "0.1 ", "0.1 ", 
              "0.1 ", "0.1 "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=0.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 ; no BAE\"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``; no BAE", "0.  ", "0.1 ", 
              "0.1 ", "0.1 ", "0.1 "], Editable -> False], FontFamily -> 
            "Monospace", StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=0.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 ; no RP; no BAE\"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``; no RP; no BAE", "0.  ", "0.1 ",
               "0.1 ", "0.1 ", "0.1 "], Editable -> False], FontFamily -> 
            "Monospace", StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=1.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 \"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``", "1.  ", "0.1 ", "0.1 ", 
              "0.1 ", "0.1 "], Editable -> False], FontFamily -> "Monospace", 
            StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=1.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 ; no BAE\"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``; no BAE", "1.  ", "0.1 ", 
              "0.1 ", "0.1 ", "0.1 "], Editable -> False], FontFamily -> 
            "Monospace", StripOnInput -> False], 
           StyleBox[
            InterpretationBox[
            "\"\[Chi]/\[Omega]s=1.  ; \\!\\(\\*SubscriptBox[\\(T\\), \\(l, \
a\\)]\\)=0.1 , \\!\\(\\*SubscriptBox[\\(T\\), \\(l, b\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(T\\), \\(l, c\\)]\\)=0.1 , \
\\!\\(\\*SubscriptBox[\\(R\\), \\(PD\\)]\\)=0.1 ; no RP; no BAE\"", 
             StringForm[
             "\[Chi]/\[Omega]s=``; \!\(\*SubscriptBox[\(T\), \(l, a\)]\)=``, \
\!\(\*SubscriptBox[\(T\), \(l, b\)]\)=``, \!\(\*SubscriptBox[\(T\), \(l, c\)]\
\)=``, \!\(\*SubscriptBox[\(R\), \(PD\)]\)=``; no RP; no BAE", "1.  ", "0.1 ",
               "0.1 ", "0.1 ", "0.1 "], Editable -> False], FontFamily -> 
            "Monospace", StripOnInput -> False], 
           "\"5\[Cross]\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-25\\)]\\)\\!\\(\\*SuperscriptBox[\\(Hz\\), \\(\\(-1\\)/2\\)]\\) target \
for 1\[Dash]4 kHz\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 15}, {25, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {25, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], #7}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[10], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                   ",", #7}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "10", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"25", ",", "15"}], "}"}], "}"}]}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.8369532940558033`*^9, 3.836953906196094*^9, 
  3.836954260890205*^9},
 CellLabel->
  "Out[234]=",ExpressionUUID->"36ffbde9-9470-4d02-8a1e-e6f3d5e2f212"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"to", "-", 
   RowBox[{"do", ":", " ", 
    RowBox[{
    "copy", " ", "other", " ", "plotting", " ", "functions", " ", "from", " ",
      "sWLC"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8368751342346277`*^9, 3.8368751392758913`*^9}, {
   3.836875313220752*^9, 3.8368753282435913`*^9}, {3.836875977303494*^9, 
   3.836875978936841*^9}, 3.836876583004655*^9, {3.8368766339398327`*^9, 
   3.83687672864815*^9}, {3.8368767684068727`*^9, 3.836876770252152*^9}, {
   3.836876803846798*^9, 3.836876832232662*^9}, 3.836950132255934*^9, {
   3.83695023024631*^9, 3.836950232246825*^9}, {3.8369511012275248`*^9, 
   3.836951103033512*^9}},ExpressionUUID->"6f89864b-cc61-4a72-b3fa-\
48050eeeb5a7"]
},
WindowSize->{1728, 862},
WindowMargins->{{82, Automatic}, {65, Automatic}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 254, 6, 54, "Text",ExpressionUUID->"45536b2d-a4a5-4af5-902b-e0c4b447a39d"],
Cell[815, 28, 192, 3, 54, "Text",ExpressionUUID->"ff483bee-ee34-4fed-95df-f190376ecfd3"],
Cell[1010, 33, 9407, 267, 1038, "Input",ExpressionUUID->"474bcc37-a9a4-474e-993f-fb10ea120e2b"],
Cell[CellGroupData[{
Cell[10442, 304, 3514, 96, 479, "Input",ExpressionUUID->"455f3a1c-c9a2-4a1c-b925-50807191267d"],
Cell[13959, 402, 497, 11, 61, "Message",ExpressionUUID->"20b5db7f-5ac0-4dd5-b779-201202ada7d5"],
Cell[14459, 415, 497, 11, 61, "Message",ExpressionUUID->"cb65ac83-ece7-491f-88d9-37fb1150b67e"],
Cell[14959, 428, 496, 11, 61, "Message",ExpressionUUID->"29ef536e-bb4e-4754-93a3-52a1837defa9"],
Cell[15458, 441, 497, 11, 61, "Message",ExpressionUUID->"1ecdaca8-667a-48ab-937e-ccf5cec0ee98"],
Cell[15958, 454, 497, 11, 61, "Message",ExpressionUUID->"917ea6c3-d94a-4e34-b3a4-838d2bab59b4"],
Cell[16458, 467, 445, 10, 33, "Message",ExpressionUUID->"a6b187d7-62f4-47ec-b5f6-144e818b9f39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16940, 482, 2700, 65, 178, "Input",ExpressionUUID->"30f0d068-9672-4682-bcd1-c84a629aa724"],
Cell[19643, 549, 1852, 46, 73, "Print",ExpressionUUID->"3a7ac948-ce8d-4323-b780-45f0cf9de31a"]
}, Open  ]],
Cell[21510, 598, 3663, 79, 286, "Input",ExpressionUUID->"33171a0d-e02c-4f30-85f2-e0d7fddec8d8"],
Cell[CellGroupData[{
Cell[25198, 681, 6040, 150, 645, "Input",ExpressionUUID->"6fe9231a-e423-450e-8ffd-ff95966f8692"],
Cell[31241, 833, 2652, 72, 127, "Output",ExpressionUUID->"e43fef9b-f77c-4742-baa5-32a91e07ac70"],
Cell[33896, 907, 2652, 72, 127, "Output",ExpressionUUID->"8818dcfd-8985-4c83-a744-423fefe05db2"],
Cell[36551, 981, 401, 9, 36, "Print",ExpressionUUID->"d8eff783-51e8-429a-8108-a800d7d22c64"]
}, Open  ]],
Cell[36967, 993, 374, 8, 47, "Input",ExpressionUUID->"24176f45-661a-4743-a935-473ce7318ae3"],
Cell[CellGroupData[{
Cell[37366, 1005, 275, 6, 47, "Input",ExpressionUUID->"d813bf7a-149c-4981-9112-d27ee2e77792"],
Cell[37644, 1013, 37066, 944, 1120, "Output",ExpressionUUID->"8cb82bb7-151e-453c-a2cf-53354029a68a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74747, 1962, 404, 8, 47, "Input",ExpressionUUID->"d69a28cb-90c3-41f7-bbfb-971bee7f6f50"],
Cell[75154, 1972, 47473, 1160, 1130, "Output",ExpressionUUID->"62dcaebf-7e6a-4c01-8c5c-7dcaa441ef11"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122664, 3137, 372, 8, 47, "Input",ExpressionUUID->"5482d970-0109-4d15-a2e8-9b7c4ce43fb5"],
Cell[123039, 3147, 21640, 551, 551, "Output",ExpressionUUID->"e8716ffa-36c7-4f2e-822e-2d23add8bf59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144716, 3703, 4647, 118, 200, "Input",ExpressionUUID->"d30fd5b1-af48-46e9-b26a-c7264abd19fc"],
Cell[149366, 3823, 176, 2, 53, "Output",ExpressionUUID->"37621bdc-ca2c-42c4-93c3-085046443244"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149579, 3830, 4356, 118, 266, "Input",ExpressionUUID->"2b496b10-4942-48f4-adef-dfd7f50fbbde"],
Cell[153938, 3950, 3619, 91, 133, "Output",ExpressionUUID->"3a8adca6-63a7-44fb-bae0-43816e7c55cf"],
Cell[157560, 4043, 2855, 76, 95, "Output",ExpressionUUID->"a1240074-2d3c-426e-ba8f-83b87d9eff52"],
Cell[160418, 4121, 271, 4, 53, "Output",ExpressionUUID->"457c2ea3-c29d-4f77-a832-4dc192150e7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160726, 4130, 10768, 260, 410, "Input",ExpressionUUID->"3fae7304-ffc5-47e7-8907-3dd1f6832032"],
Cell[171497, 4392, 13133, 309, 361, "Output",ExpressionUUID->"5df994c5-653b-4d61-ad28-ba1d8a181a6c"],
Cell[184633, 4703, 5455, 143, 171, "Output",ExpressionUUID->"05c8211d-427d-45c2-a8a2-1c49e8c151bc"]
}, Open  ]],
Cell[190103, 4849, 12606, 335, 1595, "Input",ExpressionUUID->"eabb38b1-4c8c-427b-a6f1-9b7e0c3e871a"],
Cell[202712, 5186, 15918, 396, 1755, "Input",ExpressionUUID->"24ec3452-d741-4903-8b5e-76bca56bbc49"],
Cell[CellGroupData[{
Cell[218655, 5586, 1550, 37, 286, "Input",ExpressionUUID->"a9a989a0-b460-4b7c-96e2-01a888d8e486"],
Cell[220208, 5625, 447171, 7750, 861, "Output",ExpressionUUID->"36ffbde9-9470-4d02-8a1e-e6f3d5e2f212"]
}, Open  ]],
Cell[667394, 13378, 732, 14, 47, "Input",ExpressionUUID->"6f89864b-cc61-4a72-b3fa-48050eeeb5a7"]
}
]
*)

